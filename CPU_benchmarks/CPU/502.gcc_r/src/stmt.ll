; ModuleID = 'stmt.bc'
source_filename = "stmt.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.rtl_hooks = type { %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (i32, %struct.rtx_def*)* }
%struct.optab_d = type { i32, i8*, i8, void (%struct.optab_d*, i8*, i8, i32)*, [87 x %struct.optab_handlers] }
%struct.optab_handlers = type { i32 }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type opaque
%struct.diagnostic_info = type opaque
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.pointer_set_t = type opaque
%struct.gimple_statement_asm = type { %struct.gimple_statement_with_memory_ops_base, i8*, i8, i8, i8, i8, [1 x %union.tree_node*] }
%struct.gimple_statement_with_memory_ops_base = type { %struct.gimple_statement_with_ops_base, %union.tree_node*, %union.tree_node* }
%struct.gimple_statement_with_ops_base = type { %struct.gimple_statement_base, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.case_node = type { %struct.case_node*, %struct.case_node*, %struct.case_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.case_bit_test = type { i64, i64, %struct.rtx_def*, i32 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [7 x i8] c"stmt.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@.str.2 = private unnamed_addr constant [38 x i8] c"output operand constraint lacks %<=%>\00", align 1
@.str.3 = private unnamed_addr constant [61 x i8] c"output constraint %qc for operand %d is not at the beginning\00", align 1
@.str.4 = private unnamed_addr constant [66 x i8] c"operand constraint contains incorrectly positioned %<+%> or %<=%>\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"%<%%%> constraint used with last operand\00", align 1
@.str.6 = private unnamed_addr constant [48 x i8] c"matching constraint not valid in output operand\00", align 1
@_sch_istable = external dso_local local_unnamed_addr constant [256 x i16], align 16
@.str.7 = private unnamed_addr constant [38 x i8] c"input operand constraint contains %qc\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"matching constraint references invalid operand number\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"invalid punctuation %qc in constraint\00", align 1
@.str.10 = private unnamed_addr constant [46 x i8] c"matching constraint does not allow a register\00", align 1
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.11 = private unnamed_addr constant [27 x i8] c"value computed is not used\00", align 1
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@word_mode = external dso_local local_unnamed_addr global i32, align 4
@const_tiny_rtx = external dso_local local_unnamed_addr global [3 x [87 x %struct.rtx_def*]], align 16
@class_narrowest_mode = external dso_local local_unnamed_addr constant [18 x i8], align 16
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@mode_wider = external dso_local local_unnamed_addr constant [87 x i8], align 16
@rtl_hooks = external dso_local local_unnamed_addr global %struct.rtl_hooks, align 8
@ix86_isa_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.12 = private unnamed_addr constant [22 x i8] c"struct case_node pool\00", align 1
@optab_table = external dso_local global [159 x %struct.optab_d], align 16
@flag_jump_tables = external dso_local local_unnamed_addr global i32, align 4
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@use_cost_table = internal unnamed_addr global i32 0, align 4, !dbg !0
@flag_pic = external dso_local local_unnamed_addr global i32, align 4
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@.str.13 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@generating_concat_p = external dso_local local_unnamed_addr global i32, align 4
@.str.14 = private unnamed_addr constant [37 x i8] c"unknown register name %qs in %<asm%>\00", align 1
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@pic_offset_table_rtx = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@.str.15 = private unnamed_addr constant [38 x i8] c"PIC register %qs clobbered in %<asm%>\00", align 1
@.str.16 = private unnamed_addr constant [33 x i8] c"more than %d operands in %<asm%>\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"output number %d not directly addressable\00", align 1
@empty_string = external dso_local constant [0 x i8], align 1
@.str.18 = private unnamed_addr constant [51 x i8] c"asm operand %d probably doesn%'t match constraints\00", align 1
@.str.19 = private unnamed_addr constant [67 x i8] c"use of memory input without lvalue in asm operand %d is deprecated\00", align 1
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@.str.20 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.21 = private unnamed_addr constant [41 x i8] c"asm clobber conflict with output operand\00", align 1
@.str.22 = private unnamed_addr constant [40 x i8] c"asm clobber conflict with input operand\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"too many alternatives in %<asm%>\00", align 1
@.str.24 = private unnamed_addr constant [65 x i8] c"operand constraints for %<asm%> differ in number of alternatives\00", align 1
@.str.25 = private unnamed_addr constant [63 x i8] c"asm-specifier for variable %qE conflicts with asm clobber list\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"duplicate asm operand name %qs\00", align 1
@.str.27 = private unnamed_addr constant [38 x i8] c"missing close brace for named operand\00", align 1
@.str.28 = private unnamed_addr constant [28 x i8] c"undefined named operand %qs\00", align 1
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@lshift_cheap_p.init = internal unnamed_addr global i1 false, align 1, !dbg !2062
@lshift_cheap_p.cheap = internal unnamed_addr global i8 1, align 1, !dbg !2052
@cost_table_initialized = internal unnamed_addr global i1 false, align 4, !dbg !2063
@cost_table_ = internal unnamed_addr global [129 x i16] zeroinitializer, align 16, !dbg !2056
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2068 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2081, metadata !DIExpression()), !dbg !2083
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2082, metadata !DIExpression()), !dbg !2083
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2084
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2085
  ret i32 %call, !dbg !2086
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2087 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2091
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2092
  ret i32 %call, !dbg !2093
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2094 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2148, metadata !DIExpression()), !dbg !2149
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2150
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2150
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2150
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2150
  %cmp = icmp uge i8* %0, %1, !dbg !2150
  %conv1 = zext i1 %cmp to i64, !dbg !2150
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2150
  %tobool = icmp eq i64 %expval, 0, !dbg !2150
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2150

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2150
  br label %cond.end, !dbg !2150

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2150
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2150
  %2 = load i8, i8* %0, align 1, !dbg !2150
  %conv3 = zext i8 %2 to i32, !dbg !2150
  br label %cond.end, !dbg !2150

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2150
  ret i32 %cond, !dbg !2151
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2152 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2154, metadata !DIExpression()), !dbg !2155
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2156
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2156
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2156
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2156
  %cmp = icmp uge i8* %0, %1, !dbg !2156
  %conv1 = zext i1 %cmp to i64, !dbg !2156
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2156
  %tobool = icmp eq i64 %expval, 0, !dbg !2156
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2156

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2156
  br label %cond.end, !dbg !2156

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2156
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2156
  %2 = load i8, i8* %0, align 1, !dbg !2156
  %conv3 = zext i8 %2 to i32, !dbg !2156
  br label %cond.end, !dbg !2156

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2156
  ret i32 %cond, !dbg !2157
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2158 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2159
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2159
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2159
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2159
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2159
  %cmp = icmp uge i8* %1, %2, !dbg !2159
  %conv1 = zext i1 %cmp to i64, !dbg !2159
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2159
  %tobool = icmp eq i64 %expval, 0, !dbg !2159
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2159

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2159
  br label %cond.end, !dbg !2159

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2159
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2159
  %3 = load i8, i8* %1, align 1, !dbg !2159
  %conv3 = zext i8 %3 to i32, !dbg !2159
  br label %cond.end, !dbg !2159

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2159
  ret i32 %cond, !dbg !2160
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2161 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2165, metadata !DIExpression()), !dbg !2166
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2167
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2168
  ret i32 %call, !dbg !2169
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2170 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2174, metadata !DIExpression()), !dbg !2176
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2175, metadata !DIExpression()), !dbg !2176
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2177
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2177
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2177
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2177
  %cmp = icmp uge i8* %0, %1, !dbg !2177
  %conv1 = zext i1 %cmp to i64, !dbg !2177
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2177
  %tobool = icmp eq i64 %expval, 0, !dbg !2177
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2177

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2177
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2177
  br label %cond.end, !dbg !2177

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2177
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2177
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2177
  store i8 %conv2, i8* %0, align 1, !dbg !2177
  %conv6 = and i32 %__c, 255, !dbg !2177
  br label %cond.end, !dbg !2177

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2177
  ret i32 %cond, !dbg !2178
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2179 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2181, metadata !DIExpression()), !dbg !2183
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2182, metadata !DIExpression()), !dbg !2183
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2184
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2184
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2184
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2184
  %cmp = icmp uge i8* %0, %1, !dbg !2184
  %conv1 = zext i1 %cmp to i64, !dbg !2184
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2184
  %tobool = icmp eq i64 %expval, 0, !dbg !2184
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2184

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2184
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2184
  br label %cond.end, !dbg !2184

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2184
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2184
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2184
  store i8 %conv2, i8* %0, align 1, !dbg !2184
  %conv6 = and i32 %__c, 255, !dbg !2184
  br label %cond.end, !dbg !2184

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2184
  ret i32 %cond, !dbg !2185
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2186 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2188, metadata !DIExpression()), !dbg !2189
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2190
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2190
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2190
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2190
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2190
  %cmp = icmp uge i8* %1, %2, !dbg !2190
  %conv1 = zext i1 %cmp to i64, !dbg !2190
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2190
  %tobool = icmp eq i64 %expval, 0, !dbg !2190
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2190

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2190
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2190
  br label %cond.end, !dbg !2190

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2190
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2190
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2190
  store i8 %conv4, i8* %1, align 1, !dbg !2190
  %conv6 = and i32 %__c, 255, !dbg !2190
  br label %cond.end, !dbg !2190

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2190
  ret i32 %cond, !dbg !2191
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2192 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2198, metadata !DIExpression()), !dbg !2201
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2199, metadata !DIExpression()), !dbg !2201
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2200, metadata !DIExpression()), !dbg !2201
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2202
  ret i64 %call, !dbg !2203
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2204 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2206, metadata !DIExpression()), !dbg !2207
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2208
  %0 = load i32, i32* %_flags, align 8, !dbg !2208
  %and = lshr i32 %0, 4, !dbg !2208
  %and.lobit = and i32 %and, 1, !dbg !2208
  ret i32 %and.lobit, !dbg !2209
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2210 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2212, metadata !DIExpression()), !dbg !2213
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2214
  %0 = load i32, i32* %_flags, align 8, !dbg !2214
  %and = lshr i32 %0, 5, !dbg !2214
  %and.lobit = and i32 %and, 1, !dbg !2214
  ret i32 %and.lobit, !dbg !2215
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2216 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2219, metadata !DIExpression()), !dbg !2220
  %__c.off = add i32 %__c, 128, !dbg !2221
  %0 = icmp ult i32 %__c.off, 384, !dbg !2221
  br i1 %0, label %cond.true, label %cond.end, !dbg !2221

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2222
  %1 = load i32*, i32** %call, align 8, !dbg !2223
  %idxprom = sext i32 %__c to i64, !dbg !2224
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2224
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2224
  br label %cond.end, !dbg !2225

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2225
  ret i32 %cond, !dbg !2226
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2227 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2229, metadata !DIExpression()), !dbg !2230
  %__c.off = add i32 %__c, 128, !dbg !2231
  %0 = icmp ult i32 %__c.off, 384, !dbg !2231
  br i1 %0, label %cond.true, label %cond.end, !dbg !2231

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2232
  %1 = load i32*, i32** %call, align 8, !dbg !2233
  %idxprom = sext i32 %__c to i64, !dbg !2234
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2234
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2234
  br label %cond.end, !dbg !2235

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2235
  ret i32 %cond, !dbg !2236
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2237 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2242, metadata !DIExpression()), !dbg !2243
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2244
  %conv = trunc i64 %call to i32, !dbg !2245
  ret i32 %conv, !dbg !2246
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2247 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2251, metadata !DIExpression()), !dbg !2252
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2253
  ret i64 %call, !dbg !2254
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2255 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2260, metadata !DIExpression()), !dbg !2261
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2262
  ret i64 %call, !dbg !2263
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2264 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2270, metadata !DIExpression()), !dbg !2280
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2271, metadata !DIExpression()), !dbg !2280
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2272, metadata !DIExpression()), !dbg !2280
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2273, metadata !DIExpression()), !dbg !2280
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2274, metadata !DIExpression()), !dbg !2280
  call void @llvm.dbg.value(metadata i64 0, metadata !2275, metadata !DIExpression()), !dbg !2280
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2276, metadata !DIExpression()), !dbg !2280
  br label %while.cond, !dbg !2281

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2282
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2280
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2276, metadata !DIExpression()), !dbg !2280
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2275, metadata !DIExpression()), !dbg !2280
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2283
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2281

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2284
  %div = lshr i64 %add, 1, !dbg !2286
  call void @llvm.dbg.value(metadata i64 %div, metadata !2277, metadata !DIExpression()), !dbg !2280
  %mul = mul i64 %div, %__size, !dbg !2287
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2288
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2278, metadata !DIExpression()), !dbg !2280
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2289
  call void @llvm.dbg.value(metadata i32 %call, metadata !2279, metadata !DIExpression()), !dbg !2280
  %cmp1 = icmp slt i32 %call, 0, !dbg !2290
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2292

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2293
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2295

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2296
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2275, metadata !DIExpression()), !dbg !2280
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2280
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2280
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2276, metadata !DIExpression()), !dbg !2280
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2275, metadata !DIExpression()), !dbg !2280
  br label %while.cond, !dbg !2281, !llvm.loop !2297

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2280
  ret i8* %retval.0, !dbg !2299
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2300 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2306, metadata !DIExpression()), !dbg !2307
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2308
  ret double %call, !dbg !2309
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2310 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2319, metadata !DIExpression()), !dbg !2322
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2320, metadata !DIExpression()), !dbg !2322
  call void @llvm.dbg.value(metadata i32 %base, metadata !2321, metadata !DIExpression()), !dbg !2322
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2323
  ret i64 %call, !dbg !2324
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2325 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2331, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2332, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.value(metadata i32 %base, metadata !2333, metadata !DIExpression()), !dbg !2334
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2335
  ret i64 %call, !dbg !2336
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2337 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2348, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2349, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.value(metadata i32 %base, metadata !2350, metadata !DIExpression()), !dbg !2351
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2352
  ret i64 %call, !dbg !2353
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2354 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2358, metadata !DIExpression()), !dbg !2361
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2359, metadata !DIExpression()), !dbg !2361
  call void @llvm.dbg.value(metadata i32 %base, metadata !2360, metadata !DIExpression()), !dbg !2361
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2362
  ret i64 %call, !dbg !2363
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2364 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2404, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2405, metadata !DIExpression()), !dbg !2406
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2407
  ret i32 %call, !dbg !2408
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2409 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2411, metadata !DIExpression()), !dbg !2413
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2412, metadata !DIExpression()), !dbg !2413
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2414
  ret i32 %call, !dbg !2415
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2416 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2420, metadata !DIExpression()), !dbg !2422
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2421, metadata !DIExpression()), !dbg !2422
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2423
  ret i32 %call, !dbg !2424
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2425 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2429, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2430, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2431, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2432, metadata !DIExpression()), !dbg !2433
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2434
  ret i32 %call, !dbg !2435
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2436 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2440, metadata !DIExpression()), !dbg !2443
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2441, metadata !DIExpression()), !dbg !2443
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2442, metadata !DIExpression()), !dbg !2443
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2442, metadata !DIExpression(DW_OP_deref)), !dbg !2443
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2444
  ret i32 %call, !dbg !2445
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2446 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2450, metadata !DIExpression()), !dbg !2454
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2451, metadata !DIExpression()), !dbg !2454
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2452, metadata !DIExpression()), !dbg !2454
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2453, metadata !DIExpression()), !dbg !2454
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2453, metadata !DIExpression(DW_OP_deref)), !dbg !2454
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2455
  ret i32 %call, !dbg !2456
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2457 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2481, metadata !DIExpression()), !dbg !2483
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2482, metadata !DIExpression()), !dbg !2483
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2484
  ret i32 %call, !dbg !2485
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2486 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2488, metadata !DIExpression()), !dbg !2490
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2489, metadata !DIExpression()), !dbg !2490
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2491
  ret i32 %call, !dbg !2492
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2493 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2497, metadata !DIExpression()), !dbg !2499
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2498, metadata !DIExpression()), !dbg !2499
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2500
  ret i32 %call, !dbg !2501
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2502 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2506, metadata !DIExpression()), !dbg !2510
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2507, metadata !DIExpression()), !dbg !2510
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2508, metadata !DIExpression()), !dbg !2510
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2509, metadata !DIExpression()), !dbg !2510
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2511
  ret i32 %call, !dbg !2512
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @label_rtx(%union.tree_node* %label) local_unnamed_addr #5 !dbg !2513 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !2517, metadata !DIExpression()), !dbg !2521
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2522
  %bf.load = load i64, i64* %0, align 8, !dbg !2522
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2522
  %cmp = icmp eq i64 %bf.cast1, 30, !dbg !2522
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !2522

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 136, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2522
  %bf.load2.pre = load i64, i64* %0, align 8, !dbg !2523
  %.pre = and i64 %bf.load2.pre, 65535, !dbg !2523
  br label %cond.end, !dbg !2522

cond.end:                                         ; preds = %entry, %cond.true
  %bf.cast4.pre-phi = phi i64 [ %bf.cast1, %entry ], [ %.pre, %cond.true ], !dbg !2523
  %arrayidx5 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast4.pre-phi, i64 11, !dbg !2523
  %1 = load i8, i8* %arrayidx5, align 1, !dbg !2523
  %tobool = icmp eq i8 %1, 0, !dbg !2523
  br i1 %tobool, label %if.then, label %land.lhs.true, !dbg !2523

land.lhs.true:                                    ; preds = %cond.end
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2523
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !2523
  %cmp6 = icmp eq %struct.rtx_def* %2, null, !dbg !2523
  br i1 %cmp6, label %if.then, label %if.end21, !dbg !2524

if.then:                                          ; preds = %land.lhs.true, %cond.end
  %call = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !2525
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2518, metadata !DIExpression()), !dbg !2526
  tail call void @set_decl_rtl(%union.tree_node* %label, %struct.rtx_def* %call) #6, !dbg !2527
  %bf.load9 = load i64, i64* %0, align 8, !dbg !2528
  %bf.cast112 = and i64 %bf.load9, 65536, !dbg !2528
  %tobool12 = icmp eq i64 %bf.cast112, 0, !dbg !2528
  br i1 %tobool12, label %lor.lhs.false, label %if.then18, !dbg !2530

lor.lhs.false:                                    ; preds = %if.then
  %nonlocal_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2531
  %3 = bitcast i40* %nonlocal_flag to i64*, !dbg !2531
  %bf.load13 = load i64, i64* %3, align 8, !dbg !2531
  %bf.cast163 = and i64 %bf.load13, 256, !dbg !2531
  %tobool17 = icmp eq i64 %bf.cast163, 0, !dbg !2531
  br i1 %tobool17, label %if.end21, label %if.then18, !dbg !2532

if.then18:                                        ; preds = %lor.lhs.false, %if.then
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !2533
  %bf.load19 = load i32, i32* %4, align 8, !dbg !2534
  %bf.set = or i32 %bf.load19, 268435456, !dbg !2534
  store i32 %bf.set, i32* %4, align 8, !dbg !2534
  br label %if.end21, !dbg !2533

if.end21:                                         ; preds = %land.lhs.true, %lor.lhs.false, %if.then18
  %rtl23 = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2535
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtl23, align 8, !dbg !2535
  %tobool24 = icmp eq %struct.rtx_def* %5, null, !dbg !2535
  br i1 %tobool24, label %cond.false28, label %cond.true25, !dbg !2535

cond.true25:                                      ; preds = %if.end21
  br label %cond.end31, !dbg !2535

cond.false28:                                     ; preds = %if.end21
  tail call void @make_decl_rtl(%union.tree_node* %label) #6, !dbg !2535
  %cond32.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl23, align 8, !dbg !2535
  br label %cond.end31, !dbg !2535

cond.end31:                                       ; preds = %cond.false28, %cond.true25
  %cond32 = phi %struct.rtx_def* [ %cond32.pre, %cond.false28 ], [ %5, %cond.true25 ], !dbg !2535
  ret %struct.rtx_def* %cond32, !dbg !2536
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_label_rtx() local_unnamed_addr #2

declare dso_local void @set_decl_rtl(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @force_label_rtx(%union.tree_node* %label) local_unnamed_addr #5 !dbg !2537 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !2539, metadata !DIExpression()), !dbg !2542
  %call = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %label) #7, !dbg !2543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2540, metadata !DIExpression()), !dbg !2542
  %call1 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %label) #6, !dbg !2544
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !2541, metadata !DIExpression()), !dbg !2542
  %tobool = icmp eq %union.tree_node* %call1, null, !dbg !2545
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2545

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 157, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2545
  br label %cond.end, !dbg !2545

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 5), align 8, !dbg !2546
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %0) #6, !dbg !2546
  store %struct.rtx_def* %call2, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 5), align 8, !dbg !2547
  ret %struct.rtx_def* %call, !dbg !2548
}

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @emit_jump(%struct.rtx_def* %label) local_unnamed_addr #5 !dbg !2549 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !2553, metadata !DIExpression()), !dbg !2554
  tail call void @do_pending_stack_adjust() #6, !dbg !2555
  %call = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %label) #6, !dbg !2556
  %call1 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call) #6, !dbg !2557
  %call2 = tail call %struct.rtx_def* @emit_barrier() #6, !dbg !2558
  ret void, !dbg !2559
}

declare dso_local void @do_pending_stack_adjust() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_jump(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_barrier() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_computed_goto(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !2560 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !2564, metadata !DIExpression()), !dbg !2566
  %call = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %exp) #7, !dbg !2567
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2565, metadata !DIExpression()), !dbg !2566
  %call1 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* %call, i8 zeroext 0) #6, !dbg !2568
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !2565, metadata !DIExpression()), !dbg !2566
  tail call void @do_pending_stack_adjust() #6, !dbg !2569
  tail call void @emit_indirect_jump(%struct.rtx_def* %call1) #6, !dbg !2570
  ret void, !dbg !2571
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %exp) unnamed_addr #0 !dbg !2572 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !2574, metadata !DIExpression()), !dbg !2575
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 0, %struct.rtx_def** null) #6, !dbg !2576
  ret %struct.rtx_def* %call, !dbg !2577
}

declare dso_local %struct.rtx_def* @convert_memory_address_addr_space(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @emit_indirect_jump(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_label(%union.tree_node* %label) local_unnamed_addr #5 !dbg !2578 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !2580, metadata !DIExpression()), !dbg !2582
  %call = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %label) #7, !dbg !2583
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2581, metadata !DIExpression()), !dbg !2582
  tail call void @do_pending_stack_adjust() #6, !dbg !2584
  %call1 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call) #6, !dbg !2585
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2586
  %0 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !2586
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !2586
  br i1 %tobool, label %if.end, label %if.then, !dbg !2588

if.then:                                          ; preds = %entry
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2589
  %1 = bitcast i32* %str to i64*, !dbg !2589
  %2 = load i64, i64* %1, align 8, !dbg !2589
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2590
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !2590
  %tobool4 = icmp eq %struct.rtx_def* %3, null, !dbg !2590
  br i1 %tobool4, label %cond.false, label %cond.true, !dbg !2590

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !2590

cond.false:                                       ; preds = %if.then
  tail call void @make_decl_rtl(%union.tree_node* %label) #6, !dbg !2590
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !2590
  br label %cond.end, !dbg !2590

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %3, %cond.true ], !dbg !2590
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, !dbg !2590
  %4 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !2590
  %5 = bitcast %union.rtunion_def* %4 to i64*, !dbg !2591
  store i64 %2, i64* %5, align 8, !dbg !2591
  br label %if.end, !dbg !2590

if.end:                                           ; preds = %entry, %cond.end
  %nonlocal_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2592
  %6 = bitcast i40* %nonlocal_flag to i64*, !dbg !2592
  %bf.load = load i64, i64* %6, align 8, !dbg !2592
  %bf.cast1 = and i64 %bf.load, 256, !dbg !2592
  %tobool9 = icmp eq i64 %bf.cast1, 0, !dbg !2592
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !2594

if.then10:                                        ; preds = %if.end
  tail call fastcc void @expand_nl_goto_receiver() #7, !dbg !2595
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 10), align 8, !dbg !2597
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %7) #6, !dbg !2597
  store %struct.rtx_def* %call11, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 10), align 8, !dbg !2598
  br label %if.end12, !dbg !2599

if.end12:                                         ; preds = %if.end, %if.then10
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2600
  %bf.load13 = load i64, i64* %8, align 8, !dbg !2600
  %bf.cast162 = and i64 %bf.load13, 65536, !dbg !2600
  %tobool17 = icmp eq i64 %bf.cast162, 0, !dbg !2600
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !2602

if.then18:                                        ; preds = %if.end12
  %9 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 5), align 8, !dbg !2603
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %9) #6, !dbg !2603
  store %struct.rtx_def* %call19, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 5), align 8, !dbg !2604
  br label %if.end20, !dbg !2605

if.end20:                                         ; preds = %if.end12, %if.then18
  %bf.load23 = load i64, i64* %6, align 8, !dbg !2606
  %bf.cast263 = and i64 %bf.load23, 256, !dbg !2606
  %tobool27 = icmp eq i64 %bf.cast263, 0, !dbg !2606
  br i1 %tobool27, label %lor.lhs.false, label %if.then34, !dbg !2608

lor.lhs.false:                                    ; preds = %if.end20
  %bf.load29 = load i64, i64* %8, align 8, !dbg !2609
  %bf.cast324 = and i64 %bf.load29, 65536, !dbg !2609
  %tobool33 = icmp eq i64 %bf.cast324, 0, !dbg !2609
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !2610

if.then34:                                        ; preds = %lor.lhs.false, %if.end20
  tail call void @maybe_set_first_label_num(%struct.rtx_def* %call) #6, !dbg !2611
  br label %if.end35, !dbg !2611

if.end35:                                         ; preds = %lor.lhs.false, %if.then34
  ret void, !dbg !2612
}

declare dso_local %struct.rtx_def* @emit_label(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_nl_goto_receiver() unnamed_addr #5 !dbg !2027 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !2613
  %call = tail call %struct.rtx_def* @emit_use(%struct.rtx_def* %0) #6, !dbg !2614
  %1 = load %struct.rtx_def* (%union.tree_node*, i8)*, %struct.rtx_def* (%union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 21), align 8, !dbg !2615
  %2 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !2616
  %call1 = tail call %struct.rtx_def* %1(%union.tree_node* %2, i8 zeroext 1) #6, !dbg !2617
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !2031, metadata !DIExpression()), !dbg !2618
  %tobool = icmp eq %struct.rtx_def* %call1, null, !dbg !2619
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !2621

land.lhs.true:                                    ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 0, !dbg !2622
  %bf.load = load i32, i32* %3, align 8, !dbg !2622
  %bf.clear = and i32 %bf.load, 65535, !dbg !2622
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !2622
  br i1 %cmp, label %if.then, label %if.end, !dbg !2623

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* nonnull %call1) #6, !dbg !2624
  br label %if.end, !dbg !2624

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !dbg !2625
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !2626
  %call3 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %4, %struct.rtx_def* %5) #6, !dbg !2627
  %6 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !2628
  %tobool4 = icmp eq i8 %6, 0, !dbg !2628
  br i1 %tobool4, label %if.end19, label %for.cond.preheader, !dbg !2629

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !2630

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !2632
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !2032, metadata !DIExpression()), !dbg !2633
  %exitcond = icmp eq i64 %i.0, 4, !dbg !2634
  br i1 %exitcond, label %for.end, label %for.body, !dbg !2630

for.body:                                         ; preds = %for.cond
  %7 = icmp ult i64 %i.0, 2, !dbg !2636
  br i1 %7, label %land.lhs.true8, label %for.inc, !dbg !2638

land.lhs.true8:                                   ; preds = %for.body
  %8 = or i64 %i.0, 2, !dbg !2639
  %9 = icmp eq i64 %8, 3, !dbg !2639
  br i1 %9, label %for.end, label %for.inc, !dbg !2640

for.inc:                                          ; preds = %for.body, %land.lhs.true8
  %inc = add nuw nsw i64 %i.0, 1, !dbg !2641
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2032, metadata !DIExpression()), !dbg !2633
  br label %for.cond, !dbg !2642, !llvm.loop !2643

for.end:                                          ; preds = %for.cond, %land.lhs.true8
  %i.0.lcssa = phi i64 [ %i.0, %for.cond ], [ %i.0, %land.lhs.true8 ], !dbg !2632
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2032, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2032, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2032, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2032, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2032, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2032, metadata !DIExpression()), !dbg !2633
  %cmp13 = icmp eq i64 %i.0.lcssa, 4, !dbg !2645
  br i1 %cmp13, label %if.then14, label %if.end19, !dbg !2647

if.then14:                                        ; preds = %for.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 5), align 8, !dbg !2648
  %call15 = tail call %struct.rtx_def* @get_arg_pointer_save_area() #6, !dbg !2650
  %call16 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call15) #6, !dbg !2651
  %call17 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %10, %struct.rtx_def* %call16) #6, !dbg !2652
  br label %if.end19, !dbg !2653

if.end19:                                         ; preds = %if.end, %for.end, %if.then14
  %call20 = tail call %struct.rtx_def* @gen_blockage() #6, !dbg !2654
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #6, !dbg !2655
  ret void, !dbg !2656
}

declare dso_local void @maybe_set_first_label_num(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_goto(%union.tree_node* %label) local_unnamed_addr #5 !dbg !2657 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !2659, metadata !DIExpression()), !dbg !2660
  %call = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %label) #7, !dbg !2661
  tail call void @emit_jump(%struct.rtx_def* %call) #7, !dbg !2662
  ret void, !dbg !2663
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @parse_output_constraint(i8** %constraint_p, i32 %operand_num, i32 %ninputs, i32 %noutputs, i8* %allows_mem, i8* %allows_reg, i8* %is_inout) local_unnamed_addr #5 !dbg !2664 {
entry:
  call void @llvm.dbg.value(metadata i8** %constraint_p, metadata !2668, metadata !DIExpression()), !dbg !2681
  call void @llvm.dbg.value(metadata i32 %operand_num, metadata !2669, metadata !DIExpression()), !dbg !2681
  call void @llvm.dbg.value(metadata i32 %ninputs, metadata !2670, metadata !DIExpression()), !dbg !2681
  call void @llvm.dbg.value(metadata i32 %noutputs, metadata !2671, metadata !DIExpression()), !dbg !2681
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !2672, metadata !DIExpression()), !dbg !2681
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !2673, metadata !DIExpression()), !dbg !2681
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !2674, metadata !DIExpression()), !dbg !2681
  %0 = load i8*, i8** %constraint_p, align 8, !dbg !2682
  call void @llvm.dbg.value(metadata i8* %0, metadata !2675, metadata !DIExpression()), !dbg !2681
  store i8 0, i8* %allows_mem, align 1, !dbg !2683
  store i8 0, i8* %allows_reg, align 1, !dbg !2684
  %call = tail call i8* @strchr(i8* %0, i32 61) #6, !dbg !2685
  call void @llvm.dbg.value(metadata i8* %call, metadata !2676, metadata !DIExpression()), !dbg !2681
  %tobool = icmp eq i8* %call, null, !dbg !2686
  br i1 %tobool, label %if.then, label %if.end, !dbg !2688

if.then:                                          ; preds = %entry
  %call1 = tail call i8* @strchr(i8* %0, i32 43) #6, !dbg !2689
  call void @llvm.dbg.value(metadata i8* %call1, metadata !2676, metadata !DIExpression()), !dbg !2681
  br label %if.end, !dbg !2690

if.end:                                           ; preds = %entry, %if.then
  %p.0 = phi i8* [ %call, %entry ], [ %call1, %if.then ], !dbg !2681
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !2676, metadata !DIExpression()), !dbg !2681
  %tobool2 = icmp eq i8* %p.0, null, !dbg !2691
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !2693

if.then3:                                         ; preds = %if.end
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2694
  br label %cleanup, !dbg !2696

if.end4:                                          ; preds = %if.end
  %1 = load i8, i8* %p.0, align 1, !dbg !2697
  %cmp = icmp eq i8 %1, 43, !dbg !2698
  %conv6 = zext i1 %cmp to i8, !dbg !2699
  store i8 %conv6, i8* %is_inout, align 1, !dbg !2700
  %cmp7 = icmp eq i8* %p.0, %0, !dbg !2701
  br i1 %cmp7, label %lor.lhs.false, label %if.then11, !dbg !2702

lor.lhs.false:                                    ; preds = %if.end4
  br i1 %cmp, label %if.then11, label %if.end24, !dbg !2703

if.then11:                                        ; preds = %lor.lhs.false, %if.end4
  %call12 = tail call i64 @strlen(i8* %0) #6, !dbg !2704
  call void @llvm.dbg.value(metadata i64 %call12, metadata !2680, metadata !DIExpression()), !dbg !2705
  br i1 %cmp7, label %if.end18, label %if.then15, !dbg !2706

if.then15:                                        ; preds = %if.then11
  %2 = load i8, i8* %p.0, align 1, !dbg !2707
  %conv16 = sext i8 %2 to i32, !dbg !2707
  %call17 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 %conv16, i32 %operand_num) #6, !dbg !2709
  br label %if.end18, !dbg !2709

if.end18:                                         ; preds = %if.then11, %if.then15
  %add = add i64 %call12, 1, !dbg !2710
  %3 = alloca i8, i64 %add, align 16, !dbg !2710
  call void @llvm.dbg.value(metadata i8* %3, metadata !2677, metadata !DIExpression()), !dbg !2705
  %call19 = call i8* @strcpy(i8* nonnull %3, i8* %0) #6, !dbg !2711
  %4 = load i8, i8* %3, align 16, !dbg !2712
  %sub.ptr.lhs.cast = ptrtoint i8* %p.0 to i64, !dbg !2713
  %sub.ptr.rhs.cast = ptrtoint i8* %0 to i64, !dbg !2713
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2713
  %arrayidx20 = getelementptr inbounds i8, i8* %3, i64 %sub.ptr.sub, !dbg !2714
  store i8 %4, i8* %arrayidx20, align 1, !dbg !2715
  store i8 61, i8* %3, align 16, !dbg !2716
  %conv22 = trunc i64 %call12 to i32, !dbg !2717
  %call23 = call i8* @ggc_alloc_string(i8* nonnull %3, i32 %conv22) #6, !dbg !2718
  store i8* %call23, i8** %constraint_p, align 8, !dbg !2719
  call void @llvm.dbg.value(metadata i8* %call23, metadata !2675, metadata !DIExpression()), !dbg !2681
  br label %if.end24, !dbg !2720

if.end24:                                         ; preds = %lor.lhs.false, %if.end18
  %constraint.0 = phi i8* [ %call23, %if.end18 ], [ %0, %lor.lhs.false ], !dbg !2681
  call void @llvm.dbg.value(metadata i8* %constraint.0, metadata !2675, metadata !DIExpression()), !dbg !2681
  %add.ptr = getelementptr inbounds i8, i8* %constraint.0, i64 1, !dbg !2721
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2676, metadata !DIExpression()), !dbg !2681
  %add28 = add nsw i32 %operand_num, 1, !dbg !2723
  %add29 = add nsw i32 %ninputs, %noutputs, !dbg !2723
  %cmp30 = icmp eq i32 %add28, %add29, !dbg !2723
  br i1 %cmp30, label %if.end24.split.us, label %if.end24.if.end24.split_crit_edge, !dbg !2727

if.end24.if.end24.split_crit_edge:                ; preds = %if.end24
  br label %for.cond, !dbg !2727

if.end24.split.us:                                ; preds = %if.end24
  br label %for.cond.us, !dbg !2727

for.cond.us:                                      ; preds = %for.inc.us, %if.end24.split.us
  %p.1.us = phi i8* [ %add.ptr, %if.end24.split.us ], [ %add.ptr54.us, %for.inc.us ], !dbg !2728
  call void @llvm.dbg.value(metadata i8* %p.1.us, metadata !2676, metadata !DIExpression()), !dbg !2681
  %5 = load i8, i8* %p.1.us, align 1, !dbg !2729
  %tobool25.us = icmp eq i8 %5, 0, !dbg !2730
  br i1 %tobool25.us, label %cleanup.loopexit.us-lcssa.us, label %for.body.us, !dbg !2730

for.body.us:                                      ; preds = %for.cond.us
  %conv26.us = sext i8 %5 to i32, !dbg !2731
  switch i32 %conv26.us, label %sw.default.us [
    i32 43, label %sw.bb.us-lcssa.us
    i32 61, label %sw.bb.us-lcssa.us
    i32 37, label %sw.bb27.us
    i32 86, label %sw.bb34.us
    i32 109, label %sw.bb34.us
    i32 111, label %sw.bb34.us
    i32 63, label %for.inc.us
    i32 33, label %for.inc.us
    i32 42, label %for.inc.us
    i32 38, label %for.inc.us
    i32 35, label %for.inc.us
    i32 69, label %for.inc.us
    i32 70, label %for.inc.us
    i32 71, label %for.inc.us
    i32 72, label %for.inc.us
    i32 115, label %for.inc.us
    i32 105, label %for.inc.us
    i32 110, label %for.inc.us
    i32 73, label %for.inc.us
    i32 74, label %for.inc.us
    i32 75, label %for.inc.us
    i32 76, label %for.inc.us
    i32 77, label %for.inc.us
    i32 78, label %for.inc.us
    i32 79, label %for.inc.us
    i32 80, label %for.inc.us
    i32 44, label %for.inc.us
    i32 48, label %sw.bb36.us-lcssa.us
    i32 49, label %sw.bb36.us-lcssa.us
    i32 50, label %sw.bb36.us-lcssa.us
    i32 51, label %sw.bb36.us-lcssa.us
    i32 52, label %sw.bb36.us-lcssa.us
    i32 53, label %sw.bb36.us-lcssa.us
    i32 54, label %sw.bb36.us-lcssa.us
    i32 55, label %sw.bb36.us-lcssa.us
    i32 56, label %sw.bb36.us-lcssa.us
    i32 57, label %sw.bb36.us-lcssa.us
    i32 91, label %sw.bb36.us-lcssa.us
    i32 60, label %sw.bb37.us
    i32 62, label %sw.bb37.us
    i32 103, label %sw.bb38.us
    i32 88, label %sw.bb38.us
    i32 112, label %sw.bb39.us
    i32 114, label %sw.bb39.us
  ], !dbg !2732

sw.bb39.us:                                       ; preds = %for.body.us, %for.body.us
  store i8 1, i8* %allows_reg, align 1, !dbg !2733
  br label %for.inc.us, !dbg !2734

sw.bb38.us:                                       ; preds = %for.body.us, %for.body.us
  store i8 1, i8* %allows_reg, align 1, !dbg !2735
  store i8 1, i8* %allows_mem, align 1, !dbg !2736
  br label %for.inc.us, !dbg !2737

sw.bb37.us:                                       ; preds = %for.body.us, %for.body.us
  store i8 1, i8* %allows_mem, align 1, !dbg !2738
  br label %for.inc.us, !dbg !2739

sw.bb34.us:                                       ; preds = %for.body.us, %for.body.us, %for.body.us
  store i8 1, i8* %allows_mem, align 1, !dbg !2740
  br label %for.inc.us, !dbg !2741

sw.bb27.us:                                       ; preds = %for.body.us
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2742
  br label %cleanup, !dbg !2744

sw.default.us:                                    ; preds = %for.body.us
  %idxprom.us = zext i8 %5 to i64, !dbg !2745
  %arrayidx41.us = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom.us, !dbg !2745
  %6 = load i16, i16* %arrayidx41.us, align 2, !dbg !2745
  %7 = and i16 %6, 136, !dbg !2745
  %tobool44.us = icmp eq i16 %7, 0, !dbg !2745
  br i1 %tobool44.us, label %for.inc.us, label %if.end46.us, !dbg !2747

if.end46.us:                                      ; preds = %sw.default.us
  %call47.us = call i32 @lookup_constraint(i8* %p.1.us) #6, !dbg !2748
  %call48.us = call i32 @regclass_for_constraint(i32 %call47.us) #6, !dbg !2748
  %cmp49.us = icmp eq i32 %call48.us, 0, !dbg !2750
  store i8 1, i8* %allows_reg, align 1, !dbg !2751
  br i1 %cmp49.us, label %if.else.us, label %for.inc.us, !dbg !2752

if.else.us:                                       ; preds = %if.end46.us
  store i8 1, i8* %allows_mem, align 1, !dbg !2753
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.else.us, %if.end46.us, %sw.default.us, %sw.bb34.us, %sw.bb37.us, %sw.bb38.us, %sw.bb39.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us
  %8 = load i8, i8* %p.1.us, align 1, !dbg !2757
  %call53.us = call fastcc i64 @insn_constraint_len(i8 signext %8, i8* %p.1.us) #7, !dbg !2757
  %add.ptr54.us = getelementptr inbounds i8, i8* %p.1.us, i64 %call53.us, !dbg !2758
  call void @llvm.dbg.value(metadata i8* %add.ptr54.us, metadata !2676, metadata !DIExpression()), !dbg !2681
  br label %for.cond.us, !dbg !2759, !llvm.loop !2760

cleanup.loopexit.us-lcssa.us:                     ; preds = %for.cond.us
  br label %cleanup.loopexit, !dbg !2762

sw.bb.us-lcssa.us:                                ; preds = %for.body.us, %for.body.us
  br label %sw.bb, !dbg !2763

sw.bb36.us-lcssa.us:                              ; preds = %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us
  br label %sw.bb36, !dbg !2764

for.cond:                                         ; preds = %for.inc, %if.end24.if.end24.split_crit_edge
  %p.1 = phi i8* [ %add.ptr, %if.end24.if.end24.split_crit_edge ], [ %add.ptr54, %for.inc ], !dbg !2728
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !2676, metadata !DIExpression()), !dbg !2681
  %9 = load i8, i8* %p.1, align 1, !dbg !2729
  %tobool25 = icmp eq i8 %9, 0, !dbg !2730
  br i1 %tobool25, label %cleanup.loopexit.us-lcssa, label %for.body, !dbg !2730

for.body:                                         ; preds = %for.cond
  %conv26 = sext i8 %9 to i32, !dbg !2731
  switch i32 %conv26, label %sw.default [
    i32 43, label %sw.bb.us-lcssa
    i32 61, label %sw.bb.us-lcssa
    i32 37, label %sw.bb27
    i32 86, label %sw.bb34
    i32 109, label %sw.bb34
    i32 111, label %sw.bb34
    i32 63, label %for.inc
    i32 33, label %for.inc
    i32 42, label %for.inc
    i32 38, label %for.inc
    i32 35, label %for.inc
    i32 69, label %for.inc
    i32 70, label %for.inc
    i32 71, label %for.inc
    i32 72, label %for.inc
    i32 115, label %for.inc
    i32 105, label %for.inc
    i32 110, label %for.inc
    i32 73, label %for.inc
    i32 74, label %for.inc
    i32 75, label %for.inc
    i32 76, label %for.inc
    i32 77, label %for.inc
    i32 78, label %for.inc
    i32 79, label %for.inc
    i32 80, label %for.inc
    i32 44, label %for.inc
    i32 48, label %sw.bb36.us-lcssa
    i32 49, label %sw.bb36.us-lcssa
    i32 50, label %sw.bb36.us-lcssa
    i32 51, label %sw.bb36.us-lcssa
    i32 52, label %sw.bb36.us-lcssa
    i32 53, label %sw.bb36.us-lcssa
    i32 54, label %sw.bb36.us-lcssa
    i32 55, label %sw.bb36.us-lcssa
    i32 56, label %sw.bb36.us-lcssa
    i32 57, label %sw.bb36.us-lcssa
    i32 91, label %sw.bb36.us-lcssa
    i32 60, label %sw.bb37
    i32 62, label %sw.bb37
    i32 103, label %sw.bb38
    i32 88, label %sw.bb38
    i32 112, label %sw.bb39
    i32 114, label %sw.bb39
  ], !dbg !2732

sw.bb.us-lcssa:                                   ; preds = %for.body, %for.body
  br label %sw.bb, !dbg !2763

sw.bb:                                            ; preds = %sw.bb.us-lcssa.us, %sw.bb.us-lcssa
  call void (i8*, ...) @error(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2763
  br label %cleanup, !dbg !2765

sw.bb27:                                          ; preds = %for.body
  br label %for.inc, !dbg !2766

sw.bb34:                                          ; preds = %for.body, %for.body, %for.body
  store i8 1, i8* %allows_mem, align 1, !dbg !2740
  br label %for.inc, !dbg !2741

sw.bb36.us-lcssa:                                 ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  br label %sw.bb36, !dbg !2764

sw.bb36:                                          ; preds = %sw.bb36.us-lcssa.us, %sw.bb36.us-lcssa
  call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !2764
  br label %cleanup, !dbg !2767

sw.bb37:                                          ; preds = %for.body, %for.body
  store i8 1, i8* %allows_mem, align 1, !dbg !2738
  br label %for.inc, !dbg !2739

sw.bb38:                                          ; preds = %for.body, %for.body
  store i8 1, i8* %allows_reg, align 1, !dbg !2735
  store i8 1, i8* %allows_mem, align 1, !dbg !2736
  br label %for.inc, !dbg !2737

sw.bb39:                                          ; preds = %for.body, %for.body
  store i8 1, i8* %allows_reg, align 1, !dbg !2733
  br label %for.inc, !dbg !2734

sw.default:                                       ; preds = %for.body
  %idxprom = zext i8 %9 to i64, !dbg !2745
  %arrayidx41 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom, !dbg !2745
  %10 = load i16, i16* %arrayidx41, align 2, !dbg !2745
  %11 = and i16 %10, 136, !dbg !2745
  %tobool44 = icmp eq i16 %11, 0, !dbg !2745
  br i1 %tobool44, label %for.inc, label %if.end46, !dbg !2747

if.end46:                                         ; preds = %sw.default
  %call47 = call i32 @lookup_constraint(i8* %p.1) #6, !dbg !2748
  %call48 = call i32 @regclass_for_constraint(i32 %call47) #6, !dbg !2748
  %cmp49 = icmp eq i32 %call48, 0, !dbg !2750
  store i8 1, i8* %allows_reg, align 1, !dbg !2751
  br i1 %cmp49, label %if.else, label %for.inc, !dbg !2752

if.else:                                          ; preds = %if.end46
  store i8 1, i8* %allows_mem, align 1, !dbg !2753
  br label %for.inc

for.inc:                                          ; preds = %sw.bb27, %if.end46, %sw.default, %sw.bb34, %sw.bb37, %sw.bb38, %sw.bb39, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %if.else
  %12 = load i8, i8* %p.1, align 1, !dbg !2757
  %call53 = call fastcc i64 @insn_constraint_len(i8 signext %12, i8* %p.1) #7, !dbg !2757
  %add.ptr54 = getelementptr inbounds i8, i8* %p.1, i64 %call53, !dbg !2758
  call void @llvm.dbg.value(metadata i8* %add.ptr54, metadata !2676, metadata !DIExpression()), !dbg !2681
  br label %for.cond, !dbg !2759, !llvm.loop !2760

cleanup.loopexit.us-lcssa:                        ; preds = %for.cond
  br label %cleanup.loopexit, !dbg !2762

cleanup.loopexit:                                 ; preds = %cleanup.loopexit.us-lcssa.us, %cleanup.loopexit.us-lcssa
  br label %cleanup, !dbg !2762

cleanup:                                          ; preds = %cleanup.loopexit, %sw.bb36, %sw.bb27.us, %sw.bb, %if.then3
  %retval.0 = phi i8 [ 0, %sw.bb36 ], [ 0, %sw.bb27.us ], [ 0, %sw.bb ], [ 0, %if.then3 ], [ 1, %cleanup.loopexit ], !dbg !2681
  ret i8 %retval.0, !dbg !2762
}

declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #2

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #2

declare dso_local i8* @strcpy(i8*, i8*) local_unnamed_addr #2

declare dso_local i8* @ggc_alloc_string(i8*, i32) local_unnamed_addr #2

declare dso_local i32 @regclass_for_constraint(i32) local_unnamed_addr #2

declare dso_local i32 @lookup_constraint(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i64 @insn_constraint_len(i8 signext %fc, i8* %str) unnamed_addr #0 !dbg !2768 {
entry:
  call void @llvm.dbg.value(metadata i8 %fc, metadata !2773, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.value(metadata i8* %str, metadata !2774, metadata !DIExpression()), !dbg !2775
  %cond = icmp eq i8 %fc, 89, !dbg !2776
  %retval.0 = select i1 %cond, i64 2, i64 1, !dbg !2776
  ret i64 %retval.0, !dbg !2777
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @parse_input_constraint(i8** %constraint_p, i32 %input_num, i32 %ninputs, i32 %noutputs, i32 %ninout, i8** %constraints, i8* %allows_mem, i8* %allows_reg) local_unnamed_addr #5 !dbg !2778 {
entry:
  %end = alloca i8*, align 8
  call void @llvm.dbg.value(metadata i8** %constraint_p, metadata !2784, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i32 %input_num, metadata !2785, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i32 %ninputs, metadata !2786, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i32 %noutputs, metadata !2787, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i32 %ninout, metadata !2788, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8** %constraints, metadata !2789, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !2790, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !2791, metadata !DIExpression()), !dbg !2803
  %0 = load i8*, i8** %constraint_p, align 8, !dbg !2804
  call void @llvm.dbg.value(metadata i8* %0, metadata !2792, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8* %0, metadata !2793, metadata !DIExpression()), !dbg !2803
  %call = tail call i64 @strlen(i8* %0) #6, !dbg !2805
  call void @llvm.dbg.value(metadata i64 %call, metadata !2794, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8 0, metadata !2796, metadata !DIExpression()), !dbg !2803
  store i8 0, i8* %allows_mem, align 1, !dbg !2806
  store i8 0, i8* %allows_reg, align 1, !dbg !2807
  call void @llvm.dbg.value(metadata i64 0, metadata !2795, metadata !DIExpression()), !dbg !2803
  %1 = bitcast i8** %end to i8*, !dbg !2808
  %conv16 = sext i32 %noutputs to i64, !dbg !2809
  %add = add nsw i32 %input_num, 1, !dbg !2811
  %sub = sub nsw i32 %ninputs, %ninout, !dbg !2811
  %cmp8 = icmp eq i32 %add, %sub, !dbg !2811
  br i1 %cmp8, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !2813

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !2813

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !2813

for.cond.us:                                      ; preds = %for.inc.us, %entry.split.us
  %constraint.0.us = phi i8* [ %0, %entry.split.us ], [ %constraint.3.us, %for.inc.us ], !dbg !2814
  %c_len.0.us = phi i64 [ %call, %entry.split.us ], [ %c_len.3.us, %for.inc.us ], !dbg !2815
  %j.0.us = phi i64 [ 0, %entry.split.us ], [ %add61.us, %for.inc.us ], !dbg !2816
  %saw_match.0.us = phi i8 [ 0, %entry.split.us ], [ %saw_match.2.us, %for.inc.us ], !dbg !2817
  call void @llvm.dbg.value(metadata i8 %saw_match.0.us, metadata !2796, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %j.0.us, metadata !2795, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %c_len.0.us, metadata !2794, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8* %constraint.0.us, metadata !2792, metadata !DIExpression()), !dbg !2803
  %cmp.us = icmp ult i64 %j.0.us, %c_len.0.us, !dbg !2818
  br i1 %cmp.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !2819

for.body.us:                                      ; preds = %for.cond.us
  %arrayidx.us = getelementptr inbounds i8, i8* %constraint.0.us, i64 %j.0.us, !dbg !2820
  %2 = load i8, i8* %arrayidx.us, align 1, !dbg !2820
  %conv.us = sext i8 %2 to i32, !dbg !2820
  switch i32 %conv.us, label %sw.default.us [
    i32 43, label %sw.bb.us
    i32 61, label %sw.bb.us
    i32 38, label %sw.bb.us
    i32 37, label %sw.bb5.us
    i32 86, label %sw.bb12.us
    i32 109, label %sw.bb12.us
    i32 111, label %sw.bb12.us
    i32 60, label %for.inc.us
    i32 62, label %for.inc.us
    i32 63, label %for.inc.us
    i32 33, label %for.inc.us
    i32 42, label %for.inc.us
    i32 35, label %for.inc.us
    i32 69, label %for.inc.us
    i32 70, label %for.inc.us
    i32 71, label %for.inc.us
    i32 72, label %for.inc.us
    i32 115, label %for.inc.us
    i32 105, label %for.inc.us
    i32 110, label %for.inc.us
    i32 73, label %for.inc.us
    i32 74, label %for.inc.us
    i32 75, label %for.inc.us
    i32 76, label %for.inc.us
    i32 77, label %for.inc.us
    i32 78, label %for.inc.us
    i32 79, label %for.inc.us
    i32 80, label %for.inc.us
    i32 44, label %for.inc.us
    i32 48, label %sw.bb14.us
    i32 49, label %sw.bb14.us
    i32 50, label %sw.bb14.us
    i32 51, label %sw.bb14.us
    i32 52, label %sw.bb14.us
    i32 53, label %sw.bb14.us
    i32 54, label %sw.bb14.us
    i32 55, label %sw.bb14.us
    i32 56, label %sw.bb14.us
    i32 57, label %sw.bb14.us
    i32 112, label %sw.bb39.us
    i32 114, label %sw.bb39.us
    i32 103, label %sw.bb40.us
    i32 88, label %sw.bb40.us
  ], !dbg !2821

sw.bb40.us:                                       ; preds = %for.body.us, %for.body.us
  store i8 1, i8* %allows_reg, align 1, !dbg !2822
  store i8 1, i8* %allows_mem, align 1, !dbg !2823
  br label %for.inc.us, !dbg !2824

sw.bb14.us:                                       ; preds = %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2825
  call void @llvm.dbg.value(metadata i8 1, metadata !2796, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8** %end, metadata !2797, metadata !DIExpression(DW_OP_deref)), !dbg !2808
  %call15.us = call i64 @strtoul(i8* %arrayidx.us, i8** nonnull %end, i32 10) #6, !dbg !2826
  call void @llvm.dbg.value(metadata i64 %call15.us, metadata !2802, metadata !DIExpression()), !dbg !2808
  %cmp17.us = icmp ult i64 %call15.us, %conv16, !dbg !2827
  br i1 %cmp17.us, label %if.end20.us, label %if.then19.us, !dbg !2828

if.then19.us:                                     ; preds = %sw.bb14.us
  call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2829
  br label %cleanup.us, !dbg !2831

if.end20.us:                                      ; preds = %sw.bb14.us
  %3 = load i8*, i8** %end, align 8, !dbg !2832
  call void @llvm.dbg.value(metadata i8* %3, metadata !2797, metadata !DIExpression()), !dbg !2808
  %4 = load i8, i8* %3, align 1, !dbg !2834
  %cmp22.us = icmp eq i8 %4, 0, !dbg !2835
  %5 = ptrtoint i8* %3 to i64, !dbg !2836
  br i1 %cmp22.us, label %land.lhs.true24.us, label %if.else.us, !dbg !2836

land.lhs.true24.us:                               ; preds = %if.end20.us
  switch i64 %j.0.us, label %if.else.us [
    i64 0, label %if.then34.us
    i64 1, label %land.lhs.true29.us
  ], !dbg !2837

land.lhs.true29.us:                               ; preds = %land.lhs.true24.us
  %6 = load i8, i8* %constraint.0.us, align 1, !dbg !2838
  %cmp32.us = icmp eq i8 %6, 37, !dbg !2839
  br i1 %cmp32.us, label %if.then34.us, label %if.else.us, !dbg !2840

if.then34.us:                                     ; preds = %land.lhs.true29.us, %land.lhs.true24.us
  %arrayidx35.us = getelementptr inbounds i8*, i8** %constraints, i64 %call15.us, !dbg !2841
  %7 = load i8*, i8** %arrayidx35.us, align 8, !dbg !2841
  call void @llvm.dbg.value(metadata i8* %7, metadata !2792, metadata !DIExpression()), !dbg !2803
  store i8* %7, i8** %constraint_p, align 8, !dbg !2843
  %call36.us = call i64 @strlen(i8* %7) #6, !dbg !2844
  call void @llvm.dbg.value(metadata i64 %call36.us, metadata !2794, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 0, metadata !2795, metadata !DIExpression()), !dbg !2803
  br label %cleanup.us, !dbg !2845

if.else.us:                                       ; preds = %land.lhs.true29.us, %land.lhs.true24.us, %if.end20.us
  %sub.ptr.rhs.cast.us = ptrtoint i8* %constraint.0.us to i64, !dbg !2846
  %8 = xor i64 %sub.ptr.rhs.cast.us, -1, !dbg !2847
  %dec.us = add i64 %5, %8, !dbg !2847
  call void @llvm.dbg.value(metadata i64 %dec.us, metadata !2795, metadata !DIExpression()), !dbg !2803
  br label %cleanup.us, !dbg !2848

cleanup.us:                                       ; preds = %if.else.us, %if.then34.us, %if.then19.us
  %constraint.1.us = phi i8* [ %constraint.0.us, %if.then19.us ], [ %7, %if.then34.us ], [ %constraint.0.us, %if.else.us ], !dbg !2803
  %c_len.1.us = phi i64 [ %c_len.0.us, %if.then19.us ], [ %call36.us, %if.then34.us ], [ %c_len.0.us, %if.else.us ], !dbg !2803
  %j.1.us = phi i64 [ %j.0.us, %if.then19.us ], [ 0, %if.then34.us ], [ %dec.us, %if.else.us ], !dbg !2816
  %cleanup.dest.slot.0.us = phi i32 [ 1, %if.then19.us ], [ 5, %if.then34.us ], [ 0, %if.else.us ]
  call void @llvm.dbg.value(metadata i64 %j.1.us, metadata !2795, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %c_len.1.us, metadata !2794, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8* %constraint.1.us, metadata !2792, metadata !DIExpression()), !dbg !2803
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2848
  switch i32 %cleanup.dest.slot.0.us, label %cleanup69.loopexit.us-lcssa.us [
    i32 0, label %sw.bb39.us
    i32 5, label %for.inc.us
  ]

sw.bb39.us:                                       ; preds = %cleanup.us, %for.body.us, %for.body.us
  %constraint.2.us = phi i8* [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.1.us, %cleanup.us ], !dbg !2814
  %c_len.2.us = phi i64 [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.1.us, %cleanup.us ], !dbg !2815
  %j.2.us = phi i64 [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.1.us, %cleanup.us ], !dbg !2849
  %saw_match.1.us = phi i8 [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ 1, %cleanup.us ], !dbg !2803
  call void @llvm.dbg.value(metadata i8 %saw_match.1.us, metadata !2796, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %j.2.us, metadata !2795, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %c_len.2.us, metadata !2794, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8* %constraint.2.us, metadata !2792, metadata !DIExpression()), !dbg !2803
  store i8 1, i8* %allows_reg, align 1, !dbg !2850
  br label %for.inc.us, !dbg !2851

sw.bb12.us:                                       ; preds = %for.body.us, %for.body.us, %for.body.us
  store i8 1, i8* %allows_mem, align 1, !dbg !2852
  br label %for.inc.us, !dbg !2853

sw.bb5.us:                                        ; preds = %for.body.us
  %cmp6.us = icmp eq i8* %constraint.0.us, %0, !dbg !2854
  br i1 %cmp6.us, label %land.lhs.true.us, label %for.inc.us, !dbg !2855

land.lhs.true.us:                                 ; preds = %sw.bb5.us
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2856
  br label %cleanup69, !dbg !2858

sw.bb.us:                                         ; preds = %for.body.us, %for.body.us, %for.body.us
  %cmp1.us = icmp eq i8* %constraint.0.us, %0, !dbg !2859
  br i1 %cmp1.us, label %if.then.us-lcssa.us, label %for.inc.us, !dbg !2861

sw.default.us:                                    ; preds = %for.body.us
  %idxprom.us = zext i8 %2 to i64, !dbg !2862
  %arrayidx43.us = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom.us, !dbg !2862
  %9 = load i16, i16* %arrayidx43.us, align 2, !dbg !2862
  %10 = and i16 %9, 136, !dbg !2862
  %tobool.us = icmp eq i16 %10, 0, !dbg !2862
  br i1 %tobool.us, label %if.then46.us-lcssa.us, label %if.end49.us, !dbg !2864

if.end49.us:                                      ; preds = %sw.default.us
  %call51.us = call i32 @lookup_constraint(i8* %arrayidx.us) #6, !dbg !2865
  %call52.us = call i32 @regclass_for_constraint(i32 %call51.us) #6, !dbg !2865
  %cmp53.us = icmp eq i32 %call52.us, 0, !dbg !2867
  store i8 1, i8* %allows_reg, align 1, !dbg !2868
  br i1 %cmp53.us, label %if.else56.us, label %for.inc.us, !dbg !2869

if.else56.us:                                     ; preds = %if.end49.us
  store i8 1, i8* %allows_mem, align 1, !dbg !2870
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.else56.us, %if.end49.us, %sw.bb.us, %sw.bb5.us, %sw.bb12.us, %sw.bb39.us, %cleanup.us, %sw.bb40.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us, %for.body.us
  %constraint.3.us = phi i8* [ %constraint.0.us, %sw.bb40.us ], [ %constraint.2.us, %sw.bb39.us ], [ %constraint.1.us, %cleanup.us ], [ %constraint.0.us, %sw.bb12.us ], [ %constraint.0.us, %sw.bb.us ], [ %constraint.0.us, %sw.bb5.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %for.body.us ], [ %constraint.0.us, %if.end49.us ], [ %constraint.0.us, %if.else56.us ], !dbg !2814
  %c_len.3.us = phi i64 [ %c_len.0.us, %sw.bb40.us ], [ %c_len.2.us, %sw.bb39.us ], [ %c_len.1.us, %cleanup.us ], [ %c_len.0.us, %sw.bb12.us ], [ %c_len.0.us, %sw.bb.us ], [ %c_len.0.us, %sw.bb5.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %for.body.us ], [ %c_len.0.us, %if.end49.us ], [ %c_len.0.us, %if.else56.us ], !dbg !2815
  %j.3.us = phi i64 [ %j.0.us, %sw.bb40.us ], [ %j.2.us, %sw.bb39.us ], [ %j.1.us, %cleanup.us ], [ %j.0.us, %sw.bb12.us ], [ %j.0.us, %sw.bb.us ], [ %j.0.us, %sw.bb5.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %for.body.us ], [ %j.0.us, %if.end49.us ], [ %j.0.us, %if.else56.us ], !dbg !2849
  %saw_match.2.us = phi i8 [ %saw_match.0.us, %sw.bb40.us ], [ %saw_match.1.us, %sw.bb39.us ], [ 1, %cleanup.us ], [ %saw_match.0.us, %sw.bb12.us ], [ %saw_match.0.us, %sw.bb.us ], [ %saw_match.0.us, %sw.bb5.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %for.body.us ], [ %saw_match.0.us, %if.end49.us ], [ %saw_match.0.us, %if.else56.us ], !dbg !2803
  call void @llvm.dbg.value(metadata i8 %saw_match.2.us, metadata !2796, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %j.3.us, metadata !2795, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %c_len.3.us, metadata !2794, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8* %constraint.3.us, metadata !2792, metadata !DIExpression()), !dbg !2803
  %arrayidx58.us = getelementptr inbounds i8, i8* %constraint.3.us, i64 %j.3.us, !dbg !2874
  %11 = load i8, i8* %arrayidx58.us, align 1, !dbg !2874
  %call60.us = call fastcc i64 @insn_constraint_len(i8 signext %11, i8* %arrayidx58.us) #7, !dbg !2874
  %add61.us = add i64 %j.3.us, %call60.us, !dbg !2875
  call void @llvm.dbg.value(metadata i64 %add61.us, metadata !2795, metadata !DIExpression()), !dbg !2803
  br label %for.cond.us, !dbg !2876, !llvm.loop !2877

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  %saw_match.0.us.lcssa = phi i8 [ %saw_match.0.us, %for.cond.us ], !dbg !2817
  call void @llvm.dbg.value(metadata i8 %saw_match.0.us.lcssa, metadata !2796, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8 %saw_match.0.us.lcssa, metadata !2796, metadata !DIExpression()), !dbg !2803
  br label %for.end, !dbg !2879

cleanup69.loopexit.us-lcssa.us:                   ; preds = %cleanup.us
  br label %cleanup69.loopexit, !dbg !2881

if.then.us-lcssa.us:                              ; preds = %sw.bb.us
  %j.0.us.lcssa40 = phi i64 [ %j.0.us, %sw.bb.us ], !dbg !2816
  call void @llvm.dbg.value(metadata i64 %j.0.us.lcssa40, metadata !2795, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %j.0.us.lcssa40, metadata !2795, metadata !DIExpression()), !dbg !2803
  br label %if.then, !dbg !2882

if.then46.us-lcssa.us:                            ; preds = %sw.default.us
  %conv.us.lcssa44 = phi i32 [ %conv.us, %sw.default.us ], !dbg !2820
  br label %if.then46, !dbg !2884

for.cond:                                         ; preds = %for.inc, %entry.entry.split_crit_edge
  %constraint.0 = phi i8* [ %0, %entry.entry.split_crit_edge ], [ %constraint.3, %for.inc ], !dbg !2814
  %c_len.0 = phi i64 [ %call, %entry.entry.split_crit_edge ], [ %c_len.3, %for.inc ], !dbg !2815
  %j.0 = phi i64 [ 0, %entry.entry.split_crit_edge ], [ %add61, %for.inc ], !dbg !2816
  %saw_match.0 = phi i8 [ 0, %entry.entry.split_crit_edge ], [ %saw_match.2, %for.inc ], !dbg !2817
  call void @llvm.dbg.value(metadata i8 %saw_match.0, metadata !2796, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !2795, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %c_len.0, metadata !2794, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8* %constraint.0, metadata !2792, metadata !DIExpression()), !dbg !2803
  %cmp = icmp ult i64 %j.0, %c_len.0, !dbg !2818
  br i1 %cmp, label %for.body, label %for.end.us-lcssa, !dbg !2819

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8, i8* %constraint.0, i64 %j.0, !dbg !2820
  %12 = load i8, i8* %arrayidx, align 1, !dbg !2820
  %conv = sext i8 %12 to i32, !dbg !2820
  switch i32 %conv, label %sw.default [
    i32 43, label %sw.bb
    i32 61, label %sw.bb
    i32 38, label %sw.bb
    i32 37, label %sw.bb5
    i32 86, label %sw.bb12
    i32 109, label %sw.bb12
    i32 111, label %sw.bb12
    i32 60, label %for.inc
    i32 62, label %for.inc
    i32 63, label %for.inc
    i32 33, label %for.inc
    i32 42, label %for.inc
    i32 35, label %for.inc
    i32 69, label %for.inc
    i32 70, label %for.inc
    i32 71, label %for.inc
    i32 72, label %for.inc
    i32 115, label %for.inc
    i32 105, label %for.inc
    i32 110, label %for.inc
    i32 73, label %for.inc
    i32 74, label %for.inc
    i32 75, label %for.inc
    i32 76, label %for.inc
    i32 77, label %for.inc
    i32 78, label %for.inc
    i32 79, label %for.inc
    i32 80, label %for.inc
    i32 44, label %for.inc
    i32 48, label %sw.bb14
    i32 49, label %sw.bb14
    i32 50, label %sw.bb14
    i32 51, label %sw.bb14
    i32 52, label %sw.bb14
    i32 53, label %sw.bb14
    i32 54, label %sw.bb14
    i32 55, label %sw.bb14
    i32 56, label %sw.bb14
    i32 57, label %sw.bb14
    i32 112, label %sw.bb39
    i32 114, label %sw.bb39
    i32 103, label %sw.bb40
    i32 88, label %sw.bb40
  ], !dbg !2821

sw.bb:                                            ; preds = %for.body, %for.body, %for.body
  %cmp1 = icmp eq i8* %constraint.0, %0, !dbg !2859
  br i1 %cmp1, label %if.then.us-lcssa, label %for.inc, !dbg !2861

if.then.us-lcssa:                                 ; preds = %sw.bb
  %j.0.lcssa50 = phi i64 [ %j.0, %sw.bb ], !dbg !2816
  call void @llvm.dbg.value(metadata i64 %j.0.lcssa50, metadata !2795, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %j.0.lcssa50, metadata !2795, metadata !DIExpression()), !dbg !2803
  br label %if.then, !dbg !2882

if.then:                                          ; preds = %if.then.us-lcssa.us, %if.then.us-lcssa
  %j.0.lcssa8 = phi i64 [ %j.0.lcssa50, %if.then.us-lcssa ], [ %j.0.us.lcssa40, %if.then.us-lcssa.us ], !dbg !2816
  call void @llvm.dbg.value(metadata i8* %0, metadata !2792, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %j.0.lcssa8, metadata !2795, metadata !DIExpression()), !dbg !2803
  %arrayidx3 = getelementptr inbounds i8, i8* %0, i64 %j.0.lcssa8, !dbg !2882
  %13 = load i8, i8* %arrayidx3, align 1, !dbg !2882
  %conv4 = sext i8 %13 to i32, !dbg !2882
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i32 %conv4) #6, !dbg !2886
  br label %cleanup69, !dbg !2887

sw.bb5:                                           ; preds = %for.body
  %cmp6 = icmp eq i8* %constraint.0, %0, !dbg !2854
  br i1 %cmp6, label %land.lhs.true, label %for.inc, !dbg !2855

land.lhs.true:                                    ; preds = %sw.bb5
  br label %for.inc, !dbg !2888

sw.bb12:                                          ; preds = %for.body, %for.body, %for.body
  store i8 1, i8* %allows_mem, align 1, !dbg !2852
  br label %for.inc, !dbg !2853

sw.bb14:                                          ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2825
  call void @llvm.dbg.value(metadata i8 1, metadata !2796, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8** %end, metadata !2797, metadata !DIExpression(DW_OP_deref)), !dbg !2808
  %call15 = call i64 @strtoul(i8* %arrayidx, i8** nonnull %end, i32 10) #6, !dbg !2826
  call void @llvm.dbg.value(metadata i64 %call15, metadata !2802, metadata !DIExpression()), !dbg !2808
  %cmp17 = icmp ult i64 %call15, %conv16, !dbg !2827
  br i1 %cmp17, label %if.end20, label %if.then19, !dbg !2828

if.then19:                                        ; preds = %sw.bb14
  call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2829
  br label %cleanup, !dbg !2831

if.end20:                                         ; preds = %sw.bb14
  %14 = load i8*, i8** %end, align 8, !dbg !2832
  call void @llvm.dbg.value(metadata i8* %14, metadata !2797, metadata !DIExpression()), !dbg !2808
  %15 = load i8, i8* %14, align 1, !dbg !2834
  %cmp22 = icmp eq i8 %15, 0, !dbg !2835
  %16 = ptrtoint i8* %14 to i64, !dbg !2836
  br i1 %cmp22, label %land.lhs.true24, label %if.else, !dbg !2836

land.lhs.true24:                                  ; preds = %if.end20
  switch i64 %j.0, label %if.else [
    i64 0, label %if.then34
    i64 1, label %land.lhs.true29
  ], !dbg !2837

land.lhs.true29:                                  ; preds = %land.lhs.true24
  %17 = load i8, i8* %constraint.0, align 1, !dbg !2838
  %cmp32 = icmp eq i8 %17, 37, !dbg !2839
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !2840

if.then34:                                        ; preds = %land.lhs.true24, %land.lhs.true29
  %arrayidx35 = getelementptr inbounds i8*, i8** %constraints, i64 %call15, !dbg !2841
  %18 = load i8*, i8** %arrayidx35, align 8, !dbg !2841
  call void @llvm.dbg.value(metadata i8* %18, metadata !2792, metadata !DIExpression()), !dbg !2803
  store i8* %18, i8** %constraint_p, align 8, !dbg !2843
  %call36 = call i64 @strlen(i8* %18) #6, !dbg !2844
  call void @llvm.dbg.value(metadata i64 %call36, metadata !2794, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 0, metadata !2795, metadata !DIExpression()), !dbg !2803
  br label %cleanup, !dbg !2845

if.else:                                          ; preds = %land.lhs.true24, %land.lhs.true29, %if.end20
  %sub.ptr.rhs.cast = ptrtoint i8* %constraint.0 to i64, !dbg !2846
  %19 = xor i64 %sub.ptr.rhs.cast, -1, !dbg !2847
  %dec = add i64 %16, %19, !dbg !2847
  call void @llvm.dbg.value(metadata i64 %dec, metadata !2795, metadata !DIExpression()), !dbg !2803
  br label %cleanup, !dbg !2848

cleanup:                                          ; preds = %if.else, %if.then34, %if.then19
  %constraint.1 = phi i8* [ %constraint.0, %if.then19 ], [ %18, %if.then34 ], [ %constraint.0, %if.else ], !dbg !2803
  %c_len.1 = phi i64 [ %c_len.0, %if.then19 ], [ %call36, %if.then34 ], [ %c_len.0, %if.else ], !dbg !2803
  %j.1 = phi i64 [ %j.0, %if.then19 ], [ 0, %if.then34 ], [ %dec, %if.else ], !dbg !2816
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then19 ], [ 5, %if.then34 ], [ 0, %if.else ]
  call void @llvm.dbg.value(metadata i64 %j.1, metadata !2795, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %c_len.1, metadata !2794, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8* %constraint.1, metadata !2792, metadata !DIExpression()), !dbg !2803
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2848
  switch i32 %cleanup.dest.slot.0, label %cleanup69.loopexit.us-lcssa [
    i32 0, label %sw.bb39
    i32 5, label %for.inc
  ]

sw.bb39:                                          ; preds = %cleanup, %for.body, %for.body
  %constraint.2 = phi i8* [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.1, %cleanup ], !dbg !2814
  %c_len.2 = phi i64 [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.1, %cleanup ], !dbg !2815
  %j.2 = phi i64 [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.1, %cleanup ], !dbg !2849
  %saw_match.1 = phi i8 [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ 1, %cleanup ], !dbg !2803
  call void @llvm.dbg.value(metadata i8 %saw_match.1, metadata !2796, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %j.2, metadata !2795, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %c_len.2, metadata !2794, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8* %constraint.2, metadata !2792, metadata !DIExpression()), !dbg !2803
  store i8 1, i8* %allows_reg, align 1, !dbg !2850
  br label %for.inc, !dbg !2851

sw.bb40:                                          ; preds = %for.body, %for.body
  store i8 1, i8* %allows_reg, align 1, !dbg !2822
  store i8 1, i8* %allows_mem, align 1, !dbg !2823
  br label %for.inc, !dbg !2824

sw.default:                                       ; preds = %for.body
  %idxprom = zext i8 %12 to i64, !dbg !2862
  %arrayidx43 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom, !dbg !2862
  %20 = load i16, i16* %arrayidx43, align 2, !dbg !2862
  %21 = and i16 %20, 136, !dbg !2862
  %tobool = icmp eq i16 %21, 0, !dbg !2862
  br i1 %tobool, label %if.then46.us-lcssa, label %if.end49, !dbg !2864

if.then46.us-lcssa:                               ; preds = %sw.default
  %conv.lcssa53 = phi i32 [ %conv, %sw.default ], !dbg !2820
  br label %if.then46, !dbg !2884

if.then46:                                        ; preds = %if.then46.us-lcssa.us, %if.then46.us-lcssa
  %conv48.pre-phi = phi i32 [ %conv.us.lcssa44, %if.then46.us-lcssa.us ], [ %conv.lcssa53, %if.then46.us-lcssa ], !dbg !2884
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 %conv48.pre-phi) #6, !dbg !2889
  br label %cleanup69, !dbg !2890

if.end49:                                         ; preds = %sw.default
  %call51 = call i32 @lookup_constraint(i8* %arrayidx) #6, !dbg !2865
  %call52 = call i32 @regclass_for_constraint(i32 %call51) #6, !dbg !2865
  %cmp53 = icmp eq i32 %call52, 0, !dbg !2867
  store i8 1, i8* %allows_reg, align 1, !dbg !2868
  br i1 %cmp53, label %if.else56, label %for.inc, !dbg !2869

if.else56:                                        ; preds = %if.end49
  store i8 1, i8* %allows_mem, align 1, !dbg !2870
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %if.end49, %sw.bb12, %cleanup, %sw.bb39, %sw.bb40, %sw.bb, %sw.bb5, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %if.else56
  %constraint.3 = phi i8* [ %constraint.0, %sw.bb40 ], [ %constraint.2, %sw.bb39 ], [ %constraint.1, %cleanup ], [ %constraint.0, %sw.bb12 ], [ %constraint.0, %sw.bb ], [ %0, %land.lhs.true ], [ %constraint.0, %sw.bb5 ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %for.body ], [ %constraint.0, %if.end49 ], [ %constraint.0, %if.else56 ], !dbg !2814
  %c_len.3 = phi i64 [ %c_len.0, %sw.bb40 ], [ %c_len.2, %sw.bb39 ], [ %c_len.1, %cleanup ], [ %c_len.0, %sw.bb12 ], [ %c_len.0, %sw.bb ], [ %c_len.0, %land.lhs.true ], [ %c_len.0, %sw.bb5 ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %for.body ], [ %c_len.0, %if.end49 ], [ %c_len.0, %if.else56 ], !dbg !2815
  %j.3 = phi i64 [ %j.0, %sw.bb40 ], [ %j.2, %sw.bb39 ], [ %j.1, %cleanup ], [ %j.0, %sw.bb12 ], [ %j.0, %sw.bb ], [ %j.0, %land.lhs.true ], [ %j.0, %sw.bb5 ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %for.body ], [ %j.0, %if.end49 ], [ %j.0, %if.else56 ], !dbg !2849
  %saw_match.2 = phi i8 [ %saw_match.0, %sw.bb40 ], [ %saw_match.1, %sw.bb39 ], [ 1, %cleanup ], [ %saw_match.0, %sw.bb12 ], [ %saw_match.0, %sw.bb ], [ %saw_match.0, %land.lhs.true ], [ %saw_match.0, %sw.bb5 ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %for.body ], [ %saw_match.0, %if.end49 ], [ %saw_match.0, %if.else56 ], !dbg !2803
  call void @llvm.dbg.value(metadata i8 %saw_match.2, metadata !2796, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %j.3, metadata !2795, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i64 %c_len.3, metadata !2794, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8* %constraint.3, metadata !2792, metadata !DIExpression()), !dbg !2803
  %arrayidx58 = getelementptr inbounds i8, i8* %constraint.3, i64 %j.3, !dbg !2874
  %22 = load i8, i8* %arrayidx58, align 1, !dbg !2874
  %call60 = call fastcc i64 @insn_constraint_len(i8 signext %22, i8* %arrayidx58) #7, !dbg !2874
  %add61 = add i64 %j.3, %call60, !dbg !2875
  call void @llvm.dbg.value(metadata i64 %add61, metadata !2795, metadata !DIExpression()), !dbg !2803
  br label %for.cond, !dbg !2876, !llvm.loop !2877

for.end.us-lcssa:                                 ; preds = %for.cond
  %saw_match.0.lcssa45 = phi i8 [ %saw_match.0, %for.cond ], !dbg !2817
  call void @llvm.dbg.value(metadata i8 %saw_match.0.lcssa45, metadata !2796, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.value(metadata i8 %saw_match.0.lcssa45, metadata !2796, metadata !DIExpression()), !dbg !2803
  br label %for.end, !dbg !2879

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %saw_match.0.lcssa = phi i8 [ %saw_match.0.lcssa45, %for.end.us-lcssa ], [ %saw_match.0.us.lcssa, %for.end.us-lcssa.us ], !dbg !2817
  call void @llvm.dbg.value(metadata i8 %saw_match.0.lcssa, metadata !2796, metadata !DIExpression()), !dbg !2803
  %tobool63 = icmp eq i8 %saw_match.0.lcssa, 0, !dbg !2879
  br i1 %tobool63, label %cleanup69, label %land.lhs.true64, !dbg !2891

land.lhs.true64:                                  ; preds = %for.end
  %23 = load i8, i8* %allows_reg, align 1, !dbg !2892
  %tobool65 = icmp eq i8 %23, 0, !dbg !2892
  br i1 %tobool65, label %if.then66, label %cleanup69, !dbg !2893

if.then66:                                        ; preds = %land.lhs.true64
  %call67 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !2894
  br label %cleanup69, !dbg !2894

cleanup69.loopexit.us-lcssa:                      ; preds = %cleanup
  br label %cleanup69.loopexit, !dbg !2881

cleanup69.loopexit:                               ; preds = %cleanup69.loopexit.us-lcssa.us, %cleanup69.loopexit.us-lcssa
  br label %cleanup69, !dbg !2881

cleanup69:                                        ; preds = %cleanup69.loopexit, %land.lhs.true64, %for.end, %if.then66, %if.then46, %land.lhs.true.us, %if.then
  %retval.4 = phi i8 [ 0, %if.then46 ], [ 0, %land.lhs.true.us ], [ 0, %if.then ], [ 1, %if.then66 ], [ 1, %land.lhs.true64 ], [ 1, %for.end ], [ 0, %cleanup69.loopexit ], !dbg !2803
  ret i8 %retval.4, !dbg !2881
}

declare dso_local i64 @strtoul(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @tree_overlaps_hard_reg_set(%union.tree_node* %decl, i64* %regs) local_unnamed_addr #5 !dbg !2895 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2900, metadata !DIExpression()), !dbg !2902
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  call void @llvm.dbg.value(metadata i64* %regs, metadata !2901, metadata !DIExpression()), !dbg !2902
  %0 = bitcast i64* %regs to i8*, !dbg !2903
  call void @llvm.dbg.value(metadata %union.tree_node** %decl.addr, metadata !2900, metadata !DIExpression(DW_OP_deref)), !dbg !2902
  %call = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %decl.addr, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @decl_overlaps_hard_reg_set_p, i8* %0, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !2903
  ret %union.tree_node* %call, !dbg !2904
}

declare dso_local %union.tree_node* @walk_tree_1(%union.tree_node**, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @decl_overlaps_hard_reg_set_p(%union.tree_node** %declp, i32* %walk_subtrees, i8* %data) #5 !dbg !2905 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %declp, metadata !2909, metadata !DIExpression()), !dbg !2920
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !2910, metadata !DIExpression()), !dbg !2920
  call void @llvm.dbg.value(metadata i8* %data, metadata !2911, metadata !DIExpression()), !dbg !2920
  %0 = load %union.tree_node*, %union.tree_node** %declp, align 8, !dbg !2921
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !2912, metadata !DIExpression()), !dbg !2920
  %1 = bitcast i8* %data to i64*, !dbg !2922
  call void @llvm.dbg.value(metadata i64* %1, metadata !2913, metadata !DIExpression()), !dbg !2920
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2923
  %bf.load = load i64, i64* %2, align 8, !dbg !2923
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !2924
  %cmp = icmp eq i64 %bf.cast2, 32, !dbg !2924
  br i1 %cmp, label %if.then, label %if.end56, !dbg !2925

if.then:                                          ; preds = %entry
  %hard_register = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !2926
  %3 = bitcast i24* %hard_register to i32*, !dbg !2926
  %bf.load1 = load i32, i32* %3, align 8, !dbg !2926
  %bf.clear2 = and i32 %bf.load1, 2, !dbg !2926
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !2926
  br i1 %tobool, label %if.end56, label %land.lhs.true, !dbg !2927

land.lhs.true:                                    ; preds = %if.then
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2928
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !2928
  %tobool3 = icmp eq %struct.rtx_def* %4, null, !dbg !2928
  br i1 %tobool3, label %cond.false, label %cond.true, !dbg !2928

cond.true:                                        ; preds = %land.lhs.true
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !2928
  br label %cond.end, !dbg !2928

cond.false:                                       ; preds = %land.lhs.true
  tail call void @make_decl_rtl(%union.tree_node* %0) #6, !dbg !2928
  %.phi.trans.insert = bitcast %struct.rtx_def** %rtl to i32**, !dbg !2929
  %cond3.pre = load i32*, i32** %.phi.trans.insert, align 8, !dbg !2928
  %6 = bitcast i32* %cond3.pre to %struct.rtx_def*, !dbg !2928
  br label %cond.end, !dbg !2928

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond226 = phi %struct.rtx_def* [ %6, %cond.false ], [ %4, %cond.true ]
  %7 = phi %struct.rtx_def* [ %6, %cond.false ], [ %4, %cond.true ]
  %cond3 = phi i32* [ %cond3.pre, %cond.false ], [ %5, %cond.true ], !dbg !2928
  %bf.load8 = load i32, i32* %cond3, align 8, !dbg !2928
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !2928
  %cmp10 = icmp eq i32 %bf.clear9, 37, !dbg !2928
  br i1 %cmp10, label %land.lhs.true11, label %if.end56, !dbg !2930

land.lhs.true11:                                  ; preds = %cond.end
  %tobool14 = icmp eq %struct.rtx_def* %7, null, !dbg !2931
  br i1 %tobool14, label %cond.false18, label %cond.true15, !dbg !2931

cond.true15:                                      ; preds = %land.lhs.true11
  br label %cond.end21, !dbg !2931

cond.false18:                                     ; preds = %land.lhs.true11
  tail call void @make_decl_rtl(%union.tree_node* %0) #6, !dbg !2931
  %cond22.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !2931
  br label %cond.end21, !dbg !2931

cond.end21:                                       ; preds = %cond.false18, %cond.true15
  %cond22 = phi %struct.rtx_def* [ %cond22.pre, %cond.false18 ], [ %cond226, %cond.true15 ], !dbg !2931
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %cond22) #7, !dbg !2931
  %cmp23 = icmp ult i32 %call, 53, !dbg !2932
  br i1 %cmp23, label %if.then24, label %if.end56, !dbg !2933

if.then24:                                        ; preds = %cond.end21
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !2934
  %tobool27 = icmp eq %struct.rtx_def* %8, null, !dbg !2934
  br i1 %tobool27, label %cond.false31, label %cond.true28, !dbg !2934

cond.true28:                                      ; preds = %if.then24
  br label %cond.end34, !dbg !2934

cond.false31:                                     ; preds = %if.then24
  tail call void @make_decl_rtl(%union.tree_node* %0) #6, !dbg !2934
  %cond35.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !2934
  br label %cond.end34, !dbg !2934

cond.end34:                                       ; preds = %cond.false31, %cond.true28
  %cond35 = phi %struct.rtx_def* [ %cond35.pre, %cond.false31 ], [ %8, %cond.true28 ], !dbg !2934
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond35, metadata !2915, metadata !DIExpression()), !dbg !2935
  %9 = load i64, i64* %1, align 8, !dbg !2936
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond35, i64 0, i32 0, !dbg !2938
  %bf.load36 = load i32, i32* %10, align 8, !dbg !2938
  %bf.lshr37 = lshr i32 %bf.load36, 16, !dbg !2938
  %bf.clear38 = and i32 %bf.lshr37, 255, !dbg !2938
  %call39 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %cond35) #7, !dbg !2939
  %call40 = tail call fastcc zeroext i8 @overlaps_hard_reg_set_p(i64 %9, i32 %bf.clear38, i32 %call39) #7, !dbg !2940
  %tobool41 = icmp eq i8 %call40, 0, !dbg !2940
  br i1 %tobool41, label %if.end56, label %cleanup57

if.end56:                                         ; preds = %if.then, %entry, %cond.end, %cond.end21, %cond.end34
  br label %cleanup57, !dbg !2941

cleanup57:                                        ; preds = %cond.end34, %if.end56
  %retval.1 = phi %union.tree_node* [ %0, %cond.end34 ], [ null, %if.end56 ], !dbg !2920
  ret %union.tree_node* %retval.1, !dbg !2942
}

; Function Attrs: nounwind uwtable
define dso_local void @expand_asm_stmt(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !2943 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2947, metadata !DIExpression()), !dbg !2962
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #7, !dbg !2963
  call void @llvm.dbg.value(metadata i32 %call, metadata !2961, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2957, metadata !DIExpression()), !dbg !2962
  %call1 = tail call fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %stmt) #7, !dbg !2964
  %conv = zext i32 %call1 to i64, !dbg !2964
  call void @llvm.dbg.value(metadata i64 %conv, metadata !2954, metadata !DIExpression()), !dbg !2962
  %cmp = icmp eq i32 %call1, 0, !dbg !2965
  br i1 %cmp, label %if.end, label %if.then, !dbg !2967

if.then:                                          ; preds = %entry
  %call3 = tail call fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !2968
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !2957, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !2951, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i64 1, metadata !2953, metadata !DIExpression()), !dbg !2962
  br label %for.cond, !dbg !2970

for.cond:                                         ; preds = %for.body, %if.then
  %i.0 = phi i64 [ 1, %if.then ], [ %inc, %for.body ], !dbg !2972
  %t.0 = phi %union.tree_node* [ %call3, %if.then ], [ %call7, %for.body ], !dbg !2973
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !2951, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !2953, metadata !DIExpression()), !dbg !2962
  %exitcond3 = icmp eq i64 %i.0, %conv, !dbg !2974
  br i1 %exitcond3, label %if.end.loopexit, label %for.body, !dbg !2976

for.body:                                         ; preds = %for.cond
  %conv6 = trunc i64 %i.0 to i32, !dbg !2977
  %call7 = tail call fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %stmt, i32 %conv6) #7, !dbg !2978
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2979
  store %union.tree_node* %call7, %union.tree_node** %chain, align 8, !dbg !2980
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !2951, metadata !DIExpression()), !dbg !2962
  %inc = add nuw nsw i64 %i.0, 1, !dbg !2981
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2953, metadata !DIExpression()), !dbg !2962
  br label %for.cond, !dbg !2982, !llvm.loop !2983

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !2985

if.end:                                           ; preds = %if.end.loopexit, %entry
  %out.0 = phi %union.tree_node* [ null, %entry ], [ %call3, %if.end.loopexit ], !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* %out.0, metadata !2957, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2958, metadata !DIExpression()), !dbg !2962
  %call8 = tail call fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %stmt) #7, !dbg !2985
  %conv9 = zext i32 %call8 to i64, !dbg !2985
  call void @llvm.dbg.value(metadata i64 %conv9, metadata !2954, metadata !DIExpression()), !dbg !2962
  %cmp10 = icmp eq i32 %call8, 0, !dbg !2986
  br i1 %cmp10, label %if.end25, label %if.then12, !dbg !2988

if.then12:                                        ; preds = %if.end
  %call13 = tail call fastcc %union.tree_node* @gimple_asm_input_op(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !2989
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !2958, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !2951, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i64 1, metadata !2953, metadata !DIExpression()), !dbg !2962
  br label %for.cond14, !dbg !2991

for.cond14:                                       ; preds = %for.body17, %if.then12
  %i.1 = phi i64 [ 1, %if.then12 ], [ %inc23, %for.body17 ], !dbg !2993
  %t.1 = phi %union.tree_node* [ %call13, %if.then12 ], [ %call19, %for.body17 ], !dbg !2994
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !2951, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !2953, metadata !DIExpression()), !dbg !2962
  %exitcond2 = icmp eq i64 %i.1, %conv9, !dbg !2995
  br i1 %exitcond2, label %if.end25.loopexit, label %for.body17, !dbg !2997

for.body17:                                       ; preds = %for.cond14
  %conv18 = trunc i64 %i.1 to i32, !dbg !2998
  %call19 = tail call fastcc %union.tree_node* @gimple_asm_input_op(%union.gimple_statement_d* %stmt, i32 %conv18) #7, !dbg !2999
  %chain21 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3000
  store %union.tree_node* %call19, %union.tree_node** %chain21, align 8, !dbg !3001
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !2951, metadata !DIExpression()), !dbg !2962
  %inc23 = add nuw nsw i64 %i.1, 1, !dbg !3002
  call void @llvm.dbg.value(metadata i64 %inc23, metadata !2953, metadata !DIExpression()), !dbg !2962
  br label %for.cond14, !dbg !3003, !llvm.loop !3004

if.end25.loopexit:                                ; preds = %for.cond14
  br label %if.end25, !dbg !3006

if.end25:                                         ; preds = %if.end25.loopexit, %if.end
  %in.0 = phi %union.tree_node* [ null, %if.end ], [ %call13, %if.end25.loopexit ], !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* %in.0, metadata !2958, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2959, metadata !DIExpression()), !dbg !2962
  %call26 = tail call fastcc i32 @gimple_asm_nclobbers(%union.gimple_statement_d* %stmt) #7, !dbg !3006
  %conv27 = zext i32 %call26 to i64, !dbg !3006
  call void @llvm.dbg.value(metadata i64 %conv27, metadata !2954, metadata !DIExpression()), !dbg !2962
  %cmp28 = icmp eq i32 %call26, 0, !dbg !3007
  br i1 %cmp28, label %if.end43, label %if.then30, !dbg !3009

if.then30:                                        ; preds = %if.end25
  %call31 = tail call fastcc %union.tree_node* @gimple_asm_clobber_op(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !3010
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !2959, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !2951, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i64 1, metadata !2953, metadata !DIExpression()), !dbg !2962
  br label %for.cond32, !dbg !3012

for.cond32:                                       ; preds = %for.body35, %if.then30
  %i.2 = phi i64 [ 1, %if.then30 ], [ %inc41, %for.body35 ], !dbg !3014
  %t.2 = phi %union.tree_node* [ %call31, %if.then30 ], [ %call37, %for.body35 ], !dbg !3015
  call void @llvm.dbg.value(metadata %union.tree_node* %t.2, metadata !2951, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i64 %i.2, metadata !2953, metadata !DIExpression()), !dbg !2962
  %exitcond1 = icmp eq i64 %i.2, %conv27, !dbg !3016
  br i1 %exitcond1, label %if.end43.loopexit, label %for.body35, !dbg !3018

for.body35:                                       ; preds = %for.cond32
  %conv36 = trunc i64 %i.2 to i32, !dbg !3019
  %call37 = tail call fastcc %union.tree_node* @gimple_asm_clobber_op(%union.gimple_statement_d* %stmt, i32 %conv36) #7, !dbg !3020
  %chain39 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3021
  store %union.tree_node* %call37, %union.tree_node** %chain39, align 8, !dbg !3022
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !2951, metadata !DIExpression()), !dbg !2962
  %inc41 = add nuw nsw i64 %i.2, 1, !dbg !3023
  call void @llvm.dbg.value(metadata i64 %inc41, metadata !2953, metadata !DIExpression()), !dbg !2962
  br label %for.cond32, !dbg !3024, !llvm.loop !3025

if.end43.loopexit:                                ; preds = %for.cond32
  br label %if.end43, !dbg !3027

if.end43:                                         ; preds = %if.end43.loopexit, %if.end25
  %cl.0 = phi %union.tree_node* [ null, %if.end25 ], [ %call31, %if.end43.loopexit ], !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* %cl.0, metadata !2959, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2960, metadata !DIExpression()), !dbg !2962
  %call44 = tail call fastcc i32 @gimple_asm_nlabels(%union.gimple_statement_d* %stmt) #7, !dbg !3027
  %conv45 = zext i32 %call44 to i64, !dbg !3027
  call void @llvm.dbg.value(metadata i64 %conv45, metadata !2954, metadata !DIExpression()), !dbg !2962
  %cmp46 = icmp eq i32 %call44, 0, !dbg !3028
  br i1 %cmp46, label %if.end61, label %if.then48, !dbg !3030

if.then48:                                        ; preds = %if.end43
  %call49 = tail call fastcc %union.tree_node* @gimple_asm_label_op(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !3031
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !2960, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !2951, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i64 1, metadata !2953, metadata !DIExpression()), !dbg !2962
  br label %for.cond50, !dbg !3033

for.cond50:                                       ; preds = %for.body53, %if.then48
  %i.3 = phi i64 [ 1, %if.then48 ], [ %inc59, %for.body53 ], !dbg !3035
  %t.3 = phi %union.tree_node* [ %call49, %if.then48 ], [ %call55, %for.body53 ], !dbg !3036
  call void @llvm.dbg.value(metadata %union.tree_node* %t.3, metadata !2951, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i64 %i.3, metadata !2953, metadata !DIExpression()), !dbg !2962
  %exitcond = icmp eq i64 %i.3, %conv45, !dbg !3037
  br i1 %exitcond, label %if.end61.loopexit, label %for.body53, !dbg !3039

for.body53:                                       ; preds = %for.cond50
  %conv54 = trunc i64 %i.3 to i32, !dbg !3040
  %call55 = tail call fastcc %union.tree_node* @gimple_asm_label_op(%union.gimple_statement_d* %stmt, i32 %conv54) #7, !dbg !3041
  %chain57 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3042
  store %union.tree_node* %call55, %union.tree_node** %chain57, align 8, !dbg !3043
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !2951, metadata !DIExpression()), !dbg !2962
  %inc59 = add nuw nsw i64 %i.3, 1, !dbg !3044
  call void @llvm.dbg.value(metadata i64 %inc59, metadata !2953, metadata !DIExpression()), !dbg !2962
  br label %for.cond50, !dbg !3045, !llvm.loop !3046

if.end61.loopexit:                                ; preds = %for.cond50
  br label %if.end61, !dbg !3048

if.end61:                                         ; preds = %if.end61.loopexit, %if.end43
  %labels.0 = phi %union.tree_node* [ null, %if.end43 ], [ %call49, %if.end61.loopexit ], !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* %labels.0, metadata !2960, metadata !DIExpression()), !dbg !2962
  %call62 = tail call fastcc i8* @gimple_asm_string(%union.gimple_statement_d* %stmt) #7, !dbg !3048
  call void @llvm.dbg.value(metadata i8* %call62, metadata !2955, metadata !DIExpression()), !dbg !2962
  %call63 = tail call i64 @strlen(i8* %call62) #6, !dbg !3049
  %conv64 = trunc i64 %call63 to i32, !dbg !3049
  %call65 = tail call %union.tree_node* @build_string(i32 %conv64, i8* %call62) #6, !dbg !3050
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !2956, metadata !DIExpression()), !dbg !2962
  %call66 = tail call fastcc zeroext i8 @gimple_asm_input_p(%union.gimple_statement_d* %stmt) #7, !dbg !3051
  %tobool = icmp eq i8 %call66, 0, !dbg !3051
  br i1 %tobool, label %if.end70, label %if.then67, !dbg !3053

if.then67:                                        ; preds = %if.end61
  %call68 = tail call fastcc zeroext i8 @gimple_asm_volatile_p(%union.gimple_statement_d* %stmt) #7, !dbg !3054
  %conv69 = zext i8 %call68 to i32, !dbg !3054
  tail call fastcc void @expand_asm_loc(%union.tree_node* %call65, i32 %conv69, i32 %call) #7, !dbg !3056
  br label %cleanup.cont, !dbg !3057

if.end70:                                         ; preds = %if.end61
  call void @llvm.dbg.value(metadata %union.tree_node* %out.0, metadata !2949, metadata !DIExpression()), !dbg !2962
  %call71 = tail call fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %stmt) #7, !dbg !3058
  call void @llvm.dbg.value(metadata i32 %call71, metadata !2948, metadata !DIExpression()), !dbg !2962
  %conv72 = sext i32 %call71 to i64, !dbg !3059
  %0 = alloca %union.tree_node*, i64 %conv72, align 16, !dbg !3059
  call void @llvm.dbg.value(metadata %union.tree_node** %0, metadata !2952, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i64 0, metadata !2953, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* %out.0, metadata !2950, metadata !DIExpression()), !dbg !2962
  br label %for.cond73, !dbg !3060

for.cond73:                                       ; preds = %for.body75, %if.end70
  %i.4 = phi i64 [ 0, %if.end70 ], [ %inc79, %for.body75 ], !dbg !3062
  %tail.0 = phi %union.tree_node* [ %out.0, %if.end70 ], [ %5, %for.body75 ], !dbg !3062
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.0, metadata !2950, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i64 %i.4, metadata !2953, metadata !DIExpression()), !dbg !2962
  %tobool74 = icmp eq %union.tree_node* %tail.0, null, !dbg !3063
  br i1 %tobool74, label %for.end80, label %for.body75, !dbg !3063

for.body75:                                       ; preds = %for.cond73
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3064
  %2 = bitcast %union.tree_node** %1 to i64*, !dbg !3064
  %3 = load i64, i64* %2, align 8, !dbg !3064
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %0, i64 %i.4, !dbg !3066
  %4 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !3067
  store i64 %3, i64* %4, align 8, !dbg !3067
  %chain78 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3068
  %5 = load %union.tree_node*, %union.tree_node** %chain78, align 8, !dbg !3068
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !2950, metadata !DIExpression()), !dbg !2962
  %inc79 = add i64 %i.4, 1, !dbg !3069
  call void @llvm.dbg.value(metadata i64 %inc79, metadata !2953, metadata !DIExpression()), !dbg !2962
  br label %for.cond73, !dbg !3070, !llvm.loop !3071

for.end80:                                        ; preds = %for.cond73
  %call81 = tail call fastcc zeroext i8 @gimple_asm_volatile_p(%union.gimple_statement_d* %stmt) #7, !dbg !3073
  %conv82 = zext i8 %call81 to i32, !dbg !3073
  tail call fastcc void @expand_asm_operands(%union.tree_node* %call65, %union.tree_node* %out.0, %union.tree_node* %in.0, %union.tree_node* %cl.0, %union.tree_node* %labels.0, i32 %conv82, i32 %call) #7, !dbg !3074
  call void @llvm.dbg.value(metadata i64 0, metadata !2953, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata %union.tree_node* %out.0, metadata !2950, metadata !DIExpression()), !dbg !2962
  br label %for.cond83, !dbg !3075

for.cond83:                                       ; preds = %for.inc99, %for.end80
  %i.5 = phi i64 [ 0, %for.end80 ], [ %inc102, %for.inc99 ], !dbg !3077
  %tail.1 = phi %union.tree_node* [ %out.0, %for.end80 ], [ %11, %for.inc99 ], !dbg !3077
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.1, metadata !2950, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata i64 %i.5, metadata !2953, metadata !DIExpression()), !dbg !2962
  %tobool84 = icmp eq %union.tree_node* %tail.1, null, !dbg !3078
  br i1 %tobool84, label %cleanup.cont.loopexit, label %for.body85, !dbg !3078

for.body85:                                       ; preds = %for.cond83
  %arrayidx86 = getelementptr inbounds %union.tree_node*, %union.tree_node** %0, i64 %i.5, !dbg !3079
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx86, align 8, !dbg !3079
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3083
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !3083
  %cmp89 = icmp eq %union.tree_node* %6, %8, !dbg !3084
  br i1 %cmp89, label %for.inc99, label %if.then91, !dbg !3085

if.then91:                                        ; preds = %for.body85
  %9 = ptrtoint %union.tree_node* %6 to i64, !dbg !3085
  tail call void @expand_assignment(%union.tree_node* %6, %union.tree_node* %8, i8 zeroext 0) #6, !dbg !3086
  tail call void @free_temp_slots() #6, !dbg !3088
  %10 = bitcast %union.tree_node** %7 to i64*, !dbg !3089
  store i64 %9, i64* %10, align 8, !dbg !3089
  br label %for.inc99, !dbg !3090

for.inc99:                                        ; preds = %for.body85, %if.then91
  %chain101 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3091
  %11 = load %union.tree_node*, %union.tree_node** %chain101, align 8, !dbg !3091
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !2950, metadata !DIExpression()), !dbg !2962
  %inc102 = add i64 %i.5, 1, !dbg !3092
  call void @llvm.dbg.value(metadata i64 %inc102, metadata !2953, metadata !DIExpression()), !dbg !2962
  br label %for.cond83, !dbg !3093, !llvm.loop !3094

cleanup.cont.loopexit:                            ; preds = %for.cond83
  br label %cleanup.cont, !dbg !3096

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.then67
  ret void, !dbg !3096
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3097 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3102, metadata !DIExpression()), !dbg !3103
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !3104
  %0 = load i32, i32* %location, align 8, !dbg !3104
  ret i32 %0, !dbg !3105
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3106 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3110, metadata !DIExpression()), !dbg !3111
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !3112
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !3113
  %0 = load i8, i8* %no, align 1, !dbg !3113
  %conv = zext i8 %0 to i32, !dbg !3114
  ret i32 %conv, !dbg !3115
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !3116 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3120, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata i32 %index, metadata !3121, metadata !DIExpression()), !dbg !3122
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !3123
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !3123
  %0 = load i8, i8* %no, align 1, !dbg !3123
  %conv = zext i8 %0 to i32, !dbg !3123
  %cmp = icmp ult i32 %conv, %index, !dbg !3123
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3123

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i32 2655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3123
  br label %cond.end, !dbg !3123

cond.end:                                         ; preds = %entry, %cond.true
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !3124
  %1 = bitcast %union.tree_node*** %ni to i8*, !dbg !3124
  %2 = load i8, i8* %1, align 8, !dbg !3124
  %conv3 = zext i8 %2 to i32, !dbg !3125
  %add = add i32 %conv3, %index, !dbg !3126
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !3127
  ret %union.tree_node* %call, !dbg !3128
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3129 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3131, metadata !DIExpression()), !dbg !3132
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !3133
  %0 = bitcast %union.tree_node*** %ni to i8*, !dbg !3133
  %1 = load i8, i8* %0, align 8, !dbg !3133
  %conv = zext i8 %1 to i32, !dbg !3134
  ret i32 %conv, !dbg !3135
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_input_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !3136 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3138, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.value(metadata i32 %index, metadata !3139, metadata !DIExpression()), !dbg !3140
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !3141
  %0 = bitcast %union.tree_node*** %ni to i8*, !dbg !3141
  %1 = load i8, i8* %0, align 8, !dbg !3141
  %conv = zext i8 %1 to i32, !dbg !3141
  %cmp = icmp ult i32 %conv, %index, !dbg !3141
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3141

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i32 2622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3141
  br label %cond.end, !dbg !3141

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %index) #7, !dbg !3142
  ret %union.tree_node* %call, !dbg !3143
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_nclobbers(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3144 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3146, metadata !DIExpression()), !dbg !3147
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !3148
  %nc = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 4, !dbg !3149
  %0 = load i8, i8* %nc, align 2, !dbg !3149
  %conv = zext i8 %0 to i32, !dbg !3150
  ret i32 %conv, !dbg !3151
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_clobber_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !3152 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3154, metadata !DIExpression()), !dbg !3156
  call void @llvm.dbg.value(metadata i32 %index, metadata !3155, metadata !DIExpression()), !dbg !3156
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !3157
  %nc = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 4, !dbg !3157
  %0 = load i8, i8* %nc, align 2, !dbg !3157
  %conv = zext i8 %0 to i32, !dbg !3157
  %cmp = icmp ult i32 %conv, %index, !dbg !3157
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3157

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i32 2688, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3157
  br label %cond.end, !dbg !3157

cond.end:                                         ; preds = %entry, %cond.true
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !3158
  %1 = bitcast %union.tree_node*** %ni to i8*, !dbg !3158
  %2 = load i8, i8* %1, align 8, !dbg !3158
  %conv3 = zext i8 %2 to i32, !dbg !3159
  %add = add i32 %conv3, %index, !dbg !3160
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !3161
  %3 = load i8, i8* %no, align 1, !dbg !3161
  %conv5 = zext i8 %3 to i32, !dbg !3162
  %add6 = add i32 %add, %conv5, !dbg !3163
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add6) #7, !dbg !3164
  ret %union.tree_node* %call, !dbg !3165
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_nlabels(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3166 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3168, metadata !DIExpression()), !dbg !3169
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !3170
  %nl = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 5, !dbg !3171
  %0 = load i8, i8* %nl, align 1, !dbg !3171
  %conv = zext i8 %0 to i32, !dbg !3172
  ret i32 %conv, !dbg !3173
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_label_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !3174 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3176, metadata !DIExpression()), !dbg !3178
  call void @llvm.dbg.value(metadata i32 %index, metadata !3177, metadata !DIExpression()), !dbg !3178
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !3179
  %nl = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 5, !dbg !3179
  %0 = load i8, i8* %nl, align 1, !dbg !3179
  %conv = zext i8 %0 to i32, !dbg !3179
  %cmp = icmp ult i32 %conv, %index, !dbg !3179
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3179

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i32 2710, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3179
  br label %cond.end, !dbg !3179

cond.end:                                         ; preds = %entry, %cond.true
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !3180
  %1 = bitcast %union.tree_node*** %ni to i8*, !dbg !3180
  %2 = load i8, i8* %1, align 8, !dbg !3180
  %conv3 = zext i8 %2 to i32, !dbg !3181
  %add = add i32 %conv3, %index, !dbg !3182
  %nc = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 4, !dbg !3183
  %3 = load i8, i8* %nc, align 2, !dbg !3183
  %conv5 = zext i8 %3 to i32, !dbg !3184
  %add6 = add i32 %add, %conv5, !dbg !3185
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add6) #7, !dbg !3186
  ret %union.tree_node* %call, !dbg !3187
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @gimple_asm_string(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3188 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3192, metadata !DIExpression()), !dbg !3193
  %string = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 2, !dbg !3194
  %0 = bitcast %union.anon* %string to i8**, !dbg !3194
  %1 = load i8*, i8** %0, align 8, !dbg !3194
  ret i8* %1, !dbg !3195
}

declare dso_local %union.tree_node* @build_string(i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_asm_input_p(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3196 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3200, metadata !DIExpression()), !dbg !3201
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !3202
  %bf.load = load i32, i32* %0, align 8, !dbg !3202
  %and = lshr i32 %bf.load, 16, !dbg !3203
  %1 = trunc i32 %and to i8, !dbg !3203
  %2 = and i8 %1, 1, !dbg !3203
  ret i8 %2, !dbg !3204
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_asm_loc(%union.tree_node* %string, i32 %vol, i32 %locus) unnamed_addr #5 !dbg !3205 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %string, metadata !3209, metadata !DIExpression()), !dbg !3213
  call void @llvm.dbg.value(metadata i32 %vol, metadata !3210, metadata !DIExpression()), !dbg !3213
  call void @llvm.dbg.value(metadata i32 %locus, metadata !3211, metadata !DIExpression()), !dbg !3213
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %string, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3214
  %bf.load = load i64, i64* %0, align 8, !dbg !3214
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3216
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !3216
  br i1 %cmp, label %if.then, label %if.end, !dbg !3217

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %string, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3218
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3218
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3209, metadata !DIExpression()), !dbg !3213
  br label %if.end, !dbg !3219

if.end:                                           ; preds = %if.then, %entry
  %string.addr.0 = phi %union.tree_node* [ %1, %if.then ], [ %string, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %string.addr.0, metadata !3209, metadata !DIExpression()), !dbg !3213
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %string.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3220
  %arraydecay = bitcast i32* %str to i8*, !dbg !3220
  %call = tail call i8* @ggc_alloc_string(i8* nonnull %arraydecay, i32 -1) #6, !dbg !3220
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_si_stat(i32 16, i32 0, i8* %call, i32 %locus) #6, !dbg !3220
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !3212, metadata !DIExpression()), !dbg !3213
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2, i64 0, i32 0, !dbg !3221
  %bf.load3 = load i32, i32* %2, align 8, !dbg !3222
  %bf.value = shl i32 %vol, 27, !dbg !3222
  %bf.shl = and i32 %bf.value, 134217728, !dbg !3222
  %bf.clear4 = and i32 %bf.load3, -134217729, !dbg !3222
  %bf.set = or i32 %bf.clear4, %bf.shl, !dbg !3222
  store i32 %bf.set, i32* %2, align 8, !dbg !3222
  %call5 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call2) #6, !dbg !3223
  ret void, !dbg !3224
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_asm_volatile_p(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3225 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3227, metadata !DIExpression()), !dbg !3228
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !3229
  %bf.load = load i32, i32* %0, align 8, !dbg !3229
  %and = lshr i32 %bf.load, 17, !dbg !3230
  %1 = trunc i32 %and to i8, !dbg !3230
  %2 = and i8 %1, 1, !dbg !3230
  ret i8 %2, !dbg !3231
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_asm_operands(%union.tree_node* %string, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %clobbers, %union.tree_node* %labels, i32 %vol, i32 %locus) unnamed_addr #5 !dbg !3232 {
entry:
  %clobbered_regs = alloca i64, align 8
  %constraint = alloca i8*, align 8
  %is_inout = alloca i8, align 1
  %allows_reg = alloca i8, align 1
  %allows_mem = alloca i8, align 1
  %allows_reg183 = alloca i8, align 1
  %allows_mem184 = alloca i8, align 1
  %constraint185 = alloca i8*, align 8
  %is_inout228 = alloca i8, align 1
  %allows_reg229 = alloca i8, align 1
  %allows_mem230 = alloca i8, align 1
  %allows_reg456 = alloca i8, align 1
  %allows_mem457 = alloca i8, align 1
  %constraint458 = alloca i8*, align 8
  %buffer = alloca [16 x i8], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %string, metadata !3236, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs, metadata !3237, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs, metadata !3238, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %clobbers, metadata !3239, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %labels, metadata !3240, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %vol, metadata !3241, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %locus, metadata !3242, metadata !DIExpression()), !dbg !3338
  %call = tail call i32 @list_length(%union.tree_node* %inputs) #6, !dbg !3339
  call void @llvm.dbg.value(metadata i32 %call, metadata !3247, metadata !DIExpression()), !dbg !3338
  %call1 = tail call i32 @list_length(%union.tree_node* %outputs) #6, !dbg !3340
  call void @llvm.dbg.value(metadata i32 %call1, metadata !3248, metadata !DIExpression()), !dbg !3338
  %call2 = tail call i32 @list_length(%union.tree_node* %labels) #6, !dbg !3341
  call void @llvm.dbg.value(metadata i32 %call2, metadata !3249, metadata !DIExpression()), !dbg !3338
  %0 = bitcast i64* %clobbered_regs to i8*, !dbg !3342
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3342
  call void @llvm.dbg.value(metadata i32 0, metadata !3253, metadata !DIExpression()), !dbg !3338
  %conv = sext i32 %call1 to i64, !dbg !3343
  %1 = alloca %struct.rtx_def*, i64 %conv, align 16, !dbg !3343
  call void @llvm.dbg.value(metadata %struct.rtx_def** %1, metadata !3257, metadata !DIExpression()), !dbg !3338
  %2 = alloca i32, i64 %conv, align 16, !dbg !3344
  call void @llvm.dbg.value(metadata i32* %2, metadata !3258, metadata !DIExpression()), !dbg !3338
  %3 = alloca %struct.rtx_def*, i64 %conv, align 16, !dbg !3345
  call void @llvm.dbg.value(metadata %struct.rtx_def** %3, metadata !3259, metadata !DIExpression()), !dbg !3338
  %4 = alloca i32, i64 %conv, align 16, !dbg !3346
  call void @llvm.dbg.value(metadata i32* %4, metadata !3260, metadata !DIExpression()), !dbg !3338
  %add = add nsw i32 %call1, %call, !dbg !3347
  %conv9 = sext i32 %add to i64, !dbg !3347
  %5 = alloca i8*, i64 %conv9, align 16, !dbg !3347
  call void @llvm.dbg.value(metadata i8** %5, metadata !3261, metadata !DIExpression()), !dbg !3338
  %6 = load i32, i32* @generating_concat_p, align 4, !dbg !3348
  call void @llvm.dbg.value(metadata i32 %6, metadata !3262, metadata !DIExpression()), !dbg !3338
  %cmp = icmp eq i32 %call1, 0, !dbg !3349
  %call12 = tail call fastcc zeroext i8 @check_operand_nalternatives(%union.tree_node* %outputs, %union.tree_node* %inputs) #7, !dbg !3351
  %tobool = icmp eq i8 %call12, 0, !dbg !3351
  br i1 %tobool, label %cleanup970, label %if.end14, !dbg !3353

if.end14:                                         ; preds = %entry
  %call15 = tail call %union.tree_node* @resolve_asm_operand_names(%union.tree_node* %string, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %labels) #7, !dbg !3354
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !3236, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 0, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs, metadata !3255, metadata !DIExpression()), !dbg !3338
  br label %for.cond, !dbg !3355

for.cond:                                         ; preds = %for.body, %if.end14
  %indvars.iv80 = phi i64 [ %indvars.iv.next81, %for.body ], [ 0, %if.end14 ], !dbg !3357
  %t.0 = phi %union.tree_node* [ %12, %for.body ], [ %outputs, %if.end14 ], !dbg !3357
  call void @llvm.dbg.value(metadata i64 %indvars.iv80, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3255, metadata !DIExpression()), !dbg !3338
  %tobool16 = icmp eq %union.tree_node* %t.0, null, !dbg !3358
  br i1 %tobool16, label %for.cond19.preheader, label %for.body, !dbg !3358

for.cond19.preheader:                             ; preds = %for.cond
  %indvars.iv80.lcssa = phi i64 [ %indvars.iv80, %for.cond ], !dbg !3357
  call void @llvm.dbg.value(metadata i64 %indvars.iv80.lcssa, metadata !3256, metadata !DIExpression()), !dbg !3338
  %7 = and i64 %indvars.iv80.lcssa, 4294967295, !dbg !3359
  call void @llvm.dbg.value(metadata i64 %indvars.iv80.lcssa, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i64 %indvars.iv80.lcssa, metadata !3256, metadata !DIExpression()), !dbg !3338
  br label %for.cond19, !dbg !3359

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3361
  %8 = bitcast i32* %purpose to %struct.tree_list**, !dbg !3361
  %9 = load %struct.tree_list*, %struct.tree_list** %8, align 8, !dbg !3361
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %9, i64 0, i32 2, !dbg !3361
  %10 = bitcast %union.tree_node** %value to %struct.tree_string**, !dbg !3361
  %11 = load %struct.tree_string*, %struct.tree_string** %10, align 8, !dbg !3361
  %arraydecay = getelementptr inbounds %struct.tree_string, %struct.tree_string* %11, i64 0, i32 2, i64 0, !dbg !3361
  %arrayidx = getelementptr inbounds i8*, i8** %5, i64 %indvars.iv80, !dbg !3363
  store i8* %arraydecay, i8** %arrayidx, align 8, !dbg !3364
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3365
  %12 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !3365
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !3255, metadata !DIExpression()), !dbg !3338
  %indvars.iv.next81 = add nuw i64 %indvars.iv80, 1, !dbg !3366
  call void @llvm.dbg.value(metadata i32 undef, metadata !3256, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3338
  br label %for.cond, !dbg !3367, !llvm.loop !3368

for.cond19:                                       ; preds = %for.cond19.preheader, %for.body21
  %indvars.iv78 = phi i64 [ %7, %for.cond19.preheader ], [ %indvars.iv.next79, %for.body21 ], !dbg !3370
  %t.1 = phi %union.tree_node* [ %inputs, %for.cond19.preheader ], [ %17, %for.body21 ], !dbg !3370
  call void @llvm.dbg.value(metadata i64 %indvars.iv78, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !3255, metadata !DIExpression()), !dbg !3338
  %tobool20 = icmp eq %union.tree_node* %t.1, null, !dbg !3359
  br i1 %tobool20, label %for.end35, label %for.body21, !dbg !3359

for.body21:                                       ; preds = %for.cond19
  %purpose23 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3371
  %13 = bitcast i32* %purpose23 to %struct.tree_list**, !dbg !3371
  %14 = load %struct.tree_list*, %struct.tree_list** %13, align 8, !dbg !3371
  %value25 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %14, i64 0, i32 2, !dbg !3371
  %15 = bitcast %union.tree_node** %value25 to %struct.tree_string**, !dbg !3371
  %16 = load %struct.tree_string*, %struct.tree_string** %15, align 8, !dbg !3371
  %arraydecay28 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %16, i64 0, i32 2, i64 0, !dbg !3371
  %arrayidx30 = getelementptr inbounds i8*, i8** %5, i64 %indvars.iv78, !dbg !3373
  store i8* %arraydecay28, i8** %arrayidx30, align 8, !dbg !3374
  %chain33 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3375
  %17 = load %union.tree_node*, %union.tree_node** %chain33, align 8, !dbg !3375
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !3255, metadata !DIExpression()), !dbg !3338
  %indvars.iv.next79 = add nuw i64 %indvars.iv78, 1, !dbg !3376
  call void @llvm.dbg.value(metadata i32 undef, metadata !3256, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3338
  br label %for.cond19, !dbg !3377, !llvm.loop !3378

for.end35:                                        ; preds = %for.cond19
  %18 = load %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 79), align 8, !dbg !3380
  %call36 = tail call %union.tree_node* %18(%union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %clobbers) #6, !dbg !3381
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !3239, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 0, metadata !3251, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i64 0, metadata !3252, metadata !DIExpression()), !dbg !3338
  store i64 0, i64* %clobbered_regs, align 8, !dbg !3382
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !3254, metadata !DIExpression()), !dbg !3338
  br label %for.cond37, !dbg !3383

for.cond37:                                       ; preds = %for.inc78, %for.end35
  %19 = phi i64 [ 0, %for.end35 ], [ %29, %for.inc78 ]
  %nclobbers.0 = phi i32 [ 0, %for.end35 ], [ %nclobbers.2, %for.inc78 ], !dbg !3384
  %tail.0 = phi %union.tree_node* [ %call36, %for.end35 ], [ %30, %for.inc78 ], !dbg !3385
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.0, metadata !3254, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %nclobbers.0, metadata !3251, metadata !DIExpression()), !dbg !3338
  %tobool38 = icmp eq %union.tree_node* %tail.0, null, !dbg !3386
  br i1 %tobool38, label %for.cond82.preheader, label %for.body39, !dbg !3386

for.cond82.preheader:                             ; preds = %for.cond37
  %nclobbers.0.lcssa = phi i32 [ %nclobbers.0, %for.cond37 ], !dbg !3384
  call void @llvm.dbg.value(metadata i32 %nclobbers.0.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %nclobbers.0.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %nclobbers.0.lcssa, metadata !3251, metadata !DIExpression()), !dbg !3338
  %20 = bitcast i8** %constraint to i8*, !dbg !3387
  %21 = bitcast i8** %constraint to i64*, !dbg !3387
  br label %for.cond82, !dbg !3388

for.body39:                                       ; preds = %for.cond37
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3389
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !3389
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3391
  %cmp42 = icmp eq %union.tree_node* %23, %24, !dbg !3392
  br i1 %cmp42, label %cleanup, label %if.end45, !dbg !3393

if.end45:                                         ; preds = %for.body39
  %arraydecay50 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3394
  %25 = bitcast i32* %arraydecay50 to i8*, !dbg !3394
  call void @llvm.dbg.value(metadata i8* %25, metadata !3263, metadata !DIExpression()), !dbg !3395
  %call51 = tail call i32 @decode_reg_name(i8* nonnull %25) #6, !dbg !3396
  call void @llvm.dbg.value(metadata i32 %call51, metadata !3256, metadata !DIExpression()), !dbg !3338
  %cmp52 = icmp sgt i32 %call51, -1, !dbg !3397
  %cmp54 = icmp eq i32 %call51, -4, !dbg !3399
  %or.cond = or i1 %cmp52, %cmp54, !dbg !3400
  br i1 %or.cond, label %if.then56, label %if.else, !dbg !3400

if.then56:                                        ; preds = %if.end45
  %inc57 = add nsw i32 %nclobbers.0, 1, !dbg !3401
  call void @llvm.dbg.value(metadata i32 %inc57, metadata !3251, metadata !DIExpression()), !dbg !3338
  br label %if.end62, !dbg !3401

if.else:                                          ; preds = %if.end45
  %cmp58 = icmp eq i32 %call51, -2, !dbg !3402
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !3404

if.then60:                                        ; preds = %if.else
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0), i32* nonnull %arraydecay50) #6, !dbg !3405
  br label %if.end62, !dbg !3405

if.end62:                                         ; preds = %if.else, %if.then60, %if.then56
  %nclobbers.1 = phi i32 [ %inc57, %if.then56 ], [ %nclobbers.0, %if.then60 ], [ %nclobbers.0, %if.else ], !dbg !3338
  call void @llvm.dbg.value(metadata i32 %nclobbers.1, metadata !3251, metadata !DIExpression()), !dbg !3338
  br i1 %cmp52, label %if.then65, label %cleanup, !dbg !3406

if.then65:                                        ; preds = %if.end62
  %26 = load i32, i32* @flag_pic, align 4, !dbg !3407
  %tobool66 = icmp eq i32 %26, 0, !dbg !3407
  br i1 %tobool66, label %cond.end71, label %cond.false, !dbg !3407

cond.false:                                       ; preds = %if.then65
  %27 = load i32, i32* @reload_completed, align 4, !dbg !3407
  %tobool67 = icmp eq i32 %27, 0, !dbg !3407
  br i1 %tobool67, label %cond.end71, label %cond.true68, !dbg !3407

cond.true68:                                      ; preds = %cond.false
  %28 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !3407
  %call69 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %28) #7, !dbg !3407
  br label %cond.end71, !dbg !3407

cond.end71:                                       ; preds = %cond.false, %if.then65, %cond.true68
  %cond72 = phi i32 [ -1, %if.then65 ], [ %call69, %cond.true68 ], [ 3, %cond.false ], !dbg !3407
  %cmp73 = icmp eq i32 %call51, %cond72, !dbg !3411
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !3412

if.then75:                                        ; preds = %cond.end71
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0), i32* nonnull %arraydecay50) #6, !dbg !3413
  br label %cleanup, !dbg !3415

if.end76:                                         ; preds = %cond.end71
  %sh_prom = zext i32 %call51 to i64, !dbg !3416
  %shl = shl i64 1, %sh_prom, !dbg !3416
  call void @llvm.dbg.value(metadata i64 %19, metadata !3252, metadata !DIExpression()), !dbg !3338
  %or = or i64 %19, %shl, !dbg !3416
  call void @llvm.dbg.value(metadata i64 %or, metadata !3252, metadata !DIExpression()), !dbg !3338
  store i64 %or, i64* %clobbered_regs, align 8, !dbg !3416
  br label %cleanup, !dbg !3417

cleanup:                                          ; preds = %if.end62, %if.end76, %for.body39, %if.then75
  %29 = phi i64 [ %19, %if.then75 ], [ %19, %for.body39 ], [ %or, %if.end76 ], [ %19, %if.end62 ]
  %nclobbers.2 = phi i32 [ %nclobbers.1, %if.then75 ], [ %nclobbers.0, %for.body39 ], [ %nclobbers.1, %if.end76 ], [ %nclobbers.1, %if.end62 ], !dbg !3338
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then75 ], [ false, %for.body39 ], [ true, %if.end76 ], [ true, %if.end62 ]
  call void @llvm.dbg.value(metadata i32 %nclobbers.2, metadata !3251, metadata !DIExpression()), !dbg !3338
  br i1 %cleanup.dest.slot.0, label %for.inc78, label %cleanup970.loopexit30

for.inc78:                                        ; preds = %cleanup
  %chain80 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3418
  %30 = load %union.tree_node*, %union.tree_node** %chain80, align 8, !dbg !3418
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !3254, metadata !DIExpression()), !dbg !3338
  br label %for.cond37, !dbg !3419, !llvm.loop !3420

for.cond82:                                       ; preds = %for.cond82.preheader, %for.inc169
  %indvars.iv76 = phi i64 [ 0, %for.cond82.preheader ], [ %indvars.iv.next77, %for.inc169 ], !dbg !3422
  %ninout.0 = phi i32 [ 0, %for.cond82.preheader ], [ %ninout.2, %for.inc169 ], !dbg !3422
  %tail.1 = phi %union.tree_node* [ %outputs, %for.cond82.preheader ], [ %49, %for.inc169 ], !dbg !3423
  call void @llvm.dbg.value(metadata i64 %indvars.iv76, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.1, metadata !3254, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %ninout.0, metadata !3250, metadata !DIExpression()), !dbg !3338
  %tobool83 = icmp eq %union.tree_node* %tail.1, null, !dbg !3388
  br i1 %tobool83, label %for.end173, label %for.body84, !dbg !3388

for.body84:                                       ; preds = %for.cond82
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3424
  %32 = load %union.tree_node*, %union.tree_node** %31, align 8, !dbg !3424
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !3267, metadata !DIExpression()), !dbg !3387
  %type88 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3425
  %33 = load %union.tree_node*, %union.tree_node** %type88, align 8, !dbg !3425
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !3271, metadata !DIExpression()), !dbg !3387
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8, !dbg !3426
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !3273, metadata !DIExpression(DW_OP_deref)), !dbg !3387
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %is_inout) #8, !dbg !3427
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !3274, metadata !DIExpression(DW_OP_deref)), !dbg !3387
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_reg) #8, !dbg !3428
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !3275, metadata !DIExpression(DW_OP_deref)), !dbg !3387
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_mem) #8, !dbg !3429
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3430
  %cmp89 = icmp eq %union.tree_node* %33, %34, !dbg !3432
  br i1 %cmp89, label %cleanup161, label %if.end92, !dbg !3433

if.end92:                                         ; preds = %for.body84
  %arrayidx94 = getelementptr inbounds i8*, i8** %5, i64 %indvars.iv76, !dbg !3434
  %35 = bitcast i8** %arrayidx94 to i64*, !dbg !3434
  %36 = load i64, i64* %35, align 8, !dbg !3434
  store i64 %36, i64* %21, align 8, !dbg !3435
  call void @llvm.dbg.value(metadata i8** %constraint, metadata !3272, metadata !DIExpression(DW_OP_deref)), !dbg !3387
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !3273, metadata !DIExpression(DW_OP_deref)), !dbg !3387
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !3274, metadata !DIExpression(DW_OP_deref)), !dbg !3387
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !3275, metadata !DIExpression(DW_OP_deref)), !dbg !3387
  %37 = trunc i64 %indvars.iv76 to i32, !dbg !3436
  %call95 = call zeroext i8 @parse_output_constraint(i8** nonnull %constraint, i32 %37, i32 %call, i32 %call1, i8* nonnull %allows_mem, i8* nonnull %allows_reg, i8* nonnull %is_inout) #7, !dbg !3436
  %tobool96 = icmp eq i8 %call95, 0, !dbg !3436
  br i1 %tobool96, label %cleanup161, label %if.end98, !dbg !3438

if.end98:                                         ; preds = %if.end92
  %38 = load i8, i8* %allows_reg, align 1, !dbg !3439
  call void @llvm.dbg.value(metadata i8 %38, metadata !3274, metadata !DIExpression()), !dbg !3387
  %tobool99 = icmp eq i8 %38, 0, !dbg !3439
  br i1 %tobool99, label %land.lhs.true, label %if.end156, !dbg !3441

land.lhs.true:                                    ; preds = %if.end98
  %39 = load i8, i8* %allows_mem, align 1, !dbg !3442
  call void @llvm.dbg.value(metadata i8 %39, metadata !3275, metadata !DIExpression()), !dbg !3387
  %tobool101 = icmp eq i8 %39, 0, !dbg !3442
  br i1 %tobool101, label %lor.lhs.false102, label %if.then155, !dbg !3443

lor.lhs.false102:                                 ; preds = %land.lhs.true
  %40 = load i8, i8* %is_inout, align 1, !dbg !3444
  call void @llvm.dbg.value(metadata i8 %40, metadata !3273, metadata !DIExpression()), !dbg !3387
  %tobool104 = icmp eq i8 %40, 0, !dbg !3444
  br i1 %tobool104, label %lor.lhs.false105, label %if.then155, !dbg !3445

lor.lhs.false105:                                 ; preds = %lor.lhs.false102
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3446
  %bf.load = load i64, i64* %41, align 8, !dbg !3446
  %bf.cast = and i64 %bf.load, 65535, !dbg !3446
  %arrayidx107 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3446
  %42 = load i32, i32* %arrayidx107, align 4, !dbg !3446
  %cmp108 = icmp eq i32 %42, 3, !dbg !3446
  br i1 %cmp108, label %land.lhs.true110, label %if.end156, !dbg !3447

land.lhs.true110:                                 ; preds = %lor.lhs.false105
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3448
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3448
  %tobool111 = icmp eq %struct.rtx_def* %43, null, !dbg !3448
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i64 0, i32 0, !dbg !3448
  br i1 %tobool111, label %cond.false115, label %cond.true112, !dbg !3448

cond.true112:                                     ; preds = %land.lhs.true110
  %.pre53 = bitcast %struct.rtx_def** %rtl to i32**, !dbg !3448
  br label %cond.end118, !dbg !3448

cond.false115:                                    ; preds = %land.lhs.true110
  call void @make_decl_rtl(%union.tree_node* %32) #6, !dbg !3448
  %.phi.trans.insert = bitcast %struct.rtx_def** %rtl to i32**, !dbg !3449
  %cond11926.pre = load i32*, i32** %.phi.trans.insert, align 8, !dbg !3448
  %45 = bitcast i32* %cond11926.pre to %struct.rtx_def*, !dbg !3448
  br label %cond.end118, !dbg !3448

cond.end118:                                      ; preds = %cond.false115, %cond.true112
  %.pre-phi54 = phi i32** [ %.phi.trans.insert, %cond.false115 ], [ %.pre53, %cond.true112 ], !dbg !3448
  %cond1352735 = phi i32* [ %cond11926.pre, %cond.false115 ], [ %44, %cond.true112 ]
  %46 = phi %struct.rtx_def* [ %45, %cond.false115 ], [ %43, %cond.true112 ]
  %cond11926 = phi i32* [ %cond11926.pre, %cond.false115 ], [ %44, %cond.true112 ], !dbg !3448
  %bf.load120 = load i32, i32* %cond11926, align 8, !dbg !3448
  %bf.clear121 = and i32 %bf.load120, 65535, !dbg !3448
  %cmp122 = icmp eq i32 %bf.clear121, 37, !dbg !3448
  br i1 %cmp122, label %land.lhs.true124, label %if.end156, !dbg !3450

land.lhs.true124:                                 ; preds = %cond.end118
  %tobool127 = icmp eq %struct.rtx_def* %46, null, !dbg !3451
  br i1 %tobool127, label %cond.false131, label %cond.true128, !dbg !3451

cond.true128:                                     ; preds = %land.lhs.true124
  br label %cond.end134, !dbg !3451

cond.false131:                                    ; preds = %land.lhs.true124
  call void @make_decl_rtl(%union.tree_node* %32) #6, !dbg !3451
  %cond13527.pre = load i32*, i32** %.pre-phi54, align 8, !dbg !3451
  br label %cond.end134, !dbg !3451

cond.end134:                                      ; preds = %cond.false131, %cond.true128
  %cond13527 = phi i32* [ %cond13527.pre, %cond.false131 ], [ %cond1352735, %cond.true128 ], !dbg !3451
  %bf.load136 = load i32, i32* %cond13527, align 8, !dbg !3451
  %bf.lshr = lshr i32 %bf.load136, 16, !dbg !3451
  %bf.clear137 = and i32 %bf.lshr, 255, !dbg !3451
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3452
  %bf.load139 = load i64, i64* %47, align 8, !dbg !3452
  %bf.cast14128 = and i64 %bf.load139, 65535, !dbg !3452
  %cmp142 = icmp eq i64 %bf.cast14128, 14, !dbg !3452
  br i1 %cmp142, label %cond.true144, label %cond.false146, !dbg !3452

cond.true144:                                     ; preds = %cond.end134
  %call145 = call i32 @vector_type_mode(%union.tree_node* %33) #6, !dbg !3452
  br label %cond.end151, !dbg !3452

cond.false146:                                    ; preds = %cond.end134
  %type147 = bitcast %union.tree_node* %33 to %struct.tree_type*, !dbg !3452
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type147, i64 0, i32 6, !dbg !3452
  %bf.load148 = load i32, i32* %mode, align 4, !dbg !3452
  %bf.lshr149 = lshr i32 %bf.load148, 16, !dbg !3452
  %bf.clear150 = and i32 %bf.lshr149, 255, !dbg !3452
  br label %cond.end151, !dbg !3452

cond.end151:                                      ; preds = %cond.false146, %cond.true144
  %cond152 = phi i32 [ %call145, %cond.true144 ], [ %bf.clear150, %cond.false146 ], !dbg !3452
  %cmp153 = icmp eq i32 %bf.clear137, %cond152, !dbg !3453
  br i1 %cmp153, label %if.end156, label %if.then155, !dbg !3454

if.then155:                                       ; preds = %cond.end151, %lor.lhs.false102, %land.lhs.true
  call void @mark_addressable(%union.tree_node* %32) #6, !dbg !3455
  br label %if.end156, !dbg !3455

if.end156:                                        ; preds = %cond.end151, %if.end98, %if.then155, %cond.end118, %lor.lhs.false105
  %48 = load i8, i8* %is_inout, align 1, !dbg !3456
  call void @llvm.dbg.value(metadata i8 %48, metadata !3273, metadata !DIExpression()), !dbg !3387
  %tobool157 = icmp ne i8 %48, 0, !dbg !3456
  %inc159 = zext i1 %tobool157 to i32, !dbg !3458
  %spec.select4 = add nsw i32 %ninout.0, %inc159, !dbg !3458
  call void @llvm.dbg.value(metadata i32 %spec.select4, metadata !3250, metadata !DIExpression()), !dbg !3338
  br label %cleanup161, !dbg !3459

cleanup161:                                       ; preds = %if.end92, %for.body84, %if.end156
  %ninout.2 = phi i32 [ %spec.select4, %if.end156 ], [ %ninout.0, %for.body84 ], [ %ninout.0, %if.end92 ], !dbg !3338
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end156 ], [ false, %for.body84 ], [ false, %if.end92 ]
  call void @llvm.dbg.value(metadata i32 %ninout.2, metadata !3250, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !3275, metadata !DIExpression(DW_OP_deref)), !dbg !3387
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_mem) #8, !dbg !3459
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !3274, metadata !DIExpression(DW_OP_deref)), !dbg !3387
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_reg) #8, !dbg !3459
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !3273, metadata !DIExpression(DW_OP_deref)), !dbg !3387
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %is_inout) #8, !dbg !3459
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8, !dbg !3459
  br i1 %cleanup.dest.slot.1, label %for.inc169, label %cleanup970.loopexit29

for.inc169:                                       ; preds = %cleanup161
  %chain171 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3460
  %49 = load %union.tree_node*, %union.tree_node** %chain171, align 8, !dbg !3460
  call void @llvm.dbg.value(metadata %union.tree_node* %49, metadata !3254, metadata !DIExpression()), !dbg !3338
  %indvars.iv.next77 = add nuw i64 %indvars.iv76, 1, !dbg !3461
  call void @llvm.dbg.value(metadata i32 undef, metadata !3256, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3338
  br label %for.cond82, !dbg !3462, !llvm.loop !3463

for.end173:                                       ; preds = %for.cond82
  %ninout.0.lcssa = phi i32 [ %ninout.0, %for.cond82 ], !dbg !3422
  call void @llvm.dbg.value(metadata i32 %ninout.0.lcssa, metadata !3250, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %ninout.0.lcssa, metadata !3250, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %ninout.0.lcssa, metadata !3250, metadata !DIExpression()), !dbg !3338
  %add174 = add nsw i32 %call, %ninout.0.lcssa, !dbg !3465
  call void @llvm.dbg.value(metadata i32 %add174, metadata !3247, metadata !DIExpression()), !dbg !3338
  %add175 = add nsw i32 %add174, %call1, !dbg !3466
  %cmp176 = icmp sgt i32 %add175, 30, !dbg !3468
  br i1 %cmp176, label %if.then178, label %for.cond180.preheader, !dbg !3469

for.cond180.preheader:                            ; preds = %for.end173
  %50 = bitcast i8** %constraint185 to i8*, !dbg !3470
  %51 = bitcast i8** %constraint185 to i64*, !dbg !3470
  %52 = sext i32 %call1 to i64, !dbg !3471
  br label %for.cond180, !dbg !3471

if.then178:                                       ; preds = %for.end173
  call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0), i32 30) #6, !dbg !3472
  br label %cleanup970, !dbg !3474

for.cond180:                                      ; preds = %for.cond180.preheader, %for.inc214
  %indvars.iv73 = phi i64 [ 0, %for.cond180.preheader ], [ %indvars.iv.next74, %for.inc214 ], !dbg !3475
  %tail.2 = phi %union.tree_node* [ %inputs, %for.cond180.preheader ], [ %65, %for.inc214 ], !dbg !3475
  call void @llvm.dbg.value(metadata i64 %indvars.iv73, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.2, metadata !3254, metadata !DIExpression()), !dbg !3338
  %tobool181 = icmp eq %union.tree_node* %tail.2, null, !dbg !3471
  br i1 %tobool181, label %for.cond219.preheader, label %for.body182, !dbg !3471

for.cond219.preheader:                            ; preds = %for.cond180
  br label %for.cond219, !dbg !3476

for.body182:                                      ; preds = %for.cond180
  call void @llvm.dbg.value(metadata i8* %allows_reg183, metadata !3276, metadata !DIExpression(DW_OP_deref)), !dbg !3470
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_reg183) #8, !dbg !3477
  call void @llvm.dbg.value(metadata i8* %allows_mem184, metadata !3280, metadata !DIExpression(DW_OP_deref)), !dbg !3470
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_mem184) #8, !dbg !3477
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #8, !dbg !3478
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3479
  %54 = bitcast %union.tree_node** %53 to %struct.tree_common**, !dbg !3479
  %55 = load %struct.tree_common*, %struct.tree_common** %54, align 8, !dbg !3479
  %type189 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %55, i64 0, i32 2, !dbg !3479
  %56 = load %union.tree_node*, %union.tree_node** %type189, align 8, !dbg !3479
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3481
  %cmp190 = icmp eq %union.tree_node* %56, %57, !dbg !3482
  br i1 %cmp190, label %cleanup209, label %if.end193, !dbg !3483

if.end193:                                        ; preds = %for.body182
  %58 = add nsw i64 %indvars.iv73, %52, !dbg !3484
  %arrayidx196 = getelementptr inbounds i8*, i8** %5, i64 %58, !dbg !3485
  %59 = bitcast i8** %arrayidx196 to i64*, !dbg !3485
  %60 = load i64, i64* %59, align 8, !dbg !3485
  store i64 %60, i64* %51, align 8, !dbg !3486
  call void @llvm.dbg.value(metadata i8* %allows_reg183, metadata !3276, metadata !DIExpression(DW_OP_deref)), !dbg !3470
  call void @llvm.dbg.value(metadata i8* %allows_mem184, metadata !3280, metadata !DIExpression(DW_OP_deref)), !dbg !3470
  call void @llvm.dbg.value(metadata i8** %constraint185, metadata !3281, metadata !DIExpression(DW_OP_deref)), !dbg !3470
  %61 = trunc i64 %indvars.iv73 to i32, !dbg !3487
  %call197 = call zeroext i8 @parse_input_constraint(i8** nonnull %constraint185, i32 %61, i32 %add174, i32 %call1, i32 %ninout.0.lcssa, i8** nonnull %5, i8* nonnull %allows_mem184, i8* nonnull %allows_reg183) #7, !dbg !3487
  %tobool198 = icmp eq i8 %call197, 0, !dbg !3487
  br i1 %tobool198, label %cleanup209, label %if.end200, !dbg !3489

if.end200:                                        ; preds = %if.end193
  %62 = load i8, i8* %allows_reg183, align 1, !dbg !3490
  call void @llvm.dbg.value(metadata i8 %62, metadata !3276, metadata !DIExpression()), !dbg !3470
  %tobool201 = icmp eq i8 %62, 0, !dbg !3490
  br i1 %tobool201, label %land.lhs.true202, label %cleanup209, !dbg !3492

land.lhs.true202:                                 ; preds = %if.end200
  %63 = load i8, i8* %allows_mem184, align 1, !dbg !3493
  call void @llvm.dbg.value(metadata i8 %63, metadata !3280, metadata !DIExpression()), !dbg !3470
  %tobool204 = icmp eq i8 %63, 0, !dbg !3493
  br i1 %tobool204, label %cleanup209, label %if.then205, !dbg !3494

if.then205:                                       ; preds = %land.lhs.true202
  %64 = load %union.tree_node*, %union.tree_node** %53, align 8, !dbg !3495
  call void @mark_addressable(%union.tree_node* %64) #6, !dbg !3496
  br label %cleanup209, !dbg !3496

cleanup209:                                       ; preds = %land.lhs.true202, %if.end200, %if.end193, %if.then205, %for.body182
  %cleanup.dest.slot.2 = phi i1 [ false, %for.body182 ], [ false, %if.end193 ], [ true, %if.then205 ], [ true, %land.lhs.true202 ], [ true, %if.end200 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #8, !dbg !3497
  call void @llvm.dbg.value(metadata i8* %allows_mem184, metadata !3280, metadata !DIExpression(DW_OP_deref)), !dbg !3470
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_mem184) #8, !dbg !3497
  call void @llvm.dbg.value(metadata i8* %allows_reg183, metadata !3276, metadata !DIExpression(DW_OP_deref)), !dbg !3470
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_reg183) #8, !dbg !3497
  br i1 %cleanup.dest.slot.2, label %for.inc214, label %cleanup970.loopexit

for.inc214:                                       ; preds = %cleanup209
  %indvars.iv.next74 = add nuw i64 %indvars.iv73, 1, !dbg !3498
  call void @llvm.dbg.value(metadata i32 undef, metadata !3256, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3338
  %chain217 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3499
  %65 = load %union.tree_node*, %union.tree_node** %chain217, align 8, !dbg !3499
  call void @llvm.dbg.value(metadata %union.tree_node* %65, metadata !3254, metadata !DIExpression()), !dbg !3338
  br label %for.cond180, !dbg !3500, !llvm.loop !3501

for.cond219:                                      ; preds = %for.cond219.preheader, %if.end423
  %indvars.iv71 = phi i64 [ 0, %for.cond219.preheader ], [ %indvars.iv.next72, %if.end423 ], !dbg !3338
  %ninout.3 = phi i32 [ 0, %for.cond219.preheader ], [ %ninout.4, %if.end423 ], !dbg !3338
  %clobber_conflict_found.0 = phi i32 [ 0, %for.cond219.preheader ], [ %spec.select5, %if.end423 ], !dbg !3338
  %tail.3 = phi %union.tree_node* [ %outputs, %for.cond219.preheader ], [ %103, %if.end423 ], !dbg !3503
  call void @llvm.dbg.value(metadata i64 %indvars.iv71, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.3, metadata !3254, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %clobber_conflict_found.0, metadata !3253, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %ninout.3, metadata !3250, metadata !DIExpression()), !dbg !3338
  %tobool220 = icmp eq %union.tree_node* %tail.3, null, !dbg !3476
  br i1 %tobool220, label %for.end432, label %for.body221, !dbg !3476

for.body221:                                      ; preds = %for.cond219
  %66 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3504
  %67 = load %union.tree_node*, %union.tree_node** %66, align 8, !dbg !3504
  call void @llvm.dbg.value(metadata %union.tree_node* %67, metadata !3282, metadata !DIExpression()), !dbg !3505
  %type227 = getelementptr inbounds %union.tree_node, %union.tree_node* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3506
  %68 = load %union.tree_node*, %union.tree_node** %type227, align 8, !dbg !3506
  call void @llvm.dbg.value(metadata %union.tree_node* %68, metadata !3286, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %is_inout228, metadata !3287, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %is_inout228) #8, !dbg !3507
  call void @llvm.dbg.value(metadata i8* %allows_reg229, metadata !3288, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_reg229) #8, !dbg !3508
  call void @llvm.dbg.value(metadata i8* %allows_mem230, metadata !3289, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_mem230) #8, !dbg !3509
  %arrayidx232 = getelementptr inbounds i8*, i8** %5, i64 %indvars.iv71, !dbg !3510
  call void @llvm.dbg.value(metadata i8* %is_inout228, metadata !3287, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %allows_reg229, metadata !3288, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %allows_mem230, metadata !3289, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  %69 = trunc i64 %indvars.iv71 to i32, !dbg !3511
  %call233 = call zeroext i8 @parse_output_constraint(i8** nonnull %arrayidx232, i32 %69, i32 %add174, i32 %call1, i8* nonnull %allows_mem230, i8* nonnull %allows_reg229, i8* nonnull %is_inout228) #7, !dbg !3511
  call void @llvm.dbg.value(metadata i8 %call233, metadata !3291, metadata !DIExpression()), !dbg !3505
  %tobool234 = icmp eq i8 %call233, 0, !dbg !3512
  br i1 %tobool234, label %cond.true235, label %cond.end237, !dbg !3512

cond.true235:                                     ; preds = %for.body221
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 790, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3512
  br label %cond.end237, !dbg !3512

cond.end237:                                      ; preds = %for.body221, %cond.true235
  store i32 0, i32* @generating_concat_p, align 4, !dbg !3513
  %arrayidx240 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %indvars.iv71, !dbg !3514
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx240, align 8, !dbg !3515
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3516
  %bf.load242 = load i64, i64* %70, align 8, !dbg !3516
  %bf.cast24419 = and i64 %bf.load242, 65535, !dbg !3518
  %cmp245 = icmp eq i64 %bf.cast24419, 47, !dbg !3518
  br i1 %cmp245, label %land.lhs.true247, label %lor.lhs.false250, !dbg !3519

land.lhs.true247:                                 ; preds = %cond.end237
  %71 = load i8, i8* %allows_mem230, align 1, !dbg !3520
  call void @llvm.dbg.value(metadata i8 %71, metadata !3289, metadata !DIExpression()), !dbg !3505
  %tobool249 = icmp eq i8 %71, 0, !dbg !3520
  br i1 %tobool249, label %lor.lhs.false250, label %if.then332, !dbg !3521

lor.lhs.false250:                                 ; preds = %land.lhs.true247, %cond.end237
  %arrayidx256 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast24419, !dbg !3522
  %72 = load i32, i32* %arrayidx256, align 4, !dbg !3522
  %cmp257 = icmp eq i32 %72, 3, !dbg !3522
  br i1 %cmp257, label %land.lhs.true259, label %lor.lhs.false327, !dbg !3523

land.lhs.true259:                                 ; preds = %lor.lhs.false250
  %73 = load i8, i8* %allows_mem230, align 1, !dbg !3524
  call void @llvm.dbg.value(metadata i8 %73, metadata !3289, metadata !DIExpression()), !dbg !3505
  %tobool261 = icmp eq i8 %73, 0, !dbg !3524
  br i1 %tobool261, label %lor.lhs.false262, label %land.lhs.true259.land.lhs.true278_crit_edge, !dbg !3525

land.lhs.true259.land.lhs.true278_crit_edge:      ; preds = %land.lhs.true259
  %rtl280.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3526
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl280.phi.trans.insert, align 8, !dbg !3527
  %74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pre, i64 0, i32 0, !dbg !3525
  br label %land.lhs.true278, !dbg !3525

lor.lhs.false262:                                 ; preds = %land.lhs.true259
  %rtl264 = getelementptr inbounds %union.tree_node, %union.tree_node* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3528
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtl264, align 8, !dbg !3528
  %tobool265 = icmp eq %struct.rtx_def* %75, null, !dbg !3528
  %76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i64 0, i32 0, !dbg !3528
  br i1 %tobool265, label %cond.false269, label %cond.true266, !dbg !3528

cond.true266:                                     ; preds = %lor.lhs.false262
  br label %cond.end272, !dbg !3528

cond.false269:                                    ; preds = %lor.lhs.false262
  call void @make_decl_rtl(%union.tree_node* %67) #6, !dbg !3528
  %.phi.trans.insert36 = bitcast %struct.rtx_def** %rtl264 to i32**, !dbg !3526
  %cond27322.pre = load i32*, i32** %.phi.trans.insert36, align 8, !dbg !3528
  %77 = bitcast i32* %cond27322.pre to %struct.rtx_def*, !dbg !3528
  br label %cond.end272, !dbg !3528

cond.end272:                                      ; preds = %cond.false269, %cond.true266
  %cond3052445 = phi i32* [ %cond27322.pre, %cond.false269 ], [ %76, %cond.true266 ]
  %78 = phi %struct.rtx_def* [ %77, %cond.false269 ], [ %75, %cond.true266 ]
  %cond2892341 = phi i32* [ %cond27322.pre, %cond.false269 ], [ %76, %cond.true266 ]
  %79 = phi %struct.rtx_def* [ %77, %cond.false269 ], [ %75, %cond.true266 ]
  %cond27322 = phi i32* [ %cond27322.pre, %cond.false269 ], [ %76, %cond.true266 ], !dbg !3528
  %bf.load274 = load i32, i32* %cond27322, align 8, !dbg !3528
  %bf.clear275 = and i32 %bf.load274, 65535, !dbg !3528
  %cmp276 = icmp eq i32 %bf.clear275, 37, !dbg !3528
  br i1 %cmp276, label %land.lhs.true278, label %lor.lhs.false327, !dbg !3529

land.lhs.true278:                                 ; preds = %land.lhs.true259.land.lhs.true278_crit_edge, %cond.end272
  %cond3052444 = phi i32* [ %74, %land.lhs.true259.land.lhs.true278_crit_edge ], [ %cond3052445, %cond.end272 ]
  %80 = phi %struct.rtx_def* [ %.pre, %land.lhs.true259.land.lhs.true278_crit_edge ], [ %78, %cond.end272 ]
  %cond2892340 = phi i32* [ %74, %land.lhs.true259.land.lhs.true278_crit_edge ], [ %cond2892341, %cond.end272 ]
  %81 = phi %struct.rtx_def* [ %.pre, %land.lhs.true259.land.lhs.true278_crit_edge ], [ %79, %cond.end272 ], !dbg !3527
  %rtl280 = getelementptr inbounds %union.tree_node, %union.tree_node* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3527
  %tobool281 = icmp eq %struct.rtx_def* %81, null, !dbg !3527
  br i1 %tobool281, label %cond.false285, label %cond.true282, !dbg !3527

cond.true282:                                     ; preds = %land.lhs.true278
  %.pre50 = bitcast %struct.rtx_def** %rtl280 to i32**, !dbg !3527
  br label %cond.end288, !dbg !3527

cond.false285:                                    ; preds = %land.lhs.true278
  call void @make_decl_rtl(%union.tree_node* %67) #6, !dbg !3527
  %.phi.trans.insert38 = bitcast %struct.rtx_def** %rtl280 to i32**, !dbg !3526
  %cond28923.pre = load i32*, i32** %.phi.trans.insert38, align 8, !dbg !3527
  %82 = bitcast i32* %cond28923.pre to %struct.rtx_def*, !dbg !3527
  br label %cond.end288, !dbg !3527

cond.end288:                                      ; preds = %cond.false285, %cond.true282
  %.pre-phi51 = phi i32** [ %.phi.trans.insert38, %cond.false285 ], [ %.pre50, %cond.true282 ], !dbg !3527
  %cond3052443 = phi i32* [ %cond28923.pre, %cond.false285 ], [ %cond3052444, %cond.true282 ]
  %83 = phi %struct.rtx_def* [ %82, %cond.false285 ], [ %80, %cond.true282 ]
  %cond28923 = phi i32* [ %cond28923.pre, %cond.false285 ], [ %cond2892340, %cond.true282 ], !dbg !3527
  %bf.load290 = load i32, i32* %cond28923, align 8, !dbg !3527
  %bf.clear291 = and i32 %bf.load290, 65535, !dbg !3527
  %cmp292 = icmp eq i32 %bf.clear291, 37, !dbg !3527
  br i1 %cmp292, label %land.lhs.true294, label %if.then332, !dbg !3530

land.lhs.true294:                                 ; preds = %cond.end288
  %tobool297 = icmp eq %struct.rtx_def* %83, null, !dbg !3531
  br i1 %tobool297, label %cond.false301, label %cond.true298, !dbg !3531

cond.true298:                                     ; preds = %land.lhs.true294
  br label %cond.end304, !dbg !3531

cond.false301:                                    ; preds = %land.lhs.true294
  call void @make_decl_rtl(%union.tree_node* %67) #6, !dbg !3531
  %cond30524.pre = load i32*, i32** %.pre-phi51, align 8, !dbg !3531
  br label %cond.end304, !dbg !3531

cond.end304:                                      ; preds = %cond.false301, %cond.true298
  %cond30524 = phi i32* [ %cond30524.pre, %cond.false301 ], [ %cond3052443, %cond.true298 ], !dbg !3531
  %bf.load306 = load i32, i32* %cond30524, align 8, !dbg !3531
  %bf.lshr307 = lshr i32 %bf.load306, 16, !dbg !3531
  %bf.clear308 = and i32 %bf.lshr307, 255, !dbg !3531
  %84 = getelementptr inbounds %union.tree_node, %union.tree_node* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3532
  %bf.load310 = load i64, i64* %84, align 8, !dbg !3532
  %bf.cast31225 = and i64 %bf.load310, 65535, !dbg !3532
  %cmp313 = icmp eq i64 %bf.cast31225, 14, !dbg !3532
  br i1 %cmp313, label %cond.true315, label %cond.false317, !dbg !3532

cond.true315:                                     ; preds = %cond.end304
  %call316 = call i32 @vector_type_mode(%union.tree_node* %68) #6, !dbg !3532
  br label %cond.end323, !dbg !3532

cond.false317:                                    ; preds = %cond.end304
  %type318 = bitcast %union.tree_node* %68 to %struct.tree_type*, !dbg !3532
  %mode319 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type318, i64 0, i32 6, !dbg !3532
  %bf.load320 = load i32, i32* %mode319, align 4, !dbg !3532
  %bf.lshr321 = lshr i32 %bf.load320, 16, !dbg !3532
  %bf.clear322 = and i32 %bf.lshr321, 255, !dbg !3532
  br label %cond.end323, !dbg !3532

cond.end323:                                      ; preds = %cond.false317, %cond.true315
  %cond324 = phi i32 [ %call316, %cond.true315 ], [ %bf.clear322, %cond.false317 ], !dbg !3532
  %cmp325 = icmp eq i32 %bf.clear308, %cond324, !dbg !3533
  br i1 %cmp325, label %if.then332, label %lor.lhs.false327, !dbg !3534

lor.lhs.false327:                                 ; preds = %cond.end323, %cond.end272, %lor.lhs.false250
  %85 = load i8, i8* %allows_reg229, align 1, !dbg !3535
  call void @llvm.dbg.value(metadata i8 %85, metadata !3288, metadata !DIExpression()), !dbg !3505
  %tobool328 = icmp eq i8 %85, 0, !dbg !3535
  br i1 %tobool328, label %if.then332, label %lor.lhs.false329, !dbg !3536

lor.lhs.false329:                                 ; preds = %lor.lhs.false327
  %86 = load i8, i8* %is_inout228, align 1, !dbg !3537
  call void @llvm.dbg.value(metadata i8 %86, metadata !3287, metadata !DIExpression()), !dbg !3505
  %tobool331 = icmp eq i8 %86, 0, !dbg !3537
  br i1 %tobool331, label %if.else374, label %if.then332, !dbg !3538

if.then332:                                       ; preds = %land.lhs.true247, %cond.end323, %lor.lhs.false329, %lor.lhs.false327, %cond.end288
  %call333 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %67, %struct.rtx_def* null, i32 0, i32 5) #7, !dbg !3539
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call333, metadata !3290, metadata !DIExpression()), !dbg !3505
  %87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call333, i64 0, i32 0, !dbg !3541
  %bf.load334 = load i32, i32* %87, align 8, !dbg !3541
  %bf.clear335 = and i32 %bf.load334, 65535, !dbg !3541
  %cmp336 = icmp eq i32 %bf.clear335, 43, !dbg !3541
  br i1 %cmp336, label %if.then338, label %if.end340, !dbg !3543

if.then338:                                       ; preds = %if.then332
  %call339 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call333) #6, !dbg !3544
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call339, metadata !3290, metadata !DIExpression()), !dbg !3505
  br label %if.end340, !dbg !3545

if.end340:                                        ; preds = %if.then338, %if.then332
  %88 = phi %struct.rtx_def* [ %call339, %if.then338 ], [ %call333, %if.then332 ], !dbg !3546
  call void @llvm.dbg.value(metadata %struct.rtx_def* %88, metadata !3290, metadata !DIExpression()), !dbg !3505
  %89 = load i8, i8* %allows_reg229, align 1, !dbg !3547
  call void @llvm.dbg.value(metadata i8 %89, metadata !3288, metadata !DIExpression()), !dbg !3505
  %tobool341 = icmp eq i8 %89, 0, !dbg !3547
  br i1 %tobool341, label %land.lhs.true342, label %if.end348, !dbg !3549

land.lhs.true342:                                 ; preds = %if.end340
  %90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i64 0, i32 0, !dbg !3550
  %bf.load343 = load i32, i32* %90, align 8, !dbg !3550
  %bf.clear344 = and i32 %bf.load343, 65535, !dbg !3550
  %cmp345 = icmp eq i32 %bf.clear344, 43, !dbg !3550
  br i1 %cmp345, label %if.end348, label %if.then347, !dbg !3551

if.then347:                                       ; preds = %land.lhs.true342
  %91 = trunc i64 %indvars.iv71 to i32, !dbg !3552
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0), i32 %91) #6, !dbg !3552
  br label %if.end348, !dbg !3552

if.end348:                                        ; preds = %if.end340, %if.then347, %land.lhs.true342
  %92 = load i8, i8* %allows_mem230, align 1, !dbg !3553
  call void @llvm.dbg.value(metadata i8 %92, metadata !3289, metadata !DIExpression()), !dbg !3505
  %tobool349 = icmp eq i8 %92, 0, !dbg !3553
  br i1 %tobool349, label %land.lhs.true350, label %if.end348.lor.lhs.false355_crit_edge, !dbg !3555

if.end348.lor.lhs.false355_crit_edge:             ; preds = %if.end348
  %.phi.trans.insert46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i64 0, i32 0, !dbg !3556
  %bf.load356.pre = load i32, i32* %.phi.trans.insert46, align 8, !dbg !3557
  %.pre52 = and i32 %bf.load356.pre, 65535, !dbg !3557
  br label %lor.lhs.false355, !dbg !3555

land.lhs.true350:                                 ; preds = %if.end348
  %93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i64 0, i32 0, !dbg !3558
  %bf.load351 = load i32, i32* %93, align 8, !dbg !3558
  %bf.clear352 = and i32 %bf.load351, 65535, !dbg !3558
  %cmp353 = icmp eq i32 %bf.clear352, 43, !dbg !3558
  br i1 %cmp353, label %if.then360, label %lor.lhs.false355, !dbg !3559

lor.lhs.false355:                                 ; preds = %if.end348.lor.lhs.false355_crit_edge, %land.lhs.true350
  %bf.clear357.pre-phi = phi i32 [ %.pre52, %if.end348.lor.lhs.false355_crit_edge ], [ %bf.clear352, %land.lhs.true350 ], !dbg !3557
  %bf.load356 = phi i32 [ %bf.load356.pre, %if.end348.lor.lhs.false355_crit_edge ], [ %bf.load351, %land.lhs.true350 ], !dbg !3557
  %cmp358 = icmp eq i32 %bf.clear357.pre-phi, 41, !dbg !3560
  br i1 %cmp358, label %if.then360, label %if.end397, !dbg !3561

if.then360:                                       ; preds = %lor.lhs.false355, %land.lhs.true350
  %bf.load363 = phi i32 [ %bf.load356, %lor.lhs.false355 ], [ %bf.load351, %land.lhs.true350 ], !dbg !3562
  store %struct.rtx_def* %88, %struct.rtx_def** %arrayidx240, align 8, !dbg !3564
  %bf.lshr364 = lshr i32 %bf.load363, 16, !dbg !3562
  %bf.clear365 = and i32 %bf.lshr364, 255, !dbg !3562
  %call366 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear365) #6, !dbg !3565
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call366, metadata !3290, metadata !DIExpression()), !dbg !3505
  %94 = load i8, i8* %is_inout228, align 1, !dbg !3566
  call void @llvm.dbg.value(metadata i8 %94, metadata !3287, metadata !DIExpression()), !dbg !3505
  %tobool367 = icmp eq i8 %94, 0, !dbg !3566
  br i1 %tobool367, label %if.end397, label %if.then368, !dbg !3568

if.then368:                                       ; preds = %if.then360
  %call371 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call366, %struct.rtx_def* %88) #6, !dbg !3569
  br label %if.end397, !dbg !3569

if.else374:                                       ; preds = %lor.lhs.false329
  %call375 = call %struct.rtx_def* @assign_temp(%union.tree_node* %68, i32 0, i32 0, i32 1) #6, !dbg !3570
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call375, metadata !3290, metadata !DIExpression()), !dbg !3505
  %call376 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call375) #6, !dbg !3572
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call376, metadata !3290, metadata !DIExpression()), !dbg !3505
  %95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call376, i64 0, i32 0, !dbg !3573
  %bf.load377 = load i32, i32* %95, align 8, !dbg !3573
  %bf.clear378 = and i32 %bf.load377, 65535, !dbg !3573
  %cmp379 = icmp eq i32 %bf.clear378, 43, !dbg !3573
  br i1 %cmp379, label %if.end393, label %land.lhs.true381, !dbg !3575

land.lhs.true381:                                 ; preds = %if.else374
  %96 = bitcast %union.tree_node** %66 to i64**, !dbg !3576
  %97 = load i64*, i64** %96, align 8, !dbg !3576
  %bf.load385 = load i64, i64* %97, align 8, !dbg !3576
  %bf.cast38721 = and i64 %bf.load385, 65535, !dbg !3577
  %cmp388 = icmp eq i64 %bf.cast38721, 141, !dbg !3577
  br i1 %cmp388, label %if.then390, label %if.end393, !dbg !3578

if.then390:                                       ; preds = %land.lhs.true381
  %var = getelementptr inbounds i64, i64* %97, i64 3, !dbg !3579
  %98 = bitcast i64* %var to %union.tree_node**, !dbg !3579
  %99 = load %union.tree_node*, %union.tree_node** %98, align 8, !dbg !3579
  call void @set_reg_attrs_for_decl_rtl(%union.tree_node* %99, %struct.rtx_def* %call376) #6, !dbg !3580
  br label %if.end393, !dbg !3580

if.end393:                                        ; preds = %if.then390, %land.lhs.true381, %if.else374
  %call394 = call %union.tree_node* @make_tree(%union.tree_node* %68, %struct.rtx_def* %call376) #6, !dbg !3581
  store %union.tree_node* %call394, %union.tree_node** %66, align 8, !dbg !3582
  br label %if.end397

if.end397:                                        ; preds = %if.then360, %lor.lhs.false355, %if.then368, %if.end393
  %op.2 = phi %struct.rtx_def* [ %call376, %if.end393 ], [ %88, %lor.lhs.false355 ], [ %call366, %if.then368 ], [ %call366, %if.then360 ], !dbg !3526
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op.2, metadata !3290, metadata !DIExpression()), !dbg !3505
  %arrayidx399 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %indvars.iv71, !dbg !3583
  store %struct.rtx_def* %op.2, %struct.rtx_def** %arrayidx399, align 8, !dbg !3584
  store i32 %6, i32* @generating_concat_p, align 4, !dbg !3585
  %100 = load i8, i8* %is_inout228, align 1, !dbg !3586
  call void @llvm.dbg.value(metadata i8 %100, metadata !3287, metadata !DIExpression()), !dbg !3505
  %tobool400 = icmp eq i8 %100, 0, !dbg !3586
  br i1 %tobool400, label %if.end423, label %if.then401, !dbg !3588

if.then401:                                       ; preds = %if.end397
  %101 = getelementptr inbounds %union.tree_node, %union.tree_node* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3589
  %bf.load403 = load i64, i64* %101, align 8, !dbg !3589
  %bf.cast40520 = and i64 %bf.load403, 65535, !dbg !3589
  %cmp406 = icmp eq i64 %bf.cast40520, 14, !dbg !3589
  br i1 %cmp406, label %cond.true408, label %cond.false410, !dbg !3589

cond.true408:                                     ; preds = %if.then401
  %call409 = call i32 @vector_type_mode(%union.tree_node* %68) #6, !dbg !3589
  br label %cond.end416, !dbg !3589

cond.false410:                                    ; preds = %if.then401
  %type411 = bitcast %union.tree_node* %68 to %struct.tree_type*, !dbg !3589
  %mode412 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type411, i64 0, i32 6, !dbg !3589
  %bf.load413 = load i32, i32* %mode412, align 4, !dbg !3589
  %bf.lshr414 = lshr i32 %bf.load413, 16, !dbg !3589
  %bf.clear415 = and i32 %bf.lshr414, 255, !dbg !3589
  br label %cond.end416, !dbg !3589

cond.end416:                                      ; preds = %cond.false410, %cond.true408
  %cond417 = phi i32 [ %call409, %cond.true408 ], [ %bf.clear415, %cond.false410 ], !dbg !3589
  %idxprom418 = sext i32 %ninout.3 to i64, !dbg !3591
  %arrayidx419 = getelementptr inbounds i32, i32* %4, i64 %idxprom418, !dbg !3591
  store i32 %cond417, i32* %arrayidx419, align 4, !dbg !3592
  %inc420 = add nsw i32 %ninout.3, 1, !dbg !3593
  call void @llvm.dbg.value(metadata i32 %inc420, metadata !3250, metadata !DIExpression()), !dbg !3338
  %arrayidx422 = getelementptr inbounds i32, i32* %2, i64 %idxprom418, !dbg !3594
  %102 = trunc i64 %indvars.iv71 to i32, !dbg !3595
  store i32 %102, i32* %arrayidx422, align 4, !dbg !3595
  br label %if.end423, !dbg !3596

if.end423:                                        ; preds = %if.end397, %cond.end416
  %ninout.4 = phi i32 [ %inc420, %cond.end416 ], [ %ninout.3, %if.end397 ], !dbg !3338
  call void @llvm.dbg.value(metadata i32 %ninout.4, metadata !3250, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i64* %clobbered_regs, metadata !3252, metadata !DIExpression(DW_OP_deref)), !dbg !3338
  %call424 = call fastcc zeroext i8 @tree_conflicts_with_clobbers_p(%union.tree_node* %67, i64* nonnull %clobbered_regs) #7, !dbg !3597
  %tobool425 = icmp eq i8 %call424, 0, !dbg !3597
  %spec.select5 = select i1 %tobool425, i32 %clobber_conflict_found.0, i32 1, !dbg !3599
  call void @llvm.dbg.value(metadata i32 %spec.select5, metadata !3253, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i8* %allows_mem230, metadata !3289, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_mem230) #8, !dbg !3600
  call void @llvm.dbg.value(metadata i8* %allows_reg229, metadata !3288, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_reg229) #8, !dbg !3600
  call void @llvm.dbg.value(metadata i8* %is_inout228, metadata !3287, metadata !DIExpression(DW_OP_deref)), !dbg !3505
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %is_inout228) #8, !dbg !3600
  %chain430 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3601
  %103 = load %union.tree_node*, %union.tree_node** %chain430, align 8, !dbg !3601
  call void @llvm.dbg.value(metadata %union.tree_node* %103, metadata !3254, metadata !DIExpression()), !dbg !3338
  %indvars.iv.next72 = add nuw i64 %indvars.iv71, 1, !dbg !3602
  call void @llvm.dbg.value(metadata i32 undef, metadata !3256, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3338
  br label %for.cond219, !dbg !3603, !llvm.loop !3604

for.end432:                                       ; preds = %for.cond219
  %ninout.3.lcssa = phi i32 [ %ninout.3, %for.cond219 ], !dbg !3338
  %clobber_conflict_found.0.lcssa = phi i32 [ %clobber_conflict_found.0, %for.cond219 ], !dbg !3338
  call void @llvm.dbg.value(metadata i32 %ninout.3.lcssa, metadata !3250, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %clobber_conflict_found.0.lcssa, metadata !3253, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %ninout.3.lcssa, metadata !3250, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %clobber_conflict_found.0.lcssa, metadata !3253, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %ninout.3.lcssa, metadata !3250, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %clobber_conflict_found.0.lcssa, metadata !3253, metadata !DIExpression()), !dbg !3338
  %call433 = call %struct.rtvec_def* @rtvec_alloc(i32 %add174) #6, !dbg !3606
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %call433, metadata !3243, metadata !DIExpression()), !dbg !3338
  %call434 = call %struct.rtvec_def* @rtvec_alloc(i32 %add174) #6, !dbg !3607
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %call434, metadata !3244, metadata !DIExpression()), !dbg !3338
  %call435 = call %struct.rtvec_def* @rtvec_alloc(i32 %call2) #6, !dbg !3608
  call void @llvm.dbg.value(metadata %struct.rtvec_def* %call435, metadata !3245, metadata !DIExpression()), !dbg !3338
  br i1 %cmp, label %cond.end444, label %cond.false439, !dbg !3609

cond.false439:                                    ; preds = %for.end432
  %104 = bitcast %struct.rtx_def** %1 to i32**, !dbg !3609
  %105 = load i32*, i32** %104, align 16, !dbg !3609
  %bf.load441 = load i32, i32* %105, align 8, !dbg !3609
  %bf.lshr442 = lshr i32 %bf.load441, 16, !dbg !3609
  %bf.clear443 = and i32 %bf.lshr442, 255, !dbg !3609
  br label %cond.end444, !dbg !3609

cond.end444:                                      ; preds = %for.end432, %cond.false439
  %cond445 = phi i32 [ %bf.clear443, %cond.false439 ], [ 0, %for.end432 ], !dbg !3609
  %str447 = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3609
  %arraydecay448 = bitcast i32* %str447 to i8*, !dbg !3609
  %call449 = call i8* @ggc_alloc_string(i8* nonnull %arraydecay448, i32 -1) #6, !dbg !3609
  %call450 = call %struct.rtx_def* @gen_rtx_fmt_ssiEEEi_stat(i32 17, i32 %cond445, i8* %call449, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @empty_string, i64 0, i64 0), i32 0, %struct.rtvec_def* %call433, %struct.rtvec_def* %call434, %struct.rtvec_def* %call435, i32 %locus) #6, !dbg !3609
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call450, metadata !3246, metadata !DIExpression()), !dbg !3338
  %106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call450, i64 0, i32 0, !dbg !3610
  %bf.load451 = load i32, i32* %106, align 8, !dbg !3611
  %vol.op = shl i32 %vol, 27, !dbg !3611
  %vol.op.op = and i32 %vol.op, 134217728, !dbg !3611
  %bf.shl = select i1 %cmp, i32 134217728, i32 %vol.op.op, !dbg !3611
  %bf.clear452 = and i32 %bf.load451, -134217729, !dbg !3611
  %bf.set = or i32 %bf.clear452, %bf.shl, !dbg !3611
  store i32 %bf.set, i32* %106, align 8, !dbg !3611
  call void @llvm.dbg.value(metadata i32 0, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs, metadata !3254, metadata !DIExpression()), !dbg !3338
  %107 = bitcast i8** %constraint458 to i8*, !dbg !3612
  %108 = bitcast i8** %constraint458 to i64*, !dbg !3612
  %arrayidx658 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call450, i64 0, i32 1, i32 0, i32 1, !dbg !3612
  %rt_rtvec = bitcast %struct.object_block** %arrayidx658 to %struct.rtvec_def**, !dbg !3612
  %arrayidx684 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call450, i64 0, i32 1, i32 0, i32 2, !dbg !3612
  %rt_rtvec685 = bitcast i64* %arrayidx684 to %struct.rtvec_def**, !dbg !3612
  %109 = sext i32 %call1 to i64, !dbg !3613
  br label %for.cond453, !dbg !3613

for.cond453:                                      ; preds = %cond.end675, %cond.end444
  %indvars.iv68 = phi i64 [ %indvars.iv.next69, %cond.end675 ], [ 0, %cond.end444 ], !dbg !3338
  %clobber_conflict_found.2 = phi i32 [ %spec.select6, %cond.end675 ], [ %clobber_conflict_found.0.lcssa, %cond.end444 ], !dbg !3338
  %tail.4 = phi %union.tree_node* [ %140, %cond.end675 ], [ %inputs, %cond.end444 ], !dbg !3614
  call void @llvm.dbg.value(metadata i64 %indvars.iv68, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.4, metadata !3254, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %clobber_conflict_found.2, metadata !3253, metadata !DIExpression()), !dbg !3338
  %tobool454 = icmp eq %union.tree_node* %tail.4, null, !dbg !3615
  br i1 %tobool454, label %for.end697, label %for.body455, !dbg !3615

for.body455:                                      ; preds = %for.cond453
  call void @llvm.dbg.value(metadata i8* %allows_reg456, metadata !3292, metadata !DIExpression(DW_OP_deref)), !dbg !3612
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_reg456) #8, !dbg !3616
  call void @llvm.dbg.value(metadata i8* %allows_mem457, metadata !3296, metadata !DIExpression(DW_OP_deref)), !dbg !3612
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_mem457) #8, !dbg !3616
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #8, !dbg !3617
  %110 = add nsw i64 %indvars.iv68, %109, !dbg !3618
  %arrayidx465 = getelementptr inbounds i8*, i8** %5, i64 %110, !dbg !3619
  %111 = bitcast i8** %arrayidx465 to i64*, !dbg !3619
  %112 = load i64, i64* %111, align 8, !dbg !3619
  store i64 %112, i64* %108, align 8, !dbg !3620
  call void @llvm.dbg.value(metadata i8* %allows_reg456, metadata !3292, metadata !DIExpression(DW_OP_deref)), !dbg !3612
  call void @llvm.dbg.value(metadata i8* %allows_mem457, metadata !3296, metadata !DIExpression(DW_OP_deref)), !dbg !3612
  call void @llvm.dbg.value(metadata i8** %constraint458, metadata !3297, metadata !DIExpression(DW_OP_deref)), !dbg !3612
  %113 = trunc i64 %indvars.iv68 to i32, !dbg !3621
  %call466 = call zeroext i8 @parse_input_constraint(i8** nonnull %constraint458, i32 %113, i32 %add174, i32 %call1, i32 %ninout.3.lcssa, i8** nonnull %5, i8* nonnull %allows_mem457, i8* nonnull %allows_reg456) #7, !dbg !3621
  call void @llvm.dbg.value(metadata i8 %call466, metadata !3301, metadata !DIExpression()), !dbg !3612
  %tobool467 = icmp eq i8 %call466, 0, !dbg !3622
  br i1 %tobool467, label %cond.true468, label %cond.end470, !dbg !3622

cond.true468:                                     ; preds = %for.body455
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 875, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3622
  br label %cond.end470, !dbg !3622

cond.end470:                                      ; preds = %for.body455, %cond.true468
  store i32 0, i32* @generating_concat_p, align 4, !dbg !3623
  %114 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3624
  %115 = load %union.tree_node*, %union.tree_node** %114, align 8, !dbg !3624
  call void @llvm.dbg.value(metadata %union.tree_node* %115, metadata !3298, metadata !DIExpression()), !dbg !3612
  %type475 = getelementptr inbounds %union.tree_node, %union.tree_node* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3625
  %116 = load %union.tree_node*, %union.tree_node** %type475, align 8, !dbg !3625
  call void @llvm.dbg.value(metadata %union.tree_node* %116, metadata !3299, metadata !DIExpression()), !dbg !3612
  %117 = load i8, i8* %allows_reg456, align 1, !dbg !3626
  call void @llvm.dbg.value(metadata i8 %117, metadata !3292, metadata !DIExpression()), !dbg !3612
  %tobool477 = icmp eq i8 %117, 0, !dbg !3626
  br i1 %tobool477, label %cond.false479, label %cond.end483, !dbg !3626

cond.false479:                                    ; preds = %cond.end470
  %118 = load i8, i8* %allows_mem457, align 1, !dbg !3627
  call void @llvm.dbg.value(metadata i8 %118, metadata !3296, metadata !DIExpression()), !dbg !3612
  %tobool481 = icmp eq i8 %118, 0, !dbg !3627
  %cond482 = select i1 %tobool481, i32 4, i32 6, !dbg !3627
  br label %cond.end483, !dbg !3626

cond.end483:                                      ; preds = %cond.end470, %cond.false479
  %cond484 = phi i32 [ %cond482, %cond.false479 ], [ 0, %cond.end470 ], !dbg !3626
  %call485 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %115, %struct.rtx_def* null, i32 0, i32 %cond484) #7, !dbg !3628
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call485, metadata !3300, metadata !DIExpression()), !dbg !3612
  %119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call485, i64 0, i32 0, !dbg !3629
  %bf.load486 = load i32, i32* %119, align 8, !dbg !3629
  %bf.clear487 = and i32 %bf.load486, 65535, !dbg !3629
  %cmp488 = icmp eq i32 %bf.clear487, 41, !dbg !3631
  br i1 %cmp488, label %if.then490, label %if.else495, !dbg !3632

if.then490:                                       ; preds = %cond.end483
  %bf.lshr492 = lshr i32 %bf.load486, 16, !dbg !3633
  %bf.clear493 = and i32 %bf.lshr492, 255, !dbg !3633
  %call494 = call %struct.rtx_def* @force_reg(i32 %bf.clear493, %struct.rtx_def* %call485) #6, !dbg !3634
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call494, metadata !3300, metadata !DIExpression()), !dbg !3612
  br label %if.end503, !dbg !3635

if.else495:                                       ; preds = %cond.end483
  %cmp498 = icmp eq i32 %bf.clear487, 43, !dbg !3636
  br i1 %cmp498, label %if.then500, label %if.end503, !dbg !3638

if.then500:                                       ; preds = %if.else495
  %call501 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call485) #6, !dbg !3639
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call501, metadata !3300, metadata !DIExpression()), !dbg !3612
  br label %if.end503, !dbg !3640

if.end503:                                        ; preds = %if.else495, %if.then500, %if.then490
  %op461.1 = phi %struct.rtx_def* [ %call494, %if.then490 ], [ %call501, %if.then500 ], [ %call485, %if.else495 ], !dbg !3641
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op461.1, metadata !3300, metadata !DIExpression()), !dbg !3612
  %120 = load i8*, i8** %constraint458, align 8, !dbg !3642
  call void @llvm.dbg.value(metadata i8* %120, metadata !3297, metadata !DIExpression()), !dbg !3612
  %call504 = call i32 @asm_operand_ok(%struct.rtx_def* %op461.1, i8* %120, i8** null) #6, !dbg !3643
  %cmp505 = icmp slt i32 %call504, 1, !dbg !3644
  br i1 %cmp505, label %if.then507, label %if.end657, !dbg !3645

if.then507:                                       ; preds = %if.end503
  %121 = load i8, i8* %allows_reg456, align 1, !dbg !3646
  call void @llvm.dbg.value(metadata i8 %121, metadata !3292, metadata !DIExpression()), !dbg !3612
  %tobool509 = icmp eq i8 %121, 0, !dbg !3646
  br i1 %tobool509, label %if.else547, label %land.lhs.true510, !dbg !3647

land.lhs.true510:                                 ; preds = %if.then507
  %122 = getelementptr inbounds %union.tree_node, %union.tree_node* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3648
  %bf.load512 = load i64, i64* %122, align 8, !dbg !3648
  %bf.cast51417 = and i64 %bf.load512, 65535, !dbg !3648
  %cmp515 = icmp eq i64 %bf.cast51417, 14, !dbg !3648
  br i1 %cmp515, label %cond.true517, label %cond.false519, !dbg !3648

cond.true517:                                     ; preds = %land.lhs.true510
  %call518 = call i32 @vector_type_mode(%union.tree_node* %116) #6, !dbg !3648
  br label %cond.end525, !dbg !3648

cond.false519:                                    ; preds = %land.lhs.true510
  %type520 = bitcast %union.tree_node* %116 to %struct.tree_type*, !dbg !3648
  %mode521 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type520, i64 0, i32 6, !dbg !3648
  %bf.load522 = load i32, i32* %mode521, align 4, !dbg !3648
  %bf.lshr523 = lshr i32 %bf.load522, 16, !dbg !3648
  %bf.clear524 = and i32 %bf.lshr523, 255, !dbg !3648
  br label %cond.end525, !dbg !3648

cond.end525:                                      ; preds = %cond.false519, %cond.true517
  %cond526 = phi i32 [ %call518, %cond.true517 ], [ %bf.clear524, %cond.false519 ], !dbg !3648
  %cmp527 = icmp eq i32 %cond526, 1, !dbg !3649
  br i1 %cmp527, label %if.else547, label %if.then529, !dbg !3650

if.then529:                                       ; preds = %cond.end525
  %bf.load531 = load i64, i64* %122, align 8, !dbg !3651
  %bf.cast53318 = and i64 %bf.load531, 65535, !dbg !3651
  %cmp534 = icmp eq i64 %bf.cast53318, 14, !dbg !3651
  br i1 %cmp534, label %cond.true536, label %cond.false538, !dbg !3651

cond.true536:                                     ; preds = %if.then529
  %call537 = call i32 @vector_type_mode(%union.tree_node* %116) #6, !dbg !3651
  br label %cond.end544, !dbg !3651

cond.false538:                                    ; preds = %if.then529
  %type539 = bitcast %union.tree_node* %116 to %struct.tree_type*, !dbg !3651
  %mode540 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type539, i64 0, i32 6, !dbg !3651
  %bf.load541 = load i32, i32* %mode540, align 4, !dbg !3651
  %bf.lshr542 = lshr i32 %bf.load541, 16, !dbg !3651
  %bf.clear543 = and i32 %bf.lshr542, 255, !dbg !3651
  br label %cond.end544, !dbg !3651

cond.end544:                                      ; preds = %cond.false538, %cond.true536
  %cond545 = phi i32 [ %call537, %cond.true536 ], [ %bf.clear543, %cond.false538 ], !dbg !3651
  %call546 = call %struct.rtx_def* @force_reg(i32 %cond545, %struct.rtx_def* %op461.1) #6, !dbg !3652
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call546, metadata !3300, metadata !DIExpression()), !dbg !3612
  br label %if.end657, !dbg !3653

if.else547:                                       ; preds = %cond.end525, %if.then507
  %123 = load i8, i8* %allows_mem457, align 1, !dbg !3654
  call void @llvm.dbg.value(metadata i8 %123, metadata !3296, metadata !DIExpression()), !dbg !3612
  %tobool548 = icmp eq i8 %123, 0, !dbg !3654
  br i1 %tobool548, label %if.then549, label %if.else552, !dbg !3655

if.then549:                                       ; preds = %if.else547
  %124 = trunc i64 %110 to i32, !dbg !3656
  %call551 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18, i64 0, i64 0), i32 %124) #6, !dbg !3656
  br label %if.end657, !dbg !3656

if.else552:                                       ; preds = %if.else547
  %125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op461.1, i64 0, i32 0, !dbg !3657
  %bf.load553 = load i32, i32* %125, align 8, !dbg !3657
  %bf.clear554 = and i32 %bf.load553, 65535, !dbg !3657
  %cmp555 = icmp eq i32 %bf.clear554, 43, !dbg !3657
  br i1 %cmp555, label %if.end657, label %if.else558, !dbg !3658

if.else558:                                       ; preds = %if.else552
  %126 = trunc i64 %110 to i32, !dbg !3659
  %call560 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.19, i64 0, i64 0), i32 %126) #6, !dbg !3659
  %bf.load561 = load i32, i32* %125, align 8, !dbg !3660
  %bf.clear562 = and i32 %bf.load561, 65535, !dbg !3660
  %idxprom563 = zext i32 %bf.clear562 to i64, !dbg !3660
  %arrayidx564 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom563, !dbg !3660
  %127 = load i32, i32* %arrayidx564, align 4, !dbg !3660
  %cmp565 = icmp eq i32 %127, 9, !dbg !3660
  br i1 %cmp565, label %if.then567, label %if.end607, !dbg !3661

if.then567:                                       ; preds = %if.else558
  %128 = getelementptr inbounds %union.tree_node, %union.tree_node* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3662
  %bf.load569 = load i64, i64* %128, align 8, !dbg !3662
  %bf.cast57115 = and i64 %bf.load569, 65535, !dbg !3662
  %cmp572 = icmp eq i64 %bf.cast57115, 14, !dbg !3662
  br i1 %cmp572, label %cond.true574, label %cond.false576, !dbg !3662

cond.true574:                                     ; preds = %if.then567
  %call575 = call i32 @vector_type_mode(%union.tree_node* %116) #6, !dbg !3662
  br label %cond.end582, !dbg !3662

cond.false576:                                    ; preds = %if.then567
  %type577 = bitcast %union.tree_node* %116 to %struct.tree_type*, !dbg !3662
  %mode578 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type577, i64 0, i32 6, !dbg !3662
  %bf.load579 = load i32, i32* %mode578, align 4, !dbg !3662
  %bf.lshr580 = lshr i32 %bf.load579, 16, !dbg !3662
  %bf.clear581 = and i32 %bf.lshr580, 255, !dbg !3662
  br label %cond.end582, !dbg !3662

cond.end582:                                      ; preds = %cond.false576, %cond.true574
  %cond583 = phi i32 [ %call575, %cond.true574 ], [ %bf.clear581, %cond.false576 ], !dbg !3662
  %call584 = call %struct.rtx_def* @force_const_mem(i32 %cond583, %struct.rtx_def* %op461.1) #6, !dbg !3663
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call584, metadata !3302, metadata !DIExpression()), !dbg !3664
  %tobool585 = icmp eq %struct.rtx_def* %call584, null, !dbg !3665
  br i1 %tobool585, label %if.else588, label %if.then586, !dbg !3667

if.then586:                                       ; preds = %cond.end582
  %call587 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* nonnull %call584) #6, !dbg !3668
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call587, metadata !3300, metadata !DIExpression()), !dbg !3612
  br label %if.end607, !dbg !3669

if.else588:                                       ; preds = %cond.end582
  %bf.load590 = load i64, i64* %128, align 8, !dbg !3670
  %bf.cast59216 = and i64 %bf.load590, 65535, !dbg !3670
  %cmp593 = icmp eq i64 %bf.cast59216, 14, !dbg !3670
  br i1 %cmp593, label %cond.true595, label %cond.false597, !dbg !3670

cond.true595:                                     ; preds = %if.else588
  %call596 = call i32 @vector_type_mode(%union.tree_node* %116) #6, !dbg !3670
  br label %cond.end603, !dbg !3670

cond.false597:                                    ; preds = %if.else588
  %type598 = bitcast %union.tree_node* %116 to %struct.tree_type*, !dbg !3670
  %mode599 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type598, i64 0, i32 6, !dbg !3670
  %bf.load600 = load i32, i32* %mode599, align 4, !dbg !3670
  %bf.lshr601 = lshr i32 %bf.load600, 16, !dbg !3670
  %bf.clear602 = and i32 %bf.lshr601, 255, !dbg !3670
  br label %cond.end603, !dbg !3670

cond.end603:                                      ; preds = %cond.false597, %cond.true595
  %cond604 = phi i32 [ %call596, %cond.true595 ], [ %bf.clear602, %cond.false597 ], !dbg !3670
  %call605 = call %struct.rtx_def* @force_reg(i32 %cond604, %struct.rtx_def* %op461.1) #6, !dbg !3671
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call605, metadata !3300, metadata !DIExpression()), !dbg !3612
  br label %if.end607

if.end607:                                        ; preds = %if.then586, %cond.end603, %if.else558
  %op461.3 = phi %struct.rtx_def* [ %op461.1, %if.else558 ], [ %call587, %if.then586 ], [ %call605, %cond.end603 ], !dbg !3612
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op461.3, metadata !3300, metadata !DIExpression()), !dbg !3612
  %129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op461.3, i64 0, i32 0, !dbg !3672
  %bf.load608 = load i32, i32* %129, align 8, !dbg !3672
  %bf.clear609 = and i32 %bf.load608, 65535, !dbg !3672
  %cmp610 = icmp eq i32 %bf.clear609, 37, !dbg !3672
  br i1 %cmp610, label %if.then622, label %lor.lhs.false612, !dbg !3673

lor.lhs.false612:                                 ; preds = %if.end607
  %cmp615 = icmp eq i32 %bf.clear609, 39, !dbg !3674
  br i1 %cmp615, label %if.then622, label %lor.lhs.false617, !dbg !3675

lor.lhs.false617:                                 ; preds = %lor.lhs.false612
  %cmp620 = icmp eq i32 %bf.clear609, 41, !dbg !3676
  br i1 %cmp620, label %if.then622, label %if.end657, !dbg !3677

if.then622:                                       ; preds = %lor.lhs.false617, %lor.lhs.false612, %if.end607
  %130 = getelementptr inbounds %union.tree_node, %union.tree_node* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3678
  %bf.load624 = load i64, i64* %130, align 8, !dbg !3678
  %131 = lshr i64 %bf.load624, 18, !dbg !3678
  %132 = trunc i64 %131 to i32, !dbg !3678
  %mul634 = and i32 %132, 2, !dbg !3678
  %type636 = bitcast %union.tree_node* %116 to %struct.tree_type*, !dbg !3678
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type636, i64 0, i32 6, !dbg !3678
  %bf.load637 = load i32, i32* %restrict_flag, align 4, !dbg !3678
  %133 = lshr i32 %bf.load637, 11, !dbg !3678
  %mul640 = and i32 %133, 4, !dbg !3678
  %or641 = or i32 %mul634, %mul640, !dbg !3678
  %134 = lshr i64 %bf.load624, 48, !dbg !3678
  %135 = trunc i64 %134 to i32, !dbg !3678
  %shl646 = and i32 %135, 65280, !dbg !3678
  %or647 = or i32 %or641, %shl646, !dbg !3678
  %or648 = or i32 %or647, 1, !dbg !3679
  %call649 = call %union.tree_node* @build_qualified_type(%union.tree_node* %116, i32 %or648) #6, !dbg !3680
  call void @llvm.dbg.value(metadata %union.tree_node* %call649, metadata !3311, metadata !DIExpression()), !dbg !3681
  %call650 = call %struct.rtx_def* @assign_temp(%union.tree_node* %call649, i32 1, i32 1, i32 1) #6, !dbg !3682
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call650, metadata !3314, metadata !DIExpression()), !dbg !3681
  %call651 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call650) #6, !dbg !3683
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call651, metadata !3314, metadata !DIExpression()), !dbg !3681
  %call652 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call651, %struct.rtx_def* %op461.3) #6, !dbg !3684
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call651, metadata !3300, metadata !DIExpression()), !dbg !3612
  br label %if.end657, !dbg !3685

if.end657:                                        ; preds = %cond.end544, %if.else552, %if.then622, %lor.lhs.false617, %if.then549, %if.end503
  %op461.8 = phi %struct.rtx_def* [ %op461.1, %if.end503 ], [ %call546, %cond.end544 ], [ %op461.1, %if.then549 ], [ %op461.1, %if.else552 ], [ %call651, %if.then622 ], [ %op461.3, %lor.lhs.false617 ], !dbg !3612
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op461.8, metadata !3300, metadata !DIExpression()), !dbg !3612
  store i32 %6, i32* @generating_concat_p, align 4, !dbg !3686
  %136 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3687
  %arrayidx660 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %136, i64 0, i32 1, i64 %indvars.iv68, !dbg !3687
  store %struct.rtx_def* %op461.8, %struct.rtx_def** %arrayidx660, align 8, !dbg !3688
  %137 = getelementptr inbounds %union.tree_node, %union.tree_node* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3689
  %bf.load662 = load i64, i64* %137, align 8, !dbg !3689
  %bf.cast66411 = and i64 %bf.load662, 65535, !dbg !3689
  %cmp665 = icmp eq i64 %bf.cast66411, 14, !dbg !3689
  br i1 %cmp665, label %cond.true667, label %cond.false669, !dbg !3689

cond.true667:                                     ; preds = %if.end657
  %call668 = call i32 @vector_type_mode(%union.tree_node* %116) #6, !dbg !3689
  br label %cond.end675, !dbg !3689

cond.false669:                                    ; preds = %if.end657
  %type670 = bitcast %union.tree_node* %116 to %struct.tree_type*, !dbg !3689
  %mode671 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type670, i64 0, i32 6, !dbg !3689
  %bf.load672 = load i32, i32* %mode671, align 4, !dbg !3689
  %bf.lshr673 = lshr i32 %bf.load672, 16, !dbg !3689
  %bf.clear674 = and i32 %bf.lshr673, 255, !dbg !3689
  br label %cond.end675, !dbg !3689

cond.end675:                                      ; preds = %cond.false669, %cond.true667
  %cond676 = phi i32 [ %call668, %cond.true667 ], [ %bf.clear674, %cond.false669 ], !dbg !3689
  %138 = load i8*, i8** %arrayidx465, align 8, !dbg !3689
  %call680 = call i8* @ggc_alloc_string(i8* %138, i32 -1) #6, !dbg !3689
  %call681 = call %struct.rtx_def* @gen_rtx_fmt_si_stat(i32 16, i32 %cond676, i8* %call680, i32 0) #6, !dbg !3689
  %139 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec685, align 8, !dbg !3690
  %arrayidx688 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %139, i64 0, i32 1, i64 %indvars.iv68, !dbg !3690
  store %struct.rtx_def* %call681, %struct.rtx_def** %arrayidx688, align 8, !dbg !3691
  call void @llvm.dbg.value(metadata i64* %clobbered_regs, metadata !3252, metadata !DIExpression(DW_OP_deref)), !dbg !3338
  %call689 = call fastcc zeroext i8 @tree_conflicts_with_clobbers_p(%union.tree_node* %115, i64* nonnull %clobbered_regs) #7, !dbg !3692
  %tobool690 = icmp eq i8 %call689, 0, !dbg !3692
  %spec.select6 = select i1 %tobool690, i32 %clobber_conflict_found.2, i32 1, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %spec.select6, metadata !3253, metadata !DIExpression()), !dbg !3338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #8, !dbg !3695
  call void @llvm.dbg.value(metadata i8* %allows_mem457, metadata !3296, metadata !DIExpression(DW_OP_deref)), !dbg !3612
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_mem457) #8, !dbg !3695
  call void @llvm.dbg.value(metadata i8* %allows_reg456, metadata !3292, metadata !DIExpression(DW_OP_deref)), !dbg !3612
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_reg456) #8, !dbg !3695
  %chain695 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3696
  %140 = load %union.tree_node*, %union.tree_node** %chain695, align 8, !dbg !3696
  call void @llvm.dbg.value(metadata %union.tree_node* %140, metadata !3254, metadata !DIExpression()), !dbg !3338
  %indvars.iv.next69 = add nuw i64 %indvars.iv68, 1, !dbg !3697
  call void @llvm.dbg.value(metadata i32 undef, metadata !3256, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3338
  br label %for.cond453, !dbg !3698, !llvm.loop !3699

for.end697:                                       ; preds = %for.cond453
  %clobber_conflict_found.2.lcssa = phi i32 [ %clobber_conflict_found.2, %for.cond453 ], !dbg !3338
  call void @llvm.dbg.value(metadata i32 %clobber_conflict_found.2.lcssa, metadata !3253, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %clobber_conflict_found.2.lcssa, metadata !3253, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %clobber_conflict_found.2.lcssa, metadata !3253, metadata !DIExpression()), !dbg !3338
  store i32 0, i32* @generating_concat_p, align 4, !dbg !3701
  call void @llvm.dbg.value(metadata i32 0, metadata !3256, metadata !DIExpression()), !dbg !3338
  %141 = getelementptr inbounds [16 x i8], [16 x i8]* %buffer, i64 0, i64 0, !dbg !3702
  %sub = sub nsw i32 %add174, %ninout.3.lcssa, !dbg !3702
  %142 = sext i32 %ninout.3.lcssa to i64, !dbg !3703
  br label %for.cond698, !dbg !3703

for.cond698:                                      ; preds = %for.body701, %for.end697
  %indvars.iv65 = phi i64 [ %indvars.iv.next66, %for.body701 ], [ 0, %for.end697 ], !dbg !3704
  %i.6 = phi i32 [ %inc731, %for.body701 ], [ 0, %for.end697 ], !dbg !3704
  call void @llvm.dbg.value(metadata i64 %indvars.iv65, metadata !3256, metadata !DIExpression()), !dbg !3338
  %cmp699 = icmp slt i64 %indvars.iv65, %142, !dbg !3705
  br i1 %cmp699, label %for.body701, label %for.cond733.preheader, !dbg !3706

for.cond733.preheader:                            ; preds = %for.cond698
  %u741 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call450, i64 0, i32 1, !dbg !3707
  %143 = getelementptr inbounds %union.u, %union.u* %u741, i64 1, i32 0, i32 0, i64 0, !dbg !3707
  %rt_rtvec744 = bitcast %union.rtunion_def* %143 to %struct.rtvec_def**, !dbg !3707
  %144 = sext i32 %call2 to i64, !dbg !3710
  br label %for.cond733, !dbg !3710

for.body701:                                      ; preds = %for.cond698
  %arrayidx703 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv65, !dbg !3711
  %145 = load i32, i32* %arrayidx703, align 4, !dbg !3711
  call void @llvm.dbg.value(metadata i32 %145, metadata !3315, metadata !DIExpression()), !dbg !3702
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #8, !dbg !3712
  call void @llvm.dbg.declare(metadata [16 x i8]* %buffer, metadata !3319, metadata !DIExpression()), !dbg !3713
  %idxprom704 = sext i32 %145 to i64, !dbg !3714
  %arrayidx705 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %idxprom704, !dbg !3714
  %146 = bitcast %struct.rtx_def** %arrayidx705 to i64*, !dbg !3714
  %147 = load i64, i64* %146, align 8, !dbg !3714
  %148 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3715
  %add711 = add nsw i32 %sub, %i.6, !dbg !3715
  %idxprom712 = sext i32 %add711 to i64, !dbg !3715
  %arrayidx713 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %148, i64 0, i32 1, i64 %idxprom712, !dbg !3715
  %149 = bitcast %struct.rtx_def** %arrayidx713 to i64*, !dbg !3716
  store i64 %147, i64* %149, align 8, !dbg !3716
  %call715 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %141, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32 %145) #6, !dbg !3717
  %arrayidx717 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv65, !dbg !3718
  %150 = load i32, i32* %arrayidx717, align 4, !dbg !3718
  %call719 = call i8* @ggc_alloc_string(i8* nonnull %141, i32 -1) #6, !dbg !3718
  %call720 = call %struct.rtx_def* @gen_rtx_fmt_si_stat(i32 16, i32 %150, i8* %call719, i32 0) #6, !dbg !3718
  %151 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec685, align 8, !dbg !3719
  %arrayidx729 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %151, i64 0, i32 1, i64 %idxprom712, !dbg !3719
  store %struct.rtx_def* %call720, %struct.rtx_def** %arrayidx729, align 8, !dbg !3720
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #8, !dbg !3721
  %indvars.iv.next66 = add nuw nsw i64 %indvars.iv65, 1, !dbg !3722
  %inc731 = add nuw nsw i32 %i.6, 1, !dbg !3722
  call void @llvm.dbg.value(metadata i32 %inc731, metadata !3256, metadata !DIExpression()), !dbg !3338
  br label %for.cond698, !dbg !3723, !llvm.loop !3724

for.cond733:                                      ; preds = %for.cond733.preheader, %for.body736
  %indvars.iv63 = phi i64 [ 0, %for.cond733.preheader ], [ %indvars.iv.next64, %for.body736 ], !dbg !3726
  %tail.5 = phi %union.tree_node* [ %labels, %for.cond733.preheader ], [ %155, %for.body736 ], !dbg !3726
  call void @llvm.dbg.value(metadata i64 %indvars.iv63, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.5, metadata !3254, metadata !DIExpression()), !dbg !3338
  %cmp734 = icmp slt i64 %indvars.iv63, %144, !dbg !3727
  br i1 %cmp734, label %for.body736, label %for.end752, !dbg !3710

for.body736:                                      ; preds = %for.cond733
  %152 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3728
  %153 = load %union.tree_node*, %union.tree_node** %152, align 8, !dbg !3728
  %call739 = call %struct.rtx_def* @label_rtx(%union.tree_node* %153) #7, !dbg !3728
  %call740 = call %struct.rtx_def* @gen_rtx_fmt_u_stat(i32 44, i32 16, %struct.rtx_def* %call739) #6, !dbg !3728
  %154 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec744, align 8, !dbg !3729
  %arrayidx747 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %154, i64 0, i32 1, i64 %indvars.iv63, !dbg !3729
  store %struct.rtx_def* %call740, %struct.rtx_def** %arrayidx747, align 8, !dbg !3730
  %indvars.iv.next64 = add nuw nsw i64 %indvars.iv63, 1, !dbg !3731
  call void @llvm.dbg.value(metadata i32 undef, metadata !3256, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3338
  %chain751 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3732
  %155 = load %union.tree_node*, %union.tree_node** %chain751, align 8, !dbg !3732
  call void @llvm.dbg.value(metadata %union.tree_node* %155, metadata !3254, metadata !DIExpression()), !dbg !3338
  br label %for.cond733, !dbg !3733, !llvm.loop !3734

for.end752:                                       ; preds = %for.cond733
  store i32 %6, i32* @generating_concat_p, align 4, !dbg !3736
  %cmp753 = icmp sgt i32 %call2, 0, !dbg !3737
  %cmp756 = icmp eq i32 %nclobbers.0.lcssa, 0, !dbg !3738
  %or.cond7 = and i1 %cmp753, %cmp756, !dbg !3739
  br i1 %or.cond7, label %if.then758, label %if.else766, !dbg !3739

if.then758:                                       ; preds = %for.end752
  br i1 %cmp, label %cond.end763, label %cond.true761, !dbg !3740

cond.true761:                                     ; preds = %if.then758
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 980, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3740
  br label %cond.end763, !dbg !3740

cond.end763:                                      ; preds = %if.then758, %cond.true761
  %call765 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call450) #6, !dbg !3742
  br label %if.end952, !dbg !3743

if.else766:                                       ; preds = %for.end752
  %156 = or i32 %call1, %nclobbers.0.lcssa, !dbg !3744
  %157 = icmp eq i32 %156, 0, !dbg !3744
  br i1 %157, label %if.then772, label %if.else774, !dbg !3744

if.then772:                                       ; preds = %if.else766
  %call773 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call450) #6, !dbg !3745
  br label %if.end952, !dbg !3747

if.else774:                                       ; preds = %if.else766
  %cmp775 = icmp eq i32 %call1, 1, !dbg !3748
  %or.cond9 = and i1 %cmp775, %cmp756, !dbg !3749
  br i1 %or.cond9, label %if.then780, label %if.else789, !dbg !3749

if.then780:                                       ; preds = %if.else774
  %158 = load i8*, i8** %5, align 16, !dbg !3750
  %call782 = call i8* @ggc_alloc_string(i8* %158, i32 -1) #6, !dbg !3750
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call450, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, !dbg !3752
  store i8* %call782, i8** %rt_str, align 8, !dbg !3753
  %159 = load %struct.rtx_def*, %struct.rtx_def** %1, align 16, !dbg !3754
  %call787 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %159, %struct.rtx_def* %call450) #6, !dbg !3754
  %call788 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call787) #6, !dbg !3755
  br label %if.end952, !dbg !3756

if.else789:                                       ; preds = %if.else774
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call450, metadata !3323, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.value(metadata i32 %call1, metadata !3328, metadata !DIExpression()), !dbg !3757
  %spec.select10 = select i1 %cmp, i32 1, i32 %call1, !dbg !3758
  call void @llvm.dbg.value(metadata i32 %spec.select10, metadata !3328, metadata !DIExpression()), !dbg !3757
  %add794 = add nsw i32 %spec.select10, %nclobbers.0.lcssa, !dbg !3759
  %call795 = call %struct.rtvec_def* @rtvec_alloc(i32 %add794) #6, !dbg !3759
  %call796 = call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 0, %struct.rtvec_def* %call795) #6, !dbg !3759
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call796, metadata !3246, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 0, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs, metadata !3254, metadata !DIExpression()), !dbg !3338
  %arrayidx818 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call796, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3760
  %rt_rtvec819 = bitcast %union.rtunion_def* %arrayidx818 to %struct.rtvec_def**, !dbg !3760
  br label %for.cond797, !dbg !3764

for.cond797:                                      ; preds = %for.body799, %if.else789
  %indvars.iv61 = phi i64 [ %indvars.iv.next62, %for.body799 ], [ 0, %if.else789 ], !dbg !3765
  %tail.6 = phi %union.tree_node* [ %170, %for.body799 ], [ %outputs, %if.else789 ], !dbg !3765
  call void @llvm.dbg.value(metadata i64 %indvars.iv61, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.6, metadata !3254, metadata !DIExpression()), !dbg !3338
  %tobool798 = icmp eq %union.tree_node* %tail.6, null, !dbg !3766
  br i1 %tobool798, label %for.end842, label %for.body799, !dbg !3766

for.body799:                                      ; preds = %for.cond797
  %arrayidx801 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %indvars.iv61, !dbg !3767
  %160 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx801, align 8, !dbg !3767
  %161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i64 0, i32 0, !dbg !3767
  %bf.load804 = load i32, i32* %161, align 8, !dbg !3767
  %bf.lshr805 = lshr i32 %bf.load804, 16, !dbg !3767
  %bf.clear806 = and i32 %bf.lshr805, 255, !dbg !3767
  %call810 = call i8* @ggc_alloc_string(i8* nonnull %arraydecay448, i32 -1) #6, !dbg !3767
  %arrayidx812 = getelementptr inbounds i8*, i8** %5, i64 %indvars.iv61, !dbg !3767
  %162 = load i8*, i8** %arrayidx812, align 8, !dbg !3767
  %call813 = call i8* @ggc_alloc_string(i8* %162, i32 -1) #6, !dbg !3767
  %163 = trunc i64 %indvars.iv61 to i32, !dbg !3767
  %call814 = call %struct.rtx_def* @gen_rtx_fmt_ssiEEEi_stat(i32 17, i32 %bf.clear806, i8* %call810, i8* %call813, i32 %163, %struct.rtvec_def* %call433, %struct.rtvec_def* %call434, %struct.rtvec_def* %call435, i32 %locus) #6, !dbg !3767
  %call815 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %160, %struct.rtx_def* %call814) #6, !dbg !3767
  %164 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec819, align 8, !dbg !3768
  %arrayidx822 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %164, i64 0, i32 1, i64 %indvars.iv61, !dbg !3768
  store %struct.rtx_def* %call815, %struct.rtx_def** %arrayidx822, align 8, !dbg !3769
  %165 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec819, align 8, !dbg !3770
  %arrayidx829 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %165, i64 0, i32 1, i64 %indvars.iv61, !dbg !3770
  %166 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx829, align 8, !dbg !3770
  %167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3770
  %168 = bitcast %union.rtunion_def* %167 to i32**, !dbg !3770
  %169 = load i32*, i32** %168, align 8, !dbg !3770
  %bf.load833 = load i32, i32* %169, align 8, !dbg !3771
  %bf.clear836 = and i32 %bf.load833, -134217729, !dbg !3771
  %bf.set837 = or i32 %bf.clear836, %bf.shl, !dbg !3771
  store i32 %bf.set837, i32* %169, align 8, !dbg !3771
  %chain840 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3772
  %170 = load %union.tree_node*, %union.tree_node** %chain840, align 8, !dbg !3772
  call void @llvm.dbg.value(metadata %union.tree_node* %170, metadata !3254, metadata !DIExpression()), !dbg !3338
  %indvars.iv.next62 = add nuw i64 %indvars.iv61, 1, !dbg !3773
  call void @llvm.dbg.value(metadata i32 undef, metadata !3256, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3338
  br label %for.cond797, !dbg !3774, !llvm.loop !3775

for.end842:                                       ; preds = %for.cond797
  %indvars.iv61.lcssa = phi i64 [ %indvars.iv61, %for.cond797 ], !dbg !3765
  call void @llvm.dbg.value(metadata i64 %indvars.iv61.lcssa, metadata !3256, metadata !DIExpression()), !dbg !3338
  %171 = trunc i64 %indvars.iv61.lcssa to i32, !dbg !3338
  call void @llvm.dbg.value(metadata i32 %171, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata i32 %171, metadata !3256, metadata !DIExpression()), !dbg !3338
  %cmp843 = icmp eq i32 %171, 0, !dbg !3777
  br i1 %cmp843, label %if.then845, label %if.end854, !dbg !3779

if.then845:                                       ; preds = %for.end842
  %172 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec819, align 8, !dbg !3780
  call void @llvm.dbg.value(metadata i32 1, metadata !3256, metadata !DIExpression()), !dbg !3338
  %arrayidx853 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %172, i64 0, i32 1, i64 0, !dbg !3780
  store %struct.rtx_def* %call450, %struct.rtx_def** %arrayidx853, align 8, !dbg !3781
  br label %if.end854, !dbg !3780

if.end854:                                        ; preds = %if.then845, %for.end842
  %i.9 = phi i32 [ 1, %if.then845 ], [ %171, %for.end842 ], !dbg !3757
  call void @llvm.dbg.value(metadata i32 %i.9, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !3254, metadata !DIExpression()), !dbg !3338
  %tobool890 = icmp eq i32 %clobber_conflict_found.2.lcssa, 0, !dbg !3782
  br i1 %tobool890, label %if.end854.split.us, label %if.end854.if.end854.split_crit_edge, !dbg !3783

if.end854.if.end854.split_crit_edge:              ; preds = %if.end854
  br label %for.cond855, !dbg !3783

if.end854.split.us:                               ; preds = %if.end854
  %173 = sext i32 %call1 to i64, !dbg !3783
  %174 = sext i32 %sub to i64, !dbg !3783
  br label %for.cond855.us, !dbg !3783

for.cond855.us:                                   ; preds = %cleanup934.us, %if.end854.split.us
  %tail.7.us = phi %union.tree_node* [ %call36, %if.end854.split.us ], [ %182, %cleanup934.us ], !dbg !3784
  %i.10.us = phi i32 [ %i.9, %if.end854.split.us ], [ %i.11.us, %cleanup934.us ], !dbg !3780
  call void @llvm.dbg.value(metadata i32 %i.10.us, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.7.us, metadata !3254, metadata !DIExpression()), !dbg !3338
  %tobool856.us = icmp eq %union.tree_node* %tail.7.us, null, !dbg !3785
  br i1 %tobool856.us, label %for.end942.us-lcssa.us, label %for.body857.us, !dbg !3785

for.body857.us:                                   ; preds = %for.cond855.us
  %175 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.7.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3786
  %176 = bitcast %union.tree_node** %175 to %struct.tree_string**, !dbg !3786
  %177 = load %struct.tree_string*, %struct.tree_string** %176, align 8, !dbg !3786
  %arraydecay863.us = getelementptr inbounds %struct.tree_string, %struct.tree_string* %177, i64 0, i32 2, i64 0, !dbg !3786
  call void @llvm.dbg.value(metadata i8* %arraydecay863.us, metadata !3329, metadata !DIExpression()), !dbg !3787
  %call865.us = call i32 @decode_reg_name(i8* nonnull %arraydecay863.us) #6, !dbg !3788
  call void @llvm.dbg.value(metadata i32 %call865.us, metadata !3333, metadata !DIExpression()), !dbg !3787
  %cmp866.us = icmp slt i32 %call865.us, 0, !dbg !3789
  br i1 %cmp866.us, label %if.then868.us, label %if.end888.us, !dbg !3791

if.end888.us:                                     ; preds = %for.body857.us
  %call889.us = call %struct.rtx_def* @gen_rtx_REG(i32 14, i32 %call865.us) #6, !dbg !3792
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call889.us, metadata !3334, metadata !DIExpression()), !dbg !3787
  br label %for.cond892.us, !dbg !3793

for.cond892.us:                                   ; preds = %if.end888.us, %for.inc902.us
  %indvars.iv57 = phi i64 [ 0, %if.end888.us ], [ %indvars.iv.next58, %for.inc902.us ], !dbg !3795
  call void @llvm.dbg.value(metadata i64 %indvars.iv57, metadata !3335, metadata !DIExpression()), !dbg !3796
  %cmp893.us = icmp slt i64 %indvars.iv57, %173, !dbg !3797
  br i1 %cmp893.us, label %for.body895.us, label %for.cond905.preheader.us, !dbg !3793

for.cond905.us:                                   ; preds = %for.cond905.preheader.us, %for.inc921.us
  %indvars.iv59 = phi i64 [ 0, %for.cond905.preheader.us ], [ %indvars.iv.next60, %for.inc921.us ], !dbg !3799
  call void @llvm.dbg.value(metadata i64 %indvars.iv59, metadata !3335, metadata !DIExpression()), !dbg !3796
  %cmp907.us = icmp slt i64 %indvars.iv59, %174, !dbg !3801
  br i1 %cmp907.us, label %for.body909.us, label %if.end924.loopexit.us, !dbg !3803

for.body909.us:                                   ; preds = %for.cond905.us
  %178 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3804
  %arrayidx916.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %178, i64 0, i32 1, i64 %indvars.iv59, !dbg !3804
  %179 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx916.us, align 8, !dbg !3804
  %call917.us = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %call889.us, %struct.rtx_def* %179) #6, !dbg !3806
  %tobool918.us = icmp eq i32 %call917.us, 0, !dbg !3806
  br i1 %tobool918.us, label %for.inc921.us, label %if.then919.us, !dbg !3807

if.then919.us:                                    ; preds = %for.body909.us
  call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !3808
  br label %for.inc921.us, !dbg !3808

for.inc921.us:                                    ; preds = %if.then919.us, %for.body909.us
  %indvars.iv.next60 = add nuw nsw i64 %indvars.iv59, 1, !dbg !3809
  call void @llvm.dbg.value(metadata i32 undef, metadata !3335, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3796
  br label %for.cond905.us, !dbg !3810, !llvm.loop !3811

for.body895.us:                                   ; preds = %for.cond892.us
  %arrayidx897.us = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %indvars.iv57, !dbg !3813
  %180 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx897.us, align 8, !dbg !3813
  %call898.us = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %call889.us, %struct.rtx_def* %180) #6, !dbg !3815
  %tobool899.us = icmp eq i32 %call898.us, 0, !dbg !3815
  br i1 %tobool899.us, label %for.inc902.us, label %if.then900.us, !dbg !3816

if.then900.us:                                    ; preds = %for.body895.us
  call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !3817
  br label %for.inc902.us, !dbg !3817

for.inc902.us:                                    ; preds = %if.then900.us, %for.body895.us
  %indvars.iv.next58 = add nuw nsw i64 %indvars.iv57, 1, !dbg !3818
  call void @llvm.dbg.value(metadata i32 undef, metadata !3335, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3796
  br label %for.cond892.us, !dbg !3819, !llvm.loop !3820

if.then868.us:                                    ; preds = %for.body857.us
  %cond.us = icmp eq i32 %call865.us, -4, !dbg !3822
  br i1 %cond.us, label %if.then875.us, label %cleanup934.us, !dbg !3822

if.then875.us:                                    ; preds = %if.then868.us
  %call876.us = call %struct.rtx_def* @gen_rtx_fmt_0_stat(i32 38, i32 0) #6, !dbg !3824
  %call877.us = call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %call876.us) #6, !dbg !3824
  %call878.us = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %call877.us) #6, !dbg !3824
  %181 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec819, align 8, !dbg !3827
  %inc884.us = add nsw i32 %i.10.us, 1, !dbg !3827
  call void @llvm.dbg.value(metadata i32 %inc884.us, metadata !3256, metadata !DIExpression()), !dbg !3338
  %idxprom885.us = sext i32 %i.10.us to i64, !dbg !3827
  %arrayidx886.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %181, i64 0, i32 1, i64 %idxprom885.us, !dbg !3827
  store %struct.rtx_def* %call878.us, %struct.rtx_def** %arrayidx886.us, align 8, !dbg !3828
  br label %cleanup934.us, !dbg !3829

cleanup934.us:                                    ; preds = %if.then875.us, %if.then868.us, %if.end924.loopexit.us
  %i.11.us = phi i32 [ %inc884.us, %if.then875.us ], [ %inc931.us, %if.end924.loopexit.us ], [ %i.10.us, %if.then868.us ], !dbg !3757
  call void @llvm.dbg.value(metadata i32 %i.11.us, metadata !3256, metadata !DIExpression()), !dbg !3338
  %chain941.us = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.7.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3830
  %182 = load %union.tree_node*, %union.tree_node** %chain941.us, align 8, !dbg !3830
  call void @llvm.dbg.value(metadata %union.tree_node* %182, metadata !3254, metadata !DIExpression()), !dbg !3338
  br label %for.cond855.us, !dbg !3831, !llvm.loop !3832

for.cond905.preheader.us:                         ; preds = %for.cond892.us
  br label %for.cond905.us, !dbg !3803

if.end924.loopexit.us:                            ; preds = %for.cond905.us
  %call925.us = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %call889.us) #6, !dbg !3834
  %183 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec819, align 8, !dbg !3835
  %inc931.us = add nsw i32 %i.10.us, 1, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %inc931.us, metadata !3256, metadata !DIExpression()), !dbg !3338
  %idxprom932.us = sext i32 %i.10.us to i64, !dbg !3835
  %arrayidx933.us = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %183, i64 0, i32 1, i64 %idxprom932.us, !dbg !3835
  store %struct.rtx_def* %call925.us, %struct.rtx_def** %arrayidx933.us, align 8, !dbg !3836
  br label %cleanup934.us, !dbg !3837

for.end942.us-lcssa.us:                           ; preds = %for.cond855.us
  br label %for.end942, !dbg !3838

for.cond855:                                      ; preds = %cleanup934, %if.end854.if.end854.split_crit_edge
  %tail.7 = phi %union.tree_node* [ %call36, %if.end854.if.end854.split_crit_edge ], [ %189, %cleanup934 ], !dbg !3784
  %i.10 = phi i32 [ %i.9, %if.end854.if.end854.split_crit_edge ], [ %i.11, %cleanup934 ], !dbg !3780
  call void @llvm.dbg.value(metadata i32 %i.10, metadata !3256, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.7, metadata !3254, metadata !DIExpression()), !dbg !3338
  %tobool856 = icmp eq %union.tree_node* %tail.7, null, !dbg !3785
  br i1 %tobool856, label %for.end942.us-lcssa, label %for.body857, !dbg !3785

for.body857:                                      ; preds = %for.cond855
  %184 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3786
  %185 = bitcast %union.tree_node** %184 to %struct.tree_string**, !dbg !3786
  %186 = load %struct.tree_string*, %struct.tree_string** %185, align 8, !dbg !3786
  %arraydecay863 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %186, i64 0, i32 2, i64 0, !dbg !3786
  call void @llvm.dbg.value(metadata i8* %arraydecay863, metadata !3329, metadata !DIExpression()), !dbg !3787
  %call865 = call i32 @decode_reg_name(i8* nonnull %arraydecay863) #6, !dbg !3788
  call void @llvm.dbg.value(metadata i32 %call865, metadata !3333, metadata !DIExpression()), !dbg !3787
  %cmp866 = icmp slt i32 %call865, 0, !dbg !3789
  br i1 %cmp866, label %if.then868, label %if.end888, !dbg !3791

if.then868:                                       ; preds = %for.body857
  %cond = icmp eq i32 %call865, -4, !dbg !3822
  br i1 %cond, label %if.then875, label %cleanup934, !dbg !3822

if.then875:                                       ; preds = %if.then868
  %call876 = call %struct.rtx_def* @gen_rtx_fmt_0_stat(i32 38, i32 0) #6, !dbg !3824
  %call877 = call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %call876) #6, !dbg !3824
  %call878 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %call877) #6, !dbg !3824
  %187 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec819, align 8, !dbg !3827
  %inc884 = add nsw i32 %i.10, 1, !dbg !3827
  call void @llvm.dbg.value(metadata i32 %inc884, metadata !3256, metadata !DIExpression()), !dbg !3338
  %idxprom885 = sext i32 %i.10 to i64, !dbg !3827
  %arrayidx886 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %187, i64 0, i32 1, i64 %idxprom885, !dbg !3827
  store %struct.rtx_def* %call878, %struct.rtx_def** %arrayidx886, align 8, !dbg !3828
  br label %cleanup934, !dbg !3829

if.end888:                                        ; preds = %for.body857
  %call889 = call %struct.rtx_def* @gen_rtx_REG(i32 14, i32 %call865) #6, !dbg !3792
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call889, metadata !3334, metadata !DIExpression()), !dbg !3787
  %call925 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %call889) #6, !dbg !3834
  %188 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec819, align 8, !dbg !3835
  %inc931 = add nsw i32 %i.10, 1, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %inc931, metadata !3256, metadata !DIExpression()), !dbg !3338
  %idxprom932 = sext i32 %i.10 to i64, !dbg !3835
  %arrayidx933 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %188, i64 0, i32 1, i64 %idxprom932, !dbg !3835
  store %struct.rtx_def* %call925, %struct.rtx_def** %arrayidx933, align 8, !dbg !3836
  br label %cleanup934, !dbg !3837

cleanup934:                                       ; preds = %if.then868, %if.end888, %if.then875
  %i.11 = phi i32 [ %inc884, %if.then875 ], [ %inc931, %if.end888 ], [ %i.10, %if.then868 ], !dbg !3757
  call void @llvm.dbg.value(metadata i32 %i.11, metadata !3256, metadata !DIExpression()), !dbg !3338
  %chain941 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3830
  %189 = load %union.tree_node*, %union.tree_node** %chain941, align 8, !dbg !3830
  call void @llvm.dbg.value(metadata %union.tree_node* %189, metadata !3254, metadata !DIExpression()), !dbg !3338
  br label %for.cond855, !dbg !3831, !llvm.loop !3832

for.end942.us-lcssa:                              ; preds = %for.cond855
  br label %for.end942, !dbg !3838

for.end942:                                       ; preds = %for.end942.us-lcssa.us, %for.end942.us-lcssa
  br i1 %cmp753, label %if.then945, label %if.else947, !dbg !3840

if.then945:                                       ; preds = %for.end942
  %call946 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call796) #6, !dbg !3841
  br label %if.end952, !dbg !3841

if.else947:                                       ; preds = %for.end942
  %call948 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call796) #6, !dbg !3842
  br label %if.end952

if.end952:                                        ; preds = %if.then772, %if.then945, %if.else947, %if.then780, %cond.end763
  call void @llvm.dbg.value(metadata i32 0, metadata !3256, metadata !DIExpression()), !dbg !3338
  %190 = sext i32 %call1 to i64, !dbg !3843
  br label %for.cond953, !dbg !3843

for.cond953:                                      ; preds = %for.inc967, %if.end952
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc967 ], [ 0, %if.end952 ], !dbg !3845
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3256, metadata !DIExpression()), !dbg !3338
  %cmp954 = icmp slt i64 %indvars.iv, %190, !dbg !3846
  br i1 %cmp954, label %for.body956, label %for.end969, !dbg !3848

for.body956:                                      ; preds = %for.cond953
  %arrayidx958 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %indvars.iv, !dbg !3849
  %191 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx958, align 8, !dbg !3849
  %tobool959 = icmp eq %struct.rtx_def* %191, null, !dbg !3849
  br i1 %tobool959, label %for.inc967, label %if.then960, !dbg !3851

if.then960:                                       ; preds = %for.body956
  %arrayidx964 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %indvars.iv, !dbg !3852
  %192 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx964, align 8, !dbg !3852
  %call965 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %191, %struct.rtx_def* %192) #6, !dbg !3853
  br label %for.inc967, !dbg !3853

for.inc967:                                       ; preds = %for.body956, %if.then960
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3854
  call void @llvm.dbg.value(metadata i32 undef, metadata !3256, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3338
  br label %for.cond953, !dbg !3855, !llvm.loop !3856

for.end969:                                       ; preds = %for.cond953
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 32), align 4, !dbg !3858
  call void @free_temp_slots() #6, !dbg !3859
  br label %cleanup970, !dbg !3860

cleanup970.loopexit:                              ; preds = %cleanup209
  br label %cleanup970, !dbg !3860

cleanup970.loopexit29:                            ; preds = %cleanup161
  br label %cleanup970, !dbg !3860

cleanup970.loopexit30:                            ; preds = %cleanup
  br label %cleanup970, !dbg !3860

cleanup970:                                       ; preds = %cleanup970.loopexit30, %cleanup970.loopexit29, %cleanup970.loopexit, %entry, %for.end969, %if.then178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3860
  ret void, !dbg !3860
}

declare dso_local void @expand_assignment(%union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @free_temp_slots() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @resolve_asm_operand_names(%union.tree_node* %string, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %labels) local_unnamed_addr #5 !dbg !3861 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %string, metadata !3865, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs, metadata !3866, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs, metadata !3867, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.value(metadata %union.tree_node* %labels, metadata !3868, metadata !DIExpression()), !dbg !3873
  %call = tail call fastcc zeroext i8 @check_unique_operand_names(%union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %labels) #7, !dbg !3874
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs, metadata !3872, metadata !DIExpression()), !dbg !3873
  br label %for.cond, !dbg !3875

for.cond:                                         ; preds = %for.inc, %entry
  %t.0 = phi %union.tree_node* [ %inputs, %entry ], [ %5, %for.inc ], !dbg !3877
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3872, metadata !DIExpression()), !dbg !3873
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !3878
  br i1 %tobool, label %for.end, label %for.body, !dbg !3878

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3879
  %0 = bitcast i32* %purpose to %struct.tree_list**, !dbg !3879
  %1 = load %struct.tree_list*, %struct.tree_list** %0, align 8, !dbg !3879
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1, i64 0, i32 2, !dbg !3879
  %2 = bitcast %union.tree_node** %value to %struct.tree_string**, !dbg !3879
  %3 = load %struct.tree_string*, %struct.tree_string** %2, align 8, !dbg !3879
  %arraydecay = getelementptr inbounds %struct.tree_string, %struct.tree_string* %3, i64 0, i32 2, i64 0, !dbg !3879
  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !3871, metadata !DIExpression()), !dbg !3873
  %call3 = tail call i8* @strchr(i8* nonnull %arraydecay, i32 91) #6, !dbg !3882
  %cmp = icmp eq i8* %call3, null, !dbg !3884
  br i1 %cmp, label %for.inc, label %if.then, !dbg !3885

if.then:                                          ; preds = %for.body
  %call4 = tail call i8* @xstrdup(i8* nonnull %arraydecay) #6, !dbg !3886
  call void @llvm.dbg.value(metadata i8* %call4, metadata !3869, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.value(metadata i8* %call4, metadata !3870, metadata !DIExpression()), !dbg !3873
  br label %while.cond, !dbg !3888

while.cond:                                       ; preds = %while.body, %if.then
  %p.0 = phi i8* [ %call4, %if.then ], [ %call7, %while.body ], !dbg !3889
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !3870, metadata !DIExpression()), !dbg !3873
  %call5 = tail call i8* @strchr(i8* %p.0, i32 91) #6, !dbg !3890
  call void @llvm.dbg.value(metadata i8* %call5, metadata !3870, metadata !DIExpression()), !dbg !3873
  %cmp6 = icmp eq i8* %call5, null, !dbg !3891
  br i1 %cmp6, label %while.end, label %while.body, !dbg !3888

while.body:                                       ; preds = %while.cond
  %call7 = tail call fastcc i8* @resolve_operand_name_1(i8* nonnull %call5, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* null) #7, !dbg !3892
  call void @llvm.dbg.value(metadata i8* %call7, metadata !3870, metadata !DIExpression()), !dbg !3873
  br label %while.cond, !dbg !3888, !llvm.loop !3893

while.end:                                        ; preds = %while.cond
  %call8 = tail call i64 @strlen(i8* %call4) #6, !dbg !3895
  %conv = trunc i64 %call8 to i32, !dbg !3895
  %call9 = tail call %union.tree_node* @build_string(i32 %conv, i8* %call4) #6, !dbg !3896
  %4 = load %struct.tree_list*, %struct.tree_list** %0, align 8, !dbg !3897
  %value13 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %4, i64 0, i32 2, !dbg !3897
  store %union.tree_node* %call9, %union.tree_node** %value13, align 8, !dbg !3898
  tail call void @free(i8* %call4) #6, !dbg !3899
  br label %for.inc, !dbg !3900

for.inc:                                          ; preds = %for.body, %while.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3901
  %5 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !3901
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !3872, metadata !DIExpression()), !dbg !3873
  br label %for.cond, !dbg !3902, !llvm.loop !3903

for.end:                                          ; preds = %for.cond
  %str15 = getelementptr inbounds %union.tree_node, %union.tree_node* %string, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3905
  %arraydecay16 = bitcast i32* %str15 to i8*, !dbg !3905
  call void @llvm.dbg.value(metadata i8* %arraydecay16, metadata !3871, metadata !DIExpression()), !dbg !3873
  br label %while.cond17, !dbg !3906

while.cond17:                                     ; preds = %if.else37, %for.end
  %c.0 = phi i8* [ %arraydecay16, %for.end ], [ %arrayidx, %if.else37 ], !dbg !3873
  call void @llvm.dbg.value(metadata i8* %c.0, metadata !3871, metadata !DIExpression()), !dbg !3873
  %call18 = tail call i8* @strchr(i8* %c.0, i32 37) #6, !dbg !3907
  call void @llvm.dbg.value(metadata i8* %call18, metadata !3871, metadata !DIExpression()), !dbg !3873
  %cond = icmp eq i8* %call18, null, !dbg !3906
  br i1 %cond, label %if.end85.loopexit, label %while.body21, !dbg !3906

while.body21:                                     ; preds = %while.cond17
  %arrayidx = getelementptr inbounds i8, i8* %call18, i64 1, !dbg !3908
  %6 = load i8, i8* %arrayidx, align 1, !dbg !3908
  %cmp23 = icmp eq i8 %6, 91, !dbg !3911
  br i1 %cmp23, label %while.end38, label %if.else, !dbg !3912

if.else:                                          ; preds = %while.body21
  %idxprom = zext i8 %6 to i64, !dbg !3913
  %arrayidx28 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom, !dbg !3913
  %7 = load i16, i16* %arrayidx28, align 2, !dbg !3913
  %8 = and i16 %7, 136, !dbg !3913
  %tobool31 = icmp eq i16 %8, 0, !dbg !3913
  br i1 %tobool31, label %if.else37, label %land.lhs.true, !dbg !3915

land.lhs.true:                                    ; preds = %if.else
  %arrayidx32 = getelementptr inbounds i8, i8* %call18, i64 2, !dbg !3916
  %9 = load i8, i8* %arrayidx32, align 1, !dbg !3916
  %cmp34 = icmp eq i8 %9, 91, !dbg !3917
  br i1 %cmp34, label %while.end38, label %if.else37, !dbg !3918

if.else37:                                        ; preds = %if.else, %land.lhs.true
  call void @llvm.dbg.value(metadata i8* %arrayidx, metadata !3871, metadata !DIExpression()), !dbg !3873
  br label %while.cond17, !dbg !3919, !llvm.loop !3921

while.end38:                                      ; preds = %land.lhs.true, %while.body21
  %call18.lcssa5 = phi i8* [ %call18, %land.lhs.true ], [ %call18, %while.body21 ], !dbg !3907
  %call44 = tail call i8* @xstrdup(i8* nonnull %arraydecay16) #6, !dbg !3923
  call void @llvm.dbg.value(metadata i8* %call44, metadata !3869, metadata !DIExpression()), !dbg !3873
  %sub.ptr.lhs.cast = ptrtoint i8* %call18.lcssa5 to i64, !dbg !3926
  %sub.ptr.rhs.cast = ptrtoint i32* %str15 to i64, !dbg !3926
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3926
  %add.ptr48 = getelementptr inbounds i8, i8* %call44, i64 %sub.ptr.sub, !dbg !3927
  call void @llvm.dbg.value(metadata i8* %add.ptr48, metadata !3870, metadata !DIExpression()), !dbg !3873
  br label %while.cond49, !dbg !3928

while.cond49:                                     ; preds = %while.cond49.backedge, %while.end38
  %p.1 = phi i8* [ %add.ptr48, %while.end38 ], [ %p.1.be, %while.cond49.backedge ], !dbg !3929
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !3870, metadata !DIExpression()), !dbg !3873
  %call50 = tail call i8* @strchr(i8* %p.1, i32 37) #6, !dbg !3930
  call void @llvm.dbg.value(metadata i8* %call50, metadata !3870, metadata !DIExpression()), !dbg !3873
  %cmp51 = icmp eq i8* %call50, null, !dbg !3931
  br i1 %cmp51, label %while.end81, label %while.body53, !dbg !3928

while.body53:                                     ; preds = %while.cond49
  %arrayidx54 = getelementptr inbounds i8, i8* %call50, i64 1, !dbg !3932
  %10 = load i8, i8* %arrayidx54, align 1, !dbg !3932
  %cmp56 = icmp eq i8 %10, 91, !dbg !3935
  br i1 %cmp56, label %if.end79, label %if.else60, !dbg !3936

if.else60:                                        ; preds = %while.body53
  %idxprom64 = zext i8 %10 to i64, !dbg !3937
  %arrayidx65 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom64, !dbg !3937
  %11 = load i16, i16* %arrayidx65, align 2, !dbg !3937
  %12 = and i16 %11, 136, !dbg !3937
  %tobool68 = icmp eq i16 %12, 0, !dbg !3937
  br i1 %tobool68, label %if.else76, label %land.lhs.true69, !dbg !3939

land.lhs.true69:                                  ; preds = %if.else60
  %arrayidx70 = getelementptr inbounds i8, i8* %call50, i64 2, !dbg !3940
  %13 = load i8, i8* %arrayidx70, align 1, !dbg !3940
  %cmp72 = icmp eq i8 %13, 91, !dbg !3941
  br i1 %cmp72, label %if.then74, label %if.else76, !dbg !3942

if.then74:                                        ; preds = %land.lhs.true69
  call void @llvm.dbg.value(metadata i8* %arrayidx70, metadata !3870, metadata !DIExpression()), !dbg !3873
  br label %if.end79

if.else76:                                        ; preds = %if.else60, %land.lhs.true69
  call void @llvm.dbg.value(metadata i8* %arrayidx54, metadata !3870, metadata !DIExpression()), !dbg !3873
  br label %while.cond49.backedge, !dbg !3943

while.cond49.backedge:                            ; preds = %if.else76, %if.end79
  %p.1.be = phi i8* [ %call80, %if.end79 ], [ %arrayidx54, %if.else76 ]
  br label %while.cond49, !dbg !3873, !llvm.loop !3945

if.end79:                                         ; preds = %while.body53, %if.then74
  %p.2 = phi i8* [ %arrayidx70, %if.then74 ], [ %arrayidx54, %while.body53 ], !dbg !3947
  call void @llvm.dbg.value(metadata i8* %p.2, metadata !3870, metadata !DIExpression()), !dbg !3873
  %call80 = tail call fastcc i8* @resolve_operand_name_1(i8* %p.2, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %labels) #7, !dbg !3948
  call void @llvm.dbg.value(metadata i8* %call80, metadata !3870, metadata !DIExpression()), !dbg !3873
  br label %while.cond49.backedge, !dbg !3928

while.end81:                                      ; preds = %while.cond49
  %call82 = tail call i64 @strlen(i8* %call44) #6, !dbg !3949
  %conv83 = trunc i64 %call82 to i32, !dbg !3949
  %call84 = tail call %union.tree_node* @build_string(i32 %conv83, i8* %call44) #6, !dbg !3950
  call void @llvm.dbg.value(metadata %union.tree_node* %call84, metadata !3865, metadata !DIExpression()), !dbg !3873
  tail call void @free(i8* %call44) #6, !dbg !3951
  br label %if.end85, !dbg !3952

if.end85.loopexit:                                ; preds = %while.cond17
  br label %if.end85, !dbg !3953

if.end85:                                         ; preds = %if.end85.loopexit, %while.end81
  %string.addr.0 = phi %union.tree_node* [ %call84, %while.end81 ], [ %string, %if.end85.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node* %string.addr.0, metadata !3865, metadata !DIExpression()), !dbg !3873
  ret %union.tree_node* %string.addr.0, !dbg !3953
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @check_unique_operand_names(%union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %labels) unnamed_addr #5 !dbg !3954 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs, metadata !3958, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs, metadata !3959, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.value(metadata %union.tree_node* %labels, metadata !3960, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs, metadata !3961, metadata !DIExpression()), !dbg !3976
  br label %for.cond, !dbg !3977

for.cond:                                         ; preds = %for.inc16, %entry
  %i.0 = phi %union.tree_node* [ %outputs, %entry ], [ %6, %for.inc16 ], !dbg !3978
  call void @llvm.dbg.value(metadata %union.tree_node* %i.0, metadata !3961, metadata !DIExpression()), !dbg !3976
  %tobool = icmp eq %union.tree_node* %i.0, null, !dbg !3979
  br i1 %tobool, label %for.cond20.preheader, label %for.body, !dbg !3979

for.cond20.preheader:                             ; preds = %for.cond
  br label %for.cond20, !dbg !3980

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %i.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3981
  %0 = bitcast i32* %purpose to %struct.tree_list**, !dbg !3981
  %1 = load %struct.tree_list*, %struct.tree_list** %0, align 8, !dbg !3981
  %purpose2 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1, i64 0, i32 1, !dbg !3981
  %2 = load %union.tree_node*, %union.tree_node** %purpose2, align 8, !dbg !3981
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3963, metadata !DIExpression()), !dbg !3982
  %tobool3 = icmp eq %union.tree_node* %2, null, !dbg !3983
  br i1 %tobool3, label %cleanup, label %if.end, !dbg !3985

if.end:                                           ; preds = %for.body
  br label %for.cond4, !dbg !3986

for.cond4:                                        ; preds = %for.inc, %if.end
  %i.0.pn = phi %union.tree_node* [ %i.0, %if.end ], [ %j.0, %for.inc ]
  %j.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %i.0.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3988
  %j.0 = load %union.tree_node*, %union.tree_node** %j.0.in, align 8, !dbg !3988
  call void @llvm.dbg.value(metadata %union.tree_node* %j.0, metadata !3962, metadata !DIExpression()), !dbg !3976
  %tobool5 = icmp eq %union.tree_node* %j.0, null, !dbg !3989
  br i1 %tobool5, label %cleanup.loopexit, label %for.body6, !dbg !3989

for.body6:                                        ; preds = %for.cond4
  %purpose8 = getelementptr inbounds %union.tree_node, %union.tree_node* %j.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3990
  %3 = bitcast i32* %purpose8 to %struct.tree_list**, !dbg !3990
  %4 = load %struct.tree_list*, %struct.tree_list** %3, align 8, !dbg !3990
  %purpose10 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %4, i64 0, i32 1, !dbg !3990
  %5 = load %union.tree_node*, %union.tree_node** %purpose10, align 8, !dbg !3990
  %call = tail call i32 @simple_cst_equal(%union.tree_node* nonnull %2, %union.tree_node* %5) #6, !dbg !3993
  %tobool11 = icmp eq i32 %call, 0, !dbg !3993
  br i1 %tobool11, label %for.inc, label %cleanup.loopexit, !dbg !3994

for.inc:                                          ; preds = %for.body6
  br label %for.cond4, !dbg !3995, !llvm.loop !3996

cleanup.loopexit:                                 ; preds = %for.cond4, %for.body6
  %cleanup.dest.slot.0.ph = phi i32 [ 0, %for.cond4 ], [ 8, %for.body6 ]
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 4, %for.body ], [ %cleanup.dest.slot.0.ph, %cleanup.loopexit ]
  switch i32 %cleanup.dest.slot.0, label %cleanup120.loopexit5 [
    i32 0, label %for.inc16
    i32 4, label %for.inc16
    i32 8, label %failure.loopexit6
  ]

for.inc16:                                        ; preds = %cleanup, %cleanup
  %chain18 = getelementptr inbounds %union.tree_node, %union.tree_node* %i.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3998
  %6 = load %union.tree_node*, %union.tree_node** %chain18, align 8, !dbg !3998
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3961, metadata !DIExpression()), !dbg !3976
  br label %for.cond, !dbg !3999, !llvm.loop !4000

for.cond20:                                       ; preds = %for.cond20.preheader, %for.inc66
  %i.1 = phi %union.tree_node* [ %17, %for.inc66 ], [ %inputs, %for.cond20.preheader ], !dbg !4002
  call void @llvm.dbg.value(metadata %union.tree_node* %i.1, metadata !3961, metadata !DIExpression()), !dbg !3976
  %tobool21 = icmp eq %union.tree_node* %i.1, null, !dbg !3980
  br i1 %tobool21, label %for.cond70.preheader, label %for.body22, !dbg !3980

for.cond70.preheader:                             ; preds = %for.cond20
  br label %for.cond70, !dbg !4003

for.body22:                                       ; preds = %for.cond20
  %purpose25 = getelementptr inbounds %union.tree_node, %union.tree_node* %i.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4004
  %7 = bitcast i32* %purpose25 to %struct.tree_list**, !dbg !4004
  %8 = load %struct.tree_list*, %struct.tree_list** %7, align 8, !dbg !4004
  %purpose27 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %8, i64 0, i32 1, !dbg !4004
  %9 = load %union.tree_node*, %union.tree_node** %purpose27, align 8, !dbg !4004
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !3967, metadata !DIExpression()), !dbg !4005
  %tobool28 = icmp eq %union.tree_node* %9, null, !dbg !4006
  br i1 %tobool28, label %cleanup63, label %if.end30, !dbg !4008

if.end30:                                         ; preds = %for.body22
  br label %for.cond33, !dbg !4009

for.cond33:                                       ; preds = %for.inc44, %if.end30
  %i.1.pn = phi %union.tree_node* [ %i.1, %if.end30 ], [ %j.1, %for.inc44 ]
  %j.1.in = getelementptr inbounds %union.tree_node, %union.tree_node* %i.1.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4011
  %j.1 = load %union.tree_node*, %union.tree_node** %j.1.in, align 8, !dbg !4011
  call void @llvm.dbg.value(metadata %union.tree_node* %j.1, metadata !3962, metadata !DIExpression()), !dbg !3976
  %tobool34 = icmp eq %union.tree_node* %j.1, null, !dbg !4012
  br i1 %tobool34, label %for.cond48.preheader, label %for.body35, !dbg !4012

for.cond48.preheader:                             ; preds = %for.cond33
  br label %for.cond48, !dbg !4013

for.body35:                                       ; preds = %for.cond33
  %purpose37 = getelementptr inbounds %union.tree_node, %union.tree_node* %j.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4015
  %10 = bitcast i32* %purpose37 to %struct.tree_list**, !dbg !4015
  %11 = load %struct.tree_list*, %struct.tree_list** %10, align 8, !dbg !4015
  %purpose39 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %11, i64 0, i32 1, !dbg !4015
  %12 = load %union.tree_node*, %union.tree_node** %purpose39, align 8, !dbg !4015
  %call40 = tail call i32 @simple_cst_equal(%union.tree_node* nonnull %9, %union.tree_node* %12) #6, !dbg !4018
  %tobool41 = icmp eq i32 %call40, 0, !dbg !4018
  br i1 %tobool41, label %for.inc44, label %cleanup63.loopexit2, !dbg !4019

for.inc44:                                        ; preds = %for.body35
  br label %for.cond33, !dbg !4020, !llvm.loop !4021

for.cond48:                                       ; preds = %for.cond48.preheader, %for.inc59
  %j.2 = phi %union.tree_node* [ %16, %for.inc59 ], [ %outputs, %for.cond48.preheader ], !dbg !4023
  call void @llvm.dbg.value(metadata %union.tree_node* %j.2, metadata !3962, metadata !DIExpression()), !dbg !3976
  %tobool49 = icmp eq %union.tree_node* %j.2, null, !dbg !4013
  br i1 %tobool49, label %cleanup63.loopexit, label %for.body50, !dbg !4013

for.body50:                                       ; preds = %for.cond48
  %purpose52 = getelementptr inbounds %union.tree_node, %union.tree_node* %j.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4024
  %13 = bitcast i32* %purpose52 to %struct.tree_list**, !dbg !4024
  %14 = load %struct.tree_list*, %struct.tree_list** %13, align 8, !dbg !4024
  %purpose54 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %14, i64 0, i32 1, !dbg !4024
  %15 = load %union.tree_node*, %union.tree_node** %purpose54, align 8, !dbg !4024
  %call55 = tail call i32 @simple_cst_equal(%union.tree_node* nonnull %9, %union.tree_node* %15) #6, !dbg !4027
  %tobool56 = icmp eq i32 %call55, 0, !dbg !4027
  br i1 %tobool56, label %for.inc59, label %cleanup63.loopexit, !dbg !4028

for.inc59:                                        ; preds = %for.body50
  %chain61 = getelementptr inbounds %union.tree_node, %union.tree_node* %j.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4029
  %16 = load %union.tree_node*, %union.tree_node** %chain61, align 8, !dbg !4029
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !3962, metadata !DIExpression()), !dbg !3976
  br label %for.cond48, !dbg !4030, !llvm.loop !4031

cleanup63.loopexit:                               ; preds = %for.cond48, %for.body50
  %cleanup.dest.slot.1.ph = phi i32 [ 0, %for.cond48 ], [ 8, %for.body50 ]
  br label %cleanup63

cleanup63.loopexit2:                              ; preds = %for.body35
  br label %cleanup63

cleanup63:                                        ; preds = %cleanup63.loopexit2, %cleanup63.loopexit, %for.body22
  %cleanup.dest.slot.1 = phi i32 [ 11, %for.body22 ], [ %cleanup.dest.slot.1.ph, %cleanup63.loopexit ], [ 8, %cleanup63.loopexit2 ]
  switch i32 %cleanup.dest.slot.1, label %cleanup120.loopexit3 [
    i32 0, label %for.inc66
    i32 11, label %for.inc66
    i32 8, label %failure.loopexit4
  ]

for.inc66:                                        ; preds = %cleanup63, %cleanup63
  %chain68 = getelementptr inbounds %union.tree_node, %union.tree_node* %i.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4033
  %17 = load %union.tree_node*, %union.tree_node** %chain68, align 8, !dbg !4033
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !3961, metadata !DIExpression()), !dbg !3976
  br label %for.cond20, !dbg !4034, !llvm.loop !4035

for.cond70:                                       ; preds = %for.cond70.preheader, %for.inc112
  %i.2 = phi %union.tree_node* [ %26, %for.inc112 ], [ %labels, %for.cond70.preheader ], !dbg !4037
  call void @llvm.dbg.value(metadata %union.tree_node* %i.2, metadata !3961, metadata !DIExpression()), !dbg !3976
  %tobool71 = icmp eq %union.tree_node* %i.2, null, !dbg !4003
  br i1 %tobool71, label %cleanup120.loopexit, label %for.body72, !dbg !4003

for.body72:                                       ; preds = %for.cond70
  %purpose75 = getelementptr inbounds %union.tree_node, %union.tree_node* %i.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4038
  %18 = bitcast i32* %purpose75 to %union.tree_node**, !dbg !4038
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !4038
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !3971, metadata !DIExpression()), !dbg !4039
  %tobool76 = icmp eq %union.tree_node* %19, null, !dbg !4040
  br i1 %tobool76, label %cleanup109, label %if.end78, !dbg !4042

if.end78:                                         ; preds = %for.body72
  br label %for.cond81, !dbg !4043

for.cond81:                                       ; preds = %for.inc90, %if.end78
  %i.2.pn = phi %union.tree_node* [ %i.2, %if.end78 ], [ %j.3, %for.inc90 ]
  %j.3.in = getelementptr inbounds %union.tree_node, %union.tree_node* %i.2.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4045
  %j.3 = load %union.tree_node*, %union.tree_node** %j.3.in, align 8, !dbg !4045
  call void @llvm.dbg.value(metadata %union.tree_node* %j.3, metadata !3962, metadata !DIExpression()), !dbg !3976
  %tobool82 = icmp eq %union.tree_node* %j.3, null, !dbg !4046
  br i1 %tobool82, label %for.cond94.preheader, label %for.body83, !dbg !4046

for.cond94.preheader:                             ; preds = %for.cond81
  br label %for.cond94, !dbg !4047

for.body83:                                       ; preds = %for.cond81
  %purpose85 = getelementptr inbounds %union.tree_node, %union.tree_node* %j.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4049
  %20 = bitcast i32* %purpose85 to %union.tree_node**, !dbg !4049
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !4049
  %call86 = tail call i32 @simple_cst_equal(%union.tree_node* nonnull %19, %union.tree_node* %21) #6, !dbg !4052
  %tobool87 = icmp eq i32 %call86, 0, !dbg !4052
  br i1 %tobool87, label %for.inc90, label %cleanup109.loopexit1, !dbg !4053

for.inc90:                                        ; preds = %for.body83
  br label %for.cond81, !dbg !4054, !llvm.loop !4055

for.cond94:                                       ; preds = %for.cond94.preheader, %for.inc105
  %j.4 = phi %union.tree_node* [ %25, %for.inc105 ], [ %inputs, %for.cond94.preheader ], !dbg !4057
  call void @llvm.dbg.value(metadata %union.tree_node* %j.4, metadata !3962, metadata !DIExpression()), !dbg !3976
  %tobool95 = icmp eq %union.tree_node* %j.4, null, !dbg !4047
  br i1 %tobool95, label %cleanup109.loopexit, label %for.body96, !dbg !4047

for.body96:                                       ; preds = %for.cond94
  %purpose98 = getelementptr inbounds %union.tree_node, %union.tree_node* %j.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4058
  %22 = bitcast i32* %purpose98 to %struct.tree_list**, !dbg !4058
  %23 = load %struct.tree_list*, %struct.tree_list** %22, align 8, !dbg !4058
  %purpose100 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %23, i64 0, i32 1, !dbg !4058
  %24 = load %union.tree_node*, %union.tree_node** %purpose100, align 8, !dbg !4058
  %call101 = tail call i32 @simple_cst_equal(%union.tree_node* nonnull %19, %union.tree_node* %24) #6, !dbg !4061
  %tobool102 = icmp eq i32 %call101, 0, !dbg !4061
  br i1 %tobool102, label %for.inc105, label %cleanup109.loopexit, !dbg !4062

for.inc105:                                       ; preds = %for.body96
  %chain107 = getelementptr inbounds %union.tree_node, %union.tree_node* %j.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4063
  %25 = load %union.tree_node*, %union.tree_node** %chain107, align 8, !dbg !4063
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !3962, metadata !DIExpression()), !dbg !3976
  br label %for.cond94, !dbg !4064, !llvm.loop !4065

cleanup109.loopexit:                              ; preds = %for.cond94, %for.body96
  %cleanup.dest.slot.2.ph = phi i32 [ 0, %for.cond94 ], [ 8, %for.body96 ]
  br label %cleanup109

cleanup109.loopexit1:                             ; preds = %for.body83
  br label %cleanup109

cleanup109:                                       ; preds = %cleanup109.loopexit1, %cleanup109.loopexit, %for.body72
  %cleanup.dest.slot.2 = phi i32 [ 20, %for.body72 ], [ %cleanup.dest.slot.2.ph, %cleanup109.loopexit ], [ 8, %cleanup109.loopexit1 ]
  switch i32 %cleanup.dest.slot.2, label %cleanup120.loopexit [
    i32 0, label %for.inc112
    i32 20, label %for.inc112
    i32 8, label %failure.loopexit
  ]

for.inc112:                                       ; preds = %cleanup109, %cleanup109
  %chain114 = getelementptr inbounds %union.tree_node, %union.tree_node* %i.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4067
  %26 = load %union.tree_node*, %union.tree_node** %chain114, align 8, !dbg !4067
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !3961, metadata !DIExpression()), !dbg !3976
  br label %for.cond70, !dbg !4068, !llvm.loop !4069

failure.loopexit:                                 ; preds = %cleanup109
  %purpose75.lcssa = phi i32* [ %purpose75, %cleanup109 ], !dbg !4038
  call void @llvm.dbg.value(metadata %union.tree_node* %i.2, metadata !3961, metadata !DIExpression()), !dbg !3976
  %.pre = bitcast i32* %purpose75.lcssa to %struct.tree_list**, !dbg !4071
  br label %failure, !dbg !4071

failure.loopexit4:                                ; preds = %cleanup63
  %.lcssa16 = phi %struct.tree_list** [ %7, %cleanup63 ], !dbg !4004
  call void @llvm.dbg.value(metadata %union.tree_node* %i.1, metadata !3961, metadata !DIExpression()), !dbg !3976
  br label %failure, !dbg !4071

failure.loopexit6:                                ; preds = %cleanup
  %.lcssa17 = phi %struct.tree_list** [ %0, %cleanup ], !dbg !3981
  call void @llvm.dbg.value(metadata %union.tree_node* %i.0, metadata !3961, metadata !DIExpression()), !dbg !3976
  br label %failure, !dbg !4071

failure:                                          ; preds = %failure.loopexit6, %failure.loopexit4, %failure.loopexit
  %.pre-phi = phi %struct.tree_list** [ %.lcssa17, %failure.loopexit6 ], [ %.lcssa16, %failure.loopexit4 ], [ %.pre, %failure.loopexit ], !dbg !4071
  call void @llvm.dbg.label(metadata !3975), !dbg !4072
  %27 = load %struct.tree_list*, %struct.tree_list** %.pre-phi, align 8, !dbg !4071
  %purpose119 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %27, i64 0, i32 1, !dbg !4071
  %28 = bitcast %union.tree_node** %purpose119 to %struct.tree_string**, !dbg !4071
  %29 = load %struct.tree_string*, %struct.tree_string** %28, align 8, !dbg !4071
  %arraydecay = getelementptr inbounds %struct.tree_string, %struct.tree_string* %29, i64 0, i32 2, i64 0, !dbg !4071
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0), i8* nonnull %arraydecay) #6, !dbg !4073
  br label %cleanup120, !dbg !4074

cleanup120.loopexit:                              ; preds = %cleanup109, %for.cond70
  br label %cleanup120, !dbg !4075

cleanup120.loopexit3:                             ; preds = %cleanup63
  br label %cleanup120, !dbg !4075

cleanup120.loopexit5:                             ; preds = %cleanup
  br label %cleanup120, !dbg !4075

cleanup120:                                       ; preds = %cleanup120.loopexit5, %cleanup120.loopexit3, %cleanup120.loopexit, %failure
  %retval.0 = phi i8 [ 0, %failure ], [ 1, %cleanup120.loopexit ], [ undef, %cleanup120.loopexit3 ], [ undef, %cleanup120.loopexit5 ]
  ret i8 %retval.0, !dbg !4075
}

declare dso_local i8* @xstrdup(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i8* @resolve_operand_name_1(i8* %p, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %labels) unnamed_addr #5 !dbg !4076 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !4080, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs, metadata !4081, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs, metadata !4082, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata %union.tree_node* %labels, metadata !4083, metadata !DIExpression()), !dbg !4100
  %incdec.ptr = getelementptr inbounds i8, i8* %p, i64 1, !dbg !4101
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !4080, metadata !DIExpression()), !dbg !4100
  %call = tail call i8* @strchr(i8* nonnull %incdec.ptr, i32 93) #6, !dbg !4102
  call void @llvm.dbg.value(metadata i8* %call, metadata !4084, metadata !DIExpression()), !dbg !4100
  %tobool = icmp eq i8* %call, null, !dbg !4103
  br i1 %tobool, label %if.then, label %if.end, !dbg !4105

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !4106
  %call1 = tail call i8* @strchr(i8* nonnull %incdec.ptr, i32 0) #6, !dbg !4108
  br label %cleanup65, !dbg !4109

if.end:                                           ; preds = %entry
  store i8 0, i8* %call, align 1, !dbg !4110
  call void @llvm.dbg.value(metadata i32 0, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs, metadata !4086, metadata !DIExpression()), !dbg !4100
  br label %for.cond, !dbg !4111

for.cond:                                         ; preds = %for.inc, %if.end
  %op.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ], !dbg !4112
  %t.0 = phi %union.tree_node* [ %outputs, %if.end ], [ %3, %for.inc ], !dbg !4112
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !4086, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.0, metadata !4085, metadata !DIExpression()), !dbg !4100
  %tobool2 = icmp eq %union.tree_node* %t.0, null, !dbg !4113
  br i1 %tobool2, label %for.cond9.preheader, label %for.body, !dbg !4113

for.cond9.preheader:                              ; preds = %for.cond
  %op.0.lcssa = phi i32 [ %op.0, %for.cond ], !dbg !4112
  call void @llvm.dbg.value(metadata i32 %op.0.lcssa, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.0.lcssa, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.0.lcssa, metadata !4085, metadata !DIExpression()), !dbg !4100
  br label %for.cond9, !dbg !4114

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4115
  %0 = bitcast i32* %purpose to %struct.tree_list**, !dbg !4115
  %1 = load %struct.tree_list*, %struct.tree_list** %0, align 8, !dbg !4115
  %purpose4 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1, i64 0, i32 1, !dbg !4115
  %2 = load %union.tree_node*, %union.tree_node** %purpose4, align 8, !dbg !4115
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4087, metadata !DIExpression()), !dbg !4116
  %tobool5 = icmp eq %union.tree_node* %2, null, !dbg !4117
  br i1 %tobool5, label %if.end8, label %land.lhs.true, !dbg !4119

land.lhs.true:                                    ; preds = %for.body
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4120
  %arraydecay = bitcast i32* %str to i8*, !dbg !4120
  %call6 = tail call i32 @strcmp(i8* nonnull %arraydecay, i8* nonnull %incdec.ptr) #6, !dbg !4121
  %cmp = icmp eq i32 %call6, 0, !dbg !4122
  br i1 %cmp, label %cleanup, label %if.end8, !dbg !4123

if.end8:                                          ; preds = %for.body, %land.lhs.true
  br label %cleanup, !dbg !4124

cleanup:                                          ; preds = %land.lhs.true, %if.end8
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end8 ], [ 5, %land.lhs.true ]
  switch i32 %cleanup.dest.slot.0, label %cleanup65.loopexit3 [
    i32 0, label %for.inc
    i32 5, label %found.loopexit4
  ]

for.inc:                                          ; preds = %cleanup
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4125
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4125
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4086, metadata !DIExpression()), !dbg !4100
  %inc = add nuw nsw i32 %op.0, 1, !dbg !4126
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4085, metadata !DIExpression()), !dbg !4100
  br label %for.cond, !dbg !4127, !llvm.loop !4128

for.cond9:                                        ; preds = %for.cond9.preheader, %for.inc29
  %op.1 = phi i32 [ %inc32, %for.inc29 ], [ %op.0.lcssa, %for.cond9.preheader ], !dbg !4100
  %t.1 = phi %union.tree_node* [ %7, %for.inc29 ], [ %inputs, %for.cond9.preheader ], !dbg !4130
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !4086, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.1, metadata !4085, metadata !DIExpression()), !dbg !4100
  %tobool10 = icmp eq %union.tree_node* %t.1, null, !dbg !4114
  br i1 %tobool10, label %for.cond34.preheader, label %for.body11, !dbg !4114

for.cond34.preheader:                             ; preds = %for.cond9
  %op.1.lcssa = phi i32 [ %op.1, %for.cond9 ], !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.1.lcssa, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.1.lcssa, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.1.lcssa, metadata !4085, metadata !DIExpression()), !dbg !4100
  br label %for.cond34, !dbg !4131

for.body11:                                       ; preds = %for.cond9
  %purpose14 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4132
  %4 = bitcast i32* %purpose14 to %struct.tree_list**, !dbg !4132
  %5 = load %struct.tree_list*, %struct.tree_list** %4, align 8, !dbg !4132
  %purpose16 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %5, i64 0, i32 1, !dbg !4132
  %6 = load %union.tree_node*, %union.tree_node** %purpose16, align 8, !dbg !4132
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4091, metadata !DIExpression()), !dbg !4133
  %tobool17 = icmp eq %union.tree_node* %6, null, !dbg !4134
  br i1 %tobool17, label %if.end25, label %land.lhs.true18, !dbg !4136

land.lhs.true18:                                  ; preds = %for.body11
  %str20 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4137
  %arraydecay21 = bitcast i32* %str20 to i8*, !dbg !4137
  %call22 = tail call i32 @strcmp(i8* nonnull %arraydecay21, i8* nonnull %incdec.ptr) #6, !dbg !4138
  %cmp23 = icmp eq i32 %call22, 0, !dbg !4139
  br i1 %cmp23, label %cleanup26, label %if.end25, !dbg !4140

if.end25:                                         ; preds = %for.body11, %land.lhs.true18
  br label %cleanup26, !dbg !4141

cleanup26:                                        ; preds = %land.lhs.true18, %if.end25
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end25 ], [ 5, %land.lhs.true18 ]
  switch i32 %cleanup.dest.slot.1, label %cleanup65.loopexit1 [
    i32 0, label %for.inc29
    i32 5, label %found.loopexit2
  ]

for.inc29:                                        ; preds = %cleanup26
  %chain31 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4142
  %7 = load %union.tree_node*, %union.tree_node** %chain31, align 8, !dbg !4142
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !4086, metadata !DIExpression()), !dbg !4100
  %inc32 = add nuw nsw i32 %op.1, 1, !dbg !4143
  call void @llvm.dbg.value(metadata i32 %inc32, metadata !4085, metadata !DIExpression()), !dbg !4100
  br label %for.cond9, !dbg !4144, !llvm.loop !4145

for.cond34:                                       ; preds = %for.cond34.preheader, %for.inc52
  %op.2 = phi i32 [ %inc55, %for.inc52 ], [ %op.1.lcssa, %for.cond34.preheader ], !dbg !4100
  %t.2 = phi %union.tree_node* [ %10, %for.inc52 ], [ %labels, %for.cond34.preheader ], !dbg !4147
  call void @llvm.dbg.value(metadata %union.tree_node* %t.2, metadata !4086, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.2, metadata !4085, metadata !DIExpression()), !dbg !4100
  %tobool35 = icmp eq %union.tree_node* %t.2, null, !dbg !4131
  br i1 %tobool35, label %for.end56, label %for.body36, !dbg !4131

for.body36:                                       ; preds = %for.cond34
  %purpose39 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4148
  %8 = bitcast i32* %purpose39 to %union.tree_node**, !dbg !4148
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !4148
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !4095, metadata !DIExpression()), !dbg !4149
  %tobool40 = icmp eq %union.tree_node* %9, null, !dbg !4150
  br i1 %tobool40, label %if.end48, label %land.lhs.true41, !dbg !4152

land.lhs.true41:                                  ; preds = %for.body36
  %str43 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4153
  %arraydecay44 = bitcast i32* %str43 to i8*, !dbg !4153
  %call45 = tail call i32 @strcmp(i8* nonnull %arraydecay44, i8* nonnull %incdec.ptr) #6, !dbg !4154
  %cmp46 = icmp eq i32 %call45, 0, !dbg !4155
  br i1 %cmp46, label %cleanup49, label %if.end48, !dbg !4156

if.end48:                                         ; preds = %for.body36, %land.lhs.true41
  br label %cleanup49, !dbg !4157

cleanup49:                                        ; preds = %land.lhs.true41, %if.end48
  %cleanup.dest.slot.2 = phi i32 [ 0, %if.end48 ], [ 5, %land.lhs.true41 ]
  switch i32 %cleanup.dest.slot.2, label %cleanup65.loopexit [
    i32 0, label %for.inc52
    i32 5, label %found.loopexit
  ]

for.inc52:                                        ; preds = %cleanup49
  %chain54 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4158
  %10 = load %union.tree_node*, %union.tree_node** %chain54, align 8, !dbg !4158
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !4086, metadata !DIExpression()), !dbg !4100
  %inc55 = add nuw nsw i32 %op.2, 1, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %inc55, metadata !4085, metadata !DIExpression()), !dbg !4100
  br label %for.cond34, !dbg !4160, !llvm.loop !4161

for.end56:                                        ; preds = %for.cond34
  %call57 = tail call i8* @identifier_to_locale(i8* nonnull %incdec.ptr) #6, !dbg !4163
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28, i64 0, i64 0), i8* %call57) #6, !dbg !4164
  call void @llvm.dbg.value(metadata i32 0, metadata !4085, metadata !DIExpression()), !dbg !4100
  br label %found, !dbg !4165

found.loopexit:                                   ; preds = %cleanup49
  %op.2.lcssa20 = phi i32 [ %op.2, %cleanup49 ], !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.2.lcssa20, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.2.lcssa20, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.2.lcssa20, metadata !4085, metadata !DIExpression()), !dbg !4100
  br label %found, !dbg !4166

found.loopexit2:                                  ; preds = %cleanup26
  %op.1.lcssa22 = phi i32 [ %op.1, %cleanup26 ], !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.1.lcssa22, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.1.lcssa22, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.1.lcssa22, metadata !4085, metadata !DIExpression()), !dbg !4100
  br label %found, !dbg !4166

found.loopexit4:                                  ; preds = %cleanup
  %op.0.lcssa24 = phi i32 [ %op.0, %cleanup ], !dbg !4112
  call void @llvm.dbg.value(metadata i32 %op.0.lcssa24, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.0.lcssa24, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.0.lcssa24, metadata !4085, metadata !DIExpression()), !dbg !4100
  br label %found, !dbg !4166

found:                                            ; preds = %found.loopexit4, %found.loopexit2, %found.loopexit, %for.end56
  %op.3 = phi i32 [ 0, %for.end56 ], [ %op.2.lcssa20, %found.loopexit ], [ %op.1.lcssa22, %found.loopexit2 ], [ %op.0.lcssa24, %found.loopexit4 ], !dbg !4100
  call void @llvm.dbg.value(metadata i32 %op.3, metadata !4085, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.label(metadata !4099), !dbg !4167
  call void @llvm.dbg.value(metadata i8* %p, metadata !4080, metadata !DIExpression()), !dbg !4100
  %call59 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %p, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32 %op.3) #6, !dbg !4166
  %call60 = tail call i8* @strchr(i8* %p, i32 0) #6, !dbg !4168
  call void @llvm.dbg.value(metadata i8* %call60, metadata !4080, metadata !DIExpression()), !dbg !4100
  %cmp61 = icmp ugt i8* %call60, %call, !dbg !4169
  br i1 %cmp61, label %cond.true, label %cond.end, !dbg !4169

cond.true:                                        ; preds = %found
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1408, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4169
  br label %cond.end, !dbg !4169

cond.end:                                         ; preds = %found, %cond.true
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 1, !dbg !4170
  %call63 = tail call i64 @strlen(i8* nonnull %add.ptr) #6, !dbg !4171
  %add = add i64 %call63, 1, !dbg !4172
  %call64 = tail call i8* @memmove(i8* %call60, i8* nonnull %add.ptr, i64 %add) #6, !dbg !4173
  br label %cleanup65, !dbg !4174

cleanup65.loopexit:                               ; preds = %cleanup49
  br label %cleanup65, !dbg !4175

cleanup65.loopexit1:                              ; preds = %cleanup26
  br label %cleanup65, !dbg !4175

cleanup65.loopexit3:                              ; preds = %cleanup
  br label %cleanup65, !dbg !4175

cleanup65:                                        ; preds = %cleanup65.loopexit3, %cleanup65.loopexit1, %cleanup65.loopexit, %cond.end, %if.then
  %retval.0 = phi i8* [ %call60, %cond.end ], [ %call1, %if.then ], [ undef, %cleanup65.loopexit ], [ undef, %cleanup65.loopexit1 ], [ undef, %cleanup65.loopexit3 ]
  ret i8* %retval.0, !dbg !4175
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_expr_stmt(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !4176 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4178, metadata !DIExpression()), !dbg !4187
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4188
  %call = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %0, i32 0, i32 0) #7, !dbg !4189
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4179, metadata !DIExpression()), !dbg !4187
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4190
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !4190
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4180, metadata !DIExpression()), !dbg !4187
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !4191
  br i1 %tobool, label %if.end42, label %land.lhs.true, !dbg !4192

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !4193
  %bf.load = load i32, i32* %2, align 8, !dbg !4193
  %bf.clear = and i32 %bf.load, 65535, !dbg !4193
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !4193
  br i1 %cmp, label %land.lhs.true2, label %if.end42, !dbg !4194

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4195
  %bf.load3 = load i64, i64* %3, align 8, !dbg !4195
  %bf.cast1 = and i64 %bf.load3, 524288, !dbg !4195
  %tobool5 = icmp eq i64 %bf.cast1, 0, !dbg !4195
  br i1 %tobool5, label %if.end42, label %if.then, !dbg !4196

if.then:                                          ; preds = %land.lhs.true2
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4197
  %bf.load7 = load i64, i64* %4, align 8, !dbg !4197
  %bf.cast92 = and i64 %bf.load7, 65535, !dbg !4197
  %cmp10 = icmp eq i64 %bf.cast92, 14, !dbg !4197
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !4197

cond.true:                                        ; preds = %if.then
  %call11 = tail call i32 @vector_type_mode(%union.tree_node* %1) #6, !dbg !4197
  br label %cond.end, !dbg !4197

cond.false:                                       ; preds = %if.then
  %type12 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !4197
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type12, i64 0, i32 6, !dbg !4197
  %bf.load13 = load i32, i32* %mode, align 4, !dbg !4197
  %bf.lshr14 = lshr i32 %bf.load13, 16, !dbg !4197
  %bf.clear15 = and i32 %bf.lshr14, 255, !dbg !4197
  br label %cond.end, !dbg !4197

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call11, %cond.true ], [ %bf.clear15, %cond.false ], !dbg !4197
  %cmp16 = icmp eq i32 %cond, 0, !dbg !4198
  br i1 %cmp16, label %if.end42, label %if.else, !dbg !4199

if.else:                                          ; preds = %cond.end
  %bf.load19 = load i64, i64* %4, align 8, !dbg !4200
  %bf.cast213 = and i64 %bf.load19, 65535, !dbg !4200
  %cmp22 = icmp eq i64 %bf.cast213, 14, !dbg !4200
  br i1 %cmp22, label %cond.true23, label %cond.false25, !dbg !4200

cond.true23:                                      ; preds = %if.else
  %call24 = tail call i32 @vector_type_mode(%union.tree_node* %1) #6, !dbg !4200
  br label %cond.end31, !dbg !4200

cond.false25:                                     ; preds = %if.else
  %type26 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !4200
  %mode27 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type26, i64 0, i32 6, !dbg !4200
  %bf.load28 = load i32, i32* %mode27, align 4, !dbg !4200
  %bf.lshr29 = lshr i32 %bf.load28, 16, !dbg !4200
  %bf.clear30 = and i32 %bf.lshr29, 255, !dbg !4200
  br label %cond.end31, !dbg !4200

cond.end31:                                       ; preds = %cond.false25, %cond.true23
  %cond32 = phi i32 [ %call24, %cond.true23 ], [ %bf.clear30, %cond.false25 ], !dbg !4200
  %cmp33 = icmp eq i32 %cond32, 1, !dbg !4201
  br i1 %cmp33, label %if.else36, label %if.then34, !dbg !4202

if.then34:                                        ; preds = %cond.end31
  %call35 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* nonnull %call) #6, !dbg !4203
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call35, metadata !4179, metadata !DIExpression()), !dbg !4187
  br label %if.end42, !dbg !4204

if.else36:                                        ; preds = %cond.end31
  %call37 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !4205
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !4181, metadata !DIExpression()), !dbg !4206
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4207
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !4207
  %call39 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %6) #7, !dbg !4208
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* nonnull %call, %struct.rtx_def* nonnull %call, i32 81, %struct.rtx_def* %call39, i32 1, i32 0, %struct.rtx_def* %call37) #6, !dbg !4209
  %call40 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call37) #6, !dbg !4210
  br label %if.end42

if.end42:                                         ; preds = %land.lhs.true2, %entry, %cond.end, %if.else36, %if.then34, %land.lhs.true
  tail call void @free_temp_slots() #6, !dbg !4211
  ret void, !dbg !4212
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier) unnamed_addr #0 !dbg !4213 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4217, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !4218, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4219, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !4220, metadata !DIExpression()), !dbg !4221
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier, %struct.rtx_def** null) #6, !dbg !4222
  ret %struct.rtx_def* %call, !dbg !4223
}

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @emit_cmp_and_jump_insns(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @warn_if_unused_value(%union.tree_node* %exp, i32 %locus) local_unnamed_addr #5 !dbg !4224 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4231, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %locus, metadata !4232, metadata !DIExpression()), !dbg !4236
  br label %restart, !dbg !4237

restart:                                          ; preds = %restart.backedge, %entry
  %locus.addr.0 = phi i32 [ %locus, %entry ], [ %locus.addr.1, %restart.backedge ]
  %exp.addr.0 = phi %union.tree_node* [ %exp, %entry ], [ %exp.addr.0.be, %restart.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !4231, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %locus.addr.0, metadata !4232, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.label(metadata !4233), !dbg !4238
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4239
  %bf.load = load i64, i64* %0, align 8, !dbg !4239
  %bf.cast1 = and i64 %bf.load, 16777216, !dbg !4239
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !4239
  br i1 %tobool, label %lor.lhs.false, label %return.loopexit, !dbg !4241

lor.lhs.false:                                    ; preds = %restart
  %bf.cast52 = and i64 %bf.load, 8388608, !dbg !4242
  %tobool6 = icmp eq i64 %bf.cast52, 0, !dbg !4242
  br i1 %tobool6, label %if.end, label %return.loopexit, !dbg !4243

if.end:                                           ; preds = %lor.lhs.false
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4244
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !4244
  %2 = load i64*, i64** %1, align 8, !dbg !4244
  %bf.load8 = load i64, i64* %2, align 8, !dbg !4244
  %bf.cast103 = and i64 %bf.load8, 65535, !dbg !4244
  %cmp = icmp eq i64 %bf.cast103, 19, !dbg !4244
  br i1 %cmp, label %return.loopexit, label %if.end12, !dbg !4246

if.end12:                                         ; preds = %if.end
  %bf.cast16 = and i64 %bf.load, 65535, !dbg !4247
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast16, !dbg !4247
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4247
  %cmp17 = icmp ugt i32 %3, 3, !dbg !4247
  br i1 %cmp17, label %land.lhs.true, label %cond.end, !dbg !4247

land.lhs.true:                                    ; preds = %if.end12
  %cmp24 = icmp ult i32 %3, 11, !dbg !4247
  br i1 %cmp24, label %cond.true, label %cond.end, !dbg !4247

cond.true:                                        ; preds = %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4247
  %5 = load i32, i32* %4, align 8, !dbg !4247
  br label %cond.end, !dbg !4247

cond.end:                                         ; preds = %if.end12, %land.lhs.true, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %land.lhs.true ], [ 0, %if.end12 ], !dbg !4247
  %cmp27 = icmp eq i32 %cond, 0, !dbg !4247
  br i1 %cmp27, label %if.end50, label %if.then28, !dbg !4249

if.then28:                                        ; preds = %cond.end
  br i1 %cmp17, label %land.lhs.true36, label %if.end50, !dbg !4250

land.lhs.true36:                                  ; preds = %if.then28
  %cmp43 = icmp ult i32 %3, 11, !dbg !4250
  br i1 %cmp43, label %cond.true44, label %if.end50, !dbg !4250

cond.true44:                                      ; preds = %land.lhs.true36
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4250
  %7 = load i32, i32* %6, align 8, !dbg !4250
  br label %if.end50, !dbg !4250

if.end50:                                         ; preds = %cond.end, %cond.true44, %land.lhs.true36, %if.then28
  %locus.addr.1 = phi i32 [ %locus.addr.0, %cond.end ], [ %7, %cond.true44 ], [ 0, %land.lhs.true36 ], [ 0, %if.then28 ]
  call void @llvm.dbg.value(metadata i32 %locus.addr.1, metadata !4232, metadata !DIExpression()), !dbg !4236
  %8 = trunc i64 %bf.load to i16, !dbg !4251
  switch i16 %8, label %sw.default [
    i16 126, label %return.loopexit
    i16 128, label %return.loopexit
    i16 125, label %return.loopexit
    i16 127, label %return.loopexit
    i16 53, label %return.loopexit
    i16 54, label %return.loopexit
    i16 55, label %return.loopexit
    i16 59, label %return.loopexit
    i16 130, label %return.loopexit
    i16 60, label %return.loopexit
    i16 136, label %return.loopexit
    i16 129, label %return.loopexit
    i16 58, label %sw.bb55
    i16 120, label %sw.bb58
    i16 117, label %sw.bb58
    i16 92, label %sw.bb62
    i16 91, label %sw.bb62
    i16 52, label %sw.bb66
    i16 56, label %sw.bb87
    i16 47, label %sw.bb96
  ], !dbg !4252

sw.bb55:                                          ; preds = %if.end50
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4253
  %arrayidx57 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !4253
  br label %restart.backedge, !dbg !4254

restart.backedge:                                 ; preds = %sw.bb55, %sw.bb58, %sw.bb62, %if.end83, %if.then107
  %exp.addr.0.be.in = phi %union.tree_node** [ %operands98, %if.then107 ], [ %arrayidx75, %if.end83 ], [ %arrayidx65, %sw.bb62 ], [ %operands60, %sw.bb58 ], [ %arrayidx57, %sw.bb55 ]
  %exp.addr.0.be = load %union.tree_node*, %union.tree_node** %exp.addr.0.be.in, align 8, !dbg !4255
  br label %restart, !dbg !4236

sw.bb58:                                          ; preds = %if.end50, %if.end50
  %operands60 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4256
  br label %restart.backedge, !dbg !4257

sw.bb62:                                          ; preds = %if.end50, %if.end50
  %operands64 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4258
  %arrayidx65 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands64, i64 1, !dbg !4258
  br label %restart.backedge, !dbg !4259

sw.bb66:                                          ; preds = %if.end50
  %operands68 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4260
  %9 = load %union.tree_node*, %union.tree_node** %operands68, align 8, !dbg !4260
  %call = tail call i32 @warn_if_unused_value(%union.tree_node* %9, i32 %locus.addr.1) #7, !dbg !4262
  %tobool70 = icmp eq i32 %call, 0, !dbg !4262
  br i1 %tobool70, label %if.end72, label %return.loopexit, !dbg !4263

if.end72:                                         ; preds = %sw.bb66
  %arrayidx75 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands68, i64 1, !dbg !4264
  %10 = bitcast %union.tree_node** %arrayidx75 to i64**, !dbg !4264
  %11 = load i64*, i64** %10, align 8, !dbg !4264
  %bf.load77 = load i64, i64* %11, align 8, !dbg !4264
  %bf.cast807 = and i64 %bf.load77, 131072, !dbg !4264
  %tobool81 = icmp eq i64 %bf.cast807, 0, !dbg !4264
  br i1 %tobool81, label %if.end83, label %return.loopexit, !dbg !4266

if.end83:                                         ; preds = %if.end72
  br label %restart.backedge, !dbg !4267

sw.bb87:                                          ; preds = %if.end50
  %bf.load.lcssa24 = phi i64 [ %bf.load, %if.end50 ], !dbg !4239
  %locus.addr.1.lcssa21 = phi i32 [ %locus.addr.1, %if.end50 ]
  call void @llvm.dbg.value(metadata i32 %locus.addr.1.lcssa21, metadata !4232, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %locus.addr.1.lcssa21, metadata !4232, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %locus.addr.1.lcssa21, metadata !4232, metadata !DIExpression()), !dbg !4236
  %bf.cast926 = and i64 %bf.load.lcssa24, 65536, !dbg !4268
  %tobool93 = icmp eq i64 %bf.cast926, 0, !dbg !4268
  br i1 %tobool93, label %warn, label %return, !dbg !4270

sw.bb96:                                          ; preds = %if.end50
  %operands98 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4271
  %12 = bitcast %union.tree_node** %operands98 to %struct.tree_common**, !dbg !4271
  %13 = load %struct.tree_common*, %struct.tree_common** %12, align 8, !dbg !4271
  %type101 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !4271
  %14 = bitcast %union.tree_node** %type101 to i64**, !dbg !4271
  %15 = load i64*, i64** %14, align 8, !dbg !4271
  %bf.load103 = load i64, i64* %15, align 8, !dbg !4271
  %bf.cast1054 = and i64 %bf.load103, 65535, !dbg !4273
  %cmp106 = icmp eq i64 %bf.cast1054, 12, !dbg !4273
  br i1 %cmp106, label %if.then107, label %sw.default, !dbg !4274

if.then107:                                       ; preds = %sw.bb96
  br label %restart.backedge, !dbg !4275

sw.default:                                       ; preds = %sw.bb96, %if.end50
  %exp.addr.0.lcssa25 = phi %union.tree_node* [ %exp.addr.0, %sw.bb96 ], [ %exp.addr.0, %if.end50 ]
  %bf.load.lcssa23 = phi i64 [ %bf.load, %sw.bb96 ], [ %bf.load, %if.end50 ], !dbg !4239
  %locus.addr.1.lcssa = phi i32 [ %locus.addr.1, %sw.bb96 ], [ %locus.addr.1, %if.end50 ]
  %.lcssa = phi i32 [ %3, %sw.bb96 ], [ %3, %if.end50 ], !dbg !4247
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa25, metadata !4231, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa25, metadata !4231, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %locus.addr.1.lcssa, metadata !4232, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %locus.addr.1.lcssa, metadata !4232, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa25, metadata !4231, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa25, metadata !4231, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %locus.addr.1.lcssa, metadata !4232, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %locus.addr.1.lcssa, metadata !4232, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa25, metadata !4231, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa25, metadata !4231, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %locus.addr.1.lcssa, metadata !4232, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %locus.addr.1.lcssa, metadata !4232, metadata !DIExpression()), !dbg !4236
  %cmp118 = icmp eq i32 %.lcssa, 3, !dbg !4277
  br i1 %cmp118, label %land.lhs.true127, label %lor.lhs.false119, !dbg !4279

lor.lhs.false119:                                 ; preds = %sw.default
  %cmp126 = icmp eq i32 %.lcssa, 4, !dbg !4280
  br i1 %cmp126, label %land.lhs.true127, label %if.end135, !dbg !4281

land.lhs.true127:                                 ; preds = %lor.lhs.false119, %sw.default
  %bf.cast1325 = and i64 %bf.load.lcssa23, 524288, !dbg !4282
  %tobool133 = icmp eq i64 %bf.cast1325, 0, !dbg !4282
  br i1 %tobool133, label %if.end135, label %return, !dbg !4283

if.end135:                                        ; preds = %land.lhs.true127, %lor.lhs.false119
  %cmp142 = icmp eq i32 %.lcssa, 10, !dbg !4284
  br i1 %cmp142, label %land.lhs.true143, label %warn, !dbg !4286

land.lhs.true143:                                 ; preds = %if.end135
  %call144 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %exp.addr.0.lcssa25) #7, !dbg !4287
  %cmp145 = icmp eq i32 %call144, 0, !dbg !4288
  br i1 %cmp145, label %return, label %warn, !dbg !4289

warn:                                             ; preds = %sw.bb87, %if.end135, %land.lhs.true143
  %locus.addr.122 = phi i32 [ %locus.addr.1.lcssa21, %sw.bb87 ], [ %locus.addr.1.lcssa, %if.end135 ], [ %locus.addr.1.lcssa, %land.lhs.true143 ]
  call void @llvm.dbg.label(metadata !4234), !dbg !4290
  %call148 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %locus.addr.122, i32 229, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !4291
  br label %return, !dbg !4292

return.loopexit:                                  ; preds = %if.end, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %restart, %lor.lhs.false, %sw.bb66, %if.end72
  %retval.0.ph = phi i32 [ 0, %if.end72 ], [ 1, %sw.bb66 ], [ 0, %if.end50 ], [ 0, %if.end50 ], [ 0, %if.end50 ], [ 0, %if.end50 ], [ 0, %if.end50 ], [ 0, %if.end50 ], [ 0, %if.end50 ], [ 0, %if.end50 ], [ 0, %if.end50 ], [ 0, %if.end50 ], [ 0, %if.end50 ], [ 0, %if.end50 ], [ 0, %if.end ], [ 0, %restart ], [ 0, %lor.lhs.false ]
  br label %return, !dbg !4293

return:                                           ; preds = %return.loopexit, %sw.bb87, %land.lhs.true127, %land.lhs.true143, %warn
  %retval.0 = phi i32 [ 1, %warn ], [ 0, %sw.bb87 ], [ 0, %land.lhs.true127 ], [ 0, %land.lhs.true143 ], [ %retval.0.ph, %return.loopexit ], !dbg !4236
  ret i32 %retval.0, !dbg !4293
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_operand_length(%union.tree_node* %node) unnamed_addr #0 !dbg !4294 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !4298, metadata !DIExpression()), !dbg !4299
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4300
  %bf.load = load i64, i64* %0, align 8, !dbg !4300
  %bf.cast = and i64 %bf.load, 65535, !dbg !4300
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4300
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4300
  %cmp = icmp eq i32 %1, 9, !dbg !4300
  br i1 %cmp, label %if.then, label %if.else, !dbg !4302

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4303
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !4303
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !4303
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !4303
  %4 = load i64, i64* %low, align 8, !dbg !4303
  %conv = trunc i64 %4 to i32, !dbg !4303
  br label %return, !dbg !4304

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !4305
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !4305
  %conv9 = zext i8 %5 to i32, !dbg !4305
  br label %return, !dbg !4306

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv9, %if.else ], !dbg !4307
  ret i32 %retval.0, !dbg !4308
}

declare dso_local zeroext i8 @warning_at(i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_null_return() local_unnamed_addr #5 !dbg !4309 {
entry:
  tail call void @clobber_return_register() #6, !dbg !4310
  tail call fastcc void @expand_null_return_1() #7, !dbg !4311
  ret void, !dbg !4312
}

declare dso_local void @clobber_return_register() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_null_return_1() unnamed_addr #5 !dbg !4313 {
entry:
  tail call void @clear_pending_stack_adjust() #6, !dbg !4314
  tail call void @do_pending_stack_adjust() #6, !dbg !4315
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 11), align 8, !dbg !4316
  tail call void @emit_jump(%struct.rtx_def* %0) #7, !dbg !4317
  ret void, !dbg !4318
}

; Function Attrs: nounwind uwtable
define dso_local void @expand_naked_return() local_unnamed_addr #5 !dbg !4319 {
entry:
  tail call void @clear_pending_stack_adjust() #6, !dbg !4322
  tail call void @do_pending_stack_adjust() #6, !dbg !4323
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 12), align 8, !dbg !4324
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !4321, metadata !DIExpression()), !dbg !4325
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !4326
  br i1 %cmp, label %if.then, label %if.end, !dbg !4328

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !4329
  store %struct.rtx_def* %call, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 12), align 8, !dbg !4330
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4321, metadata !DIExpression()), !dbg !4325
  br label %if.end, !dbg !4331

if.end:                                           ; preds = %if.then, %entry
  %end_label.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %0, %entry ], !dbg !4325
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end_label.0, metadata !4321, metadata !DIExpression()), !dbg !4325
  tail call void @emit_jump(%struct.rtx_def* %end_label.0) #7, !dbg !4332
  ret void, !dbg !4333
}

declare dso_local void @clear_pending_stack_adjust() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_return(%union.tree_node* %retval) local_unnamed_addr #5 !dbg !4334 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %retval, metadata !4336, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4338, metadata !DIExpression()), !dbg !4361
  %0 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !4362
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %0, i64 0, i32 2, !dbg !4362
  %1 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !4362
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !4362
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !4362
  %3 = bitcast %union.tree_node** %type2 to i64**, !dbg !4362
  %4 = load i64*, i64** %3, align 8, !dbg !4362
  %bf.load = load i64, i64* %4, align 8, !dbg !4362
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !4364
  %cmp = icmp eq i64 %bf.cast4, 19, !dbg !4364
  br i1 %cmp, label %if.then, label %if.end, !dbg !4365

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %retval) #7, !dbg !4366
  tail call void @expand_null_return() #7, !dbg !4368
  br label %cleanup.cont286, !dbg !4369

if.end:                                           ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4370
  %cmp3 = icmp eq %union.tree_node* %5, %retval, !dbg !4372
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !4373

if.then4:                                         ; preds = %if.end
  tail call void @expand_null_return() #7, !dbg !4374
  br label %cleanup.cont286, !dbg !4376

if.else:                                          ; preds = %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %retval, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4377
  %bf.load6 = load i64, i64* %6, align 8, !dbg !4377
  %bf.cast85 = and i64 %bf.load6, 65535, !dbg !4379
  %cmp9 = icmp eq i64 %bf.cast85, 53, !dbg !4379
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false, !dbg !4380

lor.lhs.false:                                    ; preds = %if.else
  %cmp14 = icmp eq i64 %bf.cast85, 54, !dbg !4381
  br i1 %cmp14, label %land.lhs.true, label %if.end26, !dbg !4382

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %retval, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4383
  %7 = bitcast %union.tree_node** %operands to i64**, !dbg !4383
  %8 = load i64*, i64** %7, align 8, !dbg !4383
  %bf.load16 = load i64, i64* %8, align 8, !dbg !4383
  %bf.cast1813 = and i64 %bf.load16, 65535, !dbg !4384
  %cmp19 = icmp eq i64 %bf.cast1813, 36, !dbg !4384
  br i1 %cmp19, label %if.then20, label %if.end26, !dbg !4385

if.then20:                                        ; preds = %land.lhs.true
  %arrayidx23 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !4386
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx23, align 8, !dbg !4386
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !4339, metadata !DIExpression()), !dbg !4361
  br label %if.end26, !dbg !4387

if.end26:                                         ; preds = %if.then20, %land.lhs.true, %lor.lhs.false
  %retval_rhs.0 = phi %union.tree_node* [ %9, %if.then20 ], [ %retval, %land.lhs.true ], [ %retval, %lor.lhs.false ], !dbg !4388
  call void @llvm.dbg.value(metadata %union.tree_node* %retval_rhs.0, metadata !4339, metadata !DIExpression()), !dbg !4361
  %result = getelementptr inbounds %struct.tree_common, %struct.tree_common* %0, i64 7, !dbg !4389
  %10 = bitcast %struct.tree_common* %result to %struct.tree_decl_with_rtl**, !dbg !4389
  %11 = load %struct.tree_decl_with_rtl*, %struct.tree_decl_with_rtl** %10, align 8, !dbg !4389
  %rtl = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %11, i64 0, i32 1, !dbg !4389
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4389
  %tobool = icmp eq %struct.rtx_def* %12, null, !dbg !4389
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4389

cond.true:                                        ; preds = %if.end26
  br label %cond.end, !dbg !4389

cond.false:                                       ; preds = %if.end26
  %13 = bitcast %struct.tree_decl_with_rtl* %11 to %union.tree_node*, !dbg !4389
  tail call void @make_decl_rtl(%union.tree_node* %13) #6, !dbg !4389
  %14 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !4389
  %result34 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %14, i64 0, i32 3, !dbg !4389
  %15 = bitcast %union.tree_node** %result34 to %struct.tree_decl_with_rtl**, !dbg !4389
  %16 = load %struct.tree_decl_with_rtl*, %struct.tree_decl_with_rtl** %15, align 8, !dbg !4389
  %rtl36 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %16, i64 0, i32 1, !dbg !4389
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl36, align 8, !dbg !4389
  br label %cond.end, !dbg !4389

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %12, %cond.true ], [ %cond.pre, %cond.false ], !dbg !4389
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !4337, metadata !DIExpression()), !dbg !4361
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %retval_rhs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4390
  %bf.load38 = load i64, i64* %17, align 8, !dbg !4390
  %bf.cast407 = and i64 %bf.load38, 65535, !dbg !4391
  %cmp41 = icmp eq i64 %bf.cast407, 36, !dbg !4391
  br i1 %cmp41, label %if.then42, label %if.else43, !dbg !4392

if.then42:                                        ; preds = %cond.end
  tail call fastcc void @expand_value_return(%struct.rtx_def* %cond) #7, !dbg !4393
  br label %cleanup.cont286, !dbg !4393

if.else43:                                        ; preds = %cond.end
  %cond2 = icmp eq %union.tree_node* %retval_rhs.0, null, !dbg !4394
  br i1 %cond2, label %if.else277, label %land.lhs.true45, !dbg !4394

land.lhs.true45:                                  ; preds = %if.else43
  %type47 = getelementptr inbounds %union.tree_node, %union.tree_node* %retval_rhs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4395
  %18 = bitcast %union.tree_node** %type47 to i64**, !dbg !4395
  %19 = load i64*, i64** %18, align 8, !dbg !4395
  %bf.load49 = load i64, i64* %19, align 8, !dbg !4395
  %bf.cast518 = and i64 %bf.load49, 65535, !dbg !4395
  %cmp52 = icmp eq i64 %bf.cast518, 14, !dbg !4395
  br i1 %cmp52, label %cond.true53, label %cond.false57, !dbg !4395

cond.true53:                                      ; preds = %land.lhs.true45
  %.cast = bitcast i64* %19 to %union.tree_node*, !dbg !4395
  %call56 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !4395
  br label %cond.end63, !dbg !4395

cond.false57:                                     ; preds = %land.lhs.true45
  %type60 = bitcast i64* %19 to %struct.tree_type*, !dbg !4395
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type60, i64 0, i32 6, !dbg !4395
  %bf.load61 = load i32, i32* %mode, align 4, !dbg !4395
  %bf.lshr = lshr i32 %bf.load61, 16, !dbg !4395
  %bf.clear62 = and i32 %bf.lshr, 255, !dbg !4395
  br label %cond.end63, !dbg !4395

cond.end63:                                       ; preds = %cond.false57, %cond.true53
  %cond64 = phi i32 [ %call56, %cond.true53 ], [ %bf.clear62, %cond.false57 ], !dbg !4395
  %cmp65 = icmp eq i32 %cond64, 1, !dbg !4396
  br i1 %cmp65, label %land.lhs.true66, label %if.else219, !dbg !4397

land.lhs.true66:                                  ; preds = %cond.end63
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 0, !dbg !4398
  %bf.load67 = load i32, i32* %20, align 8, !dbg !4398
  %bf.clear68 = and i32 %bf.load67, 65535, !dbg !4398
  %cmp69 = icmp eq i32 %bf.clear68, 37, !dbg !4398
  br i1 %cmp69, label %if.then70, label %if.else219, !dbg !4399

if.then70:                                        ; preds = %land.lhs.true66
  call void @llvm.dbg.value(metadata i64 0, metadata !4346, metadata !DIExpression()), !dbg !4400
  %21 = load %union.tree_node*, %union.tree_node** %type47, align 8, !dbg !4401
  %call73 = tail call i64 @int_size_in_bytes(%union.tree_node* %21) #6, !dbg !4402
  call void @llvm.dbg.value(metadata i64 %call73, metadata !4347, metadata !DIExpression()), !dbg !4400
  %sub = add i64 %call73, 3, !dbg !4403
  %div = lshr i64 %sub, 2, !dbg !4404
  %22 = bitcast %union.tree_node** %type47 to %struct.tree_type**, !dbg !4405
  %23 = load %struct.tree_type*, %struct.tree_type** %22, align 8, !dbg !4405
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %23, i64 0, i32 7, !dbg !4405
  %24 = load i32, i32* %align, align 8, !dbg !4405
  %cmp77 = icmp ult i32 %24, 32, !dbg !4405
  br i1 %cmp77, label %cond.true79, label %cond.end85, !dbg !4405

cond.true79:                                      ; preds = %if.then70
  %phitmp = zext i32 %24 to i64, !dbg !4405
  br label %cond.end85, !dbg !4405

cond.end85:                                       ; preds = %if.then70, %cond.true79
  %cond86 = phi i64 [ %phitmp, %cond.true79 ], [ 32, %if.then70 ]
  %sext = shl i64 %div, 32, !dbg !4406
  %mul = ashr exact i64 %sext, 29, !dbg !4406
  %25 = alloca i8, i64 %mul, align 16, !dbg !4406
  %26 = bitcast i8* %25 to %struct.rtx_def**, !dbg !4406
  call void @llvm.dbg.value(metadata %struct.rtx_def** %26, metadata !4350, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4352, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4353, metadata !DIExpression()), !dbg !4400
  %call88 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* nonnull %retval_rhs.0) #7, !dbg !4407
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call88, metadata !4354, metadata !DIExpression()), !dbg !4400
  %cmp89 = icmp eq i64 %call73, 0, !dbg !4408
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !4410

if.then91:                                        ; preds = %cond.end85
  tail call void @expand_null_return() #7, !dbg !4411
  br label %cleanup, !dbg !4413

if.end92:                                         ; preds = %cond.end85
  %rem = and i64 %call73, 3, !dbg !4414
  %cmp93 = icmp eq i64 %rem, 0, !dbg !4416
  br i1 %cmp93, label %if.end107, label %land.lhs.true95, !dbg !4417

land.lhs.true95:                                  ; preds = %if.end92
  %27 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 4), align 8, !dbg !4418
  %28 = load %union.tree_node*, %union.tree_node** %type47, align 8, !dbg !4419
  %call98 = tail call zeroext i8 %27(%union.tree_node* %28) #6, !dbg !4420
  %tobool100 = icmp eq i8 %call98, 0, !dbg !4420
  br i1 %tobool100, label %if.end107, label %if.then103, !dbg !4421

if.then103:                                       ; preds = %land.lhs.true95
  %rem104 = shl i64 %call73, 3, !dbg !4422
  %mul105 = and i64 %rem104, 24, !dbg !4422
  %sub106 = sub nuw nsw i64 32, %mul105, !dbg !4423
  call void @llvm.dbg.value(metadata i64 %sub106, metadata !4346, metadata !DIExpression()), !dbg !4400
  br label %if.end107, !dbg !4424

if.end107:                                        ; preds = %land.lhs.true95, %if.end92, %if.then103
  %padding_correction.0 = phi i64 [ %sub106, %if.then103 ], [ 0, %if.end92 ], [ 0, %land.lhs.true95 ], !dbg !4400
  call void @llvm.dbg.value(metadata i64 %padding_correction.0, metadata !4346, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata i64 0, metadata !4344, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata i64 %padding_correction.0, metadata !4345, metadata !DIExpression()), !dbg !4400
  %mul108 = shl i64 %call73, 3, !dbg !4425
  br label %for.cond, !dbg !4428

for.cond:                                         ; preds = %if.end134, %if.end107
  %src.0 = phi %struct.rtx_def* [ null, %if.end107 ], [ %src.1, %if.end134 ], !dbg !4400
  %dst.0 = phi %struct.rtx_def* [ null, %if.end107 ], [ %dst.1, %if.end134 ], !dbg !4400
  %xbitpos.0 = phi i64 [ %padding_correction.0, %if.end107 ], [ %add143, %if.end134 ], !dbg !4429
  %bitpos.0 = phi i64 [ 0, %if.end107 ], [ %add141, %if.end134 ], !dbg !4429
  call void @llvm.dbg.value(metadata i64 %bitpos.0, metadata !4344, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata i64 %xbitpos.0, metadata !4345, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.0, metadata !4353, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.0, metadata !4352, metadata !DIExpression()), !dbg !4400
  %cmp109 = icmp ult i64 %bitpos.0, %mul108, !dbg !4430
  br i1 %cmp109, label %for.body, label %for.end, !dbg !4431

for.body:                                         ; preds = %for.cond
  %rem111 = and i64 %xbitpos.0, 31, !dbg !4432
  %cmp112 = icmp eq i64 %rem111, 0, !dbg !4435
  %cmp115 = icmp eq i64 %xbitpos.0, %padding_correction.0, !dbg !4436
  %or.cond = or i1 %cmp112, %cmp115, !dbg !4437
  br i1 %or.cond, label %if.then117, label %if.end126, !dbg !4437

if.then117:                                       ; preds = %for.body
  %29 = load i32, i32* @word_mode, align 4, !dbg !4438
  %call118 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %29) #6, !dbg !4440
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call118, metadata !4353, metadata !DIExpression()), !dbg !4400
  %div119 = lshr i64 %xbitpos.0, 5, !dbg !4441
  %arrayidx120 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %26, i64 %div119, !dbg !4442
  store %struct.rtx_def* %call118, %struct.rtx_def** %arrayidx120, align 8, !dbg !4443
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call118, i64 0, i32 0, !dbg !4444
  %bf.load121 = load i32, i32* %30, align 8, !dbg !4444
  %bf.lshr122 = lshr i32 %bf.load121, 16, !dbg !4444
  %bf.clear123 = and i32 %bf.lshr122, 255, !dbg !4444
  %idxprom = zext i32 %bf.clear123 to i64, !dbg !4444
  %arrayidx124 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom, !dbg !4444
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx124, align 8, !dbg !4444
  %call125 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call118, %struct.rtx_def* %31) #6, !dbg !4445
  br label %if.end126, !dbg !4446

if.end126:                                        ; preds = %for.body, %if.then117
  %dst.1 = phi %struct.rtx_def* [ %call118, %if.then117 ], [ %dst.0, %for.body ], !dbg !4400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dst.1, metadata !4353, metadata !DIExpression()), !dbg !4400
  %rem127 = and i64 %bitpos.0, 31, !dbg !4447
  %cmp128 = icmp eq i64 %rem127, 0, !dbg !4449
  br i1 %cmp128, label %if.then130, label %if.end134, !dbg !4450

if.then130:                                       ; preds = %if.end126
  %div131 = lshr i64 %bitpos.0, 5, !dbg !4451
  %conv132 = trunc i64 %div131 to i32, !dbg !4452
  %call133 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %call88, i32 %conv132, i32 1) #6, !dbg !4453
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call133, metadata !4352, metadata !DIExpression()), !dbg !4400
  br label %if.end134, !dbg !4454

if.end134:                                        ; preds = %if.then130, %if.end126
  %src.1 = phi %struct.rtx_def* [ %call133, %if.then130 ], [ %src.0, %if.end126 ], !dbg !4400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.1, metadata !4352, metadata !DIExpression()), !dbg !4400
  %32 = load i32, i32* @word_mode, align 4, !dbg !4455
  %call139 = tail call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %src.1, i64 %cond86, i64 %rem127, i32 1, %struct.rtx_def* null, i32 %32, i32 %32) #6, !dbg !4456
  tail call void @store_bit_field(%struct.rtx_def* %dst.1, i64 %cond86, i64 %rem111, i32 %32, %struct.rtx_def* %call139) #6, !dbg !4457
  %add141 = add i64 %bitpos.0, %cond86, !dbg !4458
  call void @llvm.dbg.value(metadata i64 %add141, metadata !4344, metadata !DIExpression()), !dbg !4400
  %add143 = add i64 %xbitpos.0, %cond86, !dbg !4459
  call void @llvm.dbg.value(metadata i64 %add143, metadata !4345, metadata !DIExpression()), !dbg !4400
  br label %for.cond, !dbg !4460, !llvm.loop !4461

for.end:                                          ; preds = %for.cond
  %bf.load144 = load i32, i32* %20, align 8, !dbg !4463
  %bf.lshr145 = lshr i32 %bf.load144, 16, !dbg !4463
  %bf.clear146 = and i32 %bf.lshr145, 255, !dbg !4463
  call void @llvm.dbg.value(metadata i32 %bf.clear146, metadata !4355, metadata !DIExpression()), !dbg !4400
  %cmp147 = icmp eq i32 %bf.clear146, 1, !dbg !4464
  br i1 %cmp147, label %if.then149, label %if.end176, !dbg !4466

if.then149:                                       ; preds = %for.end
  br label %for.cond151, !dbg !4467

for.cond151:                                      ; preds = %for.inc163, %if.then149
  %tmpmode.0.in.in = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @class_narrowest_mode, i64 0, i64 2), %if.then149 ], [ %arrayidx165, %for.inc163 ]
  %tmpmode.0.in = load i8, i8* %tmpmode.0.in.in, align 1, !dbg !4470
  %cond3 = icmp eq i8 %tmpmode.0.in, 0, !dbg !4471
  br i1 %cond3, label %cond.true170.loopexit, label %for.body154, !dbg !4471

for.body154:                                      ; preds = %for.cond151
  %idxprom155 = zext i8 %tmpmode.0.in to i64, !dbg !4472
  %arrayidx156 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom155, !dbg !4472
  %33 = load i8, i8* %arrayidx156, align 1, !dbg !4472
  %conv158 = zext i8 %33 to i64, !dbg !4472
  %cmp159 = icmp ugt i64 %call73, %conv158, !dbg !4475
  br i1 %cmp159, label %for.inc163, label %for.end167, !dbg !4476

for.inc163:                                       ; preds = %for.body154
  %arrayidx165 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom155, !dbg !4477
  br label %for.cond151, !dbg !4478, !llvm.loop !4479

for.end167:                                       ; preds = %for.body154
  %tmpmode.0.in.lcssa24 = phi i8 [ %tmpmode.0.in, %for.body154 ], !dbg !4470
  %tmpmode.0.le = zext i8 %tmpmode.0.in.lcssa24 to i32, !dbg !4470
  br i1 false, label %for.end167.cond.true170_crit_edge, label %cond.end172, !dbg !4481

for.end167.cond.true170_crit_edge:                ; preds = %for.end167
  br label %cond.true170, !dbg !4481

cond.true170.loopexit:                            ; preds = %for.cond151
  br label %cond.true170, !dbg !4481

cond.true170:                                     ; preds = %for.end167.cond.true170_crit_edge, %cond.true170.loopexit
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1754, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4481
  %bf.load174.pre = load i32, i32* %20, align 8, !dbg !4482
  br label %cond.end172, !dbg !4481

cond.end172:                                      ; preds = %for.end167, %cond.true170
  %bf.load174 = phi i32 [ %bf.load144, %for.end167 ], [ %bf.load174.pre, %cond.true170 ], !dbg !4482
  %tmpmode.015 = phi i32 [ %tmpmode.0.le, %for.end167 ], [ 0, %cond.true170 ]
  %bf.shl = shl nuw nsw i32 %tmpmode.015, 16, !dbg !4482
  %bf.clear175 = and i32 %bf.load174, -16711681, !dbg !4482
  %bf.set = or i32 %bf.clear175, %bf.shl, !dbg !4482
  store i32 %bf.set, i32* %20, align 8, !dbg !4482
  br label %if.end176, !dbg !4483

if.end176:                                        ; preds = %cond.end172, %for.end
  %tmpmode.1 = phi i32 [ %tmpmode.015, %cond.end172 ], [ %bf.clear146, %for.end ], !dbg !4400
  call void @llvm.dbg.value(metadata i32 %tmpmode.1, metadata !4355, metadata !DIExpression()), !dbg !4400
  %idxprom177 = zext i32 %tmpmode.1 to i64, !dbg !4484
  %arrayidx178 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom177, !dbg !4484
  %34 = load i8, i8* %arrayidx178, align 1, !dbg !4484
  %35 = load i32, i32* @word_mode, align 4, !dbg !4486
  %idxprom181 = zext i32 %35 to i64, !dbg !4486
  %arrayidx182 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom181, !dbg !4486
  %36 = load i8, i8* %arrayidx182, align 1, !dbg !4486
  %cmp185 = icmp ult i8 %34, %36, !dbg !4487
  %result_reg_mode.0 = select i1 %cmp185, i32 %35, i32 %tmpmode.1, !dbg !4488
  call void @llvm.dbg.value(metadata i32 %result_reg_mode.0, metadata !4356, metadata !DIExpression()), !dbg !4400
  %call190 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %result_reg_mode.0) #6, !dbg !4489
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call190, metadata !4351, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata i32 0, metadata !4340, metadata !DIExpression()), !dbg !4400
  %sext23 = shl i64 %div, 32, !dbg !4490
  %37 = ashr exact i64 %sext23, 32, !dbg !4490
  br label %for.cond191, !dbg !4490

for.cond191:                                      ; preds = %for.body194, %if.end176
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body194 ], [ 0, %if.end176 ], !dbg !4492
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4340, metadata !DIExpression()), !dbg !4400
  %cmp192 = icmp slt i64 %indvars.iv, %37, !dbg !4493
  br i1 %cmp192, label %for.body194, label %for.end200, !dbg !4495

for.body194:                                      ; preds = %for.cond191
  %38 = trunc i64 %indvars.iv to i32, !dbg !4496
  %call195 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %call190, i32 %38, i32 0, i32 %result_reg_mode.0) #6, !dbg !4496
  %arrayidx197 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %26, i64 %indvars.iv, !dbg !4497
  %39 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx197, align 8, !dbg !4497
  %call198 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call195, %struct.rtx_def* %39) #6, !dbg !4498
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4499
  call void @llvm.dbg.value(metadata i32 undef, metadata !4340, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4400
  br label %for.cond191, !dbg !4500, !llvm.loop !4501

for.end200:                                       ; preds = %for.cond191
  %cmp201 = icmp eq i32 %tmpmode.1, %result_reg_mode.0, !dbg !4503
  br i1 %cmp201, label %if.end205, label %if.then203, !dbg !4505

if.then203:                                       ; preds = %for.end200
  %40 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i64 0, i32 0), align 8, !dbg !4506
  %call204 = tail call %struct.rtx_def* %40(i32 %tmpmode.1, %struct.rtx_def* %call190) #6, !dbg !4506
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call204, metadata !4351, metadata !DIExpression()), !dbg !4400
  br label %if.end205, !dbg !4507

if.end205:                                        ; preds = %for.end200, %if.then203
  %result_reg.0 = phi %struct.rtx_def* [ %call204, %if.then203 ], [ %call190, %for.end200 ], !dbg !4400
  call void @llvm.dbg.value(metadata %struct.rtx_def* %result_reg.0, metadata !4351, metadata !DIExpression()), !dbg !4400
  tail call fastcc void @expand_value_return(%struct.rtx_def* %result_reg.0) #7, !dbg !4508
  br label %cleanup, !dbg !4509

cleanup:                                          ; preds = %if.end205, %if.then91
  ret void

if.else219:                                       ; preds = %land.lhs.true66, %cond.end63
  %41 = load i64*, i64** %18, align 8, !dbg !4510
  %bf.load226 = load i64, i64* %41, align 8, !dbg !4510
  %bf.cast2289 = and i64 %bf.load226, 65535, !dbg !4510
  %cmp229 = icmp eq i64 %bf.cast2289, 19, !dbg !4510
  br i1 %cmp229, label %if.else277, label %land.lhs.true231, !dbg !4511

land.lhs.true231:                                 ; preds = %if.else219
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 0, !dbg !4512
  %bf.load232 = load i32, i32* %42, align 8, !dbg !4512
  %bf.clear233 = and i32 %bf.load232, 65535, !dbg !4512
  %cmp234 = icmp eq i32 %bf.clear233, 37, !dbg !4512
  br i1 %cmp234, label %if.then241, label %lor.lhs.false236, !dbg !4513

lor.lhs.false236:                                 ; preds = %land.lhs.true231
  %cmp239 = icmp eq i32 %bf.clear233, 15, !dbg !4514
  br i1 %cmp239, label %if.then241, label %if.else277, !dbg !4515

if.then241:                                       ; preds = %lor.lhs.false236, %land.lhs.true231
  %43 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !4516
  %result243 = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %43, i64 0, i32 3, !dbg !4516
  %44 = bitcast %union.tree_node** %result243 to %struct.tree_common**, !dbg !4516
  %45 = load %struct.tree_common*, %struct.tree_common** %44, align 8, !dbg !4516
  %type245 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %45, i64 0, i32 2, !dbg !4516
  %46 = load %union.tree_node*, %union.tree_node** %type245, align 8, !dbg !4516
  call void @llvm.dbg.value(metadata %union.tree_node* %46, metadata !4357, metadata !DIExpression()), !dbg !4517
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4518
  %bf.load247 = load i64, i64* %47, align 8, !dbg !4518
  %48 = lshr i64 %bf.load247, 18, !dbg !4518
  %49 = trunc i64 %48 to i32, !dbg !4518
  %mul257 = and i32 %49, 2, !dbg !4518
  %type258 = bitcast %union.tree_node* %46 to %struct.tree_type*, !dbg !4518
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type258, i64 0, i32 6, !dbg !4518
  %bf.load259 = load i32, i32* %restrict_flag, align 4, !dbg !4518
  %50 = lshr i32 %bf.load259, 11, !dbg !4518
  %mul262 = and i32 %50, 4, !dbg !4518
  %or263 = or i32 %mul257, %mul262, !dbg !4518
  %51 = lshr i64 %bf.load247, 48, !dbg !4518
  %52 = trunc i64 %51 to i32, !dbg !4518
  %shl = and i32 %52, 65280, !dbg !4518
  %or268 = or i32 %or263, %shl, !dbg !4518
  %or269 = or i32 %or268, 1, !dbg !4519
  %call270 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %46, i32 %or269) #6, !dbg !4520
  call void @llvm.dbg.value(metadata %union.tree_node* %call270, metadata !4360, metadata !DIExpression()), !dbg !4517
  %call271 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %call270, i32 0, i32 0, i32 1) #6, !dbg !4521
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call271, metadata !4338, metadata !DIExpression()), !dbg !4361
  %53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call271, i64 0, i32 0, !dbg !4522
  %bf.load272 = load i32, i32* %53, align 8, !dbg !4522
  %bf.lshr273 = lshr i32 %bf.load272, 16, !dbg !4522
  %bf.clear274 = and i32 %bf.lshr273, 255, !dbg !4522
  %call275 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* nonnull %retval_rhs.0, %struct.rtx_def* %call271, i32 %bf.clear274, i32 0) #7, !dbg !4523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call275, metadata !4338, metadata !DIExpression()), !dbg !4361
  %call276 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call275) #6, !dbg !4524
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call276, metadata !4338, metadata !DIExpression()), !dbg !4361
  tail call fastcc void @expand_value_return(%struct.rtx_def* %call276) #7, !dbg !4525
  br label %cleanup.cont286, !dbg !4526

if.else277:                                       ; preds = %if.else43, %lor.lhs.false236, %if.else219
  %54 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4527
  %call278 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %retval, %struct.rtx_def* %54, i32 0, i32 0) #7, !dbg !4529
  tail call fastcc void @expand_value_return(%struct.rtx_def* %cond) #7, !dbg !4530
  br label %cleanup.cont286

cleanup.cont286:                                  ; preds = %if.then, %if.then4, %if.else277, %if.then241, %if.then42
  ret void, !dbg !4531
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_value_return(%struct.rtx_def* %val) unnamed_addr #5 !dbg !4532 {
entry:
  %unsignedp = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val, metadata !4534, metadata !DIExpression()), !dbg !4544
  %0 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !4545
  %result = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %0, i64 0, i32 3, !dbg !4545
  %1 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !4545
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4535, metadata !DIExpression()), !dbg !4544
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4546
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4546
  %tobool = icmp eq %struct.rtx_def* %2, null, !dbg !4546
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4546

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4546

cond.false:                                       ; preds = %entry
  tail call void @make_decl_rtl(%union.tree_node* %1) #6, !dbg !4546
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4546
  br label %cond.end, !dbg !4546

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %2, %cond.true ], !dbg !4546
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !4536, metadata !DIExpression()), !dbg !4544
  %cmp = icmp eq %struct.rtx_def* %cond, %val, !dbg !4547
  br i1 %cmp, label %if.end22, label %if.then, !dbg !4548

if.then:                                          ; preds = %cond.end
  %3 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !4549
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !4549
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4549
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4537, metadata !DIExpression()), !dbg !4550
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4551
  %5 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !4551
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4540, metadata !DIExpression()), !dbg !4550
  %6 = bitcast i32* %unsignedp to i8*, !dbg !4552
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8, !dbg !4552
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4553
  %bf.load = load i64, i64* %7, align 8, !dbg !4553
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !4553
  %8 = trunc i64 %bf.lshr to i32, !dbg !4553
  %bf.cast = and i32 %8, 1, !dbg !4553
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !4541, metadata !DIExpression()), !dbg !4550
  store i32 %bf.cast, i32* %unsignedp, align 4, !dbg !4554
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4555
  %9 = bitcast i40* %mode to i64*, !dbg !4555
  %bf.load8 = load i64, i64* %9, align 8, !dbg !4555
  %10 = trunc i64 %bf.load8 to i32, !dbg !4555
  %bf.cast10 = and i32 %10, 255, !dbg !4555
  call void @llvm.dbg.value(metadata i32 %bf.cast10, metadata !4542, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !4541, metadata !DIExpression(DW_OP_deref)), !dbg !4550
  %call = call i32 @promote_function_mode(%union.tree_node* %5, i32 %bf.cast10, i32* nonnull %unsignedp, %union.tree_node* %4, i32 1) #6, !dbg !4556
  call void @llvm.dbg.value(metadata i32 %call, metadata !4543, metadata !DIExpression()), !dbg !4550
  %cmp12 = icmp eq i32 %call, %bf.cast10, !dbg !4557
  br i1 %cmp12, label %if.end, label %if.then13, !dbg !4559

if.then13:                                        ; preds = %if.then
  %11 = load i32, i32* %unsignedp, align 4, !dbg !4560
  call void @llvm.dbg.value(metadata i32 %11, metadata !4541, metadata !DIExpression()), !dbg !4550
  %call14 = call %struct.rtx_def* @convert_modes(i32 %call, i32 %bf.cast10, %struct.rtx_def* %val, i32 %11) #6, !dbg !4561
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !4534, metadata !DIExpression()), !dbg !4544
  br label %if.end, !dbg !4562

if.end:                                           ; preds = %if.then, %if.then13
  %val.addr.0 = phi %struct.rtx_def* [ %call14, %if.then13 ], [ %val, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val.addr.0, metadata !4534, metadata !DIExpression()), !dbg !4544
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 0, !dbg !4563
  %bf.load15 = load i32, i32* %12, align 8, !dbg !4563
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !4563
  %cmp17 = icmp eq i32 %bf.clear16, 15, !dbg !4565
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !4566

if.then18:                                        ; preds = %if.end
  %call19 = call i64 @int_size_in_bytes(%union.tree_node* %5) #6, !dbg !4567
  %conv = trunc i64 %call19 to i32, !dbg !4567
  call void @emit_group_load(%struct.rtx_def* %cond, %struct.rtx_def* %val.addr.0, %union.tree_node* %5, i32 %conv) #6, !dbg !4568
  br label %if.end21, !dbg !4568

if.else:                                          ; preds = %if.end
  %call20 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %cond, %struct.rtx_def* %val.addr.0) #6, !dbg !4569
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8, !dbg !4570
  br label %if.end22, !dbg !4571

if.end22:                                         ; preds = %cond.end, %if.end21
  call fastcc void @expand_null_return_1() #7, !dbg !4572
  ret void, !dbg !4573
}

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @operand_subword_force(%struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local void @store_bit_field(%struct.rtx_def*, i64, i64, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @extract_bit_field(%struct.rtx_def*, i64, i64, i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @operand_subword(%struct.rtx_def*, i32, i32, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_qualified_type(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @assign_temp(%union.tree_node*, i32, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_not_mem(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_decl(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !4574 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4576, metadata !DIExpression()), !dbg !4589
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4590
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !4590
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4577, metadata !DIExpression()), !dbg !4589
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4591
  %bf.load = load i64, i64* %1, align 8, !dbg !4591
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4593
  %cmp = icmp eq i64 %bf.cast1, 33, !dbg !4593
  br i1 %cmp, label %if.then, label %if.end, !dbg !4594

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4595
  %bf.load3 = load i64, i64* %2, align 8, !dbg !4595
  %bf.cast511 = and i64 %bf.load3, 65535, !dbg !4595
  %cmp6 = icmp eq i64 %bf.cast511, 14, !dbg !4595
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !4595

cond.true:                                        ; preds = %if.then
  %call = tail call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !4595
  br label %cond.end, !dbg !4595

cond.false:                                       ; preds = %if.then
  %type7 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !4595
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i64 0, i32 6, !dbg !4595
  %bf.load8 = load i32, i32* %mode, align 4, !dbg !4595
  %bf.lshr = lshr i32 %bf.load8, 16, !dbg !4595
  %bf.clear9 = and i32 %bf.lshr, 255, !dbg !4595
  br label %cond.end, !dbg !4595

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear9, %cond.false ], !dbg !4595
  %mode10 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4597
  %3 = bitcast i40* %mode10 to i64*, !dbg !4597
  %bf.load11 = load i64, i64* %3, align 8, !dbg !4598
  %4 = and i32 %cond, 255, !dbg !4598
  %bf.value = zext i32 %4 to i64, !dbg !4598
  %bf.clear12 = and i64 %bf.load11, -256, !dbg !4598
  %bf.set = or i64 %bf.clear12, %bf.value, !dbg !4598
  store i64 %bf.set, i64* %3, align 8, !dbg !4598
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4599
  %6 = load i32, i32* %5, align 8, !dbg !4599
  %align15 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4600
  store i32 %6, i32* %align15, align 8, !dbg !4601
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4602
  %8 = bitcast %union.tree_node** %7 to i64*, !dbg !4602
  %9 = load i64, i64* %8, align 8, !dbg !4602
  %size18 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4603
  %10 = bitcast %union.tree_node** %size18 to i64*, !dbg !4604
  store i64 %9, i64* %10, align 8, !dbg !4604
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4605
  %12 = bitcast %union.tree_node** %11 to i64*, !dbg !4605
  %13 = load i64, i64* %12, align 8, !dbg !4605
  %size_unit21 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4606
  %14 = bitcast %union.tree_node** %size_unit21 to i64*, !dbg !4607
  store i64 %13, i64* %14, align 8, !dbg !4607
  br label %cleanup.cont, !dbg !4608

if.end:                                           ; preds = %entry
  %cmp26 = icmp eq i64 %bf.cast1, 32, !dbg !4609
  br i1 %cmp26, label %if.end28, label %cleanup.cont, !dbg !4611

if.end28:                                         ; preds = %if.end
  %bf.cast333 = and i64 %bf.load, 67108864, !dbg !4612
  %tobool = icmp eq i64 %bf.cast333, 0, !dbg !4612
  br i1 %tobool, label %lor.lhs.false, label %cleanup.cont, !dbg !4614

lor.lhs.false:                                    ; preds = %if.end28
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4615
  %15 = bitcast i40* %decl_flag_1 to i64*, !dbg !4615
  %bf.load35 = load i64, i64* %15, align 8, !dbg !4615
  %bf.cast384 = and i64 %bf.load35, 33554432, !dbg !4615
  %tobool39 = icmp eq i64 %bf.cast384, 0, !dbg !4615
  br i1 %tobool39, label %if.end41, label %cleanup.cont, !dbg !4616

if.end41:                                         ; preds = %lor.lhs.false
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4617
  %cmp42 = icmp eq %union.tree_node* %0, %16, !dbg !4618
  br i1 %cmp42, label %if.then43, label %if.else, !dbg !4619

if.then43:                                        ; preds = %if.end41
  %17 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4620
  %call44 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %17) #6, !dbg !4620
  tail call void @set_decl_rtl(%union.tree_node* %decl, %struct.rtx_def* %call44) #6, !dbg !4620
  br label %cleanup.cont, !dbg !4620

if.else:                                          ; preds = %if.end41
  %size46 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4621
  %18 = load %union.tree_node*, %union.tree_node** %size46, align 8, !dbg !4621
  %cmp47 = icmp eq %union.tree_node* %18, null, !dbg !4622
  br i1 %cmp47, label %if.then48, label %if.else57, !dbg !4623

if.then48:                                        ; preds = %if.else
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4624
  %19 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4624
  %cmp50 = icmp eq %union.tree_node* %19, null, !dbg !4626
  br i1 %cmp50, label %if.then51, label %if.else53, !dbg !4627

if.then51:                                        ; preds = %if.then48
  %20 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4628
  %call52 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %20) #6, !dbg !4629
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call52, metadata !4578, metadata !DIExpression()), !dbg !4630
  br label %if.end56, !dbg !4631

if.else53:                                        ; preds = %if.then48
  %call54 = tail call %struct.rtx_def* @gen_reg_rtx(i32 16) #6, !dbg !4632
  %call55 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 1, %struct.rtx_def* %call54) #6, !dbg !4633
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call55, metadata !4578, metadata !DIExpression()), !dbg !4630
  br label %if.end56

if.end56:                                         ; preds = %if.else53, %if.then51
  %x.0 = phi %struct.rtx_def* [ %call52, %if.then51 ], [ %call55, %if.else53 ], !dbg !4634
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !4578, metadata !DIExpression()), !dbg !4630
  tail call void @set_mem_attributes(%struct.rtx_def* %x.0, %union.tree_node* %decl, i32 1) #6, !dbg !4635
  tail call void @set_decl_rtl(%union.tree_node* %decl, %struct.rtx_def* %x.0) #6, !dbg !4636
  br label %cleanup.cont, !dbg !4637

if.else57:                                        ; preds = %if.else
  %call58 = tail call zeroext i8 @use_register_for_decl(%union.tree_node* %decl) #6, !dbg !4638
  %tobool59 = icmp eq i8 %call58, 0, !dbg !4638
  br i1 %tobool59, label %if.else110, label %if.then60, !dbg !4639

if.then60:                                        ; preds = %if.else57
  %call61 = tail call i32 @promote_decl_mode(%union.tree_node* %decl, i32* null) #6, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %call61, metadata !4582, metadata !DIExpression()), !dbg !4641
  %call62 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call61) #6, !dbg !4642
  tail call void @set_decl_rtl(%union.tree_node* %decl, %struct.rtx_def* %call62) #6, !dbg !4642
  %bf.load64 = load i64, i64* %15, align 8, !dbg !4643
  %bf.cast678 = and i64 %bf.load64, 4096, !dbg !4643
  %tobool68 = icmp eq i64 %bf.cast678, 0, !dbg !4643
  br i1 %tobool68, label %if.then69, label %if.end79, !dbg !4645

if.then69:                                        ; preds = %if.then60
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4646
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4646
  %tobool70 = icmp eq %struct.rtx_def* %21, null, !dbg !4646
  br i1 %tobool70, label %cond.false74, label %cond.true71, !dbg !4646

cond.true71:                                      ; preds = %if.then69
  br label %cond.end77, !dbg !4646

cond.false74:                                     ; preds = %if.then69
  tail call void @make_decl_rtl(%union.tree_node* %decl) #6, !dbg !4646
  %cond78.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4646
  br label %cond.end77, !dbg !4646

cond.end77:                                       ; preds = %cond.false74, %cond.true71
  %cond78 = phi %struct.rtx_def* [ %cond78.pre, %cond.false74 ], [ %21, %cond.true71 ], !dbg !4646
  tail call void @mark_user_reg(%struct.rtx_def* %cond78) #6, !dbg !4647
  br label %if.end79, !dbg !4647

if.end79:                                         ; preds = %if.then60, %cond.end77
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4648
  %bf.load81 = load i64, i64* %22, align 8, !dbg !4648
  %bf.cast839 = and i64 %bf.load81, 65535, !dbg !4648
  %cmp84 = icmp eq i64 %bf.cast839, 10, !dbg !4648
  br i1 %cmp84, label %if.then91, label %lor.lhs.false85, !dbg !4648

lor.lhs.false85:                                  ; preds = %if.end79
  %cmp90 = icmp eq i64 %bf.cast839, 12, !dbg !4648
  br i1 %cmp90, label %if.then91, label %cleanup.cont, !dbg !4650

if.then91:                                        ; preds = %lor.lhs.false85, %if.end79
  %rtl93 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4651
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtl93, align 8, !dbg !4651
  %tobool94 = icmp eq %struct.rtx_def* %23, null, !dbg !4651
  br i1 %tobool94, label %cond.false98, label %cond.true95, !dbg !4651

cond.true95:                                      ; preds = %if.then91
  br label %cond.end101, !dbg !4651

cond.false98:                                     ; preds = %if.then91
  tail call void @make_decl_rtl(%union.tree_node* %decl) #6, !dbg !4651
  %cond102.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl93, align 8, !dbg !4651
  br label %cond.end101, !dbg !4651

cond.end101:                                      ; preds = %cond.false98, %cond.true95
  %cond102 = phi %struct.rtx_def* [ %cond102.pre, %cond.false98 ], [ %23, %cond.true95 ], !dbg !4651
  %24 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !4652
  %25 = load %struct.tree_common*, %struct.tree_common** %24, align 8, !dbg !4652
  %type106 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %25, i64 0, i32 2, !dbg !4652
  %26 = bitcast %union.tree_node** %type106 to %struct.tree_type**, !dbg !4652
  %27 = load %struct.tree_type*, %struct.tree_type** %26, align 8, !dbg !4652
  %align108 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %27, i64 0, i32 7, !dbg !4652
  %28 = load i32, i32* %align108, align 8, !dbg !4652
  tail call void @mark_reg_pointer(%struct.rtx_def* %cond102, i32 %28) #6, !dbg !4653
  br label %cleanup.cont, !dbg !4653

if.else110:                                       ; preds = %if.else57
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4585, metadata !DIExpression()), !dbg !4654
  %size_unit113 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4655
  %29 = bitcast %union.tree_node** %size_unit113 to i64**, !dbg !4655
  %30 = load i64*, i64** %29, align 8, !dbg !4655
  %bf.load115 = load i64, i64* %30, align 8, !dbg !4655
  %bf.cast1175 = and i64 %bf.load115, 65535, !dbg !4655
  %cmp118 = icmp eq i64 %bf.cast1175, 23, !dbg !4655
  br i1 %cmp118, label %cond.end121, label %cond.true119, !dbg !4655

cond.true119:                                     ; preds = %if.else110
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1944, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4655
  br label %cond.end121, !dbg !4655

cond.end121:                                      ; preds = %if.else110, %cond.true119
  %bf.load124 = load i64, i64* %1, align 8, !dbg !4656
  %bf.cast126 = and i64 %bf.load124, 65535, !dbg !4656
  %arrayidx127 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast126, i64 11, !dbg !4656
  %31 = load i8, i8* %arrayidx127, align 1, !dbg !4656
  %tobool128 = icmp eq i8 %31, 0, !dbg !4656
  br i1 %tobool128, label %if.end188, label %land.lhs.true, !dbg !4656

land.lhs.true:                                    ; preds = %cond.end121
  %rtl130 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4656
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtl130, align 8, !dbg !4656
  %cmp131 = icmp eq %struct.rtx_def* %32, null, !dbg !4656
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i64 0, i32 0, !dbg !4658
  br i1 %cmp131, label %if.end188, label %if.then133, !dbg !4658

if.then133:                                       ; preds = %land.lhs.true
  br i1 false, label %cond.false140, label %cond.true137, !dbg !4659

cond.true137:                                     ; preds = %if.then133
  %bf.load145.pre = load i32, i32* %33, align 8, !dbg !4659
  %phitmp = and i32 %bf.load145.pre, 65535, !dbg !4659
  %phitmp20 = icmp eq i32 %phitmp, 43, !dbg !4659
  br label %cond.end143, !dbg !4659

cond.false140:                                    ; preds = %if.then133
  br label %cond.end143, !dbg !4659

cond.end143:                                      ; preds = %cond.false140, %cond.true137
  %bf.load145 = phi i1 [ false, %cond.false140 ], [ %phitmp20, %cond.true137 ]
  br i1 %bf.load145, label %cond.end151, label %cond.true149, !dbg !4659

cond.true149:                                     ; preds = %cond.end143
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1952, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4659
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl130, align 8, !dbg !4661
  br label %cond.end151, !dbg !4659

cond.end151:                                      ; preds = %cond.end143, %cond.true149
  %34 = phi %struct.rtx_def* [ %32, %cond.end143 ], [ %.pre, %cond.true149 ], !dbg !4661
  %tobool155 = icmp eq %struct.rtx_def* %34, null, !dbg !4661
  br i1 %tobool155, label %cond.false159, label %cond.true156, !dbg !4661

cond.true156:                                     ; preds = %cond.end151
  br label %cond.end162, !dbg !4661

cond.false159:                                    ; preds = %cond.end151
  tail call void @make_decl_rtl(%union.tree_node* %decl) #6, !dbg !4661
  %cond163.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl130, align 8, !dbg !4661
  br label %cond.end162, !dbg !4661

cond.end162:                                      ; preds = %cond.false159, %cond.true156
  %cond163 = phi %struct.rtx_def* [ %cond163.pre, %cond.false159 ], [ %34, %cond.true156 ], !dbg !4661
  %arrayidx164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond163, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4661
  %35 = bitcast %union.rtunion_def* %arrayidx164 to i32**, !dbg !4661
  %36 = load i32*, i32** %35, align 8, !dbg !4661
  %bf.load165 = load i32, i32* %36, align 8, !dbg !4661
  %bf.clear166 = and i32 %bf.load165, 65535, !dbg !4661
  %cmp167 = icmp eq i32 %bf.clear166, 37, !dbg !4661
  br i1 %cmp167, label %cond.end171, label %cond.true169, !dbg !4661

cond.true169:                                     ; preds = %cond.end162
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1953, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4661
  %.pre17 = load %struct.rtx_def*, %struct.rtx_def** %rtl130, align 8, !dbg !4662
  br label %cond.end171, !dbg !4661

cond.end171:                                      ; preds = %cond.end162, %cond.true169
  %37 = phi %struct.rtx_def* [ %cond163, %cond.end162 ], [ %.pre17, %cond.true169 ], !dbg !4662
  %tobool175 = icmp eq %struct.rtx_def* %37, null, !dbg !4662
  br i1 %tobool175, label %cond.false179, label %cond.true176, !dbg !4662

cond.true176:                                     ; preds = %cond.end171
  br label %cond.end182, !dbg !4662

cond.false179:                                    ; preds = %cond.end171
  tail call void @make_decl_rtl(%union.tree_node* %decl) #6, !dbg !4662
  %cond183.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl130, align 8, !dbg !4662
  br label %cond.end182, !dbg !4662

cond.end182:                                      ; preds = %cond.false179, %cond.true176
  %cond183 = phi %struct.rtx_def* [ %cond183.pre, %cond.false179 ], [ %37, %cond.true176 ], !dbg !4662
  %arrayidx186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond183, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4662
  %rt_rtx187 = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtx_def**, !dbg !4662
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx187, align 8, !dbg !4662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %38, metadata !4585, metadata !DIExpression()), !dbg !4654
  br label %if.end188, !dbg !4663

if.end188:                                        ; preds = %land.lhs.true, %cond.end121, %cond.end182
  %oldaddr.0 = phi %struct.rtx_def* [ %38, %cond.end182 ], [ null, %land.lhs.true ], [ null, %cond.end121 ], !dbg !4654
  call void @llvm.dbg.value(metadata %struct.rtx_def* %oldaddr.0, metadata !4585, metadata !DIExpression()), !dbg !4654
  %bf.load191 = load i64, i64* %15, align 8, !dbg !4664
  %bf.cast1936 = and i64 %bf.load191, 255, !dbg !4665
  %cmp194 = icmp eq i64 %bf.cast1936, 1, !dbg !4665
  br i1 %cmp194, label %cond.true196, label %cond.false200, !dbg !4664

cond.true196:                                     ; preds = %if.end188
  %39 = load i32, i32* @ix86_isa_flags, align 4, !dbg !4666
  %and = and i32 %39, 32, !dbg !4666
  %cmp197 = icmp eq i32 %and, 0, !dbg !4666
  %cond199 = select i1 %cmp197, i32 128, i32 256, !dbg !4666
  br label %cond.end212, !dbg !4664

cond.false200:                                    ; preds = %if.end188
  %arrayidx207 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %bf.cast1936, !dbg !4667
  %40 = load i8, i8* %arrayidx207, align 1, !dbg !4667
  %conv209 = zext i8 %40 to i32, !dbg !4667
  %mul = shl nuw nsw i32 %conv209, 3, !dbg !4667
  br label %cond.end212, !dbg !4664

cond.end212:                                      ; preds = %cond.false200, %cond.true196
  %cond213 = phi i32 [ %cond199, %cond.true196 ], [ %mul, %cond.false200 ], !dbg !4664
  %align215 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4668
  store i32 %cond213, i32* %align215, align 8, !dbg !4669
  %bf.load218 = load i64, i64* %1, align 8, !dbg !4670
  %bf.clear219 = and i64 %bf.load218, -4398046511105, !dbg !4670
  store i64 %bf.clear219, i64* %1, align 8, !dbg !4670
  %call220 = tail call %struct.rtx_def* @assign_temp(%union.tree_node* %decl, i32 1, i32 1, i32 1) #6, !dbg !4671
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call220, metadata !4588, metadata !DIExpression()), !dbg !4654
  tail call void @set_mem_attributes(%struct.rtx_def* %call220, %union.tree_node* %decl, i32 1) #6, !dbg !4672
  tail call void @set_decl_rtl(%union.tree_node* %decl, %struct.rtx_def* %call220) #6, !dbg !4673
  %tobool221 = icmp eq %struct.rtx_def* %oldaddr.0, null, !dbg !4674
  br i1 %tobool221, label %cleanup.cont, label %if.then222, !dbg !4676

if.then222:                                       ; preds = %cond.end212
  %rtl224 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4677
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtl224, align 8, !dbg !4677
  %tobool225 = icmp eq %struct.rtx_def* %41, null, !dbg !4677
  br i1 %tobool225, label %cond.false229, label %cond.true226, !dbg !4677

cond.true226:                                     ; preds = %if.then222
  br label %cond.end232, !dbg !4677

cond.false229:                                    ; preds = %if.then222
  tail call void @make_decl_rtl(%union.tree_node* %decl) #6, !dbg !4677
  %cond233.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl224, align 8, !dbg !4677
  br label %cond.end232, !dbg !4677

cond.end232:                                      ; preds = %cond.false229, %cond.true226
  %cond233 = phi %struct.rtx_def* [ %cond233.pre, %cond.false229 ], [ %41, %cond.true226 ], !dbg !4677
  %arrayidx236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond233, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4677
  %rt_rtx237 = bitcast %union.rtunion_def* %arrayidx236 to %struct.rtx_def**, !dbg !4677
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx237, align 8, !dbg !4677
  %call238 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %42, %struct.rtx_def* nonnull %oldaddr.0) #6, !dbg !4679
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call238, metadata !4587, metadata !DIExpression()), !dbg !4654
  %cmp239 = icmp eq %struct.rtx_def* %call238, %oldaddr.0, !dbg !4680
  br i1 %cmp239, label %cleanup.cont, label %if.then241, !dbg !4682

if.then241:                                       ; preds = %cond.end232
  %call242 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* nonnull %oldaddr.0, %struct.rtx_def* %call238) #6, !dbg !4683
  br label %cleanup.cont, !dbg !4683

cleanup.cont:                                     ; preds = %cond.end232, %cond.end212, %lor.lhs.false, %if.end28, %if.end, %cond.end, %if.end56, %if.then241, %lor.lhs.false85, %cond.end101, %if.then43
  ret void, !dbg !4684
}

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @set_mem_attributes(%struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @use_register_for_decl(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @promote_decl_mode(%union.tree_node*, i32*) local_unnamed_addr #2

declare dso_local void @mark_user_reg(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @mark_reg_pointer(%struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_stack_save() local_unnamed_addr #5 !dbg !4685 {
entry:
  %ret = alloca %struct.rtx_def*, align 8
  %0 = bitcast %struct.rtx_def** %ret to i8*, !dbg !4690
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4690
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4689, metadata !DIExpression()), !dbg !4691
  store %struct.rtx_def* null, %struct.rtx_def** %ret, align 8, !dbg !4692
  tail call void @do_pending_stack_adjust() #6, !dbg !4693
  call void @llvm.dbg.value(metadata %struct.rtx_def** %ret, metadata !4689, metadata !DIExpression(DW_OP_deref)), !dbg !4691
  call void @emit_stack_save(i32 0, %struct.rtx_def** nonnull %ret, %struct.rtx_def* null) #6, !dbg !4694
  %1 = load %struct.rtx_def*, %struct.rtx_def** %ret, align 8, !dbg !4695
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !4689, metadata !DIExpression()), !dbg !4691
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4696
  ret %struct.rtx_def* %1, !dbg !4697
}

declare dso_local void @emit_stack_save(i32, %struct.rtx_def**, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_stack_restore(%union.tree_node* %var) local_unnamed_addr #5 !dbg !4698 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !4700, metadata !DIExpression()), !dbg !4702
  %call = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %var) #7, !dbg !4703
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4701, metadata !DIExpression()), !dbg !4702
  %call1 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* %call, i8 zeroext 0) #6, !dbg !4704
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4701, metadata !DIExpression()), !dbg !4702
  tail call void @emit_stack_restore(i32 0, %struct.rtx_def* %call1, %struct.rtx_def* null) #6, !dbg !4705
  ret void, !dbg !4706
}

declare dso_local void @emit_stack_restore(i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_case(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !4707 {
entry:
  %case_list = alloca %struct.case_node*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4709, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4710, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4711, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4712, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4713, metadata !DIExpression()), !dbg !4780
  %call = tail call fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %stmt) #7, !dbg !4781
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4725, metadata !DIExpression()), !dbg !4780
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4782
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4782
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4726, metadata !DIExpression()), !dbg !4780
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4783
  %bf.load = load i64, i64* %1, align 8, !dbg !4783
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !4783
  %2 = trunc i64 %bf.lshr to i32, !dbg !4783
  %bf.cast = and i32 %2, 1, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !4727, metadata !DIExpression()), !dbg !4780
  %3 = bitcast %struct.case_node** %case_list to i8*, !dbg !4784
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4784
  call void @llvm.dbg.value(metadata %struct.case_node* null, metadata !4729, metadata !DIExpression()), !dbg !4780
  store %struct.case_node* null, %struct.case_node** %case_list, align 8, !dbg !4785
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4730, metadata !DIExpression()), !dbg !4780
  %call1 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i64 0, i64 0), i64 48, i64 100) #6, !dbg !4786
  call void @llvm.dbg.value(metadata %struct.alloc_pool_def* %call1, metadata !4731, metadata !DIExpression()), !dbg !4780
  tail call void @do_pending_stack_adjust() #6, !dbg !4787
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4788
  %cmp = icmp eq %union.tree_node* %0, %4, !dbg !4789
  br i1 %cmp, label %if.end332, label %if.then, !dbg !4790

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !4757, metadata !DIExpression()), !dbg !4791
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4792
  %bf.load3 = load i64, i64* %5, align 8, !dbg !4792
  %bf.cast56 = and i64 %bf.load3, 65535, !dbg !4792
  %cmp6 = icmp eq i64 %bf.cast56, 23, !dbg !4792
  br i1 %cmp6, label %cond.true, label %cond.end, !dbg !4792

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2279, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4792
  br label %cond.end, !dbg !4792

cond.end:                                         ; preds = %if.then, %cond.true
  %call7 = tail call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %stmt, i32 0) #7, !dbg !4793
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !4753, metadata !DIExpression()), !dbg !4791
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4794
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4794
  %tobool = icmp eq %union.tree_node* %6, null, !dbg !4794
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4796

land.lhs.true:                                    ; preds = %cond.end
  %arrayidx10 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !4797
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8, !dbg !4797
  %tobool11 = icmp eq %union.tree_node* %7, null, !dbg !4797
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !4798

if.then12:                                        ; preds = %land.lhs.true
  %arrayidx15 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !4799
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx15, align 8, !dbg !4799
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4730, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 1, metadata !4757, metadata !DIExpression()), !dbg !4791
  br label %if.end, !dbg !4801

if.end:                                           ; preds = %land.lhs.true, %cond.end, %if.then12
  %default_label_decl.0 = phi %union.tree_node* [ null, %cond.end ], [ null, %land.lhs.true ], [ %8, %if.then12 ], !dbg !4780
  %stopi.0 = phi i32 [ 0, %cond.end ], [ 0, %land.lhs.true ], [ 1, %if.then12 ], !dbg !4791
  call void @llvm.dbg.value(metadata i32 %stopi.0, metadata !4757, metadata !DIExpression()), !dbg !4791
  call void @llvm.dbg.value(metadata %union.tree_node* %default_label_decl.0, metadata !4730, metadata !DIExpression()), !dbg !4780
  %call16 = tail call fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* %stmt) #7, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %call16, metadata !4721, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4780
  br label %for.cond, !dbg !4803

for.cond:                                         ; preds = %cleanup, %if.end
  %9 = phi %struct.case_node* [ null, %if.end ], [ %13, %cleanup ]
  %i.0.in = phi i32 [ %call16, %if.end ], [ %i.0, %cleanup ]
  %i.0 = add i32 %i.0.in, -1, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4721, metadata !DIExpression()), !dbg !4780
  %cmp17 = icmp slt i32 %i.0, %stopi.0, !dbg !4805
  br i1 %cmp17, label %for.end, label %for.body, !dbg !4806

for.body:                                         ; preds = %for.cond
  %call18 = tail call fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %stmt, i32 %i.0) #7, !dbg !4807
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !4753, metadata !DIExpression()), !dbg !4791
  %operands20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4808
  %10 = load %union.tree_node*, %union.tree_node** %operands20, align 8, !dbg !4808
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !4758, metadata !DIExpression()), !dbg !4809
  %tobool22 = icmp eq %union.tree_node* %10, null, !dbg !4810
  br i1 %tobool22, label %cond.true23, label %cond.end25, !dbg !4810

cond.true23:                                      ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2295, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4810
  br label %cond.end25, !dbg !4810

cond.end25:                                       ; preds = %for.body, %cond.true23
  %arrayidx29 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands20, i64 1, !dbg !4811
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx29, align 8, !dbg !4811
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !4762, metadata !DIExpression()), !dbg !4809
  %tobool30 = icmp eq %union.tree_node* %11, null, !dbg !4812
  br i1 %tobool30, label %if.end35, label %land.lhs.true31, !dbg !4814

land.lhs.true31:                                  ; preds = %cond.end25
  %call32 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %11, %union.tree_node* %10) #6, !dbg !4815
  %tobool33 = icmp eq i32 %call32, 0, !dbg !4815
  br i1 %tobool33, label %if.end35, label %cleanup, !dbg !4816

if.end35:                                         ; preds = %land.lhs.true31, %cond.end25
  call void @llvm.dbg.value(metadata %struct.case_node* %9, metadata !4729, metadata !DIExpression()), !dbg !4780
  %arrayidx38 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands20, i64 2, !dbg !4817
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8, !dbg !4817
  %call39 = tail call fastcc %struct.case_node* @add_case_node(%struct.case_node* %9, %union.tree_node* %0, %union.tree_node* %10, %union.tree_node* %11, %union.tree_node* %12, %struct.alloc_pool_def* %call1) #7, !dbg !4818
  call void @llvm.dbg.value(metadata %struct.case_node* %call39, metadata !4729, metadata !DIExpression()), !dbg !4780
  store %struct.case_node* %call39, %struct.case_node** %case_list, align 8, !dbg !4819
  br label %cleanup, !dbg !4820

cleanup:                                          ; preds = %land.lhs.true31, %if.end35
  %13 = phi %struct.case_node* [ %9, %land.lhs.true31 ], [ %call39, %if.end35 ]
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4721, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4780
  br label %for.cond, !dbg !4821, !llvm.loop !4822

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.case_node* [ %9, %for.cond ]
  %call41 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !4824
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41, metadata !4728, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41, metadata !4722, metadata !DIExpression()), !dbg !4780
  %tobool42 = icmp eq %union.tree_node* %default_label_decl.0, null, !dbg !4825
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !4827

if.then43:                                        ; preds = %for.end
  %call44 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* nonnull %default_label_decl.0) #7, !dbg !4828
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !4713, metadata !DIExpression()), !dbg !4780
  br label %if.end45, !dbg !4829

if.end45:                                         ; preds = %for.end, %if.then43
  %default_label.0 = phi %struct.rtx_def* [ %call44, %if.then43 ], [ null, %for.end ], !dbg !4780
  call void @llvm.dbg.value(metadata %struct.rtx_def* %default_label.0, metadata !4713, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 0, metadata !4716, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 0, metadata !4715, metadata !DIExpression()), !dbg !4780
  %call46 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4830
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call46, metadata !4756, metadata !DIExpression()), !dbg !4791
  br label %for.cond47, !dbg !4831

for.cond47:                                       ; preds = %for.inc86, %if.end45
  %n.0 = phi %struct.case_node* [ %.lcssa, %if.end45 ], [ %n.0.pre, %for.inc86 ], !dbg !4833
  %uniq.0 = phi i32 [ 0, %if.end45 ], [ %uniq.1, %for.inc86 ], !dbg !4834
  %count.0 = phi i32 [ 0, %if.end45 ], [ %spec.select, %for.inc86 ], !dbg !4791
  %maxval.0 = phi %union.tree_node* [ null, %if.end45 ], [ %maxval.2, %for.inc86 ], !dbg !4780
  %minval.0 = phi %union.tree_node* [ null, %if.end45 ], [ %minval.2, %for.inc86 ], !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %minval.0, metadata !4710, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %maxval.0, metadata !4711, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %struct.case_node* %n.0, metadata !4714, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !4715, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 %uniq.0, metadata !4716, metadata !DIExpression()), !dbg !4780
  %tobool48 = icmp eq %struct.case_node* %n.0, null, !dbg !4835
  br i1 %tobool48, label %for.end87, label %for.body49, !dbg !4835

for.body49:                                       ; preds = %for.cond47
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !4715, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4780
  %cmp50 = icmp eq i32 %count.0, 0, !dbg !4836
  %low52 = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 3, !dbg !4840
  %14 = load %union.tree_node*, %union.tree_node** %low52, align 8, !dbg !4840
  br i1 %cmp50, label %if.then51, label %if.else, !dbg !4841

if.then51:                                        ; preds = %for.body49
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !4710, metadata !DIExpression()), !dbg !4780
  %high53 = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 4, !dbg !4842
  %15 = load %union.tree_node*, %union.tree_node** %high53, align 8, !dbg !4842
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !4711, metadata !DIExpression()), !dbg !4780
  br label %if.end66, !dbg !4844

if.else:                                          ; preds = %for.body49
  %call55 = tail call i32 @tree_int_cst_lt(%union.tree_node* %14, %union.tree_node* %minval.0) #6, !dbg !4845
  %tobool56 = icmp eq i32 %call55, 0, !dbg !4845
  br i1 %tobool56, label %if.end59, label %if.then57, !dbg !4848

if.then57:                                        ; preds = %if.else
  %16 = load %union.tree_node*, %union.tree_node** %low52, align 8, !dbg !4849
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !4710, metadata !DIExpression()), !dbg !4780
  br label %if.end59, !dbg !4850

if.end59:                                         ; preds = %if.else, %if.then57
  %minval.1 = phi %union.tree_node* [ %16, %if.then57 ], [ %minval.0, %if.else ], !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %minval.1, metadata !4710, metadata !DIExpression()), !dbg !4780
  %high60 = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 4, !dbg !4851
  %17 = load %union.tree_node*, %union.tree_node** %high60, align 8, !dbg !4851
  %call61 = tail call i32 @tree_int_cst_lt(%union.tree_node* %maxval.0, %union.tree_node* %17) #6, !dbg !4853
  %tobool62 = icmp eq i32 %call61, 0, !dbg !4853
  br i1 %tobool62, label %if.end59.if.end66_crit_edge, label %if.then63, !dbg !4854

if.end59.if.end66_crit_edge:                      ; preds = %if.end59
  %.pre = load %union.tree_node*, %union.tree_node** %high60, align 8, !dbg !4855
  br label %if.end66, !dbg !4854

if.then63:                                        ; preds = %if.end59
  %18 = load %union.tree_node*, %union.tree_node** %high60, align 8, !dbg !4857
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !4711, metadata !DIExpression()), !dbg !4780
  br label %if.end66, !dbg !4858

if.end66:                                         ; preds = %if.end59.if.end66_crit_edge, %if.then63, %if.then51
  %19 = phi %union.tree_node* [ %15, %if.then51 ], [ %18, %if.then63 ], [ %.pre, %if.end59.if.end66_crit_edge ], !dbg !4855
  %maxval.2 = phi %union.tree_node* [ %15, %if.then51 ], [ %18, %if.then63 ], [ %maxval.0, %if.end59.if.end66_crit_edge ], !dbg !4840
  %minval.2 = phi %union.tree_node* [ %14, %if.then51 ], [ %minval.1, %if.then63 ], [ %minval.1, %if.end59.if.end66_crit_edge ], !dbg !4840
  call void @llvm.dbg.value(metadata %union.tree_node* %minval.2, metadata !4710, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %maxval.2, metadata !4711, metadata !DIExpression()), !dbg !4780
  %20 = load %union.tree_node*, %union.tree_node** %low52, align 8, !dbg !4859
  %call69 = tail call i32 @tree_int_cst_equal(%union.tree_node* %20, %union.tree_node* %19) #6, !dbg !4860
  %tobool70 = icmp eq i32 %call69, 0, !dbg !4860
  %spec.select.v = select i1 %tobool70, i32 2, i32 1, !dbg !4861
  %spec.select = add i32 %count.0, %spec.select.v, !dbg !4861
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4715, metadata !DIExpression()), !dbg !4780
  %code_label = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 5, !dbg !4862
  %21 = load %union.tree_node*, %union.tree_node** %code_label, align 8, !dbg !4862
  %call74 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %21) #7, !dbg !4863
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call74, metadata !4724, metadata !DIExpression()), !dbg !4780
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call74, i64 0, i32 1, !dbg !4864
  %22 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !4864
  %rt_int = bitcast %union.rtunion_def* %22 to i32*, !dbg !4864
  %23 = load i32, i32* %rt_int, align 8, !dbg !4864
  %call76 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call46, i32 %23) #6, !dbg !4866
  %tobool77 = icmp eq i32 %call76, 0, !dbg !4866
  br i1 %tobool77, label %if.then78, label %for.inc86, !dbg !4867

if.then78:                                        ; preds = %if.end66
  %24 = load i32, i32* %rt_int, align 8, !dbg !4868
  %call83 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call46, i32 %24) #6, !dbg !4870
  %inc84 = add i32 %uniq.0, 1, !dbg !4871
  call void @llvm.dbg.value(metadata i32 %inc84, metadata !4716, metadata !DIExpression()), !dbg !4780
  br label %for.inc86, !dbg !4872

for.inc86:                                        ; preds = %if.end66, %if.then78
  %uniq.1 = phi i32 [ %uniq.0, %if.end66 ], [ %inc84, %if.then78 ], !dbg !4791
  call void @llvm.dbg.value(metadata i32 %uniq.1, metadata !4716, metadata !DIExpression()), !dbg !4780
  %right = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 1, !dbg !4873
  %n.0.pre = load %struct.case_node*, %struct.case_node** %right, align 8, !dbg !4833
  br label %for.cond47, !dbg !4874, !llvm.loop !4875

for.end87:                                        ; preds = %for.cond47
  %uniq.0.lcssa = phi i32 [ %uniq.0, %for.cond47 ], !dbg !4834
  %count.0.lcssa = phi i32 [ %count.0, %for.cond47 ], !dbg !4791
  %maxval.0.lcssa = phi %union.tree_node* [ %maxval.0, %for.cond47 ], !dbg !4780
  %minval.0.lcssa = phi %union.tree_node* [ %minval.0, %for.cond47 ], !dbg !4780
  call void @llvm.dbg.value(metadata i32 %uniq.0.lcssa, metadata !4716, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4715, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %maxval.0.lcssa, metadata !4711, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %minval.0.lcssa, metadata !4710, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 %uniq.0.lcssa, metadata !4716, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4715, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %maxval.0.lcssa, metadata !4711, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %minval.0.lcssa, metadata !4710, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 %uniq.0.lcssa, metadata !4716, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4715, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %maxval.0.lcssa, metadata !4711, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %minval.0.lcssa, metadata !4710, metadata !DIExpression()), !dbg !4780
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call46) #6, !dbg !4877
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !4756, metadata !DIExpression()), !dbg !4791
  %cmp88 = icmp eq i32 %count.0.lcssa, 0, !dbg !4878
  br i1 %cmp88, label %if.then89, label %if.end93, !dbg !4880

if.then89:                                        ; preds = %for.end87
  %tobool90 = icmp eq %struct.rtx_def* %default_label.0, null, !dbg !4881
  br i1 %tobool90, label %if.end92, label %if.then91, !dbg !4884

if.then91:                                        ; preds = %if.then89
  tail call void @emit_jump(%struct.rtx_def* nonnull %default_label.0) #7, !dbg !4885
  br label %if.end92, !dbg !4885

if.end92:                                         ; preds = %if.then89, %if.then91
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %call1) #6, !dbg !4886
  br label %cleanup327, !dbg !4887

if.end93:                                         ; preds = %for.end87
  %call94 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %0, %union.tree_node* %maxval.0.lcssa, %union.tree_node* %minval.0.lcssa) #6, !dbg !4888
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !4712, metadata !DIExpression()), !dbg !4780
  %25 = load i32, i32* @word_mode, align 4, !dbg !4889
  %idxprom = sext i32 %25 to i64, !dbg !4889
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44, i32 4, i64 %idxprom, i32 0, !dbg !4889
  %26 = load i32, i32* %insn_code, align 4, !dbg !4889
  %cmp96 = icmp eq i32 %26, 2956, !dbg !4889
  br i1 %cmp96, label %if.else156, label %land.lhs.true97, !dbg !4890

land.lhs.true97:                                  ; preds = %if.end93
  %bf.load99 = load i64, i64* %5, align 8, !dbg !4891
  %bf.cast1028 = and i64 %bf.load99, 131072, !dbg !4891
  %tobool103 = icmp eq i64 %bf.cast1028, 0, !dbg !4891
  br i1 %tobool103, label %land.lhs.true104, label %if.else156, !dbg !4892

land.lhs.true104:                                 ; preds = %land.lhs.true97
  %idxprom105 = zext i32 %25 to i64, !dbg !4893
  %arrayidx106 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom105, !dbg !4893
  %27 = load i8, i8* %arrayidx106, align 1, !dbg !4893
  %conv107 = zext i8 %27 to i64, !dbg !4893
  %mul = shl nuw nsw i64 %conv107, 3, !dbg !4893
  %call110 = tail call i32 @compare_tree_int(%union.tree_node* %call94, i64 %mul) #6, !dbg !4894
  %cmp111 = icmp slt i32 %call110, 0, !dbg !4895
  br i1 %cmp111, label %land.lhs.true113, label %if.else156, !dbg !4896

land.lhs.true113:                                 ; preds = %land.lhs.true104
  %call114 = tail call i32 @compare_tree_int(%union.tree_node* %call94, i64 0) #6, !dbg !4897
  %cmp115 = icmp sgt i32 %call114, 0, !dbg !4898
  br i1 %cmp115, label %land.lhs.true117, label %if.else156, !dbg !4899

land.lhs.true117:                                 ; preds = %land.lhs.true113
  %call118 = tail call fastcc zeroext i8 @lshift_cheap_p() #7, !dbg !4900
  %tobool120 = icmp eq i8 %call118, 0, !dbg !4900
  br i1 %tobool120, label %if.else156, label %land.lhs.true121, !dbg !4901

land.lhs.true121:                                 ; preds = %land.lhs.true117
  %cmp122 = icmp eq i32 %uniq.0.lcssa, 1, !dbg !4902
  %cmp125 = icmp ugt i32 %count.0.lcssa, 2, !dbg !4903
  %or.cond = and i1 %cmp122, %cmp125, !dbg !4904
  br i1 %or.cond, label %if.then138, label %lor.lhs.false, !dbg !4904

lor.lhs.false:                                    ; preds = %land.lhs.true121
  %cmp127 = icmp eq i32 %uniq.0.lcssa, 2, !dbg !4905
  %cmp130 = icmp ugt i32 %count.0.lcssa, 4, !dbg !4906
  %or.cond2 = and i1 %cmp127, %cmp130, !dbg !4907
  br i1 %or.cond2, label %if.then138, label %lor.lhs.false132, !dbg !4907

lor.lhs.false132:                                 ; preds = %lor.lhs.false
  %cmp133 = icmp eq i32 %uniq.0.lcssa, 3, !dbg !4908
  %cmp136 = icmp ugt i32 %count.0.lcssa, 5, !dbg !4909
  %or.cond3 = and i1 %cmp133, %cmp136, !dbg !4910
  br i1 %or.cond3, label %if.then138, label %if.else156, !dbg !4910

if.then138:                                       ; preds = %lor.lhs.false132, %lor.lhs.false, %land.lhs.true121
  %call139 = tail call i32 @compare_tree_int(%union.tree_node* %minval.0.lcssa, i64 0) #6, !dbg !4911
  %cmp140 = icmp sgt i32 %call139, 0, !dbg !4914
  br i1 %cmp140, label %land.lhs.true142, label %if.end155, !dbg !4915

land.lhs.true142:                                 ; preds = %if.then138
  %28 = load i32, i32* @word_mode, align 4, !dbg !4916
  %idxprom143 = zext i32 %28 to i64, !dbg !4916
  %arrayidx144 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom143, !dbg !4916
  %29 = load i8, i8* %arrayidx144, align 1, !dbg !4916
  %conv146 = zext i8 %29 to i64, !dbg !4916
  %mul147 = shl nuw nsw i64 %conv146, 3, !dbg !4916
  %call150 = tail call i32 @compare_tree_int(%union.tree_node* %maxval.0.lcssa, i64 %mul147) #6, !dbg !4917
  %cmp151 = icmp slt i32 %call150, 0, !dbg !4918
  br i1 %cmp151, label %if.then153, label %if.end155, !dbg !4919

if.then153:                                       ; preds = %land.lhs.true142
  %call154 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %0, i64 0) #6, !dbg !4920
  call void @llvm.dbg.value(metadata %union.tree_node* %call154, metadata !4710, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %maxval.0.lcssa, metadata !4712, metadata !DIExpression()), !dbg !4780
  br label %if.end155, !dbg !4922

if.end155:                                        ; preds = %if.then153, %land.lhs.true142, %if.then138
  %range.0 = phi %union.tree_node* [ %maxval.0.lcssa, %if.then153 ], [ %call94, %land.lhs.true142 ], [ %call94, %if.then138 ], !dbg !4791
  %minval.3 = phi %union.tree_node* [ %call154, %if.then153 ], [ %minval.0.lcssa, %land.lhs.true142 ], [ %minval.0.lcssa, %if.then138 ], !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %minval.3, metadata !4710, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %range.0, metadata !4712, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %struct.case_node* %.lcssa, metadata !4729, metadata !DIExpression()), !dbg !4780
  tail call fastcc void @emit_case_bit_tests(%union.tree_node* %0, %union.tree_node* %call, %union.tree_node* %minval.3, %union.tree_node* %range.0, %struct.case_node* %.lcssa, %struct.rtx_def* %default_label.0) #7, !dbg !4923
  br label %if.end322, !dbg !4924

if.else156:                                       ; preds = %land.lhs.true117, %land.lhs.true97, %if.end93, %lor.lhs.false132, %land.lhs.true113, %land.lhs.true104
  %30 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 101), align 8, !dbg !4925
  %call157 = tail call i32 %30() #6, !dbg !4926
  %cmp158 = icmp ult i32 %count.0.lcssa, %call157, !dbg !4927
  br i1 %cmp158, label %if.then183, label %lor.lhs.false160, !dbg !4928

lor.lhs.false160:                                 ; preds = %if.else156
  %call161 = tail call zeroext i8 @optimize_insn_for_size_p() #6, !dbg !4929
  %tobool163 = icmp eq i8 %call161, 0, !dbg !4929
  %cond164 = select i1 %tobool163, i32 10, i32 3, !dbg !4929
  %mul165 = mul i32 %cond164, %count.0.lcssa, !dbg !4930
  %conv166 = zext i32 %mul165 to i64, !dbg !4931
  %call167 = tail call i32 @compare_tree_int(%union.tree_node* %call94, i64 %conv166) #6, !dbg !4932
  %cmp168 = icmp sgt i32 %call167, 0, !dbg !4933
  br i1 %cmp168, label %if.then183, label %lor.lhs.false170, !dbg !4934

lor.lhs.false170:                                 ; preds = %lor.lhs.false160
  %call171 = tail call i32 @compare_tree_int(%union.tree_node* %call94, i64 0) #6, !dbg !4935
  %cmp172 = icmp sgt i32 %call171, -1, !dbg !4936
  %31 = load i32, i32* @flag_jump_tables, align 4, !dbg !4937
  %tobool175 = icmp ne i32 %31, 0, !dbg !4937
  %or.cond4 = and i1 %cmp172, %tobool175, !dbg !4938
  br i1 %or.cond4, label %lor.lhs.false176, label %if.then183, !dbg !4938

lor.lhs.false176:                                 ; preds = %lor.lhs.false170
  %bf.load178 = load i64, i64* %5, align 8, !dbg !4939
  %bf.cast1817 = and i64 %bf.load178, 131072, !dbg !4939
  %tobool182 = icmp eq i64 %bf.cast1817, 0, !dbg !4939
  br i1 %tobool182, label %if.else229, label %if.then183, !dbg !4940

if.then183:                                       ; preds = %lor.lhs.false176, %lor.lhs.false170, %lor.lhs.false160, %if.else156
  %call184 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %call) #7, !dbg !4941
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call184, metadata !4717, metadata !DIExpression()), !dbg !4780
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call184, i64 0, i32 0, !dbg !4942
  %bf.load185 = load i32, i32* %32, align 8, !dbg !4942
  %bf.lshr186 = lshr i32 %bf.load185, 16, !dbg !4942
  %bf.clear187 = and i32 %bf.lshr186, 255, !dbg !4942
  %idxprom188 = zext i32 %bf.clear187 to i64, !dbg !4942
  %arrayidx189 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom188, !dbg !4942
  %33 = load i8, i8* %arrayidx189, align 1, !dbg !4942
  %cmp191 = icmp eq i8 %33, 2, !dbg !4943
  br i1 %cmp191, label %land.lhs.true193, label %if.end217, !dbg !4944

land.lhs.true193:                                 ; preds = %if.then183
  %call197 = tail call i32 @have_insn_for(i32 48, i32 %bf.clear187) #6, !dbg !4945
  %tobool198 = icmp eq i32 %call197, 0, !dbg !4945
  br i1 %tobool198, label %if.then199, label %if.end217, !dbg !4946

if.then199:                                       ; preds = %land.lhs.true193
  %bf.load200 = load i32, i32* %32, align 8, !dbg !4947
  %bf.lshr201 = lshr i32 %bf.load200, 16, !dbg !4947
  %bf.clear202 = and i32 %bf.lshr201, 255, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %bf.clear202, metadata !4763, metadata !DIExpression()), !dbg !4949
  br label %for.cond203, !dbg !4950

for.cond203:                                      ; preds = %for.inc212, %if.then199
  %wider_mode.0 = phi i32 [ %bf.clear202, %if.then199 ], [ %conv215, %for.inc212 ], !dbg !4951
  call void @llvm.dbg.value(metadata i32 %wider_mode.0, metadata !4763, metadata !DIExpression()), !dbg !4949
  %cmp204 = icmp eq i32 %wider_mode.0, 0, !dbg !4952
  br i1 %cmp204, label %if.end217.loopexit, label %for.body206, !dbg !4954

for.body206:                                      ; preds = %for.cond203
  %call207 = tail call i32 @have_insn_for(i32 48, i32 %wider_mode.0) #6, !dbg !4955
  %tobool208 = icmp eq i32 %call207, 0, !dbg !4955
  br i1 %tobool208, label %for.inc212, label %if.then209, !dbg !4957

if.then209:                                       ; preds = %for.body206
  %wider_mode.0.lcssa13 = phi i32 [ %wider_mode.0, %for.body206 ], !dbg !4951
  call void @llvm.dbg.value(metadata i32 %wider_mode.0.lcssa13, metadata !4763, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i32 %wider_mode.0.lcssa13, metadata !4763, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i32 %wider_mode.0.lcssa13, metadata !4763, metadata !DIExpression()), !dbg !4949
  %call210 = tail call %struct.rtx_def* @convert_to_mode(i32 %wider_mode.0.lcssa13, %struct.rtx_def* %call184, i32 %bf.cast) #6, !dbg !4958
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call210, metadata !4717, metadata !DIExpression()), !dbg !4780
  br label %if.end217, !dbg !4960

for.inc212:                                       ; preds = %for.body206
  %idxprom213 = zext i32 %wider_mode.0 to i64, !dbg !4961
  %arrayidx214 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom213, !dbg !4961
  %34 = load i8, i8* %arrayidx214, align 1, !dbg !4961
  %conv215 = zext i8 %34 to i32, !dbg !4961
  call void @llvm.dbg.value(metadata i32 %conv215, metadata !4763, metadata !DIExpression()), !dbg !4949
  br label %for.cond203, !dbg !4962, !llvm.loop !4963

if.end217.loopexit:                               ; preds = %for.cond203
  br label %if.end217, !dbg !4965

if.end217:                                        ; preds = %if.end217.loopexit, %land.lhs.true193, %if.then209, %if.then183
  %index.1 = phi %struct.rtx_def* [ %call184, %land.lhs.true193 ], [ %call184, %if.then183 ], [ %call210, %if.then209 ], [ %call184, %if.end217.loopexit ], !dbg !4966
  call void @llvm.dbg.value(metadata %struct.rtx_def* %index.1, metadata !4717, metadata !DIExpression()), !dbg !4780
  tail call void @do_pending_stack_adjust() #6, !dbg !4965
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %index.1, i64 0, i32 0, !dbg !4967
  %bf.load218 = load i32, i32* %35, align 8, !dbg !4967
  %bf.clear219 = and i32 %bf.load218, 65535, !dbg !4967
  %cmp220 = icmp eq i32 %bf.clear219, 43, !dbg !4967
  br i1 %cmp220, label %if.then222, label %if.end224, !dbg !4969

if.then222:                                       ; preds = %if.end217
  %call223 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %index.1) #6, !dbg !4970
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call223, metadata !4717, metadata !DIExpression()), !dbg !4780
  br label %if.end224, !dbg !4971

if.end224:                                        ; preds = %if.then222, %if.end217
  %index.2 = phi %struct.rtx_def* [ %call223, %if.then222 ], [ %index.1, %if.end217 ], !dbg !4966
  call void @llvm.dbg.value(metadata %struct.rtx_def* %index.2, metadata !4717, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %struct.case_node* %.lcssa, metadata !4729, metadata !DIExpression()), !dbg !4780
  %call225 = tail call fastcc i32 @estimate_case_costs(%struct.case_node* %.lcssa) #7, !dbg !4972
  store i32 %call225, i32* @use_cost_table, align 4, !dbg !4973
  call void @llvm.dbg.value(metadata %struct.case_node** %case_list, metadata !4729, metadata !DIExpression(DW_OP_deref)), !dbg !4780
  call fastcc void @balance_case_nodes(%struct.case_node** nonnull %case_list, %struct.case_node* null) #7, !dbg !4974
  %36 = load %struct.case_node*, %struct.case_node** %case_list, align 8, !dbg !4975
  call void @llvm.dbg.value(metadata %struct.case_node* %36, metadata !4729, metadata !DIExpression()), !dbg !4780
  call fastcc void @emit_case_nodes(%struct.rtx_def* %index.2, %struct.case_node* %36, %struct.rtx_def* %default_label.0, %union.tree_node* %0) #7, !dbg !4976
  %tobool226 = icmp eq %struct.rtx_def* %default_label.0, null, !dbg !4977
  br i1 %tobool226, label %if.end322, label %if.then227, !dbg !4979

if.then227:                                       ; preds = %if.end224
  call void @emit_jump(%struct.rtx_def* nonnull %default_label.0) #7, !dbg !4980
  br label %if.end322, !dbg !4980

if.else229:                                       ; preds = %lor.lhs.false176
  call void @llvm.dbg.value(metadata %struct.case_node* %.lcssa, metadata !4729, metadata !DIExpression()), !dbg !4780
  %code_label230 = getelementptr inbounds %struct.case_node, %struct.case_node* %.lcssa, i64 0, i32 5, !dbg !4981
  %37 = load %union.tree_node*, %union.tree_node** %code_label230, align 8, !dbg !4981
  %call231 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %37) #7, !dbg !4982
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call231, metadata !4769, metadata !DIExpression()), !dbg !4983
  %call232 = tail call %struct.rtx_def* @gen_label_rtx() #6, !dbg !4984
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call232, metadata !4718, metadata !DIExpression()), !dbg !4780
  %call233 = tail call i32 @try_casesi(%union.tree_node* %0, %union.tree_node* %call, %union.tree_node* %minval.0.lcssa, %union.tree_node* %call94, %struct.rtx_def* %call232, %struct.rtx_def* %default_label.0, %struct.rtx_def* %call231) #6, !dbg !4985
  %tobool234 = icmp eq i32 %call233, 0, !dbg !4985
  br i1 %tobool234, label %if.then235, label %if.end257, !dbg !4986

if.then235:                                       ; preds = %if.else229
  %call236 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !4987
  %tobool238 = icmp eq i8 %call236, 0, !dbg !4987
  br i1 %tobool238, label %if.end249, label %land.lhs.true239, !dbg !4989

land.lhs.true239:                                 ; preds = %if.then235
  %call240 = tail call i32 @compare_tree_int(%union.tree_node* %minval.0.lcssa, i64 0) #6, !dbg !4990
  %cmp241 = icmp sgt i32 %call240, 0, !dbg !4991
  br i1 %cmp241, label %land.lhs.true243, label %if.end249, !dbg !4992

land.lhs.true243:                                 ; preds = %land.lhs.true239
  %call244 = tail call i32 @compare_tree_int(%union.tree_node* %minval.0.lcssa, i64 3) #6, !dbg !4993
  %cmp245 = icmp slt i32 %call244, 0, !dbg !4994
  br i1 %cmp245, label %if.then247, label %if.end249, !dbg !4995

if.then247:                                       ; preds = %land.lhs.true243
  %call248 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %0, i64 0) #6, !dbg !4996
  call void @llvm.dbg.value(metadata %union.tree_node* %call248, metadata !4710, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %maxval.0.lcssa, metadata !4712, metadata !DIExpression()), !dbg !4780
  br label %if.end249, !dbg !4998

if.end249:                                        ; preds = %if.then235, %if.then247, %land.lhs.true243, %land.lhs.true239
  %range.1 = phi %union.tree_node* [ %maxval.0.lcssa, %if.then247 ], [ %call94, %land.lhs.true243 ], [ %call94, %land.lhs.true239 ], [ %call94, %if.then235 ], !dbg !4791
  %minval.4 = phi %union.tree_node* [ %call248, %if.then247 ], [ %minval.0.lcssa, %land.lhs.true243 ], [ %minval.0.lcssa, %land.lhs.true239 ], [ %minval.0.lcssa, %if.then235 ], !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %minval.4, metadata !4710, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %range.1, metadata !4712, metadata !DIExpression()), !dbg !4780
  %call250 = tail call i32 @try_tablejump(%union.tree_node* %0, %union.tree_node* %call, %union.tree_node* %minval.4, %union.tree_node* %range.1, %struct.rtx_def* %call232, %struct.rtx_def* %default_label.0) #6, !dbg !4999
  %conv251 = trunc i32 %call250 to i8, !dbg !4999
  call void @llvm.dbg.value(metadata i8 %conv251, metadata !4771, metadata !DIExpression()), !dbg !5000
  %tobool252 = icmp eq i8 %conv251, 0, !dbg !5001
  br i1 %tobool252, label %cond.true253, label %if.end257, !dbg !5001

cond.true253:                                     ; preds = %if.end249
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2473, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5001
  br label %if.end257, !dbg !5001

if.end257:                                        ; preds = %if.end249, %if.else229, %cond.true253
  %range.2 = phi %union.tree_node* [ %call94, %if.else229 ], [ %range.1, %if.end249 ], [ %range.1, %cond.true253 ], !dbg !4791
  %minval.5 = phi %union.tree_node* [ %minval.0.lcssa, %if.else229 ], [ %minval.4, %if.end249 ], [ %minval.4, %cond.true253 ], !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %minval.5, metadata !4710, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %range.2, metadata !4712, metadata !DIExpression()), !dbg !4780
  %call258 = tail call i64 @tree_low_cst(%union.tree_node* %range.2, i32 0) #6, !dbg !5002
  %38 = trunc i64 %call258 to i32, !dbg !5002
  %conv259 = add i32 %38, 1, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %conv259, metadata !4719, metadata !DIExpression()), !dbg !4780
  %conv260 = sext i32 %conv259 to i64, !dbg !5003
  %39 = alloca %struct.rtx_def*, i64 %conv260, align 16, !dbg !5003
  call void @llvm.dbg.value(metadata %struct.rtx_def** %39, metadata !4720, metadata !DIExpression()), !dbg !4780
  %40 = bitcast %struct.rtx_def** %39 to i8*, !dbg !5004
  %mul263 = shl nsw i64 %conv260, 3, !dbg !5005
  %call264 = call i8* @memset(i8* nonnull %40, i32 0, i64 %mul263) #6, !dbg !5006
  br label %for.cond265, !dbg !5007

for.cond265:                                      ; preds = %for.inc286, %if.end257
  %n.1.in = phi %struct.case_node** [ %case_list, %if.end257 ], [ %right287, %for.inc286 ]
  %n.1 = load %struct.case_node*, %struct.case_node** %n.1.in, align 8, !dbg !5008
  call void @llvm.dbg.value(metadata %struct.case_node* %n.1, metadata !4714, metadata !DIExpression()), !dbg !4780
  %tobool266 = icmp eq %struct.case_node* %n.1, null, !dbg !5009
  br i1 %tobool266, label %for.end288, label %for.body267, !dbg !5009

for.body267:                                      ; preds = %for.cond265
  %low268 = getelementptr inbounds %struct.case_node, %struct.case_node* %n.1, i64 0, i32 3, !dbg !5010
  %41 = load %union.tree_node*, %union.tree_node** %low268, align 8, !dbg !5010
  %call269 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %0, %union.tree_node* %41, %union.tree_node* %minval.5) #6, !dbg !5010
  %call270 = call i64 @tree_low_cst(%union.tree_node* %call269, i32 1) #6, !dbg !5011
  call void @llvm.dbg.value(metadata i64 %call270, metadata !4774, metadata !DIExpression()), !dbg !5012
  %high271 = getelementptr inbounds %struct.case_node, %struct.case_node* %n.1, i64 0, i32 4, !dbg !5013
  %42 = load %union.tree_node*, %union.tree_node** %high271, align 8, !dbg !5013
  %call272 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %0, %union.tree_node* %42, %union.tree_node* %minval.5) #6, !dbg !5013
  %call273 = call i64 @tree_low_cst(%union.tree_node* %call272, i32 1) #6, !dbg !5014
  call void @llvm.dbg.value(metadata i64 %call273, metadata !4778, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i64 %call270, metadata !4779, metadata !DIExpression()), !dbg !5012
  %code_label279 = getelementptr inbounds %struct.case_node, %struct.case_node* %n.1, i64 0, i32 5, !dbg !5015
  br label %for.cond275, !dbg !5018

for.cond275:                                      ; preds = %for.body278, %for.body267
  %i274.0 = phi i64 [ %call270, %for.body267 ], [ %inc284, %for.body278 ], !dbg !5019
  call void @llvm.dbg.value(metadata i64 %i274.0, metadata !4779, metadata !DIExpression()), !dbg !5012
  %cmp276 = icmp sgt i64 %i274.0, %call273, !dbg !5020
  br i1 %cmp276, label %for.inc286, label %for.body278, !dbg !5021

for.body278:                                      ; preds = %for.cond275
  %43 = load %union.tree_node*, %union.tree_node** %code_label279, align 8, !dbg !5022
  %call280 = call %struct.rtx_def* @label_rtx(%union.tree_node* %43) #7, !dbg !5022
  %call281 = call %struct.rtx_def* @gen_rtx_fmt_u_stat(i32 44, i32 16, %struct.rtx_def* %call280) #6, !dbg !5022
  %arrayidx282 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %39, i64 %i274.0, !dbg !5023
  store %struct.rtx_def* %call281, %struct.rtx_def** %arrayidx282, align 8, !dbg !5024
  %inc284 = add nsw i64 %i274.0, 1, !dbg !5025
  call void @llvm.dbg.value(metadata i64 %inc284, metadata !4779, metadata !DIExpression()), !dbg !5012
  br label %for.cond275, !dbg !5026, !llvm.loop !5027

for.inc286:                                       ; preds = %for.cond275
  %right287 = getelementptr inbounds %struct.case_node, %struct.case_node* %n.1, i64 0, i32 1, !dbg !5029
  br label %for.cond265, !dbg !5030, !llvm.loop !5031

for.end288:                                       ; preds = %for.cond265
  %tobool289 = icmp eq %struct.rtx_def* %default_label.0, null, !dbg !5033
  %spec.select5 = select i1 %tobool289, %struct.rtx_def* %call231, %struct.rtx_def* %default_label.0, !dbg !5035
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select5, metadata !4713, metadata !DIExpression()), !dbg !4780
  call void @llvm.dbg.value(metadata i32 0, metadata !4721, metadata !DIExpression()), !dbg !4780
  %44 = sext i32 %conv259 to i64, !dbg !5036
  br label %for.cond292, !dbg !5036

for.cond292:                                      ; preds = %for.inc305, %for.end288
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc305 ], [ 0, %for.end288 ], !dbg !5038
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4721, metadata !DIExpression()), !dbg !4780
  %cmp293 = icmp slt i64 %indvars.iv, %44, !dbg !5039
  br i1 %cmp293, label %for.body295, label %for.end307, !dbg !5041

for.body295:                                      ; preds = %for.cond292
  %arrayidx297 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %39, i64 %indvars.iv, !dbg !5042
  %45 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx297, align 8, !dbg !5042
  %cmp298 = icmp eq %struct.rtx_def* %45, null, !dbg !5044
  br i1 %cmp298, label %if.then300, label %for.inc305, !dbg !5045

if.then300:                                       ; preds = %for.body295
  %call301 = call %struct.rtx_def* @gen_rtx_fmt_u_stat(i32 44, i32 16, %struct.rtx_def* %spec.select5) #6, !dbg !5046
  store %struct.rtx_def* %call301, %struct.rtx_def** %arrayidx297, align 8, !dbg !5047
  br label %for.inc305, !dbg !5048

for.inc305:                                       ; preds = %for.body295, %if.then300
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5049
  call void @llvm.dbg.value(metadata i32 undef, metadata !4721, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4780
  br label %for.cond292, !dbg !5050, !llvm.loop !5051

for.end307:                                       ; preds = %for.cond292
  %call308 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call232) #6, !dbg !5053
  %46 = load i32, i32* @flag_pic, align 4, !dbg !5054
  %tobool309 = icmp eq i32 %46, 0, !dbg !5054
  br i1 %tobool309, label %if.else315, label %if.then310, !dbg !5056

if.then310:                                       ; preds = %for.end307
  %call311 = call %struct.rtx_def* @gen_rtx_fmt_u_stat(i32 44, i32 16, %struct.rtx_def* %call232) #6, !dbg !5057
  %call312 = call %struct.rtvec_def* @gen_rtvec_v(i32 %conv259, %struct.rtx_def** nonnull %39) #6, !dbg !5057
  %47 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5057
  %call313 = call %struct.rtx_def* @gen_rtx_fmt_eEee0_stat(i32 21, i32 16, %struct.rtx_def* %call311, %struct.rtvec_def* %call312, %struct.rtx_def* %47, %struct.rtx_def* %47) #6, !dbg !5057
  %call314 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call313) #6, !dbg !5058
  br label %if.end319, !dbg !5058

if.else315:                                       ; preds = %for.end307
  %call316 = call %struct.rtvec_def* @gen_rtvec_v(i32 %conv259, %struct.rtx_def** nonnull %39) #6, !dbg !5059
  %call317 = call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 20, i32 16, %struct.rtvec_def* %call316) #6, !dbg !5059
  %call318 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call317) #6, !dbg !5060
  br label %if.end319

if.end319:                                        ; preds = %if.else315, %if.then310
  %call320 = call %struct.rtx_def* @emit_barrier() #6, !dbg !5061
  br label %if.end322

if.end322:                                        ; preds = %if.end224, %if.end319, %if.then227, %if.end155
  %48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call41, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5062
  %rt_rtx = bitcast %union.rtunion_def* %48 to %struct.rtx_def**, !dbg !5062
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5062
  call void @llvm.dbg.value(metadata %struct.rtx_def* %49, metadata !4722, metadata !DIExpression()), !dbg !4780
  %call326 = call %struct.rtx_def* @get_last_insn() #6, !dbg !5063
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call326, metadata !4723, metadata !DIExpression()), !dbg !4780
  call void @reorder_insns(%struct.rtx_def* %49, %struct.rtx_def* %call326, %struct.rtx_def* %call41) #6, !dbg !5064
  br label %cleanup327, !dbg !5065

cleanup327:                                       ; preds = %if.end322, %if.end92
  %cleanup.dest.slot.1 = phi i1 [ false, %if.end92 ], [ true, %if.end322 ]
  br i1 %cleanup.dest.slot.1, label %if.end332, label %cleanup333

if.end332:                                        ; preds = %entry, %cleanup327
  call void @free_temp_slots() #6, !dbg !5066
  call void @free_alloc_pool(%struct.alloc_pool_def* %call1) #6, !dbg !5067
  br label %cleanup333, !dbg !5068

cleanup333:                                       ; preds = %cleanup327, %if.end332
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5068
  ret void, !dbg !5068
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_switch_index(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5069 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5073, metadata !DIExpression()), !dbg !5074
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5075
  ret %union.tree_node* %call, !dbg !5076
}

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_switch_label(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5077 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5079, metadata !DIExpression()), !dbg !5081
  call void @llvm.dbg.value(metadata i32 %index, metadata !5080, metadata !DIExpression()), !dbg !5081
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5082
  %add = add i32 %index, 1, !dbg !5082
  %cmp = icmp ugt i32 %call, %add, !dbg !5082
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5082

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i32 3215, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5082
  br label %cond.end, !dbg !5082

cond.end:                                         ; preds = %entry, %cond.true
  %call2 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !5083
  ret %union.tree_node* %call2, !dbg !5084
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_switch_num_labels(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5085 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5087, metadata !DIExpression()), !dbg !5089
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5090
  call void @llvm.dbg.value(metadata i32 %call, metadata !5088, metadata !DIExpression()), !dbg !5089
  %cmp = icmp ugt i32 %call, 1, !dbg !5091
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5091

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i32 3162, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5091
  br label %cond.end, !dbg !5091

cond.end:                                         ; preds = %entry, %cond.true
  %sub = add i32 %call, -1, !dbg !5092
  ret i32 %sub, !dbg !5093
}

declare dso_local i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.case_node* @add_case_node(%struct.case_node* %head, %union.tree_node* %type, %union.tree_node* %low, %union.tree_node* %high, %union.tree_node* %label, %struct.alloc_pool_def* %case_node_pool) unnamed_addr #5 !dbg !5094 {
entry:
  call void @llvm.dbg.value(metadata %struct.case_node* %head, metadata !5098, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5099, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata %union.tree_node* %low, metadata !5100, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata %union.tree_node* %high, metadata !5101, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !5102, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata %struct.alloc_pool_def* %case_node_pool, metadata !5103, metadata !DIExpression()), !dbg !5107
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %low, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5108
  %bf.load = load i64, i64* %0, align 8, !dbg !5108
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5108
  %cmp = icmp eq i64 %bf.cast2, 23, !dbg !5108
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5108

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2009, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5108
  br label %cond.end, !dbg !5108

cond.end:                                         ; preds = %entry, %cond.true
  %tobool = icmp eq %union.tree_node* %high, null, !dbg !5109
  br i1 %tobool, label %cond.end8, label %lor.lhs.false, !dbg !5109

lor.lhs.false:                                    ; preds = %cond.end
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %high, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5109
  %bf.load2 = load i64, i64* %1, align 8, !dbg !5109
  %bf.cast49 = and i64 %bf.load2, 65535, !dbg !5109
  %cmp5 = icmp eq i64 %bf.cast49, 23, !dbg !5109
  br i1 %cmp5, label %cond.end8, label %cond.true6, !dbg !5109

cond.true6:                                       ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2010, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5109
  br label %cond.end8, !dbg !5109

cond.end8:                                        ; preds = %cond.end, %lor.lhs.false, %cond.true6
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !5110
  %2 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !5110
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5110
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5104, metadata !DIExpression()), !dbg !5107
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5111
  %4 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !5111
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !5111
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5105, metadata !DIExpression()), !dbg !5107
  br i1 %tobool, label %if.then, label %lor.lhs.false13, !dbg !5112

lor.lhs.false13:                                  ; preds = %cond.end8
  %call = tail call i32 @tree_int_cst_equal(%union.tree_node* %low, %union.tree_node* nonnull %high) #6, !dbg !5114
  %tobool14 = icmp eq i32 %call, 0, !dbg !5114
  br i1 %tobool14, label %if.else, label %if.then, !dbg !5115

if.then:                                          ; preds = %lor.lhs.false13, %cond.end8
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5116
  %bf.load16 = load i64, i64* %6, align 8, !dbg !5116
  %bf.cast183 = and i64 %bf.load16, 65535, !dbg !5119
  %cmp19 = icmp eq i64 %bf.cast183, 23, !dbg !5119
  br i1 %cmp19, label %land.lhs.true, label %lor.lhs.false22, !dbg !5120

land.lhs.true:                                    ; preds = %if.then
  %call20 = tail call i32 @tree_int_cst_compare(%union.tree_node* %low, %union.tree_node* %3) #6, !dbg !5121
  %cmp21 = icmp slt i32 %call20, 0, !dbg !5122
  br i1 %cmp21, label %cleanup, label %lor.lhs.false22, !dbg !5123

lor.lhs.false22:                                  ; preds = %land.lhs.true, %if.then
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5124
  %bf.load24 = load i64, i64* %7, align 8, !dbg !5124
  %bf.cast264 = and i64 %bf.load24, 65535, !dbg !5125
  %cmp27 = icmp eq i64 %bf.cast264, 23, !dbg !5125
  br i1 %cmp27, label %land.lhs.true28, label %if.end, !dbg !5126

land.lhs.true28:                                  ; preds = %lor.lhs.false22
  %call29 = tail call i32 @tree_int_cst_compare(%union.tree_node* %low, %union.tree_node* %5) #6, !dbg !5127
  %cmp30 = icmp sgt i32 %call29, 0, !dbg !5128
  br i1 %cmp30, label %cleanup, label %if.end, !dbg !5129

if.end:                                           ; preds = %land.lhs.true28, %lor.lhs.false22
  %call32 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %low) #6, !dbg !5130
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !5100, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !5101, metadata !DIExpression()), !dbg !5107
  br label %if.end74, !dbg !5131

if.else:                                          ; preds = %lor.lhs.false13
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5132
  %bf.load34 = load i64, i64* %8, align 8, !dbg !5132
  %bf.cast365 = and i64 %bf.load34, 65535, !dbg !5135
  %cmp37 = icmp eq i64 %bf.cast365, 23, !dbg !5135
  br i1 %cmp37, label %land.lhs.true38, label %lor.lhs.false41, !dbg !5136

land.lhs.true38:                                  ; preds = %if.else
  %call39 = tail call i32 @tree_int_cst_compare(%union.tree_node* nonnull %high, %union.tree_node* %3) #6, !dbg !5137
  %cmp40 = icmp slt i32 %call39, 0, !dbg !5138
  br i1 %cmp40, label %cleanup, label %lor.lhs.false41, !dbg !5139

lor.lhs.false41:                                  ; preds = %land.lhs.true38, %if.else
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5140
  %bf.load43 = load i64, i64* %9, align 8, !dbg !5140
  %bf.cast456 = and i64 %bf.load43, 65535, !dbg !5141
  %cmp46 = icmp eq i64 %bf.cast456, 23, !dbg !5141
  br i1 %cmp46, label %land.lhs.true47, label %if.end51, !dbg !5142

land.lhs.true47:                                  ; preds = %lor.lhs.false41
  %call48 = tail call i32 @tree_int_cst_compare(%union.tree_node* %low, %union.tree_node* %5) #6, !dbg !5143
  %cmp49 = icmp sgt i32 %call48, 0, !dbg !5144
  br i1 %cmp49, label %cleanup, label %if.end51, !dbg !5145

if.end51:                                         ; preds = %land.lhs.true47, %lor.lhs.false41
  %bf.load53 = load i64, i64* %8, align 8, !dbg !5146
  %bf.cast557 = and i64 %bf.load53, 65535, !dbg !5148
  %cmp56 = icmp eq i64 %bf.cast557, 23, !dbg !5148
  br i1 %cmp56, label %land.lhs.true57, label %if.end61, !dbg !5149

land.lhs.true57:                                  ; preds = %if.end51
  %call58 = tail call i32 @tree_int_cst_compare(%union.tree_node* %low, %union.tree_node* %3) #6, !dbg !5150
  %cmp59 = icmp slt i32 %call58, 0, !dbg !5151
  %spec.select = select i1 %cmp59, %union.tree_node* %3, %union.tree_node* %low, !dbg !5152
  br label %if.end61, !dbg !5152

if.end61:                                         ; preds = %land.lhs.true57, %if.end51
  %low.addr.0 = phi %union.tree_node* [ %low, %if.end51 ], [ %spec.select, %land.lhs.true57 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %low.addr.0, metadata !5100, metadata !DIExpression()), !dbg !5107
  %call62 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %low.addr.0) #6, !dbg !5153
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !5100, metadata !DIExpression()), !dbg !5107
  %bf.load64 = load i64, i64* %9, align 8, !dbg !5154
  %bf.cast668 = and i64 %bf.load64, 65535, !dbg !5156
  %cmp67 = icmp eq i64 %bf.cast668, 23, !dbg !5156
  br i1 %cmp67, label %land.lhs.true68, label %if.end72, !dbg !5157

land.lhs.true68:                                  ; preds = %if.end61
  %call69 = tail call i32 @tree_int_cst_compare(%union.tree_node* nonnull %high, %union.tree_node* %5) #6, !dbg !5158
  %cmp70 = icmp sgt i32 %call69, 0, !dbg !5159
  %spec.select1 = select i1 %cmp70, %union.tree_node* %5, %union.tree_node* %high, !dbg !5160
  br label %if.end72, !dbg !5160

if.end72:                                         ; preds = %land.lhs.true68, %if.end61
  %high.addr.0 = phi %union.tree_node* [ %high, %if.end61 ], [ %spec.select1, %land.lhs.true68 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %high.addr.0, metadata !5101, metadata !DIExpression()), !dbg !5107
  %call73 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %high.addr.0) #6, !dbg !5161
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !5101, metadata !DIExpression()), !dbg !5107
  br label %if.end74

if.end74:                                         ; preds = %if.end72, %if.end
  %low.addr.1 = phi %union.tree_node* [ %call32, %if.end ], [ %call62, %if.end72 ], !dbg !5162
  %high.addr.1 = phi %union.tree_node* [ %call32, %if.end ], [ %call73, %if.end72 ], !dbg !5162
  call void @llvm.dbg.value(metadata %union.tree_node* %high.addr.1, metadata !5101, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata %union.tree_node* %low.addr.1, metadata !5100, metadata !DIExpression()), !dbg !5107
  %call75 = tail call i8* @pool_alloc(%struct.alloc_pool_def* %case_node_pool) #6, !dbg !5163
  %10 = bitcast i8* %call75 to %struct.case_node*, !dbg !5164
  call void @llvm.dbg.value(metadata %struct.case_node* %10, metadata !5106, metadata !DIExpression()), !dbg !5107
  %type76 = getelementptr inbounds %union.tree_node, %union.tree_node* %low.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5165
  %11 = load %union.tree_node*, %union.tree_node** %type76, align 8, !dbg !5165
  %int_cst77 = getelementptr inbounds %union.tree_node, %union.tree_node* %low.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5166
  %low78 = bitcast i32* %int_cst77 to i64*, !dbg !5166
  %12 = load i64, i64* %low78, align 8, !dbg !5166
  %high81 = getelementptr inbounds i32, i32* %int_cst77, i64 2, !dbg !5167
  %13 = bitcast i32* %high81 to i64*, !dbg !5167
  %14 = load i64, i64* %13, align 8, !dbg !5167
  %call82 = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %11, i64 %12, i64 %14) #6, !dbg !5168
  %low83 = getelementptr inbounds i8, i8* %call75, i64 24, !dbg !5169
  %15 = bitcast i8* %low83 to %union.tree_node**, !dbg !5169
  store %union.tree_node* %call82, %union.tree_node** %15, align 8, !dbg !5170
  %type85 = getelementptr inbounds %union.tree_node, %union.tree_node* %high.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5171
  %16 = load %union.tree_node*, %union.tree_node** %type85, align 8, !dbg !5171
  %int_cst87 = getelementptr inbounds %union.tree_node, %union.tree_node* %high.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5172
  %low88 = bitcast i32* %int_cst87 to i64*, !dbg !5172
  %17 = load i64, i64* %low88, align 8, !dbg !5172
  %high91 = getelementptr inbounds i32, i32* %int_cst87, i64 2, !dbg !5173
  %18 = bitcast i32* %high91 to i64*, !dbg !5173
  %19 = load i64, i64* %18, align 8, !dbg !5173
  %call92 = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %16, i64 %17, i64 %19) #6, !dbg !5174
  %high93 = getelementptr inbounds i8, i8* %call75, i64 32, !dbg !5175
  %20 = bitcast i8* %high93 to %union.tree_node**, !dbg !5175
  store %union.tree_node* %call92, %union.tree_node** %20, align 8, !dbg !5176
  %code_label = getelementptr inbounds i8, i8* %call75, i64 40, !dbg !5177
  %21 = bitcast i8* %code_label to %union.tree_node**, !dbg !5177
  store %union.tree_node* %label, %union.tree_node** %21, align 8, !dbg !5178
  %left = bitcast i8* %call75 to %struct.case_node**, !dbg !5179
  store %struct.case_node* null, %struct.case_node** %left, align 8, !dbg !5180
  %parent = getelementptr inbounds i8, i8* %call75, i64 16, !dbg !5181
  %22 = bitcast i8* %parent to %struct.case_node**, !dbg !5181
  store %struct.case_node* null, %struct.case_node** %22, align 8, !dbg !5182
  %right = getelementptr inbounds i8, i8* %call75, i64 8, !dbg !5183
  %23 = bitcast i8* %right to %struct.case_node**, !dbg !5183
  store %struct.case_node* %head, %struct.case_node** %23, align 8, !dbg !5184
  br label %cleanup, !dbg !5185

cleanup:                                          ; preds = %land.lhs.true38, %land.lhs.true47, %land.lhs.true, %land.lhs.true28, %if.end74
  %retval.0 = phi %struct.case_node* [ %10, %if.end74 ], [ %head, %land.lhs.true28 ], [ %head, %land.lhs.true ], [ %head, %land.lhs.true47 ], [ %head, %land.lhs.true38 ], !dbg !5107
  ret %struct.case_node* %retval.0, !dbg !5186
}

declare dso_local %struct.rtx_def* @get_last_insn() local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @lshift_cheap_p() unnamed_addr #5 !dbg !2044 {
entry:
  %.b = load i1, i1* @lshift_cheap_p.init, align 1, !dbg !5187
  br i1 %.b, label %entry.if.end_crit_edge, label %if.then, !dbg !5188

entry.if.end_crit_edge:                           ; preds = %entry
  %.pre = load i8, i8* @lshift_cheap_p.cheap, align 1, !dbg !5189
  br label %if.end, !dbg !5188

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @word_mode, align 4, !dbg !5190
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 %0, i32 10000) #6, !dbg !5191
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !2048, metadata !DIExpression()), !dbg !5192
  %1 = load i32, i32* @word_mode, align 4, !dbg !5193
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !5193
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 65, i32 %1, %struct.rtx_def* %2, %struct.rtx_def* %call) #6, !dbg !5193
  %call2 = tail call zeroext i8 @optimize_insn_for_speed_p() #6, !dbg !5194
  %call3 = tail call i32 @rtx_cost(%struct.rtx_def* %call1, i32 23, i8 zeroext %call2) #6, !dbg !5195
  call void @llvm.dbg.value(metadata i32 %call3, metadata !2051, metadata !DIExpression()), !dbg !5192
  %cmp = icmp slt i32 %call3, 12, !dbg !5196
  %conv4 = zext i1 %cmp to i8, !dbg !5197
  store i8 %conv4, i8* @lshift_cheap_p.cheap, align 1, !dbg !5198
  store i1 true, i1* @lshift_cheap_p.init, align 1, !dbg !5199
  br label %if.end, !dbg !5200

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %3 = phi i8 [ %.pre, %entry.if.end_crit_edge ], [ %conv4, %if.then ], !dbg !5189
  ret i8 %3, !dbg !5201
}

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_case_bit_tests(%union.tree_node* %index_type, %union.tree_node* %index_expr, %union.tree_node* %minval, %union.tree_node* %range, %struct.case_node* %nodes, %struct.rtx_def* %default_label) unnamed_addr #5 !dbg !5202 {
entry:
  %test = alloca [3 x %struct.case_bit_test], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %index_type, metadata !5207, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata %union.tree_node* %index_expr, metadata !5208, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata %union.tree_node* %minval, metadata !5209, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata %union.tree_node* %range, metadata !5210, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata %struct.case_node* %nodes, metadata !5211, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata %struct.rtx_def* %default_label, metadata !5212, metadata !DIExpression()), !dbg !5225
  %0 = bitcast [3 x %struct.case_bit_test]* %test to i8*, !dbg !5226
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %0) #8, !dbg !5226
  call void @llvm.dbg.declare(metadata [3 x %struct.case_bit_test]* %test, metadata !5213, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 0, metadata !5224, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata %struct.case_node* %nodes, metadata !5223, metadata !DIExpression()), !dbg !5225
  br label %for.cond, !dbg !5228

for.cond:                                         ; preds = %for.inc51, %entry
  %n.0 = phi %struct.case_node* [ %nodes, %entry ], [ %8, %for.inc51 ], !dbg !5230
  %count.0 = phi i32 [ 0, %entry ], [ %count.1, %for.inc51 ], !dbg !5225
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !5224, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata %struct.case_node* %n.0, metadata !5223, metadata !DIExpression()), !dbg !5225
  %tobool = icmp eq %struct.case_node* %n.0, null, !dbg !5231
  br i1 %tobool, label %for.end52, label %for.body, !dbg !5231

for.body:                                         ; preds = %for.cond
  %code_label = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 5, !dbg !5232
  %1 = load %union.tree_node*, %union.tree_node** %code_label, align 8, !dbg !5232
  %call = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %1) #7, !dbg !5235
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5218, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 0, metadata !5219, metadata !DIExpression()), !dbg !5225
  br label %for.cond1, !dbg !5236

for.cond1:                                        ; preds = %for.inc, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ], !dbg !5238
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5219, metadata !DIExpression()), !dbg !5225
  %exitcond2 = icmp eq i32 %i.0, %count.0, !dbg !5239
  br i1 %exitcond2, label %for.end, label %for.body2, !dbg !5241

for.body2:                                        ; preds = %for.cond1
  %idxprom = zext i32 %i.0 to i64, !dbg !5242
  %label3 = getelementptr inbounds [3 x %struct.case_bit_test], [3 x %struct.case_bit_test]* %test, i64 0, i64 %idxprom, i32 2, !dbg !5244
  %2 = load %struct.rtx_def*, %struct.rtx_def** %label3, align 16, !dbg !5244
  %cmp4 = icmp eq %struct.rtx_def* %call, %2, !dbg !5245
  br i1 %cmp4, label %for.end, label %for.inc, !dbg !5246

for.inc:                                          ; preds = %for.body2
  %inc = add i32 %i.0, 1, !dbg !5247
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5219, metadata !DIExpression()), !dbg !5225
  br label %for.cond1, !dbg !5248, !llvm.loop !5249

for.end:                                          ; preds = %for.cond1, %for.body2
  %i.0.lcssa = phi i32 [ %i.0, %for.cond1 ], [ %i.0, %for.body2 ], !dbg !5238
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5219, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5219, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5219, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5219, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5219, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5219, metadata !DIExpression()), !dbg !5225
  %cmp5 = icmp eq i32 %i.0.lcssa, %count.0, !dbg !5251
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !5253

if.then6:                                         ; preds = %for.end
  %cmp7 = icmp ult i32 %count.0, 3, !dbg !5254
  br i1 %cmp7, label %cond.end, label %cond.true, !dbg !5254

cond.true:                                        ; preds = %if.then6
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 2165, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5254
  br label %cond.end, !dbg !5254

cond.end:                                         ; preds = %if.then6, %cond.true
  %idxprom8 = zext i32 %count.0 to i64, !dbg !5256
  %hi10 = getelementptr inbounds [3 x %struct.case_bit_test], [3 x %struct.case_bit_test]* %test, i64 0, i64 %idxprom8, i32 0, !dbg !5257
  store i64 0, i64* %hi10, align 16, !dbg !5258
  %lo13 = getelementptr inbounds [3 x %struct.case_bit_test], [3 x %struct.case_bit_test]* %test, i64 0, i64 %idxprom8, i32 1, !dbg !5259
  store i64 0, i64* %lo13, align 8, !dbg !5260
  %label16 = getelementptr inbounds [3 x %struct.case_bit_test], [3 x %struct.case_bit_test]* %test, i64 0, i64 %idxprom8, i32 2, !dbg !5261
  store %struct.rtx_def* %call, %struct.rtx_def** %label16, align 16, !dbg !5262
  %bits = getelementptr inbounds [3 x %struct.case_bit_test], [3 x %struct.case_bit_test]* %test, i64 0, i64 %idxprom8, i32 3, !dbg !5263
  store i32 1, i32* %bits, align 8, !dbg !5264
  %inc19 = add i32 %count.0, 1, !dbg !5265
  call void @llvm.dbg.value(metadata i32 %inc19, metadata !5224, metadata !DIExpression()), !dbg !5225
  br label %if.end24, !dbg !5266

if.else:                                          ; preds = %for.end
  %idxprom20 = zext i32 %i.0.lcssa to i64, !dbg !5267
  %bits22 = getelementptr inbounds [3 x %struct.case_bit_test], [3 x %struct.case_bit_test]* %test, i64 0, i64 %idxprom20, i32 3, !dbg !5268
  %3 = load i32, i32* %bits22, align 8, !dbg !5269
  %inc23 = add nsw i32 %3, 1, !dbg !5269
  store i32 %inc23, i32* %bits22, align 8, !dbg !5269
  br label %if.end24

if.end24:                                         ; preds = %if.else, %cond.end
  %idxprom43.pre-phi = phi i64 [ %idxprom20, %if.else ], [ %idxprom8, %cond.end ], !dbg !5270
  %count.1 = phi i32 [ %count.0, %if.else ], [ %inc19, %cond.end ], !dbg !5225
  call void @llvm.dbg.value(metadata i32 %count.1, metadata !5224, metadata !DIExpression()), !dbg !5225
  %low = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 3, !dbg !5274
  %4 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !5274
  %call25 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %index_type, %union.tree_node* %4, %union.tree_node* %minval) #6, !dbg !5274
  %call26 = tail call i64 @tree_low_cst(%union.tree_node* %call25, i32 1) #6, !dbg !5275
  %conv = trunc i64 %call26 to i32, !dbg !5275
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5221, metadata !DIExpression()), !dbg !5225
  %high = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 4, !dbg !5276
  %5 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5276
  %call27 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %index_type, %union.tree_node* %5, %union.tree_node* %minval) #6, !dbg !5276
  %call28 = tail call i64 @tree_low_cst(%union.tree_node* %call27, i32 1) #6, !dbg !5277
  %conv29 = trunc i64 %call28 to i32, !dbg !5277
  call void @llvm.dbg.value(metadata i32 %conv29, metadata !5222, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5220, metadata !DIExpression()), !dbg !5225
  %lo45 = getelementptr inbounds [3 x %struct.case_bit_test], [3 x %struct.case_bit_test]* %test, i64 0, i64 %idxprom43.pre-phi, i32 1, !dbg !5270
  %hi39 = getelementptr inbounds [3 x %struct.case_bit_test], [3 x %struct.case_bit_test]* %test, i64 0, i64 %idxprom43.pre-phi, i32 0, !dbg !5270
  br label %for.cond30, !dbg !5278

for.cond30:                                       ; preds = %for.inc48, %if.end24
  %j.0 = phi i32 [ %conv, %if.end24 ], [ %inc49, %for.inc48 ], !dbg !5279
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !5220, metadata !DIExpression()), !dbg !5225
  %cmp31 = icmp ugt i32 %j.0, %conv29, !dbg !5280
  br i1 %cmp31, label %for.inc51, label %for.body33, !dbg !5281

for.body33:                                       ; preds = %for.cond30
  %cmp34 = icmp ugt i32 %j.0, 63, !dbg !5282
  br i1 %cmp34, label %if.then36, label %if.else40, !dbg !5283

if.then36:                                        ; preds = %for.body33
  %sub = add i32 %j.0, -32, !dbg !5284
  %sh_prom = zext i32 %sub to i64, !dbg !5285
  %shl = shl i64 1, %sh_prom, !dbg !5285
  %6 = load i64, i64* %hi39, align 16, !dbg !5286
  %or = or i64 %6, %shl, !dbg !5286
  store i64 %or, i64* %hi39, align 16, !dbg !5286
  br label %for.inc48, !dbg !5287

if.else40:                                        ; preds = %for.body33
  %sh_prom41 = zext i32 %j.0 to i64, !dbg !5288
  %shl42 = shl i64 1, %sh_prom41, !dbg !5288
  %7 = load i64, i64* %lo45, align 8, !dbg !5289
  %or46 = or i64 %7, %shl42, !dbg !5289
  store i64 %or46, i64* %lo45, align 8, !dbg !5289
  br label %for.inc48

for.inc48:                                        ; preds = %if.then36, %if.else40
  %inc49 = add i32 %j.0, 1, !dbg !5290
  call void @llvm.dbg.value(metadata i32 %inc49, metadata !5220, metadata !DIExpression()), !dbg !5225
  br label %for.cond30, !dbg !5291, !llvm.loop !5292

for.inc51:                                        ; preds = %for.cond30
  %right = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 1, !dbg !5294
  %8 = load %struct.case_node*, %struct.case_node** %right, align 8, !dbg !5294
  call void @llvm.dbg.value(metadata %struct.case_node* %8, metadata !5223, metadata !DIExpression()), !dbg !5225
  br label %for.cond, !dbg !5295, !llvm.loop !5296

for.end52:                                        ; preds = %for.cond
  %count.0.lcssa = phi i32 [ %count.0, %for.cond ], !dbg !5225
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5224, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5224, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !5224, metadata !DIExpression()), !dbg !5225
  %conv53 = zext i32 %count.0.lcssa to i64, !dbg !5298
  call void @spec_qsort(i8* nonnull %0, i64 %conv53, i64 32, i32 (i8*, i8*)* nonnull @case_bit_test_cmp) #6, !dbg !5299
  %call54 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %index_type, %union.tree_node* %index_expr) #6, !dbg !5300
  %call55 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %index_type, %union.tree_node* %minval) #6, !dbg !5300
  %call56 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %index_type, %union.tree_node* %call54, %union.tree_node* %call55) #6, !dbg !5300
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !5208, metadata !DIExpression()), !dbg !5225
  %call57 = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %call56) #7, !dbg !5301
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call57, metadata !5217, metadata !DIExpression()), !dbg !5225
  call void @do_pending_stack_adjust() #6, !dbg !5302
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %index_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5303
  %bf.load = load i64, i64* %9, align 8, !dbg !5303
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5303
  %cmp58 = icmp eq i64 %bf.cast1, 14, !dbg !5303
  br i1 %cmp58, label %cond.true60, label %cond.false62, !dbg !5303

cond.true60:                                      ; preds = %for.end52
  %call61 = call i32 @vector_type_mode(%union.tree_node* %index_type) #6, !dbg !5303
  br label %cond.end66, !dbg !5303

cond.false62:                                     ; preds = %for.end52
  %type = bitcast %union.tree_node* %index_type to %struct.tree_type*, !dbg !5303
  %mode63 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !5303
  %bf.load64 = load i32, i32* %mode63, align 4, !dbg !5303
  %bf.lshr = lshr i32 %bf.load64, 16, !dbg !5303
  %bf.clear65 = and i32 %bf.lshr, 255, !dbg !5303
  br label %cond.end66, !dbg !5303

cond.end66:                                       ; preds = %cond.false62, %cond.true60
  %cond67 = phi i32 [ %call61, %cond.true60 ], [ %bf.clear65, %cond.false62 ], !dbg !5303
  call void @llvm.dbg.value(metadata i32 %cond67, metadata !5215, metadata !DIExpression()), !dbg !5225
  %call68 = call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %range) #7, !dbg !5304
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call68, metadata !5216, metadata !DIExpression()), !dbg !5225
  %tobool69 = icmp eq %struct.rtx_def* %default_label, null, !dbg !5305
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !5307

if.then70:                                        ; preds = %cond.end66
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call57, %struct.rtx_def* %call68, i32 87, %struct.rtx_def* null, i32 %cond67, i32 1, %struct.rtx_def* nonnull %default_label) #6, !dbg !5308
  br label %if.end71, !dbg !5308

if.end71:                                         ; preds = %cond.end66, %if.then70
  %10 = load i32, i32* @word_mode, align 4, !dbg !5309
  %call72 = call %struct.rtx_def* @convert_to_mode(i32 %10, %struct.rtx_def* %call57, i32 0) #6, !dbg !5310
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call72, metadata !5217, metadata !DIExpression()), !dbg !5225
  %11 = load i32, i32* @word_mode, align 4, !dbg !5311
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !5312
  %call73 = call %struct.rtx_def* @expand_binop(i32 %11, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 44), %struct.rtx_def* %12, %struct.rtx_def* %call72, %struct.rtx_def* null, i32 1, i32 2) #6, !dbg !5313
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call73, metadata !5217, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 0, metadata !5219, metadata !DIExpression()), !dbg !5225
  %wide.trip.count = zext i32 %count.0.lcssa to i64, !dbg !5314
  br label %for.cond74, !dbg !5317

for.cond74:                                       ; preds = %for.body77, %if.end71
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body77 ], [ 0, %if.end71 ], !dbg !5318
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5219, metadata !DIExpression()), !dbg !5225
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !5314
  br i1 %exitcond, label %for.end91, label %for.body77, !dbg !5319

for.body77:                                       ; preds = %for.cond74
  %lo80 = getelementptr inbounds [3 x %struct.case_bit_test], [3 x %struct.case_bit_test]* %test, i64 0, i64 %indvars.iv, i32 1, !dbg !5320
  %13 = load i64, i64* %lo80, align 8, !dbg !5320
  %hi83 = getelementptr inbounds [3 x %struct.case_bit_test], [3 x %struct.case_bit_test]* %test, i64 0, i64 %indvars.iv, i32 0, !dbg !5322
  %14 = load i64, i64* %hi83, align 16, !dbg !5322
  %15 = load i32, i32* @word_mode, align 4, !dbg !5323
  %call84 = call %struct.rtx_def* @immed_double_const(i64 %13, i64 %14, i32 %15) #6, !dbg !5324
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call84, metadata !5216, metadata !DIExpression()), !dbg !5225
  %16 = load i32, i32* @word_mode, align 4, !dbg !5325
  %call85 = call %struct.rtx_def* @expand_binop(i32 %16, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* %call73, %struct.rtx_def* %call84, %struct.rtx_def* null, i32 1, i32 2) #6, !dbg !5326
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call85, metadata !5216, metadata !DIExpression()), !dbg !5225
  %17 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5327
  %18 = load i32, i32* @word_mode, align 4, !dbg !5328
  %label88 = getelementptr inbounds [3 x %struct.case_bit_test], [3 x %struct.case_bit_test]* %test, i64 0, i64 %indvars.iv, i32 2, !dbg !5329
  %19 = load %struct.rtx_def*, %struct.rtx_def** %label88, align 16, !dbg !5329
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call85, %struct.rtx_def* %17, i32 80, %struct.rtx_def* null, i32 %18, i32 1, %struct.rtx_def* %19) #6, !dbg !5330
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5331
  br label %for.cond74, !dbg !5332, !llvm.loop !5333

for.end91:                                        ; preds = %for.cond74
  br i1 %tobool69, label %if.end94, label %if.then93, !dbg !5335

if.then93:                                        ; preds = %for.end91
  call void @emit_jump(%struct.rtx_def* nonnull %default_label) #7, !dbg !5336
  br label %if.end94, !dbg !5336

if.end94:                                         ; preds = %for.end91, %if.then93
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %0) #8, !dbg !5338
  ret void, !dbg !5338
}

declare dso_local zeroext i8 @optimize_insn_for_size_p() local_unnamed_addr #2

declare dso_local i32 @have_insn_for(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @convert_to_mode(i32, %struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @estimate_case_costs(%struct.case_node* %node) unnamed_addr #5 !dbg !5339 {
entry:
  call void @llvm.dbg.value(metadata %struct.case_node* %node, metadata !5343, metadata !DIExpression()), !dbg !5348
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !5349
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5344, metadata !DIExpression()), !dbg !5348
  %high = getelementptr inbounds %struct.case_node, %struct.case_node* %node, i64 0, i32 4, !dbg !5350
  %1 = bitcast %union.tree_node** %high to %struct.tree_common**, !dbg !5350
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !5350
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !5350
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5350
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* %3, i64 127) #6, !dbg !5351
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5345, metadata !DIExpression()), !dbg !5348
  %.b = load i1, i1* @cost_table_initialized, align 4, !dbg !5352
  br i1 %.b, label %if.end29, label %if.then, !dbg !5354

if.then:                                          ; preds = %entry
  store i1 true, i1* @cost_table_initialized, align 4, !dbg !5355
  call void @llvm.dbg.value(metadata i32 0, metadata !5347, metadata !DIExpression()), !dbg !5348
  br label %for.cond, !dbg !5357

for.cond:                                         ; preds = %for.inc, %if.then
  %i.0 = phi i32 [ 0, %if.then ], [ %inc.pre-phi, %for.inc ], !dbg !5359
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5347, metadata !DIExpression()), !dbg !5348
  %cmp = icmp ult i32 %i.0, 128, !dbg !5360
  br i1 %cmp, label %for.body, label %for.end, !dbg !5362

for.body:                                         ; preds = %for.cond
  %and = and i32 %i.0, 255, !dbg !5363
  %idxprom = zext i32 %and to i64, !dbg !5363
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom, !dbg !5363
  %4 = load i16, i16* %arrayidx, align 2, !dbg !5363
  %5 = and i16 %4, 140, !dbg !5363
  %tobool2 = icmp eq i16 %5, 0, !dbg !5363
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !5366

if.then3:                                         ; preds = %for.body
  %add = add nuw nsw i32 %i.0, 1, !dbg !5367
  %conv4 = zext i32 %add to i64, !dbg !5367
  %arrayidx5 = getelementptr inbounds [129 x i16], [129 x i16]* @cost_table_, i64 0, i64 %conv4, !dbg !5367
  store i16 16, i16* %arrayidx5, align 2, !dbg !5368
  br label %for.inc, !dbg !5367

if.else:                                          ; preds = %for.body
  %6 = and i16 %4, 32, !dbg !5369
  %tobool11 = icmp eq i16 %6, 0, !dbg !5369
  br i1 %tobool11, label %if.else16, label %if.then12, !dbg !5371

if.then12:                                        ; preds = %if.else
  %add13 = add nuw nsw i32 %i.0, 1, !dbg !5372
  %conv14 = zext i32 %add13 to i64, !dbg !5372
  %arrayidx15 = getelementptr inbounds [129 x i16], [129 x i16]* @cost_table_, i64 0, i64 %conv14, !dbg !5372
  store i16 8, i16* %arrayidx15, align 2, !dbg !5373
  br label %for.inc, !dbg !5372

if.else16:                                        ; preds = %if.else
  %7 = and i16 %4, 2, !dbg !5374
  %tobool22 = icmp eq i16 %7, 0, !dbg !5374
  br i1 %tobool22, label %if.else16.for.inc_crit_edge, label %if.then23, !dbg !5376

if.else16.for.inc_crit_edge:                      ; preds = %if.else16
  %.pre = add nuw nsw i32 %i.0, 1, !dbg !5377
  br label %for.inc, !dbg !5376

if.then23:                                        ; preds = %if.else16
  %add24 = add nuw nsw i32 %i.0, 1, !dbg !5378
  %conv25 = zext i32 %add24 to i64, !dbg !5378
  %arrayidx26 = getelementptr inbounds [129 x i16], [129 x i16]* @cost_table_, i64 0, i64 %conv25, !dbg !5378
  store i16 -1, i16* %arrayidx26, align 2, !dbg !5379
  br label %for.inc, !dbg !5378

for.inc:                                          ; preds = %if.else16.for.inc_crit_edge, %if.then3, %if.then23, %if.then12
  %inc.pre-phi = phi i32 [ %.pre, %if.else16.for.inc_crit_edge ], [ %add, %if.then3 ], [ %add24, %if.then23 ], [ %add13, %if.then12 ], !dbg !5377
  call void @llvm.dbg.value(metadata i32 %inc.pre-phi, metadata !5347, metadata !DIExpression()), !dbg !5348
  br label %for.cond, !dbg !5380, !llvm.loop !5381

for.end:                                          ; preds = %for.cond
  store i16 8, i16* getelementptr inbounds ([129 x i16], [129 x i16]* @cost_table_, i64 0, i64 33), align 2, !dbg !5383
  store i16 4, i16* getelementptr inbounds ([129 x i16], [129 x i16]* @cost_table_, i64 0, i64 10), align 4, !dbg !5384
  store i16 4, i16* getelementptr inbounds ([129 x i16], [129 x i16]* @cost_table_, i64 0, i64 1), align 2, !dbg !5385
  store i16 2, i16* getelementptr inbounds ([129 x i16], [129 x i16]* @cost_table_, i64 0, i64 11), align 2, !dbg !5386
  store i16 1, i16* getelementptr inbounds ([129 x i16], [129 x i16]* @cost_table_, i64 0, i64 13), align 2, !dbg !5387
  store i16 1, i16* getelementptr inbounds ([129 x i16], [129 x i16]* @cost_table_, i64 0, i64 12), align 8, !dbg !5388
  store i16 1, i16* getelementptr inbounds ([129 x i16], [129 x i16]* @cost_table_, i64 0, i64 9), align 2, !dbg !5389
  br label %if.end29, !dbg !5390

if.end29:                                         ; preds = %entry, %for.end
  call void @llvm.dbg.value(metadata %struct.case_node* %node, metadata !5346, metadata !DIExpression()), !dbg !5348
  br label %for.cond30, !dbg !5391

for.cond30:                                       ; preds = %for.inc64, %if.end29
  %n.0 = phi %struct.case_node* [ %node, %if.end29 ], [ %18, %for.inc64 ], !dbg !5393
  call void @llvm.dbg.value(metadata %struct.case_node* %n.0, metadata !5346, metadata !DIExpression()), !dbg !5348
  %tobool31 = icmp eq %struct.case_node* %n.0, null, !dbg !5394
  br i1 %tobool31, label %cleanup.loopexit1, label %for.body32, !dbg !5394

for.body32:                                       ; preds = %for.cond30
  %low = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 3, !dbg !5395
  %8 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !5395
  %call33 = tail call i32 @tree_int_cst_lt(%union.tree_node* %8, %union.tree_node* %0) #6, !dbg !5399
  %tobool34 = icmp eq i32 %call33, 0, !dbg !5399
  br i1 %tobool34, label %lor.lhs.false, label %cleanup.loopexit1, !dbg !5400

lor.lhs.false:                                    ; preds = %for.body32
  %high35 = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 4, !dbg !5401
  %9 = load %union.tree_node*, %union.tree_node** %high35, align 8, !dbg !5401
  %call36 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call, %union.tree_node* %9) #6, !dbg !5402
  %tobool37 = icmp eq i32 %call36, 0, !dbg !5402
  br i1 %tobool37, label %if.end39, label %cleanup.loopexit1, !dbg !5403

if.end39:                                         ; preds = %lor.lhs.false
  %10 = bitcast %union.tree_node** %low to %struct.tree_int_cst**, !dbg !5404
  %11 = load %struct.tree_int_cst*, %struct.tree_int_cst** %10, align 8, !dbg !5404
  %low42 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %11, i64 0, i32 1, i32 0, !dbg !5404
  %12 = load i64, i64* %low42, align 8, !dbg !5404
  %13 = bitcast %union.tree_node** %high35 to %struct.tree_int_cst**, !dbg !5406
  %14 = load %struct.tree_int_cst*, %struct.tree_int_cst** %13, align 8, !dbg !5406
  %low49 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %14, i64 0, i32 1, i32 0, !dbg !5406
  %15 = load i64, i64* %low49, align 8, !dbg !5406
  %sext = shl i64 %12, 32, !dbg !5408
  %16 = ashr exact i64 %sext, 32, !dbg !5408
  br label %for.cond44, !dbg !5408

for.cond44:                                       ; preds = %for.inc61, %if.end39
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc61 ], [ %16, %if.end39 ], !dbg !5409
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5347, metadata !DIExpression()), !dbg !5348
  %cmp50 = icmp slt i64 %15, %indvars.iv, !dbg !5410
  br i1 %cmp50, label %for.inc64, label %for.body52, !dbg !5411

for.body52:                                       ; preds = %for.cond44
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !5412
  %arrayidx55 = getelementptr inbounds [129 x i16], [129 x i16]* @cost_table_, i64 0, i64 %indvars.iv.next, !dbg !5412
  %17 = load i16, i16* %arrayidx55, align 2, !dbg !5412
  %cmp57 = icmp slt i16 %17, 0, !dbg !5414
  br i1 %cmp57, label %cleanup.loopexit, label %for.inc61, !dbg !5415

for.inc61:                                        ; preds = %for.body52
  call void @llvm.dbg.value(metadata i32 undef, metadata !5347, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5348
  br label %for.cond44, !dbg !5416, !llvm.loop !5417

for.inc64:                                        ; preds = %for.cond44
  %right = getelementptr inbounds %struct.case_node, %struct.case_node* %n.0, i64 0, i32 1, !dbg !5419
  %18 = load %struct.case_node*, %struct.case_node** %right, align 8, !dbg !5419
  call void @llvm.dbg.value(metadata %struct.case_node* %18, metadata !5346, metadata !DIExpression()), !dbg !5348
  br label %for.cond30, !dbg !5420, !llvm.loop !5421

cleanup.loopexit:                                 ; preds = %for.body52
  br label %cleanup, !dbg !5423

cleanup.loopexit1:                                ; preds = %for.cond30, %for.body32, %lor.lhs.false
  %retval.0.ph = phi i32 [ 1, %for.cond30 ], [ 0, %for.body32 ], [ 0, %lor.lhs.false ]
  br label %cleanup, !dbg !5423

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit
  %retval.0 = phi i32 [ 0, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], !dbg !5348
  ret i32 %retval.0, !dbg !5423
}

; Function Attrs: nounwind uwtable
define internal fastcc void @balance_case_nodes(%struct.case_node** %head, %struct.case_node* %parent) unnamed_addr #5 !dbg !5424 {
entry:
  br label %tailrecurse, !dbg !5444

tailrecurse:                                      ; preds = %if.end93, %entry
  %head.tr = phi %struct.case_node** [ %head, %entry ], [ %right97, %if.end93 ]
  %parent.tr = phi %struct.case_node* [ %parent, %entry ], [ %38, %if.end93 ]
  call void @llvm.dbg.value(metadata %struct.case_node** %head.tr, metadata !5429, metadata !DIExpression()), !dbg !5445
  call void @llvm.dbg.value(metadata %struct.case_node* %parent.tr, metadata !5430, metadata !DIExpression()), !dbg !5445
  %0 = load %struct.case_node*, %struct.case_node** %head.tr, align 8, !dbg !5446
  call void @llvm.dbg.value(metadata %struct.case_node* %0, metadata !5431, metadata !DIExpression()), !dbg !5445
  %tobool = icmp eq %struct.case_node* %0, null, !dbg !5447
  br i1 %tobool, label %cleanup.cont120, label %while.cond.preheader, !dbg !5448

while.cond.preheader:                             ; preds = %tailrecurse
  br label %while.cond, !dbg !5449

while.cond:                                       ; preds = %while.cond.preheader, %if.end21
  %ranges.0 = phi i32 [ %ranges.1, %if.end21 ], [ 0, %while.cond.preheader ], !dbg !5450
  %i.0 = phi i32 [ %inc22, %if.end21 ], [ 0, %while.cond.preheader ], !dbg !5451
  %cost.0 = phi i32 [ %cost.3, %if.end21 ], [ 0, %while.cond.preheader ], !dbg !5451
  %np.0 = phi %struct.case_node* [ %13, %if.end21 ], [ %0, %while.cond.preheader ], !dbg !5445
  call void @llvm.dbg.value(metadata %struct.case_node* %np.0, metadata !5431, metadata !DIExpression()), !dbg !5445
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !5432, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5435, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %ranges.0, metadata !5436, metadata !DIExpression()), !dbg !5451
  %tobool1 = icmp eq %struct.case_node* %np.0, null, !dbg !5449
  br i1 %tobool1, label %while.end, label %while.body, !dbg !5449

while.body:                                       ; preds = %while.cond
  %low = getelementptr inbounds %struct.case_node, %struct.case_node* %np.0, i64 0, i32 3, !dbg !5452
  %1 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !5452
  %high = getelementptr inbounds %struct.case_node, %struct.case_node* %np.0, i64 0, i32 4, !dbg !5455
  %2 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5455
  %call = tail call i32 @tree_int_cst_equal(%union.tree_node* %1, %union.tree_node* %2) #6, !dbg !5456
  %tobool2 = icmp eq i32 %call, 0, !dbg !5456
  br i1 %tobool2, label %if.then3, label %while.body.if.end10_crit_edge, !dbg !5457

while.body.if.end10_crit_edge:                    ; preds = %while.body
  %.pre = load i32, i32* @use_cost_table, align 4, !dbg !5458
  br label %if.end10, !dbg !5457

if.then3:                                         ; preds = %while.body
  %inc = add nsw i32 %ranges.0, 1, !dbg !5460
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5436, metadata !DIExpression()), !dbg !5451
  %3 = load i32, i32* @use_cost_table, align 4, !dbg !5462
  %tobool4 = icmp eq i32 %3, 0, !dbg !5462
  br i1 %tobool4, label %if.end10, label %if.then5, !dbg !5464

if.then5:                                         ; preds = %if.then3
  %4 = bitcast %union.tree_node** %high to %struct.tree_int_cst**, !dbg !5465
  %5 = load %struct.tree_int_cst*, %struct.tree_int_cst** %4, align 8, !dbg !5465
  %low8 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %5, i64 0, i32 1, i32 0, !dbg !5465
  %6 = load i64, i64* %low8, align 8, !dbg !5465
  %add = add i64 %6, 1, !dbg !5465
  %arrayidx = getelementptr inbounds [129 x i16], [129 x i16]* @cost_table_, i64 0, i64 %add, !dbg !5465
  %7 = load i16, i16* %arrayidx, align 2, !dbg !5465
  %conv = sext i16 %7 to i32, !dbg !5465
  %add9 = add nsw i32 %cost.0, %conv, !dbg !5466
  call void @llvm.dbg.value(metadata i32 %add9, metadata !5432, metadata !DIExpression()), !dbg !5451
  br label %if.end10, !dbg !5467

if.end10:                                         ; preds = %while.body.if.end10_crit_edge, %if.then3, %if.then5
  %8 = phi i32 [ %.pre, %while.body.if.end10_crit_edge ], [ %3, %if.then5 ], [ 0, %if.then3 ], !dbg !5458
  %ranges.1 = phi i32 [ %ranges.0, %while.body.if.end10_crit_edge ], [ %inc, %if.then5 ], [ %inc, %if.then3 ], !dbg !5451
  %cost.2 = phi i32 [ %cost.0, %while.body.if.end10_crit_edge ], [ %add9, %if.then5 ], [ %cost.0, %if.then3 ], !dbg !5451
  call void @llvm.dbg.value(metadata i32 %cost.2, metadata !5432, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %ranges.1, metadata !5436, metadata !DIExpression()), !dbg !5451
  %tobool11 = icmp eq i32 %8, 0, !dbg !5458
  br i1 %tobool11, label %if.end21, label %if.then12, !dbg !5468

if.then12:                                        ; preds = %if.end10
  %9 = bitcast %union.tree_node** %low to %struct.tree_int_cst**, !dbg !5469
  %10 = load %struct.tree_int_cst*, %struct.tree_int_cst** %9, align 8, !dbg !5469
  %low16 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %10, i64 0, i32 1, i32 0, !dbg !5469
  %11 = load i64, i64* %low16, align 8, !dbg !5469
  %add17 = add i64 %11, 1, !dbg !5469
  %arrayidx18 = getelementptr inbounds [129 x i16], [129 x i16]* @cost_table_, i64 0, i64 %add17, !dbg !5469
  %12 = load i16, i16* %arrayidx18, align 2, !dbg !5469
  %conv19 = sext i16 %12 to i32, !dbg !5469
  %add20 = add nsw i32 %cost.2, %conv19, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %add20, metadata !5432, metadata !DIExpression()), !dbg !5451
  br label %if.end21, !dbg !5471

if.end21:                                         ; preds = %if.end10, %if.then12
  %cost.3 = phi i32 [ %add20, %if.then12 ], [ %cost.2, %if.end10 ], !dbg !5451
  call void @llvm.dbg.value(metadata i32 %cost.3, metadata !5432, metadata !DIExpression()), !dbg !5451
  %inc22 = add nuw nsw i32 %i.0, 1, !dbg !5472
  call void @llvm.dbg.value(metadata i32 %inc22, metadata !5435, metadata !DIExpression()), !dbg !5451
  %right = getelementptr inbounds %struct.case_node, %struct.case_node* %np.0, i64 0, i32 1, !dbg !5473
  %13 = load %struct.case_node*, %struct.case_node** %right, align 8, !dbg !5473
  call void @llvm.dbg.value(metadata %struct.case_node* %13, metadata !5431, metadata !DIExpression()), !dbg !5445
  br label %while.cond, !dbg !5449, !llvm.loop !5474

while.end:                                        ; preds = %while.cond
  %ranges.0.lcssa = phi i32 [ %ranges.0, %while.cond ], !dbg !5450
  %i.0.lcssa = phi i32 [ %i.0, %while.cond ], !dbg !5451
  %cost.0.lcssa = phi i32 [ %cost.0, %while.cond ], !dbg !5451
  call void @llvm.dbg.value(metadata i32 %ranges.0.lcssa, metadata !5436, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5435, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !5432, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %ranges.0.lcssa, metadata !5436, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5435, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !5432, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %ranges.0.lcssa, metadata !5436, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !5435, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !5432, metadata !DIExpression()), !dbg !5451
  %cmp = icmp ugt i32 %i.0.lcssa, 2, !dbg !5476
  %14 = load %struct.case_node*, %struct.case_node** %head.tr, align 8, !dbg !5477
  br i1 %cmp, label %if.then24, label %if.else98, !dbg !5478

if.then24:                                        ; preds = %while.end
  call void @llvm.dbg.value(metadata %struct.case_node** %head.tr, metadata !5437, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata %struct.case_node* %14, metadata !5438, metadata !DIExpression()), !dbg !5451
  %15 = load i32, i32* @use_cost_table, align 4, !dbg !5479
  %tobool25 = icmp eq i32 %15, 0, !dbg !5479
  br i1 %tobool25, label %if.else, label %if.then26, !dbg !5480

if.then26:                                        ; preds = %if.then24
  call void @llvm.dbg.value(metadata i32 0, metadata !5439, metadata !DIExpression()), !dbg !5481
  %add27 = add nsw i32 %cost.0.lcssa, 1, !dbg !5482
  %div = sdiv i32 %add27, 2, !dbg !5483
  call void @llvm.dbg.value(metadata i32 %div, metadata !5435, metadata !DIExpression()), !dbg !5451
  br label %while.cond28, !dbg !5484

while.cond28:                                     ; preds = %if.end54, %if.then26
  %16 = phi %struct.case_node* [ %14, %if.then26 ], [ %.pre6, %if.end54 ], !dbg !5485
  %npp.0 = phi %struct.case_node** [ %head.tr, %if.then26 ], [ %right55, %if.end54 ], !dbg !5488
  %i.1 = phi i32 [ %div, %if.then26 ], [ %sub50, %if.end54 ], !dbg !5481
  %n_moved.0 = phi i32 [ 0, %if.then26 ], [ %add56, %if.end54 ], !dbg !5481
  call void @llvm.dbg.value(metadata i32 %n_moved.0, metadata !5439, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5435, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata %struct.case_node** %npp.0, metadata !5437, metadata !DIExpression()), !dbg !5451
  %low30 = getelementptr inbounds %struct.case_node, %struct.case_node* %16, i64 0, i32 3, !dbg !5489
  %17 = load %union.tree_node*, %union.tree_node** %low30, align 8, !dbg !5489
  %high31 = getelementptr inbounds %struct.case_node, %struct.case_node* %16, i64 0, i32 4, !dbg !5490
  %18 = load %union.tree_node*, %union.tree_node** %high31, align 8, !dbg !5490
  %call32 = tail call i32 @tree_int_cst_equal(%union.tree_node* %17, %union.tree_node* %18) #6, !dbg !5491
  %tobool33 = icmp eq i32 %call32, 0, !dbg !5491
  br i1 %tobool33, label %if.then34, label %while.cond28.if.end42_crit_edge, !dbg !5492

while.cond28.if.end42_crit_edge:                  ; preds = %while.cond28
  %.pre7 = load %struct.case_node*, %struct.case_node** %npp.0, align 8, !dbg !5493
  br label %if.end42, !dbg !5492

if.then34:                                        ; preds = %while.cond28
  %19 = load %struct.case_node*, %struct.case_node** %npp.0, align 8, !dbg !5494
  %high35 = getelementptr inbounds %struct.case_node, %struct.case_node* %19, i64 0, i32 4, !dbg !5494
  %20 = bitcast %union.tree_node** %high35 to %struct.tree_int_cst**, !dbg !5494
  %21 = load %struct.tree_int_cst*, %struct.tree_int_cst** %20, align 8, !dbg !5494
  %low38 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %21, i64 0, i32 1, i32 0, !dbg !5494
  %22 = load i64, i64* %low38, align 8, !dbg !5494
  %add39 = add i64 %22, 1, !dbg !5494
  %arrayidx40 = getelementptr inbounds [129 x i16], [129 x i16]* @cost_table_, i64 0, i64 %add39, !dbg !5494
  %23 = load i16, i16* %arrayidx40, align 2, !dbg !5494
  %conv41 = sext i16 %23 to i32, !dbg !5494
  %sub = sub nsw i32 %i.1, %conv41, !dbg !5495
  call void @llvm.dbg.value(metadata i32 %sub, metadata !5435, metadata !DIExpression()), !dbg !5451
  br label %if.end42, !dbg !5496

if.end42:                                         ; preds = %while.cond28.if.end42_crit_edge, %if.then34
  %24 = phi %struct.case_node* [ %.pre7, %while.cond28.if.end42_crit_edge ], [ %19, %if.then34 ], !dbg !5493
  %i.2 = phi i32 [ %i.1, %while.cond28.if.end42_crit_edge ], [ %sub, %if.then34 ], !dbg !5481
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !5435, metadata !DIExpression()), !dbg !5451
  %low43 = getelementptr inbounds %struct.case_node, %struct.case_node* %24, i64 0, i32 3, !dbg !5493
  %25 = bitcast %union.tree_node** %low43 to %struct.tree_int_cst**, !dbg !5493
  %26 = load %struct.tree_int_cst*, %struct.tree_int_cst** %25, align 8, !dbg !5493
  %low46 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %26, i64 0, i32 1, i32 0, !dbg !5493
  %27 = load i64, i64* %low46, align 8, !dbg !5493
  %add47 = add i64 %27, 1, !dbg !5493
  %arrayidx48 = getelementptr inbounds [129 x i16], [129 x i16]* @cost_table_, i64 0, i64 %add47, !dbg !5493
  %28 = load i16, i16* %arrayidx48, align 2, !dbg !5493
  %conv49 = sext i16 %28 to i32, !dbg !5493
  %sub50 = sub nsw i32 %i.2, %conv49, !dbg !5497
  call void @llvm.dbg.value(metadata i32 %sub50, metadata !5435, metadata !DIExpression()), !dbg !5451
  %cmp51 = icmp slt i32 %sub50, 1, !dbg !5498
  br i1 %cmp51, label %while.end57, label %if.end54, !dbg !5500

if.end54:                                         ; preds = %if.end42
  %right55 = getelementptr inbounds %struct.case_node, %struct.case_node* %24, i64 0, i32 1, !dbg !5501
  call void @llvm.dbg.value(metadata %struct.case_node** %right55, metadata !5437, metadata !DIExpression()), !dbg !5451
  %add56 = add nuw nsw i32 %n_moved.0, 1, !dbg !5502
  call void @llvm.dbg.value(metadata i32 %add56, metadata !5439, metadata !DIExpression()), !dbg !5481
  %.pre6 = load %struct.case_node*, %struct.case_node** %right55, align 8, !dbg !5485
  br label %while.cond28, !dbg !5484, !llvm.loop !5503

while.end57:                                      ; preds = %if.end42
  %npp.0.lcssa = phi %struct.case_node** [ %npp.0, %if.end42 ], !dbg !5488
  %n_moved.0.lcssa = phi i32 [ %n_moved.0, %if.end42 ], !dbg !5481
  call void @llvm.dbg.value(metadata %struct.case_node** %npp.0.lcssa, metadata !5437, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %n_moved.0.lcssa, metadata !5439, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.case_node** %npp.0.lcssa, metadata !5437, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %n_moved.0.lcssa, metadata !5439, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.case_node** %npp.0.lcssa, metadata !5437, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %n_moved.0.lcssa, metadata !5439, metadata !DIExpression()), !dbg !5481
  %cmp58 = icmp eq i32 %n_moved.0.lcssa, 0, !dbg !5505
  br i1 %cmp58, label %if.then60, label %cleanup, !dbg !5507

if.then60:                                        ; preds = %while.end57
  %29 = load %struct.case_node*, %struct.case_node** %head.tr, align 8, !dbg !5508
  call void @llvm.dbg.value(metadata %struct.case_node* %29, metadata !5431, metadata !DIExpression()), !dbg !5445
  %parent61 = getelementptr inbounds %struct.case_node, %struct.case_node* %29, i64 0, i32 2, !dbg !5510
  store %struct.case_node* %parent.tr, %struct.case_node** %parent61, align 8, !dbg !5511
  %left62 = getelementptr inbounds %struct.case_node, %struct.case_node* %29, i64 0, i32 0, !dbg !5512
  tail call fastcc void @balance_case_nodes(%struct.case_node** %left62, %struct.case_node* %29) #7, !dbg !5513
  br label %for.cond, !dbg !5514

for.cond:                                         ; preds = %for.body, %if.then60
  %np.1 = phi %struct.case_node* [ %29, %if.then60 ], [ %31, %for.body ], !dbg !5515
  call void @llvm.dbg.value(metadata %struct.case_node* %np.1, metadata !5431, metadata !DIExpression()), !dbg !5445
  %right63 = getelementptr inbounds %struct.case_node, %struct.case_node* %np.1, i64 0, i32 1, !dbg !5516
  %30 = load %struct.case_node*, %struct.case_node** %right63, align 8, !dbg !5516
  %tobool64 = icmp eq %struct.case_node* %30, null, !dbg !5519
  br i1 %tobool64, label %cleanup.loopexit, label %for.body, !dbg !5519

for.body:                                         ; preds = %for.cond
  %parent66 = getelementptr inbounds %struct.case_node, %struct.case_node* %30, i64 0, i32 2, !dbg !5520
  store %struct.case_node* %np.1, %struct.case_node** %parent66, align 8, !dbg !5521
  %31 = load %struct.case_node*, %struct.case_node** %right63, align 8, !dbg !5522
  call void @llvm.dbg.value(metadata %struct.case_node* %31, metadata !5431, metadata !DIExpression()), !dbg !5445
  br label %for.cond, !dbg !5523, !llvm.loop !5524

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %while.end57
  %cleanup.dest.slot.0 = phi i1 [ true, %while.end57 ], [ false, %cleanup.loopexit ]
  br i1 %cleanup.dest.slot.0, label %if.end93, label %cleanup110.loopexit2

if.else:                                          ; preds = %if.then24
  %cmp69 = icmp eq i32 %i.0.lcssa, 3, !dbg !5526
  br i1 %cmp69, label %if.then71, label %if.else73, !dbg !5528

if.then71:                                        ; preds = %if.else
  %right72 = getelementptr inbounds %struct.case_node, %struct.case_node* %14, i64 0, i32 1, !dbg !5529
  call void @llvm.dbg.value(metadata %struct.case_node** %right72, metadata !5437, metadata !DIExpression()), !dbg !5451
  br label %if.end93, !dbg !5530

if.else73:                                        ; preds = %if.else
  %add74 = add nsw i32 %i.0.lcssa, %ranges.0.lcssa, !dbg !5531
  %add75 = add nsw i32 %add74, 1, !dbg !5533
  %div76 = sdiv i32 %add75, 2, !dbg !5534
  call void @llvm.dbg.value(metadata i32 %div76, metadata !5435, metadata !DIExpression()), !dbg !5451
  br label %while.cond77, !dbg !5535

while.cond77:                                     ; preds = %if.end89, %if.else73
  %32 = phi %struct.case_node* [ %14, %if.else73 ], [ %.pre8, %if.end89 ], !dbg !5536
  %npp.1 = phi %struct.case_node** [ %head.tr, %if.else73 ], [ %right90, %if.end89 ], !dbg !5488
  %i.3 = phi i32 [ %div76, %if.else73 ], [ %dec85, %if.end89 ], !dbg !5539
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !5435, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata %struct.case_node** %npp.1, metadata !5437, metadata !DIExpression()), !dbg !5451
  %low79 = getelementptr inbounds %struct.case_node, %struct.case_node* %32, i64 0, i32 3, !dbg !5540
  %33 = load %union.tree_node*, %union.tree_node** %low79, align 8, !dbg !5540
  %high80 = getelementptr inbounds %struct.case_node, %struct.case_node* %32, i64 0, i32 4, !dbg !5541
  %34 = load %union.tree_node*, %union.tree_node** %high80, align 8, !dbg !5541
  %call81 = tail call i32 @tree_int_cst_equal(%union.tree_node* %33, %union.tree_node* %34) #6, !dbg !5542
  %tobool82 = icmp eq i32 %call81, 0, !dbg !5542
  %35 = zext i1 %tobool82 to i32, !dbg !5543
  %36 = xor i32 %35, -1, !dbg !5544
  %dec85 = add i32 %i.3, %36, !dbg !5544
  call void @llvm.dbg.value(metadata i32 %dec85, metadata !5435, metadata !DIExpression()), !dbg !5451
  %cmp86 = icmp slt i32 %dec85, 1, !dbg !5545
  br i1 %cmp86, label %if.end93.loopexit, label %if.end89, !dbg !5547

if.end89:                                         ; preds = %while.cond77
  %37 = load %struct.case_node*, %struct.case_node** %npp.1, align 8, !dbg !5548
  %right90 = getelementptr inbounds %struct.case_node, %struct.case_node* %37, i64 0, i32 1, !dbg !5549
  call void @llvm.dbg.value(metadata %struct.case_node** %right90, metadata !5437, metadata !DIExpression()), !dbg !5451
  %.pre8 = load %struct.case_node*, %struct.case_node** %right90, align 8, !dbg !5536
  br label %while.cond77, !dbg !5535, !llvm.loop !5550

if.end93.loopexit:                                ; preds = %while.cond77
  %npp.1.lcssa = phi %struct.case_node** [ %npp.1, %while.cond77 ], !dbg !5488
  call void @llvm.dbg.value(metadata %struct.case_node** %npp.1.lcssa, metadata !5437, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata %struct.case_node** %npp.1.lcssa, metadata !5437, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata %struct.case_node** %npp.1.lcssa, metadata !5437, metadata !DIExpression()), !dbg !5451
  br label %if.end93, !dbg !5552

if.end93:                                         ; preds = %if.end93.loopexit, %if.then71, %cleanup
  %npp.3 = phi %struct.case_node** [ %npp.0.lcssa, %cleanup ], [ %right72, %if.then71 ], [ %npp.1.lcssa, %if.end93.loopexit ], !dbg !5488
  call void @llvm.dbg.value(metadata %struct.case_node** %npp.3, metadata !5437, metadata !DIExpression()), !dbg !5451
  %38 = load %struct.case_node*, %struct.case_node** %npp.3, align 8, !dbg !5552
  call void @llvm.dbg.value(metadata %struct.case_node* %38, metadata !5431, metadata !DIExpression()), !dbg !5445
  store %struct.case_node* %38, %struct.case_node** %head.tr, align 8, !dbg !5553
  store %struct.case_node* null, %struct.case_node** %npp.3, align 8, !dbg !5554
  %parent94 = getelementptr inbounds %struct.case_node, %struct.case_node* %38, i64 0, i32 2, !dbg !5555
  store %struct.case_node* %parent.tr, %struct.case_node** %parent94, align 8, !dbg !5556
  %left95 = getelementptr inbounds %struct.case_node, %struct.case_node* %38, i64 0, i32 0, !dbg !5557
  store %struct.case_node* %14, %struct.case_node** %left95, align 8, !dbg !5558
  tail call fastcc void @balance_case_nodes(%struct.case_node** %left95, %struct.case_node* %38) #7, !dbg !5559
  %right97 = getelementptr inbounds %struct.case_node, %struct.case_node* %38, i64 0, i32 1, !dbg !5560
  br label %tailrecurse, !dbg !5444

if.else98:                                        ; preds = %while.end
  %.lcssa = phi %struct.case_node* [ %14, %while.end ], !dbg !5477
  %parent.tr.lcssa12 = phi %struct.case_node* [ %parent.tr, %while.end ]
  call void @llvm.dbg.value(metadata %struct.case_node* %parent.tr.lcssa12, metadata !5430, metadata !DIExpression()), !dbg !5445
  call void @llvm.dbg.value(metadata %struct.case_node* %parent.tr.lcssa12, metadata !5430, metadata !DIExpression()), !dbg !5445
  call void @llvm.dbg.value(metadata %struct.case_node* %parent.tr.lcssa12, metadata !5430, metadata !DIExpression()), !dbg !5445
  call void @llvm.dbg.value(metadata %struct.case_node* %.lcssa, metadata !5431, metadata !DIExpression()), !dbg !5445
  %parent99 = getelementptr inbounds %struct.case_node, %struct.case_node* %.lcssa, i64 0, i32 2, !dbg !5561
  store %struct.case_node* %parent.tr.lcssa12, %struct.case_node** %parent99, align 8, !dbg !5563
  br label %for.cond100, !dbg !5564

for.cond100:                                      ; preds = %for.body103, %if.else98
  %np.2 = phi %struct.case_node* [ %.lcssa, %if.else98 ], [ %40, %for.body103 ], !dbg !5565
  call void @llvm.dbg.value(metadata %struct.case_node* %np.2, metadata !5431, metadata !DIExpression()), !dbg !5445
  %right101 = getelementptr inbounds %struct.case_node, %struct.case_node* %np.2, i64 0, i32 1, !dbg !5566
  %39 = load %struct.case_node*, %struct.case_node** %right101, align 8, !dbg !5566
  %tobool102 = icmp eq %struct.case_node* %39, null, !dbg !5569
  br i1 %tobool102, label %cleanup110.loopexit, label %for.body103, !dbg !5569

for.body103:                                      ; preds = %for.cond100
  %parent105 = getelementptr inbounds %struct.case_node, %struct.case_node* %39, i64 0, i32 2, !dbg !5570
  store %struct.case_node* %np.2, %struct.case_node** %parent105, align 8, !dbg !5571
  %40 = load %struct.case_node*, %struct.case_node** %right101, align 8, !dbg !5572
  call void @llvm.dbg.value(metadata %struct.case_node* %40, metadata !5431, metadata !DIExpression()), !dbg !5445
  br label %for.cond100, !dbg !5573, !llvm.loop !5574

cleanup110.loopexit:                              ; preds = %for.cond100
  br label %cleanup110

cleanup110.loopexit2:                             ; preds = %cleanup
  br label %cleanup110

cleanup110:                                       ; preds = %cleanup110.loopexit2, %cleanup110.loopexit
  ret void

cleanup.cont120:                                  ; preds = %tailrecurse
  ret void, !dbg !5576
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_case_nodes(%struct.rtx_def* %index, %struct.case_node* %node, %struct.rtx_def* %default_label, %union.tree_node* %index_type) unnamed_addr #5 !dbg !5577 {
entry:
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %index_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5617
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %index, i64 0, i32 0, !dbg !5617
  %type = bitcast %union.tree_node* %index_type to %struct.tree_type*, !dbg !5617
  %mode8 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !5617
  %tobool104 = icmp eq %struct.rtx_def* %default_label, null, !dbg !5618
  br label %tailrecurse, !dbg !5620

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %node.tr = phi %struct.case_node* [ %node, %entry ], [ %node.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %index, metadata !5581, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %struct.case_node* %node.tr, metadata !5582, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %struct.rtx_def* %default_label, metadata !5583, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %union.tree_node* %index_type, metadata !5584, metadata !DIExpression()), !dbg !5617
  %bf.load = load i64, i64* %0, align 8, !dbg !5623
  %bf.lshr = lshr i64 %bf.load, 21, !dbg !5623
  %2 = trunc i64 %bf.lshr to i32, !dbg !5623
  %bf.cast = and i32 %2, 1, !dbg !5623
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5585, metadata !DIExpression()), !dbg !5617
  %bf.load1 = load i32, i32* %1, align 8, !dbg !5624
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !5624
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !5624
  call void @llvm.dbg.value(metadata i32 %bf.clear3, metadata !5586, metadata !DIExpression()), !dbg !5617
  %bf.cast73 = and i64 %bf.load, 65535, !dbg !5625
  %cmp = icmp eq i64 %bf.cast73, 14, !dbg !5625
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5625

cond.true:                                        ; preds = %tailrecurse
  %call = tail call i32 @vector_type_mode(%union.tree_node* %index_type) #6, !dbg !5625
  br label %cond.end, !dbg !5625

cond.false:                                       ; preds = %tailrecurse
  %bf.load9 = load i32, i32* %mode8, align 4, !dbg !5625
  %bf.lshr10 = lshr i32 %bf.load9, 16, !dbg !5625
  %bf.clear11 = and i32 %bf.lshr10, 255, !dbg !5625
  br label %cond.end, !dbg !5625

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear11, %cond.false ], !dbg !5625
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5587, metadata !DIExpression()), !dbg !5617
  %cmp12 = icmp eq i32 %bf.clear3, 0, !dbg !5626
  %spec.select = select i1 %cmp12, i32 %cond, i32 %bf.clear3, !dbg !5628
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5586, metadata !DIExpression()), !dbg !5617
  %call13 = tail call fastcc i32 @node_is_bounded(%struct.case_node* %node.tr, %union.tree_node* %index_type) #7, !dbg !5629
  %tobool = icmp eq i32 %call13, 0, !dbg !5629
  br i1 %tobool, label %if.else, label %if.then14, !dbg !5630

if.then14:                                        ; preds = %cond.end
  %node.tr.lcssa = phi %struct.case_node* [ %node.tr, %cond.end ]
  call void @llvm.dbg.value(metadata %struct.case_node* %node.tr.lcssa, metadata !5582, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %struct.case_node* %node.tr.lcssa, metadata !5582, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %struct.case_node* %node.tr.lcssa, metadata !5582, metadata !DIExpression()), !dbg !5617
  %code_label = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr.lcssa, i64 0, i32 5, !dbg !5631
  %3 = load %union.tree_node*, %union.tree_node** %code_label, align 8, !dbg !5631
  %call15 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %3) #7, !dbg !5632
  tail call void @emit_jump(%struct.rtx_def* %call15) #7, !dbg !5633
  br label %if.end315, !dbg !5633

if.else:                                          ; preds = %cond.end
  %low = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 3, !dbg !5634
  %4 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !5634
  %high = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 4, !dbg !5635
  %5 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5635
  %call16 = tail call i32 @tree_int_cst_equal(%union.tree_node* %4, %union.tree_node* %5) #6, !dbg !5636
  %tobool17 = icmp eq i32 %call16, 0, !dbg !5636
  br i1 %tobool17, label %if.else191, label %if.then18, !dbg !5637

if.then18:                                        ; preds = %if.else
  %6 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !5638
  %call20 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %6) #7, !dbg !5639
  %call21 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call20, i32 %bf.cast) #6, !dbg !5640
  %code_label22 = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 5, !dbg !5641
  %7 = load %union.tree_node*, %union.tree_node** %code_label22, align 8, !dbg !5641
  %call23 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %7) #7, !dbg !5642
  tail call fastcc void @do_jump_if_equal(i32 %spec.select, %struct.rtx_def* %index, %struct.rtx_def* %call21, %struct.rtx_def* %call23, i32 %bf.cast) #7, !dbg !5643
  %right = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 1, !dbg !5644
  %8 = load %struct.case_node*, %struct.case_node** %right, align 8, !dbg !5644
  %cmp24 = icmp eq %struct.case_node* %8, null, !dbg !5645
  br i1 %cmp24, label %if.else111, label %land.lhs.true, !dbg !5646

land.lhs.true:                                    ; preds = %if.then18
  %left = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 0, !dbg !5647
  %9 = load %struct.case_node*, %struct.case_node** %left, align 8, !dbg !5647
  %cmp25 = icmp eq %struct.case_node* %9, null, !dbg !5648
  br i1 %cmp25, label %if.else111, label %if.then26, !dbg !5649

if.then26:                                        ; preds = %land.lhs.true
  %call28 = tail call fastcc i32 @node_is_bounded(%struct.case_node* nonnull %8, %union.tree_node* %index_type) #7, !dbg !5650
  %tobool29 = icmp eq i32 %call28, 0, !dbg !5650
  br i1 %tobool29, label %if.else38, label %if.then30, !dbg !5651

if.then30:                                        ; preds = %if.then26
  %10 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5652
  %call32 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %10) #7, !dbg !5654
  %call33 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call32, i32 %bf.cast) #6, !dbg !5655
  %11 = load %struct.case_node*, %struct.case_node** %right, align 8, !dbg !5656
  %code_label35 = getelementptr inbounds %struct.case_node, %struct.case_node* %11, i64 0, i32 5, !dbg !5657
  %12 = load %union.tree_node*, %union.tree_node** %code_label35, align 8, !dbg !5657
  %call36 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %12) #7, !dbg !5658
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call33, i32 83, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %call36) #6, !dbg !5659
  br label %tailrecurse.backedge, !dbg !5660

if.else38:                                        ; preds = %if.then26
  %13 = load %struct.case_node*, %struct.case_node** %left, align 8, !dbg !5661
  %call40 = tail call fastcc i32 @node_is_bounded(%struct.case_node* %13, %union.tree_node* %index_type) #7, !dbg !5662
  %tobool41 = icmp eq i32 %call40, 0, !dbg !5662
  br i1 %tobool41, label %if.else50, label %if.then42, !dbg !5663

if.then42:                                        ; preds = %if.else38
  %14 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5664
  %call44 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %14) #7, !dbg !5666
  %call45 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call44, i32 %bf.cast) #6, !dbg !5667
  %15 = load %struct.case_node*, %struct.case_node** %left, align 8, !dbg !5668
  %code_label47 = getelementptr inbounds %struct.case_node, %struct.case_node* %15, i64 0, i32 5, !dbg !5669
  %16 = load %union.tree_node*, %union.tree_node** %code_label47, align 8, !dbg !5669
  %call48 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %16) #7, !dbg !5670
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call45, i32 85, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %call48) #6, !dbg !5671
  br label %tailrecurse.backedge, !dbg !5672

if.else50:                                        ; preds = %if.else38
  %17 = load %struct.case_node*, %struct.case_node** %right, align 8, !dbg !5673
  %low52 = getelementptr inbounds %struct.case_node, %struct.case_node* %17, i64 0, i32 3, !dbg !5674
  %18 = load %union.tree_node*, %union.tree_node** %low52, align 8, !dbg !5674
  %high54 = getelementptr inbounds %struct.case_node, %struct.case_node* %17, i64 0, i32 4, !dbg !5675
  %19 = load %union.tree_node*, %union.tree_node** %high54, align 8, !dbg !5675
  %call55 = tail call i32 @tree_int_cst_equal(%union.tree_node* %18, %union.tree_node* %19) #6, !dbg !5676
  %tobool56 = icmp eq i32 %call55, 0, !dbg !5676
  br i1 %tobool56, label %if.else95, label %land.lhs.true57, !dbg !5677

land.lhs.true57:                                  ; preds = %if.else50
  %20 = load %struct.case_node*, %struct.case_node** %right, align 8, !dbg !5678
  %left59 = getelementptr inbounds %struct.case_node, %struct.case_node* %20, i64 0, i32 0, !dbg !5679
  %21 = load %struct.case_node*, %struct.case_node** %left59, align 8, !dbg !5679
  %cmp60 = icmp eq %struct.case_node* %21, null, !dbg !5680
  br i1 %cmp60, label %land.lhs.true61, label %if.else95, !dbg !5681

land.lhs.true61:                                  ; preds = %land.lhs.true57
  %right63 = getelementptr inbounds %struct.case_node, %struct.case_node* %20, i64 0, i32 1, !dbg !5682
  %22 = load %struct.case_node*, %struct.case_node** %right63, align 8, !dbg !5682
  %cmp64 = icmp eq %struct.case_node* %22, null, !dbg !5683
  br i1 %cmp64, label %land.lhs.true65, label %if.else95, !dbg !5684

land.lhs.true65:                                  ; preds = %land.lhs.true61
  %23 = load %struct.case_node*, %struct.case_node** %left, align 8, !dbg !5685
  %low67 = getelementptr inbounds %struct.case_node, %struct.case_node* %23, i64 0, i32 3, !dbg !5686
  %24 = load %union.tree_node*, %union.tree_node** %low67, align 8, !dbg !5686
  %high69 = getelementptr inbounds %struct.case_node, %struct.case_node* %23, i64 0, i32 4, !dbg !5687
  %25 = load %union.tree_node*, %union.tree_node** %high69, align 8, !dbg !5687
  %call70 = tail call i32 @tree_int_cst_equal(%union.tree_node* %24, %union.tree_node* %25) #6, !dbg !5688
  %tobool71 = icmp eq i32 %call70, 0, !dbg !5688
  br i1 %tobool71, label %if.else95, label %land.lhs.true72, !dbg !5689

land.lhs.true72:                                  ; preds = %land.lhs.true65
  %26 = load %struct.case_node*, %struct.case_node** %left, align 8, !dbg !5690
  %left74 = getelementptr inbounds %struct.case_node, %struct.case_node* %26, i64 0, i32 0, !dbg !5691
  %27 = load %struct.case_node*, %struct.case_node** %left74, align 8, !dbg !5691
  %cmp75 = icmp eq %struct.case_node* %27, null, !dbg !5692
  br i1 %cmp75, label %land.lhs.true76, label %if.else95, !dbg !5693

land.lhs.true76:                                  ; preds = %land.lhs.true72
  %right78 = getelementptr inbounds %struct.case_node, %struct.case_node* %26, i64 0, i32 1, !dbg !5694
  %28 = load %struct.case_node*, %struct.case_node** %right78, align 8, !dbg !5694
  %cmp79 = icmp eq %struct.case_node* %28, null, !dbg !5695
  br i1 %cmp79, label %if.then80, label %if.else95, !dbg !5696

if.then80:                                        ; preds = %land.lhs.true76
  %cond.lcssa71 = phi i32 [ %cond, %land.lhs.true76 ], !dbg !5625
  %spec.select.lcssa66 = phi i32 [ %spec.select, %land.lhs.true76 ], !dbg !5628
  %bf.cast.lcssa56 = phi i32 [ %bf.cast, %land.lhs.true76 ], !dbg !5623
  %right.lcssa = phi %struct.case_node** [ %right, %land.lhs.true76 ], !dbg !5644
  %left.lcssa = phi %struct.case_node** [ %left, %land.lhs.true76 ], !dbg !5647
  call void @llvm.dbg.value(metadata i32 %cond.lcssa71, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %cond.lcssa71, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %cond.lcssa71, metadata !5587, metadata !DIExpression()), !dbg !5617
  %29 = load %struct.case_node*, %struct.case_node** %right.lcssa, align 8, !dbg !5697
  %low82 = getelementptr inbounds %struct.case_node, %struct.case_node* %29, i64 0, i32 3, !dbg !5699
  %30 = load %union.tree_node*, %union.tree_node** %low82, align 8, !dbg !5699
  %call83 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %30) #7, !dbg !5700
  %call84 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select.lcssa66, i32 %cond.lcssa71, %struct.rtx_def* %call83, i32 %bf.cast.lcssa56) #6, !dbg !5701
  %31 = load %struct.case_node*, %struct.case_node** %right.lcssa, align 8, !dbg !5702
  %code_label86 = getelementptr inbounds %struct.case_node, %struct.case_node* %31, i64 0, i32 5, !dbg !5703
  %32 = load %union.tree_node*, %union.tree_node** %code_label86, align 8, !dbg !5703
  %call87 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %32) #7, !dbg !5704
  tail call fastcc void @do_jump_if_equal(i32 %spec.select.lcssa66, %struct.rtx_def* %index, %struct.rtx_def* %call84, %struct.rtx_def* %call87, i32 %bf.cast.lcssa56) #7, !dbg !5705
  %33 = load %struct.case_node*, %struct.case_node** %left.lcssa, align 8, !dbg !5706
  %low89 = getelementptr inbounds %struct.case_node, %struct.case_node* %33, i64 0, i32 3, !dbg !5707
  %34 = load %union.tree_node*, %union.tree_node** %low89, align 8, !dbg !5707
  %call90 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %34) #7, !dbg !5708
  %call91 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select.lcssa66, i32 %cond.lcssa71, %struct.rtx_def* %call90, i32 %bf.cast.lcssa56) #6, !dbg !5709
  %35 = load %struct.case_node*, %struct.case_node** %left.lcssa, align 8, !dbg !5710
  %code_label93 = getelementptr inbounds %struct.case_node, %struct.case_node* %35, i64 0, i32 5, !dbg !5711
  %36 = load %union.tree_node*, %union.tree_node** %code_label93, align 8, !dbg !5711
  %call94 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %36) #7, !dbg !5712
  tail call fastcc void @do_jump_if_equal(i32 %spec.select.lcssa66, %struct.rtx_def* %index, %struct.rtx_def* %call91, %struct.rtx_def* %call94, i32 %bf.cast.lcssa56) #7, !dbg !5713
  br label %if.end315, !dbg !5714

if.else95:                                        ; preds = %land.lhs.true65, %if.else50, %land.lhs.true76, %land.lhs.true72, %land.lhs.true61, %land.lhs.true57
  %call96 = tail call i32 @curr_insn_locator() #6, !dbg !5715
  %call97 = tail call i32 @locator_location(i32 %call96) #6, !dbg !5715
  %call98 = tail call %union.tree_node* @build_decl_stat(i32 %call97, i32 30, %union.tree_node* null, %union.tree_node* null) #6, !dbg !5715
  call void @llvm.dbg.value(metadata %union.tree_node* %call98, metadata !5588, metadata !DIExpression()), !dbg !5716
  %37 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5717
  %call100 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %37) #7, !dbg !5718
  %call101 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call100, i32 %bf.cast) #6, !dbg !5719
  %call102 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %call98) #7, !dbg !5720
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call101, i32 83, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %call102) #6, !dbg !5721
  %38 = load %struct.case_node*, %struct.case_node** %left, align 8, !dbg !5722
  tail call fastcc void @emit_case_nodes(%struct.rtx_def* %index, %struct.case_node* %38, %struct.rtx_def* %default_label, %union.tree_node* %index_type) #7, !dbg !5723
  br i1 %tobool104, label %if.end106, label %if.then105, !dbg !5724

if.then105:                                       ; preds = %if.else95
  tail call void @emit_jump(%struct.rtx_def* nonnull %default_label) #7, !dbg !5725
  br label %if.end106, !dbg !5725

if.end106:                                        ; preds = %if.else95, %if.then105
  tail call void @expand_label(%union.tree_node* %call98) #7, !dbg !5726
  br label %tailrecurse.backedge, !dbg !5727

if.else111:                                       ; preds = %land.lhs.true, %if.then18
  br i1 %cmp24, label %if.else149, label %land.lhs.true114, !dbg !5728

land.lhs.true114:                                 ; preds = %if.else111
  %left115 = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 0, !dbg !5730
  %39 = load %struct.case_node*, %struct.case_node** %left115, align 8, !dbg !5730
  %cmp116 = icmp eq %struct.case_node* %39, null, !dbg !5731
  br i1 %cmp116, label %if.then117, label %if.else149, !dbg !5732

if.then117:                                       ; preds = %land.lhs.true114
  %right119 = getelementptr inbounds %struct.case_node, %struct.case_node* %8, i64 0, i32 1, !dbg !5733
  %40 = load %struct.case_node*, %struct.case_node** %right119, align 8, !dbg !5733
  %tobool120 = icmp eq %struct.case_node* %40, null, !dbg !5736
  br i1 %tobool120, label %lor.lhs.false, label %if.then131, !dbg !5737

lor.lhs.false:                                    ; preds = %if.then117
  %left122 = getelementptr inbounds %struct.case_node, %struct.case_node* %8, i64 0, i32 0, !dbg !5738
  %41 = load %struct.case_node*, %struct.case_node** %left122, align 8, !dbg !5738
  %tobool123 = icmp eq %struct.case_node* %41, null, !dbg !5739
  br i1 %tobool123, label %lor.lhs.false124, label %if.then131, !dbg !5740

lor.lhs.false124:                                 ; preds = %lor.lhs.false
  %low126 = getelementptr inbounds %struct.case_node, %struct.case_node* %8, i64 0, i32 3, !dbg !5741
  %42 = load %union.tree_node*, %union.tree_node** %low126, align 8, !dbg !5741
  %high128 = getelementptr inbounds %struct.case_node, %struct.case_node* %8, i64 0, i32 4, !dbg !5742
  %43 = load %union.tree_node*, %union.tree_node** %high128, align 8, !dbg !5742
  %call129 = tail call i32 @tree_int_cst_equal(%union.tree_node* %42, %union.tree_node* %43) #6, !dbg !5743
  %tobool130 = icmp eq i32 %call129, 0, !dbg !5743
  br i1 %tobool130, label %if.then131, label %if.else140, !dbg !5744

if.then131:                                       ; preds = %lor.lhs.false124, %lor.lhs.false, %if.then117
  %call132 = tail call fastcc i32 @node_has_low_bound(%struct.case_node* %node.tr, %union.tree_node* %index_type) #7, !dbg !5745
  %tobool133 = icmp eq i32 %call132, 0, !dbg !5745
  br i1 %tobool133, label %if.then134, label %if.end138, !dbg !5748

if.then134:                                       ; preds = %if.then131
  %44 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5749
  %call136 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %44) #7, !dbg !5751
  %call137 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call136, i32 %bf.cast) #6, !dbg !5752
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call137, i32 85, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %default_label) #6, !dbg !5753
  br label %if.end138, !dbg !5754

if.end138:                                        ; preds = %if.then131, %if.then134
  br label %tailrecurse.backedge, !dbg !5755

if.else140:                                       ; preds = %lor.lhs.false124
  %cond.lcssa72 = phi i32 [ %cond, %lor.lhs.false124 ], !dbg !5625
  %spec.select.lcssa67 = phi i32 [ %spec.select, %lor.lhs.false124 ], !dbg !5628
  %bf.cast.lcssa57 = phi i32 [ %bf.cast, %lor.lhs.false124 ], !dbg !5623
  %right.lcssa54 = phi %struct.case_node** [ %right, %lor.lhs.false124 ], !dbg !5644
  call void @llvm.dbg.value(metadata i32 %cond.lcssa72, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %cond.lcssa72, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %cond.lcssa72, metadata !5587, metadata !DIExpression()), !dbg !5617
  %45 = load %struct.case_node*, %struct.case_node** %right.lcssa54, align 8, !dbg !5756
  %low142 = getelementptr inbounds %struct.case_node, %struct.case_node* %45, i64 0, i32 3, !dbg !5757
  %46 = load %union.tree_node*, %union.tree_node** %low142, align 8, !dbg !5757
  %call143 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %46) #7, !dbg !5758
  %call144 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select.lcssa67, i32 %cond.lcssa72, %struct.rtx_def* %call143, i32 %bf.cast.lcssa57) #6, !dbg !5759
  %47 = load %struct.case_node*, %struct.case_node** %right.lcssa54, align 8, !dbg !5760
  %code_label146 = getelementptr inbounds %struct.case_node, %struct.case_node* %47, i64 0, i32 5, !dbg !5761
  %48 = load %union.tree_node*, %union.tree_node** %code_label146, align 8, !dbg !5761
  %call147 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %48) #7, !dbg !5762
  tail call fastcc void @do_jump_if_equal(i32 %spec.select.lcssa67, %struct.rtx_def* %index, %struct.rtx_def* %call144, %struct.rtx_def* %call147, i32 %bf.cast.lcssa57) #7, !dbg !5763
  br label %if.end315

if.else149:                                       ; preds = %if.else111, %land.lhs.true114
  br i1 %cmp24, label %land.lhs.true152, label %if.end315.loopexit, !dbg !5764

land.lhs.true152:                                 ; preds = %if.else149
  %left153 = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 0, !dbg !5766
  %49 = load %struct.case_node*, %struct.case_node** %left153, align 8, !dbg !5766
  %cmp154 = icmp eq %struct.case_node* %49, null, !dbg !5767
  br i1 %cmp154, label %if.end315.loopexit, label %if.then155, !dbg !5768

if.then155:                                       ; preds = %land.lhs.true152
  %left157 = getelementptr inbounds %struct.case_node, %struct.case_node* %49, i64 0, i32 0, !dbg !5769
  %50 = load %struct.case_node*, %struct.case_node** %left157, align 8, !dbg !5769
  %tobool158 = icmp eq %struct.case_node* %50, null, !dbg !5772
  br i1 %tobool158, label %lor.lhs.false159, label %if.then170, !dbg !5773

lor.lhs.false159:                                 ; preds = %if.then155
  %right161 = getelementptr inbounds %struct.case_node, %struct.case_node* %49, i64 0, i32 1, !dbg !5774
  %51 = load %struct.case_node*, %struct.case_node** %right161, align 8, !dbg !5774
  %tobool162 = icmp eq %struct.case_node* %51, null, !dbg !5775
  br i1 %tobool162, label %lor.lhs.false163, label %if.then170, !dbg !5776

lor.lhs.false163:                                 ; preds = %lor.lhs.false159
  %low165 = getelementptr inbounds %struct.case_node, %struct.case_node* %49, i64 0, i32 3, !dbg !5777
  %52 = load %union.tree_node*, %union.tree_node** %low165, align 8, !dbg !5777
  %high167 = getelementptr inbounds %struct.case_node, %struct.case_node* %49, i64 0, i32 4, !dbg !5778
  %53 = load %union.tree_node*, %union.tree_node** %high167, align 8, !dbg !5778
  %call168 = tail call i32 @tree_int_cst_equal(%union.tree_node* %52, %union.tree_node* %53) #6, !dbg !5779
  %tobool169 = icmp eq i32 %call168, 0, !dbg !5779
  br i1 %tobool169, label %if.then170, label %if.else179, !dbg !5780

if.then170:                                       ; preds = %lor.lhs.false163, %lor.lhs.false159, %if.then155
  %call171 = tail call fastcc i32 @node_has_high_bound(%struct.case_node* %node.tr, %union.tree_node* %index_type) #7, !dbg !5781
  %tobool172 = icmp eq i32 %call171, 0, !dbg !5781
  br i1 %tobool172, label %if.then173, label %if.end177, !dbg !5784

if.then173:                                       ; preds = %if.then170
  %54 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5785
  %call175 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %54) #7, !dbg !5787
  %call176 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call175, i32 %bf.cast) #6, !dbg !5788
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call176, i32 83, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %default_label) #6, !dbg !5789
  br label %if.end177, !dbg !5790

if.end177:                                        ; preds = %if.then170, %if.then173
  br label %tailrecurse.backedge, !dbg !5791

if.else179:                                       ; preds = %lor.lhs.false163
  %cond.lcssa74 = phi i32 [ %cond, %lor.lhs.false163 ], !dbg !5625
  %spec.select.lcssa69 = phi i32 [ %spec.select, %lor.lhs.false163 ], !dbg !5628
  %bf.cast.lcssa59 = phi i32 [ %bf.cast, %lor.lhs.false163 ], !dbg !5623
  %left153.lcssa = phi %struct.case_node** [ %left153, %lor.lhs.false163 ], !dbg !5766
  call void @llvm.dbg.value(metadata i32 %cond.lcssa74, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %cond.lcssa74, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %cond.lcssa74, metadata !5587, metadata !DIExpression()), !dbg !5617
  %55 = load %struct.case_node*, %struct.case_node** %left153.lcssa, align 8, !dbg !5792
  %low181 = getelementptr inbounds %struct.case_node, %struct.case_node* %55, i64 0, i32 3, !dbg !5793
  %56 = load %union.tree_node*, %union.tree_node** %low181, align 8, !dbg !5793
  %call182 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %56) #7, !dbg !5794
  %call183 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select.lcssa69, i32 %cond.lcssa74, %struct.rtx_def* %call182, i32 %bf.cast.lcssa59) #6, !dbg !5795
  %57 = load %struct.case_node*, %struct.case_node** %left153.lcssa, align 8, !dbg !5796
  %code_label185 = getelementptr inbounds %struct.case_node, %struct.case_node* %57, i64 0, i32 5, !dbg !5797
  %58 = load %union.tree_node*, %union.tree_node** %code_label185, align 8, !dbg !5797
  %call186 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %58) #7, !dbg !5798
  tail call fastcc void @do_jump_if_equal(i32 %spec.select.lcssa69, %struct.rtx_def* %index, %struct.rtx_def* %call183, %struct.rtx_def* %call186, i32 %bf.cast.lcssa59) #7, !dbg !5799
  br label %if.end315

if.else191:                                       ; preds = %if.else
  %right192 = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 1, !dbg !5800
  %59 = load %struct.case_node*, %struct.case_node** %right192, align 8, !dbg !5800
  %cmp193 = icmp eq %struct.case_node* %59, null, !dbg !5801
  br i1 %cmp193, label %if.else231, label %land.lhs.true194, !dbg !5802

land.lhs.true194:                                 ; preds = %if.else191
  %left195 = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 0, !dbg !5803
  %60 = load %struct.case_node*, %struct.case_node** %left195, align 8, !dbg !5803
  %cmp196 = icmp eq %struct.case_node* %60, null, !dbg !5804
  br i1 %cmp196, label %if.else231, label %if.then197, !dbg !5805

if.then197:                                       ; preds = %land.lhs.true194
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5598, metadata !DIExpression()), !dbg !5806
  %call200 = tail call fastcc i32 @node_is_bounded(%struct.case_node* nonnull %59, %union.tree_node* %index_type) #7, !dbg !5807
  %tobool201 = icmp eq i32 %call200, 0, !dbg !5807
  br i1 %tobool201, label %if.else209, label %if.then202, !dbg !5809

if.then202:                                       ; preds = %if.then197
  %61 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5810
  %call204 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %61) #7, !dbg !5811
  %call205 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call204, i32 %bf.cast) #6, !dbg !5812
  %62 = load %struct.case_node*, %struct.case_node** %right192, align 8, !dbg !5813
  %code_label207 = getelementptr inbounds %struct.case_node, %struct.case_node* %62, i64 0, i32 5, !dbg !5814
  %63 = load %union.tree_node*, %union.tree_node** %code_label207, align 8, !dbg !5814
  %call208 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %63) #7, !dbg !5815
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call205, i32 83, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %call208) #6, !dbg !5816
  br label %if.end217, !dbg !5816

if.else209:                                       ; preds = %if.then197
  %call210 = tail call i32 @curr_insn_locator() #6, !dbg !5817
  %call211 = tail call i32 @locator_location(i32 %call210) #6, !dbg !5817
  %call212 = tail call %union.tree_node* @build_decl_stat(i32 %call211, i32 30, %union.tree_node* null, %union.tree_node* null) #6, !dbg !5817
  call void @llvm.dbg.value(metadata %union.tree_node* %call212, metadata !5598, metadata !DIExpression()), !dbg !5806
  %64 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5819
  %call214 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %64) #7, !dbg !5820
  %call215 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call214, i32 %bf.cast) #6, !dbg !5821
  %call216 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %call212) #7, !dbg !5822
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call215, i32 83, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %call216) #6, !dbg !5823
  br label %if.end217

if.end217:                                        ; preds = %if.else209, %if.then202
  %test_label198.0 = phi %union.tree_node* [ null, %if.then202 ], [ %call212, %if.else209 ], !dbg !5806
  call void @llvm.dbg.value(metadata %union.tree_node* %test_label198.0, metadata !5598, metadata !DIExpression()), !dbg !5806
  %65 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !5824
  %call219 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %65) #7, !dbg !5825
  %call220 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call219, i32 %bf.cast) #6, !dbg !5826
  %code_label221 = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 5, !dbg !5827
  %66 = load %union.tree_node*, %union.tree_node** %code_label221, align 8, !dbg !5827
  %call222 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %66) #7, !dbg !5828
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call220, i32 82, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %call222) #6, !dbg !5829
  %67 = load %struct.case_node*, %struct.case_node** %left195, align 8, !dbg !5830
  tail call fastcc void @emit_case_nodes(%struct.rtx_def* %index, %struct.case_node* %67, %struct.rtx_def* %default_label, %union.tree_node* %index_type) #7, !dbg !5831
  %tobool224 = icmp eq %union.tree_node* %test_label198.0, null, !dbg !5832
  br i1 %tobool224, label %if.end315.loopexit, label %if.then225, !dbg !5833

if.then225:                                       ; preds = %if.end217
  br i1 %tobool104, label %if.end228, label %if.then227, !dbg !5834

if.then227:                                       ; preds = %if.then225
  tail call void @emit_jump(%struct.rtx_def* nonnull %default_label) #7, !dbg !5835
  br label %if.end228, !dbg !5835

if.end228:                                        ; preds = %if.then225, %if.then227
  tail call void @expand_label(%union.tree_node* nonnull %test_label198.0) #7, !dbg !5837
  br label %tailrecurse.backedge, !dbg !5620

tailrecurse.backedge:                             ; preds = %if.end228, %if.end264, %if.end244, %if.then42, %if.end106, %if.then30, %if.end177, %if.end138
  %node.tr.be.in = phi %struct.case_node** [ %right192, %if.end228 ], [ %left255, %if.end264 ], [ %right192, %if.end244 ], [ %right, %if.then42 ], [ %right, %if.end106 ], [ %left, %if.then30 ], [ %left153, %if.end177 ], [ %right, %if.end138 ]
  %node.tr.be = load %struct.case_node*, %struct.case_node** %node.tr.be.in, align 8, !dbg !5838
  br label %tailrecurse, !dbg !5617

if.else231:                                       ; preds = %land.lhs.true194, %if.else191
  br i1 %cmp193, label %if.else251, label %land.lhs.true234, !dbg !5839

land.lhs.true234:                                 ; preds = %if.else231
  %left235 = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 0, !dbg !5840
  %68 = load %struct.case_node*, %struct.case_node** %left235, align 8, !dbg !5840
  %cmp236 = icmp eq %struct.case_node* %68, null, !dbg !5841
  br i1 %cmp236, label %if.then237, label %if.else251, !dbg !5842

if.then237:                                       ; preds = %land.lhs.true234
  %call238 = tail call fastcc i32 @node_has_low_bound(%struct.case_node* %node.tr, %union.tree_node* %index_type) #7, !dbg !5843
  %tobool239 = icmp eq i32 %call238, 0, !dbg !5843
  br i1 %tobool239, label %if.then240, label %if.end244, !dbg !5846

if.then240:                                       ; preds = %if.then237
  %69 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !5847
  %call242 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %69) #7, !dbg !5849
  %call243 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call242, i32 %bf.cast) #6, !dbg !5850
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call243, i32 85, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %default_label) #6, !dbg !5851
  br label %if.end244, !dbg !5852

if.end244:                                        ; preds = %if.then237, %if.then240
  %70 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5853
  %call246 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %70) #7, !dbg !5854
  %call247 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call246, i32 %bf.cast) #6, !dbg !5855
  %code_label248 = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 5, !dbg !5856
  %71 = load %union.tree_node*, %union.tree_node** %code_label248, align 8, !dbg !5856
  %call249 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %71) #7, !dbg !5857
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call247, i32 84, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %call249) #6, !dbg !5858
  br label %tailrecurse.backedge, !dbg !5859

if.else251:                                       ; preds = %if.else231, %land.lhs.true234
  br i1 %cmp193, label %land.lhs.true254, label %if.else271, !dbg !5860

land.lhs.true254:                                 ; preds = %if.else251
  %left255 = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 0, !dbg !5861
  %72 = load %struct.case_node*, %struct.case_node** %left255, align 8, !dbg !5861
  %cmp256 = icmp eq %struct.case_node* %72, null, !dbg !5862
  br i1 %cmp256, label %if.else271, label %if.then257, !dbg !5863

if.then257:                                       ; preds = %land.lhs.true254
  %call258 = tail call fastcc i32 @node_has_high_bound(%struct.case_node* %node.tr, %union.tree_node* %index_type) #7, !dbg !5864
  %tobool259 = icmp eq i32 %call258, 0, !dbg !5864
  br i1 %tobool259, label %if.then260, label %if.end264, !dbg !5867

if.then260:                                       ; preds = %if.then257
  %73 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !5868
  %call262 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %73) #7, !dbg !5870
  %call263 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call262, i32 %bf.cast) #6, !dbg !5871
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call263, i32 83, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %default_label) #6, !dbg !5872
  br label %if.end264, !dbg !5873

if.end264:                                        ; preds = %if.then257, %if.then260
  %74 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !5874
  %call266 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %74) #7, !dbg !5875
  %call267 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select, i32 %cond, %struct.rtx_def* %call266, i32 %bf.cast) #6, !dbg !5876
  %code_label268 = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr, i64 0, i32 5, !dbg !5877
  %75 = load %union.tree_node*, %union.tree_node** %code_label268, align 8, !dbg !5877
  %call269 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %75) #7, !dbg !5878
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call267, i32 82, %struct.rtx_def* null, i32 %spec.select, i32 %bf.cast, %struct.rtx_def* %call269) #6, !dbg !5879
  br label %tailrecurse.backedge, !dbg !5880

if.else271:                                       ; preds = %land.lhs.true254, %if.else251
  %low.lcssa83 = phi %union.tree_node** [ %low, %land.lhs.true254 ], [ %low, %if.else251 ], !dbg !5634
  %high.lcssa79 = phi %union.tree_node** [ %high, %land.lhs.true254 ], [ %high, %if.else251 ], !dbg !5635
  %cond.lcssa75 = phi i32 [ %cond, %land.lhs.true254 ], [ %cond, %if.else251 ], !dbg !5625
  %spec.select.lcssa70 = phi i32 [ %spec.select, %land.lhs.true254 ], [ %spec.select, %if.else251 ], !dbg !5628
  %node.tr.lcssa65 = phi %struct.case_node* [ %node.tr, %land.lhs.true254 ], [ %node.tr, %if.else251 ]
  %bf.cast.lcssa60 = phi i32 [ %bf.cast, %land.lhs.true254 ], [ %bf.cast, %if.else251 ], !dbg !5623
  call void @llvm.dbg.value(metadata i32 %cond.lcssa75, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %cond.lcssa75, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %struct.case_node* %node.tr.lcssa65, metadata !5582, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %struct.case_node* %node.tr.lcssa65, metadata !5582, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %cond.lcssa75, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %cond.lcssa75, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %struct.case_node* %node.tr.lcssa65, metadata !5582, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %struct.case_node* %node.tr.lcssa65, metadata !5582, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %cond.lcssa75, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %cond.lcssa75, metadata !5587, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %struct.case_node* %node.tr.lcssa65, metadata !5582, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata %struct.case_node* %node.tr.lcssa65, metadata !5582, metadata !DIExpression()), !dbg !5617
  %call272 = tail call fastcc i32 @node_has_high_bound(%struct.case_node* %node.tr.lcssa65, %union.tree_node* %index_type) #7, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %call272, metadata !5602, metadata !DIExpression()), !dbg !5882
  %call273 = tail call fastcc i32 @node_has_low_bound(%struct.case_node* %node.tr.lcssa65, %union.tree_node* %index_type) #7, !dbg !5883
  call void @llvm.dbg.value(metadata i32 %call273, metadata !5606, metadata !DIExpression()), !dbg !5882
  %tobool274 = icmp eq i32 %call272, 0, !dbg !5884
  %tobool276 = icmp ne i32 %call273, 0, !dbg !5885
  %or.cond = and i1 %tobool274, %tobool276, !dbg !5886
  br i1 %or.cond, label %if.then277, label %if.else281, !dbg !5886

if.then277:                                       ; preds = %if.else271
  %76 = load %union.tree_node*, %union.tree_node** %high.lcssa79, align 8, !dbg !5887
  %call279 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %76) #7, !dbg !5889
  %call280 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select.lcssa70, i32 %cond.lcssa75, %struct.rtx_def* %call279, i32 %bf.cast.lcssa60) #6, !dbg !5890
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call280, i32 83, %struct.rtx_def* null, i32 %spec.select.lcssa70, i32 %bf.cast.lcssa60, %struct.rtx_def* %default_label) #6, !dbg !5891
  br label %if.end308, !dbg !5892

if.else281:                                       ; preds = %if.else271
  %tobool282 = icmp eq i32 %call273, 0, !dbg !5893
  %tobool284 = icmp ne i32 %call272, 0, !dbg !5894
  %or.cond1 = and i1 %tobool282, %tobool284, !dbg !5895
  br i1 %or.cond1, label %if.then285, label %if.else289, !dbg !5895

if.then285:                                       ; preds = %if.else281
  %77 = load %union.tree_node*, %union.tree_node** %low.lcssa83, align 8, !dbg !5896
  %call287 = tail call fastcc %struct.rtx_def* @expand_normal(%union.tree_node* %77) #7, !dbg !5898
  %call288 = tail call %struct.rtx_def* @convert_modes(i32 %spec.select.lcssa70, i32 %cond.lcssa75, %struct.rtx_def* %call287, i32 %bf.cast.lcssa60) #6, !dbg !5899
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %index, %struct.rtx_def* %call288, i32 85, %struct.rtx_def* null, i32 %spec.select.lcssa70, i32 %bf.cast.lcssa60, %struct.rtx_def* %default_label) #6, !dbg !5900
  br label %if.end308, !dbg !5901

if.else289:                                       ; preds = %if.else281
  %78 = or i32 %call273, %call272, !dbg !5902
  %79 = icmp eq i32 %78, 0, !dbg !5902
  br i1 %79, label %if.then293, label %if.end308, !dbg !5902

if.then293:                                       ; preds = %if.else289
  %80 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !5903
  %call295 = tail call %union.tree_node* %80(i32 %spec.select.lcssa70, i32 %bf.cast.lcssa60) #6, !dbg !5904
  call void @llvm.dbg.value(metadata %union.tree_node* %call295, metadata !5607, metadata !DIExpression()), !dbg !5905
  %81 = load %union.tree_node*, %union.tree_node** %low.lcssa83, align 8, !dbg !5906
  %call298 = tail call %union.tree_node* @build1_stat(i32 113, %union.tree_node* %call295, %union.tree_node* %81) #6, !dbg !5906
  call void @llvm.dbg.value(metadata %union.tree_node* %call298, metadata !5612, metadata !DIExpression()), !dbg !5905
  %82 = load %union.tree_node*, %union.tree_node** %high.lcssa79, align 8, !dbg !5907
  %call301 = tail call %union.tree_node* @build1_stat(i32 113, %union.tree_node* %call295, %union.tree_node* %82) #6, !dbg !5907
  call void @llvm.dbg.value(metadata %union.tree_node* %call301, metadata !5613, metadata !DIExpression()), !dbg !5905
  %call302 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call298, %struct.rtx_def* null, i32 %spec.select.lcssa70, i32 0) #7, !dbg !5908
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call302, metadata !5614, metadata !DIExpression()), !dbg !5905
  %call303 = tail call %struct.rtx_def* @expand_simple_binop(i32 %spec.select.lcssa70, i32 50, %struct.rtx_def* %index, %struct.rtx_def* %call302, %struct.rtx_def* null, i32 %bf.cast.lcssa60, i32 2) #6, !dbg !5909
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call303, metadata !5615, metadata !DIExpression()), !dbg !5905
  %call304 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %call295, %union.tree_node* %call301, %union.tree_node* %call298) #6, !dbg !5910
  %call305 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %call304, %struct.rtx_def* null, i32 %spec.select.lcssa70, i32 0) #7, !dbg !5911
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call305, metadata !5616, metadata !DIExpression()), !dbg !5905
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call303, %struct.rtx_def* %call305, i32 83, %struct.rtx_def* null, i32 %spec.select.lcssa70, i32 1, %struct.rtx_def* %default_label) #6, !dbg !5912
  br label %if.end308, !dbg !5913

if.end308:                                        ; preds = %if.else289, %if.then285, %if.then293, %if.then277
  %code_label309 = getelementptr inbounds %struct.case_node, %struct.case_node* %node.tr.lcssa65, i64 0, i32 5, !dbg !5914
  %83 = load %union.tree_node*, %union.tree_node** %code_label309, align 8, !dbg !5914
  %call310 = tail call %struct.rtx_def* @label_rtx(%union.tree_node* %83) #7, !dbg !5915
  tail call void @emit_jump(%struct.rtx_def* %call310) #7, !dbg !5916
  br label %if.end315

if.end315.loopexit:                               ; preds = %if.else149, %if.end217, %land.lhs.true152
  br label %if.end315, !dbg !5917

if.end315:                                        ; preds = %if.end315.loopexit, %if.else140, %if.else179, %if.then80, %if.end308, %if.then14
  ret void, !dbg !5917
}

declare dso_local i32 @try_casesi(%union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @optimize_insn_for_speed_p() local_unnamed_addr #2

declare dso_local i32 @try_tablejump(%union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_u_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_eEee0_stat(i32, i32, %struct.rtx_def*, %struct.rtvec_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtvec_def* @gen_rtvec_v(i32, %struct.rtx_def**) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_E_stat(i32, i32, %struct.rtvec_def*) local_unnamed_addr #2

declare dso_local void @reorder_insns(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @expand_expr_real(%union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !5918 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5925, metadata !DIExpression()), !dbg !5926
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5927
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5927
  %0 = load i32, i32* %rt_uint, align 8, !dbg !5927
  ret i32 %0, !dbg !5928
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @overlaps_hard_reg_set_p(i64 %regs, i32 %mode, i32 %regno) unnamed_addr #0 !dbg !5929 {
entry:
  call void @llvm.dbg.value(metadata i64 %regs, metadata !5934, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5935, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5936, metadata !DIExpression()), !dbg !5938
  %sh_prom = zext i32 %regno to i64, !dbg !5939
  %shl = shl i64 1, %sh_prom, !dbg !5939
  %and = and i64 %shl, %regs, !dbg !5939
  %tobool = icmp eq i64 %and, 0, !dbg !5939
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5941

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @end_hard_regno(i32 %mode, i32 %regno) #7, !dbg !5942
  call void @llvm.dbg.value(metadata i32 %call, metadata !5937, metadata !DIExpression()), !dbg !5938
  br label %while.cond, !dbg !5943

while.cond:                                       ; preds = %while.body, %if.end
  %regno.addr.0 = phi i32 [ %regno, %if.end ], [ %inc, %while.body ]
  call void @llvm.dbg.value(metadata i32 %regno.addr.0, metadata !5936, metadata !DIExpression()), !dbg !5938
  %inc = add i32 %regno.addr.0, 1, !dbg !5944
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5936, metadata !DIExpression()), !dbg !5938
  %cmp = icmp ult i32 %inc, %call, !dbg !5945
  br i1 %cmp, label %while.body, label %cleanup.loopexit, !dbg !5943

while.body:                                       ; preds = %while.cond
  %sh_prom1 = zext i32 %inc to i64, !dbg !5946
  %shl2 = shl i64 1, %sh_prom1, !dbg !5946
  %and3 = and i64 %shl2, %regs, !dbg !5946
  %tobool4 = icmp eq i64 %and3, 0, !dbg !5946
  br i1 %tobool4, label %while.cond, label %cleanup.loopexit, !dbg !5948, !llvm.loop !5949

cleanup.loopexit:                                 ; preds = %while.cond, %while.body
  %retval.0.ph = phi i8 [ 0, %while.cond ], [ 1, %while.body ]
  br label %cleanup, !dbg !5951

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !5938
  ret i8 %retval.0, !dbg !5951
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @end_hard_regno(i32 %mode, i32 %regno) unnamed_addr #0 !dbg !5952 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5956, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5957, metadata !DIExpression()), !dbg !5958
  %idxprom = zext i32 %regno to i64, !dbg !5959
  %idxprom1 = sext i32 %mode to i64, !dbg !5959
  %arrayidx2 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom1, !dbg !5959
  %0 = load i8, i8* %arrayidx2, align 1, !dbg !5959
  %conv = zext i8 %0 to i32, !dbg !5959
  %add = add i32 %conv, %regno, !dbg !5960
  ret i32 %add, !dbg !5961
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5962 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5964, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i32 %i, metadata !5965, metadata !DIExpression()), !dbg !5966
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !5967
  %tobool = icmp eq i8 %call, 0, !dbg !5967
  br i1 %tobool, label %return, label %if.then, !dbg !5969

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !5970
  %idxprom = zext i32 %i to i64, !dbg !5970
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !5970
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5970
  br label %return, !dbg !5972

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !5973
  ret %union.tree_node* %retval.0, !dbg !5974
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5975 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5977, metadata !DIExpression()), !dbg !5978
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5979
  %cmp = icmp eq i32 %call, 0, !dbg !5980
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !5981

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5982
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5983
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5984
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5985 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5989, metadata !DIExpression()), !dbg !5991
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !5992
  %idxprom = zext i32 %call to i64, !dbg !5993
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !5993
  %0 = load i64, i64* %arrayidx, align 8, !dbg !5993
  call void @llvm.dbg.value(metadata i64 %0, metadata !5990, metadata !DIExpression()), !dbg !5991
  %cmp = icmp eq i64 %0, 0, !dbg !5994
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5994

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5994
  br label %cond.end, !dbg !5994

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !5995
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !5996
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !5997
  ret %union.tree_node** %2, !dbg !5998
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5999 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6003, metadata !DIExpression()), !dbg !6004
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !6005
  %bf.load = load i32, i32* %0, align 8, !dbg !6005
  %bf.clear = and i32 %bf.load, 255, !dbg !6005
  ret i32 %bf.clear, !dbg !6006
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6007 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6011, metadata !DIExpression()), !dbg !6012
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !6013
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !6014
  ret i32 %call1, !dbg !6015
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !6016 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6020, metadata !DIExpression()), !dbg !6021
  %idxprom = zext i32 %code to i64, !dbg !6022
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !6022
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6022
  ret i32 %0, !dbg !6023
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_si_stat(i32, i32, i8*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @list_length(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @check_operand_nalternatives(%union.tree_node* %outputs, %union.tree_node* %inputs) unnamed_addr #5 !dbg !6024 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs, metadata !6028, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs, metadata !6029, metadata !DIExpression()), !dbg !6037
  %tobool = icmp ne %union.tree_node* %outputs, null, !dbg !6038
  %tobool1 = icmp ne %union.tree_node* %inputs, null, !dbg !6039
  %or.cond = or i1 %tobool, %tobool1, !dbg !6040
  br i1 %or.cond, label %if.then, label %if.end27, !dbg !6040

if.then:                                          ; preds = %entry
  %tobool2 = icmp eq %union.tree_node* %outputs, null, !dbg !6041
  %outputs.inputs = select i1 %tobool2, %union.tree_node* %inputs, %union.tree_node* %outputs, !dbg !6041
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %outputs.inputs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6041
  %0 = bitcast i32* %purpose to %struct.tree_list**, !dbg !6041
  %1 = load %struct.tree_list*, %struct.tree_list** %0, align 8, !dbg !6041
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %1, i64 0, i32 2, !dbg !6042
  %2 = bitcast %union.tree_node** %value to %struct.tree_string**, !dbg !6042
  %3 = load %struct.tree_string*, %struct.tree_string** %2, align 8, !dbg !6042
  %arraydecay = getelementptr inbounds %struct.tree_string, %struct.tree_string* %3, i64 0, i32 2, i64 0, !dbg !6042
  %call = tail call fastcc i32 @n_occurrences(i32 44, i8* nonnull %arraydecay) #7, !dbg !6043
  call void @llvm.dbg.value(metadata i32 %call, metadata !6033, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs, metadata !6034, metadata !DIExpression()), !dbg !6044
  %cmp = icmp sgt i32 %call, 29, !dbg !6045
  br i1 %cmp, label %if.then4, label %while.cond.preheader, !dbg !6047

while.cond.preheader:                             ; preds = %if.then
  br label %while.cond, !dbg !6048

if.then4:                                         ; preds = %if.then
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !6049
  br label %cleanup22, !dbg !6051

while.cond:                                       ; preds = %while.cond.preheader, %cleanup
  %tmp.0 = phi %union.tree_node* [ %tmp.2, %cleanup ], [ %outputs, %while.cond.preheader ], !dbg !6052
  %next.0 = phi %union.tree_node* [ %next.2, %cleanup ], [ %inputs, %while.cond.preheader ], !dbg !6053
  call void @llvm.dbg.value(metadata %union.tree_node* %next.0, metadata !6034, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.value(metadata %union.tree_node* %tmp.0, metadata !6030, metadata !DIExpression()), !dbg !6044
  %tobool5 = icmp eq %union.tree_node* %tmp.0, null, !dbg !6048
  br i1 %tobool5, label %cleanup22.loopexit, label %while.body, !dbg !6048

while.body:                                       ; preds = %while.cond
  %purpose7 = getelementptr inbounds %union.tree_node, %union.tree_node* %tmp.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6054
  %4 = bitcast i32* %purpose7 to %struct.tree_list**, !dbg !6054
  %5 = load %struct.tree_list*, %struct.tree_list** %4, align 8, !dbg !6054
  %value9 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %5, i64 0, i32 2, !dbg !6054
  %6 = bitcast %union.tree_node** %value9 to %struct.tree_string**, !dbg !6054
  %7 = load %struct.tree_string*, %struct.tree_string** %6, align 8, !dbg !6054
  %arraydecay12 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %7, i64 0, i32 2, i64 0, !dbg !6054
  call void @llvm.dbg.value(metadata i8* %arraydecay12, metadata !6035, metadata !DIExpression()), !dbg !6055
  %call13 = tail call fastcc i32 @n_occurrences(i32 44, i8* nonnull %arraydecay12) #7, !dbg !6056
  %cmp14 = icmp eq i32 %call13, %call, !dbg !6058
  br i1 %cmp14, label %if.end16, label %if.then15, !dbg !6059

if.then15:                                        ; preds = %while.body
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !6060
  br label %cleanup, !dbg !6062

if.end16:                                         ; preds = %while.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %tmp.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6063
  %8 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6063
  %tobool17 = icmp eq %union.tree_node* %8, null, !dbg !6063
  br i1 %tobool17, label %cleanup, label %if.then18, !dbg !6065

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6030, metadata !DIExpression()), !dbg !6044
  br label %cleanup, !dbg !6066

cleanup:                                          ; preds = %if.end16, %if.then18, %if.then15
  %tmp.2 = phi %union.tree_node* [ %tmp.0, %if.then15 ], [ %8, %if.then18 ], [ %next.0, %if.end16 ], !dbg !6044
  %next.2 = phi %union.tree_node* [ %next.0, %if.then15 ], [ %next.0, %if.then18 ], [ null, %if.end16 ], !dbg !6053
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then15 ], [ 0, %if.then18 ], [ 0, %if.end16 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %next.2, metadata !6034, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.value(metadata %union.tree_node* %tmp.2, metadata !6030, metadata !DIExpression()), !dbg !6044
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %while.cond, label %cleanup22.loopexit, !llvm.loop !6067

cleanup22.loopexit:                               ; preds = %cleanup, %while.cond
  %cleanup.dest.slot.1.ph = phi i32 [ 0, %while.cond ], [ %cleanup.dest.slot.0, %cleanup ]
  br label %cleanup22

cleanup22:                                        ; preds = %cleanup22.loopexit, %if.then4
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then4 ], [ %cleanup.dest.slot.1.ph, %cleanup22.loopexit ]
  %switch = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %switch, label %if.end27, label %return

if.end27:                                         ; preds = %cleanup22, %entry
  br label %return, !dbg !6069

return:                                           ; preds = %cleanup22, %if.end27
  %retval.3 = phi i8 [ 0, %cleanup22 ], [ 1, %if.end27 ], !dbg !6037
  ret i8 %retval.3, !dbg !6070
}

declare dso_local i32 @decode_reg_name(i8*) local_unnamed_addr #2

declare dso_local void @mark_addressable(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @validize_mem(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @set_reg_attrs_for_decl_rtl(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_tree(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @tree_conflicts_with_clobbers_p(%union.tree_node* %t, i64* %clobbered_regs) unnamed_addr #5 !dbg !6071 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6075, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i64* %clobbered_regs, metadata !6076, metadata !DIExpression()), !dbg !6078
  %call = tail call %union.tree_node* @tree_overlaps_hard_reg_set(%union.tree_node* %t, i64* %clobbered_regs) #7, !dbg !6079
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6077, metadata !DIExpression()), !dbg !6078
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !6080
  br i1 %tobool, label %cleanup, label %if.then, !dbg !6082

if.then:                                          ; preds = %entry
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6083
  %0 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !6083
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i64 0, i64 0), %union.tree_node* %0) #6, !dbg !6085
  %decl_flag_0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6086
  %1 = bitcast i40* %decl_flag_0 to i64*, !dbg !6086
  %bf.load = load i64, i64* %1, align 8, !dbg !6087
  %bf.clear = and i64 %bf.load, -16777217, !dbg !6087
  store i64 %bf.clear, i64* %1, align 8, !dbg !6087
  br label %cleanup, !dbg !6088

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %entry ], !dbg !6078
  ret i8 %retval.0, !dbg !6089
}

declare dso_local %struct.rtvec_def* @rtvec_alloc(i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ssiEEEi_stat(i32, i32, i8*, i8*, i32, %struct.rtvec_def*, %struct.rtvec_def*, %struct.rtvec_def*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @asm_operand_ok(%struct.rtx_def*, i8*, i8**) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_0_stat(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) local_unnamed_addr #2

declare dso_local i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @internal_error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @n_occurrences(i32 %c, i8* %s) unnamed_addr #5 !dbg !6090 {
entry:
  call void @llvm.dbg.value(metadata i32 44, metadata !6094, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i8* %s, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 0, metadata !6096, metadata !DIExpression()), !dbg !6097
  br label %while.cond, !dbg !6098

while.cond:                                       ; preds = %while.body, %entry
  %s.addr.0 = phi i8* [ %s, %entry ], [ %incdec.ptr, %while.body ]
  %n.0 = phi i32 [ 0, %entry ], [ %add, %while.body ], !dbg !6097
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !6096, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i8* %s.addr.0, metadata !6095, metadata !DIExpression()), !dbg !6097
  %0 = load i8, i8* %s.addr.0, align 1, !dbg !6099
  %tobool = icmp eq i8 %0, 0, !dbg !6098
  br i1 %tobool, label %while.end, label %while.body, !dbg !6098

while.body:                                       ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %s.addr.0, i64 1, !dbg !6100
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !6095, metadata !DIExpression()), !dbg !6097
  %cmp = icmp eq i8 %0, 44, !dbg !6101
  %conv1 = zext i1 %cmp to i32, !dbg !6101
  %add = add nuw nsw i32 %n.0, %conv1, !dbg !6102
  call void @llvm.dbg.value(metadata i32 %add, metadata !6096, metadata !DIExpression()), !dbg !6097
  br label %while.cond, !dbg !6098, !llvm.loop !6103

while.end:                                        ; preds = %while.cond
  %n.0.lcssa = phi i32 [ %n.0, %while.cond ], !dbg !6097
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !6096, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !6096, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !6096, metadata !DIExpression()), !dbg !6097
  ret i32 %n.0.lcssa, !dbg !6105
}

declare dso_local i32 @simple_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

declare dso_local i8* @identifier_to_locale(i8*) local_unnamed_addr #2

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i32 @promote_function_mode(%union.tree_node*, i32, i32*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @convert_modes(i32, i32, %struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @emit_group_load(%struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_use(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_clobber(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_arg_pointer_save_area() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_blockage() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6106 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6108, metadata !DIExpression()), !dbg !6109
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !6110
  %0 = load i32, i32* %num_ops, align 4, !dbg !6110
  ret i32 %0, !dbg !6111
}

declare dso_local i32 @tree_int_cst_compare(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst_wide(%union.tree_node*, i64, i64) local_unnamed_addr #2

declare dso_local i32 @rtx_cost(%struct.rtx_def*, i32, i8 zeroext) local_unnamed_addr #2

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @case_bit_test_cmp(i8* %p1, i8* %p2) #5 !dbg !6112 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !6114, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i8* %p2, metadata !6115, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i8* %p1, metadata !6116, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i8* %p2, metadata !6118, metadata !DIExpression()), !dbg !6119
  %bits = getelementptr inbounds i8, i8* %p2, i64 24, !dbg !6120
  %0 = bitcast i8* %bits to i32*, !dbg !6120
  %1 = load i32, i32* %0, align 8, !dbg !6120
  %bits1 = getelementptr inbounds i8, i8* %p1, i64 24, !dbg !6122
  %2 = bitcast i8* %bits1 to i32*, !dbg !6122
  %3 = load i32, i32* %2, align 8, !dbg !6122
  %cmp = icmp eq i32 %1, %3, !dbg !6123
  br i1 %cmp, label %if.end, label %if.then, !dbg !6124

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %p1, metadata !6116, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i8* %p2, metadata !6118, metadata !DIExpression()), !dbg !6119
  %sub = sub nsw i32 %1, %3, !dbg !6125
  br label %cleanup, !dbg !6126

if.end:                                           ; preds = %entry
  %label = getelementptr inbounds i8, i8* %p2, i64 16, !dbg !6127
  %4 = bitcast i8* %label to %struct.rtx_def**, !dbg !6127
  %5 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !6127
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, !dbg !6127
  %6 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !6127
  %rt_int = bitcast %union.rtunion_def* %6 to i32*, !dbg !6127
  %7 = load i32, i32* %rt_int, align 8, !dbg !6127
  %label4 = getelementptr inbounds i8, i8* %p1, i64 16, !dbg !6128
  %8 = bitcast i8* %label4 to %struct.rtx_def**, !dbg !6128
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8, !dbg !6128
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, !dbg !6128
  %10 = getelementptr inbounds %union.u, %union.u* %u5, i64 1, i32 0, i32 0, i64 1, !dbg !6128
  %rt_int8 = bitcast %union.rtunion_def* %10 to i32*, !dbg !6128
  %11 = load i32, i32* %rt_int8, align 8, !dbg !6128
  %sub9 = sub nsw i32 %7, %11, !dbg !6129
  br label %cleanup, !dbg !6130

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %sub9, %if.end ], !dbg !6119
  ret i32 %retval.0, !dbg !6131
}

declare dso_local %struct.rtx_def* @expand_binop(i32, %struct.optab_d*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @immed_double_const(i64, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @node_is_bounded(%struct.case_node* %node, %union.tree_node* %index_type) unnamed_addr #5 !dbg !6132 {
entry:
  call void @llvm.dbg.value(metadata %struct.case_node* %node, metadata !6136, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata %union.tree_node* %index_type, metadata !6137, metadata !DIExpression()), !dbg !6138
  %call = tail call fastcc i32 @node_has_low_bound(%struct.case_node* %node, %union.tree_node* %index_type) #7, !dbg !6139
  %tobool = icmp eq i32 %call, 0, !dbg !6139
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6140

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @node_has_high_bound(%struct.case_node* %node, %union.tree_node* %index_type) #7, !dbg !6141
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6140
  %phitmp = zext i1 %tobool2 to i32
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %0, !dbg !6142
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_jump_if_equal(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %label, i32 %unsignedp) unnamed_addr #5 !dbg !6143 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6147, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op0, metadata !6148, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op1, metadata !6149, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata %struct.rtx_def* %label, metadata !6150, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i32 %unsignedp, metadata !6151, metadata !DIExpression()), !dbg !6152
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 81, i32 %unsignedp, i32 %mode, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %label, i32 -1) #6, !dbg !6153
  ret void, !dbg !6154
}

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @locator_location(i32) local_unnamed_addr #2

declare dso_local i32 @curr_insn_locator() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @node_has_low_bound(%struct.case_node* %node, %union.tree_node* %index_type) unnamed_addr #5 !dbg !6155 {
entry:
  call void @llvm.dbg.value(metadata %struct.case_node* %node, metadata !6157, metadata !DIExpression()), !dbg !6161
  call void @llvm.dbg.value(metadata %union.tree_node* %index_type, metadata !6158, metadata !DIExpression()), !dbg !6161
  %low = getelementptr inbounds %struct.case_node, %struct.case_node* %node, i64 0, i32 3, !dbg !6162
  %0 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !6162
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %index_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6164
  %1 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !6164
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !6164
  %call = tail call i32 @tree_int_cst_equal(%union.tree_node* %0, %union.tree_node* %2) #6, !dbg !6165
  %tobool = icmp eq i32 %call, 0, !dbg !6165
  br i1 %tobool, label %if.end, label %cleanup, !dbg !6166

if.end:                                           ; preds = %entry
  %left = getelementptr inbounds %struct.case_node, %struct.case_node* %node, i64 0, i32 0, !dbg !6167
  %3 = load %struct.case_node*, %struct.case_node** %left, align 8, !dbg !6167
  %tobool1 = icmp eq %struct.case_node* %3, null, !dbg !6169
  br i1 %tobool1, label %if.end3, label %cleanup, !dbg !6170

if.end3:                                          ; preds = %if.end
  %4 = bitcast %union.tree_node** %low to %struct.tree_common**, !dbg !6171
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !6171
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !6171
  %6 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !6171
  %.cast = bitcast %struct.tree_common* %5 to %union.tree_node*, !dbg !6171
  %call10 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %6, i64 1) #6, !dbg !6171
  %call11 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %6, %union.tree_node* %.cast, %union.tree_node* %call10) #6, !dbg !6171
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !6159, metadata !DIExpression()), !dbg !6161
  %7 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !6172
  %call13 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call11, %union.tree_node* %7) #6, !dbg !6174
  %tobool14 = icmp eq i32 %call13, 0, !dbg !6174
  br i1 %tobool14, label %cleanup, label %if.end16, !dbg !6175

if.end16:                                         ; preds = %if.end3
  br label %for.cond, !dbg !6176

for.cond:                                         ; preds = %for.inc, %if.end16
  %node.pn = phi %struct.case_node* [ %node, %if.end16 ], [ %pnode.0, %for.inc ]
  %pnode.0.in = getelementptr inbounds %struct.case_node, %struct.case_node* %node.pn, i64 0, i32 2, !dbg !6178
  %pnode.0 = load %struct.case_node*, %struct.case_node** %pnode.0.in, align 8, !dbg !6178
  call void @llvm.dbg.value(metadata %struct.case_node* %pnode.0, metadata !6160, metadata !DIExpression()), !dbg !6161
  %tobool17 = icmp eq %struct.case_node* %pnode.0, null, !dbg !6179
  br i1 %tobool17, label %cleanup.loopexit, label %for.body, !dbg !6179

for.body:                                         ; preds = %for.cond
  %high = getelementptr inbounds %struct.case_node, %struct.case_node* %pnode.0, i64 0, i32 4, !dbg !6180
  %8 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !6180
  %call18 = tail call i32 @tree_int_cst_equal(%union.tree_node* %call11, %union.tree_node* %8) #6, !dbg !6183
  %tobool19 = icmp eq i32 %call18, 0, !dbg !6183
  br i1 %tobool19, label %for.inc, label %cleanup.loopexit, !dbg !6184

for.inc:                                          ; preds = %for.body
  br label %for.cond, !dbg !6185, !llvm.loop !6186

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !6188

cleanup:                                          ; preds = %cleanup.loopexit, %if.end3, %if.end, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 0, %if.end ], [ 0, %if.end3 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !6161
  ret i32 %retval.0, !dbg !6188
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @node_has_high_bound(%struct.case_node* %node, %union.tree_node* %index_type) unnamed_addr #5 !dbg !6189 {
entry:
  call void @llvm.dbg.value(metadata %struct.case_node* %node, metadata !6191, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata %union.tree_node* %index_type, metadata !6192, metadata !DIExpression()), !dbg !6195
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %index_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6196
  %0 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !6196
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6196
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !6198
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6199

if.end:                                           ; preds = %entry
  %high = getelementptr inbounds %struct.case_node, %struct.case_node* %node, i64 0, i32 4, !dbg !6200
  %2 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !6200
  %call = tail call i32 @tree_int_cst_equal(%union.tree_node* %2, %union.tree_node* nonnull %1) #6, !dbg !6202
  %tobool = icmp eq i32 %call, 0, !dbg !6202
  br i1 %tobool, label %if.end4, label %cleanup, !dbg !6203

if.end4:                                          ; preds = %if.end
  %right = getelementptr inbounds %struct.case_node, %struct.case_node* %node, i64 0, i32 1, !dbg !6204
  %3 = load %struct.case_node*, %struct.case_node** %right, align 8, !dbg !6204
  %tobool5 = icmp eq %struct.case_node* %3, null, !dbg !6206
  br i1 %tobool5, label %if.end7, label %cleanup, !dbg !6207

if.end7:                                          ; preds = %if.end4
  %4 = bitcast %union.tree_node** %high to %struct.tree_common**, !dbg !6208
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !6208
  %type9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !6208
  %6 = load %union.tree_node*, %union.tree_node** %type9, align 8, !dbg !6208
  %.cast = bitcast %struct.tree_common* %5 to %union.tree_node*, !dbg !6208
  %call14 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %6, i64 1) #6, !dbg !6208
  %call15 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %6, %union.tree_node* %.cast, %union.tree_node* %call14) #6, !dbg !6208
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !6193, metadata !DIExpression()), !dbg !6195
  %7 = load %union.tree_node*, %union.tree_node** %high, align 8, !dbg !6209
  %call17 = tail call i32 @tree_int_cst_lt(%union.tree_node* %7, %union.tree_node* %call15) #6, !dbg !6211
  %tobool18 = icmp eq i32 %call17, 0, !dbg !6211
  br i1 %tobool18, label %cleanup, label %if.end20, !dbg !6212

if.end20:                                         ; preds = %if.end7
  br label %for.cond, !dbg !6213

for.cond:                                         ; preds = %for.inc, %if.end20
  %node.pn = phi %struct.case_node* [ %node, %if.end20 ], [ %pnode.0, %for.inc ]
  %pnode.0.in = getelementptr inbounds %struct.case_node, %struct.case_node* %node.pn, i64 0, i32 2, !dbg !6215
  %pnode.0 = load %struct.case_node*, %struct.case_node** %pnode.0.in, align 8, !dbg !6215
  call void @llvm.dbg.value(metadata %struct.case_node* %pnode.0, metadata !6194, metadata !DIExpression()), !dbg !6195
  %tobool21 = icmp eq %struct.case_node* %pnode.0, null, !dbg !6216
  br i1 %tobool21, label %cleanup.loopexit, label %for.body, !dbg !6216

for.body:                                         ; preds = %for.cond
  %low = getelementptr inbounds %struct.case_node, %struct.case_node* %pnode.0, i64 0, i32 3, !dbg !6217
  %8 = load %union.tree_node*, %union.tree_node** %low, align 8, !dbg !6217
  %call22 = tail call i32 @tree_int_cst_equal(%union.tree_node* %call15, %union.tree_node* %8) #6, !dbg !6220
  %tobool23 = icmp eq i32 %call22, 0, !dbg !6220
  br i1 %tobool23, label %for.inc, label %cleanup.loopexit, !dbg !6221

for.inc:                                          ; preds = %for.body
  br label %for.cond, !dbg !6222, !llvm.loop !6223

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !6225

cleanup:                                          ; preds = %cleanup.loopexit, %if.end7, %if.end4, %if.end, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 1, %if.end ], [ 0, %if.end4 ], [ 0, %if.end7 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !6195
  ret i32 %retval.0, !dbg !6225
}

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @expand_simple_binop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

declare dso_local void @do_compare_rtx_and_jump(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2064, !2065, !2066}
!llvm.ident = !{!2067}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "use_cost_table", scope: !2, file: !3, line: 102, type: !627, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !624, globals: !2024, nameTableKind: None)
!3 = !DIFile(filename: "stmt.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !336, !342, !347, !352, !370, !377, !384, !527, !549, !588, !614}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !142, line: 39, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335}
!144 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!150 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!151 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!152 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!153 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!154 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!155 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!156 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!157 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!158 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!159 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!160 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!161 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!162 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!163 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!164 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!165 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!166 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!167 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!168 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!169 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!170 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!171 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!172 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!173 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!174 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!175 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!176 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!177 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!178 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!179 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!180 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!181 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!182 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!183 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!184 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!185 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!186 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!187 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!188 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!189 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!190 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!191 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!192 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!193 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!194 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!195 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!196 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!197 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!198 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!199 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!200 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!201 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!202 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!203 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!204 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!205 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!206 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!207 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!208 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!209 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!210 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!211 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!212 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!213 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!214 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!215 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!216 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!217 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!218 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!219 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!220 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!221 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!222 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!223 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!224 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!225 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!226 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!227 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!228 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!229 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!230 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!231 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!232 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!233 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!235 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!236 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!237 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!238 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!239 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!240 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!241 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!242 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!243 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!244 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!245 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!246 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!247 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!248 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!249 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!250 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!251 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!252 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!253 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!254 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!255 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!256 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!257 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!259 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!260 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!261 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!262 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!263 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!264 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!265 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!266 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!267 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!268 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!269 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!270 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!271 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!272 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!273 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!274 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!275 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!276 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!277 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!278 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!279 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!280 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!281 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!282 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!283 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!284 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!285 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!286 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!287 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!288 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!289 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!290 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!291 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!292 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!293 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!294 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!295 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!296 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!301 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!302 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!303 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!304 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!305 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!306 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!307 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!308 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!309 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!310 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!311 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!312 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!313 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!322 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!323 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!324 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!325 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!326 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!327 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!328 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!329 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!330 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!331 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!332 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!333 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!334 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!335 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !337, line: 363, baseType: !7, size: 32, elements: !338)
!337 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!338 = !{!339, !340, !341}
!339 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!340 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!341 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !337, line: 355, baseType: !7, size: 32, elements: !343)
!343 = !{!344, !345, !346}
!344 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !348, line: 474, baseType: !7, size: 32, elements: !349)
!348 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!349 = !{!350, !351}
!350 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!351 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !142, line: 280, baseType: !7, size: 32, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!354 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !142, line: 1817, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !142, line: 1805, baseType: !7, size: 32, elements: !378)
!378 = !{!379, !380, !381, !382, !383}
!379 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!383 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !385, line: 45, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526}
!387 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!397 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!398 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!399 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!400 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!401 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!402 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!403 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!404 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!405 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!406 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!407 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!408 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!409 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!410 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!411 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!412 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!413 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!414 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!415 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!416 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!417 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!418 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!419 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!420 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!421 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!422 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!423 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!424 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!425 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!426 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!427 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!428 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!429 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!430 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!431 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!432 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!433 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!434 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!435 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!436 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!437 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!438 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!439 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!440 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!441 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!442 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!443 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!444 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!445 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!446 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!447 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!448 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!449 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!450 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!451 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!452 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!453 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!454 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!455 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!456 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!457 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!458 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!459 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!460 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!461 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!462 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!463 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!464 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!465 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!466 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!467 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!468 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!469 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!470 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!471 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!472 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!473 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!474 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!475 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!476 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!477 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!478 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!479 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!480 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!481 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!482 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!483 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!484 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!485 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!486 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!487 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!488 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!489 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!490 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!491 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!492 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!493 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!494 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!495 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!496 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!497 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!498 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!499 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!500 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!501 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!502 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!503 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!504 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!505 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!506 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!507 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!508 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!509 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!510 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!511 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!512 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!513 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!514 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!515 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!517 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!518 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!519 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!520 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!521 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!522 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!523 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!524 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!525 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!526 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!527 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !528, line: 36, baseType: !7, size: 32, elements: !529)
!528 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!529 = !{!530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548}
!530 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!531 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!532 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!533 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!534 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!535 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!536 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!537 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!538 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!539 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!540 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!541 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!542 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!543 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!544 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!545 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!546 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!547 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!548 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !550, line: 51, baseType: !7, size: 32, elements: !551)
!550 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!551 = !{!552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587}
!552 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!553 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!554 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!555 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!556 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!557 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!558 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!559 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!560 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!561 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!562 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!563 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!564 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!565 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!566 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!567 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!568 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!569 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!570 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!571 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!572 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!573 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!574 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!575 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!576 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!577 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!578 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!579 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!580 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!581 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!582 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!583 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!584 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!585 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!586 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!587 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!588 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !550, line: 727, baseType: !7, size: 32, elements: !589)
!589 = !{!590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613}
!590 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!591 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!592 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!593 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!594 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!595 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!596 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!597 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!598 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!599 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!600 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!601 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!602 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!603 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!604 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!605 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!606 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!607 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!608 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!609 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!610 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!611 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!612 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!613 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!614 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expand_modifier", file: !615, line: 52, baseType: !7, size: 32, elements: !616)
!615 = !DIFile(filename: "./expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!616 = !{!617, !618, !619, !620, !621, !622, !623}
!617 = !DIEnumerator(name: "EXPAND_NORMAL", value: 0, isUnsigned: true)
!618 = !DIEnumerator(name: "EXPAND_STACK_PARM", value: 1, isUnsigned: true)
!619 = !DIEnumerator(name: "EXPAND_SUM", value: 2, isUnsigned: true)
!620 = !DIEnumerator(name: "EXPAND_CONST_ADDRESS", value: 3, isUnsigned: true)
!621 = !DIEnumerator(name: "EXPAND_INITIALIZER", value: 4, isUnsigned: true)
!622 = !DIEnumerator(name: "EXPAND_WRITE", value: 5, isUnsigned: true)
!623 = !DIEnumerator(name: "EXPAND_MEMORY", value: 6, isUnsigned: true)
!624 = !{!625, !626, !627, !628, !631, !632, !141, !629, !634, !635, !636, !993, !384, !762, !1996, !810, !5, !1997, !527, !1998, !2000, !959, !2002, !2004, !2005, !2006, !7, !2007, !691, !2016}
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!627 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !630)
!634 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!635 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !637, line: 56, baseType: !638)
!637 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !142, line: 3371, size: 1792, elements: !640)
!640 = !{!641, !674, !680, !692, !711, !722, !727, !736, !742, !755, !767, !805, !1296, !1324, !1332, !1333, !1338, !1347, !1353, !1358, !1362, !1366, !1649, !1696, !1702, !1708, !1715, !1726, !1740, !1757, !1769, !1791, !1806, !1978}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !639, file: !142, line: 3372, baseType: !642, size: 64)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !142, line: 360, size: 64, elements: !643)
!643 = !{!644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !642, file: !142, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !642, file: !142, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !642, file: !142, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !642, file: !142, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !642, file: !142, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !642, file: !142, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !642, file: !142, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !642, file: !142, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !642, file: !142, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !642, file: !142, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !642, file: !142, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !642, file: !142, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !642, file: !142, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !642, file: !142, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !642, file: !142, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !642, file: !142, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !642, file: !142, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !642, file: !142, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !642, file: !142, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !642, file: !142, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !642, file: !142, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !642, file: !142, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !642, file: !142, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !642, file: !142, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !642, file: !142, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !642, file: !142, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !642, file: !142, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !642, file: !142, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !642, file: !142, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !642, file: !142, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !639, file: !142, line: 3373, baseType: !675, size: 192)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !142, line: 402, size: 192, elements: !676)
!676 = !{!677, !678, !679}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !675, file: !142, line: 403, baseType: !642, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !675, file: !142, line: 404, baseType: !636, size: 64, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !675, file: !142, line: 405, baseType: !636, size: 64, offset: 128)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !639, file: !142, line: 3374, baseType: !681, size: 320)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !142, line: 1384, size: 320, elements: !682)
!682 = !{!683, !684}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !681, file: !142, line: 1385, baseType: !675, size: 192)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !681, file: !142, line: 1386, baseType: !685, size: 128, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !686, line: 58, baseType: !687)
!686 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 54, size: 128, elements: !688)
!688 = !{!689, !690}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !687, file: !686, line: 56, baseType: !635, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !687, file: !686, line: 57, baseType: !691, size: 64, offset: 64)
!691 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !639, file: !142, line: 3375, baseType: !693, size: 256)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !142, line: 1397, size: 256, elements: !694)
!694 = !{!695, !696}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !693, file: !142, line: 1398, baseType: !675, size: 192)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !693, file: !142, line: 1399, baseType: !697, size: 64, offset: 192)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !699, line: 52, size: 256, elements: !700)
!699 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!700 = !{!701, !702, !703, !704, !705, !706, !707}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !698, file: !699, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !698, file: !699, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !698, file: !699, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !698, file: !699, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !698, file: !699, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !698, file: !699, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !698, file: !699, line: 62, baseType: !708, size: 192, offset: 64)
!708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !635, size: 192, elements: !709)
!709 = !{!710}
!710 = !DISubrange(count: 3)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !639, file: !142, line: 3376, baseType: !712, size: 256)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !142, line: 1408, size: 256, elements: !713)
!713 = !{!714, !715}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !712, file: !142, line: 1409, baseType: !675, size: 192)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !712, file: !142, line: 1410, baseType: !716, size: 64, offset: 192)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !718, line: 27, size: 192, elements: !719)
!718 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!719 = !{!720, !721}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !717, file: !718, line: 29, baseType: !685, size: 128)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !717, file: !718, line: 30, baseType: !5, size: 32, offset: 128)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !639, file: !142, line: 3377, baseType: !723, size: 256)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !142, line: 1437, size: 256, elements: !724)
!724 = !{!725, !726}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !723, file: !142, line: 1438, baseType: !675, size: 192)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !723, file: !142, line: 1439, baseType: !636, size: 64, offset: 192)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !639, file: !142, line: 3378, baseType: !728, size: 256)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !142, line: 1418, size: 256, elements: !729)
!729 = !{!730, !731, !732}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !728, file: !142, line: 1419, baseType: !675, size: 192)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !728, file: !142, line: 1420, baseType: !627, size: 32, offset: 192)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !728, file: !142, line: 1421, baseType: !733, size: 8, offset: 224)
!733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 8, elements: !734)
!734 = !{!735}
!735 = !DISubrange(count: 1)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !639, file: !142, line: 3379, baseType: !737, size: 320)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !142, line: 1428, size: 320, elements: !738)
!738 = !{!739, !740, !741}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !737, file: !142, line: 1429, baseType: !675, size: 192)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !737, file: !142, line: 1430, baseType: !636, size: 64, offset: 192)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !737, file: !142, line: 1431, baseType: !636, size: 64, offset: 256)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !639, file: !142, line: 3380, baseType: !743, size: 320)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !142, line: 1460, size: 320, elements: !744)
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !743, file: !142, line: 1461, baseType: !675, size: 192)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !743, file: !142, line: 1462, baseType: !747, size: 128, offset: 192)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !748, line: 31, size: 128, elements: !749)
!748 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!749 = !{!750, !753, !754}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !747, file: !748, line: 32, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !626)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !747, file: !748, line: 33, baseType: !7, size: 32, offset: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !747, file: !748, line: 34, baseType: !7, size: 32, offset: 96)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !639, file: !142, line: 3381, baseType: !756, size: 384)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !142, line: 2507, size: 384, elements: !757)
!757 = !{!758, !759, !764, !765, !766}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !756, file: !142, line: 2508, baseType: !675, size: 192)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !756, file: !142, line: 2509, baseType: !760, size: 32, offset: 192)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !761, line: 58, baseType: !762)
!761 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !763, line: 44, baseType: !7)
!763 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!764 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !756, file: !142, line: 2510, baseType: !7, size: 32, offset: 224)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !756, file: !142, line: 2511, baseType: !636, size: 64, offset: 256)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !756, file: !142, line: 2512, baseType: !636, size: 64, offset: 320)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !639, file: !142, line: 3382, baseType: !768, size: 896)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !142, line: 2652, size: 896, elements: !769)
!769 = !{!770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !768, file: !142, line: 2653, baseType: !756, size: 384)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !768, file: !142, line: 2654, baseType: !636, size: 64, offset: 384)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !768, file: !142, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !768, file: !142, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !768, file: !142, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !768, file: !142, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !768, file: !142, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !768, file: !142, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !768, file: !142, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !768, file: !142, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !768, file: !142, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !768, file: !142, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !768, file: !142, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !768, file: !142, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !768, file: !142, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !768, file: !142, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !768, file: !142, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !768, file: !142, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !768, file: !142, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !768, file: !142, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !768, file: !142, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !768, file: !142, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !768, file: !142, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !768, file: !142, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !768, file: !142, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !768, file: !142, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !768, file: !142, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !768, file: !142, line: 2703, baseType: !7, size: 32, offset: 512)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !768, file: !142, line: 2705, baseType: !636, size: 64, offset: 576)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !768, file: !142, line: 2706, baseType: !636, size: 64, offset: 640)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !768, file: !142, line: 2707, baseType: !636, size: 64, offset: 704)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !768, file: !142, line: 2708, baseType: !636, size: 64, offset: 768)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !768, file: !142, line: 2711, baseType: !803, size: 64, offset: 832)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !142, line: 2711, flags: DIFlagFwdDecl)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !639, file: !142, line: 3383, baseType: !806, size: 960)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !142, line: 2756, size: 960, elements: !807)
!807 = !{!808, !809}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !806, file: !142, line: 2757, baseType: !768, size: 896)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !806, file: !142, line: 2758, baseType: !810, size: 64, offset: 896)
!810 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !637, line: 50, baseType: !811)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !385, line: 240, size: 384, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !812, file: !385, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !812, file: !385, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !812, file: !385, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !812, file: !385, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !812, file: !385, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !812, file: !385, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !812, file: !385, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !812, file: !385, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !812, file: !385, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !812, file: !385, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !812, file: !385, line: 321, baseType: !825, size: 320, offset: 64)
!825 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !385, line: 315, size: 320, elements: !826)
!826 = !{!827, !1229, !1231, !1294, !1295}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !825, file: !385, line: 316, baseType: !828, size: 64)
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 64, elements: !734)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !385, line: 183, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !385, line: 166, size: 64, elements: !831)
!831 = !{!832, !833, !834, !835, !836, !844, !845, !857, !860, !920, !921, !1206, !1219, !1226}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !830, file: !385, line: 168, baseType: !627, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !830, file: !385, line: 169, baseType: !7, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !830, file: !385, line: 170, baseType: !632, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !830, file: !385, line: 171, baseType: !810, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !830, file: !385, line: 172, baseType: !837, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !637, line: 53, baseType: !838)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !385, line: 359, size: 128, elements: !840)
!840 = !{!841, !842}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !839, file: !385, line: 360, baseType: !627, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !839, file: !385, line: 361, baseType: !843, size: 64, offset: 64)
!843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !810, size: 64, elements: !734)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !830, file: !385, line: 173, baseType: !5, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !830, file: !385, line: 174, baseType: !846, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !385, line: 133, baseType: !847)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !385, line: 115, size: 32, elements: !848)
!848 = !{!849, !850, !851, !852, !853, !854, !855, !856}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !847, file: !385, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !847, file: !385, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !847, file: !385, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !847, file: !385, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !847, file: !385, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !847, file: !385, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !847, file: !385, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !847, file: !385, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !830, file: !385, line: 175, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !385, line: 175, flags: DIFlagFwdDecl)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !830, file: !385, line: 176, baseType: !861, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !863, line: 75, size: 256, elements: !864)
!863 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!864 = !{!865, !879, !880, !881}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !862, file: !863, line: 76, baseType: !866, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !863, line: 68, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !863, line: 63, size: 320, elements: !869)
!869 = !{!870, !872, !873, !874}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !868, file: !863, line: 64, baseType: !871, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !868, file: !863, line: 65, baseType: !871, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !868, file: !863, line: 66, baseType: !7, size: 32, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !868, file: !863, line: 67, baseType: !875, size: 128, offset: 192)
!875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !876, size: 128, elements: !877)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !863, line: 29, baseType: !635)
!877 = !{!878}
!878 = !DISubrange(count: 2)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !862, file: !863, line: 77, baseType: !866, size: 64, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !862, file: !863, line: 78, baseType: !7, size: 32, offset: 128)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !862, file: !863, line: 79, baseType: !882, size: 64, offset: 192)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !863, line: 49, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !863, line: 45, size: 832, elements: !885)
!885 = !{!886, !887, !888}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !884, file: !863, line: 46, baseType: !871, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !884, file: !863, line: 47, baseType: !861, size: 64, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !884, file: !863, line: 48, baseType: !889, size: 704, offset: 128)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !890, line: 164, size: 704, elements: !891)
!890 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!891 = !{!892, !893, !903, !904, !905, !906, !907, !908, !912, !916, !917, !918, !919}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !889, file: !890, line: 166, baseType: !691, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !889, file: !890, line: 167, baseType: !894, size: 64, offset: 64)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !890, line: 157, size: 192, elements: !896)
!896 = !{!897, !898, !899}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !895, file: !890, line: 159, baseType: !629, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !895, file: !890, line: 160, baseType: !894, size: 64, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !895, file: !890, line: 161, baseType: !900, size: 32, offset: 128)
!900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 32, elements: !901)
!901 = !{!902}
!902 = !DISubrange(count: 4)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !889, file: !890, line: 168, baseType: !629, size: 64, offset: 128)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !889, file: !890, line: 169, baseType: !629, size: 64, offset: 192)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !889, file: !890, line: 170, baseType: !629, size: 64, offset: 256)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !889, file: !890, line: 171, baseType: !691, size: 64, offset: 320)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !889, file: !890, line: 172, baseType: !627, size: 32, offset: 384)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !889, file: !890, line: 176, baseType: !909, size: 64, offset: 448)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{!894, !631, !691}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !889, file: !890, line: 177, baseType: !913, size: 64, offset: 512)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{null, !631, !894}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !889, file: !890, line: 178, baseType: !631, size: 64, offset: 576)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !889, file: !890, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !889, file: !890, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !889, file: !890, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !830, file: !385, line: 177, baseType: !636, size: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !830, file: !385, line: 178, baseType: !922, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !337, line: 217, size: 832, elements: !924)
!924 = !{!925, !1171, !1172, !1173, !1176, !1180, !1181, !1182, !1200, !1201, !1202, !1203, !1204, !1205}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !923, file: !337, line: 219, baseType: !926, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !337, line: 151, baseType: !928)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !337, line: 151, size: 128, elements: !929)
!929 = !{!930}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !928, file: !337, line: 151, baseType: !931, size: 128)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !337, line: 150, baseType: !932)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !337, line: 150, size: 128, elements: !933)
!933 = !{!934, !935, !936}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !932, file: !337, line: 150, baseType: !7, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !932, file: !337, line: 150, baseType: !7, size: 32, offset: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !932, file: !337, line: 150, baseType: !937, size: 64, offset: 64)
!937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 64, elements: !734)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !637, line: 108, baseType: !939)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !337, line: 122, size: 512, elements: !941)
!941 = !{!942, !943, !944, !1163, !1164, !1165, !1166, !1167, !1168, !1169}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !940, file: !337, line: 124, baseType: !922, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !940, file: !337, line: 125, baseType: !922, size: 64, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !940, file: !337, line: 131, baseType: !945, size: 64, offset: 128)
!945 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !337, line: 128, size: 64, elements: !946)
!946 = !{!947, !1162}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !945, file: !337, line: 129, baseType: !948, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !637, line: 66, baseType: !949)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !550, line: 143, size: 192, elements: !951)
!951 = !{!952, !1160, !1161}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !950, file: !550, line: 145, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !637, line: 69, baseType: !954)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !550, line: 136, size: 192, elements: !956)
!956 = !{!957, !1158, !1159}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !955, file: !550, line: 137, baseType: !958, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !637, line: 58, baseType: !959)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !550, line: 737, size: 768, elements: !961)
!961 = !{!962, !979, !1013, !1019, !1024, !1029, !1036, !1042, !1048, !1053, !1067, !1072, !1078, !1083, !1093, !1098, !1116, !1123, !1130, !1136, !1141, !1147, !1153}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !960, file: !550, line: 738, baseType: !963, size: 256)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !550, line: 271, size: 256, elements: !964)
!964 = !{!965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !963, file: !550, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !963, file: !550, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !963, file: !550, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !963, file: !550, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !963, file: !550, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !963, file: !550, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !963, file: !550, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !963, file: !550, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !963, file: !550, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !963, file: !550, line: 312, baseType: !7, size: 32, offset: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !963, file: !550, line: 316, baseType: !760, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !963, file: !550, line: 319, baseType: !7, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !963, file: !550, line: 323, baseType: !922, size: 64, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !963, file: !550, line: 327, baseType: !636, size: 64, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !960, file: !550, line: 739, baseType: !980, size: 448)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !550, line: 350, size: 448, elements: !981)
!981 = !{!982, !1011}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !980, file: !550, line: 353, baseType: !983, size: 384)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !550, line: 333, size: 384, elements: !984)
!984 = !{!985, !986, !994}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !983, file: !550, line: 336, baseType: !963, size: 256)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !983, file: !550, line: 343, baseType: !987, size: 64, offset: 256)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !989, line: 37, size: 128, elements: !990)
!989 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!990 = !{!991, !992}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !988, file: !989, line: 39, baseType: !987, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !988, file: !989, line: 40, baseType: !993, size: 64, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !983, file: !550, line: 344, baseType: !995, size: 64, offset: 320)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !989, line: 45, size: 320, elements: !997)
!997 = !{!998, !999}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !996, file: !989, line: 47, baseType: !995, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !996, file: !989, line: 48, baseType: !1000, size: 256, offset: 64)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !142, line: 1883, size: 256, elements: !1001)
!1001 = !{!1002, !1004, !1005, !1010}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1000, file: !142, line: 1884, baseType: !1003, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1000, file: !142, line: 1885, baseType: !1003, size: 64, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1000, file: !142, line: 1891, baseType: !1006, size: 64, offset: 128)
!1006 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1000, file: !142, line: 1891, size: 64, elements: !1007)
!1007 = !{!1008, !1009}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1006, file: !142, line: 1891, baseType: !958, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1006, file: !142, line: 1891, baseType: !636, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1000, file: !142, line: 1892, baseType: !993, size: 64, offset: 192)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !980, file: !550, line: 359, baseType: !1012, size: 64, offset: 384)
!1012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !636, size: 64, elements: !734)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !960, file: !550, line: 740, baseType: !1014, size: 512)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !550, line: 365, size: 512, elements: !1015)
!1015 = !{!1016, !1017, !1018}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1014, file: !550, line: 368, baseType: !983, size: 384)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1014, file: !550, line: 373, baseType: !636, size: 64, offset: 384)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1014, file: !550, line: 374, baseType: !636, size: 64, offset: 448)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !960, file: !550, line: 741, baseType: !1020, size: 576)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !550, line: 380, size: 576, elements: !1021)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1020, file: !550, line: 383, baseType: !1014, size: 512)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1020, file: !550, line: 389, baseType: !1012, size: 64, offset: 512)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !960, file: !550, line: 742, baseType: !1025, size: 320)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !550, line: 395, size: 320, elements: !1026)
!1026 = !{!1027, !1028}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1025, file: !550, line: 397, baseType: !963, size: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1025, file: !550, line: 400, baseType: !948, size: 64, offset: 256)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !960, file: !550, line: 743, baseType: !1030, size: 448)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !550, line: 406, size: 448, elements: !1031)
!1031 = !{!1032, !1033, !1034, !1035}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1030, file: !550, line: 408, baseType: !963, size: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1030, file: !550, line: 412, baseType: !636, size: 64, offset: 256)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1030, file: !550, line: 420, baseType: !636, size: 64, offset: 320)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1030, file: !550, line: 423, baseType: !948, size: 64, offset: 384)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !960, file: !550, line: 744, baseType: !1037, size: 384)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !550, line: 429, size: 384, elements: !1038)
!1038 = !{!1039, !1040, !1041}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1037, file: !550, line: 431, baseType: !963, size: 256)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1037, file: !550, line: 434, baseType: !636, size: 64, offset: 256)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1037, file: !550, line: 437, baseType: !948, size: 64, offset: 320)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !960, file: !550, line: 745, baseType: !1043, size: 384)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !550, line: 443, size: 384, elements: !1044)
!1044 = !{!1045, !1046, !1047}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1043, file: !550, line: 445, baseType: !963, size: 256)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1043, file: !550, line: 449, baseType: !636, size: 64, offset: 256)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1043, file: !550, line: 453, baseType: !948, size: 64, offset: 320)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !960, file: !550, line: 746, baseType: !1049, size: 320)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !550, line: 459, size: 320, elements: !1050)
!1050 = !{!1051, !1052}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1049, file: !550, line: 461, baseType: !963, size: 256)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1049, file: !550, line: 464, baseType: !636, size: 64, offset: 256)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !960, file: !550, line: 747, baseType: !1054, size: 768)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !550, line: 469, size: 768, elements: !1055)
!1055 = !{!1056, !1057, !1058, !1059, !1060}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1054, file: !550, line: 471, baseType: !963, size: 256)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1054, file: !550, line: 474, baseType: !7, size: 32, offset: 256)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1054, file: !550, line: 475, baseType: !7, size: 32, offset: 288)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1054, file: !550, line: 478, baseType: !636, size: 64, offset: 320)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1054, file: !550, line: 481, baseType: !1061, size: 384, offset: 384)
!1061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1062, size: 384, elements: !734)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !142, line: 1917, size: 384, elements: !1063)
!1063 = !{!1064, !1065, !1066}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1062, file: !142, line: 1920, baseType: !1000, size: 256)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1062, file: !142, line: 1921, baseType: !636, size: 64, offset: 256)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1062, file: !142, line: 1922, baseType: !760, size: 32, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !960, file: !550, line: 748, baseType: !1068, size: 320)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !550, line: 487, size: 320, elements: !1069)
!1069 = !{!1070, !1071}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1068, file: !550, line: 490, baseType: !963, size: 256)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1068, file: !550, line: 494, baseType: !627, size: 32, offset: 256)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !960, file: !550, line: 749, baseType: !1073, size: 384)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !550, line: 500, size: 384, elements: !1074)
!1074 = !{!1075, !1076, !1077}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1073, file: !550, line: 502, baseType: !963, size: 256)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1073, file: !550, line: 506, baseType: !948, size: 64, offset: 256)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1073, file: !550, line: 510, baseType: !948, size: 64, offset: 320)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !960, file: !550, line: 750, baseType: !1079, size: 320)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !550, line: 529, size: 320, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1079, file: !550, line: 531, baseType: !963, size: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1079, file: !550, line: 540, baseType: !948, size: 64, offset: 256)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !960, file: !550, line: 751, baseType: !1084, size: 704)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !550, line: 546, size: 704, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089, !1090, !1091, !1092}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1084, file: !550, line: 549, baseType: !1014, size: 512)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1084, file: !550, line: 553, baseType: !632, size: 64, offset: 512)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1084, file: !550, line: 557, baseType: !626, size: 8, offset: 576)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1084, file: !550, line: 558, baseType: !626, size: 8, offset: 584)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1084, file: !550, line: 559, baseType: !626, size: 8, offset: 592)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1084, file: !550, line: 560, baseType: !626, size: 8, offset: 600)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1084, file: !550, line: 566, baseType: !1012, size: 64, offset: 640)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !960, file: !550, line: 752, baseType: !1094, size: 384)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !550, line: 571, size: 384, elements: !1095)
!1095 = !{!1096, !1097}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1094, file: !550, line: 573, baseType: !1025, size: 320)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1094, file: !550, line: 577, baseType: !636, size: 64, offset: 320)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !960, file: !550, line: 753, baseType: !1099, size: 576)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !550, line: 600, size: 576, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1106, !1115}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1099, file: !550, line: 602, baseType: !1025, size: 320)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1099, file: !550, line: 605, baseType: !636, size: 64, offset: 320)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1099, file: !550, line: 609, baseType: !1104, size: 64, offset: 384)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1105, line: 46, baseType: !635)
!1105 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1099, file: !550, line: 612, baseType: !1107, size: 64, offset: 448)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !550, line: 581, size: 320, elements: !1109)
!1109 = !{!1110, !1111, !1112, !1113, !1114}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1108, file: !550, line: 583, baseType: !141, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1108, file: !550, line: 586, baseType: !636, size: 64, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1108, file: !550, line: 589, baseType: !636, size: 64, offset: 128)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1108, file: !550, line: 592, baseType: !636, size: 64, offset: 192)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1108, file: !550, line: 595, baseType: !636, size: 64, offset: 256)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1099, file: !550, line: 616, baseType: !948, size: 64, offset: 512)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !960, file: !550, line: 754, baseType: !1117, size: 512)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !550, line: 622, size: 512, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1122}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1117, file: !550, line: 624, baseType: !1025, size: 320)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1117, file: !550, line: 628, baseType: !636, size: 64, offset: 320)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1117, file: !550, line: 632, baseType: !636, size: 64, offset: 384)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1117, file: !550, line: 636, baseType: !636, size: 64, offset: 448)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !960, file: !550, line: 755, baseType: !1124, size: 704)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !550, line: 642, size: 704, elements: !1125)
!1125 = !{!1126, !1127, !1128, !1129}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1124, file: !550, line: 644, baseType: !1117, size: 512)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1124, file: !550, line: 648, baseType: !636, size: 64, offset: 512)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1124, file: !550, line: 652, baseType: !636, size: 64, offset: 576)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1124, file: !550, line: 653, baseType: !636, size: 64, offset: 640)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !960, file: !550, line: 756, baseType: !1131, size: 448)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !550, line: 663, size: 448, elements: !1132)
!1132 = !{!1133, !1134, !1135}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1131, file: !550, line: 665, baseType: !1025, size: 320)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1131, file: !550, line: 668, baseType: !636, size: 64, offset: 320)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1131, file: !550, line: 673, baseType: !636, size: 64, offset: 384)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !960, file: !550, line: 757, baseType: !1137, size: 384)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !550, line: 694, size: 384, elements: !1138)
!1138 = !{!1139, !1140}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1137, file: !550, line: 696, baseType: !1025, size: 320)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1137, file: !550, line: 699, baseType: !636, size: 64, offset: 320)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !960, file: !550, line: 758, baseType: !1142, size: 384)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !550, line: 681, size: 384, elements: !1143)
!1143 = !{!1144, !1145, !1146}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1142, file: !550, line: 683, baseType: !963, size: 256)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1142, file: !550, line: 686, baseType: !636, size: 64, offset: 256)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1142, file: !550, line: 689, baseType: !636, size: 64, offset: 320)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !960, file: !550, line: 759, baseType: !1148, size: 384)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !550, line: 707, size: 384, elements: !1149)
!1149 = !{!1150, !1151, !1152}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1148, file: !550, line: 709, baseType: !963, size: 256)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1148, file: !550, line: 712, baseType: !636, size: 64, offset: 256)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1148, file: !550, line: 712, baseType: !636, size: 64, offset: 320)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !960, file: !550, line: 760, baseType: !1154, size: 320)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !550, line: 718, size: 320, elements: !1155)
!1155 = !{!1156, !1157}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1154, file: !550, line: 720, baseType: !963, size: 256)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1154, file: !550, line: 723, baseType: !636, size: 64, offset: 256)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !955, file: !550, line: 138, baseType: !954, size: 64, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !955, file: !550, line: 139, baseType: !954, size: 64, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !950, file: !550, line: 146, baseType: !953, size: 64, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !950, file: !550, line: 152, baseType: !948, size: 64, offset: 128)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !945, file: !337, line: 130, baseType: !810, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !940, file: !337, line: 134, baseType: !631, size: 64, offset: 192)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !940, file: !337, line: 137, baseType: !636, size: 64, offset: 256)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !940, file: !337, line: 138, baseType: !760, size: 32, offset: 320)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !940, file: !337, line: 142, baseType: !7, size: 32, offset: 352)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !940, file: !337, line: 144, baseType: !627, size: 32, offset: 384)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !940, file: !337, line: 145, baseType: !627, size: 32, offset: 416)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !940, file: !337, line: 146, baseType: !1170, size: 64, offset: 448)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !337, line: 119, baseType: !691)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !923, file: !337, line: 220, baseType: !926, size: 64, offset: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !923, file: !337, line: 223, baseType: !631, size: 64, offset: 128)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !923, file: !337, line: 226, baseType: !1174, size: 64, offset: 192)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !337, line: 185, flags: DIFlagFwdDecl)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !923, file: !337, line: 229, baseType: !1177, size: 128, offset: 256)
!1177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1178, size: 128, elements: !877)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !337, line: 229, flags: DIFlagFwdDecl)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !923, file: !337, line: 232, baseType: !922, size: 64, offset: 384)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !923, file: !337, line: 233, baseType: !922, size: 64, offset: 448)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !923, file: !337, line: 238, baseType: !1183, size: 64, offset: 512)
!1183 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !337, line: 235, size: 64, elements: !1184)
!1184 = !{!1185, !1191}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1183, file: !337, line: 236, baseType: !1186, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !337, line: 273, size: 128, elements: !1188)
!1188 = !{!1189, !1190}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1187, file: !337, line: 275, baseType: !948, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1187, file: !337, line: 278, baseType: !948, size: 64, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1183, file: !337, line: 237, baseType: !1192, size: 64)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !337, line: 259, size: 320, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198, !1199}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1193, file: !337, line: 261, baseType: !810, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1193, file: !337, line: 262, baseType: !810, size: 64, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1193, file: !337, line: 266, baseType: !810, size: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1193, file: !337, line: 267, baseType: !810, size: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1193, file: !337, line: 270, baseType: !627, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !923, file: !337, line: 241, baseType: !1170, size: 64, offset: 576)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !923, file: !337, line: 244, baseType: !627, size: 32, offset: 640)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !923, file: !337, line: 247, baseType: !627, size: 32, offset: 672)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !923, file: !337, line: 250, baseType: !627, size: 32, offset: 704)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !923, file: !337, line: 253, baseType: !627, size: 32, offset: 736)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !923, file: !337, line: 256, baseType: !627, size: 32, offset: 768)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !830, file: !385, line: 179, baseType: !1207, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !385, line: 150, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !385, line: 142, size: 320, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1217, !1218}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1209, file: !385, line: 144, baseType: !636, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1209, file: !385, line: 145, baseType: !810, size: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1209, file: !385, line: 146, baseType: !810, size: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1209, file: !385, line: 147, baseType: !1215, size: 32, offset: 192)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1216, line: 31, baseType: !627)
!1216 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1209, file: !385, line: 148, baseType: !7, size: 32, offset: 224)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1209, file: !385, line: 149, baseType: !626, size: 8, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !830, file: !385, line: 180, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !385, line: 162, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !385, line: 159, size: 128, elements: !1223)
!1223 = !{!1224, !1225}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1222, file: !385, line: 160, baseType: !636, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1222, file: !385, line: 161, baseType: !691, size: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !830, file: !385, line: 181, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !385, line: 181, flags: DIFlagFwdDecl)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !825, file: !385, line: 317, baseType: !1230, size: 64)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 64, elements: !734)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !825, file: !385, line: 318, baseType: !1232, size: 320)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !385, line: 188, size: 320, elements: !1233)
!1233 = !{!1234, !1236, !1293}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1232, file: !385, line: 190, baseType: !1235, size: 192)
!1235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 192, elements: !709)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1232, file: !385, line: 193, baseType: !1237, size: 64, offset: 192)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !385, line: 206, size: 320, elements: !1239)
!1239 = !{!1240, !1278, !1279, !1280, !1292}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1238, file: !385, line: 208, baseType: !1241, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !637, line: 62, baseType: !1243)
!1243 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1244, line: 538, size: 256, elements: !1245)
!1244 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1245 = !{!1246, !1250, !1256, !1269}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1243, file: !1244, line: 539, baseType: !1247, size: 32)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1244, line: 482, size: 32, elements: !1248)
!1248 = !{!1249}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1247, file: !1244, line: 484, baseType: !7, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1243, file: !1244, line: 540, baseType: !1251, size: 192)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1244, line: 488, size: 192, elements: !1252)
!1252 = !{!1253, !1254, !1255}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1251, file: !1244, line: 489, baseType: !1247, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1251, file: !1244, line: 492, baseType: !632, size: 64, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1251, file: !1244, line: 496, baseType: !636, size: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1243, file: !1244, line: 541, baseType: !1257, size: 256)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1244, line: 504, size: 256, elements: !1258)
!1258 = !{!1259, !1260, !1267, !1268}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1257, file: !1244, line: 505, baseType: !1247, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1257, file: !1244, line: 509, baseType: !1261, size: 64, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1244, line: 501, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{null, !1265}
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1257, file: !1244, line: 510, baseType: !1265, size: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1257, file: !1244, line: 513, baseType: !1241, size: 64, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1243, file: !1244, line: 542, baseType: !1270, size: 128)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1244, line: 530, size: 128, elements: !1271)
!1271 = !{!1272, !1273}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1270, file: !1244, line: 531, baseType: !1247, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1270, file: !1244, line: 534, baseType: !1274, size: 64, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1244, line: 525, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!626, !636, !632, !635, !635}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1238, file: !385, line: 211, baseType: !7, size: 32, offset: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1238, file: !385, line: 214, baseType: !691, size: 64, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1238, file: !385, line: 224, baseType: !1281, size: 64, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !385, line: 202, baseType: !1283)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !385, line: 202, size: 128, elements: !1284)
!1284 = !{!1285}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1283, file: !385, line: 202, baseType: !1286, size: 128)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !385, line: 200, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !385, line: 200, size: 128, elements: !1288)
!1288 = !{!1289, !1290, !1291}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1287, file: !385, line: 200, baseType: !7, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1287, file: !385, line: 200, baseType: !7, size: 32, offset: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1287, file: !385, line: 200, baseType: !843, size: 64, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1238, file: !385, line: 234, baseType: !1281, size: 64, offset: 256)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1232, file: !385, line: 197, baseType: !691, size: 64, offset: 256)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !825, file: !385, line: 319, baseType: !698, size: 256)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !825, file: !385, line: 320, baseType: !717, size: 192)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !639, file: !142, line: 3384, baseType: !1297, size: 1472)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !142, line: 3114, size: 1472, elements: !1298)
!1298 = !{!1299, !1320, !1321, !1322, !1323}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1297, file: !142, line: 3115, baseType: !1300, size: 1216)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !142, line: 2984, size: 1216, elements: !1301)
!1301 = !{!1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1300, file: !142, line: 2985, baseType: !806, size: 960)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1300, file: !142, line: 2986, baseType: !636, size: 64, offset: 960)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1300, file: !142, line: 2987, baseType: !636, size: 64, offset: 1024)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1300, file: !142, line: 2988, baseType: !636, size: 64, offset: 1088)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1300, file: !142, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1300, file: !142, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1300, file: !142, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1300, file: !142, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1300, file: !142, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1300, file: !142, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1300, file: !142, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1300, file: !142, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1300, file: !142, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1300, file: !142, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1300, file: !142, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1300, file: !142, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1300, file: !142, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1300, file: !142, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1297, file: !142, line: 3117, baseType: !636, size: 64, offset: 1216)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1297, file: !142, line: 3119, baseType: !636, size: 64, offset: 1280)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1297, file: !142, line: 3121, baseType: !636, size: 64, offset: 1344)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1297, file: !142, line: 3123, baseType: !636, size: 64, offset: 1408)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !639, file: !142, line: 3385, baseType: !1325, size: 1088)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !142, line: 2874, size: 1088, elements: !1326)
!1326 = !{!1327, !1328, !1329}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1325, file: !142, line: 2875, baseType: !806, size: 960)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1325, file: !142, line: 2876, baseType: !810, size: 64, offset: 960)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1325, file: !142, line: 2877, baseType: !1330, size: 64, offset: 1024)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !142, line: 2856, flags: DIFlagFwdDecl)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !639, file: !142, line: 3386, baseType: !1300, size: 1216)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !639, file: !142, line: 3387, baseType: !1334, size: 1280)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !142, line: 3093, size: 1280, elements: !1335)
!1335 = !{!1336, !1337}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1334, file: !142, line: 3094, baseType: !1300, size: 1216)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1334, file: !142, line: 3095, baseType: !1330, size: 64, offset: 1216)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !639, file: !142, line: 3388, baseType: !1339, size: 1216)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !142, line: 2824, size: 1216, elements: !1340)
!1340 = !{!1341, !1342, !1343, !1344, !1345, !1346}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1339, file: !142, line: 2825, baseType: !768, size: 896)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1339, file: !142, line: 2827, baseType: !636, size: 64, offset: 896)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1339, file: !142, line: 2828, baseType: !636, size: 64, offset: 960)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1339, file: !142, line: 2829, baseType: !636, size: 64, offset: 1024)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1339, file: !142, line: 2830, baseType: !636, size: 64, offset: 1088)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1339, file: !142, line: 2831, baseType: !636, size: 64, offset: 1152)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !639, file: !142, line: 3389, baseType: !1348, size: 1024)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !142, line: 2850, size: 1024, elements: !1349)
!1349 = !{!1350, !1351, !1352}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1348, file: !142, line: 2851, baseType: !806, size: 960)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1348, file: !142, line: 2852, baseType: !627, size: 32, offset: 960)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1348, file: !142, line: 2853, baseType: !627, size: 32, offset: 992)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !639, file: !142, line: 3390, baseType: !1354, size: 1024)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !142, line: 2857, size: 1024, elements: !1355)
!1355 = !{!1356, !1357}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1354, file: !142, line: 2858, baseType: !806, size: 960)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1354, file: !142, line: 2859, baseType: !1330, size: 64, offset: 960)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !639, file: !142, line: 3391, baseType: !1359, size: 960)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !142, line: 2862, size: 960, elements: !1360)
!1360 = !{!1361}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1359, file: !142, line: 2863, baseType: !806, size: 960)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !639, file: !142, line: 3392, baseType: !1363, size: 1472)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !142, line: 3304, size: 1472, elements: !1364)
!1364 = !{!1365}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1363, file: !142, line: 3305, baseType: !1297, size: 1472)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !639, file: !142, line: 3393, baseType: !1367, size: 1792)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !142, line: 3248, size: 1792, elements: !1368)
!1368 = !{!1369, !1370, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1367, file: !142, line: 3249, baseType: !1297, size: 1472)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1367, file: !142, line: 3251, baseType: !1371, size: 64, offset: 1472)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1373, line: 463, size: 1152, elements: !1374)
!1373 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1374 = !{!1375, !1534, !1565, !1566, !1569, !1572, !1573, !1574, !1575, !1576, !1577, !1601, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1372, file: !1373, line: 464, baseType: !1376, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1378)
!1378 = !{!1379, !1428, !1441, !1455, !1503, !1515}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1377, file: !135, line: 197, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1381)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1383)
!1383 = !{!1384, !1385, !1386, !1387, !1388, !1389, !1416, !1425, !1426, !1427}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1382, file: !135, line: 119, baseType: !1381, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1382, file: !135, line: 122, baseType: !1381, size: 64, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1382, file: !135, line: 123, baseType: !1381, size: 64, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1382, file: !135, line: 126, baseType: !627, size: 32, offset: 192)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1382, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1382, file: !135, line: 165, baseType: !1390, size: 192, offset: 256)
!1390 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1391)
!1391 = !{!1392, !1405, !1411}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1390, file: !135, line: 137, baseType: !1393, size: 128)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1394)
!1394 = !{!1395, !1404}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1393, file: !135, line: 135, baseType: !1396, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1398)
!1398 = !{!1399, !1400, !1401, !1402, !1403}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1397, file: !135, line: 96, baseType: !1396, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1397, file: !135, line: 97, baseType: !1396, size: 64, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1397, file: !135, line: 101, baseType: !636, size: 64, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1397, file: !135, line: 106, baseType: !636, size: 64, offset: 192)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1397, file: !135, line: 111, baseType: !636, size: 64, offset: 256)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1393, file: !135, line: 136, baseType: !1396, size: 64, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1390, file: !135, line: 151, baseType: !1406, size: 192)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1407)
!1407 = !{!1408, !1409, !1410}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1406, file: !135, line: 141, baseType: !636, size: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1406, file: !135, line: 145, baseType: !636, size: 64, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1406, file: !135, line: 150, baseType: !627, size: 32, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1390, file: !135, line: 164, baseType: !1412, size: 128)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1413)
!1413 = !{!1414, !1415}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1412, file: !135, line: 161, baseType: !636, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1412, file: !135, line: 163, baseType: !760, size: 32, offset: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1382, file: !135, line: 168, baseType: !1417, size: 64, offset: 448)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1423, !1424}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1418, file: !135, line: 70, baseType: !1417, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1418, file: !135, line: 73, baseType: !1381, size: 64, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1418, file: !135, line: 78, baseType: !636, size: 64, offset: 128)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1418, file: !135, line: 85, baseType: !810, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1418, file: !135, line: 88, baseType: !627, size: 32, offset: 256)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1382, file: !135, line: 173, baseType: !810, size: 64, offset: 512)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1382, file: !135, line: 173, baseType: !810, size: 64, offset: 576)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1382, file: !135, line: 177, baseType: !626, size: 8, offset: 640)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1377, file: !135, line: 200, baseType: !1429, size: 64, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1432)
!1432 = !{!1433}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1431, file: !135, line: 185, baseType: !1434, size: 128)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1435)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1436)
!1436 = !{!1437, !1438, !1439}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1435, file: !135, line: 184, baseType: !7, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1435, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1435, file: !135, line: 184, baseType: !1440, size: 64, offset: 64)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, size: 64, elements: !734)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1377, file: !135, line: 203, baseType: !1442, size: 64, offset: 128)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1444)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1445)
!1445 = !{!1446}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1444, file: !135, line: 189, baseType: !1447, size: 128)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1448)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1449)
!1449 = !{!1450, !1451, !1452}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1448, file: !135, line: 188, baseType: !7, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1448, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1448, file: !135, line: 188, baseType: !1453, size: 64, offset: 64)
!1453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1454, size: 64, elements: !734)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1417)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1377, file: !135, line: 207, baseType: !1456, size: 64, offset: 192)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1457, line: 144, baseType: !1458)
!1457 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1457, line: 100, size: 896, elements: !1460)
!1460 = !{!1461, !1467, !1472, !1477, !1479, !1480, !1481, !1482, !1483, !1484, !1489, !1491, !1492, !1497, !1502}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1459, file: !1457, line: 102, baseType: !1462, size: 64)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1457, line: 52, baseType: !1463)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!1466, !1265}
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1457, line: 47, baseType: !7)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1459, file: !1457, line: 105, baseType: !1468, size: 64, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1457, line: 59, baseType: !1469)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!627, !1265, !1265}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1459, file: !1457, line: 108, baseType: !1473, size: 64, offset: 128)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1457, line: 63, baseType: !1474)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{null, !631}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1459, file: !1457, line: 111, baseType: !1478, size: 64, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1459, file: !1457, line: 114, baseType: !1104, size: 64, offset: 256)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1459, file: !1457, line: 117, baseType: !1104, size: 64, offset: 320)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1459, file: !1457, line: 120, baseType: !1104, size: 64, offset: 384)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1459, file: !1457, line: 124, baseType: !7, size: 32, offset: 448)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1459, file: !1457, line: 128, baseType: !7, size: 32, offset: 480)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1459, file: !1457, line: 131, baseType: !1485, size: 64, offset: 512)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1457, line: 75, baseType: !1486)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!631, !1104, !1104}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1459, file: !1457, line: 132, baseType: !1490, size: 64, offset: 576)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1457, line: 78, baseType: !1474)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1459, file: !1457, line: 135, baseType: !631, size: 64, offset: 640)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1459, file: !1457, line: 136, baseType: !1493, size: 64, offset: 704)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1457, line: 82, baseType: !1494)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!631, !631, !1104, !1104}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1459, file: !1457, line: 137, baseType: !1498, size: 64, offset: 768)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1457, line: 83, baseType: !1499)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{null, !631, !631}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1459, file: !1457, line: 141, baseType: !7, size: 32, offset: 832)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1377, file: !135, line: 211, baseType: !1504, size: 64, offset: 256)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !142, line: 183, baseType: !1506)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !142, line: 183, size: 128, elements: !1507)
!1507 = !{!1508}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1506, file: !142, line: 183, baseType: !1509, size: 128)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !142, line: 182, baseType: !1510)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !142, line: 182, size: 128, elements: !1511)
!1511 = !{!1512, !1513, !1514}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1510, file: !142, line: 182, baseType: !7, size: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1510, file: !142, line: 182, baseType: !7, size: 32, offset: 32)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1510, file: !142, line: 182, baseType: !1012, size: 64, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1377, file: !135, line: 220, baseType: !1516, size: 64, offset: 320)
!1516 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1517)
!1517 = !{!1518, !1519}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1516, file: !135, line: 218, baseType: !1504, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1516, file: !135, line: 219, baseType: !1520, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1522, line: 29, baseType: !1523)
!1522 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1522, line: 29, size: 96, elements: !1524)
!1524 = !{!1525}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1523, file: !1522, line: 29, baseType: !1526, size: 96)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1522, line: 27, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1522, line: 27, size: 96, elements: !1528)
!1528 = !{!1529, !1530, !1531}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1527, file: !1522, line: 27, baseType: !7, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1527, file: !1522, line: 27, baseType: !7, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1527, file: !1522, line: 27, baseType: !1532, size: 8, offset: 64)
!1532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 8, elements: !734)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1522, line: 26, baseType: !626)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1372, file: !1373, line: 467, baseType: !1535, size: 64, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !337, line: 374, size: 640, elements: !1537)
!1537 = !{!1538, !1540, !1541, !1554, !1555, !1556, !1557, !1558, !1559, !1561, !1563, !1564}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1536, file: !337, line: 377, baseType: !1539, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !637, line: 111, baseType: !922)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1536, file: !337, line: 378, baseType: !1539, size: 64, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1536, file: !337, line: 381, baseType: !1542, size: 64, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !337, line: 282, baseType: !1544)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !337, line: 282, size: 128, elements: !1545)
!1545 = !{!1546}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1544, file: !337, line: 282, baseType: !1547, size: 128)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !337, line: 281, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !337, line: 281, size: 128, elements: !1549)
!1549 = !{!1550, !1551, !1552}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1548, file: !337, line: 281, baseType: !7, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1548, file: !337, line: 281, baseType: !7, size: 32, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1548, file: !337, line: 281, baseType: !1553, size: 64, offset: 64)
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1539, size: 64, elements: !734)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1536, file: !337, line: 384, baseType: !627, size: 32, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1536, file: !337, line: 387, baseType: !627, size: 32, offset: 224)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1536, file: !337, line: 390, baseType: !627, size: 32, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1536, file: !337, line: 394, baseType: !1542, size: 64, offset: 320)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1536, file: !337, line: 396, baseType: !336, size: 32, offset: 384)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1536, file: !337, line: 399, baseType: !1560, size: 64, offset: 416)
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 64, elements: !877)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1536, file: !337, line: 402, baseType: !1562, size: 64, offset: 480)
!1562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !877)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1536, file: !337, line: 406, baseType: !627, size: 32, offset: 544)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1536, file: !337, line: 409, baseType: !627, size: 32, offset: 576)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1372, file: !1373, line: 470, baseType: !949, size: 64, offset: 128)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1372, file: !1373, line: 473, baseType: !1567, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1373, line: 166, flags: DIFlagFwdDecl)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1372, file: !1373, line: 476, baseType: !1570, size: 64, offset: 256)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1373, line: 476, flags: DIFlagFwdDecl)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1372, file: !1373, line: 479, baseType: !1456, size: 64, offset: 320)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1372, file: !1373, line: 484, baseType: !636, size: 64, offset: 384)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1372, file: !1373, line: 488, baseType: !636, size: 64, offset: 448)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1372, file: !1373, line: 493, baseType: !636, size: 64, offset: 512)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1372, file: !1373, line: 496, baseType: !636, size: 64, offset: 576)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1372, file: !1373, line: 501, baseType: !1578, size: 64, offset: 640)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !348, line: 2355, size: 576, elements: !1580)
!1580 = !{!1581, !1584, !1585, !1586, !1587, !1589, !1590, !1595, !1596, !1597, !1598, !1599, !1600}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1579, file: !348, line: 2356, baseType: !1582, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !348, line: 2356, flags: DIFlagFwdDecl)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1579, file: !348, line: 2357, baseType: !632, size: 64, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1579, file: !348, line: 2358, baseType: !627, size: 32, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1579, file: !348, line: 2359, baseType: !627, size: 32, offset: 160)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1579, file: !348, line: 2360, baseType: !1588, size: 128, offset: 192)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !627, size: 128, elements: !901)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1579, file: !348, line: 2364, baseType: !627, size: 32, offset: 320)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1579, file: !348, line: 2367, baseType: !1591, size: 128, offset: 384)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !348, line: 2349, size: 128, elements: !1592)
!1592 = !{!1593, !1594}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1591, file: !348, line: 2351, baseType: !810, size: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1591, file: !348, line: 2352, baseType: !691, size: 64, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1579, file: !348, line: 2371, baseType: !347, size: 32, offset: 512)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1579, file: !348, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1579, file: !348, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1579, file: !348, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1579, file: !348, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1579, file: !348, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1372, file: !1373, line: 504, baseType: !1602, size: 64, offset: 704)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1373, line: 504, flags: DIFlagFwdDecl)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1372, file: !1373, line: 507, baseType: !1456, size: 64, offset: 768)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1372, file: !1373, line: 510, baseType: !627, size: 32, offset: 832)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1372, file: !1373, line: 513, baseType: !627, size: 32, offset: 864)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1372, file: !1373, line: 516, baseType: !760, size: 32, offset: 896)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1372, file: !1373, line: 519, baseType: !760, size: 32, offset: 928)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1372, file: !1373, line: 522, baseType: !7, size: 32, offset: 960)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1372, file: !1373, line: 523, baseType: !7, size: 32, offset: 992)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1372, file: !1373, line: 528, baseType: !632, size: 64, offset: 1024)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1372, file: !1373, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1372, file: !1373, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1372, file: !1373, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1372, file: !1373, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1372, file: !1373, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1372, file: !1373, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1372, file: !1373, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1372, file: !1373, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1372, file: !1373, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1372, file: !1373, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1372, file: !1373, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1372, file: !1373, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1372, file: !1373, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1372, file: !1373, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1372, file: !1373, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1372, file: !1373, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1367, file: !142, line: 3254, baseType: !636, size: 64, offset: 1536)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1367, file: !142, line: 3257, baseType: !636, size: 64, offset: 1600)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1367, file: !142, line: 3258, baseType: !636, size: 64, offset: 1664)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1367, file: !142, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1367, file: !142, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1367, file: !142, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1367, file: !142, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1367, file: !142, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1367, file: !142, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1367, file: !142, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1367, file: !142, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1367, file: !142, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1367, file: !142, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1367, file: !142, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1367, file: !142, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1367, file: !142, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1367, file: !142, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1367, file: !142, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1367, file: !142, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1367, file: !142, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1367, file: !142, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !639, file: !142, line: 3394, baseType: !1650, size: 1344)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !142, line: 2279, size: 1344, elements: !1651)
!1651 = !{!1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1650, file: !142, line: 2280, baseType: !675, size: 192)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1650, file: !142, line: 2281, baseType: !636, size: 64, offset: 192)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1650, file: !142, line: 2282, baseType: !636, size: 64, offset: 256)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1650, file: !142, line: 2283, baseType: !636, size: 64, offset: 320)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1650, file: !142, line: 2284, baseType: !636, size: 64, offset: 384)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1650, file: !142, line: 2285, baseType: !7, size: 32, offset: 448)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1650, file: !142, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1650, file: !142, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1650, file: !142, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1650, file: !142, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1650, file: !142, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1650, file: !142, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1650, file: !142, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1650, file: !142, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1650, file: !142, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1650, file: !142, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1650, file: !142, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1650, file: !142, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1650, file: !142, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1650, file: !142, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1650, file: !142, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1650, file: !142, line: 2305, baseType: !7, size: 32, offset: 512)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1650, file: !142, line: 2306, baseType: !1215, size: 32, offset: 544)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1650, file: !142, line: 2307, baseType: !636, size: 64, offset: 576)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1650, file: !142, line: 2308, baseType: !636, size: 64, offset: 640)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1650, file: !142, line: 2314, baseType: !1678, size: 64, offset: 704)
!1678 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !142, line: 2309, size: 64, elements: !1679)
!1679 = !{!1680, !1681, !1682}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1678, file: !142, line: 2310, baseType: !627, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1678, file: !142, line: 2311, baseType: !632, size: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1678, file: !142, line: 2312, baseType: !1683, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !142, line: 2277, flags: DIFlagFwdDecl)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1650, file: !142, line: 2315, baseType: !636, size: 64, offset: 768)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1650, file: !142, line: 2316, baseType: !636, size: 64, offset: 832)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1650, file: !142, line: 2317, baseType: !636, size: 64, offset: 896)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1650, file: !142, line: 2318, baseType: !636, size: 64, offset: 960)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1650, file: !142, line: 2319, baseType: !636, size: 64, offset: 1024)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1650, file: !142, line: 2320, baseType: !636, size: 64, offset: 1088)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1650, file: !142, line: 2321, baseType: !636, size: 64, offset: 1152)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1650, file: !142, line: 2322, baseType: !636, size: 64, offset: 1216)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1650, file: !142, line: 2324, baseType: !1694, size: 64, offset: 1280)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !142, line: 2324, flags: DIFlagFwdDecl)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !639, file: !142, line: 3395, baseType: !1697, size: 320)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !142, line: 1469, size: 320, elements: !1698)
!1698 = !{!1699, !1700, !1701}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1697, file: !142, line: 1470, baseType: !675, size: 192)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1697, file: !142, line: 1471, baseType: !636, size: 64, offset: 192)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1697, file: !142, line: 1472, baseType: !636, size: 64, offset: 256)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !639, file: !142, line: 3396, baseType: !1703, size: 320)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !142, line: 1482, size: 320, elements: !1704)
!1704 = !{!1705, !1706, !1707}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1703, file: !142, line: 1483, baseType: !675, size: 192)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1703, file: !142, line: 1484, baseType: !627, size: 32, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1703, file: !142, line: 1485, baseType: !1012, size: 64, offset: 256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !639, file: !142, line: 3397, baseType: !1709, size: 384)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !142, line: 1829, size: 384, elements: !1710)
!1710 = !{!1711, !1712, !1713, !1714}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1709, file: !142, line: 1830, baseType: !675, size: 192)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1709, file: !142, line: 1831, baseType: !760, size: 32, offset: 192)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1709, file: !142, line: 1832, baseType: !636, size: 64, offset: 256)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1709, file: !142, line: 1835, baseType: !1012, size: 64, offset: 320)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !639, file: !142, line: 3398, baseType: !1716, size: 704)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !142, line: 1898, size: 704, elements: !1717)
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1725}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1716, file: !142, line: 1899, baseType: !675, size: 192)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1716, file: !142, line: 1902, baseType: !636, size: 64, offset: 192)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1716, file: !142, line: 1905, baseType: !958, size: 64, offset: 256)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1716, file: !142, line: 1908, baseType: !7, size: 32, offset: 320)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1716, file: !142, line: 1911, baseType: !1723, size: 64, offset: 384)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !142, line: 1876, flags: DIFlagFwdDecl)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1716, file: !142, line: 1914, baseType: !1000, size: 256, offset: 448)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !639, file: !142, line: 3399, baseType: !1727, size: 704)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !142, line: 2008, size: 704, elements: !1728)
!1728 = !{!1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1727, file: !142, line: 2009, baseType: !675, size: 192)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1727, file: !142, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1727, file: !142, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1727, file: !142, line: 2014, baseType: !760, size: 32, offset: 224)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1727, file: !142, line: 2016, baseType: !636, size: 64, offset: 256)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1727, file: !142, line: 2017, baseType: !1504, size: 64, offset: 320)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1727, file: !142, line: 2019, baseType: !636, size: 64, offset: 384)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1727, file: !142, line: 2020, baseType: !636, size: 64, offset: 448)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1727, file: !142, line: 2021, baseType: !636, size: 64, offset: 512)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1727, file: !142, line: 2022, baseType: !636, size: 64, offset: 576)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1727, file: !142, line: 2023, baseType: !636, size: 64, offset: 640)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !639, file: !142, line: 3400, baseType: !1741, size: 832)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !142, line: 2430, size: 832, elements: !1742)
!1742 = !{!1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1741, file: !142, line: 2431, baseType: !675, size: 192)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1741, file: !142, line: 2433, baseType: !636, size: 64, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1741, file: !142, line: 2434, baseType: !636, size: 64, offset: 256)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1741, file: !142, line: 2435, baseType: !636, size: 64, offset: 320)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1741, file: !142, line: 2436, baseType: !636, size: 64, offset: 384)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1741, file: !142, line: 2437, baseType: !1504, size: 64, offset: 448)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1741, file: !142, line: 2438, baseType: !636, size: 64, offset: 512)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1741, file: !142, line: 2440, baseType: !636, size: 64, offset: 576)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1741, file: !142, line: 2441, baseType: !636, size: 64, offset: 640)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1741, file: !142, line: 2443, baseType: !1753, size: 128, offset: 704)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !142, line: 182, baseType: !1754)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !142, line: 182, size: 128, elements: !1755)
!1755 = !{!1756}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1754, file: !142, line: 182, baseType: !1509, size: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !639, file: !142, line: 3401, baseType: !1758, size: 320)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !142, line: 3327, size: 320, elements: !1759)
!1759 = !{!1760, !1761, !1768}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1758, file: !142, line: 3329, baseType: !675, size: 192)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1758, file: !142, line: 3330, baseType: !1762, size: 64, offset: 192)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !142, line: 3320, size: 192, elements: !1764)
!1764 = !{!1765, !1766, !1767}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1763, file: !142, line: 3322, baseType: !1762, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1763, file: !142, line: 3323, baseType: !1762, size: 64, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1763, file: !142, line: 3324, baseType: !636, size: 64, offset: 128)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1758, file: !142, line: 3331, baseType: !1762, size: 64, offset: 256)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !639, file: !142, line: 3402, baseType: !1770, size: 256)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !142, line: 1540, size: 256, elements: !1771)
!1771 = !{!1772, !1773}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1770, file: !142, line: 1541, baseType: !675, size: 192)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1770, file: !142, line: 1542, baseType: !1774, size: 64, offset: 192)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !142, line: 1538, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !142, line: 1538, size: 192, elements: !1777)
!1777 = !{!1778}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1776, file: !142, line: 1538, baseType: !1779, size: 192)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !142, line: 1537, baseType: !1780)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !142, line: 1537, size: 192, elements: !1781)
!1781 = !{!1782, !1783, !1784}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1780, file: !142, line: 1537, baseType: !7, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1780, file: !142, line: 1537, baseType: !7, size: 32, offset: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1780, file: !142, line: 1537, baseType: !1785, size: 128, offset: 64)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1786, size: 128, elements: !734)
!1786 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !142, line: 1535, baseType: !1787)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !142, line: 1532, size: 128, elements: !1788)
!1788 = !{!1789, !1790}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1787, file: !142, line: 1533, baseType: !636, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1787, file: !142, line: 1534, baseType: !636, size: 64, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !639, file: !142, line: 3403, baseType: !1792, size: 512)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !142, line: 1938, size: 512, elements: !1793)
!1793 = !{!1794, !1795, !1796, !1797, !1803, !1804, !1805}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1792, file: !142, line: 1939, baseType: !675, size: 192)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1792, file: !142, line: 1940, baseType: !760, size: 32, offset: 192)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1792, file: !142, line: 1941, baseType: !352, size: 32, offset: 224)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1792, file: !142, line: 1946, baseType: !1798, size: 32, offset: 256)
!1798 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !142, line: 1942, size: 32, elements: !1799)
!1799 = !{!1800, !1801, !1802}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1798, file: !142, line: 1943, baseType: !370, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1798, file: !142, line: 1944, baseType: !377, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1798, file: !142, line: 1945, baseType: !141, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1792, file: !142, line: 1950, baseType: !948, size: 64, offset: 320)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1792, file: !142, line: 1951, baseType: !948, size: 64, offset: 384)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1792, file: !142, line: 1953, baseType: !1012, size: 64, offset: 448)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !639, file: !142, line: 3404, baseType: !1807, size: 1664)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !142, line: 3337, size: 1664, elements: !1808)
!1808 = !{!1809, !1810}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1807, file: !142, line: 3338, baseType: !675, size: 192)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1807, file: !142, line: 3341, baseType: !1811, size: 1472, offset: 192)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1812, line: 410, size: 1472, elements: !1813)
!1812 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1813 = !{!1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1811, file: !1812, line: 412, baseType: !627, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1811, file: !1812, line: 413, baseType: !627, size: 32, offset: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1811, file: !1812, line: 414, baseType: !627, size: 32, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1811, file: !1812, line: 415, baseType: !627, size: 32, offset: 96)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1811, file: !1812, line: 416, baseType: !627, size: 32, offset: 128)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1811, file: !1812, line: 417, baseType: !627, size: 32, offset: 160)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1811, file: !1812, line: 418, baseType: !626, size: 8, offset: 192)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1811, file: !1812, line: 419, baseType: !626, size: 8, offset: 200)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1811, file: !1812, line: 420, baseType: !1823, size: 8, offset: 208)
!1823 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1811, file: !1812, line: 421, baseType: !1823, size: 8, offset: 216)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1811, file: !1812, line: 422, baseType: !1823, size: 8, offset: 224)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1811, file: !1812, line: 423, baseType: !1823, size: 8, offset: 232)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1811, file: !1812, line: 424, baseType: !1823, size: 8, offset: 240)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1811, file: !1812, line: 425, baseType: !1823, size: 8, offset: 248)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1811, file: !1812, line: 426, baseType: !1823, size: 8, offset: 256)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1811, file: !1812, line: 427, baseType: !1823, size: 8, offset: 264)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1811, file: !1812, line: 428, baseType: !1823, size: 8, offset: 272)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1811, file: !1812, line: 429, baseType: !1823, size: 8, offset: 280)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1811, file: !1812, line: 430, baseType: !1823, size: 8, offset: 288)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1811, file: !1812, line: 431, baseType: !1823, size: 8, offset: 296)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1811, file: !1812, line: 432, baseType: !1823, size: 8, offset: 304)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1811, file: !1812, line: 433, baseType: !1823, size: 8, offset: 312)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1811, file: !1812, line: 434, baseType: !1823, size: 8, offset: 320)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1811, file: !1812, line: 435, baseType: !1823, size: 8, offset: 328)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1811, file: !1812, line: 436, baseType: !1823, size: 8, offset: 336)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1811, file: !1812, line: 437, baseType: !1823, size: 8, offset: 344)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1811, file: !1812, line: 438, baseType: !1823, size: 8, offset: 352)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1811, file: !1812, line: 439, baseType: !1823, size: 8, offset: 360)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1811, file: !1812, line: 440, baseType: !1823, size: 8, offset: 368)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1811, file: !1812, line: 441, baseType: !1823, size: 8, offset: 376)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1811, file: !1812, line: 442, baseType: !1823, size: 8, offset: 384)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1811, file: !1812, line: 443, baseType: !1823, size: 8, offset: 392)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1811, file: !1812, line: 444, baseType: !1823, size: 8, offset: 400)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1811, file: !1812, line: 445, baseType: !1823, size: 8, offset: 408)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1811, file: !1812, line: 446, baseType: !1823, size: 8, offset: 416)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1811, file: !1812, line: 447, baseType: !1823, size: 8, offset: 424)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1811, file: !1812, line: 448, baseType: !1823, size: 8, offset: 432)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1811, file: !1812, line: 449, baseType: !1823, size: 8, offset: 440)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1811, file: !1812, line: 450, baseType: !1823, size: 8, offset: 448)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1811, file: !1812, line: 451, baseType: !1823, size: 8, offset: 456)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1811, file: !1812, line: 452, baseType: !1823, size: 8, offset: 464)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1811, file: !1812, line: 453, baseType: !1823, size: 8, offset: 472)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1811, file: !1812, line: 454, baseType: !1823, size: 8, offset: 480)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1811, file: !1812, line: 455, baseType: !1823, size: 8, offset: 488)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1811, file: !1812, line: 456, baseType: !1823, size: 8, offset: 496)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1811, file: !1812, line: 457, baseType: !1823, size: 8, offset: 504)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1811, file: !1812, line: 458, baseType: !1823, size: 8, offset: 512)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1811, file: !1812, line: 459, baseType: !1823, size: 8, offset: 520)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1811, file: !1812, line: 460, baseType: !1823, size: 8, offset: 528)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1811, file: !1812, line: 461, baseType: !1823, size: 8, offset: 536)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1811, file: !1812, line: 462, baseType: !1823, size: 8, offset: 544)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1811, file: !1812, line: 463, baseType: !1823, size: 8, offset: 552)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1811, file: !1812, line: 464, baseType: !1823, size: 8, offset: 560)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1811, file: !1812, line: 465, baseType: !1823, size: 8, offset: 568)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1811, file: !1812, line: 466, baseType: !1823, size: 8, offset: 576)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1811, file: !1812, line: 467, baseType: !1823, size: 8, offset: 584)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1811, file: !1812, line: 468, baseType: !1823, size: 8, offset: 592)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1811, file: !1812, line: 469, baseType: !1823, size: 8, offset: 600)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1811, file: !1812, line: 470, baseType: !1823, size: 8, offset: 608)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1811, file: !1812, line: 471, baseType: !1823, size: 8, offset: 616)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1811, file: !1812, line: 472, baseType: !1823, size: 8, offset: 624)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1811, file: !1812, line: 473, baseType: !1823, size: 8, offset: 632)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1811, file: !1812, line: 474, baseType: !1823, size: 8, offset: 640)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1811, file: !1812, line: 475, baseType: !1823, size: 8, offset: 648)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1811, file: !1812, line: 476, baseType: !1823, size: 8, offset: 656)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1811, file: !1812, line: 477, baseType: !1823, size: 8, offset: 664)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1811, file: !1812, line: 478, baseType: !1823, size: 8, offset: 672)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1811, file: !1812, line: 479, baseType: !1823, size: 8, offset: 680)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1811, file: !1812, line: 480, baseType: !1823, size: 8, offset: 688)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1811, file: !1812, line: 481, baseType: !1823, size: 8, offset: 696)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1811, file: !1812, line: 482, baseType: !1823, size: 8, offset: 704)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1811, file: !1812, line: 483, baseType: !1823, size: 8, offset: 712)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1811, file: !1812, line: 484, baseType: !1823, size: 8, offset: 720)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1811, file: !1812, line: 485, baseType: !1823, size: 8, offset: 728)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1811, file: !1812, line: 486, baseType: !1823, size: 8, offset: 736)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1811, file: !1812, line: 487, baseType: !1823, size: 8, offset: 744)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1811, file: !1812, line: 488, baseType: !1823, size: 8, offset: 752)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1811, file: !1812, line: 489, baseType: !1823, size: 8, offset: 760)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1811, file: !1812, line: 490, baseType: !1823, size: 8, offset: 768)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1811, file: !1812, line: 491, baseType: !1823, size: 8, offset: 776)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1811, file: !1812, line: 492, baseType: !1823, size: 8, offset: 784)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1811, file: !1812, line: 493, baseType: !1823, size: 8, offset: 792)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1811, file: !1812, line: 494, baseType: !1823, size: 8, offset: 800)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1811, file: !1812, line: 495, baseType: !1823, size: 8, offset: 808)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1811, file: !1812, line: 496, baseType: !1823, size: 8, offset: 816)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1811, file: !1812, line: 497, baseType: !1823, size: 8, offset: 824)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1811, file: !1812, line: 498, baseType: !1823, size: 8, offset: 832)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1811, file: !1812, line: 499, baseType: !1823, size: 8, offset: 840)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1811, file: !1812, line: 500, baseType: !1823, size: 8, offset: 848)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1811, file: !1812, line: 501, baseType: !1823, size: 8, offset: 856)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1811, file: !1812, line: 502, baseType: !1823, size: 8, offset: 864)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1811, file: !1812, line: 503, baseType: !1823, size: 8, offset: 872)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1811, file: !1812, line: 504, baseType: !1823, size: 8, offset: 880)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1811, file: !1812, line: 505, baseType: !1823, size: 8, offset: 888)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1811, file: !1812, line: 506, baseType: !1823, size: 8, offset: 896)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1811, file: !1812, line: 507, baseType: !1823, size: 8, offset: 904)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1811, file: !1812, line: 508, baseType: !1823, size: 8, offset: 912)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1811, file: !1812, line: 509, baseType: !1823, size: 8, offset: 920)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1811, file: !1812, line: 510, baseType: !1823, size: 8, offset: 928)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1811, file: !1812, line: 511, baseType: !1823, size: 8, offset: 936)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1811, file: !1812, line: 512, baseType: !1823, size: 8, offset: 944)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1811, file: !1812, line: 513, baseType: !1823, size: 8, offset: 952)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1811, file: !1812, line: 514, baseType: !1823, size: 8, offset: 960)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1811, file: !1812, line: 515, baseType: !1823, size: 8, offset: 968)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1811, file: !1812, line: 516, baseType: !1823, size: 8, offset: 976)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1811, file: !1812, line: 517, baseType: !1823, size: 8, offset: 984)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1811, file: !1812, line: 518, baseType: !1823, size: 8, offset: 992)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1811, file: !1812, line: 519, baseType: !1823, size: 8, offset: 1000)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1811, file: !1812, line: 520, baseType: !1823, size: 8, offset: 1008)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1811, file: !1812, line: 521, baseType: !1823, size: 8, offset: 1016)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1811, file: !1812, line: 522, baseType: !1823, size: 8, offset: 1024)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1811, file: !1812, line: 523, baseType: !1823, size: 8, offset: 1032)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1811, file: !1812, line: 524, baseType: !1823, size: 8, offset: 1040)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1811, file: !1812, line: 525, baseType: !1823, size: 8, offset: 1048)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1811, file: !1812, line: 526, baseType: !1823, size: 8, offset: 1056)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1811, file: !1812, line: 527, baseType: !1823, size: 8, offset: 1064)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1811, file: !1812, line: 528, baseType: !1823, size: 8, offset: 1072)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1811, file: !1812, line: 529, baseType: !1823, size: 8, offset: 1080)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1811, file: !1812, line: 530, baseType: !1823, size: 8, offset: 1088)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1811, file: !1812, line: 531, baseType: !1823, size: 8, offset: 1096)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1811, file: !1812, line: 532, baseType: !1823, size: 8, offset: 1104)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1811, file: !1812, line: 533, baseType: !1823, size: 8, offset: 1112)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1811, file: !1812, line: 534, baseType: !1823, size: 8, offset: 1120)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1811, file: !1812, line: 535, baseType: !1823, size: 8, offset: 1128)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1811, file: !1812, line: 536, baseType: !1823, size: 8, offset: 1136)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1811, file: !1812, line: 537, baseType: !1823, size: 8, offset: 1144)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1811, file: !1812, line: 538, baseType: !1823, size: 8, offset: 1152)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1811, file: !1812, line: 539, baseType: !1823, size: 8, offset: 1160)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1811, file: !1812, line: 540, baseType: !1823, size: 8, offset: 1168)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1811, file: !1812, line: 541, baseType: !1823, size: 8, offset: 1176)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1811, file: !1812, line: 542, baseType: !1823, size: 8, offset: 1184)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1811, file: !1812, line: 543, baseType: !1823, size: 8, offset: 1192)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1811, file: !1812, line: 544, baseType: !1823, size: 8, offset: 1200)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1811, file: !1812, line: 545, baseType: !1823, size: 8, offset: 1208)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1811, file: !1812, line: 546, baseType: !1823, size: 8, offset: 1216)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1811, file: !1812, line: 547, baseType: !1823, size: 8, offset: 1224)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1811, file: !1812, line: 548, baseType: !1823, size: 8, offset: 1232)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1811, file: !1812, line: 549, baseType: !1823, size: 8, offset: 1240)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1811, file: !1812, line: 550, baseType: !1823, size: 8, offset: 1248)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1811, file: !1812, line: 551, baseType: !1823, size: 8, offset: 1256)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1811, file: !1812, line: 552, baseType: !1823, size: 8, offset: 1264)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1811, file: !1812, line: 553, baseType: !1823, size: 8, offset: 1272)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1811, file: !1812, line: 554, baseType: !1823, size: 8, offset: 1280)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1811, file: !1812, line: 555, baseType: !1823, size: 8, offset: 1288)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1811, file: !1812, line: 556, baseType: !1823, size: 8, offset: 1296)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1811, file: !1812, line: 557, baseType: !1823, size: 8, offset: 1304)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1811, file: !1812, line: 558, baseType: !1823, size: 8, offset: 1312)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1811, file: !1812, line: 559, baseType: !1823, size: 8, offset: 1320)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1811, file: !1812, line: 560, baseType: !1823, size: 8, offset: 1328)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1811, file: !1812, line: 561, baseType: !1823, size: 8, offset: 1336)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1811, file: !1812, line: 562, baseType: !1823, size: 8, offset: 1344)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1811, file: !1812, line: 563, baseType: !1823, size: 8, offset: 1352)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1811, file: !1812, line: 564, baseType: !1823, size: 8, offset: 1360)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1811, file: !1812, line: 565, baseType: !1823, size: 8, offset: 1368)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1811, file: !1812, line: 566, baseType: !1823, size: 8, offset: 1376)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1811, file: !1812, line: 567, baseType: !1823, size: 8, offset: 1384)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1811, file: !1812, line: 568, baseType: !1823, size: 8, offset: 1392)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1811, file: !1812, line: 569, baseType: !1823, size: 8, offset: 1400)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1811, file: !1812, line: 570, baseType: !1823, size: 8, offset: 1408)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1811, file: !1812, line: 571, baseType: !1823, size: 8, offset: 1416)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1811, file: !1812, line: 572, baseType: !1823, size: 8, offset: 1424)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1811, file: !1812, line: 573, baseType: !1823, size: 8, offset: 1432)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1811, file: !1812, line: 574, baseType: !1823, size: 8, offset: 1440)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !639, file: !142, line: 3405, baseType: !1979, size: 384)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !142, line: 3352, size: 384, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1979, file: !142, line: 3353, baseType: !675, size: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1979, file: !142, line: 3356, baseType: !1983, size: 192, offset: 192)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1812, line: 578, size: 192, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1983, file: !1812, line: 580, baseType: !627, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1983, file: !1812, line: 581, baseType: !627, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1983, file: !1812, line: 582, baseType: !627, size: 32, offset: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1983, file: !1812, line: 583, baseType: !627, size: 32, offset: 96)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1983, file: !1812, line: 584, baseType: !626, size: 8, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1983, file: !1812, line: 585, baseType: !626, size: 8, offset: 136)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1983, file: !1812, line: 586, baseType: !626, size: 8, offset: 144)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1983, file: !1812, line: 587, baseType: !626, size: 8, offset: 152)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1983, file: !1812, line: 588, baseType: !626, size: 8, offset: 160)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1983, file: !1812, line: 589, baseType: !626, size: 8, offset: 168)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1983, file: !1812, line: 590, baseType: !626, size: 8, offset: 176)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !637, line: 47, baseType: !861)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2000)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !2001, line: 42, baseType: !635)
!2001 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !960)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "case_node", file: !3, line: 85, size: 384, elements: !2009)
!2009 = !{!2010, !2011, !2012, !2013, !2014, !2015}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2008, file: !3, line: 87, baseType: !2007, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2008, file: !3, line: 88, baseType: !2007, size: 64, offset: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2008, file: !3, line: 89, baseType: !2007, size: 64, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !2008, file: !3, line: 90, baseType: !636, size: 64, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !2008, file: !3, line: 91, baseType: !636, size: 64, offset: 256)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "code_label", scope: !2008, file: !3, line: 92, baseType: !636, size: 64, offset: 320)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2018)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "case_bit_test", file: !3, line: 2084, size: 256, elements: !2019)
!2019 = !{!2020, !2021, !2022, !2023}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "hi", scope: !2018, file: !3, line: 2086, baseType: !691, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !2018, file: !3, line: 2087, baseType: !691, size: 64, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2018, file: !3, line: 2088, baseType: !810, size: 64, offset: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2018, file: !3, line: 2089, baseType: !627, size: 32, offset: 192)
!2024 = !{!0, !2025, !2042, !2052, !2054, !2056}
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "elim_regs", scope: !2027, file: !3, line: 1840, type: !2035, isLocal: true, isDefinition: true)
!2027 = distinct !DISubprogram(name: "expand_nl_goto_receiver", scope: !3, file: !3, line: 1801, type: !2028, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2030)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{null}
!2030 = !{!2031, !2032}
!2031 = !DILocalVariable(name: "chain", scope: !2027, file: !3, line: 1803, type: !810)
!2032 = !DILocalVariable(name: "i", scope: !2033, file: !3, line: 1841, type: !1104)
!2033 = distinct !DILexicalBlock(scope: !2034, file: !3, line: 1833, column: 5)
!2034 = distinct !DILexicalBlock(scope: !2027, file: !3, line: 1832, column: 7)
!2035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2036, size: 256, elements: !901)
!2036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2037)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elims", scope: !2027, file: !3, line: 1840, size: 64, elements: !2038)
!2038 = !{!2039, !2041}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2037, file: !3, line: 1840, baseType: !2040, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !627)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2037, file: !3, line: 1840, baseType: !2040, size: 32, offset: 32)
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "init", scope: !2044, file: !3, line: 2097, type: !626, isLocal: true, isDefinition: true)
!2044 = distinct !DISubprogram(name: "lshift_cheap_p", scope: !3, file: !3, line: 2095, type: !2045, scopeLine: 2096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2047)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!626}
!2047 = !{!2048, !2051}
!2048 = !DILocalVariable(name: "reg", scope: !2049, file: !3, line: 2102, type: !810)
!2049 = distinct !DILexicalBlock(scope: !2050, file: !3, line: 2101, column: 5)
!2050 = distinct !DILexicalBlock(scope: !2044, file: !3, line: 2100, column: 7)
!2051 = !DILocalVariable(name: "cost", scope: !2049, file: !3, line: 2103, type: !627)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "cheap", scope: !2044, file: !3, line: 2098, type: !626, isLocal: true, isDefinition: true)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "cost_table_initialized", scope: !2, file: !3, line: 103, type: !627, isLocal: true, isDefinition: true)
!2056 = !DIGlobalVariableExpression(var: !2057, expr: !DIExpression())
!2057 = distinct !DIGlobalVariable(name: "cost_table_", scope: !2, file: !3, line: 101, type: !2058, isLocal: true, isDefinition: true)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2059, size: 2064, elements: !2060)
!2059 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2060 = !{!2061}
!2061 = !DISubrange(count: 129)
!2062 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2063 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2064 = !{i32 2, !"Dwarf Version", i32 4}
!2065 = !{i32 2, !"Debug Info Version", i32 3}
!2066 = !{i32 1, !"wchar_size", i32 4}
!2067 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2068 = distinct !DISubprogram(name: "vprintf", scope: !2069, file: !2069, line: 39, type: !2070, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2080)
!2069 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2070 = !DISubroutineType(types: !2071)
!2071 = !{!627, !2072, !2073}
!2072 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !632)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2075)
!2075 = !{!2076, !2077, !2078, !2079}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2074, file: !3, baseType: !7, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2074, file: !3, baseType: !7, size: 32, offset: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2074, file: !3, baseType: !631, size: 64, offset: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2074, file: !3, baseType: !631, size: 64, offset: 128)
!2080 = !{!2081, !2082}
!2081 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2068, file: !2069, line: 39, type: !2072)
!2082 = !DILocalVariable(name: "__arg", arg: 2, scope: !2068, file: !2069, line: 39, type: !2073)
!2083 = !DILocation(line: 0, scope: !2068)
!2084 = !DILocation(line: 41, column: 20, scope: !2068)
!2085 = !DILocation(line: 41, column: 10, scope: !2068)
!2086 = !DILocation(line: 41, column: 3, scope: !2068)
!2087 = distinct !DISubprogram(name: "getchar", scope: !2069, file: !2069, line: 47, type: !2088, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2090)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{!627}
!2090 = !{}
!2091 = !DILocation(line: 49, column: 16, scope: !2087)
!2092 = !DILocation(line: 49, column: 10, scope: !2087)
!2093 = !DILocation(line: 49, column: 3, scope: !2087)
!2094 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2069, file: !2069, line: 56, type: !2095, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2147)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!627, !2097}
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2099, line: 7, baseType: !2100)
!2099 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2101, line: 49, size: 1728, elements: !2102)
!2101 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2102 = !{!2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2118, !2120, !2121, !2122, !2125, !2126, !2127, !2128, !2131, !2133, !2136, !2139, !2140, !2141, !2142, !2143}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2100, file: !2101, line: 51, baseType: !627, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2100, file: !2101, line: 54, baseType: !629, size: 64, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2100, file: !2101, line: 55, baseType: !629, size: 64, offset: 128)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2100, file: !2101, line: 56, baseType: !629, size: 64, offset: 192)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2100, file: !2101, line: 57, baseType: !629, size: 64, offset: 256)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2100, file: !2101, line: 58, baseType: !629, size: 64, offset: 320)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2100, file: !2101, line: 59, baseType: !629, size: 64, offset: 384)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2100, file: !2101, line: 60, baseType: !629, size: 64, offset: 448)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2100, file: !2101, line: 61, baseType: !629, size: 64, offset: 512)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2100, file: !2101, line: 64, baseType: !629, size: 64, offset: 576)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2100, file: !2101, line: 65, baseType: !629, size: 64, offset: 640)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2100, file: !2101, line: 66, baseType: !629, size: 64, offset: 704)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2100, file: !2101, line: 68, baseType: !2116, size: 64, offset: 768)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2101, line: 36, flags: DIFlagFwdDecl)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2100, file: !2101, line: 70, baseType: !2119, size: 64, offset: 832)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2100, file: !2101, line: 72, baseType: !627, size: 32, offset: 896)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2100, file: !2101, line: 73, baseType: !627, size: 32, offset: 928)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2100, file: !2101, line: 74, baseType: !2123, size: 64, offset: 960)
!2123 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2124, line: 152, baseType: !691)
!2124 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2100, file: !2101, line: 77, baseType: !634, size: 16, offset: 1024)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2100, file: !2101, line: 78, baseType: !1823, size: 8, offset: 1040)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2100, file: !2101, line: 79, baseType: !733, size: 8, offset: 1048)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2100, file: !2101, line: 81, baseType: !2129, size: 64, offset: 1088)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2101, line: 43, baseType: null)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2100, file: !2101, line: 89, baseType: !2132, size: 64, offset: 1152)
!2132 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2124, line: 153, baseType: !691)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2100, file: !2101, line: 91, baseType: !2134, size: 64, offset: 1216)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!2135 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2101, line: 37, flags: DIFlagFwdDecl)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2100, file: !2101, line: 92, baseType: !2137, size: 64, offset: 1280)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2101, line: 38, flags: DIFlagFwdDecl)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2100, file: !2101, line: 93, baseType: !2119, size: 64, offset: 1344)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2100, file: !2101, line: 94, baseType: !631, size: 64, offset: 1408)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2100, file: !2101, line: 95, baseType: !1104, size: 64, offset: 1472)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2100, file: !2101, line: 96, baseType: !627, size: 32, offset: 1536)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2100, file: !2101, line: 98, baseType: !2144, size: 160, offset: 1568)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 160, elements: !2145)
!2145 = !{!2146}
!2146 = !DISubrange(count: 20)
!2147 = !{!2148}
!2148 = !DILocalVariable(name: "__fp", arg: 1, scope: !2094, file: !2069, line: 56, type: !2097)
!2149 = !DILocation(line: 0, scope: !2094)
!2150 = !DILocation(line: 58, column: 10, scope: !2094)
!2151 = !DILocation(line: 58, column: 3, scope: !2094)
!2152 = distinct !DISubprogram(name: "getc_unlocked", scope: !2069, file: !2069, line: 66, type: !2095, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2153)
!2153 = !{!2154}
!2154 = !DILocalVariable(name: "__fp", arg: 1, scope: !2152, file: !2069, line: 66, type: !2097)
!2155 = !DILocation(line: 0, scope: !2152)
!2156 = !DILocation(line: 68, column: 10, scope: !2152)
!2157 = !DILocation(line: 68, column: 3, scope: !2152)
!2158 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2069, file: !2069, line: 73, type: !2088, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2090)
!2159 = !DILocation(line: 75, column: 10, scope: !2158)
!2160 = !DILocation(line: 75, column: 3, scope: !2158)
!2161 = distinct !DISubprogram(name: "putchar", scope: !2069, file: !2069, line: 82, type: !2162, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2164)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!627, !627}
!2164 = !{!2165}
!2165 = !DILocalVariable(name: "__c", arg: 1, scope: !2161, file: !2069, line: 82, type: !627)
!2166 = !DILocation(line: 0, scope: !2161)
!2167 = !DILocation(line: 84, column: 21, scope: !2161)
!2168 = !DILocation(line: 84, column: 10, scope: !2161)
!2169 = !DILocation(line: 84, column: 3, scope: !2161)
!2170 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2069, file: !2069, line: 91, type: !2171, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2173)
!2171 = !DISubroutineType(types: !2172)
!2172 = !{!627, !627, !2097}
!2173 = !{!2174, !2175}
!2174 = !DILocalVariable(name: "__c", arg: 1, scope: !2170, file: !2069, line: 91, type: !627)
!2175 = !DILocalVariable(name: "__stream", arg: 2, scope: !2170, file: !2069, line: 91, type: !2097)
!2176 = !DILocation(line: 0, scope: !2170)
!2177 = !DILocation(line: 93, column: 10, scope: !2170)
!2178 = !DILocation(line: 93, column: 3, scope: !2170)
!2179 = distinct !DISubprogram(name: "putc_unlocked", scope: !2069, file: !2069, line: 101, type: !2171, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2180)
!2180 = !{!2181, !2182}
!2181 = !DILocalVariable(name: "__c", arg: 1, scope: !2179, file: !2069, line: 101, type: !627)
!2182 = !DILocalVariable(name: "__stream", arg: 2, scope: !2179, file: !2069, line: 101, type: !2097)
!2183 = !DILocation(line: 0, scope: !2179)
!2184 = !DILocation(line: 103, column: 10, scope: !2179)
!2185 = !DILocation(line: 103, column: 3, scope: !2179)
!2186 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2069, file: !2069, line: 108, type: !2162, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2187)
!2187 = !{!2188}
!2188 = !DILocalVariable(name: "__c", arg: 1, scope: !2186, file: !2069, line: 108, type: !627)
!2189 = !DILocation(line: 0, scope: !2186)
!2190 = !DILocation(line: 110, column: 10, scope: !2186)
!2191 = !DILocation(line: 110, column: 3, scope: !2186)
!2192 = distinct !DISubprogram(name: "getline", scope: !2069, file: !2069, line: 118, type: !2193, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2197)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!2195, !628, !2196, !2097}
!2195 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2124, line: 193, baseType: !691)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!2197 = !{!2198, !2199, !2200}
!2198 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2192, file: !2069, line: 118, type: !628)
!2199 = !DILocalVariable(name: "__n", arg: 2, scope: !2192, file: !2069, line: 118, type: !2196)
!2200 = !DILocalVariable(name: "__stream", arg: 3, scope: !2192, file: !2069, line: 118, type: !2097)
!2201 = !DILocation(line: 0, scope: !2192)
!2202 = !DILocation(line: 120, column: 10, scope: !2192)
!2203 = !DILocation(line: 120, column: 3, scope: !2192)
!2204 = distinct !DISubprogram(name: "feof_unlocked", scope: !2069, file: !2069, line: 128, type: !2095, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2205)
!2205 = !{!2206}
!2206 = !DILocalVariable(name: "__stream", arg: 1, scope: !2204, file: !2069, line: 128, type: !2097)
!2207 = !DILocation(line: 0, scope: !2204)
!2208 = !DILocation(line: 130, column: 10, scope: !2204)
!2209 = !DILocation(line: 130, column: 3, scope: !2204)
!2210 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2069, file: !2069, line: 135, type: !2095, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2211)
!2211 = !{!2212}
!2212 = !DILocalVariable(name: "__stream", arg: 1, scope: !2210, file: !2069, line: 135, type: !2097)
!2213 = !DILocation(line: 0, scope: !2210)
!2214 = !DILocation(line: 137, column: 10, scope: !2210)
!2215 = !DILocation(line: 137, column: 3, scope: !2210)
!2216 = distinct !DISubprogram(name: "tolower", scope: !2217, file: !2217, line: 207, type: !2162, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2218)
!2217 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2218 = !{!2219}
!2219 = !DILocalVariable(name: "__c", arg: 1, scope: !2216, file: !2217, line: 207, type: !627)
!2220 = !DILocation(line: 0, scope: !2216)
!2221 = !DILocation(line: 209, column: 22, scope: !2216)
!2222 = !DILocation(line: 209, column: 39, scope: !2216)
!2223 = !DILocation(line: 209, column: 38, scope: !2216)
!2224 = !DILocation(line: 209, column: 37, scope: !2216)
!2225 = !DILocation(line: 209, column: 10, scope: !2216)
!2226 = !DILocation(line: 209, column: 3, scope: !2216)
!2227 = distinct !DISubprogram(name: "toupper", scope: !2217, file: !2217, line: 213, type: !2162, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2228)
!2228 = !{!2229}
!2229 = !DILocalVariable(name: "__c", arg: 1, scope: !2227, file: !2217, line: 213, type: !627)
!2230 = !DILocation(line: 0, scope: !2227)
!2231 = !DILocation(line: 215, column: 22, scope: !2227)
!2232 = !DILocation(line: 215, column: 39, scope: !2227)
!2233 = !DILocation(line: 215, column: 38, scope: !2227)
!2234 = !DILocation(line: 215, column: 37, scope: !2227)
!2235 = !DILocation(line: 215, column: 10, scope: !2227)
!2236 = !DILocation(line: 215, column: 3, scope: !2227)
!2237 = distinct !DISubprogram(name: "atoi", scope: !2238, file: !2238, line: 361, type: !2239, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2241)
!2238 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2239 = !DISubroutineType(types: !2240)
!2240 = !{!627, !632}
!2241 = !{!2242}
!2242 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2237, file: !2238, line: 361, type: !632)
!2243 = !DILocation(line: 0, scope: !2237)
!2244 = !DILocation(line: 363, column: 16, scope: !2237)
!2245 = !DILocation(line: 363, column: 10, scope: !2237)
!2246 = !DILocation(line: 363, column: 3, scope: !2237)
!2247 = distinct !DISubprogram(name: "atol", scope: !2238, file: !2238, line: 366, type: !2248, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2250)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!691, !632}
!2250 = !{!2251}
!2251 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2247, file: !2238, line: 366, type: !632)
!2252 = !DILocation(line: 0, scope: !2247)
!2253 = !DILocation(line: 368, column: 10, scope: !2247)
!2254 = !DILocation(line: 368, column: 3, scope: !2247)
!2255 = distinct !DISubprogram(name: "atoll", scope: !2238, file: !2238, line: 373, type: !2256, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2259)
!2256 = !DISubroutineType(types: !2257)
!2257 = !{!2258, !632}
!2258 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2259 = !{!2260}
!2260 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2255, file: !2238, line: 373, type: !632)
!2261 = !DILocation(line: 0, scope: !2255)
!2262 = !DILocation(line: 375, column: 10, scope: !2255)
!2263 = !DILocation(line: 375, column: 3, scope: !2255)
!2264 = distinct !DISubprogram(name: "bsearch", scope: !2265, file: !2265, line: 20, type: !2266, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2269)
!2265 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2266 = !DISubroutineType(types: !2267)
!2267 = !{!631, !1265, !1265, !1104, !1104, !2268}
!2268 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2238, line: 808, baseType: !1469)
!2269 = !{!2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279}
!2270 = !DILocalVariable(name: "__key", arg: 1, scope: !2264, file: !2265, line: 20, type: !1265)
!2271 = !DILocalVariable(name: "__base", arg: 2, scope: !2264, file: !2265, line: 20, type: !1265)
!2272 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2264, file: !2265, line: 20, type: !1104)
!2273 = !DILocalVariable(name: "__size", arg: 4, scope: !2264, file: !2265, line: 20, type: !1104)
!2274 = !DILocalVariable(name: "__compar", arg: 5, scope: !2264, file: !2265, line: 21, type: !2268)
!2275 = !DILocalVariable(name: "__l", scope: !2264, file: !2265, line: 23, type: !1104)
!2276 = !DILocalVariable(name: "__u", scope: !2264, file: !2265, line: 23, type: !1104)
!2277 = !DILocalVariable(name: "__idx", scope: !2264, file: !2265, line: 23, type: !1104)
!2278 = !DILocalVariable(name: "__p", scope: !2264, file: !2265, line: 24, type: !1265)
!2279 = !DILocalVariable(name: "__comparison", scope: !2264, file: !2265, line: 25, type: !627)
!2280 = !DILocation(line: 0, scope: !2264)
!2281 = !DILocation(line: 29, column: 3, scope: !2264)
!2282 = !DILocation(line: 27, column: 7, scope: !2264)
!2283 = !DILocation(line: 29, column: 14, scope: !2264)
!2284 = !DILocation(line: 31, column: 20, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2264, file: !2265, line: 30, column: 5)
!2286 = !DILocation(line: 31, column: 27, scope: !2285)
!2287 = !DILocation(line: 32, column: 56, scope: !2285)
!2288 = !DILocation(line: 32, column: 47, scope: !2285)
!2289 = !DILocation(line: 33, column: 22, scope: !2285)
!2290 = !DILocation(line: 34, column: 24, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2285, file: !2265, line: 34, column: 11)
!2292 = !DILocation(line: 34, column: 11, scope: !2285)
!2293 = !DILocation(line: 36, column: 29, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !2291, file: !2265, line: 36, column: 16)
!2295 = !DILocation(line: 36, column: 16, scope: !2291)
!2296 = !DILocation(line: 37, column: 14, scope: !2294)
!2297 = distinct !{!2297, !2281, !2298}
!2298 = !DILocation(line: 40, column: 5, scope: !2264)
!2299 = !DILocation(line: 43, column: 1, scope: !2264)
!2300 = distinct !DISubprogram(name: "atof", scope: !2301, file: !2301, line: 25, type: !2302, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2305)
!2301 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2302 = !DISubroutineType(types: !2303)
!2303 = !{!2304, !632}
!2304 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2305 = !{!2306}
!2306 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2300, file: !2301, line: 25, type: !632)
!2307 = !DILocation(line: 0, scope: !2300)
!2308 = !DILocation(line: 27, column: 10, scope: !2300)
!2309 = !DILocation(line: 27, column: 3, scope: !2300)
!2310 = distinct !DISubprogram(name: "strtoimax", scope: !2311, file: !2311, line: 324, type: !2312, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2318)
!2311 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!2314, !2072, !2317, !627}
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2315, line: 101, baseType: !2316)
!2315 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2124, line: 72, baseType: !691)
!2317 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !628)
!2318 = !{!2319, !2320, !2321}
!2319 = !DILocalVariable(name: "nptr", arg: 1, scope: !2310, file: !2311, line: 324, type: !2072)
!2320 = !DILocalVariable(name: "endptr", arg: 2, scope: !2310, file: !2311, line: 324, type: !2317)
!2321 = !DILocalVariable(name: "base", arg: 3, scope: !2310, file: !2311, line: 324, type: !627)
!2322 = !DILocation(line: 0, scope: !2310)
!2323 = !DILocation(line: 327, column: 10, scope: !2310)
!2324 = !DILocation(line: 327, column: 3, scope: !2310)
!2325 = distinct !DISubprogram(name: "strtoumax", scope: !2311, file: !2311, line: 336, type: !2326, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2330)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{!2328, !2072, !2317, !627}
!2328 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2315, line: 102, baseType: !2329)
!2329 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2124, line: 73, baseType: !635)
!2330 = !{!2331, !2332, !2333}
!2331 = !DILocalVariable(name: "nptr", arg: 1, scope: !2325, file: !2311, line: 336, type: !2072)
!2332 = !DILocalVariable(name: "endptr", arg: 2, scope: !2325, file: !2311, line: 336, type: !2317)
!2333 = !DILocalVariable(name: "base", arg: 3, scope: !2325, file: !2311, line: 336, type: !627)
!2334 = !DILocation(line: 0, scope: !2325)
!2335 = !DILocation(line: 339, column: 10, scope: !2325)
!2336 = !DILocation(line: 339, column: 3, scope: !2325)
!2337 = distinct !DISubprogram(name: "wcstoimax", scope: !2311, file: !2311, line: 348, type: !2338, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2347)
!2338 = !DISubroutineType(types: !2339)
!2339 = !{!2314, !2340, !2344, !627}
!2340 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2341)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2343)
!2343 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2311, line: 34, baseType: !627)
!2344 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2345)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2347 = !{!2348, !2349, !2350}
!2348 = !DILocalVariable(name: "nptr", arg: 1, scope: !2337, file: !2311, line: 348, type: !2340)
!2349 = !DILocalVariable(name: "endptr", arg: 2, scope: !2337, file: !2311, line: 348, type: !2344)
!2350 = !DILocalVariable(name: "base", arg: 3, scope: !2337, file: !2311, line: 348, type: !627)
!2351 = !DILocation(line: 0, scope: !2337)
!2352 = !DILocation(line: 351, column: 10, scope: !2337)
!2353 = !DILocation(line: 351, column: 3, scope: !2337)
!2354 = distinct !DISubprogram(name: "wcstoumax", scope: !2311, file: !2311, line: 362, type: !2355, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2357)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{!2328, !2340, !2344, !627}
!2357 = !{!2358, !2359, !2360}
!2358 = !DILocalVariable(name: "nptr", arg: 1, scope: !2354, file: !2311, line: 362, type: !2340)
!2359 = !DILocalVariable(name: "endptr", arg: 2, scope: !2354, file: !2311, line: 362, type: !2344)
!2360 = !DILocalVariable(name: "base", arg: 3, scope: !2354, file: !2311, line: 362, type: !627)
!2361 = !DILocation(line: 0, scope: !2354)
!2362 = !DILocation(line: 365, column: 10, scope: !2354)
!2363 = !DILocation(line: 365, column: 3, scope: !2354)
!2364 = distinct !DISubprogram(name: "stat", scope: !2365, file: !2365, line: 453, type: !2366, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2403)
!2365 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2366 = !DISubroutineType(types: !2367)
!2367 = !{!627, !632, !2368}
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2370, line: 46, size: 1152, elements: !2371)
!2370 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2371 = !{!2372, !2374, !2376, !2378, !2380, !2382, !2384, !2385, !2386, !2387, !2389, !2391, !2399, !2400, !2401}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2369, file: !2370, line: 48, baseType: !2373, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2124, line: 145, baseType: !635)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2369, file: !2370, line: 53, baseType: !2375, size: 64, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2124, line: 148, baseType: !635)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2369, file: !2370, line: 61, baseType: !2377, size: 64, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2124, line: 151, baseType: !635)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2369, file: !2370, line: 62, baseType: !2379, size: 32, offset: 192)
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2124, line: 150, baseType: !7)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2369, file: !2370, line: 64, baseType: !2381, size: 32, offset: 224)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2124, line: 146, baseType: !7)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2369, file: !2370, line: 65, baseType: !2383, size: 32, offset: 256)
!2383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2124, line: 147, baseType: !7)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2369, file: !2370, line: 67, baseType: !627, size: 32, offset: 288)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2369, file: !2370, line: 69, baseType: !2373, size: 64, offset: 320)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2369, file: !2370, line: 74, baseType: !2123, size: 64, offset: 384)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2369, file: !2370, line: 78, baseType: !2388, size: 64, offset: 448)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2124, line: 174, baseType: !691)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2369, file: !2370, line: 80, baseType: !2390, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2124, line: 179, baseType: !691)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2369, file: !2370, line: 91, baseType: !2392, size: 128, offset: 576)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2393, line: 10, size: 128, elements: !2394)
!2393 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2394 = !{!2395, !2397}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2392, file: !2393, line: 12, baseType: !2396, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2124, line: 160, baseType: !691)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2392, file: !2393, line: 16, baseType: !2398, size: 64, offset: 64)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2124, line: 196, baseType: !691)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2369, file: !2370, line: 92, baseType: !2392, size: 128, offset: 704)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2369, file: !2370, line: 93, baseType: !2392, size: 128, offset: 832)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2369, file: !2370, line: 106, baseType: !2402, size: 192, offset: 960)
!2402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2398, size: 192, elements: !709)
!2403 = !{!2404, !2405}
!2404 = !DILocalVariable(name: "__path", arg: 1, scope: !2364, file: !2365, line: 453, type: !632)
!2405 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2364, file: !2365, line: 453, type: !2368)
!2406 = !DILocation(line: 0, scope: !2364)
!2407 = !DILocation(line: 455, column: 10, scope: !2364)
!2408 = !DILocation(line: 455, column: 3, scope: !2364)
!2409 = distinct !DISubprogram(name: "lstat", scope: !2365, file: !2365, line: 460, type: !2366, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2410)
!2410 = !{!2411, !2412}
!2411 = !DILocalVariable(name: "__path", arg: 1, scope: !2409, file: !2365, line: 460, type: !632)
!2412 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2409, file: !2365, line: 460, type: !2368)
!2413 = !DILocation(line: 0, scope: !2409)
!2414 = !DILocation(line: 462, column: 10, scope: !2409)
!2415 = !DILocation(line: 462, column: 3, scope: !2409)
!2416 = distinct !DISubprogram(name: "fstat", scope: !2365, file: !2365, line: 467, type: !2417, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2419)
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!627, !627, !2368}
!2419 = !{!2420, !2421}
!2420 = !DILocalVariable(name: "__fd", arg: 1, scope: !2416, file: !2365, line: 467, type: !627)
!2421 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2416, file: !2365, line: 467, type: !2368)
!2422 = !DILocation(line: 0, scope: !2416)
!2423 = !DILocation(line: 469, column: 10, scope: !2416)
!2424 = !DILocation(line: 469, column: 3, scope: !2416)
!2425 = distinct !DISubprogram(name: "fstatat", scope: !2365, file: !2365, line: 474, type: !2426, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2428)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{!627, !627, !632, !2368, !627}
!2428 = !{!2429, !2430, !2431, !2432}
!2429 = !DILocalVariable(name: "__fd", arg: 1, scope: !2425, file: !2365, line: 474, type: !627)
!2430 = !DILocalVariable(name: "__filename", arg: 2, scope: !2425, file: !2365, line: 474, type: !632)
!2431 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2425, file: !2365, line: 474, type: !2368)
!2432 = !DILocalVariable(name: "__flag", arg: 4, scope: !2425, file: !2365, line: 474, type: !627)
!2433 = !DILocation(line: 0, scope: !2425)
!2434 = !DILocation(line: 477, column: 10, scope: !2425)
!2435 = !DILocation(line: 477, column: 3, scope: !2425)
!2436 = distinct !DISubprogram(name: "mknod", scope: !2365, file: !2365, line: 483, type: !2437, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2439)
!2437 = !DISubroutineType(types: !2438)
!2438 = !{!627, !632, !2379, !2373}
!2439 = !{!2440, !2441, !2442}
!2440 = !DILocalVariable(name: "__path", arg: 1, scope: !2436, file: !2365, line: 483, type: !632)
!2441 = !DILocalVariable(name: "__mode", arg: 2, scope: !2436, file: !2365, line: 483, type: !2379)
!2442 = !DILocalVariable(name: "__dev", arg: 3, scope: !2436, file: !2365, line: 483, type: !2373)
!2443 = !DILocation(line: 0, scope: !2436)
!2444 = !DILocation(line: 485, column: 10, scope: !2436)
!2445 = !DILocation(line: 485, column: 3, scope: !2436)
!2446 = distinct !DISubprogram(name: "mknodat", scope: !2365, file: !2365, line: 491, type: !2447, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2449)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!627, !627, !632, !2379, !2373}
!2449 = !{!2450, !2451, !2452, !2453}
!2450 = !DILocalVariable(name: "__fd", arg: 1, scope: !2446, file: !2365, line: 491, type: !627)
!2451 = !DILocalVariable(name: "__path", arg: 2, scope: !2446, file: !2365, line: 491, type: !632)
!2452 = !DILocalVariable(name: "__mode", arg: 3, scope: !2446, file: !2365, line: 491, type: !2379)
!2453 = !DILocalVariable(name: "__dev", arg: 4, scope: !2446, file: !2365, line: 491, type: !2373)
!2454 = !DILocation(line: 0, scope: !2446)
!2455 = !DILocation(line: 494, column: 10, scope: !2446)
!2456 = !DILocation(line: 494, column: 3, scope: !2446)
!2457 = distinct !DISubprogram(name: "stat64", scope: !2365, file: !2365, line: 502, type: !2458, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2480)
!2458 = !DISubroutineType(types: !2459)
!2459 = !{!627, !632, !2460}
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2370, line: 119, size: 1152, elements: !2462)
!2462 = !{!2463, !2464, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2476, !2477, !2478, !2479}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2461, file: !2370, line: 121, baseType: !2373, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2461, file: !2370, line: 123, baseType: !2465, size: 64, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2124, line: 149, baseType: !635)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2461, file: !2370, line: 124, baseType: !2377, size: 64, offset: 128)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2461, file: !2370, line: 125, baseType: !2379, size: 32, offset: 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2461, file: !2370, line: 132, baseType: !2381, size: 32, offset: 224)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2461, file: !2370, line: 133, baseType: !2383, size: 32, offset: 256)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2461, file: !2370, line: 135, baseType: !627, size: 32, offset: 288)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2461, file: !2370, line: 136, baseType: !2373, size: 64, offset: 320)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2461, file: !2370, line: 137, baseType: !2123, size: 64, offset: 384)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2461, file: !2370, line: 143, baseType: !2388, size: 64, offset: 448)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2461, file: !2370, line: 144, baseType: !2475, size: 64, offset: 512)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2124, line: 180, baseType: !691)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2461, file: !2370, line: 152, baseType: !2392, size: 128, offset: 576)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2461, file: !2370, line: 153, baseType: !2392, size: 128, offset: 704)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2461, file: !2370, line: 154, baseType: !2392, size: 128, offset: 832)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2461, file: !2370, line: 164, baseType: !2402, size: 192, offset: 960)
!2480 = !{!2481, !2482}
!2481 = !DILocalVariable(name: "__path", arg: 1, scope: !2457, file: !2365, line: 502, type: !632)
!2482 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2457, file: !2365, line: 502, type: !2460)
!2483 = !DILocation(line: 0, scope: !2457)
!2484 = !DILocation(line: 504, column: 10, scope: !2457)
!2485 = !DILocation(line: 504, column: 3, scope: !2457)
!2486 = distinct !DISubprogram(name: "lstat64", scope: !2365, file: !2365, line: 509, type: !2458, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2487)
!2487 = !{!2488, !2489}
!2488 = !DILocalVariable(name: "__path", arg: 1, scope: !2486, file: !2365, line: 509, type: !632)
!2489 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2486, file: !2365, line: 509, type: !2460)
!2490 = !DILocation(line: 0, scope: !2486)
!2491 = !DILocation(line: 511, column: 10, scope: !2486)
!2492 = !DILocation(line: 511, column: 3, scope: !2486)
!2493 = distinct !DISubprogram(name: "fstat64", scope: !2365, file: !2365, line: 516, type: !2494, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2496)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{!627, !627, !2460}
!2496 = !{!2497, !2498}
!2497 = !DILocalVariable(name: "__fd", arg: 1, scope: !2493, file: !2365, line: 516, type: !627)
!2498 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2493, file: !2365, line: 516, type: !2460)
!2499 = !DILocation(line: 0, scope: !2493)
!2500 = !DILocation(line: 518, column: 10, scope: !2493)
!2501 = !DILocation(line: 518, column: 3, scope: !2493)
!2502 = distinct !DISubprogram(name: "fstatat64", scope: !2365, file: !2365, line: 523, type: !2503, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2505)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{!627, !627, !632, !2460, !627}
!2505 = !{!2506, !2507, !2508, !2509}
!2506 = !DILocalVariable(name: "__fd", arg: 1, scope: !2502, file: !2365, line: 523, type: !627)
!2507 = !DILocalVariable(name: "__filename", arg: 2, scope: !2502, file: !2365, line: 523, type: !632)
!2508 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2502, file: !2365, line: 523, type: !2460)
!2509 = !DILocalVariable(name: "__flag", arg: 4, scope: !2502, file: !2365, line: 523, type: !627)
!2510 = !DILocation(line: 0, scope: !2502)
!2511 = !DILocation(line: 526, column: 10, scope: !2502)
!2512 = !DILocation(line: 526, column: 3, scope: !2502)
!2513 = distinct !DISubprogram(name: "label_rtx", scope: !3, file: !3, line: 134, type: !2514, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2516)
!2514 = !DISubroutineType(types: !2515)
!2515 = !{!810, !636}
!2516 = !{!2517, !2518}
!2517 = !DILocalVariable(name: "label", arg: 1, scope: !2513, file: !3, line: 134, type: !636)
!2518 = !DILocalVariable(name: "r", scope: !2519, file: !3, line: 140, type: !810)
!2519 = distinct !DILexicalBlock(scope: !2520, file: !3, line: 139, column: 5)
!2520 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 138, column: 7)
!2521 = !DILocation(line: 0, scope: !2513)
!2522 = !DILocation(line: 136, column: 3, scope: !2513)
!2523 = !DILocation(line: 138, column: 8, scope: !2520)
!2524 = !DILocation(line: 138, column: 7, scope: !2513)
!2525 = !DILocation(line: 140, column: 15, scope: !2519)
!2526 = !DILocation(line: 0, scope: !2519)
!2527 = !DILocation(line: 141, column: 7, scope: !2519)
!2528 = !DILocation(line: 142, column: 11, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2519, file: !3, line: 142, column: 11)
!2530 = !DILocation(line: 142, column: 32, scope: !2529)
!2531 = !DILocation(line: 142, column: 35, scope: !2529)
!2532 = !DILocation(line: 142, column: 11, scope: !2519)
!2533 = !DILocation(line: 143, column: 2, scope: !2529)
!2534 = !DILocation(line: 143, column: 23, scope: !2529)
!2535 = !DILocation(line: 146, column: 10, scope: !2513)
!2536 = !DILocation(line: 146, column: 3, scope: !2513)
!2537 = distinct !DISubprogram(name: "force_label_rtx", scope: !3, file: !3, line: 152, type: !2514, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2538)
!2538 = !{!2539, !2540, !2541}
!2539 = !DILocalVariable(name: "label", arg: 1, scope: !2537, file: !3, line: 152, type: !636)
!2540 = !DILocalVariable(name: "ref", scope: !2537, file: !3, line: 154, type: !810)
!2541 = !DILocalVariable(name: "function", scope: !2537, file: !3, line: 155, type: !636)
!2542 = !DILocation(line: 0, scope: !2537)
!2543 = !DILocation(line: 154, column: 13, scope: !2537)
!2544 = !DILocation(line: 155, column: 19, scope: !2537)
!2545 = !DILocation(line: 157, column: 3, scope: !2537)
!2546 = !DILocation(line: 159, column: 19, scope: !2537)
!2547 = !DILocation(line: 159, column: 17, scope: !2537)
!2548 = !DILocation(line: 160, column: 3, scope: !2537)
!2549 = distinct !DISubprogram(name: "emit_jump", scope: !3, file: !3, line: 166, type: !2550, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{null, !810}
!2552 = !{!2553}
!2553 = !DILocalVariable(name: "label", arg: 1, scope: !2549, file: !3, line: 166, type: !810)
!2554 = !DILocation(line: 0, scope: !2549)
!2555 = !DILocation(line: 168, column: 3, scope: !2549)
!2556 = !DILocation(line: 169, column: 19, scope: !2549)
!2557 = !DILocation(line: 169, column: 3, scope: !2549)
!2558 = !DILocation(line: 170, column: 3, scope: !2549)
!2559 = !DILocation(line: 171, column: 1, scope: !2549)
!2560 = distinct !DISubprogram(name: "expand_computed_goto", scope: !3, file: !3, line: 177, type: !2561, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2563)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{null, !636}
!2563 = !{!2564, !2565}
!2564 = !DILocalVariable(name: "exp", arg: 1, scope: !2560, file: !3, line: 177, type: !636)
!2565 = !DILocalVariable(name: "x", scope: !2560, file: !3, line: 179, type: !810)
!2566 = !DILocation(line: 0, scope: !2560)
!2567 = !DILocation(line: 179, column: 11, scope: !2560)
!2568 = !DILocation(line: 181, column: 7, scope: !2560)
!2569 = !DILocation(line: 183, column: 3, scope: !2560)
!2570 = !DILocation(line: 184, column: 3, scope: !2560)
!2571 = !DILocation(line: 185, column: 1, scope: !2560)
!2572 = distinct !DISubprogram(name: "expand_normal", scope: !615, file: !615, line: 562, type: !2514, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2573)
!2573 = !{!2574}
!2574 = !DILocalVariable(name: "exp", arg: 1, scope: !2572, file: !615, line: 562, type: !636)
!2575 = !DILocation(line: 0, scope: !2572)
!2576 = !DILocation(line: 564, column: 10, scope: !2572)
!2577 = !DILocation(line: 564, column: 3, scope: !2572)
!2578 = distinct !DISubprogram(name: "expand_label", scope: !3, file: !3, line: 201, type: !2561, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2579)
!2579 = !{!2580, !2581}
!2580 = !DILocalVariable(name: "label", arg: 1, scope: !2578, file: !3, line: 201, type: !636)
!2581 = !DILocalVariable(name: "label_r", scope: !2578, file: !3, line: 203, type: !810)
!2582 = !DILocation(line: 0, scope: !2578)
!2583 = !DILocation(line: 203, column: 17, scope: !2578)
!2584 = !DILocation(line: 205, column: 3, scope: !2578)
!2585 = !DILocation(line: 206, column: 3, scope: !2578)
!2586 = !DILocation(line: 207, column: 7, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2578, file: !3, line: 207, column: 7)
!2588 = !DILocation(line: 207, column: 7, scope: !2578)
!2589 = !DILocation(line: 208, column: 37, scope: !2587)
!2590 = !DILocation(line: 208, column: 5, scope: !2587)
!2591 = !DILocation(line: 208, column: 35, scope: !2587)
!2592 = !DILocation(line: 210, column: 7, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2578, file: !3, line: 210, column: 7)
!2594 = !DILocation(line: 210, column: 7, scope: !2578)
!2595 = !DILocation(line: 212, column: 7, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !2593, file: !3, line: 211, column: 5)
!2597 = !DILocation(line: 214, column: 4, scope: !2596)
!2598 = !DILocation(line: 214, column: 2, scope: !2596)
!2599 = !DILocation(line: 216, column: 5, scope: !2596)
!2600 = !DILocation(line: 218, column: 7, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2578, file: !3, line: 218, column: 7)
!2602 = !DILocation(line: 218, column: 7, scope: !2578)
!2603 = !DILocation(line: 219, column: 21, scope: !2601)
!2604 = !DILocation(line: 219, column: 19, scope: !2601)
!2605 = !DILocation(line: 219, column: 5, scope: !2601)
!2606 = !DILocation(line: 221, column: 7, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2578, file: !3, line: 221, column: 7)
!2608 = !DILocation(line: 221, column: 29, scope: !2607)
!2609 = !DILocation(line: 221, column: 32, scope: !2607)
!2610 = !DILocation(line: 221, column: 7, scope: !2578)
!2611 = !DILocation(line: 222, column: 5, scope: !2607)
!2612 = !DILocation(line: 223, column: 1, scope: !2578)
!2613 = !DILocation(line: 1807, column: 13, scope: !2027)
!2614 = !DILocation(line: 1807, column: 3, scope: !2027)
!2615 = !DILocation(line: 1811, column: 25, scope: !2027)
!2616 = !DILocation(line: 1811, column: 39, scope: !2027)
!2617 = !DILocation(line: 1811, column: 11, scope: !2027)
!2618 = !DILocation(line: 0, scope: !2027)
!2619 = !DILocation(line: 1812, column: 7, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2027, file: !3, line: 1812, column: 7)
!2621 = !DILocation(line: 1812, column: 13, scope: !2620)
!2622 = !DILocation(line: 1812, column: 16, scope: !2620)
!2623 = !DILocation(line: 1812, column: 7, scope: !2027)
!2624 = !DILocation(line: 1813, column: 5, scope: !2620)
!2625 = !DILocation(line: 1829, column: 21, scope: !2027)
!2626 = !DILocation(line: 1829, column: 45, scope: !2027)
!2627 = !DILocation(line: 1829, column: 5, scope: !2027)
!2628 = !DILocation(line: 1832, column: 7, scope: !2034)
!2629 = !DILocation(line: 1832, column: 7, scope: !2027)
!2630 = !DILocation(line: 1843, column: 7, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2033, file: !3, line: 1843, column: 7)
!2632 = !DILocation(line: 0, scope: !2631)
!2633 = !DILocation(line: 0, scope: !2033)
!2634 = !DILocation(line: 1843, column: 21, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2631, file: !3, line: 1843, column: 7)
!2636 = !DILocation(line: 1844, column: 24, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2635, file: !3, line: 1844, column: 6)
!2638 = !DILocation(line: 1845, column: 6, scope: !2637)
!2639 = !DILocation(line: 1845, column: 25, scope: !2637)
!2640 = !DILocation(line: 1844, column: 6, scope: !2635)
!2641 = !DILocation(line: 1843, column: 48, scope: !2635)
!2642 = !DILocation(line: 1843, column: 7, scope: !2635)
!2643 = distinct !{!2643, !2630, !2644}
!2644 = !DILocation(line: 1846, column: 4, scope: !2631)
!2645 = !DILocation(line: 1848, column: 13, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2033, file: !3, line: 1848, column: 11)
!2647 = !DILocation(line: 1848, column: 11, scope: !2033)
!2648 = !DILocation(line: 1853, column: 31, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2646, file: !3, line: 1850, column: 2)
!2650 = !DILocation(line: 1854, column: 19, scope: !2649)
!2651 = !DILocation(line: 1854, column: 6, scope: !2649)
!2652 = !DILocation(line: 1853, column: 4, scope: !2649)
!2653 = !DILocation(line: 1855, column: 2, scope: !2649)
!2654 = !DILocation(line: 1867, column: 14, scope: !2027)
!2655 = !DILocation(line: 1867, column: 3, scope: !2027)
!2656 = !DILocation(line: 1868, column: 1, scope: !2027)
!2657 = distinct !DISubprogram(name: "expand_goto", scope: !3, file: !3, line: 230, type: !2561, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2658)
!2658 = !{!2659}
!2659 = !DILocalVariable(name: "label", arg: 1, scope: !2657, file: !3, line: 230, type: !636)
!2660 = !DILocation(line: 0, scope: !2657)
!2661 = !DILocation(line: 239, column: 14, scope: !2657)
!2662 = !DILocation(line: 239, column: 3, scope: !2657)
!2663 = !DILocation(line: 240, column: 1, scope: !2657)
!2664 = distinct !DISubprogram(name: "parse_output_constraint", scope: !3, file: !3, line: 288, type: !2665, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2667)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!626, !2006, !627, !627, !627, !625, !625, !625}
!2667 = !{!2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2680}
!2668 = !DILocalVariable(name: "constraint_p", arg: 1, scope: !2664, file: !3, line: 288, type: !2006)
!2669 = !DILocalVariable(name: "operand_num", arg: 2, scope: !2664, file: !3, line: 288, type: !627)
!2670 = !DILocalVariable(name: "ninputs", arg: 3, scope: !2664, file: !3, line: 289, type: !627)
!2671 = !DILocalVariable(name: "noutputs", arg: 4, scope: !2664, file: !3, line: 289, type: !627)
!2672 = !DILocalVariable(name: "allows_mem", arg: 5, scope: !2664, file: !3, line: 289, type: !625)
!2673 = !DILocalVariable(name: "allows_reg", arg: 6, scope: !2664, file: !3, line: 290, type: !625)
!2674 = !DILocalVariable(name: "is_inout", arg: 7, scope: !2664, file: !3, line: 290, type: !625)
!2675 = !DILocalVariable(name: "constraint", scope: !2664, file: !3, line: 292, type: !632)
!2676 = !DILocalVariable(name: "p", scope: !2664, file: !3, line: 293, type: !632)
!2677 = !DILocalVariable(name: "buf", scope: !2678, file: !3, line: 323, type: !629)
!2678 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 322, column: 5)
!2679 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 321, column: 7)
!2680 = !DILocalVariable(name: "c_len", scope: !2678, file: !3, line: 324, type: !1104)
!2681 = !DILocation(line: 0, scope: !2664)
!2682 = !DILocation(line: 292, column: 28, scope: !2664)
!2683 = !DILocation(line: 297, column: 15, scope: !2664)
!2684 = !DILocation(line: 298, column: 15, scope: !2664)
!2685 = !DILocation(line: 304, column: 7, scope: !2664)
!2686 = !DILocation(line: 305, column: 8, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 305, column: 7)
!2688 = !DILocation(line: 305, column: 7, scope: !2664)
!2689 = !DILocation(line: 306, column: 9, scope: !2687)
!2690 = !DILocation(line: 306, column: 5, scope: !2687)
!2691 = !DILocation(line: 310, column: 8, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 310, column: 7)
!2693 = !DILocation(line: 310, column: 7, scope: !2664)
!2694 = !DILocation(line: 312, column: 7, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 311, column: 5)
!2696 = !DILocation(line: 313, column: 7, scope: !2695)
!2697 = !DILocation(line: 318, column: 16, scope: !2664)
!2698 = !DILocation(line: 318, column: 19, scope: !2664)
!2699 = !DILocation(line: 318, column: 15, scope: !2664)
!2700 = !DILocation(line: 318, column: 13, scope: !2664)
!2701 = !DILocation(line: 321, column: 9, scope: !2679)
!2702 = !DILocation(line: 321, column: 23, scope: !2679)
!2703 = !DILocation(line: 321, column: 7, scope: !2664)
!2704 = !DILocation(line: 324, column: 22, scope: !2678)
!2705 = !DILocation(line: 0, scope: !2678)
!2706 = !DILocation(line: 326, column: 11, scope: !2678)
!2707 = !DILocation(line: 329, column: 4, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2678, file: !3, line: 326, column: 11)
!2709 = !DILocation(line: 327, column: 2, scope: !2708)
!2710 = !DILocation(line: 332, column: 13, scope: !2678)
!2711 = !DILocation(line: 333, column: 7, scope: !2678)
!2712 = !DILocation(line: 335, column: 29, scope: !2678)
!2713 = !DILocation(line: 335, column: 13, scope: !2678)
!2714 = !DILocation(line: 335, column: 7, scope: !2678)
!2715 = !DILocation(line: 335, column: 27, scope: !2678)
!2716 = !DILocation(line: 338, column: 14, scope: !2678)
!2717 = !DILocation(line: 340, column: 46, scope: !2678)
!2718 = !DILocation(line: 340, column: 23, scope: !2678)
!2719 = !DILocation(line: 340, column: 21, scope: !2678)
!2720 = !DILocation(line: 342, column: 5, scope: !2678)
!2721 = !DILocation(line: 345, column: 23, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 345, column: 3)
!2723 = !DILocation(line: 0, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2725, file: !3, line: 355, column: 6)
!2725 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 347, column: 7)
!2726 = distinct !DILexicalBlock(scope: !2722, file: !3, line: 345, column: 3)
!2727 = !DILocation(line: 345, column: 8, scope: !2722)
!2728 = !DILocation(line: 0, scope: !2722)
!2729 = !DILocation(line: 345, column: 28, scope: !2726)
!2730 = !DILocation(line: 345, column: 3, scope: !2722)
!2731 = !DILocation(line: 346, column: 13, scope: !2726)
!2732 = !DILocation(line: 346, column: 5, scope: !2726)
!2733 = !DILocation(line: 392, column: 14, scope: !2725)
!2734 = !DILocation(line: 393, column: 2, scope: !2725)
!2735 = !DILocation(line: 387, column: 14, scope: !2725)
!2736 = !DILocation(line: 388, column: 14, scope: !2725)
!2737 = !DILocation(line: 389, column: 2, scope: !2725)
!2738 = !DILocation(line: 383, column: 14, scope: !2725)
!2739 = !DILocation(line: 384, column: 2, scope: !2725)
!2740 = !DILocation(line: 363, column: 14, scope: !2725)
!2741 = !DILocation(line: 364, column: 2, scope: !2725)
!2742 = !DILocation(line: 357, column: 6, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2724, file: !3, line: 356, column: 4)
!2744 = !DILocation(line: 358, column: 6, scope: !2743)
!2745 = !DILocation(line: 396, column: 7, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2725, file: !3, line: 396, column: 6)
!2747 = !DILocation(line: 396, column: 6, scope: !2725)
!2748 = !DILocation(line: 398, column: 6, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2725, file: !3, line: 398, column: 6)
!2750 = !DILocation(line: 398, column: 40, scope: !2749)
!2751 = !DILocation(line: 0, scope: !2749)
!2752 = !DILocation(line: 398, column: 6, scope: !2725)
!2753 = !DILocation(line: 411, column: 18, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 406, column: 4)
!2755 = distinct !DILexicalBlock(scope: !2756, file: !3, line: 403, column: 11)
!2756 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 401, column: 11)
!2757 = !DILocation(line: 345, column: 37, scope: !2726)
!2758 = !DILocation(line: 345, column: 34, scope: !2726)
!2759 = !DILocation(line: 345, column: 3, scope: !2726)
!2760 = distinct !{!2760, !2730, !2761}
!2761 = !DILocation(line: 415, column: 7, scope: !2722)
!2762 = !DILocation(line: 418, column: 1, scope: !2664)
!2763 = !DILocation(line: 350, column: 2, scope: !2725)
!2764 = !DILocation(line: 376, column: 2, scope: !2725)
!2765 = !DILocation(line: 352, column: 2, scope: !2725)
!2766 = !DILocation(line: 355, column: 6, scope: !2725)
!2767 = !DILocation(line: 377, column: 2, scope: !2725)
!2768 = distinct !DISubprogram(name: "insn_constraint_len", scope: !2769, file: !2769, line: 177, type: !2770, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2772)
!2769 = !DIFile(filename: "./tm-preds.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!1104, !630, !632}
!2772 = !{!2773, !2774}
!2773 = !DILocalVariable(name: "fc", arg: 1, scope: !2768, file: !2769, line: 177, type: !630)
!2774 = !DILocalVariable(name: "str", arg: 2, scope: !2768, file: !2769, line: 177, type: !632)
!2775 = !DILocation(line: 0, scope: !2768)
!2776 = !DILocation(line: 179, column: 3, scope: !2768)
!2777 = !DILocation(line: 185, column: 1, scope: !2768)
!2778 = distinct !DISubprogram(name: "parse_input_constraint", scope: !3, file: !3, line: 423, type: !2779, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2783)
!2779 = !DISubroutineType(types: !2780)
!2780 = !{!626, !2006, !627, !627, !627, !627, !2781, !625, !625}
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !632)
!2783 = !{!2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2802}
!2784 = !DILocalVariable(name: "constraint_p", arg: 1, scope: !2778, file: !3, line: 423, type: !2006)
!2785 = !DILocalVariable(name: "input_num", arg: 2, scope: !2778, file: !3, line: 423, type: !627)
!2786 = !DILocalVariable(name: "ninputs", arg: 3, scope: !2778, file: !3, line: 424, type: !627)
!2787 = !DILocalVariable(name: "noutputs", arg: 4, scope: !2778, file: !3, line: 424, type: !627)
!2788 = !DILocalVariable(name: "ninout", arg: 5, scope: !2778, file: !3, line: 424, type: !627)
!2789 = !DILocalVariable(name: "constraints", arg: 6, scope: !2778, file: !3, line: 425, type: !2781)
!2790 = !DILocalVariable(name: "allows_mem", arg: 7, scope: !2778, file: !3, line: 426, type: !625)
!2791 = !DILocalVariable(name: "allows_reg", arg: 8, scope: !2778, file: !3, line: 426, type: !625)
!2792 = !DILocalVariable(name: "constraint", scope: !2778, file: !3, line: 428, type: !632)
!2793 = !DILocalVariable(name: "orig_constraint", scope: !2778, file: !3, line: 429, type: !632)
!2794 = !DILocalVariable(name: "c_len", scope: !2778, file: !3, line: 430, type: !1104)
!2795 = !DILocalVariable(name: "j", scope: !2778, file: !3, line: 431, type: !1104)
!2796 = !DILocalVariable(name: "saw_match", scope: !2778, file: !3, line: 432, type: !626)
!2797 = !DILocalVariable(name: "end", scope: !2798, file: !3, line: 481, type: !629)
!2798 = distinct !DILexicalBlock(scope: !2799, file: !3, line: 480, column: 2)
!2799 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 443, column: 7)
!2800 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 441, column: 3)
!2801 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 441, column: 3)
!2802 = !DILocalVariable(name: "match", scope: !2798, file: !3, line: 482, type: !635)
!2803 = !DILocation(line: 0, scope: !2778)
!2804 = !DILocation(line: 428, column: 28, scope: !2778)
!2805 = !DILocation(line: 430, column: 18, scope: !2778)
!2806 = !DILocation(line: 436, column: 15, scope: !2778)
!2807 = !DILocation(line: 437, column: 15, scope: !2778)
!2808 = !DILocation(line: 0, scope: !2798)
!2809 = !DILocation(line: 0, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 487, column: 8)
!2811 = !DILocation(line: 0, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2799, file: !3, line: 453, column: 6)
!2813 = !DILocation(line: 441, column: 8, scope: !2801)
!2814 = !DILocation(line: 428, column: 15, scope: !2778)
!2815 = !DILocation(line: 430, column: 10, scope: !2778)
!2816 = !DILocation(line: 0, scope: !2801)
!2817 = !DILocation(line: 432, column: 8, scope: !2778)
!2818 = !DILocation(line: 441, column: 17, scope: !2800)
!2819 = !DILocation(line: 441, column: 3, scope: !2801)
!2820 = !DILocation(line: 442, column: 13, scope: !2800)
!2821 = !DILocation(line: 442, column: 5, scope: !2800)
!2822 = !DILocation(line: 520, column: 14, scope: !2799)
!2823 = !DILocation(line: 521, column: 14, scope: !2799)
!2824 = !DILocation(line: 522, column: 2, scope: !2799)
!2825 = !DILocation(line: 481, column: 4, scope: !2798)
!2826 = !DILocation(line: 486, column: 12, scope: !2798)
!2827 = !DILocation(line: 487, column: 14, scope: !2810)
!2828 = !DILocation(line: 487, column: 8, scope: !2798)
!2829 = !DILocation(line: 489, column: 8, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 488, column: 6)
!2831 = !DILocation(line: 490, column: 8, scope: !2830)
!2832 = !DILocation(line: 495, column: 9, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 495, column: 8)
!2834 = !DILocation(line: 495, column: 8, scope: !2833)
!2835 = !DILocation(line: 495, column: 13, scope: !2833)
!2836 = !DILocation(line: 496, column: 8, scope: !2833)
!2837 = !DILocation(line: 496, column: 19, scope: !2833)
!2838 = !DILocation(line: 496, column: 33, scope: !2833)
!2839 = !DILocation(line: 496, column: 47, scope: !2833)
!2840 = !DILocation(line: 495, column: 8, scope: !2798)
!2841 = !DILocation(line: 498, column: 21, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2833, file: !3, line: 497, column: 6)
!2843 = !DILocation(line: 499, column: 22, scope: !2842)
!2844 = !DILocation(line: 500, column: 16, scope: !2842)
!2845 = !DILocation(line: 506, column: 8, scope: !2842)
!2846 = !DILocation(line: 509, column: 14, scope: !2833)
!2847 = !DILocation(line: 511, column: 5, scope: !2798)
!2848 = !DILocation(line: 512, column: 2, scope: !2799)
!2849 = !DILocation(line: 441, column: 10, scope: !2801)
!2850 = !DILocation(line: 516, column: 14, scope: !2799)
!2851 = !DILocation(line: 517, column: 2, scope: !2799)
!2852 = !DILocation(line: 462, column: 14, scope: !2799)
!2853 = !DILocation(line: 463, column: 2, scope: !2799)
!2854 = !DILocation(line: 453, column: 17, scope: !2812)
!2855 = !DILocation(line: 454, column: 6, scope: !2812)
!2856 = !DILocation(line: 456, column: 6, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 455, column: 4)
!2858 = !DILocation(line: 457, column: 6, scope: !2857)
!2859 = !DILocation(line: 445, column: 17, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2799, file: !3, line: 445, column: 6)
!2861 = !DILocation(line: 445, column: 6, scope: !2799)
!2862 = !DILocation(line: 525, column: 8, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2799, file: !3, line: 525, column: 6)
!2864 = !DILocation(line: 525, column: 6, scope: !2799)
!2865 = !DILocation(line: 530, column: 6, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2799, file: !3, line: 530, column: 6)
!2867 = !DILocation(line: 531, column: 6, scope: !2866)
!2868 = !DILocation(line: 0, scope: !2866)
!2869 = !DILocation(line: 530, column: 6, scope: !2799)
!2870 = !DILocation(line: 544, column: 18, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2872, file: !3, line: 539, column: 4)
!2872 = distinct !DILexicalBlock(scope: !2873, file: !3, line: 536, column: 11)
!2873 = distinct !DILexicalBlock(scope: !2866, file: !3, line: 534, column: 11)
!2874 = !DILocation(line: 441, column: 31, scope: !2800)
!2875 = !DILocation(line: 441, column: 28, scope: !2800)
!2876 = !DILocation(line: 441, column: 3, scope: !2800)
!2877 = distinct !{!2877, !2819, !2878}
!2878 = !DILocation(line: 548, column: 7, scope: !2801)
!2879 = !DILocation(line: 550, column: 7, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 550, column: 7)
!2881 = !DILocation(line: 554, column: 1, scope: !2778)
!2882 = !DILocation(line: 447, column: 54, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 446, column: 4)
!2884 = !DILocation(line: 527, column: 54, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 526, column: 4)
!2886 = !DILocation(line: 447, column: 6, scope: !2883)
!2887 = !DILocation(line: 448, column: 6, scope: !2883)
!2888 = !DILocation(line: 453, column: 6, scope: !2799)
!2889 = !DILocation(line: 527, column: 6, scope: !2885)
!2890 = !DILocation(line: 528, column: 6, scope: !2885)
!2891 = !DILocation(line: 550, column: 17, scope: !2880)
!2892 = !DILocation(line: 550, column: 21, scope: !2880)
!2893 = !DILocation(line: 550, column: 7, scope: !2778)
!2894 = !DILocation(line: 551, column: 5, scope: !2880)
!2895 = distinct !DISubprogram(name: "tree_overlaps_hard_reg_set", scope: !3, file: !3, line: 587, type: !2896, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2899)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!636, !636, !2898}
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2899 = !{!2900, !2901}
!2900 = !DILocalVariable(name: "decl", arg: 1, scope: !2895, file: !3, line: 587, type: !636)
!2901 = !DILocalVariable(name: "regs", arg: 2, scope: !2895, file: !3, line: 587, type: !2898)
!2902 = !DILocation(line: 0, scope: !2895)
!2903 = !DILocation(line: 589, column: 10, scope: !2895)
!2904 = !DILocation(line: 589, column: 3, scope: !2895)
!2905 = distinct !DISubprogram(name: "decl_overlaps_hard_reg_set_p", scope: !3, file: !3, line: 560, type: !2906, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2908)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!636, !993, !2004, !631}
!2908 = !{!2909, !2910, !2911, !2912, !2913, !2915}
!2909 = !DILocalVariable(name: "declp", arg: 1, scope: !2905, file: !3, line: 560, type: !993)
!2910 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !2905, file: !3, line: 560, type: !2004)
!2911 = !DILocalVariable(name: "data", arg: 3, scope: !2905, file: !3, line: 561, type: !631)
!2912 = !DILocalVariable(name: "decl", scope: !2905, file: !3, line: 563, type: !636)
!2913 = !DILocalVariable(name: "regs", scope: !2905, file: !3, line: 564, type: !2914)
!2914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1998)
!2915 = !DILocalVariable(name: "reg", scope: !2916, file: !3, line: 572, type: !810)
!2916 = distinct !DILexicalBlock(scope: !2917, file: !3, line: 571, column: 2)
!2917 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 568, column: 11)
!2918 = distinct !DILexicalBlock(scope: !2919, file: !3, line: 567, column: 5)
!2919 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 566, column: 7)
!2920 = !DILocation(line: 0, scope: !2905)
!2921 = !DILocation(line: 563, column: 15, scope: !2905)
!2922 = !DILocation(line: 564, column: 36, scope: !2905)
!2923 = !DILocation(line: 566, column: 7, scope: !2919)
!2924 = !DILocation(line: 566, column: 24, scope: !2919)
!2925 = !DILocation(line: 566, column: 7, scope: !2905)
!2926 = !DILocation(line: 568, column: 11, scope: !2917)
!2927 = !DILocation(line: 569, column: 4, scope: !2917)
!2928 = !DILocation(line: 569, column: 7, scope: !2917)
!2929 = !DILocation(line: 0, scope: !2917)
!2930 = !DILocation(line: 570, column: 4, scope: !2917)
!2931 = !DILocation(line: 570, column: 7, scope: !2917)
!2932 = !DILocation(line: 570, column: 31, scope: !2917)
!2933 = !DILocation(line: 568, column: 11, scope: !2918)
!2934 = !DILocation(line: 572, column: 14, scope: !2916)
!2935 = !DILocation(line: 0, scope: !2916)
!2936 = !DILocation(line: 574, column: 33, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2916, file: !3, line: 574, column: 8)
!2938 = !DILocation(line: 574, column: 40, scope: !2937)
!2939 = !DILocation(line: 574, column: 56, scope: !2937)
!2940 = !DILocation(line: 574, column: 8, scope: !2937)
!2941 = !DILocation(line: 581, column: 3, scope: !2905)
!2942 = !DILocation(line: 582, column: 1, scope: !2905)
!2943 = distinct !DISubprogram(name: "expand_asm_stmt", scope: !3, file: !3, line: 1094, type: !2944, scopeLine: 1095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2946)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null, !958}
!2946 = !{!2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961}
!2947 = !DILocalVariable(name: "stmt", arg: 1, scope: !2943, file: !3, line: 1094, type: !958)
!2948 = !DILocalVariable(name: "noutputs", scope: !2943, file: !3, line: 1096, type: !627)
!2949 = !DILocalVariable(name: "outputs", scope: !2943, file: !3, line: 1097, type: !636)
!2950 = !DILocalVariable(name: "tail", scope: !2943, file: !3, line: 1097, type: !636)
!2951 = !DILocalVariable(name: "t", scope: !2943, file: !3, line: 1097, type: !636)
!2952 = !DILocalVariable(name: "o", scope: !2943, file: !3, line: 1098, type: !993)
!2953 = !DILocalVariable(name: "i", scope: !2943, file: !3, line: 1099, type: !1104)
!2954 = !DILocalVariable(name: "n", scope: !2943, file: !3, line: 1099, type: !1104)
!2955 = !DILocalVariable(name: "s", scope: !2943, file: !3, line: 1100, type: !632)
!2956 = !DILocalVariable(name: "str", scope: !2943, file: !3, line: 1101, type: !636)
!2957 = !DILocalVariable(name: "out", scope: !2943, file: !3, line: 1101, type: !636)
!2958 = !DILocalVariable(name: "in", scope: !2943, file: !3, line: 1101, type: !636)
!2959 = !DILocalVariable(name: "cl", scope: !2943, file: !3, line: 1101, type: !636)
!2960 = !DILocalVariable(name: "labels", scope: !2943, file: !3, line: 1101, type: !636)
!2961 = !DILocalVariable(name: "locus", scope: !2943, file: !3, line: 1102, type: !760)
!2962 = !DILocation(line: 0, scope: !2943)
!2963 = !DILocation(line: 1102, column: 22, scope: !2943)
!2964 = !DILocation(line: 1108, column: 7, scope: !2943)
!2965 = !DILocation(line: 1109, column: 9, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 1109, column: 7)
!2967 = !DILocation(line: 1109, column: 7, scope: !2943)
!2968 = !DILocation(line: 1111, column: 17, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1110, column: 5)
!2970 = !DILocation(line: 1112, column: 12, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 1112, column: 7)
!2972 = !DILocation(line: 0, scope: !2971)
!2973 = !DILocation(line: 0, scope: !2969)
!2974 = !DILocation(line: 1112, column: 21, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 1112, column: 7)
!2976 = !DILocation(line: 1112, column: 7, scope: !2971)
!2977 = !DILocation(line: 1113, column: 51, scope: !2975)
!2978 = !DILocation(line: 1113, column: 23, scope: !2975)
!2979 = !DILocation(line: 1113, column: 6, scope: !2975)
!2980 = !DILocation(line: 1113, column: 21, scope: !2975)
!2981 = !DILocation(line: 1112, column: 27, scope: !2975)
!2982 = !DILocation(line: 1112, column: 7, scope: !2975)
!2983 = distinct !{!2983, !2976, !2984}
!2984 = !DILocation(line: 1113, column: 52, scope: !2971)
!2985 = !DILocation(line: 1117, column: 7, scope: !2943)
!2986 = !DILocation(line: 1118, column: 9, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 1118, column: 7)
!2988 = !DILocation(line: 1118, column: 7, scope: !2943)
!2989 = !DILocation(line: 1120, column: 16, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 1119, column: 5)
!2991 = !DILocation(line: 1121, column: 12, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 1121, column: 7)
!2993 = !DILocation(line: 0, scope: !2992)
!2994 = !DILocation(line: 0, scope: !2990)
!2995 = !DILocation(line: 1121, column: 21, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 1121, column: 7)
!2997 = !DILocation(line: 1121, column: 7, scope: !2992)
!2998 = !DILocation(line: 1122, column: 50, scope: !2996)
!2999 = !DILocation(line: 1122, column: 23, scope: !2996)
!3000 = !DILocation(line: 1122, column: 6, scope: !2996)
!3001 = !DILocation(line: 1122, column: 21, scope: !2996)
!3002 = !DILocation(line: 1121, column: 27, scope: !2996)
!3003 = !DILocation(line: 1121, column: 7, scope: !2996)
!3004 = distinct !{!3004, !2997, !3005}
!3005 = !DILocation(line: 1122, column: 51, scope: !2992)
!3006 = !DILocation(line: 1126, column: 7, scope: !2943)
!3007 = !DILocation(line: 1127, column: 9, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 1127, column: 7)
!3009 = !DILocation(line: 1127, column: 7, scope: !2943)
!3010 = !DILocation(line: 1129, column: 16, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 1128, column: 5)
!3012 = !DILocation(line: 1130, column: 12, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3011, file: !3, line: 1130, column: 7)
!3014 = !DILocation(line: 0, scope: !3013)
!3015 = !DILocation(line: 0, scope: !3011)
!3016 = !DILocation(line: 1130, column: 21, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 1130, column: 7)
!3018 = !DILocation(line: 1130, column: 7, scope: !3013)
!3019 = !DILocation(line: 1131, column: 52, scope: !3017)
!3020 = !DILocation(line: 1131, column: 23, scope: !3017)
!3021 = !DILocation(line: 1131, column: 6, scope: !3017)
!3022 = !DILocation(line: 1131, column: 21, scope: !3017)
!3023 = !DILocation(line: 1130, column: 27, scope: !3017)
!3024 = !DILocation(line: 1130, column: 7, scope: !3017)
!3025 = distinct !{!3025, !3018, !3026}
!3026 = !DILocation(line: 1131, column: 53, scope: !3013)
!3027 = !DILocation(line: 1135, column: 7, scope: !2943)
!3028 = !DILocation(line: 1136, column: 9, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 1136, column: 7)
!3030 = !DILocation(line: 1136, column: 7, scope: !2943)
!3031 = !DILocation(line: 1138, column: 20, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 1137, column: 5)
!3033 = !DILocation(line: 1139, column: 12, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 1139, column: 7)
!3035 = !DILocation(line: 0, scope: !3034)
!3036 = !DILocation(line: 0, scope: !3032)
!3037 = !DILocation(line: 1139, column: 21, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 1139, column: 7)
!3039 = !DILocation(line: 1139, column: 7, scope: !3034)
!3040 = !DILocation(line: 1140, column: 50, scope: !3038)
!3041 = !DILocation(line: 1140, column: 23, scope: !3038)
!3042 = !DILocation(line: 1140, column: 6, scope: !3038)
!3043 = !DILocation(line: 1140, column: 21, scope: !3038)
!3044 = !DILocation(line: 1139, column: 27, scope: !3038)
!3045 = !DILocation(line: 1139, column: 7, scope: !3038)
!3046 = distinct !{!3046, !3039, !3047}
!3047 = !DILocation(line: 1140, column: 51, scope: !3034)
!3048 = !DILocation(line: 1143, column: 7, scope: !2943)
!3049 = !DILocation(line: 1144, column: 23, scope: !2943)
!3050 = !DILocation(line: 1144, column: 9, scope: !2943)
!3051 = !DILocation(line: 1146, column: 7, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 1146, column: 7)
!3053 = !DILocation(line: 1146, column: 7, scope: !2943)
!3054 = !DILocation(line: 1148, column: 28, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 1147, column: 5)
!3056 = !DILocation(line: 1148, column: 7, scope: !3055)
!3057 = !DILocation(line: 1149, column: 7, scope: !3055)
!3058 = !DILocation(line: 1153, column: 14, scope: !2943)
!3059 = !DILocation(line: 1155, column: 16, scope: !2943)
!3060 = !DILocation(line: 1158, column: 8, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 1158, column: 3)
!3062 = !DILocation(line: 0, scope: !3061)
!3063 = !DILocation(line: 1158, column: 3, scope: !3061)
!3064 = !DILocation(line: 1159, column: 12, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 1158, column: 3)
!3066 = !DILocation(line: 1159, column: 5, scope: !3065)
!3067 = !DILocation(line: 1159, column: 10, scope: !3065)
!3068 = !DILocation(line: 1158, column: 44, scope: !3065)
!3069 = !DILocation(line: 1158, column: 64, scope: !3065)
!3070 = !DILocation(line: 1158, column: 3, scope: !3065)
!3071 = distinct !{!3071, !3063, !3072}
!3072 = !DILocation(line: 1159, column: 12, scope: !3061)
!3073 = !DILocation(line: 1164, column: 10, scope: !2943)
!3074 = !DILocation(line: 1163, column: 3, scope: !2943)
!3075 = !DILocation(line: 1167, column: 8, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 1167, column: 3)
!3077 = !DILocation(line: 0, scope: !3076)
!3078 = !DILocation(line: 1167, column: 3, scope: !3076)
!3079 = !DILocation(line: 1169, column: 11, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 1169, column: 11)
!3081 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 1168, column: 5)
!3082 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 1167, column: 3)
!3083 = !DILocation(line: 1169, column: 19, scope: !3080)
!3084 = !DILocation(line: 1169, column: 16, scope: !3080)
!3085 = !DILocation(line: 1169, column: 11, scope: !3081)
!3086 = !DILocation(line: 1171, column: 4, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 1170, column: 2)
!3088 = !DILocation(line: 1172, column: 4, scope: !3087)
!3089 = !DILocation(line: 1176, column: 22, scope: !3087)
!3090 = !DILocation(line: 1177, column: 2, scope: !3087)
!3091 = !DILocation(line: 1167, column: 44, scope: !3082)
!3092 = !DILocation(line: 1167, column: 64, scope: !3082)
!3093 = !DILocation(line: 1167, column: 3, scope: !3082)
!3094 = distinct !{!3094, !3078, !3095}
!3095 = !DILocation(line: 1178, column: 5, scope: !3076)
!3096 = !DILocation(line: 1179, column: 1, scope: !2943)
!3097 = distinct !DISubprogram(name: "gimple_location", scope: !550, file: !550, line: 1139, type: !3098, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3101)
!3098 = !DISubroutineType(types: !3099)
!3099 = !{!760, !3100}
!3100 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !637, line: 60, baseType: !2002)
!3101 = !{!3102}
!3102 = !DILocalVariable(name: "g", arg: 1, scope: !3097, file: !550, line: 1139, type: !3100)
!3103 = !DILocation(line: 0, scope: !3097)
!3104 = !DILocation(line: 1141, column: 20, scope: !3097)
!3105 = !DILocation(line: 1141, column: 3, scope: !3097)
!3106 = distinct !DISubprogram(name: "gimple_asm_noutputs", scope: !550, file: !550, line: 2591, type: !3107, scopeLine: 2592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3109)
!3107 = !DISubroutineType(types: !3108)
!3108 = !{!7, !3100}
!3109 = !{!3110}
!3110 = !DILocalVariable(name: "gs", arg: 1, scope: !3106, file: !550, line: 2591, type: !3100)
!3111 = !DILocation(line: 0, scope: !3106)
!3112 = !DILocation(line: 2594, column: 14, scope: !3106)
!3113 = !DILocation(line: 2594, column: 25, scope: !3106)
!3114 = !DILocation(line: 2594, column: 10, scope: !3106)
!3115 = !DILocation(line: 2594, column: 3, scope: !3106)
!3116 = distinct !DISubprogram(name: "gimple_asm_output_op", scope: !550, file: !550, line: 2652, type: !3117, scopeLine: 2653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3119)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!636, !3100, !7}
!3119 = !{!3120, !3121}
!3120 = !DILocalVariable(name: "gs", arg: 1, scope: !3116, file: !550, line: 2652, type: !3100)
!3121 = !DILocalVariable(name: "index", arg: 2, scope: !3116, file: !550, line: 2652, type: !7)
!3122 = !DILocation(line: 0, scope: !3116)
!3123 = !DILocation(line: 2655, column: 3, scope: !3116)
!3124 = !DILocation(line: 2656, column: 48, scope: !3116)
!3125 = !DILocation(line: 2656, column: 33, scope: !3116)
!3126 = !DILocation(line: 2656, column: 31, scope: !3116)
!3127 = !DILocation(line: 2656, column: 10, scope: !3116)
!3128 = !DILocation(line: 2656, column: 3, scope: !3116)
!3129 = distinct !DISubprogram(name: "gimple_asm_ninputs", scope: !550, file: !550, line: 2581, type: !3107, scopeLine: 2582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3130)
!3130 = !{!3131}
!3131 = !DILocalVariable(name: "gs", arg: 1, scope: !3129, file: !550, line: 2581, type: !3100)
!3132 = !DILocation(line: 0, scope: !3129)
!3133 = !DILocation(line: 2584, column: 25, scope: !3129)
!3134 = !DILocation(line: 2584, column: 10, scope: !3129)
!3135 = !DILocation(line: 2584, column: 3, scope: !3129)
!3136 = distinct !DISubprogram(name: "gimple_asm_input_op", scope: !550, file: !550, line: 2619, type: !3117, scopeLine: 2620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3137)
!3137 = !{!3138, !3139}
!3138 = !DILocalVariable(name: "gs", arg: 1, scope: !3136, file: !550, line: 2619, type: !3100)
!3139 = !DILocalVariable(name: "index", arg: 2, scope: !3136, file: !550, line: 2619, type: !7)
!3140 = !DILocation(line: 0, scope: !3136)
!3141 = !DILocation(line: 2622, column: 3, scope: !3136)
!3142 = !DILocation(line: 2623, column: 10, scope: !3136)
!3143 = !DILocation(line: 2623, column: 3, scope: !3136)
!3144 = distinct !DISubprogram(name: "gimple_asm_nclobbers", scope: !550, file: !550, line: 2601, type: !3107, scopeLine: 2602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3145)
!3145 = !{!3146}
!3146 = !DILocalVariable(name: "gs", arg: 1, scope: !3144, file: !550, line: 2601, type: !3100)
!3147 = !DILocation(line: 0, scope: !3144)
!3148 = !DILocation(line: 2604, column: 14, scope: !3144)
!3149 = !DILocation(line: 2604, column: 25, scope: !3144)
!3150 = !DILocation(line: 2604, column: 10, scope: !3144)
!3151 = !DILocation(line: 2604, column: 3, scope: !3144)
!3152 = distinct !DISubprogram(name: "gimple_asm_clobber_op", scope: !550, file: !550, line: 2685, type: !3117, scopeLine: 2686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3153)
!3153 = !{!3154, !3155}
!3154 = !DILocalVariable(name: "gs", arg: 1, scope: !3152, file: !550, line: 2685, type: !3100)
!3155 = !DILocalVariable(name: "index", arg: 2, scope: !3152, file: !550, line: 2685, type: !7)
!3156 = !DILocation(line: 0, scope: !3152)
!3157 = !DILocation(line: 2688, column: 3, scope: !3152)
!3158 = !DILocation(line: 2689, column: 48, scope: !3152)
!3159 = !DILocation(line: 2689, column: 33, scope: !3152)
!3160 = !DILocation(line: 2689, column: 31, scope: !3152)
!3161 = !DILocation(line: 2689, column: 68, scope: !3152)
!3162 = !DILocation(line: 2689, column: 53, scope: !3152)
!3163 = !DILocation(line: 2689, column: 51, scope: !3152)
!3164 = !DILocation(line: 2689, column: 10, scope: !3152)
!3165 = !DILocation(line: 2689, column: 3, scope: !3152)
!3166 = distinct !DISubprogram(name: "gimple_asm_nlabels", scope: !550, file: !550, line: 2610, type: !3107, scopeLine: 2611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3167)
!3167 = !{!3168}
!3168 = !DILocalVariable(name: "gs", arg: 1, scope: !3166, file: !550, line: 2610, type: !3100)
!3169 = !DILocation(line: 0, scope: !3166)
!3170 = !DILocation(line: 2613, column: 14, scope: !3166)
!3171 = !DILocation(line: 2613, column: 25, scope: !3166)
!3172 = !DILocation(line: 2613, column: 10, scope: !3166)
!3173 = !DILocation(line: 2613, column: 3, scope: !3166)
!3174 = distinct !DISubprogram(name: "gimple_asm_label_op", scope: !550, file: !550, line: 2707, type: !3117, scopeLine: 2708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3175)
!3175 = !{!3176, !3177}
!3176 = !DILocalVariable(name: "gs", arg: 1, scope: !3174, file: !550, line: 2707, type: !3100)
!3177 = !DILocalVariable(name: "index", arg: 2, scope: !3174, file: !550, line: 2707, type: !7)
!3178 = !DILocation(line: 0, scope: !3174)
!3179 = !DILocation(line: 2710, column: 3, scope: !3174)
!3180 = !DILocation(line: 2711, column: 48, scope: !3174)
!3181 = !DILocation(line: 2711, column: 33, scope: !3174)
!3182 = !DILocation(line: 2711, column: 31, scope: !3174)
!3183 = !DILocation(line: 2711, column: 68, scope: !3174)
!3184 = !DILocation(line: 2711, column: 53, scope: !3174)
!3185 = !DILocation(line: 2711, column: 51, scope: !3174)
!3186 = !DILocation(line: 2711, column: 10, scope: !3174)
!3187 = !DILocation(line: 2711, column: 3, scope: !3174)
!3188 = distinct !DISubprogram(name: "gimple_asm_string", scope: !550, file: !550, line: 2729, type: !3189, scopeLine: 2730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3191)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{!632, !3100}
!3191 = !{!3192}
!3192 = !DILocalVariable(name: "gs", arg: 1, scope: !3188, file: !550, line: 2729, type: !3100)
!3193 = !DILocation(line: 0, scope: !3188)
!3194 = !DILocation(line: 2732, column: 25, scope: !3188)
!3195 = !DILocation(line: 2732, column: 3, scope: !3188)
!3196 = distinct !DISubprogram(name: "gimple_asm_input_p", scope: !550, file: !550, line: 2775, type: !3197, scopeLine: 2776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3199)
!3197 = !DISubroutineType(types: !3198)
!3198 = !{!626, !3100}
!3199 = !{!3200}
!3200 = !DILocalVariable(name: "gs", arg: 1, scope: !3196, file: !550, line: 2775, type: !3100)
!3201 = !DILocation(line: 0, scope: !3196)
!3202 = !DILocation(line: 2778, column: 22, scope: !3196)
!3203 = !DILocation(line: 2778, column: 10, scope: !3196)
!3204 = !DILocation(line: 2778, column: 3, scope: !3196)
!3205 = distinct !DISubprogram(name: "expand_asm_loc", scope: !3, file: !3, line: 258, type: !3206, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3208)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{null, !636, !627, !760}
!3208 = !{!3209, !3210, !3211, !3212}
!3209 = !DILocalVariable(name: "string", arg: 1, scope: !3205, file: !3, line: 258, type: !636)
!3210 = !DILocalVariable(name: "vol", arg: 2, scope: !3205, file: !3, line: 258, type: !627)
!3211 = !DILocalVariable(name: "locus", arg: 3, scope: !3205, file: !3, line: 258, type: !760)
!3212 = !DILocalVariable(name: "body", scope: !3205, file: !3, line: 260, type: !810)
!3213 = !DILocation(line: 0, scope: !3205)
!3214 = !DILocation(line: 262, column: 7, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3205, file: !3, line: 262, column: 7)
!3216 = !DILocation(line: 262, column: 26, scope: !3215)
!3217 = !DILocation(line: 262, column: 7, scope: !3205)
!3218 = !DILocation(line: 263, column: 14, scope: !3215)
!3219 = !DILocation(line: 263, column: 5, scope: !3215)
!3220 = !DILocation(line: 265, column: 10, scope: !3205)
!3221 = !DILocation(line: 269, column: 3, scope: !3205)
!3222 = !DILocation(line: 269, column: 25, scope: !3205)
!3223 = !DILocation(line: 271, column: 3, scope: !3205)
!3224 = !DILocation(line: 272, column: 1, scope: !3205)
!3225 = distinct !DISubprogram(name: "gimple_asm_volatile_p", scope: !550, file: !550, line: 2739, type: !3197, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3226)
!3226 = !{!3227}
!3227 = !DILocalVariable(name: "gs", arg: 1, scope: !3225, file: !550, line: 2739, type: !3100)
!3228 = !DILocation(line: 0, scope: !3225)
!3229 = !DILocation(line: 2742, column: 22, scope: !3225)
!3230 = !DILocation(line: 2742, column: 10, scope: !3225)
!3231 = !DILocation(line: 2742, column: 3, scope: !3225)
!3232 = distinct !DISubprogram(name: "expand_asm_operands", scope: !3, file: !3, line: 635, type: !3233, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3235)
!3233 = !DISubroutineType(types: !3234)
!3234 = !{null, !636, !636, !636, !636, !636, !627, !760}
!3235 = !{!3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3267, !3271, !3272, !3273, !3274, !3275, !3276, !3280, !3281, !3282, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3311, !3314, !3315, !3319, !3323, !3328, !3329, !3333, !3334, !3335}
!3236 = !DILocalVariable(name: "string", arg: 1, scope: !3232, file: !3, line: 635, type: !636)
!3237 = !DILocalVariable(name: "outputs", arg: 2, scope: !3232, file: !3, line: 635, type: !636)
!3238 = !DILocalVariable(name: "inputs", arg: 3, scope: !3232, file: !3, line: 635, type: !636)
!3239 = !DILocalVariable(name: "clobbers", arg: 4, scope: !3232, file: !3, line: 636, type: !636)
!3240 = !DILocalVariable(name: "labels", arg: 5, scope: !3232, file: !3, line: 636, type: !636)
!3241 = !DILocalVariable(name: "vol", arg: 6, scope: !3232, file: !3, line: 636, type: !627)
!3242 = !DILocalVariable(name: "locus", arg: 7, scope: !3232, file: !3, line: 636, type: !760)
!3243 = !DILocalVariable(name: "argvec", scope: !3232, file: !3, line: 638, type: !837)
!3244 = !DILocalVariable(name: "constraintvec", scope: !3232, file: !3, line: 638, type: !837)
!3245 = !DILocalVariable(name: "labelvec", scope: !3232, file: !3, line: 638, type: !837)
!3246 = !DILocalVariable(name: "body", scope: !3232, file: !3, line: 639, type: !810)
!3247 = !DILocalVariable(name: "ninputs", scope: !3232, file: !3, line: 640, type: !627)
!3248 = !DILocalVariable(name: "noutputs", scope: !3232, file: !3, line: 641, type: !627)
!3249 = !DILocalVariable(name: "nlabels", scope: !3232, file: !3, line: 642, type: !627)
!3250 = !DILocalVariable(name: "ninout", scope: !3232, file: !3, line: 643, type: !627)
!3251 = !DILocalVariable(name: "nclobbers", scope: !3232, file: !3, line: 644, type: !627)
!3252 = !DILocalVariable(name: "clobbered_regs", scope: !3232, file: !3, line: 645, type: !2000)
!3253 = !DILocalVariable(name: "clobber_conflict_found", scope: !3232, file: !3, line: 646, type: !627)
!3254 = !DILocalVariable(name: "tail", scope: !3232, file: !3, line: 647, type: !636)
!3255 = !DILocalVariable(name: "t", scope: !3232, file: !3, line: 648, type: !636)
!3256 = !DILocalVariable(name: "i", scope: !3232, file: !3, line: 649, type: !627)
!3257 = !DILocalVariable(name: "output_rtx", scope: !3232, file: !3, line: 651, type: !1996)
!3258 = !DILocalVariable(name: "inout_opnum", scope: !3232, file: !3, line: 652, type: !2004)
!3259 = !DILocalVariable(name: "real_output_rtx", scope: !3232, file: !3, line: 653, type: !1996)
!3260 = !DILocalVariable(name: "inout_mode", scope: !3232, file: !3, line: 654, type: !2005)
!3261 = !DILocalVariable(name: "constraints", scope: !3232, file: !3, line: 655, type: !2006)
!3262 = !DILocalVariable(name: "old_generating_concat_p", scope: !3232, file: !3, line: 656, type: !627)
!3263 = !DILocalVariable(name: "regname", scope: !3264, file: !3, line: 686, type: !632)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 685, column: 5)
!3265 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 684, column: 3)
!3266 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 684, column: 3)
!3267 = !DILocalVariable(name: "val", scope: !3268, file: !3, line: 718, type: !636)
!3268 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 717, column: 5)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 716, column: 3)
!3270 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 716, column: 3)
!3271 = !DILocalVariable(name: "type", scope: !3268, file: !3, line: 719, type: !636)
!3272 = !DILocalVariable(name: "constraint", scope: !3268, file: !3, line: 720, type: !632)
!3273 = !DILocalVariable(name: "is_inout", scope: !3268, file: !3, line: 721, type: !626)
!3274 = !DILocalVariable(name: "allows_reg", scope: !3268, file: !3, line: 722, type: !626)
!3275 = !DILocalVariable(name: "allows_mem", scope: !3268, file: !3, line: 723, type: !626)
!3276 = !DILocalVariable(name: "allows_reg", scope: !3277, file: !3, line: 757, type: !626)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 756, column: 5)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 755, column: 3)
!3279 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 755, column: 3)
!3280 = !DILocalVariable(name: "allows_mem", scope: !3277, file: !3, line: 757, type: !626)
!3281 = !DILocalVariable(name: "constraint", scope: !3277, file: !3, line: 758, type: !632)
!3282 = !DILocalVariable(name: "val", scope: !3283, file: !3, line: 779, type: !636)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !3, line: 778, column: 5)
!3284 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 777, column: 3)
!3285 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 777, column: 3)
!3286 = !DILocalVariable(name: "type", scope: !3283, file: !3, line: 780, type: !636)
!3287 = !DILocalVariable(name: "is_inout", scope: !3283, file: !3, line: 781, type: !626)
!3288 = !DILocalVariable(name: "allows_reg", scope: !3283, file: !3, line: 782, type: !626)
!3289 = !DILocalVariable(name: "allows_mem", scope: !3283, file: !3, line: 783, type: !626)
!3290 = !DILocalVariable(name: "op", scope: !3283, file: !3, line: 784, type: !810)
!3291 = !DILocalVariable(name: "ok", scope: !3283, file: !3, line: 785, type: !626)
!3292 = !DILocalVariable(name: "allows_reg", scope: !3293, file: !3, line: 866, type: !626)
!3293 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 865, column: 5)
!3294 = distinct !DILexicalBlock(scope: !3295, file: !3, line: 864, column: 3)
!3295 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 864, column: 3)
!3296 = !DILocalVariable(name: "allows_mem", scope: !3293, file: !3, line: 866, type: !626)
!3297 = !DILocalVariable(name: "constraint", scope: !3293, file: !3, line: 867, type: !632)
!3298 = !DILocalVariable(name: "val", scope: !3293, file: !3, line: 868, type: !636)
!3299 = !DILocalVariable(name: "type", scope: !3293, file: !3, line: 868, type: !636)
!3300 = !DILocalVariable(name: "op", scope: !3293, file: !3, line: 869, type: !810)
!3301 = !DILocalVariable(name: "ok", scope: !3293, file: !3, line: 870, type: !626)
!3302 = !DILocalVariable(name: "mem", scope: !3303, file: !3, line: 915, type: !810)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 914, column: 3)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 913, column: 12)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 909, column: 6)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 902, column: 13)
!3307 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 899, column: 13)
!3308 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 897, column: 8)
!3309 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 896, column: 2)
!3310 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 895, column: 11)
!3311 = !DILocalVariable(name: "qual_type", scope: !3312, file: !3, line: 925, type: !636)
!3312 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 924, column: 3)
!3313 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 921, column: 12)
!3314 = !DILocalVariable(name: "memloc", scope: !3312, file: !3, line: 928, type: !810)
!3315 = !DILocalVariable(name: "j", scope: !3316, file: !3, line: 955, type: !627)
!3316 = distinct !DILexicalBlock(scope: !3317, file: !3, line: 954, column: 5)
!3317 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 953, column: 3)
!3318 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 953, column: 3)
!3319 = !DILocalVariable(name: "buffer", scope: !3316, file: !3, line: 956, type: !3320)
!3320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 128, elements: !3321)
!3321 = !{!3322}
!3322 = !DISubrange(count: 16)
!3323 = !DILocalVariable(name: "obody", scope: !3324, file: !3, line: 995, type: !810)
!3324 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 994, column: 5)
!3325 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 988, column: 12)
!3326 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 983, column: 12)
!3327 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 978, column: 7)
!3328 = !DILocalVariable(name: "num", scope: !3324, file: !3, line: 996, type: !627)
!3329 = !DILocalVariable(name: "regname", scope: !3330, file: !3, line: 1028, type: !632)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 1027, column: 2)
!3331 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 1026, column: 7)
!3332 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 1026, column: 7)
!3333 = !DILocalVariable(name: "j", scope: !3330, file: !3, line: 1029, type: !627)
!3334 = !DILocalVariable(name: "clobbered_reg", scope: !3330, file: !3, line: 1030, type: !810)
!3335 = !DILocalVariable(name: "opno", scope: !3336, file: !3, line: 1059, type: !627)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !3, line: 1058, column: 6)
!3337 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1057, column: 8)
!3338 = !DILocation(line: 0, scope: !3232)
!3339 = !DILocation(line: 640, column: 17, scope: !3232)
!3340 = !DILocation(line: 641, column: 18, scope: !3232)
!3341 = !DILocation(line: 642, column: 17, scope: !3232)
!3342 = !DILocation(line: 645, column: 3, scope: !3232)
!3343 = !DILocation(line: 651, column: 21, scope: !3232)
!3344 = !DILocation(line: 652, column: 22, scope: !3232)
!3345 = !DILocation(line: 653, column: 26, scope: !3232)
!3346 = !DILocation(line: 654, column: 35, scope: !3232)
!3347 = !DILocation(line: 655, column: 30, scope: !3232)
!3348 = !DILocation(line: 656, column: 33, scope: !3232)
!3349 = !DILocation(line: 659, column: 16, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 659, column: 7)
!3351 = !DILocation(line: 662, column: 9, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 662, column: 7)
!3353 = !DILocation(line: 662, column: 7, scope: !3232)
!3354 = !DILocation(line: 665, column: 12, scope: !3232)
!3355 = !DILocation(line: 669, column: 8, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 669, column: 3)
!3357 = !DILocation(line: 0, scope: !3356)
!3358 = !DILocation(line: 669, column: 3, scope: !3356)
!3359 = !DILocation(line: 671, column: 3, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 671, column: 3)
!3361 = !DILocation(line: 670, column: 22, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3356, file: !3, line: 669, column: 3)
!3363 = !DILocation(line: 670, column: 5, scope: !3362)
!3364 = !DILocation(line: 670, column: 20, scope: !3362)
!3365 = !DILocation(line: 669, column: 29, scope: !3362)
!3366 = !DILocation(line: 669, column: 46, scope: !3362)
!3367 = !DILocation(line: 669, column: 3, scope: !3362)
!3368 = distinct !{!3368, !3358, !3369}
!3369 = !DILocation(line: 670, column: 22, scope: !3356)
!3370 = !DILocation(line: 0, scope: !3360)
!3371 = !DILocation(line: 672, column: 22, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3360, file: !3, line: 671, column: 3)
!3373 = !DILocation(line: 672, column: 5, scope: !3372)
!3374 = !DILocation(line: 672, column: 20, scope: !3372)
!3375 = !DILocation(line: 671, column: 28, scope: !3372)
!3376 = !DILocation(line: 671, column: 45, scope: !3372)
!3377 = !DILocation(line: 671, column: 3, scope: !3372)
!3378 = distinct !{!3378, !3359, !3379}
!3379 = !DILocation(line: 672, column: 22, scope: !3360)
!3380 = !DILocation(line: 678, column: 22, scope: !3232)
!3381 = !DILocation(line: 678, column: 14, scope: !3232)
!3382 = !DILocation(line: 683, column: 3, scope: !3232)
!3383 = !DILocation(line: 684, column: 8, scope: !3266)
!3384 = !DILocation(line: 682, column: 13, scope: !3232)
!3385 = !DILocation(line: 0, scope: !3266)
!3386 = !DILocation(line: 684, column: 3, scope: !3266)
!3387 = !DILocation(line: 0, scope: !3268)
!3388 = !DILocation(line: 716, column: 3, scope: !3270)
!3389 = !DILocation(line: 688, column: 11, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 688, column: 11)
!3391 = !DILocation(line: 688, column: 32, scope: !3390)
!3392 = !DILocation(line: 688, column: 29, scope: !3390)
!3393 = !DILocation(line: 688, column: 11, scope: !3264)
!3394 = !DILocation(line: 690, column: 17, scope: !3264)
!3395 = !DILocation(line: 0, scope: !3264)
!3396 = !DILocation(line: 692, column: 11, scope: !3264)
!3397 = !DILocation(line: 693, column: 13, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 693, column: 11)
!3399 = !DILocation(line: 693, column: 23, scope: !3398)
!3400 = !DILocation(line: 693, column: 18, scope: !3398)
!3401 = !DILocation(line: 694, column: 2, scope: !3398)
!3402 = !DILocation(line: 695, column: 18, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 695, column: 16)
!3404 = !DILocation(line: 695, column: 16, scope: !3398)
!3405 = !DILocation(line: 696, column: 2, scope: !3403)
!3406 = !DILocation(line: 699, column: 11, scope: !3264)
!3407 = !DILocation(line: 702, column: 19, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 702, column: 8)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 700, column: 9)
!3410 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 699, column: 11)
!3411 = !DILocation(line: 702, column: 10, scope: !3408)
!3412 = !DILocation(line: 702, column: 8, scope: !3409)
!3413 = !DILocation(line: 704, column: 8, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 703, column: 6)
!3415 = !DILocation(line: 705, column: 8, scope: !3414)
!3416 = !DILocation(line: 708, column: 4, scope: !3409)
!3417 = !DILocation(line: 709, column: 2, scope: !3409)
!3418 = !DILocation(line: 684, column: 38, scope: !3265)
!3419 = !DILocation(line: 684, column: 3, scope: !3265)
!3420 = distinct !{!3420, !3386, !3421}
!3421 = !DILocation(line: 710, column: 5, scope: !3266)
!3422 = !DILocation(line: 715, column: 10, scope: !3232)
!3423 = !DILocation(line: 0, scope: !3270)
!3424 = !DILocation(line: 718, column: 18, scope: !3268)
!3425 = !DILocation(line: 719, column: 19, scope: !3268)
!3426 = !DILocation(line: 720, column: 7, scope: !3268)
!3427 = !DILocation(line: 721, column: 7, scope: !3268)
!3428 = !DILocation(line: 722, column: 7, scope: !3268)
!3429 = !DILocation(line: 723, column: 7, scope: !3268)
!3430 = !DILocation(line: 726, column: 19, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 726, column: 11)
!3432 = !DILocation(line: 726, column: 16, scope: !3431)
!3433 = !DILocation(line: 726, column: 11, scope: !3268)
!3434 = !DILocation(line: 731, column: 20, scope: !3268)
!3435 = !DILocation(line: 731, column: 18, scope: !3268)
!3436 = !DILocation(line: 732, column: 12, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 732, column: 11)
!3438 = !DILocation(line: 732, column: 11, scope: !3268)
!3439 = !DILocation(line: 736, column: 13, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 736, column: 11)
!3441 = !DILocation(line: 737, column: 4, scope: !3440)
!3442 = !DILocation(line: 737, column: 8, scope: !3440)
!3443 = !DILocation(line: 738, column: 8, scope: !3440)
!3444 = !DILocation(line: 738, column: 11, scope: !3440)
!3445 = !DILocation(line: 739, column: 8, scope: !3440)
!3446 = !DILocation(line: 739, column: 12, scope: !3440)
!3447 = !DILocation(line: 740, column: 5, scope: !3440)
!3448 = !DILocation(line: 740, column: 8, scope: !3440)
!3449 = !DILocation(line: 0, scope: !3440)
!3450 = !DILocation(line: 741, column: 5, scope: !3440)
!3451 = !DILocation(line: 741, column: 8, scope: !3440)
!3452 = !DILocation(line: 741, column: 37, scope: !3440)
!3453 = !DILocation(line: 741, column: 34, scope: !3440)
!3454 = !DILocation(line: 736, column: 11, scope: !3268)
!3455 = !DILocation(line: 742, column: 2, scope: !3440)
!3456 = !DILocation(line: 744, column: 11, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 744, column: 11)
!3458 = !DILocation(line: 744, column: 11, scope: !3268)
!3459 = !DILocation(line: 746, column: 5, scope: !3269)
!3460 = !DILocation(line: 716, column: 44, scope: !3269)
!3461 = !DILocation(line: 716, column: 64, scope: !3269)
!3462 = !DILocation(line: 716, column: 3, scope: !3269)
!3463 = distinct !{!3463, !3388, !3464}
!3464 = !DILocation(line: 746, column: 5, scope: !3270)
!3465 = !DILocation(line: 748, column: 11, scope: !3232)
!3466 = !DILocation(line: 749, column: 15, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 749, column: 7)
!3468 = !DILocation(line: 749, column: 26, scope: !3467)
!3469 = !DILocation(line: 749, column: 7, scope: !3232)
!3470 = !DILocation(line: 0, scope: !3277)
!3471 = !DILocation(line: 755, column: 3, scope: !3279)
!3472 = !DILocation(line: 751, column: 7, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 750, column: 5)
!3474 = !DILocation(line: 752, column: 7, scope: !3473)
!3475 = !DILocation(line: 0, scope: !3279)
!3476 = !DILocation(line: 777, column: 3, scope: !3285)
!3477 = !DILocation(line: 757, column: 7, scope: !3277)
!3478 = !DILocation(line: 758, column: 7, scope: !3277)
!3479 = !DILocation(line: 762, column: 11, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 762, column: 11)
!3481 = !DILocation(line: 762, column: 44, scope: !3480)
!3482 = !DILocation(line: 762, column: 41, scope: !3480)
!3483 = !DILocation(line: 762, column: 11, scope: !3277)
!3484 = !DILocation(line: 765, column: 34, scope: !3277)
!3485 = !DILocation(line: 765, column: 20, scope: !3277)
!3486 = !DILocation(line: 765, column: 18, scope: !3277)
!3487 = !DILocation(line: 766, column: 13, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 766, column: 11)
!3489 = !DILocation(line: 766, column: 11, scope: !3277)
!3490 = !DILocation(line: 770, column: 13, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 770, column: 11)
!3492 = !DILocation(line: 770, column: 24, scope: !3491)
!3493 = !DILocation(line: 770, column: 27, scope: !3491)
!3494 = !DILocation(line: 770, column: 11, scope: !3277)
!3495 = !DILocation(line: 771, column: 20, scope: !3491)
!3496 = !DILocation(line: 771, column: 2, scope: !3491)
!3497 = !DILocation(line: 772, column: 5, scope: !3278)
!3498 = !DILocation(line: 755, column: 37, scope: !3278)
!3499 = !DILocation(line: 755, column: 48, scope: !3278)
!3500 = !DILocation(line: 755, column: 3, scope: !3278)
!3501 = distinct !{!3501, !3471, !3502}
!3502 = !DILocation(line: 772, column: 5, scope: !3279)
!3503 = !DILocation(line: 0, scope: !3285)
!3504 = !DILocation(line: 779, column: 18, scope: !3283)
!3505 = !DILocation(line: 0, scope: !3283)
!3506 = !DILocation(line: 780, column: 19, scope: !3283)
!3507 = !DILocation(line: 781, column: 7, scope: !3283)
!3508 = !DILocation(line: 782, column: 7, scope: !3283)
!3509 = !DILocation(line: 783, column: 7, scope: !3283)
!3510 = !DILocation(line: 787, column: 38, scope: !3283)
!3511 = !DILocation(line: 787, column: 12, scope: !3283)
!3512 = !DILocation(line: 790, column: 7, scope: !3283)
!3513 = !DILocation(line: 797, column: 27, scope: !3283)
!3514 = !DILocation(line: 799, column: 7, scope: !3283)
!3515 = !DILocation(line: 799, column: 26, scope: !3283)
!3516 = !DILocation(line: 800, column: 12, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 800, column: 11)
!3518 = !DILocation(line: 800, column: 28, scope: !3517)
!3519 = !DILocation(line: 801, column: 5, scope: !3517)
!3520 = !DILocation(line: 801, column: 8, scope: !3517)
!3521 = !DILocation(line: 802, column: 4, scope: !3517)
!3522 = !DILocation(line: 802, column: 8, scope: !3517)
!3523 = !DILocation(line: 803, column: 8, scope: !3517)
!3524 = !DILocation(line: 803, column: 12, scope: !3517)
!3525 = !DILocation(line: 803, column: 23, scope: !3517)
!3526 = !DILocation(line: 0, scope: !3517)
!3527 = !DILocation(line: 804, column: 14, scope: !3517)
!3528 = !DILocation(line: 803, column: 26, scope: !3517)
!3529 = !DILocation(line: 804, column: 8, scope: !3517)
!3530 = !DILocation(line: 805, column: 7, scope: !3517)
!3531 = !DILocation(line: 805, column: 10, scope: !3517)
!3532 = !DILocation(line: 805, column: 39, scope: !3517)
!3533 = !DILocation(line: 805, column: 36, scope: !3517)
!3534 = !DILocation(line: 806, column: 4, scope: !3517)
!3535 = !DILocation(line: 806, column: 9, scope: !3517)
!3536 = !DILocation(line: 807, column: 4, scope: !3517)
!3537 = !DILocation(line: 807, column: 7, scope: !3517)
!3538 = !DILocation(line: 800, column: 11, scope: !3283)
!3539 = !DILocation(line: 809, column: 9, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 808, column: 2)
!3541 = !DILocation(line: 810, column: 8, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3540, file: !3, line: 810, column: 8)
!3543 = !DILocation(line: 810, column: 8, scope: !3540)
!3544 = !DILocation(line: 811, column: 11, scope: !3542)
!3545 = !DILocation(line: 811, column: 6, scope: !3542)
!3546 = !DILocation(line: 0, scope: !3540)
!3547 = !DILocation(line: 813, column: 10, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3540, file: !3, line: 813, column: 8)
!3549 = !DILocation(line: 813, column: 21, scope: !3548)
!3550 = !DILocation(line: 813, column: 25, scope: !3548)
!3551 = !DILocation(line: 813, column: 8, scope: !3540)
!3552 = !DILocation(line: 814, column: 6, scope: !3548)
!3553 = !DILocation(line: 815, column: 11, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3540, file: !3, line: 815, column: 8)
!3555 = !DILocation(line: 815, column: 22, scope: !3554)
!3556 = !DILocation(line: 0, scope: !3554)
!3557 = !DILocation(line: 816, column: 11, scope: !3554)
!3558 = !DILocation(line: 815, column: 25, scope: !3554)
!3559 = !DILocation(line: 816, column: 8, scope: !3554)
!3560 = !DILocation(line: 816, column: 25, scope: !3554)
!3561 = !DILocation(line: 815, column: 8, scope: !3540)
!3562 = !DILocation(line: 819, column: 26, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 817, column: 6)
!3564 = !DILocation(line: 818, column: 27, scope: !3563)
!3565 = !DILocation(line: 819, column: 13, scope: !3563)
!3566 = !DILocation(line: 820, column: 12, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 820, column: 12)
!3568 = !DILocation(line: 820, column: 12, scope: !3563)
!3569 = !DILocation(line: 821, column: 3, scope: !3567)
!3570 = !DILocation(line: 826, column: 9, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 825, column: 2)
!3572 = !DILocation(line: 827, column: 9, scope: !3571)
!3573 = !DILocation(line: 828, column: 9, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 828, column: 8)
!3575 = !DILocation(line: 828, column: 20, scope: !3574)
!3576 = !DILocation(line: 828, column: 23, scope: !3574)
!3577 = !DILocation(line: 828, column: 53, scope: !3574)
!3578 = !DILocation(line: 828, column: 8, scope: !3571)
!3579 = !DILocation(line: 829, column: 34, scope: !3574)
!3580 = !DILocation(line: 829, column: 6, scope: !3574)
!3581 = !DILocation(line: 830, column: 24, scope: !3571)
!3582 = !DILocation(line: 830, column: 22, scope: !3571)
!3583 = !DILocation(line: 832, column: 7, scope: !3283)
!3584 = !DILocation(line: 832, column: 21, scope: !3283)
!3585 = !DILocation(line: 834, column: 27, scope: !3283)
!3586 = !DILocation(line: 836, column: 11, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 836, column: 11)
!3588 = !DILocation(line: 836, column: 11, scope: !3283)
!3589 = !DILocation(line: 838, column: 25, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 837, column: 2)
!3591 = !DILocation(line: 838, column: 4, scope: !3590)
!3592 = !DILocation(line: 838, column: 23, scope: !3590)
!3593 = !DILocation(line: 839, column: 22, scope: !3590)
!3594 = !DILocation(line: 839, column: 4, scope: !3590)
!3595 = !DILocation(line: 839, column: 26, scope: !3590)
!3596 = !DILocation(line: 840, column: 2, scope: !3590)
!3597 = !DILocation(line: 842, column: 11, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 842, column: 11)
!3599 = !DILocation(line: 842, column: 11, scope: !3283)
!3600 = !DILocation(line: 844, column: 5, scope: !3284)
!3601 = !DILocation(line: 777, column: 44, scope: !3284)
!3602 = !DILocation(line: 777, column: 64, scope: !3284)
!3603 = !DILocation(line: 777, column: 3, scope: !3284)
!3604 = distinct !{!3604, !3476, !3605}
!3605 = !DILocation(line: 844, column: 5, scope: !3285)
!3606 = !DILocation(line: 849, column: 12, scope: !3232)
!3607 = !DILocation(line: 850, column: 19, scope: !3232)
!3608 = !DILocation(line: 851, column: 14, scope: !3232)
!3609 = !DILocation(line: 853, column: 10, scope: !3232)
!3610 = !DILocation(line: 859, column: 3, scope: !3232)
!3611 = !DILocation(line: 859, column: 25, scope: !3232)
!3612 = !DILocation(line: 0, scope: !3293)
!3613 = !DILocation(line: 864, column: 8, scope: !3295)
!3614 = !DILocation(line: 0, scope: !3295)
!3615 = !DILocation(line: 864, column: 3, scope: !3295)
!3616 = !DILocation(line: 866, column: 7, scope: !3293)
!3617 = !DILocation(line: 867, column: 7, scope: !3293)
!3618 = !DILocation(line: 872, column: 34, scope: !3293)
!3619 = !DILocation(line: 872, column: 20, scope: !3293)
!3620 = !DILocation(line: 872, column: 18, scope: !3293)
!3621 = !DILocation(line: 873, column: 12, scope: !3293)
!3622 = !DILocation(line: 875, column: 7, scope: !3293)
!3623 = !DILocation(line: 877, column: 27, scope: !3293)
!3624 = !DILocation(line: 879, column: 13, scope: !3293)
!3625 = !DILocation(line: 880, column: 14, scope: !3293)
!3626 = !DILocation(line: 885, column: 4, scope: !3293)
!3627 = !DILocation(line: 886, column: 6, scope: !3293)
!3628 = !DILocation(line: 884, column: 12, scope: !3293)
!3629 = !DILocation(line: 890, column: 11, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 890, column: 11)
!3631 = !DILocation(line: 890, column: 25, scope: !3630)
!3632 = !DILocation(line: 890, column: 11, scope: !3293)
!3633 = !DILocation(line: 891, column: 18, scope: !3630)
!3634 = !DILocation(line: 891, column: 7, scope: !3630)
!3635 = !DILocation(line: 891, column: 2, scope: !3630)
!3636 = !DILocation(line: 892, column: 16, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 892, column: 16)
!3638 = !DILocation(line: 892, column: 16, scope: !3630)
!3639 = !DILocation(line: 893, column: 7, scope: !3637)
!3640 = !DILocation(line: 893, column: 2, scope: !3637)
!3641 = !DILocation(line: 0, scope: !3630)
!3642 = !DILocation(line: 895, column: 31, scope: !3310)
!3643 = !DILocation(line: 895, column: 11, scope: !3310)
!3644 = !DILocation(line: 895, column: 49, scope: !3310)
!3645 = !DILocation(line: 895, column: 11, scope: !3293)
!3646 = !DILocation(line: 897, column: 8, scope: !3308)
!3647 = !DILocation(line: 897, column: 19, scope: !3308)
!3648 = !DILocation(line: 897, column: 22, scope: !3308)
!3649 = !DILocation(line: 897, column: 39, scope: !3308)
!3650 = !DILocation(line: 897, column: 8, scope: !3309)
!3651 = !DILocation(line: 898, column: 22, scope: !3308)
!3652 = !DILocation(line: 898, column: 11, scope: !3308)
!3653 = !DILocation(line: 898, column: 6, scope: !3308)
!3654 = !DILocation(line: 899, column: 14, scope: !3307)
!3655 = !DILocation(line: 899, column: 13, scope: !3308)
!3656 = !DILocation(line: 900, column: 6, scope: !3307)
!3657 = !DILocation(line: 902, column: 13, scope: !3306)
!3658 = !DILocation(line: 902, column: 13, scope: !3307)
!3659 = !DILocation(line: 910, column: 8, scope: !3305)
!3660 = !DILocation(line: 913, column: 12, scope: !3304)
!3661 = !DILocation(line: 913, column: 12, scope: !3305)
!3662 = !DILocation(line: 915, column: 32, scope: !3303)
!3663 = !DILocation(line: 915, column: 15, scope: !3303)
!3664 = !DILocation(line: 0, scope: !3303)
!3665 = !DILocation(line: 916, column: 9, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 916, column: 9)
!3667 = !DILocation(line: 916, column: 9, scope: !3303)
!3668 = !DILocation(line: 917, column: 12, scope: !3666)
!3669 = !DILocation(line: 917, column: 7, scope: !3666)
!3670 = !DILocation(line: 919, column: 23, scope: !3666)
!3671 = !DILocation(line: 919, column: 12, scope: !3666)
!3672 = !DILocation(line: 921, column: 12, scope: !3313)
!3673 = !DILocation(line: 922, column: 5, scope: !3313)
!3674 = !DILocation(line: 922, column: 22, scope: !3313)
!3675 = !DILocation(line: 923, column: 5, scope: !3313)
!3676 = !DILocation(line: 923, column: 22, scope: !3313)
!3677 = !DILocation(line: 921, column: 12, scope: !3305)
!3678 = !DILocation(line: 926, column: 10, scope: !3312)
!3679 = !DILocation(line: 927, column: 10, scope: !3312)
!3680 = !DILocation(line: 925, column: 22, scope: !3312)
!3681 = !DILocation(line: 0, scope: !3312)
!3682 = !DILocation(line: 928, column: 18, scope: !3312)
!3683 = !DILocation(line: 929, column: 14, scope: !3312)
!3684 = !DILocation(line: 930, column: 5, scope: !3312)
!3685 = !DILocation(line: 932, column: 3, scope: !3312)
!3686 = !DILocation(line: 936, column: 27, scope: !3293)
!3687 = !DILocation(line: 937, column: 7, scope: !3293)
!3688 = !DILocation(line: 937, column: 36, scope: !3293)
!3689 = !DILocation(line: 940, column: 4, scope: !3293)
!3690 = !DILocation(line: 939, column: 7, scope: !3293)
!3691 = !DILocation(line: 940, column: 2, scope: !3293)
!3692 = !DILocation(line: 943, column: 11, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 943, column: 11)
!3694 = !DILocation(line: 943, column: 11, scope: !3293)
!3695 = !DILocation(line: 945, column: 5, scope: !3294)
!3696 = !DILocation(line: 864, column: 43, scope: !3294)
!3697 = !DILocation(line: 864, column: 62, scope: !3294)
!3698 = !DILocation(line: 864, column: 3, scope: !3294)
!3699 = distinct !{!3699, !3615, !3700}
!3700 = !DILocation(line: 945, column: 5, scope: !3295)
!3701 = !DILocation(line: 950, column: 23, scope: !3232)
!3702 = !DILocation(line: 0, scope: !3316)
!3703 = !DILocation(line: 953, column: 8, scope: !3318)
!3704 = !DILocation(line: 0, scope: !3318)
!3705 = !DILocation(line: 953, column: 17, scope: !3317)
!3706 = !DILocation(line: 953, column: 3, scope: !3318)
!3707 = !DILocation(line: 0, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 967, column: 3)
!3709 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 967, column: 3)
!3710 = !DILocation(line: 967, column: 3, scope: !3709)
!3711 = !DILocation(line: 955, column: 15, scope: !3316)
!3712 = !DILocation(line: 956, column: 7, scope: !3316)
!3713 = !DILocation(line: 956, column: 12, scope: !3316)
!3714 = !DILocation(line: 959, column: 4, scope: !3316)
!3715 = !DILocation(line: 958, column: 7, scope: !3316)
!3716 = !DILocation(line: 959, column: 2, scope: !3316)
!3717 = !DILocation(line: 961, column: 7, scope: !3316)
!3718 = !DILocation(line: 963, column: 4, scope: !3316)
!3719 = !DILocation(line: 962, column: 7, scope: !3316)
!3720 = !DILocation(line: 963, column: 2, scope: !3316)
!3721 = !DILocation(line: 964, column: 5, scope: !3317)
!3722 = !DILocation(line: 953, column: 28, scope: !3317)
!3723 = !DILocation(line: 953, column: 3, scope: !3317)
!3724 = distinct !{!3724, !3706, !3725}
!3725 = !DILocation(line: 964, column: 5, scope: !3318)
!3726 = !DILocation(line: 0, scope: !3709)
!3727 = !DILocation(line: 967, column: 32, scope: !3708)
!3728 = !DILocation(line: 969, column: 9, scope: !3708)
!3729 = !DILocation(line: 968, column: 5, scope: !3708)
!3730 = !DILocation(line: 969, column: 7, scope: !3708)
!3731 = !DILocation(line: 967, column: 43, scope: !3708)
!3732 = !DILocation(line: 967, column: 55, scope: !3708)
!3733 = !DILocation(line: 967, column: 3, scope: !3708)
!3734 = distinct !{!3734, !3710, !3735}
!3735 = !DILocation(line: 969, column: 9, scope: !3709)
!3736 = !DILocation(line: 971, column: 23, scope: !3232)
!3737 = !DILocation(line: 978, column: 15, scope: !3327)
!3738 = !DILocation(line: 978, column: 32, scope: !3327)
!3739 = !DILocation(line: 978, column: 19, scope: !3327)
!3740 = !DILocation(line: 980, column: 7, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 979, column: 5)
!3742 = !DILocation(line: 981, column: 7, scope: !3741)
!3743 = !DILocation(line: 982, column: 5, scope: !3741)
!3744 = !DILocation(line: 983, column: 26, scope: !3326)
!3745 = !DILocation(line: 986, column: 7, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 984, column: 5)
!3747 = !DILocation(line: 987, column: 5, scope: !3746)
!3748 = !DILocation(line: 988, column: 21, scope: !3325)
!3749 = !DILocation(line: 988, column: 26, scope: !3325)
!3750 = !DILocation(line: 990, column: 47, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 989, column: 5)
!3752 = !DILocation(line: 990, column: 7, scope: !3751)
!3753 = !DILocation(line: 990, column: 45, scope: !3751)
!3754 = !DILocation(line: 991, column: 18, scope: !3751)
!3755 = !DILocation(line: 991, column: 7, scope: !3751)
!3756 = !DILocation(line: 992, column: 5, scope: !3751)
!3757 = !DILocation(line: 0, scope: !3324)
!3758 = !DILocation(line: 998, column: 11, scope: !3324)
!3759 = !DILocation(line: 1001, column: 14, scope: !3324)
!3760 = !DILocation(line: 0, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 1005, column: 2)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 1004, column: 7)
!3763 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 1004, column: 7)
!3764 = !DILocation(line: 1004, column: 12, scope: !3763)
!3765 = !DILocation(line: 0, scope: !3763)
!3766 = !DILocation(line: 1004, column: 7, scope: !3763)
!3767 = !DILocation(line: 1007, column: 8, scope: !3761)
!3768 = !DILocation(line: 1006, column: 4, scope: !3761)
!3769 = !DILocation(line: 1007, column: 6, scope: !3761)
!3770 = !DILocation(line: 1015, column: 4, scope: !3761)
!3771 = !DILocation(line: 1015, column: 52, scope: !3761)
!3772 = !DILocation(line: 1004, column: 48, scope: !3762)
!3773 = !DILocation(line: 1004, column: 68, scope: !3762)
!3774 = !DILocation(line: 1004, column: 7, scope: !3762)
!3775 = distinct !{!3775, !3766, !3776}
!3776 = !DILocation(line: 1016, column: 2, scope: !3763)
!3777 = !DILocation(line: 1021, column: 13, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 1021, column: 11)
!3779 = !DILocation(line: 1021, column: 11, scope: !3324)
!3780 = !DILocation(line: 1022, column: 2, scope: !3778)
!3781 = !DILocation(line: 1022, column: 25, scope: !3778)
!3782 = !DILocation(line: 0, scope: !3337)
!3783 = !DILocation(line: 1026, column: 12, scope: !3332)
!3784 = !DILocation(line: 0, scope: !3332)
!3785 = !DILocation(line: 1026, column: 7, scope: !3332)
!3786 = !DILocation(line: 1028, column: 26, scope: !3330)
!3787 = !DILocation(line: 0, scope: !3330)
!3788 = !DILocation(line: 1029, column: 12, scope: !3330)
!3789 = !DILocation(line: 1032, column: 10, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1032, column: 8)
!3791 = !DILocation(line: 1032, column: 8, scope: !3330)
!3792 = !DILocation(line: 1052, column: 20, scope: !3330)
!3793 = !DILocation(line: 1063, column: 8, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1063, column: 8)
!3795 = !DILocation(line: 0, scope: !3794)
!3796 = !DILocation(line: 0, scope: !3336)
!3797 = !DILocation(line: 1063, column: 28, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 1063, column: 8)
!3799 = !DILocation(line: 0, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1067, column: 8)
!3801 = !DILocation(line: 1067, column: 28, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 1067, column: 8)
!3803 = !DILocation(line: 1067, column: 8, scope: !3800)
!3804 = !DILocation(line: 1069, column: 11, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3802, file: !3, line: 1068, column: 7)
!3806 = !DILocation(line: 1068, column: 7, scope: !3805)
!3807 = !DILocation(line: 1068, column: 7, scope: !3802)
!3808 = !DILocation(line: 1070, column: 5, scope: !3805)
!3809 = !DILocation(line: 1067, column: 52, scope: !3802)
!3810 = !DILocation(line: 1067, column: 8, scope: !3802)
!3811 = distinct !{!3811, !3803, !3812}
!3812 = !DILocation(line: 1070, column: 62, scope: !3800)
!3813 = !DILocation(line: 1064, column: 47, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1064, column: 7)
!3815 = !DILocation(line: 1064, column: 7, scope: !3814)
!3816 = !DILocation(line: 1064, column: 7, scope: !3798)
!3817 = !DILocation(line: 1065, column: 5, scope: !3814)
!3818 = !DILocation(line: 1063, column: 44, scope: !3798)
!3819 = !DILocation(line: 1063, column: 8, scope: !3798)
!3820 = distinct !{!3820, !3793, !3821}
!3821 = !DILocation(line: 1065, column: 63, scope: !3794)
!3822 = !DILocation(line: 1034, column: 12, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 1033, column: 6)
!3824 = !DILocation(line: 1040, column: 9, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 1038, column: 3)
!3826 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 1037, column: 12)
!3827 = !DILocation(line: 1039, column: 5, scope: !3825)
!3828 = !DILocation(line: 1040, column: 7, scope: !3825)
!3829 = !DILocation(line: 1044, column: 5, scope: !3825)
!3830 = !DILocation(line: 1026, column: 42, scope: !3331)
!3831 = !DILocation(line: 1026, column: 7, scope: !3331)
!3832 = distinct !{!3832, !3785, !3833}
!3833 = !DILocation(line: 1075, column: 2, scope: !3332)
!3834 = !DILocation(line: 1074, column: 8, scope: !3330)
!3835 = !DILocation(line: 1073, column: 4, scope: !3330)
!3836 = !DILocation(line: 1074, column: 6, scope: !3330)
!3837 = !DILocation(line: 1075, column: 2, scope: !3331)
!3838 = !DILocation(line: 1077, column: 19, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 1077, column: 11)
!3840 = !DILocation(line: 1077, column: 11, scope: !3324)
!3841 = !DILocation(line: 1078, column: 2, scope: !3839)
!3842 = !DILocation(line: 1080, column: 2, scope: !3839)
!3843 = !DILocation(line: 1085, column: 8, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 1085, column: 3)
!3845 = !DILocation(line: 0, scope: !3844)
!3846 = !DILocation(line: 1085, column: 17, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 1085, column: 3)
!3848 = !DILocation(line: 1085, column: 3, scope: !3844)
!3849 = !DILocation(line: 1086, column: 9, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 1086, column: 9)
!3851 = !DILocation(line: 1086, column: 9, scope: !3847)
!3852 = !DILocation(line: 1087, column: 43, scope: !3850)
!3853 = !DILocation(line: 1087, column: 7, scope: !3850)
!3854 = !DILocation(line: 1085, column: 29, scope: !3847)
!3855 = !DILocation(line: 1085, column: 3, scope: !3847)
!3856 = distinct !{!3856, !3848, !3857}
!3857 = !DILocation(line: 1087, column: 56, scope: !3844)
!3858 = !DILocation(line: 1089, column: 27, scope: !3232)
!3859 = !DILocation(line: 1090, column: 3, scope: !3232)
!3860 = !DILocation(line: 1091, column: 1, scope: !3232)
!3861 = distinct !DISubprogram(name: "resolve_asm_operand_names", scope: !3, file: !3, line: 1285, type: !3862, scopeLine: 1286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3864)
!3862 = !DISubroutineType(types: !3863)
!3863 = !{!636, !636, !636, !636, !636}
!3864 = !{!3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872}
!3865 = !DILocalVariable(name: "string", arg: 1, scope: !3861, file: !3, line: 1285, type: !636)
!3866 = !DILocalVariable(name: "outputs", arg: 2, scope: !3861, file: !3, line: 1285, type: !636)
!3867 = !DILocalVariable(name: "inputs", arg: 3, scope: !3861, file: !3, line: 1285, type: !636)
!3868 = !DILocalVariable(name: "labels", arg: 4, scope: !3861, file: !3, line: 1285, type: !636)
!3869 = !DILocalVariable(name: "buffer", scope: !3861, file: !3, line: 1287, type: !629)
!3870 = !DILocalVariable(name: "p", scope: !3861, file: !3, line: 1288, type: !629)
!3871 = !DILocalVariable(name: "c", scope: !3861, file: !3, line: 1289, type: !632)
!3872 = !DILocalVariable(name: "t", scope: !3861, file: !3, line: 1290, type: !636)
!3873 = !DILocation(line: 0, scope: !3861)
!3874 = !DILocation(line: 1292, column: 3, scope: !3861)
!3875 = !DILocation(line: 1296, column: 8, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 1296, column: 3)
!3877 = !DILocation(line: 0, scope: !3876)
!3878 = !DILocation(line: 1296, column: 3, scope: !3876)
!3879 = !DILocation(line: 1298, column: 11, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 1297, column: 5)
!3881 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 1296, column: 3)
!3882 = !DILocation(line: 1299, column: 11, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 1299, column: 11)
!3884 = !DILocation(line: 1299, column: 27, scope: !3883)
!3885 = !DILocation(line: 1299, column: 11, scope: !3880)
!3886 = !DILocation(line: 1301, column: 17, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 1300, column: 2)
!3888 = !DILocation(line: 1302, column: 4, scope: !3887)
!3889 = !DILocation(line: 0, scope: !3887)
!3890 = !DILocation(line: 1302, column: 16, scope: !3887)
!3891 = !DILocation(line: 1302, column: 33, scope: !3887)
!3892 = !DILocation(line: 1303, column: 10, scope: !3887)
!3893 = distinct !{!3893, !3888, !3894}
!3894 = !DILocation(line: 1303, column: 58, scope: !3887)
!3895 = !DILocation(line: 1305, column: 22, scope: !3887)
!3896 = !DILocation(line: 1305, column: 8, scope: !3887)
!3897 = !DILocation(line: 1304, column: 4, scope: !3887)
!3898 = !DILocation(line: 1305, column: 6, scope: !3887)
!3899 = !DILocation(line: 1306, column: 4, scope: !3887)
!3900 = !DILocation(line: 1307, column: 2, scope: !3887)
!3901 = !DILocation(line: 1296, column: 28, scope: !3881)
!3902 = !DILocation(line: 1296, column: 3, scope: !3881)
!3903 = distinct !{!3903, !3878, !3904}
!3904 = !DILocation(line: 1308, column: 5, scope: !3876)
!3905 = !DILocation(line: 1311, column: 7, scope: !3861)
!3906 = !DILocation(line: 1312, column: 3, scope: !3861)
!3907 = !DILocation(line: 1312, column: 15, scope: !3861)
!3908 = !DILocation(line: 1314, column: 11, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 1314, column: 11)
!3910 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 1313, column: 5)
!3911 = !DILocation(line: 1314, column: 16, scope: !3909)
!3912 = !DILocation(line: 1314, column: 11, scope: !3910)
!3913 = !DILocation(line: 1316, column: 16, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 1316, column: 16)
!3915 = !DILocation(line: 1316, column: 31, scope: !3914)
!3916 = !DILocation(line: 1316, column: 34, scope: !3914)
!3917 = !DILocation(line: 1316, column: 39, scope: !3914)
!3918 = !DILocation(line: 1316, column: 16, scope: !3909)
!3919 = !DILocation(line: 1321, column: 4, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3914, file: !3, line: 1319, column: 2)
!3921 = distinct !{!3921, !3906, !3922}
!3922 = !DILocation(line: 1323, column: 5, scope: !3861)
!3923 = !DILocation(line: 1331, column: 16, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 1326, column: 5)
!3925 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 1325, column: 7)
!3926 = !DILocation(line: 1332, column: 23, scope: !3924)
!3927 = !DILocation(line: 1332, column: 18, scope: !3924)
!3928 = !DILocation(line: 1334, column: 7, scope: !3924)
!3929 = !DILocation(line: 0, scope: !3924)
!3930 = !DILocation(line: 1334, column: 19, scope: !3924)
!3931 = !DILocation(line: 1334, column: 36, scope: !3924)
!3932 = !DILocation(line: 1336, column: 8, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !3, line: 1336, column: 8)
!3934 = distinct !DILexicalBlock(scope: !3924, file: !3, line: 1335, column: 2)
!3935 = !DILocation(line: 1336, column: 13, scope: !3933)
!3936 = !DILocation(line: 1336, column: 8, scope: !3934)
!3937 = !DILocation(line: 1338, column: 13, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3933, file: !3, line: 1338, column: 13)
!3939 = !DILocation(line: 1338, column: 28, scope: !3938)
!3940 = !DILocation(line: 1338, column: 31, scope: !3938)
!3941 = !DILocation(line: 1338, column: 36, scope: !3938)
!3942 = !DILocation(line: 1338, column: 13, scope: !3933)
!3943 = !DILocation(line: 1343, column: 8, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 1341, column: 6)
!3945 = distinct !{!3945, !3928, !3946}
!3946 = !DILocation(line: 1347, column: 2, scope: !3924)
!3947 = !DILocation(line: 0, scope: !3933)
!3948 = !DILocation(line: 1346, column: 8, scope: !3934)
!3949 = !DILocation(line: 1349, column: 30, scope: !3924)
!3950 = !DILocation(line: 1349, column: 16, scope: !3924)
!3951 = !DILocation(line: 1350, column: 7, scope: !3924)
!3952 = !DILocation(line: 1351, column: 5, scope: !3924)
!3953 = !DILocation(line: 1353, column: 3, scope: !3861)
!3954 = distinct !DISubprogram(name: "check_unique_operand_names", scope: !3, file: !3, line: 1229, type: !3955, scopeLine: 1230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3957)
!3955 = !DISubroutineType(types: !3956)
!3956 = !{!626, !636, !636, !636}
!3957 = !{!3958, !3959, !3960, !3961, !3962, !3963, !3967, !3971, !3975}
!3958 = !DILocalVariable(name: "outputs", arg: 1, scope: !3954, file: !3, line: 1229, type: !636)
!3959 = !DILocalVariable(name: "inputs", arg: 2, scope: !3954, file: !3, line: 1229, type: !636)
!3960 = !DILocalVariable(name: "labels", arg: 3, scope: !3954, file: !3, line: 1229, type: !636)
!3961 = !DILocalVariable(name: "i", scope: !3954, file: !3, line: 1231, type: !636)
!3962 = !DILocalVariable(name: "j", scope: !3954, file: !3, line: 1231, type: !636)
!3963 = !DILocalVariable(name: "i_name", scope: !3964, file: !3, line: 1235, type: !636)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 1234, column: 5)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 1233, column: 3)
!3966 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 1233, column: 3)
!3967 = !DILocalVariable(name: "i_name", scope: !3968, file: !3, line: 1246, type: !636)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 1245, column: 5)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1244, column: 3)
!3970 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 1244, column: 3)
!3971 = !DILocalVariable(name: "i_name", scope: !3972, file: !3, line: 1260, type: !636)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 1259, column: 5)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 1258, column: 3)
!3974 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 1258, column: 3)
!3975 = !DILabel(scope: !3954, name: "failure", file: !3, line: 1274)
!3976 = !DILocation(line: 0, scope: !3954)
!3977 = !DILocation(line: 1233, column: 8, scope: !3966)
!3978 = !DILocation(line: 0, scope: !3966)
!3979 = !DILocation(line: 1233, column: 3, scope: !3966)
!3980 = !DILocation(line: 1244, column: 3, scope: !3970)
!3981 = !DILocation(line: 1235, column: 21, scope: !3964)
!3982 = !DILocation(line: 0, scope: !3964)
!3983 = !DILocation(line: 1236, column: 13, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 1236, column: 11)
!3985 = !DILocation(line: 1236, column: 11, scope: !3964)
!3986 = !DILocation(line: 1239, column: 12, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 1239, column: 7)
!3988 = !DILocation(line: 0, scope: !3987)
!3989 = !DILocation(line: 1239, column: 7, scope: !3987)
!3990 = !DILocation(line: 1240, column: 32, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 1240, column: 6)
!3992 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 1239, column: 7)
!3993 = !DILocation(line: 1240, column: 6, scope: !3991)
!3994 = !DILocation(line: 1240, column: 6, scope: !3992)
!3995 = !DILocation(line: 1239, column: 7, scope: !3992)
!3996 = distinct !{!3996, !3989, !3997}
!3997 = !DILocation(line: 1241, column: 9, scope: !3987)
!3998 = !DILocation(line: 1233, column: 29, scope: !3965)
!3999 = !DILocation(line: 1233, column: 3, scope: !3965)
!4000 = distinct !{!4000, !3979, !4001}
!4001 = !DILocation(line: 1242, column: 5, scope: !3966)
!4002 = !DILocation(line: 0, scope: !3970)
!4003 = !DILocation(line: 1258, column: 3, scope: !3974)
!4004 = !DILocation(line: 1246, column: 21, scope: !3968)
!4005 = !DILocation(line: 0, scope: !3968)
!4006 = !DILocation(line: 1247, column: 13, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 1247, column: 11)
!4008 = !DILocation(line: 1247, column: 11, scope: !3968)
!4009 = !DILocation(line: 1250, column: 12, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 1250, column: 7)
!4011 = !DILocation(line: 0, scope: !4010)
!4012 = !DILocation(line: 1250, column: 7, scope: !4010)
!4013 = !DILocation(line: 1253, column: 7, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 1253, column: 7)
!4015 = !DILocation(line: 1251, column: 32, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 1251, column: 6)
!4017 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 1250, column: 7)
!4018 = !DILocation(line: 1251, column: 6, scope: !4016)
!4019 = !DILocation(line: 1251, column: 6, scope: !4017)
!4020 = !DILocation(line: 1250, column: 7, scope: !4017)
!4021 = distinct !{!4021, !4012, !4022}
!4022 = !DILocation(line: 1252, column: 9, scope: !4010)
!4023 = !DILocation(line: 0, scope: !4014)
!4024 = !DILocation(line: 1254, column: 32, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 1254, column: 6)
!4026 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1253, column: 7)
!4027 = !DILocation(line: 1254, column: 6, scope: !4025)
!4028 = !DILocation(line: 1254, column: 6, scope: !4026)
!4029 = !DILocation(line: 1253, column: 33, scope: !4026)
!4030 = !DILocation(line: 1253, column: 7, scope: !4026)
!4031 = distinct !{!4031, !4013, !4032}
!4032 = !DILocation(line: 1255, column: 9, scope: !4014)
!4033 = !DILocation(line: 1244, column: 28, scope: !3969)
!4034 = !DILocation(line: 1244, column: 3, scope: !3969)
!4035 = distinct !{!4035, !3980, !4036}
!4036 = !DILocation(line: 1256, column: 5, scope: !3970)
!4037 = !DILocation(line: 0, scope: !3974)
!4038 = !DILocation(line: 1260, column: 21, scope: !3972)
!4039 = !DILocation(line: 0, scope: !3972)
!4040 = !DILocation(line: 1261, column: 13, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 1261, column: 11)
!4042 = !DILocation(line: 1261, column: 11, scope: !3972)
!4043 = !DILocation(line: 1264, column: 12, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 1264, column: 7)
!4045 = !DILocation(line: 0, scope: !4044)
!4046 = !DILocation(line: 1264, column: 7, scope: !4044)
!4047 = !DILocation(line: 1267, column: 7, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 1267, column: 7)
!4049 = !DILocation(line: 1265, column: 32, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 1265, column: 6)
!4051 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1264, column: 7)
!4052 = !DILocation(line: 1265, column: 6, scope: !4050)
!4053 = !DILocation(line: 1265, column: 6, scope: !4051)
!4054 = !DILocation(line: 1264, column: 7, scope: !4051)
!4055 = distinct !{!4055, !4046, !4056}
!4056 = !DILocation(line: 1266, column: 9, scope: !4044)
!4057 = !DILocation(line: 0, scope: !4048)
!4058 = !DILocation(line: 1268, column: 32, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 1268, column: 6)
!4060 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 1267, column: 7)
!4061 = !DILocation(line: 1268, column: 6, scope: !4059)
!4062 = !DILocation(line: 1268, column: 6, scope: !4060)
!4063 = !DILocation(line: 1267, column: 32, scope: !4060)
!4064 = !DILocation(line: 1267, column: 7, scope: !4060)
!4065 = distinct !{!4065, !4047, !4066}
!4066 = !DILocation(line: 1269, column: 9, scope: !4048)
!4067 = !DILocation(line: 1258, column: 28, scope: !3973)
!4068 = !DILocation(line: 1258, column: 3, scope: !3973)
!4069 = distinct !{!4069, !4003, !4070}
!4070 = !DILocation(line: 1270, column: 5, scope: !3974)
!4071 = !DILocation(line: 1276, column: 3, scope: !3954)
!4072 = !DILocation(line: 1274, column: 2, scope: !3954)
!4073 = !DILocation(line: 1275, column: 3, scope: !3954)
!4074 = !DILocation(line: 1277, column: 3, scope: !3954)
!4075 = !DILocation(line: 1278, column: 1, scope: !3954)
!4076 = distinct !DISubprogram(name: "resolve_operand_name_1", scope: !3, file: !3, line: 1362, type: !4077, scopeLine: 1363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4079)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!629, !629, !636, !636, !636}
!4079 = !{!4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4091, !4095, !4099}
!4080 = !DILocalVariable(name: "p", arg: 1, scope: !4076, file: !3, line: 1362, type: !629)
!4081 = !DILocalVariable(name: "outputs", arg: 2, scope: !4076, file: !3, line: 1362, type: !636)
!4082 = !DILocalVariable(name: "inputs", arg: 3, scope: !4076, file: !3, line: 1362, type: !636)
!4083 = !DILocalVariable(name: "labels", arg: 4, scope: !4076, file: !3, line: 1362, type: !636)
!4084 = !DILocalVariable(name: "q", scope: !4076, file: !3, line: 1364, type: !629)
!4085 = !DILocalVariable(name: "op", scope: !4076, file: !3, line: 1365, type: !627)
!4086 = !DILocalVariable(name: "t", scope: !4076, file: !3, line: 1366, type: !636)
!4087 = !DILocalVariable(name: "name", scope: !4088, file: !3, line: 1380, type: !636)
!4088 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 1379, column: 5)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 1378, column: 3)
!4090 = distinct !DILexicalBlock(scope: !4076, file: !3, line: 1378, column: 3)
!4091 = !DILocalVariable(name: "name", scope: !4092, file: !3, line: 1386, type: !636)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 1385, column: 5)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 1384, column: 3)
!4094 = distinct !DILexicalBlock(scope: !4076, file: !3, line: 1384, column: 3)
!4095 = !DILocalVariable(name: "name", scope: !4096, file: !3, line: 1392, type: !636)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 1391, column: 5)
!4097 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 1390, column: 3)
!4098 = distinct !DILexicalBlock(scope: !4076, file: !3, line: 1390, column: 3)
!4099 = !DILabel(scope: !4076, name: "found", file: !3, line: 1400)
!4100 = !DILocation(line: 0, scope: !4076)
!4101 = !DILocation(line: 1369, column: 15, scope: !4076)
!4102 = !DILocation(line: 1369, column: 7, scope: !4076)
!4103 = !DILocation(line: 1370, column: 8, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4076, file: !3, line: 1370, column: 7)
!4105 = !DILocation(line: 1370, column: 7, scope: !4076)
!4106 = !DILocation(line: 1372, column: 7, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 1371, column: 5)
!4108 = !DILocation(line: 1373, column: 14, scope: !4107)
!4109 = !DILocation(line: 1373, column: 7, scope: !4107)
!4110 = !DILocation(line: 1375, column: 6, scope: !4076)
!4111 = !DILocation(line: 1378, column: 8, scope: !4090)
!4112 = !DILocation(line: 0, scope: !4090)
!4113 = !DILocation(line: 1378, column: 3, scope: !4090)
!4114 = !DILocation(line: 1384, column: 3, scope: !4094)
!4115 = !DILocation(line: 1380, column: 19, scope: !4088)
!4116 = !DILocation(line: 0, scope: !4088)
!4117 = !DILocation(line: 1381, column: 11, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4088, file: !3, line: 1381, column: 11)
!4119 = !DILocation(line: 1381, column: 16, scope: !4118)
!4120 = !DILocation(line: 1381, column: 27, scope: !4118)
!4121 = !DILocation(line: 1381, column: 19, scope: !4118)
!4122 = !DILocation(line: 1381, column: 58, scope: !4118)
!4123 = !DILocation(line: 1381, column: 11, scope: !4088)
!4124 = !DILocation(line: 1383, column: 5, scope: !4089)
!4125 = !DILocation(line: 1378, column: 37, scope: !4089)
!4126 = !DILocation(line: 1378, column: 55, scope: !4089)
!4127 = !DILocation(line: 1378, column: 3, scope: !4089)
!4128 = distinct !{!4128, !4113, !4129}
!4129 = !DILocation(line: 1383, column: 5, scope: !4090)
!4130 = !DILocation(line: 0, scope: !4094)
!4131 = !DILocation(line: 1390, column: 3, scope: !4098)
!4132 = !DILocation(line: 1386, column: 19, scope: !4092)
!4133 = !DILocation(line: 0, scope: !4092)
!4134 = !DILocation(line: 1387, column: 11, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 1387, column: 11)
!4136 = !DILocation(line: 1387, column: 16, scope: !4135)
!4137 = !DILocation(line: 1387, column: 27, scope: !4135)
!4138 = !DILocation(line: 1387, column: 19, scope: !4135)
!4139 = !DILocation(line: 1387, column: 58, scope: !4135)
!4140 = !DILocation(line: 1387, column: 11, scope: !4092)
!4141 = !DILocation(line: 1389, column: 5, scope: !4093)
!4142 = !DILocation(line: 1384, column: 28, scope: !4093)
!4143 = !DILocation(line: 1384, column: 46, scope: !4093)
!4144 = !DILocation(line: 1384, column: 3, scope: !4093)
!4145 = distinct !{!4145, !4114, !4146}
!4146 = !DILocation(line: 1389, column: 5, scope: !4094)
!4147 = !DILocation(line: 0, scope: !4098)
!4148 = !DILocation(line: 1392, column: 19, scope: !4096)
!4149 = !DILocation(line: 0, scope: !4096)
!4150 = !DILocation(line: 1393, column: 11, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 1393, column: 11)
!4152 = !DILocation(line: 1393, column: 16, scope: !4151)
!4153 = !DILocation(line: 1393, column: 27, scope: !4151)
!4154 = !DILocation(line: 1393, column: 19, scope: !4151)
!4155 = !DILocation(line: 1393, column: 58, scope: !4151)
!4156 = !DILocation(line: 1393, column: 11, scope: !4096)
!4157 = !DILocation(line: 1395, column: 5, scope: !4097)
!4158 = !DILocation(line: 1390, column: 28, scope: !4097)
!4159 = !DILocation(line: 1390, column: 46, scope: !4097)
!4160 = !DILocation(line: 1390, column: 3, scope: !4097)
!4161 = distinct !{!4161, !4131, !4162}
!4162 = !DILocation(line: 1395, column: 5, scope: !4098)
!4163 = !DILocation(line: 1397, column: 41, scope: !4076)
!4164 = !DILocation(line: 1397, column: 3, scope: !4076)
!4165 = !DILocation(line: 1398, column: 3, scope: !4076)
!4166 = !DILocation(line: 1404, column: 3, scope: !4076)
!4167 = !DILocation(line: 1400, column: 2, scope: !4076)
!4168 = !DILocation(line: 1405, column: 7, scope: !4076)
!4169 = !DILocation(line: 1408, column: 3, scope: !4076)
!4170 = !DILocation(line: 1411, column: 17, scope: !4076)
!4171 = !DILocation(line: 1411, column: 22, scope: !4076)
!4172 = !DILocation(line: 1411, column: 37, scope: !4076)
!4173 = !DILocation(line: 1411, column: 3, scope: !4076)
!4174 = !DILocation(line: 1413, column: 3, scope: !4076)
!4175 = !DILocation(line: 1414, column: 1, scope: !4076)
!4176 = distinct !DISubprogram(name: "expand_expr_stmt", scope: !3, file: !3, line: 1419, type: !2561, scopeLine: 1420, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4177)
!4177 = !{!4178, !4179, !4180, !4181}
!4178 = !DILocalVariable(name: "exp", arg: 1, scope: !4176, file: !3, line: 1419, type: !636)
!4179 = !DILocalVariable(name: "value", scope: !4176, file: !3, line: 1421, type: !810)
!4180 = !DILocalVariable(name: "type", scope: !4176, file: !3, line: 1422, type: !636)
!4181 = !DILocalVariable(name: "lab", scope: !4182, file: !3, line: 1437, type: !810)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 1436, column: 2)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 1433, column: 16)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !3, line: 1431, column: 11)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !3, line: 1430, column: 5)
!4186 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 1429, column: 7)
!4187 = !DILocation(line: 0, scope: !4176)
!4188 = !DILocation(line: 1424, column: 29, scope: !4176)
!4189 = !DILocation(line: 1424, column: 11, scope: !4176)
!4190 = !DILocation(line: 1425, column: 10, scope: !4176)
!4191 = !DILocation(line: 1429, column: 7, scope: !4186)
!4192 = !DILocation(line: 1429, column: 13, scope: !4186)
!4193 = !DILocation(line: 1429, column: 16, scope: !4186)
!4194 = !DILocation(line: 1429, column: 30, scope: !4186)
!4195 = !DILocation(line: 1429, column: 33, scope: !4186)
!4196 = !DILocation(line: 1429, column: 7, scope: !4176)
!4197 = !DILocation(line: 1431, column: 11, scope: !4184)
!4198 = !DILocation(line: 1431, column: 28, scope: !4184)
!4199 = !DILocation(line: 1431, column: 11, scope: !4185)
!4200 = !DILocation(line: 1433, column: 16, scope: !4183)
!4201 = !DILocation(line: 1433, column: 33, scope: !4183)
!4202 = !DILocation(line: 1433, column: 16, scope: !4184)
!4203 = !DILocation(line: 1434, column: 10, scope: !4183)
!4204 = !DILocation(line: 1434, column: 2, scope: !4183)
!4205 = !DILocation(line: 1437, column: 14, scope: !4182)
!4206 = !DILocation(line: 0, scope: !4182)
!4207 = !DILocation(line: 1441, column: 23, scope: !4182)
!4208 = !DILocation(line: 1441, column: 8, scope: !4182)
!4209 = !DILocation(line: 1440, column: 4, scope: !4182)
!4210 = !DILocation(line: 1443, column: 4, scope: !4182)
!4211 = !DILocation(line: 1448, column: 3, scope: !4176)
!4212 = !DILocation(line: 1449, column: 1, scope: !4176)
!4213 = distinct !DISubprogram(name: "expand_expr", scope: !615, file: !615, line: 555, type: !4214, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4216)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!810, !636, !810, !5, !614}
!4216 = !{!4217, !4218, !4219, !4220}
!4217 = !DILocalVariable(name: "exp", arg: 1, scope: !4213, file: !615, line: 555, type: !636)
!4218 = !DILocalVariable(name: "target", arg: 2, scope: !4213, file: !615, line: 555, type: !810)
!4219 = !DILocalVariable(name: "mode", arg: 3, scope: !4213, file: !615, line: 555, type: !5)
!4220 = !DILocalVariable(name: "modifier", arg: 4, scope: !4213, file: !615, line: 556, type: !614)
!4221 = !DILocation(line: 0, scope: !4213)
!4222 = !DILocation(line: 558, column: 10, scope: !4213)
!4223 = !DILocation(line: 558, column: 3, scope: !4213)
!4224 = distinct !DISubprogram(name: "warn_if_unused_value", scope: !3, file: !3, line: 1456, type: !4225, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4230)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{!627, !4227, !760}
!4227 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !637, line: 59, baseType: !4228)
!4228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4229, size: 64)
!4229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !639)
!4230 = !{!4231, !4232, !4233, !4234}
!4231 = !DILocalVariable(name: "exp", arg: 1, scope: !4224, file: !3, line: 1456, type: !4227)
!4232 = !DILocalVariable(name: "locus", arg: 2, scope: !4224, file: !3, line: 1456, type: !760)
!4233 = !DILabel(scope: !4224, name: "restart", file: !3, line: 1458)
!4234 = !DILabel(scope: !4235, name: "warn", file: !3, line: 1541)
!4235 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 1472, column: 5)
!4236 = !DILocation(line: 0, scope: !4224)
!4237 = !DILocation(line: 1457, column: 1, scope: !4224)
!4238 = !DILocation(line: 1458, column: 2, scope: !4224)
!4239 = !DILocation(line: 1459, column: 7, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 1459, column: 7)
!4241 = !DILocation(line: 1459, column: 23, scope: !4240)
!4242 = !DILocation(line: 1459, column: 26, scope: !4240)
!4243 = !DILocation(line: 1459, column: 7, scope: !4224)
!4244 = !DILocation(line: 1465, column: 7, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 1465, column: 7)
!4246 = !DILocation(line: 1465, column: 7, scope: !4224)
!4247 = !DILocation(line: 1468, column: 7, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 1468, column: 7)
!4249 = !DILocation(line: 1468, column: 7, scope: !4224)
!4250 = !DILocation(line: 1469, column: 13, scope: !4248)
!4251 = !DILocation(line: 1471, column: 11, scope: !4224)
!4252 = !DILocation(line: 1471, column: 3, scope: !4224)
!4253 = !DILocation(line: 1489, column: 13, scope: !4235)
!4254 = !DILocation(line: 1490, column: 7, scope: !4235)
!4255 = !DILocation(line: 0, scope: !4235)
!4256 = !DILocation(line: 1494, column: 13, scope: !4235)
!4257 = !DILocation(line: 1495, column: 7, scope: !4235)
!4258 = !DILocation(line: 1500, column: 13, scope: !4235)
!4259 = !DILocation(line: 1501, column: 7, scope: !4235)
!4260 = !DILocation(line: 1504, column: 33, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1504, column: 11)
!4262 = !DILocation(line: 1504, column: 11, scope: !4261)
!4263 = !DILocation(line: 1504, column: 11, scope: !4235)
!4264 = !DILocation(line: 1507, column: 11, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1507, column: 11)
!4266 = !DILocation(line: 1507, column: 11, scope: !4235)
!4267 = !DILocation(line: 1510, column: 7, scope: !4235)
!4268 = !DILocation(line: 1515, column: 11, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1515, column: 11)
!4270 = !DILocation(line: 1515, column: 11, scope: !4235)
!4271 = !DILocation(line: 1522, column: 11, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1522, column: 11)
!4273 = !DILocation(line: 1522, column: 57, scope: !4272)
!4274 = !DILocation(line: 1522, column: 11, scope: !4235)
!4275 = !DILocation(line: 1525, column: 4, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 1523, column: 2)
!4277 = !DILocation(line: 1531, column: 12, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1531, column: 11)
!4279 = !DILocation(line: 1531, column: 25, scope: !4278)
!4280 = !DILocation(line: 1531, column: 28, scope: !4278)
!4281 = !DILocation(line: 1532, column: 4, scope: !4278)
!4282 = !DILocation(line: 1532, column: 7, scope: !4278)
!4283 = !DILocation(line: 1531, column: 11, scope: !4235)
!4284 = !DILocation(line: 1538, column: 11, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1538, column: 11)
!4286 = !DILocation(line: 1538, column: 36, scope: !4285)
!4287 = !DILocation(line: 1538, column: 39, scope: !4285)
!4288 = !DILocation(line: 1538, column: 65, scope: !4285)
!4289 = !DILocation(line: 1538, column: 11, scope: !4235)
!4290 = !DILocation(line: 1541, column: 5, scope: !4235)
!4291 = !DILocation(line: 1542, column: 7, scope: !4235)
!4292 = !DILocation(line: 1543, column: 7, scope: !4235)
!4293 = !DILocation(line: 1545, column: 1, scope: !4224)
!4294 = distinct !DISubprogram(name: "tree_operand_length", scope: !142, file: !142, line: 5347, type: !4295, scopeLine: 5348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4297)
!4295 = !DISubroutineType(types: !4296)
!4296 = !{!627, !4227}
!4297 = !{!4298}
!4298 = !DILocalVariable(name: "node", arg: 1, scope: !4294, file: !142, line: 5347, type: !4227)
!4299 = !DILocation(line: 0, scope: !4294)
!4300 = !DILocation(line: 5349, column: 7, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4294, file: !142, line: 5349, column: 7)
!4302 = !DILocation(line: 5349, column: 7, scope: !4294)
!4303 = !DILocation(line: 5350, column: 12, scope: !4301)
!4304 = !DILocation(line: 5350, column: 5, scope: !4301)
!4305 = !DILocation(line: 5352, column: 12, scope: !4301)
!4306 = !DILocation(line: 5352, column: 5, scope: !4301)
!4307 = !DILocation(line: 0, scope: !4301)
!4308 = !DILocation(line: 5353, column: 1, scope: !4294)
!4309 = distinct !DISubprogram(name: "expand_null_return", scope: !3, file: !3, line: 1552, type: !2028, scopeLine: 1553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2090)
!4310 = !DILocation(line: 1557, column: 3, scope: !4309)
!4311 = !DILocation(line: 1559, column: 3, scope: !4309)
!4312 = !DILocation(line: 1560, column: 1, scope: !4309)
!4313 = distinct !DISubprogram(name: "expand_null_return_1", scope: !3, file: !3, line: 1613, type: !2028, scopeLine: 1614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2090)
!4314 = !DILocation(line: 1615, column: 3, scope: !4313)
!4315 = !DILocation(line: 1616, column: 3, scope: !4313)
!4316 = !DILocation(line: 1617, column: 14, scope: !4313)
!4317 = !DILocation(line: 1617, column: 3, scope: !4313)
!4318 = !DILocation(line: 1618, column: 1, scope: !4313)
!4319 = distinct !DISubprogram(name: "expand_naked_return", scope: !3, file: !3, line: 1566, type: !2028, scopeLine: 1567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4320)
!4320 = !{!4321}
!4321 = !DILocalVariable(name: "end_label", scope: !4319, file: !3, line: 1568, type: !810)
!4322 = !DILocation(line: 1570, column: 3, scope: !4319)
!4323 = !DILocation(line: 1571, column: 3, scope: !4319)
!4324 = !DILocation(line: 1573, column: 15, scope: !4319)
!4325 = !DILocation(line: 0, scope: !4319)
!4326 = !DILocation(line: 1574, column: 17, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 1574, column: 7)
!4328 = !DILocation(line: 1574, column: 7, scope: !4319)
!4329 = !DILocation(line: 1575, column: 38, scope: !4327)
!4330 = !DILocation(line: 1575, column: 36, scope: !4327)
!4331 = !DILocation(line: 1575, column: 5, scope: !4327)
!4332 = !DILocation(line: 1577, column: 3, scope: !4319)
!4333 = !DILocation(line: 1578, column: 1, scope: !4319)
!4334 = distinct !DISubprogram(name: "expand_return", scope: !3, file: !3, line: 1624, type: !2561, scopeLine: 1625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4335)
!4335 = !{!4336, !4337, !4338, !4339, !4340, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4360}
!4336 = !DILocalVariable(name: "retval", arg: 1, scope: !4334, file: !3, line: 1624, type: !636)
!4337 = !DILocalVariable(name: "result_rtl", scope: !4334, file: !3, line: 1626, type: !810)
!4338 = !DILocalVariable(name: "val", scope: !4334, file: !3, line: 1627, type: !810)
!4339 = !DILocalVariable(name: "retval_rhs", scope: !4334, file: !3, line: 1628, type: !636)
!4340 = !DILocalVariable(name: "i", scope: !4341, file: !3, line: 1670, type: !627)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 1669, column: 5)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 1666, column: 12)
!4343 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 1656, column: 7)
!4344 = !DILocalVariable(name: "bitpos", scope: !4341, file: !3, line: 1671, type: !635)
!4345 = !DILocalVariable(name: "xbitpos", scope: !4341, file: !3, line: 1671, type: !635)
!4346 = !DILocalVariable(name: "padding_correction", scope: !4341, file: !3, line: 1672, type: !635)
!4347 = !DILocalVariable(name: "bytes", scope: !4341, file: !3, line: 1673, type: !635)
!4348 = !DILocalVariable(name: "n_regs", scope: !4341, file: !3, line: 1675, type: !627)
!4349 = !DILocalVariable(name: "bitsize", scope: !4341, file: !3, line: 1676, type: !7)
!4350 = !DILocalVariable(name: "result_pseudos", scope: !4341, file: !3, line: 1678, type: !1996)
!4351 = !DILocalVariable(name: "result_reg", scope: !4341, file: !3, line: 1679, type: !810)
!4352 = !DILocalVariable(name: "src", scope: !4341, file: !3, line: 1679, type: !810)
!4353 = !DILocalVariable(name: "dst", scope: !4341, file: !3, line: 1679, type: !810)
!4354 = !DILocalVariable(name: "result_val", scope: !4341, file: !3, line: 1680, type: !810)
!4355 = !DILocalVariable(name: "tmpmode", scope: !4341, file: !3, line: 1681, type: !5)
!4356 = !DILocalVariable(name: "result_reg_mode", scope: !4341, file: !3, line: 1681, type: !5)
!4357 = !DILocalVariable(name: "ot", scope: !4358, file: !3, line: 1781, type: !636)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 1778, column: 5)
!4359 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 1774, column: 12)
!4360 = !DILocalVariable(name: "nt", scope: !4358, file: !3, line: 1782, type: !636)
!4361 = !DILocation(line: 0, scope: !4334)
!4362 = !DILocation(line: 1631, column: 7, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 1631, column: 7)
!4364 = !DILocation(line: 1631, column: 65, scope: !4363)
!4365 = !DILocation(line: 1631, column: 7, scope: !4334)
!4366 = !DILocation(line: 1633, column: 7, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1632, column: 5)
!4368 = !DILocation(line: 1634, column: 7, scope: !4367)
!4369 = !DILocation(line: 1635, column: 7, scope: !4367)
!4370 = !DILocation(line: 1638, column: 17, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 1638, column: 7)
!4372 = !DILocation(line: 1638, column: 14, scope: !4371)
!4373 = !DILocation(line: 1638, column: 7, scope: !4334)
!4374 = !DILocation(line: 1642, column: 7, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 1639, column: 5)
!4376 = !DILocation(line: 1643, column: 7, scope: !4375)
!4377 = !DILocation(line: 1645, column: 13, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 1645, column: 12)
!4379 = !DILocation(line: 1645, column: 32, scope: !4378)
!4380 = !DILocation(line: 1646, column: 6, scope: !4378)
!4381 = !DILocation(line: 1646, column: 28, scope: !4378)
!4382 = !DILocation(line: 1647, column: 5, scope: !4378)
!4383 = !DILocation(line: 1647, column: 8, scope: !4378)
!4384 = !DILocation(line: 1647, column: 45, scope: !4378)
!4385 = !DILocation(line: 1645, column: 12, scope: !4371)
!4386 = !DILocation(line: 1648, column: 18, scope: !4378)
!4387 = !DILocation(line: 1648, column: 5, scope: !4378)
!4388 = !DILocation(line: 0, scope: !4378)
!4389 = !DILocation(line: 1652, column: 16, scope: !4334)
!4390 = !DILocation(line: 1656, column: 7, scope: !4343)
!4391 = !DILocation(line: 1656, column: 30, scope: !4343)
!4392 = !DILocation(line: 1656, column: 7, scope: !4334)
!4393 = !DILocation(line: 1657, column: 5, scope: !4343)
!4394 = !DILocation(line: 1667, column: 5, scope: !4342)
!4395 = !DILocation(line: 1667, column: 8, scope: !4342)
!4396 = !DILocation(line: 1667, column: 43, scope: !4342)
!4397 = !DILocation(line: 1668, column: 5, scope: !4342)
!4398 = !DILocation(line: 1668, column: 8, scope: !4342)
!4399 = !DILocation(line: 1666, column: 12, scope: !4343)
!4400 = !DILocation(line: 0, scope: !4341)
!4401 = !DILocation(line: 1674, column: 23, scope: !4341)
!4402 = !DILocation(line: 1674, column: 4, scope: !4341)
!4403 = !DILocation(line: 1675, column: 44, scope: !4341)
!4404 = !DILocation(line: 1675, column: 49, scope: !4341)
!4405 = !DILocation(line: 1677, column: 4, scope: !4341)
!4406 = !DILocation(line: 1678, column: 29, scope: !4341)
!4407 = !DILocation(line: 1680, column: 24, scope: !4341)
!4408 = !DILocation(line: 1683, column: 17, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 1683, column: 11)
!4410 = !DILocation(line: 1683, column: 11, scope: !4341)
!4411 = !DILocation(line: 1685, column: 4, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 1684, column: 2)
!4413 = !DILocation(line: 1686, column: 4, scope: !4412)
!4414 = !DILocation(line: 1699, column: 17, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 1699, column: 11)
!4416 = !DILocation(line: 1699, column: 34, scope: !4415)
!4417 = !DILocation(line: 1700, column: 4, scope: !4415)
!4418 = !DILocation(line: 1700, column: 22, scope: !4415)
!4419 = !DILocation(line: 1700, column: 37, scope: !4415)
!4420 = !DILocation(line: 1700, column: 8, scope: !4415)
!4421 = !DILocation(line: 1699, column: 11, scope: !4341)
!4422 = !DILocation(line: 1704, column: 13, scope: !4415)
!4423 = !DILocation(line: 1703, column: 38, scope: !4415)
!4424 = !DILocation(line: 1703, column: 2, scope: !4415)
!4425 = !DILocation(line: 0, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 1707, column: 7)
!4427 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 1707, column: 7)
!4428 = !DILocation(line: 1707, column: 12, scope: !4427)
!4429 = !DILocation(line: 0, scope: !4427)
!4430 = !DILocation(line: 1708, column: 12, scope: !4426)
!4431 = !DILocation(line: 1707, column: 7, scope: !4427)
!4432 = !DILocation(line: 1714, column: 16, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 1714, column: 8)
!4434 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 1710, column: 2)
!4435 = !DILocation(line: 1714, column: 32, scope: !4433)
!4436 = !DILocation(line: 1715, column: 19, scope: !4433)
!4437 = !DILocation(line: 1715, column: 8, scope: !4433)
!4438 = !DILocation(line: 1718, column: 27, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 1716, column: 6)
!4440 = !DILocation(line: 1718, column: 14, scope: !4439)
!4441 = !DILocation(line: 1719, column: 31, scope: !4439)
!4442 = !DILocation(line: 1719, column: 8, scope: !4439)
!4443 = !DILocation(line: 1719, column: 48, scope: !4439)
!4444 = !DILocation(line: 1722, column: 29, scope: !4439)
!4445 = !DILocation(line: 1722, column: 8, scope: !4439)
!4446 = !DILocation(line: 1723, column: 6, scope: !4439)
!4447 = !DILocation(line: 1727, column: 15, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 1727, column: 8)
!4449 = !DILocation(line: 1727, column: 31, scope: !4448)
!4450 = !DILocation(line: 1727, column: 8, scope: !4434)
!4451 = !DILocation(line: 1729, column: 14, scope: !4448)
!4452 = !DILocation(line: 1729, column: 7, scope: !4448)
!4453 = !DILocation(line: 1728, column: 12, scope: !4448)
!4454 = !DILocation(line: 1728, column: 6, scope: !4448)
!4455 = !DILocation(line: 1734, column: 60, scope: !4434)
!4456 = !DILocation(line: 1735, column: 7, scope: !4434)
!4457 = !DILocation(line: 1734, column: 4, scope: !4434)
!4458 = !DILocation(line: 1709, column: 12, scope: !4426)
!4459 = !DILocation(line: 1709, column: 32, scope: !4426)
!4460 = !DILocation(line: 1707, column: 7, scope: !4426)
!4461 = distinct !{!4461, !4431, !4462}
!4462 = !DILocation(line: 1738, column: 2, scope: !4427)
!4463 = !DILocation(line: 1740, column: 17, scope: !4341)
!4464 = !DILocation(line: 1741, column: 19, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 1741, column: 11)
!4466 = !DILocation(line: 1741, column: 11, scope: !4341)
!4467 = !DILocation(line: 1746, column: 9, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 1746, column: 4)
!4469 = distinct !DILexicalBlock(scope: !4465, file: !3, line: 1742, column: 2)
!4470 = !DILocation(line: 0, scope: !4468)
!4471 = !DILocation(line: 1746, column: 4, scope: !4468)
!4472 = !DILocation(line: 1750, column: 10, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 1750, column: 10)
!4474 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 1746, column: 4)
!4475 = !DILocation(line: 1750, column: 34, scope: !4473)
!4476 = !DILocation(line: 1750, column: 10, scope: !4474)
!4477 = !DILocation(line: 1748, column: 19, scope: !4474)
!4478 = !DILocation(line: 1746, column: 4, scope: !4474)
!4479 = distinct !{!4479, !4471, !4480}
!4480 = !DILocation(line: 1751, column: 8, scope: !4468)
!4481 = !DILocation(line: 1754, column: 4, scope: !4469)
!4482 = !DILocation(line: 1756, column: 4, scope: !4469)
!4483 = !DILocation(line: 1757, column: 2, scope: !4469)
!4484 = !DILocation(line: 1759, column: 11, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 1759, column: 11)
!4486 = !DILocation(line: 1759, column: 37, scope: !4485)
!4487 = !DILocation(line: 1759, column: 35, scope: !4485)
!4488 = !DILocation(line: 1759, column: 11, scope: !4341)
!4489 = !DILocation(line: 1763, column: 20, scope: !4341)
!4490 = !DILocation(line: 1765, column: 12, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 1765, column: 7)
!4492 = !DILocation(line: 0, scope: !4491)
!4493 = !DILocation(line: 1765, column: 21, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 1765, column: 7)
!4495 = !DILocation(line: 1765, column: 7, scope: !4491)
!4496 = !DILocation(line: 1766, column: 18, scope: !4494)
!4497 = !DILocation(line: 1767, column: 4, scope: !4494)
!4498 = !DILocation(line: 1766, column: 2, scope: !4494)
!4499 = !DILocation(line: 1765, column: 32, scope: !4494)
!4500 = !DILocation(line: 1765, column: 7, scope: !4494)
!4501 = distinct !{!4501, !4495, !4502}
!4502 = !DILocation(line: 1767, column: 21, scope: !4491)
!4503 = !DILocation(line: 1769, column: 19, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 1769, column: 11)
!4505 = !DILocation(line: 1769, column: 11, scope: !4341)
!4506 = !DILocation(line: 1770, column: 15, scope: !4504)
!4507 = !DILocation(line: 1770, column: 2, scope: !4504)
!4508 = !DILocation(line: 1772, column: 7, scope: !4341)
!4509 = !DILocation(line: 1773, column: 5, scope: !4342)
!4510 = !DILocation(line: 1775, column: 9, scope: !4359)
!4511 = !DILocation(line: 1776, column: 5, scope: !4359)
!4512 = !DILocation(line: 1776, column: 9, scope: !4359)
!4513 = !DILocation(line: 1777, column: 9, scope: !4359)
!4514 = !DILocation(line: 1777, column: 35, scope: !4359)
!4515 = !DILocation(line: 1774, column: 12, scope: !4342)
!4516 = !DILocation(line: 1781, column: 17, scope: !4358)
!4517 = !DILocation(line: 0, scope: !4358)
!4518 = !DILocation(line: 1782, column: 43, scope: !4358)
!4519 = !DILocation(line: 1782, column: 59, scope: !4358)
!4520 = !DILocation(line: 1782, column: 17, scope: !4358)
!4521 = !DILocation(line: 1784, column: 13, scope: !4358)
!4522 = !DILocation(line: 1785, column: 43, scope: !4358)
!4523 = !DILocation(line: 1785, column: 13, scope: !4358)
!4524 = !DILocation(line: 1786, column: 13, scope: !4358)
!4525 = !DILocation(line: 1788, column: 7, scope: !4358)
!4526 = !DILocation(line: 1789, column: 5, scope: !4358)
!4527 = !DILocation(line: 1793, column: 28, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 1791, column: 5)
!4529 = !DILocation(line: 1793, column: 7, scope: !4528)
!4530 = !DILocation(line: 1794, column: 7, scope: !4528)
!4531 = !DILocation(line: 1796, column: 1, scope: !4334)
!4532 = distinct !DISubprogram(name: "expand_value_return", scope: !3, file: !3, line: 1583, type: !2550, scopeLine: 1584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4533)
!4533 = !{!4534, !4535, !4536, !4537, !4540, !4541, !4542, !4543}
!4534 = !DILocalVariable(name: "val", arg: 1, scope: !4532, file: !3, line: 1583, type: !810)
!4535 = !DILocalVariable(name: "decl", scope: !4532, file: !3, line: 1587, type: !636)
!4536 = !DILocalVariable(name: "return_reg", scope: !4532, file: !3, line: 1588, type: !810)
!4537 = !DILocalVariable(name: "funtype", scope: !4538, file: !3, line: 1591, type: !636)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 1590, column: 5)
!4539 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 1589, column: 7)
!4540 = !DILocalVariable(name: "type", scope: !4538, file: !3, line: 1592, type: !636)
!4541 = !DILocalVariable(name: "unsignedp", scope: !4538, file: !3, line: 1593, type: !627)
!4542 = !DILocalVariable(name: "old_mode", scope: !4538, file: !3, line: 1594, type: !5)
!4543 = !DILocalVariable(name: "mode", scope: !4538, file: !3, line: 1595, type: !5)
!4544 = !DILocation(line: 0, scope: !4532)
!4545 = !DILocation(line: 1587, column: 15, scope: !4532)
!4546 = !DILocation(line: 1588, column: 20, scope: !4532)
!4547 = !DILocation(line: 1589, column: 18, scope: !4539)
!4548 = !DILocation(line: 1589, column: 7, scope: !4532)
!4549 = !DILocation(line: 1591, column: 22, scope: !4538)
!4550 = !DILocation(line: 0, scope: !4538)
!4551 = !DILocation(line: 1592, column: 19, scope: !4538)
!4552 = !DILocation(line: 1593, column: 7, scope: !4538)
!4553 = !DILocation(line: 1593, column: 23, scope: !4538)
!4554 = !DILocation(line: 1593, column: 11, scope: !4538)
!4555 = !DILocation(line: 1594, column: 36, scope: !4538)
!4556 = !DILocation(line: 1595, column: 32, scope: !4538)
!4557 = !DILocation(line: 1598, column: 16, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 1598, column: 11)
!4559 = !DILocation(line: 1598, column: 11, scope: !4538)
!4560 = !DILocation(line: 1599, column: 44, scope: !4558)
!4561 = !DILocation(line: 1599, column: 8, scope: !4558)
!4562 = !DILocation(line: 1599, column: 2, scope: !4558)
!4563 = !DILocation(line: 1601, column: 11, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 1601, column: 11)
!4565 = !DILocation(line: 1601, column: 33, scope: !4564)
!4566 = !DILocation(line: 1601, column: 11, scope: !4538)
!4567 = !DILocation(line: 1602, column: 42, scope: !4564)
!4568 = !DILocation(line: 1602, column: 2, scope: !4564)
!4569 = !DILocation(line: 1604, column: 2, scope: !4564)
!4570 = !DILocation(line: 1605, column: 5, scope: !4539)
!4571 = !DILocation(line: 1605, column: 5, scope: !4538)
!4572 = !DILocation(line: 1607, column: 3, scope: !4532)
!4573 = !DILocation(line: 1608, column: 1, scope: !4532)
!4574 = distinct !DISubprogram(name: "expand_decl", scope: !3, file: !3, line: 1874, type: !2561, scopeLine: 1875, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4575)
!4575 = !{!4576, !4577, !4578, !4582, !4585, !4587, !4588}
!4576 = !DILocalVariable(name: "decl", arg: 1, scope: !4574, file: !3, line: 1874, type: !636)
!4577 = !DILocalVariable(name: "type", scope: !4574, file: !3, line: 1876, type: !636)
!4578 = !DILocalVariable(name: "x", scope: !4579, file: !3, line: 1909, type: !810)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 1907, column: 5)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 1906, column: 12)
!4581 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 1903, column: 7)
!4582 = !DILocalVariable(name: "reg_mode", scope: !4583, file: !3, line: 1924, type: !5)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 1922, column: 5)
!4584 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 1921, column: 12)
!4585 = !DILocalVariable(name: "oldaddr", scope: !4586, file: !3, line: 1939, type: !810)
!4586 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 1938, column: 5)
!4587 = !DILocalVariable(name: "addr", scope: !4586, file: !3, line: 1940, type: !810)
!4588 = !DILocalVariable(name: "x", scope: !4586, file: !3, line: 1941, type: !810)
!4589 = !DILocation(line: 0, scope: !4574)
!4590 = !DILocation(line: 1878, column: 10, scope: !4574)
!4591 = !DILocation(line: 1882, column: 7, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 1882, column: 7)
!4593 = !DILocation(line: 1882, column: 24, scope: !4592)
!4594 = !DILocation(line: 1882, column: 7, scope: !4574)
!4595 = !DILocation(line: 1884, column: 26, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 1883, column: 5)
!4597 = !DILocation(line: 1884, column: 7, scope: !4596)
!4598 = !DILocation(line: 1884, column: 24, scope: !4596)
!4599 = !DILocation(line: 1885, column: 27, scope: !4596)
!4600 = !DILocation(line: 1885, column: 7, scope: !4596)
!4601 = !DILocation(line: 1885, column: 25, scope: !4596)
!4602 = !DILocation(line: 1886, column: 26, scope: !4596)
!4603 = !DILocation(line: 1886, column: 7, scope: !4596)
!4604 = !DILocation(line: 1886, column: 24, scope: !4596)
!4605 = !DILocation(line: 1887, column: 31, scope: !4596)
!4606 = !DILocation(line: 1887, column: 7, scope: !4596)
!4607 = !DILocation(line: 1887, column: 29, scope: !4596)
!4608 = !DILocation(line: 1888, column: 7, scope: !4596)
!4609 = !DILocation(line: 1895, column: 24, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 1895, column: 7)
!4611 = !DILocation(line: 1895, column: 7, scope: !4574)
!4612 = !DILocation(line: 1898, column: 7, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 1898, column: 7)
!4614 = !DILocation(line: 1898, column: 26, scope: !4613)
!4615 = !DILocation(line: 1898, column: 29, scope: !4613)
!4616 = !DILocation(line: 1898, column: 7, scope: !4574)
!4617 = !DILocation(line: 1903, column: 15, scope: !4581)
!4618 = !DILocation(line: 1903, column: 12, scope: !4581)
!4619 = !DILocation(line: 1903, column: 7, scope: !4574)
!4620 = !DILocation(line: 1904, column: 5, scope: !4581)
!4621 = !DILocation(line: 1906, column: 12, scope: !4580)
!4622 = !DILocation(line: 1906, column: 29, scope: !4580)
!4623 = !DILocation(line: 1906, column: 12, scope: !4581)
!4624 = !DILocation(line: 1910, column: 11, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 1910, column: 11)
!4626 = !DILocation(line: 1910, column: 31, scope: !4625)
!4627 = !DILocation(line: 1910, column: 11, scope: !4579)
!4628 = !DILocation(line: 1912, column: 28, scope: !4625)
!4629 = !DILocation(line: 1912, column: 6, scope: !4625)
!4630 = !DILocation(line: 0, scope: !4579)
!4631 = !DILocation(line: 1912, column: 2, scope: !4625)
!4632 = !DILocation(line: 1916, column: 28, scope: !4625)
!4633 = !DILocation(line: 1916, column: 6, scope: !4625)
!4634 = !DILocation(line: 0, scope: !4625)
!4635 = !DILocation(line: 1918, column: 7, scope: !4579)
!4636 = !DILocation(line: 1919, column: 7, scope: !4579)
!4637 = !DILocation(line: 1920, column: 5, scope: !4579)
!4638 = !DILocation(line: 1921, column: 12, scope: !4584)
!4639 = !DILocation(line: 1921, column: 12, scope: !4580)
!4640 = !DILocation(line: 1924, column: 36, scope: !4583)
!4641 = !DILocation(line: 0, scope: !4583)
!4642 = !DILocation(line: 1926, column: 7, scope: !4583)
!4643 = !DILocation(line: 1929, column: 12, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1929, column: 11)
!4645 = !DILocation(line: 1929, column: 11, scope: !4583)
!4646 = !DILocation(line: 1930, column: 19, scope: !4644)
!4647 = !DILocation(line: 1930, column: 4, scope: !4644)
!4648 = !DILocation(line: 1932, column: 11, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1932, column: 11)
!4650 = !DILocation(line: 1932, column: 11, scope: !4583)
!4651 = !DILocation(line: 1933, column: 20, scope: !4649)
!4652 = !DILocation(line: 1934, column: 6, scope: !4649)
!4653 = !DILocation(line: 1933, column: 2, scope: !4649)
!4654 = !DILocation(line: 0, scope: !4586)
!4655 = !DILocation(line: 1944, column: 7, scope: !4586)
!4656 = !DILocation(line: 1950, column: 11, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 1950, column: 11)
!4658 = !DILocation(line: 1950, column: 11, scope: !4586)
!4659 = !DILocation(line: 1952, column: 4, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 1951, column: 2)
!4661 = !DILocation(line: 1953, column: 4, scope: !4660)
!4662 = !DILocation(line: 1954, column: 14, scope: !4660)
!4663 = !DILocation(line: 1955, column: 2, scope: !4660)
!4664 = !DILocation(line: 1958, column: 28, scope: !4586)
!4665 = !DILocation(line: 1958, column: 45, scope: !4586)
!4666 = !DILocation(line: 1958, column: 58, scope: !4586)
!4667 = !DILocation(line: 1959, column: 9, scope: !4586)
!4668 = !DILocation(line: 1958, column: 7, scope: !4586)
!4669 = !DILocation(line: 1958, column: 25, scope: !4586)
!4670 = !DILocation(line: 1960, column: 30, scope: !4586)
!4671 = !DILocation(line: 1962, column: 11, scope: !4586)
!4672 = !DILocation(line: 1963, column: 7, scope: !4586)
!4673 = !DILocation(line: 1964, column: 7, scope: !4586)
!4674 = !DILocation(line: 1966, column: 11, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 1966, column: 11)
!4676 = !DILocation(line: 1966, column: 11, scope: !4586)
!4677 = !DILocation(line: 1968, column: 26, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 1967, column: 2)
!4679 = !DILocation(line: 1968, column: 11, scope: !4678)
!4680 = !DILocation(line: 1969, column: 13, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 1969, column: 8)
!4682 = !DILocation(line: 1969, column: 8, scope: !4678)
!4683 = !DILocation(line: 1970, column: 6, scope: !4681)
!4684 = !DILocation(line: 1973, column: 1, scope: !4574)
!4685 = distinct !DISubprogram(name: "expand_stack_save", scope: !3, file: !3, line: 1977, type: !4686, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4688)
!4686 = !DISubroutineType(types: !4687)
!4687 = !{!810}
!4688 = !{!4689}
!4689 = !DILocalVariable(name: "ret", scope: !4685, file: !3, line: 1979, type: !810)
!4690 = !DILocation(line: 1979, column: 3, scope: !4685)
!4691 = !DILocation(line: 0, scope: !4685)
!4692 = !DILocation(line: 1979, column: 7, scope: !4685)
!4693 = !DILocation(line: 1981, column: 3, scope: !4685)
!4694 = !DILocation(line: 1982, column: 3, scope: !4685)
!4695 = !DILocation(line: 1983, column: 10, scope: !4685)
!4696 = !DILocation(line: 1984, column: 1, scope: !4685)
!4697 = !DILocation(line: 1983, column: 3, scope: !4685)
!4698 = distinct !DISubprogram(name: "expand_stack_restore", scope: !3, file: !3, line: 1988, type: !2561, scopeLine: 1989, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4699)
!4699 = !{!4700, !4701}
!4700 = !DILocalVariable(name: "var", arg: 1, scope: !4698, file: !3, line: 1988, type: !636)
!4701 = !DILocalVariable(name: "sa", scope: !4698, file: !3, line: 1990, type: !810)
!4702 = !DILocation(line: 0, scope: !4698)
!4703 = !DILocation(line: 1990, column: 12, scope: !4698)
!4704 = !DILocation(line: 1992, column: 8, scope: !4698)
!4705 = !DILocation(line: 1993, column: 3, scope: !4698)
!4706 = !DILocation(line: 1994, column: 1, scope: !4698)
!4707 = distinct !DISubprogram(name: "expand_case", scope: !3, file: !3, line: 2236, type: !2944, scopeLine: 2237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4708)
!4708 = !{!4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731, !4753, !4756, !4757, !4758, !4762, !4763, !4769, !4771, !4774, !4778, !4779}
!4709 = !DILocalVariable(name: "stmt", arg: 1, scope: !4707, file: !3, line: 2236, type: !958)
!4710 = !DILocalVariable(name: "minval", scope: !4707, file: !3, line: 2238, type: !636)
!4711 = !DILocalVariable(name: "maxval", scope: !4707, file: !3, line: 2238, type: !636)
!4712 = !DILocalVariable(name: "range", scope: !4707, file: !3, line: 2238, type: !636)
!4713 = !DILocalVariable(name: "default_label", scope: !4707, file: !3, line: 2239, type: !810)
!4714 = !DILocalVariable(name: "n", scope: !4707, file: !3, line: 2240, type: !2007)
!4715 = !DILocalVariable(name: "count", scope: !4707, file: !3, line: 2241, type: !7)
!4716 = !DILocalVariable(name: "uniq", scope: !4707, file: !3, line: 2241, type: !7)
!4717 = !DILocalVariable(name: "index", scope: !4707, file: !3, line: 2242, type: !810)
!4718 = !DILocalVariable(name: "table_label", scope: !4707, file: !3, line: 2243, type: !810)
!4719 = !DILocalVariable(name: "ncases", scope: !4707, file: !3, line: 2244, type: !627)
!4720 = !DILocalVariable(name: "labelvec", scope: !4707, file: !3, line: 2245, type: !1996)
!4721 = !DILocalVariable(name: "i", scope: !4707, file: !3, line: 2246, type: !627)
!4722 = !DILocalVariable(name: "before_case", scope: !4707, file: !3, line: 2247, type: !810)
!4723 = !DILocalVariable(name: "end", scope: !4707, file: !3, line: 2247, type: !810)
!4724 = !DILocalVariable(name: "lab", scope: !4707, file: !3, line: 2247, type: !810)
!4725 = !DILocalVariable(name: "index_expr", scope: !4707, file: !3, line: 2249, type: !636)
!4726 = !DILocalVariable(name: "index_type", scope: !4707, file: !3, line: 2250, type: !636)
!4727 = !DILocalVariable(name: "unsignedp", scope: !4707, file: !3, line: 2251, type: !627)
!4728 = !DILocalVariable(name: "start", scope: !4707, file: !3, line: 2255, type: !810)
!4729 = !DILocalVariable(name: "case_list", scope: !4707, file: !3, line: 2259, type: !2007)
!4730 = !DILocalVariable(name: "default_label_decl", scope: !4707, file: !3, line: 2262, type: !636)
!4731 = !DILocalVariable(name: "case_node_pool", scope: !4707, file: !3, line: 2264, type: !4732)
!4732 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !4733, line: 58, baseType: !4734)
!4733 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !4733, line: 32, size: 704, elements: !4736)
!4736 = !{!4737, !4738, !4739, !4745, !4746, !4747, !4748, !4749, !4750, !4751, !4752}
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4735, file: !4733, line: 34, baseType: !632, size: 64)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !4735, file: !4733, line: 38, baseType: !1104, size: 64, offset: 64)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !4735, file: !4733, line: 41, baseType: !4740, size: 64, offset: 128)
!4740 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !4733, line: 30, baseType: !4741)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !4733, line: 26, size: 64, elements: !4743)
!4743 = !{!4744}
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4742, file: !4733, line: 28, baseType: !4741, size: 64)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !4735, file: !4733, line: 45, baseType: !629, size: 64, offset: 192)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !4735, file: !4733, line: 49, baseType: !1104, size: 64, offset: 256)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !4735, file: !4733, line: 51, baseType: !1104, size: 64, offset: 320)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !4735, file: !4733, line: 52, baseType: !1104, size: 64, offset: 384)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !4735, file: !4733, line: 53, baseType: !1104, size: 64, offset: 448)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !4735, file: !4733, line: 54, baseType: !4740, size: 64, offset: 512)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !4735, file: !4733, line: 55, baseType: !1104, size: 64, offset: 576)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !4735, file: !4733, line: 56, baseType: !1104, size: 64, offset: 640)
!4753 = !DILocalVariable(name: "elt", scope: !4754, file: !3, line: 2273, type: !636)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 2272, column: 5)
!4755 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 2271, column: 7)
!4756 = !DILocalVariable(name: "label_bitmap", scope: !4754, file: !3, line: 2274, type: !1997)
!4757 = !DILocalVariable(name: "stopi", scope: !4754, file: !3, line: 2275, type: !627)
!4758 = !DILocalVariable(name: "low", scope: !4759, file: !3, line: 2291, type: !636)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !3, line: 2290, column: 2)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 2289, column: 7)
!4761 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2289, column: 7)
!4762 = !DILocalVariable(name: "high", scope: !4759, file: !3, line: 2291, type: !636)
!4763 = !DILocalVariable(name: "wider_mode", scope: !4764, file: !3, line: 2418, type: !5)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 2417, column: 6)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 2415, column: 8)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 2407, column: 2)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 2393, column: 16)
!4768 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2366, column: 11)
!4769 = !DILocalVariable(name: "fallback_label", scope: !4770, file: !3, line: 2454, type: !810)
!4770 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 2453, column: 2)
!4771 = !DILocalVariable(name: "ok", scope: !4772, file: !3, line: 2459, type: !626)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !3, line: 2458, column: 6)
!4773 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 2456, column: 8)
!4774 = !DILocalVariable(name: "i_low", scope: !4775, file: !3, line: 2487, type: !691)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 2483, column: 6)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 2482, column: 4)
!4777 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 2482, column: 4)
!4778 = !DILocalVariable(name: "i_high", scope: !4775, file: !3, line: 2490, type: !691)
!4779 = !DILocalVariable(name: "i", scope: !4775, file: !3, line: 2493, type: !691)
!4780 = !DILocation(line: 0, scope: !4707)
!4781 = !DILocation(line: 2249, column: 21, scope: !4707)
!4782 = !DILocation(line: 2250, column: 21, scope: !4707)
!4783 = !DILocation(line: 2251, column: 19, scope: !4707)
!4784 = !DILocation(line: 2259, column: 3, scope: !4707)
!4785 = !DILocation(line: 2259, column: 21, scope: !4707)
!4786 = !DILocation(line: 2264, column: 31, scope: !4707)
!4787 = !DILocation(line: 2268, column: 3, scope: !4707)
!4788 = !DILocation(line: 2271, column: 21, scope: !4755)
!4789 = !DILocation(line: 2271, column: 18, scope: !4755)
!4790 = !DILocation(line: 2271, column: 7, scope: !4707)
!4791 = !DILocation(line: 0, scope: !4754)
!4792 = !DILocation(line: 2279, column: 7, scope: !4754)
!4793 = !DILocation(line: 2282, column: 13, scope: !4754)
!4794 = !DILocation(line: 2283, column: 12, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2283, column: 11)
!4796 = !DILocation(line: 2283, column: 27, scope: !4795)
!4797 = !DILocation(line: 2283, column: 31, scope: !4795)
!4798 = !DILocation(line: 2283, column: 11, scope: !4754)
!4799 = !DILocation(line: 2285, column: 25, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 2284, column: 2)
!4801 = !DILocation(line: 2287, column: 2, scope: !4800)
!4802 = !DILocation(line: 2289, column: 16, scope: !4761)
!4803 = !DILocation(line: 2289, column: 12, scope: !4761)
!4804 = !DILocation(line: 0, scope: !4761)
!4805 = !DILocation(line: 2289, column: 55, scope: !4760)
!4806 = !DILocation(line: 2289, column: 7, scope: !4761)
!4807 = !DILocation(line: 2292, column: 10, scope: !4759)
!4808 = !DILocation(line: 2294, column: 10, scope: !4759)
!4809 = !DILocation(line: 0, scope: !4759)
!4810 = !DILocation(line: 2295, column: 4, scope: !4759)
!4811 = !DILocation(line: 2296, column: 11, scope: !4759)
!4812 = !DILocation(line: 2299, column: 8, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 2299, column: 8)
!4814 = !DILocation(line: 2299, column: 13, scope: !4813)
!4815 = !DILocation(line: 2299, column: 16, scope: !4813)
!4816 = !DILocation(line: 2299, column: 8, scope: !4759)
!4817 = !DILocation(line: 2303, column: 38, scope: !4759)
!4818 = !DILocation(line: 2302, column: 16, scope: !4759)
!4819 = !DILocation(line: 2302, column: 14, scope: !4759)
!4820 = !DILocation(line: 2304, column: 2, scope: !4760)
!4821 = !DILocation(line: 2289, column: 7, scope: !4760)
!4822 = distinct !{!4822, !4806, !4823}
!4823 = !DILocation(line: 2304, column: 2, scope: !4761)
!4824 = !DILocation(line: 2307, column: 29, scope: !4754)
!4825 = !DILocation(line: 2308, column: 11, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2308, column: 11)
!4827 = !DILocation(line: 2308, column: 11, scope: !4754)
!4828 = !DILocation(line: 2309, column: 18, scope: !4826)
!4829 = !DILocation(line: 2309, column: 2, scope: !4826)
!4830 = !DILocation(line: 2315, column: 22, scope: !4754)
!4831 = !DILocation(line: 2316, column: 12, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2316, column: 7)
!4833 = !DILocation(line: 0, scope: !4832)
!4834 = !DILocation(line: 2313, column: 12, scope: !4754)
!4835 = !DILocation(line: 2316, column: 7, scope: !4832)
!4836 = !DILocation(line: 2320, column: 16, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 2320, column: 8)
!4838 = distinct !DILexicalBlock(scope: !4839, file: !3, line: 2317, column: 2)
!4839 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 2316, column: 7)
!4840 = !DILocation(line: 0, scope: !4837)
!4841 = !DILocation(line: 2320, column: 8, scope: !4838)
!4842 = !DILocation(line: 2323, column: 20, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 2321, column: 6)
!4844 = !DILocation(line: 2324, column: 6, scope: !4843)
!4845 = !DILocation(line: 2327, column: 12, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 2327, column: 12)
!4847 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 2326, column: 6)
!4848 = !DILocation(line: 2327, column: 12, scope: !4847)
!4849 = !DILocation(line: 2328, column: 15, scope: !4846)
!4850 = !DILocation(line: 2328, column: 3, scope: !4846)
!4851 = !DILocation(line: 2329, column: 40, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 2329, column: 12)
!4853 = !DILocation(line: 2329, column: 12, scope: !4852)
!4854 = !DILocation(line: 2329, column: 12, scope: !4847)
!4855 = !DILocation(line: 2333, column: 41, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 2333, column: 8)
!4857 = !DILocation(line: 2330, column: 15, scope: !4852)
!4858 = !DILocation(line: 2330, column: 3, scope: !4852)
!4859 = !DILocation(line: 2333, column: 33, scope: !4856)
!4860 = !DILocation(line: 2333, column: 10, scope: !4856)
!4861 = !DILocation(line: 2333, column: 8, scope: !4838)
!4862 = !DILocation(line: 2338, column: 24, scope: !4838)
!4863 = !DILocation(line: 2338, column: 10, scope: !4838)
!4864 = !DILocation(line: 2339, column: 37, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 2339, column: 8)
!4866 = !DILocation(line: 2339, column: 9, scope: !4865)
!4867 = !DILocation(line: 2339, column: 8, scope: !4838)
!4868 = !DILocation(line: 2341, column: 38, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 2340, column: 6)
!4870 = !DILocation(line: 2341, column: 8, scope: !4869)
!4871 = !DILocation(line: 2342, column: 12, scope: !4869)
!4872 = !DILocation(line: 2343, column: 6, scope: !4869)
!4873 = !DILocation(line: 2316, column: 37, scope: !4839)
!4874 = !DILocation(line: 2316, column: 7, scope: !4839)
!4875 = distinct !{!4875, !4835, !4876}
!4876 = !DILocation(line: 2344, column: 2, scope: !4832)
!4877 = !DILocation(line: 2346, column: 7, scope: !4754)
!4878 = !DILocation(line: 2352, column: 17, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2352, column: 11)
!4880 = !DILocation(line: 2352, column: 11, scope: !4754)
!4881 = !DILocation(line: 2354, column: 8, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 2354, column: 8)
!4883 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2353, column: 2)
!4884 = !DILocation(line: 2354, column: 8, scope: !4883)
!4885 = !DILocation(line: 2355, column: 6, scope: !4882)
!4886 = !DILocation(line: 2356, column: 11, scope: !4883)
!4887 = !DILocation(line: 2357, column: 4, scope: !4883)
!4888 = !DILocation(line: 2361, column: 15, scope: !4754)
!4889 = !DILocation(line: 2366, column: 11, scope: !4768)
!4890 = !DILocation(line: 2367, column: 4, scope: !4768)
!4891 = !DILocation(line: 2367, column: 9, scope: !4768)
!4892 = !DILocation(line: 2368, column: 4, scope: !4768)
!4893 = !DILocation(line: 2368, column: 32, scope: !4768)
!4894 = !DILocation(line: 2368, column: 7, scope: !4768)
!4895 = !DILocation(line: 2368, column: 62, scope: !4768)
!4896 = !DILocation(line: 2369, column: 4, scope: !4768)
!4897 = !DILocation(line: 2369, column: 7, scope: !4768)
!4898 = !DILocation(line: 2369, column: 35, scope: !4768)
!4899 = !DILocation(line: 2370, column: 4, scope: !4768)
!4900 = !DILocation(line: 2370, column: 7, scope: !4768)
!4901 = !DILocation(line: 2371, column: 4, scope: !4768)
!4902 = !DILocation(line: 2371, column: 14, scope: !4768)
!4903 = !DILocation(line: 2371, column: 28, scope: !4768)
!4904 = !DILocation(line: 2371, column: 19, scope: !4768)
!4905 = !DILocation(line: 2372, column: 17, scope: !4768)
!4906 = !DILocation(line: 2372, column: 31, scope: !4768)
!4907 = !DILocation(line: 2372, column: 22, scope: !4768)
!4908 = !DILocation(line: 2373, column: 17, scope: !4768)
!4909 = !DILocation(line: 2373, column: 31, scope: !4768)
!4910 = !DILocation(line: 2373, column: 22, scope: !4768)
!4911 = !DILocation(line: 2378, column: 8, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 2378, column: 8)
!4913 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 2374, column: 2)
!4914 = !DILocation(line: 2378, column: 37, scope: !4912)
!4915 = !DILocation(line: 2379, column: 8, scope: !4912)
!4916 = !DILocation(line: 2379, column: 37, scope: !4912)
!4917 = !DILocation(line: 2379, column: 11, scope: !4912)
!4918 = !DILocation(line: 2379, column: 67, scope: !4912)
!4919 = !DILocation(line: 2378, column: 8, scope: !4913)
!4920 = !DILocation(line: 2381, column: 17, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 2380, column: 6)
!4922 = !DILocation(line: 2383, column: 6, scope: !4921)
!4923 = !DILocation(line: 2384, column: 4, scope: !4913)
!4924 = !DILocation(line: 2386, column: 2, scope: !4913)
!4925 = !DILocation(line: 2393, column: 32, scope: !4767)
!4926 = !DILocation(line: 2393, column: 24, scope: !4767)
!4927 = !DILocation(line: 2393, column: 22, scope: !4767)
!4928 = !DILocation(line: 2394, column: 9, scope: !4767)
!4929 = !DILocation(line: 2395, column: 10, scope: !4767)
!4930 = !DILocation(line: 2395, column: 48, scope: !4767)
!4931 = !DILocation(line: 2395, column: 9, scope: !4767)
!4932 = !DILocation(line: 2394, column: 12, scope: !4767)
!4933 = !DILocation(line: 2395, column: 57, scope: !4767)
!4934 = !DILocation(line: 2398, column: 9, scope: !4767)
!4935 = !DILocation(line: 2398, column: 12, scope: !4767)
!4936 = !DILocation(line: 2398, column: 40, scope: !4767)
!4937 = !DILocation(line: 2402, column: 13, scope: !4767)
!4938 = !DILocation(line: 2402, column: 9, scope: !4767)
!4939 = !DILocation(line: 2403, column: 12, scope: !4767)
!4940 = !DILocation(line: 2393, column: 16, scope: !4768)
!4941 = !DILocation(line: 2408, column: 12, scope: !4766)
!4942 = !DILocation(line: 2415, column: 8, scope: !4765)
!4943 = !DILocation(line: 2415, column: 42, scope: !4765)
!4944 = !DILocation(line: 2416, column: 8, scope: !4765)
!4945 = !DILocation(line: 2416, column: 13, scope: !4765)
!4946 = !DILocation(line: 2415, column: 8, scope: !4766)
!4947 = !DILocation(line: 2419, column: 26, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 2419, column: 8)
!4949 = !DILocation(line: 0, scope: !4764)
!4950 = !DILocation(line: 2419, column: 13, scope: !4948)
!4951 = !DILocation(line: 0, scope: !4948)
!4952 = !DILocation(line: 2419, column: 55, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 2419, column: 8)
!4954 = !DILocation(line: 2419, column: 8, scope: !4948)
!4955 = !DILocation(line: 2421, column: 7, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 2421, column: 7)
!4957 = !DILocation(line: 2421, column: 7, scope: !4953)
!4958 = !DILocation(line: 2423, column: 15, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 2422, column: 5)
!4960 = !DILocation(line: 2424, column: 7, scope: !4959)
!4961 = !DILocation(line: 2420, column: 19, scope: !4953)
!4962 = !DILocation(line: 2419, column: 8, scope: !4953)
!4963 = distinct !{!4963, !4954, !4964}
!4964 = !DILocation(line: 2425, column: 5, scope: !4948)
!4965 = !DILocation(line: 2428, column: 4, scope: !4766)
!4966 = !DILocation(line: 0, scope: !4766)
!4967 = !DILocation(line: 2430, column: 8, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 2430, column: 8)
!4969 = !DILocation(line: 2430, column: 8, scope: !4766)
!4970 = !DILocation(line: 2431, column: 14, scope: !4968)
!4971 = !DILocation(line: 2431, column: 6, scope: !4968)
!4972 = !DILocation(line: 2446, column: 21, scope: !4766)
!4973 = !DILocation(line: 2446, column: 19, scope: !4766)
!4974 = !DILocation(line: 2447, column: 4, scope: !4766)
!4975 = !DILocation(line: 2448, column: 28, scope: !4766)
!4976 = !DILocation(line: 2448, column: 4, scope: !4766)
!4977 = !DILocation(line: 2449, column: 8, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 2449, column: 8)
!4979 = !DILocation(line: 2449, column: 8, scope: !4766)
!4980 = !DILocation(line: 2450, column: 6, scope: !4978)
!4981 = !DILocation(line: 2454, column: 47, scope: !4770)
!4982 = !DILocation(line: 2454, column: 25, scope: !4770)
!4983 = !DILocation(line: 0, scope: !4770)
!4984 = !DILocation(line: 2455, column: 18, scope: !4770)
!4985 = !DILocation(line: 2456, column: 10, scope: !4773)
!4986 = !DILocation(line: 2456, column: 8, scope: !4770)
!4987 = !DILocation(line: 2463, column: 12, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 2463, column: 12)
!4989 = !DILocation(line: 2464, column: 5, scope: !4988)
!4990 = !DILocation(line: 2464, column: 8, scope: !4988)
!4991 = !DILocation(line: 2464, column: 37, scope: !4988)
!4992 = !DILocation(line: 2465, column: 5, scope: !4988)
!4993 = !DILocation(line: 2465, column: 8, scope: !4988)
!4994 = !DILocation(line: 2465, column: 37, scope: !4988)
!4995 = !DILocation(line: 2463, column: 12, scope: !4772)
!4996 = !DILocation(line: 2467, column: 14, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 2466, column: 3)
!4998 = !DILocation(line: 2469, column: 3, scope: !4997)
!4999 = !DILocation(line: 2471, column: 13, scope: !4772)
!5000 = !DILocation(line: 0, scope: !4772)
!5001 = !DILocation(line: 2473, column: 8, scope: !4772)
!5002 = !DILocation(line: 2478, column: 13, scope: !4770)
!5003 = !DILocation(line: 2479, column: 15, scope: !4770)
!5004 = !DILocation(line: 2480, column: 12, scope: !4770)
!5005 = !DILocation(line: 2480, column: 32, scope: !4770)
!5006 = !DILocation(line: 2480, column: 4, scope: !4770)
!5007 = !DILocation(line: 2482, column: 9, scope: !4777)
!5008 = !DILocation(line: 0, scope: !4777)
!5009 = !DILocation(line: 2482, column: 4, scope: !4777)
!5010 = !DILocation(line: 2488, column: 19, scope: !4775)
!5011 = !DILocation(line: 2488, column: 5, scope: !4775)
!5012 = !DILocation(line: 0, scope: !4775)
!5013 = !DILocation(line: 2491, column: 19, scope: !4775)
!5014 = !DILocation(line: 2491, column: 5, scope: !4775)
!5015 = !DILocation(line: 0, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 2495, column: 8)
!5017 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 2495, column: 8)
!5018 = !DILocation(line: 2495, column: 13, scope: !5017)
!5019 = !DILocation(line: 0, scope: !5017)
!5020 = !DILocation(line: 2495, column: 26, scope: !5016)
!5021 = !DILocation(line: 2495, column: 8, scope: !5017)
!5022 = !DILocation(line: 2497, column: 7, scope: !5016)
!5023 = !DILocation(line: 2496, column: 3, scope: !5016)
!5024 = !DILocation(line: 2497, column: 5, scope: !5016)
!5025 = !DILocation(line: 2495, column: 39, scope: !5016)
!5026 = !DILocation(line: 2495, column: 8, scope: !5016)
!5027 = distinct !{!5027, !5021, !5028}
!5028 = !DILocation(line: 2497, column: 7, scope: !5017)
!5029 = !DILocation(line: 2482, column: 34, scope: !4776)
!5030 = !DILocation(line: 2482, column: 4, scope: !4776)
!5031 = distinct !{!5031, !5009, !5032}
!5032 = !DILocation(line: 2498, column: 6, scope: !4777)
!5033 = !DILocation(line: 2504, column: 9, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 2504, column: 8)
!5035 = !DILocation(line: 2504, column: 8, scope: !4770)
!5036 = !DILocation(line: 2506, column: 9, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 2506, column: 4)
!5038 = !DILocation(line: 0, scope: !5037)
!5039 = !DILocation(line: 2506, column: 18, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 2506, column: 4)
!5041 = !DILocation(line: 2506, column: 4, scope: !5037)
!5042 = !DILocation(line: 2507, column: 10, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 2507, column: 10)
!5044 = !DILocation(line: 2507, column: 22, scope: !5043)
!5045 = !DILocation(line: 2507, column: 10, scope: !5040)
!5046 = !DILocation(line: 2508, column: 22, scope: !5043)
!5047 = !DILocation(line: 2508, column: 20, scope: !5043)
!5048 = !DILocation(line: 2508, column: 8, scope: !5043)
!5049 = !DILocation(line: 2506, column: 29, scope: !5040)
!5050 = !DILocation(line: 2506, column: 4, scope: !5040)
!5051 = distinct !{!5051, !5041, !5052}
!5052 = !DILocation(line: 2508, column: 22, scope: !5037)
!5053 = !DILocation(line: 2511, column: 4, scope: !4770)
!5054 = !DILocation(line: 2513, column: 35, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 2513, column: 8)
!5056 = !DILocation(line: 2513, column: 8, scope: !4770)
!5057 = !DILocation(line: 2514, column: 22, scope: !5055)
!5058 = !DILocation(line: 2514, column: 6, scope: !5055)
!5059 = !DILocation(line: 2519, column: 22, scope: !5055)
!5060 = !DILocation(line: 2519, column: 6, scope: !5055)
!5061 = !DILocation(line: 2523, column: 4, scope: !4770)
!5062 = !DILocation(line: 2526, column: 21, scope: !4754)
!5063 = !DILocation(line: 2527, column: 13, scope: !4754)
!5064 = !DILocation(line: 2528, column: 7, scope: !4754)
!5065 = !DILocation(line: 2529, column: 5, scope: !4755)
!5066 = !DILocation(line: 2531, column: 3, scope: !4707)
!5067 = !DILocation(line: 2532, column: 3, scope: !4707)
!5068 = !DILocation(line: 2533, column: 1, scope: !4707)
!5069 = distinct !DISubprogram(name: "gimple_switch_index", scope: !550, file: !550, line: 3180, type: !5070, scopeLine: 3181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5072)
!5070 = !DISubroutineType(types: !5071)
!5071 = !{!636, !3100}
!5072 = !{!5073}
!5073 = !DILocalVariable(name: "gs", arg: 1, scope: !5069, file: !550, line: 3180, type: !3100)
!5074 = !DILocation(line: 0, scope: !5069)
!5075 = !DILocation(line: 3183, column: 10, scope: !5069)
!5076 = !DILocation(line: 3183, column: 3, scope: !5069)
!5077 = distinct !DISubprogram(name: "gimple_switch_label", scope: !550, file: !550, line: 3212, type: !3117, scopeLine: 3213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5078)
!5078 = !{!5079, !5080}
!5079 = !DILocalVariable(name: "gs", arg: 1, scope: !5077, file: !550, line: 3212, type: !3100)
!5080 = !DILocalVariable(name: "index", arg: 2, scope: !5077, file: !550, line: 3212, type: !7)
!5081 = !DILocation(line: 0, scope: !5077)
!5082 = !DILocation(line: 3215, column: 3, scope: !5077)
!5083 = !DILocation(line: 3216, column: 10, scope: !5077)
!5084 = !DILocation(line: 3216, column: 3, scope: !5077)
!5085 = distinct !DISubprogram(name: "gimple_switch_num_labels", scope: !550, file: !550, line: 3157, type: !3107, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5086)
!5086 = !{!5087, !5088}
!5087 = !DILocalVariable(name: "gs", arg: 1, scope: !5085, file: !550, line: 3157, type: !3100)
!5088 = !DILocalVariable(name: "num_ops", scope: !5085, file: !550, line: 3159, type: !7)
!5089 = !DILocation(line: 0, scope: !5085)
!5090 = !DILocation(line: 3161, column: 13, scope: !5085)
!5091 = !DILocation(line: 3162, column: 3, scope: !5085)
!5092 = !DILocation(line: 3163, column: 18, scope: !5085)
!5093 = !DILocation(line: 3163, column: 3, scope: !5085)
!5094 = distinct !DISubprogram(name: "add_case_node", scope: !3, file: !3, line: 2003, type: !5095, scopeLine: 2005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5097)
!5095 = !DISubroutineType(types: !5096)
!5096 = !{!2007, !2007, !636, !636, !636, !636, !4732}
!5097 = !{!5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106}
!5098 = !DILocalVariable(name: "head", arg: 1, scope: !5094, file: !3, line: 2003, type: !2007)
!5099 = !DILocalVariable(name: "type", arg: 2, scope: !5094, file: !3, line: 2003, type: !636)
!5100 = !DILocalVariable(name: "low", arg: 3, scope: !5094, file: !3, line: 2003, type: !636)
!5101 = !DILocalVariable(name: "high", arg: 4, scope: !5094, file: !3, line: 2003, type: !636)
!5102 = !DILocalVariable(name: "label", arg: 5, scope: !5094, file: !3, line: 2004, type: !636)
!5103 = !DILocalVariable(name: "case_node_pool", arg: 6, scope: !5094, file: !3, line: 2004, type: !4732)
!5104 = !DILocalVariable(name: "min_value", scope: !5094, file: !3, line: 2006, type: !636)
!5105 = !DILocalVariable(name: "max_value", scope: !5094, file: !3, line: 2006, type: !636)
!5106 = !DILocalVariable(name: "r", scope: !5094, file: !3, line: 2007, type: !2007)
!5107 = !DILocation(line: 0, scope: !5094)
!5108 = !DILocation(line: 2009, column: 3, scope: !5094)
!5109 = !DILocation(line: 2010, column: 3, scope: !5094)
!5110 = !DILocation(line: 2012, column: 15, scope: !5094)
!5111 = !DILocation(line: 2013, column: 15, scope: !5094)
!5112 = !DILocation(line: 2019, column: 13, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 2019, column: 7)
!5114 = !DILocation(line: 2019, column: 16, scope: !5113)
!5115 = !DILocation(line: 2019, column: 7, scope: !5094)
!5116 = !DILocation(line: 2022, column: 12, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5118, file: !3, line: 2022, column: 11)
!5118 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2020, column: 5)
!5119 = !DILocation(line: 2022, column: 34, scope: !5117)
!5120 = !DILocation(line: 2023, column: 13, scope: !5117)
!5121 = !DILocation(line: 2023, column: 16, scope: !5117)
!5122 = !DILocation(line: 2023, column: 54, scope: !5117)
!5123 = !DILocation(line: 2024, column: 4, scope: !5117)
!5124 = !DILocation(line: 2024, column: 8, scope: !5117)
!5125 = !DILocation(line: 2024, column: 30, scope: !5117)
!5126 = !DILocation(line: 2025, column: 8, scope: !5117)
!5127 = !DILocation(line: 2025, column: 11, scope: !5117)
!5128 = !DILocation(line: 2025, column: 49, scope: !5117)
!5129 = !DILocation(line: 2022, column: 11, scope: !5118)
!5130 = !DILocation(line: 2027, column: 13, scope: !5118)
!5131 = !DILocation(line: 2029, column: 5, scope: !5118)
!5132 = !DILocation(line: 2033, column: 12, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 2033, column: 11)
!5134 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2031, column: 5)
!5135 = !DILocation(line: 2033, column: 34, scope: !5133)
!5136 = !DILocation(line: 2034, column: 13, scope: !5133)
!5137 = !DILocation(line: 2034, column: 16, scope: !5133)
!5138 = !DILocation(line: 2034, column: 55, scope: !5133)
!5139 = !DILocation(line: 2035, column: 4, scope: !5133)
!5140 = !DILocation(line: 2035, column: 8, scope: !5133)
!5141 = !DILocation(line: 2035, column: 30, scope: !5133)
!5142 = !DILocation(line: 2036, column: 8, scope: !5133)
!5143 = !DILocation(line: 2036, column: 11, scope: !5133)
!5144 = !DILocation(line: 2036, column: 49, scope: !5133)
!5145 = !DILocation(line: 2033, column: 11, scope: !5134)
!5146 = !DILocation(line: 2041, column: 11, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 2041, column: 11)
!5148 = !DILocation(line: 2041, column: 33, scope: !5147)
!5149 = !DILocation(line: 2042, column: 13, scope: !5147)
!5150 = !DILocation(line: 2042, column: 16, scope: !5147)
!5151 = !DILocation(line: 2042, column: 54, scope: !5147)
!5152 = !DILocation(line: 2041, column: 11, scope: !5134)
!5153 = !DILocation(line: 2044, column: 13, scope: !5134)
!5154 = !DILocation(line: 2048, column: 11, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 2048, column: 11)
!5156 = !DILocation(line: 2048, column: 33, scope: !5155)
!5157 = !DILocation(line: 2049, column: 4, scope: !5155)
!5158 = !DILocation(line: 2049, column: 7, scope: !5155)
!5159 = !DILocation(line: 2049, column: 46, scope: !5155)
!5160 = !DILocation(line: 2048, column: 11, scope: !5134)
!5161 = !DILocation(line: 2051, column: 14, scope: !5134)
!5162 = !DILocation(line: 0, scope: !5113)
!5163 = !DILocation(line: 2056, column: 28, scope: !5094)
!5164 = !DILocation(line: 2056, column: 7, scope: !5094)
!5165 = !DILocation(line: 2057, column: 32, scope: !5094)
!5166 = !DILocation(line: 2057, column: 49, scope: !5094)
!5167 = !DILocation(line: 2058, column: 11, scope: !5094)
!5168 = !DILocation(line: 2057, column: 12, scope: !5094)
!5169 = !DILocation(line: 2057, column: 6, scope: !5094)
!5170 = !DILocation(line: 2057, column: 10, scope: !5094)
!5171 = !DILocation(line: 2059, column: 33, scope: !5094)
!5172 = !DILocation(line: 2059, column: 51, scope: !5094)
!5173 = !DILocation(line: 2060, column: 5, scope: !5094)
!5174 = !DILocation(line: 2059, column: 13, scope: !5094)
!5175 = !DILocation(line: 2059, column: 6, scope: !5094)
!5176 = !DILocation(line: 2059, column: 11, scope: !5094)
!5177 = !DILocation(line: 2061, column: 6, scope: !5094)
!5178 = !DILocation(line: 2061, column: 17, scope: !5094)
!5179 = !DILocation(line: 2062, column: 18, scope: !5094)
!5180 = !DILocation(line: 2062, column: 23, scope: !5094)
!5181 = !DILocation(line: 2062, column: 6, scope: !5094)
!5182 = !DILocation(line: 2062, column: 13, scope: !5094)
!5183 = !DILocation(line: 2063, column: 6, scope: !5094)
!5184 = !DILocation(line: 2063, column: 12, scope: !5094)
!5185 = !DILocation(line: 2064, column: 3, scope: !5094)
!5186 = !DILocation(line: 2065, column: 1, scope: !5094)
!5187 = !DILocation(line: 2100, column: 8, scope: !2050)
!5188 = !DILocation(line: 2100, column: 7, scope: !2044)
!5189 = !DILocation(line: 2109, column: 10, scope: !2044)
!5190 = !DILocation(line: 2102, column: 30, scope: !2049)
!5191 = !DILocation(line: 2102, column: 17, scope: !2049)
!5192 = !DILocation(line: 0, scope: !2049)
!5193 = !DILocation(line: 2103, column: 28, scope: !2049)
!5194 = !DILocation(line: 2104, column: 13, scope: !2049)
!5195 = !DILocation(line: 2103, column: 18, scope: !2049)
!5196 = !DILocation(line: 2105, column: 20, scope: !2049)
!5197 = !DILocation(line: 2105, column: 15, scope: !2049)
!5198 = !DILocation(line: 2105, column: 13, scope: !2049)
!5199 = !DILocation(line: 2106, column: 12, scope: !2049)
!5200 = !DILocation(line: 2107, column: 5, scope: !2049)
!5201 = !DILocation(line: 2109, column: 3, scope: !2044)
!5202 = distinct !DISubprogram(name: "emit_case_bit_tests", scope: !3, file: !3, line: 2145, type: !5203, scopeLine: 2147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5206)
!5203 = !DISubroutineType(types: !5204)
!5204 = !{null, !636, !636, !636, !636, !5205, !810}
!5205 = !DIDerivedType(tag: DW_TAG_typedef, name: "case_node_ptr", file: !3, line: 96, baseType: !2007)
!5206 = !{!5207, !5208, !5209, !5210, !5211, !5212, !5213, !5215, !5216, !5217, !5218, !5219, !5220, !5221, !5222, !5223, !5224}
!5207 = !DILocalVariable(name: "index_type", arg: 1, scope: !5202, file: !3, line: 2145, type: !636)
!5208 = !DILocalVariable(name: "index_expr", arg: 2, scope: !5202, file: !3, line: 2145, type: !636)
!5209 = !DILocalVariable(name: "minval", arg: 3, scope: !5202, file: !3, line: 2145, type: !636)
!5210 = !DILocalVariable(name: "range", arg: 4, scope: !5202, file: !3, line: 2146, type: !636)
!5211 = !DILocalVariable(name: "nodes", arg: 5, scope: !5202, file: !3, line: 2146, type: !5205)
!5212 = !DILocalVariable(name: "default_label", arg: 6, scope: !5202, file: !3, line: 2146, type: !810)
!5213 = !DILocalVariable(name: "test", scope: !5202, file: !3, line: 2148, type: !5214)
!5214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 768, elements: !709)
!5215 = !DILocalVariable(name: "mode", scope: !5202, file: !3, line: 2149, type: !5)
!5216 = !DILocalVariable(name: "expr", scope: !5202, file: !3, line: 2150, type: !810)
!5217 = !DILocalVariable(name: "index", scope: !5202, file: !3, line: 2150, type: !810)
!5218 = !DILocalVariable(name: "label", scope: !5202, file: !3, line: 2150, type: !810)
!5219 = !DILocalVariable(name: "i", scope: !5202, file: !3, line: 2151, type: !7)
!5220 = !DILocalVariable(name: "j", scope: !5202, file: !3, line: 2151, type: !7)
!5221 = !DILocalVariable(name: "lo", scope: !5202, file: !3, line: 2151, type: !7)
!5222 = !DILocalVariable(name: "hi", scope: !5202, file: !3, line: 2151, type: !7)
!5223 = !DILocalVariable(name: "n", scope: !5202, file: !3, line: 2152, type: !2007)
!5224 = !DILocalVariable(name: "count", scope: !5202, file: !3, line: 2153, type: !7)
!5225 = !DILocation(line: 0, scope: !5202)
!5226 = !DILocation(line: 2148, column: 3, scope: !5202)
!5227 = !DILocation(line: 2148, column: 24, scope: !5202)
!5228 = !DILocation(line: 2156, column: 8, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 2156, column: 3)
!5230 = !DILocation(line: 0, scope: !5229)
!5231 = !DILocation(line: 2156, column: 3, scope: !5229)
!5232 = !DILocation(line: 2158, column: 29, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 2157, column: 5)
!5234 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 2156, column: 3)
!5235 = !DILocation(line: 2158, column: 15, scope: !5233)
!5236 = !DILocation(line: 2159, column: 12, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 2159, column: 7)
!5238 = !DILocation(line: 0, scope: !5237)
!5239 = !DILocation(line: 2159, column: 21, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 2159, column: 7)
!5241 = !DILocation(line: 2159, column: 7, scope: !5237)
!5242 = !DILocation(line: 2160, column: 15, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 2160, column: 6)
!5244 = !DILocation(line: 2160, column: 23, scope: !5243)
!5245 = !DILocation(line: 2160, column: 12, scope: !5243)
!5246 = !DILocation(line: 2160, column: 6, scope: !5240)
!5247 = !DILocation(line: 2159, column: 31, scope: !5240)
!5248 = !DILocation(line: 2159, column: 7, scope: !5240)
!5249 = distinct !{!5249, !5241, !5250}
!5250 = !DILocation(line: 2161, column: 4, scope: !5237)
!5251 = !DILocation(line: 2163, column: 13, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 2163, column: 11)
!5253 = !DILocation(line: 2163, column: 11, scope: !5233)
!5254 = !DILocation(line: 2165, column: 4, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 2164, column: 2)
!5256 = !DILocation(line: 2166, column: 4, scope: !5255)
!5257 = !DILocation(line: 2166, column: 12, scope: !5255)
!5258 = !DILocation(line: 2166, column: 15, scope: !5255)
!5259 = !DILocation(line: 2167, column: 12, scope: !5255)
!5260 = !DILocation(line: 2167, column: 15, scope: !5255)
!5261 = !DILocation(line: 2168, column: 12, scope: !5255)
!5262 = !DILocation(line: 2168, column: 18, scope: !5255)
!5263 = !DILocation(line: 2169, column: 12, scope: !5255)
!5264 = !DILocation(line: 2169, column: 17, scope: !5255)
!5265 = !DILocation(line: 2170, column: 9, scope: !5255)
!5266 = !DILocation(line: 2171, column: 2, scope: !5255)
!5267 = !DILocation(line: 2173, column: 9, scope: !5252)
!5268 = !DILocation(line: 2173, column: 17, scope: !5252)
!5269 = !DILocation(line: 2173, column: 21, scope: !5252)
!5270 = !DILocation(line: 0, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5272, file: !3, line: 2180, column: 13)
!5272 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 2179, column: 7)
!5273 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 2179, column: 7)
!5274 = !DILocation(line: 2175, column: 26, scope: !5233)
!5275 = !DILocation(line: 2175, column: 12, scope: !5233)
!5276 = !DILocation(line: 2177, column: 26, scope: !5233)
!5277 = !DILocation(line: 2177, column: 12, scope: !5233)
!5278 = !DILocation(line: 2179, column: 12, scope: !5273)
!5279 = !DILocation(line: 0, scope: !5273)
!5280 = !DILocation(line: 2179, column: 22, scope: !5272)
!5281 = !DILocation(line: 2179, column: 7, scope: !5273)
!5282 = !DILocation(line: 2180, column: 15, scope: !5271)
!5283 = !DILocation(line: 2180, column: 13, scope: !5272)
!5284 = !DILocation(line: 2181, column: 42, scope: !5271)
!5285 = !DILocation(line: 2181, column: 36, scope: !5271)
!5286 = !DILocation(line: 2181, column: 15, scope: !5271)
!5287 = !DILocation(line: 2181, column: 4, scope: !5271)
!5288 = !DILocation(line: 2183, column: 36, scope: !5271)
!5289 = !DILocation(line: 2183, column: 15, scope: !5271)
!5290 = !DILocation(line: 2179, column: 30, scope: !5272)
!5291 = !DILocation(line: 2179, column: 7, scope: !5272)
!5292 = distinct !{!5292, !5281, !5293}
!5293 = !DILocation(line: 2183, column: 39, scope: !5273)
!5294 = !DILocation(line: 2156, column: 29, scope: !5234)
!5295 = !DILocation(line: 2156, column: 3, scope: !5234)
!5296 = distinct !{!5296, !5231, !5297}
!5297 = !DILocation(line: 2184, column: 5, scope: !5229)
!5298 = !DILocation(line: 2187, column: 21, scope: !5202)
!5299 = !DILocation(line: 2187, column: 3, scope: !5202)
!5300 = !DILocation(line: 2192, column: 16, scope: !5202)
!5301 = !DILocation(line: 2195, column: 11, scope: !5202)
!5302 = !DILocation(line: 2196, column: 3, scope: !5202)
!5303 = !DILocation(line: 2198, column: 10, scope: !5202)
!5304 = !DILocation(line: 2199, column: 10, scope: !5202)
!5305 = !DILocation(line: 2200, column: 7, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 2200, column: 7)
!5307 = !DILocation(line: 2200, column: 7, scope: !5202)
!5308 = !DILocation(line: 2201, column: 5, scope: !5306)
!5309 = !DILocation(line: 2204, column: 28, scope: !5202)
!5310 = !DILocation(line: 2204, column: 11, scope: !5202)
!5311 = !DILocation(line: 2205, column: 25, scope: !5202)
!5312 = !DILocation(line: 2205, column: 48, scope: !5202)
!5313 = !DILocation(line: 2205, column: 11, scope: !5202)
!5314 = !DILocation(line: 2208, column: 17, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 2208, column: 3)
!5316 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 2208, column: 3)
!5317 = !DILocation(line: 2208, column: 8, scope: !5316)
!5318 = !DILocation(line: 0, scope: !5316)
!5319 = !DILocation(line: 2208, column: 3, scope: !5316)
!5320 = !DILocation(line: 2210, column: 42, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2209, column: 5)
!5322 = !DILocation(line: 2210, column: 54, scope: !5321)
!5323 = !DILocation(line: 2210, column: 58, scope: !5321)
!5324 = !DILocation(line: 2210, column: 14, scope: !5321)
!5325 = !DILocation(line: 2211, column: 28, scope: !5321)
!5326 = !DILocation(line: 2211, column: 14, scope: !5321)
!5327 = !DILocation(line: 2213, column: 38, scope: !5321)
!5328 = !DILocation(line: 2214, column: 11, scope: !5321)
!5329 = !DILocation(line: 2214, column: 33, scope: !5321)
!5330 = !DILocation(line: 2213, column: 7, scope: !5321)
!5331 = !DILocation(line: 2208, column: 27, scope: !5315)
!5332 = !DILocation(line: 2208, column: 3, scope: !5315)
!5333 = distinct !{!5333, !5319, !5334}
!5334 = !DILocation(line: 2215, column: 5, scope: !5316)
!5335 = !DILocation(line: 2217, column: 7, scope: !5202)
!5336 = !DILocation(line: 2218, column: 5, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 2217, column: 7)
!5338 = !DILocation(line: 2219, column: 1, scope: !5202)
!5339 = distinct !DISubprogram(name: "estimate_case_costs", scope: !3, file: !3, line: 2569, type: !5340, scopeLine: 2570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5342)
!5340 = !DISubroutineType(types: !5341)
!5341 = !{!627, !5205}
!5342 = !{!5343, !5344, !5345, !5346, !5347}
!5343 = !DILocalVariable(name: "node", arg: 1, scope: !5339, file: !3, line: 2569, type: !5205)
!5344 = !DILocalVariable(name: "min_ascii", scope: !5339, file: !3, line: 2571, type: !636)
!5345 = !DILocalVariable(name: "max_ascii", scope: !5339, file: !3, line: 2572, type: !636)
!5346 = !DILocalVariable(name: "n", scope: !5339, file: !3, line: 2573, type: !5205)
!5347 = !DILocalVariable(name: "i", scope: !5339, file: !3, line: 2574, type: !627)
!5348 = !DILocation(line: 0, scope: !5339)
!5349 = !DILocation(line: 2571, column: 20, scope: !5339)
!5350 = !DILocation(line: 2572, column: 35, scope: !5339)
!5351 = !DILocation(line: 2572, column: 20, scope: !5339)
!5352 = !DILocation(line: 2579, column: 9, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2579, column: 7)
!5354 = !DILocation(line: 2579, column: 7, scope: !5339)
!5355 = !DILocation(line: 2581, column: 30, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 2580, column: 5)
!5357 = !DILocation(line: 2583, column: 12, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 2583, column: 7)
!5359 = !DILocation(line: 0, scope: !5358)
!5360 = !DILocation(line: 2583, column: 21, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 2583, column: 7)
!5362 = !DILocation(line: 2583, column: 7, scope: !5358)
!5363 = !DILocation(line: 2585, column: 8, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 2585, column: 8)
!5365 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 2584, column: 2)
!5366 = !DILocation(line: 2585, column: 8, scope: !5365)
!5367 = !DILocation(line: 2586, column: 6, scope: !5364)
!5368 = !DILocation(line: 2586, column: 21, scope: !5364)
!5369 = !DILocation(line: 2587, column: 13, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 2587, column: 13)
!5371 = !DILocation(line: 2587, column: 13, scope: !5364)
!5372 = !DILocation(line: 2588, column: 6, scope: !5370)
!5373 = !DILocation(line: 2588, column: 21, scope: !5370)
!5374 = !DILocation(line: 2589, column: 13, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 2589, column: 13)
!5376 = !DILocation(line: 2589, column: 13, scope: !5370)
!5377 = !DILocation(line: 2583, column: 29, scope: !5361)
!5378 = !DILocation(line: 2590, column: 6, scope: !5375)
!5379 = !DILocation(line: 2590, column: 21, scope: !5375)
!5380 = !DILocation(line: 2583, column: 7, scope: !5361)
!5381 = distinct !{!5381, !5362, !5382}
!5382 = !DILocation(line: 2591, column: 2, scope: !5358)
!5383 = !DILocation(line: 2593, column: 24, scope: !5356)
!5384 = !DILocation(line: 2594, column: 25, scope: !5356)
!5385 = !DILocation(line: 2595, column: 25, scope: !5356)
!5386 = !DILocation(line: 2596, column: 25, scope: !5356)
!5387 = !DILocation(line: 2597, column: 25, scope: !5356)
!5388 = !DILocation(line: 2598, column: 25, scope: !5356)
!5389 = !DILocation(line: 2599, column: 25, scope: !5356)
!5390 = !DILocation(line: 2600, column: 5, scope: !5356)
!5391 = !DILocation(line: 2608, column: 8, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2608, column: 3)
!5393 = !DILocation(line: 0, scope: !5392)
!5394 = !DILocation(line: 2608, column: 3, scope: !5392)
!5395 = !DILocation(line: 2610, column: 31, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 2610, column: 11)
!5397 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 2609, column: 5)
!5398 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 2608, column: 3)
!5399 = !DILocation(line: 2610, column: 11, scope: !5396)
!5400 = !DILocation(line: 2611, column: 4, scope: !5396)
!5401 = !DILocation(line: 2611, column: 38, scope: !5396)
!5402 = !DILocation(line: 2611, column: 7, scope: !5396)
!5403 = !DILocation(line: 2610, column: 11, scope: !5397)
!5404 = !DILocation(line: 2614, column: 32, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 2614, column: 7)
!5406 = !DILocation(line: 0, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 2614, column: 7)
!5408 = !DILocation(line: 2614, column: 12, scope: !5405)
!5409 = !DILocation(line: 0, scope: !5405)
!5410 = !DILocation(line: 2615, column: 7, scope: !5407)
!5411 = !DILocation(line: 2614, column: 7, scope: !5405)
!5412 = !DILocation(line: 2616, column: 6, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 2616, column: 6)
!5414 = !DILocation(line: 2616, column: 21, scope: !5413)
!5415 = !DILocation(line: 2616, column: 6, scope: !5407)
!5416 = !DILocation(line: 2614, column: 7, scope: !5407)
!5417 = distinct !{!5417, !5411, !5418}
!5418 = !DILocation(line: 2617, column: 11, scope: !5405)
!5419 = !DILocation(line: 2608, column: 28, scope: !5398)
!5420 = !DILocation(line: 2608, column: 3, scope: !5398)
!5421 = distinct !{!5421, !5394, !5422}
!5422 = !DILocation(line: 2618, column: 5, scope: !5392)
!5423 = !DILocation(line: 2623, column: 1, scope: !5339)
!5424 = distinct !DISubprogram(name: "balance_case_nodes", scope: !3, file: !3, line: 2636, type: !5425, scopeLine: 2637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5428)
!5425 = !DISubroutineType(types: !5426)
!5426 = !{null, !5427, !5205}
!5427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5205, size: 64)
!5428 = !{!5429, !5430, !5431, !5432, !5435, !5436, !5437, !5438, !5439}
!5429 = !DILocalVariable(name: "head", arg: 1, scope: !5424, file: !3, line: 2636, type: !5427)
!5430 = !DILocalVariable(name: "parent", arg: 2, scope: !5424, file: !3, line: 2636, type: !5205)
!5431 = !DILocalVariable(name: "np", scope: !5424, file: !3, line: 2638, type: !5205)
!5432 = !DILocalVariable(name: "cost", scope: !5433, file: !3, line: 2643, type: !627)
!5433 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 2642, column: 5)
!5434 = distinct !DILexicalBlock(scope: !5424, file: !3, line: 2641, column: 7)
!5435 = !DILocalVariable(name: "i", scope: !5433, file: !3, line: 2644, type: !627)
!5436 = !DILocalVariable(name: "ranges", scope: !5433, file: !3, line: 2645, type: !627)
!5437 = !DILocalVariable(name: "npp", scope: !5433, file: !3, line: 2646, type: !5427)
!5438 = !DILocalVariable(name: "left", scope: !5433, file: !3, line: 2647, type: !5205)
!5439 = !DILocalVariable(name: "n_moved", scope: !5440, file: !3, line: 2676, type: !627)
!5440 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 2673, column: 6)
!5441 = distinct !DILexicalBlock(scope: !5442, file: !3, line: 2672, column: 8)
!5442 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 2668, column: 2)
!5443 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 2667, column: 11)
!5444 = !DILocation(line: 2728, column: 4, scope: !5442)
!5445 = !DILocation(line: 0, scope: !5424)
!5446 = !DILocation(line: 2640, column: 8, scope: !5424)
!5447 = !DILocation(line: 2641, column: 7, scope: !5434)
!5448 = !DILocation(line: 2641, column: 7, scope: !5424)
!5449 = !DILocation(line: 2651, column: 7, scope: !5433)
!5450 = !DILocation(line: 2645, column: 11, scope: !5433)
!5451 = !DILocation(line: 0, scope: !5433)
!5452 = !DILocation(line: 2653, column: 33, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 2653, column: 8)
!5454 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 2652, column: 2)
!5455 = !DILocation(line: 2653, column: 42, scope: !5453)
!5456 = !DILocation(line: 2653, column: 9, scope: !5453)
!5457 = !DILocation(line: 2653, column: 8, scope: !5454)
!5458 = !DILocation(line: 2660, column: 8, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 2660, column: 8)
!5460 = !DILocation(line: 2655, column: 14, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 2654, column: 6)
!5462 = !DILocation(line: 2656, column: 12, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 2656, column: 12)
!5464 = !DILocation(line: 2656, column: 12, scope: !5461)
!5465 = !DILocation(line: 2657, column: 11, scope: !5463)
!5466 = !DILocation(line: 2657, column: 8, scope: !5463)
!5467 = !DILocation(line: 2657, column: 3, scope: !5463)
!5468 = !DILocation(line: 2660, column: 8, scope: !5454)
!5469 = !DILocation(line: 2661, column: 14, scope: !5459)
!5470 = !DILocation(line: 2661, column: 11, scope: !5459)
!5471 = !DILocation(line: 2661, column: 6, scope: !5459)
!5472 = !DILocation(line: 2663, column: 5, scope: !5454)
!5473 = !DILocation(line: 2664, column: 13, scope: !5454)
!5474 = distinct !{!5474, !5449, !5475}
!5475 = !DILocation(line: 2665, column: 2, scope: !5433)
!5476 = !DILocation(line: 2667, column: 13, scope: !5443)
!5477 = !DILocation(line: 0, scope: !5443)
!5478 = !DILocation(line: 2667, column: 11, scope: !5433)
!5479 = !DILocation(line: 2672, column: 8, scope: !5441)
!5480 = !DILocation(line: 2672, column: 8, scope: !5442)
!5481 = !DILocation(line: 0, scope: !5440)
!5482 = !DILocation(line: 2677, column: 18, scope: !5440)
!5483 = !DILocation(line: 2677, column: 23, scope: !5440)
!5484 = !DILocation(line: 2678, column: 8, scope: !5440)
!5485 = !DILocation(line: 2681, column: 31, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5487, file: !3, line: 2681, column: 9)
!5487 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 2679, column: 3)
!5488 = !DILocation(line: 0, scope: !5442)
!5489 = !DILocation(line: 2681, column: 38, scope: !5486)
!5490 = !DILocation(line: 2681, column: 51, scope: !5486)
!5491 = !DILocation(line: 2681, column: 10, scope: !5486)
!5492 = !DILocation(line: 2681, column: 9, scope: !5487)
!5493 = !DILocation(line: 2683, column: 10, scope: !5487)
!5494 = !DILocation(line: 2682, column: 12, scope: !5486)
!5495 = !DILocation(line: 2682, column: 9, scope: !5486)
!5496 = !DILocation(line: 2682, column: 7, scope: !5486)
!5497 = !DILocation(line: 2683, column: 7, scope: !5487)
!5498 = !DILocation(line: 2684, column: 11, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5487, file: !3, line: 2684, column: 9)
!5500 = !DILocation(line: 2684, column: 9, scope: !5487)
!5501 = !DILocation(line: 2686, column: 20, scope: !5487)
!5502 = !DILocation(line: 2687, column: 13, scope: !5487)
!5503 = distinct !{!5503, !5484, !5504}
!5504 = !DILocation(line: 2688, column: 3, scope: !5440)
!5505 = !DILocation(line: 2689, column: 20, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 2689, column: 12)
!5507 = !DILocation(line: 2689, column: 12, scope: !5440)
!5508 = !DILocation(line: 2693, column: 10, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 2690, column: 3)
!5510 = !DILocation(line: 2694, column: 9, scope: !5509)
!5511 = !DILocation(line: 2694, column: 16, scope: !5509)
!5512 = !DILocation(line: 2695, column: 30, scope: !5509)
!5513 = !DILocation(line: 2695, column: 5, scope: !5509)
!5514 = !DILocation(line: 2696, column: 5, scope: !5509)
!5515 = !DILocation(line: 0, scope: !5509)
!5516 = !DILocation(line: 2696, column: 16, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 2696, column: 5)
!5518 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 2696, column: 5)
!5519 = !DILocation(line: 2696, column: 5, scope: !5518)
!5520 = !DILocation(line: 2697, column: 18, scope: !5517)
!5521 = !DILocation(line: 2697, column: 25, scope: !5517)
!5522 = !DILocation(line: 2696, column: 32, scope: !5517)
!5523 = !DILocation(line: 2696, column: 5, scope: !5517)
!5524 = distinct !{!5524, !5519, !5525}
!5525 = !DILocation(line: 2697, column: 27, scope: !5518)
!5526 = !DILocation(line: 2702, column: 15, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 2702, column: 13)
!5528 = !DILocation(line: 2702, column: 13, scope: !5441)
!5529 = !DILocation(line: 2703, column: 21, scope: !5527)
!5530 = !DILocation(line: 2703, column: 6, scope: !5527)
!5531 = !DILocation(line: 2709, column: 15, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 2705, column: 6)
!5533 = !DILocation(line: 2709, column: 24, scope: !5532)
!5534 = !DILocation(line: 2709, column: 29, scope: !5532)
!5535 = !DILocation(line: 2710, column: 8, scope: !5532)
!5536 = !DILocation(line: 2713, column: 31, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 2713, column: 9)
!5538 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 2711, column: 3)
!5539 = !DILocation(line: 0, scope: !5532)
!5540 = !DILocation(line: 2713, column: 38, scope: !5537)
!5541 = !DILocation(line: 2713, column: 51, scope: !5537)
!5542 = !DILocation(line: 2713, column: 10, scope: !5537)
!5543 = !DILocation(line: 2713, column: 9, scope: !5538)
!5544 = !DILocation(line: 2715, column: 6, scope: !5538)
!5545 = !DILocation(line: 2716, column: 11, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 2716, column: 9)
!5547 = !DILocation(line: 2716, column: 9, scope: !5538)
!5548 = !DILocation(line: 2718, column: 13, scope: !5538)
!5549 = !DILocation(line: 2718, column: 20, scope: !5538)
!5550 = distinct !{!5550, !5535, !5551}
!5551 = !DILocation(line: 2719, column: 3, scope: !5532)
!5552 = !DILocation(line: 2721, column: 17, scope: !5442)
!5553 = !DILocation(line: 2721, column: 10, scope: !5442)
!5554 = !DILocation(line: 2722, column: 9, scope: !5442)
!5555 = !DILocation(line: 2723, column: 8, scope: !5442)
!5556 = !DILocation(line: 2723, column: 15, scope: !5442)
!5557 = !DILocation(line: 2724, column: 8, scope: !5442)
!5558 = !DILocation(line: 2724, column: 13, scope: !5442)
!5559 = !DILocation(line: 2727, column: 4, scope: !5442)
!5560 = !DILocation(line: 2728, column: 29, scope: !5442)
!5561 = !DILocation(line: 2735, column: 8, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 2731, column: 2)
!5563 = !DILocation(line: 2735, column: 15, scope: !5562)
!5564 = !DILocation(line: 2736, column: 4, scope: !5562)
!5565 = !DILocation(line: 0, scope: !5562)
!5566 = !DILocation(line: 2736, column: 15, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 2736, column: 4)
!5568 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 2736, column: 4)
!5569 = !DILocation(line: 2736, column: 4, scope: !5568)
!5570 = !DILocation(line: 2737, column: 17, scope: !5567)
!5571 = !DILocation(line: 2737, column: 24, scope: !5567)
!5572 = !DILocation(line: 2736, column: 31, scope: !5567)
!5573 = !DILocation(line: 2736, column: 4, scope: !5567)
!5574 = distinct !{!5574, !5569, !5575}
!5575 = !DILocation(line: 2737, column: 26, scope: !5568)
!5576 = !DILocation(line: 2740, column: 1, scope: !5424)
!5577 = distinct !DISubprogram(name: "emit_case_nodes", scope: !3, file: !3, line: 2877, type: !5578, scopeLine: 2879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5580)
!5578 = !DISubroutineType(types: !5579)
!5579 = !{null, !810, !5205, !810, !636}
!5580 = !{!5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5598, !5602, !5606, !5607, !5612, !5613, !5614, !5615, !5616}
!5581 = !DILocalVariable(name: "index", arg: 1, scope: !5577, file: !3, line: 2877, type: !810)
!5582 = !DILocalVariable(name: "node", arg: 2, scope: !5577, file: !3, line: 2877, type: !5205)
!5583 = !DILocalVariable(name: "default_label", arg: 3, scope: !5577, file: !3, line: 2877, type: !810)
!5584 = !DILocalVariable(name: "index_type", arg: 4, scope: !5577, file: !3, line: 2878, type: !636)
!5585 = !DILocalVariable(name: "unsignedp", scope: !5577, file: !3, line: 2881, type: !627)
!5586 = !DILocalVariable(name: "mode", scope: !5577, file: !3, line: 2882, type: !5)
!5587 = !DILocalVariable(name: "imode", scope: !5577, file: !3, line: 2883, type: !5)
!5588 = !DILocalVariable(name: "test_label", scope: !5589, file: !3, line: 2974, type: !636)
!5589 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 2970, column: 6)
!5590 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 2940, column: 13)
!5591 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 2925, column: 13)
!5592 = distinct !DILexicalBlock(scope: !5593, file: !3, line: 2913, column: 8)
!5593 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 2906, column: 2)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 2905, column: 11)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 2895, column: 5)
!5596 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 2894, column: 12)
!5597 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 2891, column: 7)
!5598 = !DILocalVariable(name: "test_label", scope: !5599, file: !3, line: 3082, type: !636)
!5599 = distinct !DILexicalBlock(scope: !5600, file: !3, line: 3076, column: 2)
!5600 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 3075, column: 11)
!5601 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 3070, column: 5)
!5602 = !DILocalVariable(name: "high_bound", scope: !5603, file: !3, line: 3198, type: !627)
!5603 = distinct !DILexicalBlock(scope: !5604, file: !3, line: 3194, column: 2)
!5604 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 3165, column: 16)
!5605 = distinct !DILexicalBlock(scope: !5600, file: !3, line: 3137, column: 16)
!5606 = !DILocalVariable(name: "low_bound", scope: !5603, file: !3, line: 3199, type: !627)
!5607 = !DILocalVariable(name: "type", scope: !5608, file: !3, line: 3225, type: !636)
!5608 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 3223, column: 6)
!5609 = distinct !DILexicalBlock(scope: !5610, file: !3, line: 3222, column: 13)
!5610 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 3212, column: 13)
!5611 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 3201, column: 8)
!5612 = !DILocalVariable(name: "low", scope: !5608, file: !3, line: 3226, type: !636)
!5613 = !DILocalVariable(name: "high", scope: !5608, file: !3, line: 3227, type: !636)
!5614 = !DILocalVariable(name: "low_rtx", scope: !5608, file: !3, line: 3228, type: !810)
!5615 = !DILocalVariable(name: "new_index", scope: !5608, file: !3, line: 3228, type: !810)
!5616 = !DILocalVariable(name: "new_bound", scope: !5608, file: !3, line: 3228, type: !810)
!5617 = !DILocation(line: 0, scope: !5577)
!5618 = !DILocation(line: 0, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 2992, column: 12)
!5620 = !DILocation(line: 3133, column: 8, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5622, file: !3, line: 3126, column: 6)
!5622 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 3125, column: 8)
!5623 = !DILocation(line: 2881, column: 19, scope: !5577)
!5624 = !DILocation(line: 2882, column: 28, scope: !5577)
!5625 = !DILocation(line: 2883, column: 29, scope: !5577)
!5626 = !DILocation(line: 2886, column: 12, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 2886, column: 7)
!5628 = !DILocation(line: 2886, column: 7, scope: !5577)
!5629 = !DILocation(line: 2891, column: 7, scope: !5597)
!5630 = !DILocation(line: 2891, column: 7, scope: !5577)
!5631 = !DILocation(line: 2892, column: 33, scope: !5597)
!5632 = !DILocation(line: 2892, column: 16, scope: !5597)
!5633 = !DILocation(line: 2892, column: 5, scope: !5597)
!5634 = !DILocation(line: 2894, column: 38, scope: !5596)
!5635 = !DILocation(line: 2894, column: 49, scope: !5596)
!5636 = !DILocation(line: 2894, column: 12, scope: !5596)
!5637 = !DILocation(line: 2894, column: 12, scope: !5597)
!5638 = !DILocation(line: 2901, column: 33, scope: !5595)
!5639 = !DILocation(line: 2901, column: 12, scope: !5595)
!5640 = !DILocation(line: 2900, column: 4, scope: !5595)
!5641 = !DILocation(line: 2903, column: 21, scope: !5595)
!5642 = !DILocation(line: 2903, column: 4, scope: !5595)
!5643 = !DILocation(line: 2899, column: 7, scope: !5595)
!5644 = !DILocation(line: 2905, column: 17, scope: !5594)
!5645 = !DILocation(line: 2905, column: 23, scope: !5594)
!5646 = !DILocation(line: 2905, column: 28, scope: !5594)
!5647 = !DILocation(line: 2905, column: 37, scope: !5594)
!5648 = !DILocation(line: 2905, column: 42, scope: !5594)
!5649 = !DILocation(line: 2905, column: 11, scope: !5595)
!5650 = !DILocation(line: 2913, column: 8, scope: !5592)
!5651 = !DILocation(line: 2913, column: 8, scope: !5593)
!5652 = !DILocation(line: 2918, column: 27, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 2914, column: 6)
!5654 = !DILocation(line: 2918, column: 6, scope: !5653)
!5655 = !DILocation(line: 2916, column: 12, scope: !5653)
!5656 = !DILocation(line: 2921, column: 29, scope: !5653)
!5657 = !DILocation(line: 2921, column: 36, scope: !5653)
!5658 = !DILocation(line: 2921, column: 12, scope: !5653)
!5659 = !DILocation(line: 2915, column: 8, scope: !5653)
!5660 = !DILocation(line: 2922, column: 8, scope: !5653)
!5661 = !DILocation(line: 2925, column: 36, scope: !5591)
!5662 = !DILocation(line: 2925, column: 13, scope: !5591)
!5663 = !DILocation(line: 2925, column: 13, scope: !5592)
!5664 = !DILocation(line: 2930, column: 27, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 2926, column: 6)
!5666 = !DILocation(line: 2930, column: 6, scope: !5665)
!5667 = !DILocation(line: 2928, column: 12, scope: !5665)
!5668 = !DILocation(line: 2933, column: 29, scope: !5665)
!5669 = !DILocation(line: 2933, column: 35, scope: !5665)
!5670 = !DILocation(line: 2933, column: 12, scope: !5665)
!5671 = !DILocation(line: 2927, column: 8, scope: !5665)
!5672 = !DILocation(line: 2934, column: 8, scope: !5665)
!5673 = !DILocation(line: 2940, column: 39, scope: !5590)
!5674 = !DILocation(line: 2940, column: 46, scope: !5590)
!5675 = !DILocation(line: 2940, column: 64, scope: !5590)
!5676 = !DILocation(line: 2940, column: 13, scope: !5590)
!5677 = !DILocation(line: 2941, column: 6, scope: !5590)
!5678 = !DILocation(line: 2941, column: 15, scope: !5590)
!5679 = !DILocation(line: 2941, column: 22, scope: !5590)
!5680 = !DILocation(line: 2941, column: 27, scope: !5590)
!5681 = !DILocation(line: 2942, column: 6, scope: !5590)
!5682 = !DILocation(line: 2942, column: 22, scope: !5590)
!5683 = !DILocation(line: 2942, column: 28, scope: !5590)
!5684 = !DILocation(line: 2943, column: 6, scope: !5590)
!5685 = !DILocation(line: 2943, column: 35, scope: !5590)
!5686 = !DILocation(line: 2943, column: 41, scope: !5590)
!5687 = !DILocation(line: 2943, column: 58, scope: !5590)
!5688 = !DILocation(line: 2943, column: 9, scope: !5590)
!5689 = !DILocation(line: 2944, column: 6, scope: !5590)
!5690 = !DILocation(line: 2944, column: 15, scope: !5590)
!5691 = !DILocation(line: 2944, column: 21, scope: !5590)
!5692 = !DILocation(line: 2944, column: 26, scope: !5590)
!5693 = !DILocation(line: 2945, column: 6, scope: !5590)
!5694 = !DILocation(line: 2945, column: 21, scope: !5590)
!5695 = !DILocation(line: 2945, column: 27, scope: !5590)
!5696 = !DILocation(line: 2940, column: 13, scope: !5591)
!5697 = !DILocation(line: 2954, column: 34, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 2946, column: 6)
!5699 = !DILocation(line: 2954, column: 41, scope: !5698)
!5700 = !DILocation(line: 2954, column: 13, scope: !5698)
!5701 = !DILocation(line: 2953, column: 5, scope: !5698)
!5702 = !DILocation(line: 2956, column: 22, scope: !5698)
!5703 = !DILocation(line: 2956, column: 29, scope: !5698)
!5704 = !DILocation(line: 2956, column: 5, scope: !5698)
!5705 = !DILocation(line: 2952, column: 8, scope: !5698)
!5706 = !DILocation(line: 2963, column: 34, scope: !5698)
!5707 = !DILocation(line: 2963, column: 40, scope: !5698)
!5708 = !DILocation(line: 2963, column: 13, scope: !5698)
!5709 = !DILocation(line: 2962, column: 5, scope: !5698)
!5710 = !DILocation(line: 2965, column: 22, scope: !5698)
!5711 = !DILocation(line: 2965, column: 28, scope: !5698)
!5712 = !DILocation(line: 2965, column: 5, scope: !5698)
!5713 = !DILocation(line: 2961, column: 8, scope: !5698)
!5714 = !DILocation(line: 2967, column: 6, scope: !5698)
!5715 = !DILocation(line: 2975, column: 5, scope: !5589)
!5716 = !DILocation(line: 0, scope: !5589)
!5717 = !DILocation(line: 2982, column: 27, scope: !5589)
!5718 = !DILocation(line: 2982, column: 6, scope: !5589)
!5719 = !DILocation(line: 2980, column: 12, scope: !5589)
!5720 = !DILocation(line: 2985, column: 12, scope: !5589)
!5721 = !DILocation(line: 2979, column: 8, scope: !5589)
!5722 = !DILocation(line: 2989, column: 38, scope: !5589)
!5723 = !DILocation(line: 2989, column: 8, scope: !5589)
!5724 = !DILocation(line: 2992, column: 12, scope: !5589)
!5725 = !DILocation(line: 2993, column: 10, scope: !5619)
!5726 = !DILocation(line: 2996, column: 8, scope: !5589)
!5727 = !DILocation(line: 2997, column: 8, scope: !5589)
!5728 = !DILocation(line: 3001, column: 33, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 3001, column: 16)
!5730 = !DILocation(line: 3001, column: 42, scope: !5729)
!5731 = !DILocation(line: 3001, column: 47, scope: !5729)
!5732 = !DILocation(line: 3001, column: 16, scope: !5594)
!5733 = !DILocation(line: 3010, column: 21, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 3010, column: 8)
!5735 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 3002, column: 2)
!5736 = !DILocation(line: 3010, column: 8, scope: !5734)
!5737 = !DILocation(line: 3010, column: 27, scope: !5734)
!5738 = !DILocation(line: 3010, column: 43, scope: !5734)
!5739 = !DILocation(line: 3010, column: 30, scope: !5734)
!5740 = !DILocation(line: 3011, column: 8, scope: !5734)
!5741 = !DILocation(line: 3011, column: 45, scope: !5734)
!5742 = !DILocation(line: 3011, column: 63, scope: !5734)
!5743 = !DILocation(line: 3011, column: 12, scope: !5734)
!5744 = !DILocation(line: 3010, column: 8, scope: !5735)
!5745 = !DILocation(line: 3013, column: 13, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 3013, column: 12)
!5747 = distinct !DILexicalBlock(scope: !5734, file: !3, line: 3012, column: 6)
!5748 = !DILocation(line: 3013, column: 12, scope: !5747)
!5749 = !DILocation(line: 3018, column: 31, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 3014, column: 3)
!5751 = !DILocation(line: 3018, column: 10, scope: !5750)
!5752 = !DILocation(line: 3016, column: 9, scope: !5750)
!5753 = !DILocation(line: 3015, column: 5, scope: !5750)
!5754 = !DILocation(line: 3022, column: 3, scope: !5750)
!5755 = !DILocation(line: 3024, column: 8, scope: !5747)
!5756 = !DILocation(line: 3033, column: 32, scope: !5734)
!5757 = !DILocation(line: 3033, column: 39, scope: !5734)
!5758 = !DILocation(line: 3033, column: 11, scope: !5734)
!5759 = !DILocation(line: 3031, column: 10, scope: !5734)
!5760 = !DILocation(line: 3035, column: 27, scope: !5734)
!5761 = !DILocation(line: 3035, column: 34, scope: !5734)
!5762 = !DILocation(line: 3035, column: 10, scope: !5734)
!5763 = !DILocation(line: 3030, column: 6, scope: !5734)
!5764 = !DILocation(line: 3038, column: 33, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 3038, column: 16)
!5766 = !DILocation(line: 3038, column: 42, scope: !5765)
!5767 = !DILocation(line: 3038, column: 47, scope: !5765)
!5768 = !DILocation(line: 3038, column: 16, scope: !5729)
!5769 = !DILocation(line: 3041, column: 20, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 3041, column: 8)
!5771 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 3039, column: 2)
!5772 = !DILocation(line: 3041, column: 8, scope: !5770)
!5773 = !DILocation(line: 3041, column: 25, scope: !5770)
!5774 = !DILocation(line: 3041, column: 40, scope: !5770)
!5775 = !DILocation(line: 3041, column: 28, scope: !5770)
!5776 = !DILocation(line: 3042, column: 8, scope: !5770)
!5777 = !DILocation(line: 3042, column: 44, scope: !5770)
!5778 = !DILocation(line: 3042, column: 61, scope: !5770)
!5779 = !DILocation(line: 3042, column: 12, scope: !5770)
!5780 = !DILocation(line: 3041, column: 8, scope: !5771)
!5781 = !DILocation(line: 3044, column: 13, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 3044, column: 12)
!5783 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 3043, column: 6)
!5784 = !DILocation(line: 3044, column: 12, scope: !5783)
!5785 = !DILocation(line: 3049, column: 31, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 3045, column: 3)
!5787 = !DILocation(line: 3049, column: 10, scope: !5786)
!5788 = !DILocation(line: 3047, column: 9, scope: !5786)
!5789 = !DILocation(line: 3046, column: 5, scope: !5786)
!5790 = !DILocation(line: 3053, column: 3, scope: !5786)
!5791 = !DILocation(line: 3055, column: 8, scope: !5783)
!5792 = !DILocation(line: 3064, column: 32, scope: !5770)
!5793 = !DILocation(line: 3064, column: 38, scope: !5770)
!5794 = !DILocation(line: 3064, column: 11, scope: !5770)
!5795 = !DILocation(line: 3062, column: 10, scope: !5770)
!5796 = !DILocation(line: 3066, column: 27, scope: !5770)
!5797 = !DILocation(line: 3066, column: 33, scope: !5770)
!5798 = !DILocation(line: 3066, column: 10, scope: !5770)
!5799 = !DILocation(line: 3061, column: 6, scope: !5770)
!5800 = !DILocation(line: 3075, column: 17, scope: !5600)
!5801 = !DILocation(line: 3075, column: 23, scope: !5600)
!5802 = !DILocation(line: 3075, column: 28, scope: !5600)
!5803 = !DILocation(line: 3075, column: 37, scope: !5600)
!5804 = !DILocation(line: 3075, column: 42, scope: !5600)
!5805 = !DILocation(line: 3075, column: 11, scope: !5601)
!5806 = !DILocation(line: 0, scope: !5599)
!5807 = !DILocation(line: 3084, column: 8, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 3084, column: 8)
!5809 = !DILocation(line: 3084, column: 8, scope: !5599)
!5810 = !DILocation(line: 3090, column: 32, scope: !5808)
!5811 = !DILocation(line: 3090, column: 11, scope: !5808)
!5812 = !DILocation(line: 3088, column: 10, scope: !5808)
!5813 = !DILocation(line: 3093, column: 27, scope: !5808)
!5814 = !DILocation(line: 3093, column: 34, scope: !5808)
!5815 = !DILocation(line: 3093, column: 10, scope: !5808)
!5816 = !DILocation(line: 3087, column: 6, scope: !5808)
!5817 = !DILocation(line: 3099, column: 21, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 3095, column: 6)
!5819 = !DILocation(line: 3104, column: 27, scope: !5818)
!5820 = !DILocation(line: 3104, column: 6, scope: !5818)
!5821 = !DILocation(line: 3102, column: 12, scope: !5818)
!5822 = !DILocation(line: 3107, column: 12, scope: !5818)
!5823 = !DILocation(line: 3101, column: 8, scope: !5818)
!5824 = !DILocation(line: 3115, column: 30, scope: !5599)
!5825 = !DILocation(line: 3115, column: 9, scope: !5599)
!5826 = !DILocation(line: 3113, column: 8, scope: !5599)
!5827 = !DILocation(line: 3118, column: 25, scope: !5599)
!5828 = !DILocation(line: 3118, column: 8, scope: !5599)
!5829 = !DILocation(line: 3112, column: 4, scope: !5599)
!5830 = !DILocation(line: 3121, column: 34, scope: !5599)
!5831 = !DILocation(line: 3121, column: 4, scope: !5599)
!5832 = !DILocation(line: 3125, column: 8, scope: !5622)
!5833 = !DILocation(line: 3125, column: 8, scope: !5599)
!5834 = !DILocation(line: 3129, column: 12, scope: !5621)
!5835 = !DILocation(line: 3130, column: 3, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 3129, column: 12)
!5837 = !DILocation(line: 3132, column: 8, scope: !5621)
!5838 = !DILocation(line: 0, scope: !5596)
!5839 = !DILocation(line: 3137, column: 33, scope: !5605)
!5840 = !DILocation(line: 3137, column: 42, scope: !5605)
!5841 = !DILocation(line: 3137, column: 47, scope: !5605)
!5842 = !DILocation(line: 3137, column: 16, scope: !5600)
!5843 = !DILocation(line: 3141, column: 9, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 3141, column: 8)
!5845 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 3138, column: 2)
!5846 = !DILocation(line: 3141, column: 8, scope: !5845)
!5847 = !DILocation(line: 3146, column: 27, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 3142, column: 6)
!5849 = !DILocation(line: 3146, column: 6, scope: !5848)
!5850 = !DILocation(line: 3144, column: 12, scope: !5848)
!5851 = !DILocation(line: 3143, column: 8, scope: !5848)
!5852 = !DILocation(line: 3150, column: 6, scope: !5848)
!5853 = !DILocation(line: 3157, column: 30, scope: !5845)
!5854 = !DILocation(line: 3157, column: 9, scope: !5845)
!5855 = !DILocation(line: 3155, column: 8, scope: !5845)
!5856 = !DILocation(line: 3160, column: 25, scope: !5845)
!5857 = !DILocation(line: 3160, column: 8, scope: !5845)
!5858 = !DILocation(line: 3154, column: 4, scope: !5845)
!5859 = !DILocation(line: 3162, column: 4, scope: !5845)
!5860 = !DILocation(line: 3165, column: 33, scope: !5604)
!5861 = !DILocation(line: 3165, column: 42, scope: !5604)
!5862 = !DILocation(line: 3165, column: 47, scope: !5604)
!5863 = !DILocation(line: 3165, column: 16, scope: !5605)
!5864 = !DILocation(line: 3169, column: 9, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 3169, column: 8)
!5866 = distinct !DILexicalBlock(scope: !5604, file: !3, line: 3166, column: 2)
!5867 = !DILocation(line: 3169, column: 8, scope: !5866)
!5868 = !DILocation(line: 3174, column: 27, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 3170, column: 6)
!5870 = !DILocation(line: 3174, column: 6, scope: !5869)
!5871 = !DILocation(line: 3172, column: 12, scope: !5869)
!5872 = !DILocation(line: 3171, column: 8, scope: !5869)
!5873 = !DILocation(line: 3178, column: 6, scope: !5869)
!5874 = !DILocation(line: 3185, column: 30, scope: !5866)
!5875 = !DILocation(line: 3185, column: 9, scope: !5866)
!5876 = !DILocation(line: 3183, column: 8, scope: !5866)
!5877 = !DILocation(line: 3188, column: 25, scope: !5866)
!5878 = !DILocation(line: 3188, column: 8, scope: !5866)
!5879 = !DILocation(line: 3182, column: 4, scope: !5866)
!5880 = !DILocation(line: 3190, column: 4, scope: !5866)
!5881 = !DILocation(line: 3198, column: 21, scope: !5603)
!5882 = !DILocation(line: 0, scope: !5603)
!5883 = !DILocation(line: 3199, column: 20, scope: !5603)
!5884 = !DILocation(line: 3201, column: 9, scope: !5611)
!5885 = !DILocation(line: 3201, column: 23, scope: !5611)
!5886 = !DILocation(line: 3201, column: 20, scope: !5611)
!5887 = !DILocation(line: 3206, column: 27, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 3202, column: 6)
!5889 = !DILocation(line: 3206, column: 6, scope: !5888)
!5890 = !DILocation(line: 3204, column: 12, scope: !5888)
!5891 = !DILocation(line: 3203, column: 8, scope: !5888)
!5892 = !DILocation(line: 3210, column: 6, scope: !5888)
!5893 = !DILocation(line: 3212, column: 14, scope: !5610)
!5894 = !DILocation(line: 3212, column: 27, scope: !5610)
!5895 = !DILocation(line: 3212, column: 24, scope: !5610)
!5896 = !DILocation(line: 3217, column: 27, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5610, file: !3, line: 3213, column: 6)
!5898 = !DILocation(line: 3217, column: 6, scope: !5897)
!5899 = !DILocation(line: 3215, column: 12, scope: !5897)
!5900 = !DILocation(line: 3214, column: 8, scope: !5897)
!5901 = !DILocation(line: 3221, column: 6, scope: !5897)
!5902 = !DILocation(line: 3222, column: 24, scope: !5609)
!5903 = !DILocation(line: 3225, column: 37, scope: !5608)
!5904 = !DILocation(line: 3225, column: 20, scope: !5608)
!5905 = !DILocation(line: 0, scope: !5608)
!5906 = !DILocation(line: 3226, column: 19, scope: !5608)
!5907 = !DILocation(line: 3227, column: 20, scope: !5608)
!5908 = !DILocation(line: 3232, column: 18, scope: !5608)
!5909 = !DILocation(line: 3233, column: 20, scope: !5608)
!5910 = !DILocation(line: 3236, column: 33, scope: !5608)
!5911 = !DILocation(line: 3236, column: 20, scope: !5608)
!5912 = !DILocation(line: 3240, column: 8, scope: !5608)
!5913 = !DILocation(line: 3242, column: 6, scope: !5608)
!5914 = !DILocation(line: 3244, column: 32, scope: !5603)
!5915 = !DILocation(line: 3244, column: 15, scope: !5603)
!5916 = !DILocation(line: 3244, column: 4, scope: !5603)
!5917 = !DILocation(line: 3247, column: 1, scope: !5577)
!5918 = distinct !DISubprogram(name: "rhs_regno", scope: !385, file: !385, line: 1051, type: !5919, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5924)
!5919 = !DISubroutineType(types: !5920)
!5920 = !{!7, !5921}
!5921 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !637, line: 51, baseType: !5922)
!5922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5923, size: 64)
!5923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !812)
!5924 = !{!5925}
!5925 = !DILocalVariable(name: "x", arg: 1, scope: !5918, file: !385, line: 1051, type: !5921)
!5926 = !DILocation(line: 0, scope: !5918)
!5927 = !DILocation(line: 1053, column: 10, scope: !5918)
!5928 = !DILocation(line: 1053, column: 3, scope: !5918)
!5929 = distinct !DISubprogram(name: "overlaps_hard_reg_set_p", scope: !5930, file: !5930, line: 354, type: !5931, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5933)
!5930 = !DIFile(filename: "./regs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5931 = !DISubroutineType(types: !5932)
!5932 = !{!626, !1999, !5, !7}
!5933 = !{!5934, !5935, !5936, !5937}
!5934 = !DILocalVariable(name: "regs", arg: 1, scope: !5929, file: !5930, line: 354, type: !1999)
!5935 = !DILocalVariable(name: "mode", arg: 2, scope: !5929, file: !5930, line: 354, type: !5)
!5936 = !DILocalVariable(name: "regno", arg: 3, scope: !5929, file: !5930, line: 355, type: !7)
!5937 = !DILocalVariable(name: "end_regno", scope: !5929, file: !5930, line: 357, type: !7)
!5938 = !DILocation(line: 0, scope: !5929)
!5939 = !DILocation(line: 359, column: 7, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5929, file: !5930, line: 359, column: 7)
!5941 = !DILocation(line: 359, column: 7, scope: !5929)
!5942 = !DILocation(line: 362, column: 15, scope: !5929)
!5943 = !DILocation(line: 363, column: 3, scope: !5929)
!5944 = !DILocation(line: 363, column: 10, scope: !5929)
!5945 = !DILocation(line: 363, column: 18, scope: !5929)
!5946 = !DILocation(line: 364, column: 9, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5929, file: !5930, line: 364, column: 9)
!5948 = !DILocation(line: 364, column: 9, scope: !5929)
!5949 = distinct !{!5949, !5943, !5950}
!5950 = !DILocation(line: 365, column: 14, scope: !5929)
!5951 = !DILocation(line: 368, column: 1, scope: !5929)
!5952 = distinct !DISubprogram(name: "end_hard_regno", scope: !5930, file: !5930, line: 290, type: !5953, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5955)
!5953 = !DISubroutineType(types: !5954)
!5954 = !{!7, !5, !7}
!5955 = !{!5956, !5957}
!5956 = !DILocalVariable(name: "mode", arg: 1, scope: !5952, file: !5930, line: 290, type: !5)
!5957 = !DILocalVariable(name: "regno", arg: 2, scope: !5952, file: !5930, line: 290, type: !7)
!5958 = !DILocation(line: 0, scope: !5952)
!5959 = !DILocation(line: 292, column: 18, scope: !5952)
!5960 = !DILocation(line: 292, column: 16, scope: !5952)
!5961 = !DILocation(line: 292, column: 3, scope: !5952)
!5962 = distinct !DISubprogram(name: "gimple_op", scope: !550, file: !550, line: 1631, type: !3117, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5963)
!5963 = !{!5964, !5965}
!5964 = !DILocalVariable(name: "gs", arg: 1, scope: !5962, file: !550, line: 1631, type: !3100)
!5965 = !DILocalVariable(name: "i", arg: 2, scope: !5962, file: !550, line: 1631, type: !7)
!5966 = !DILocation(line: 0, scope: !5962)
!5967 = !DILocation(line: 1633, column: 7, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5962, file: !550, line: 1633, column: 7)
!5969 = !DILocation(line: 1633, column: 7, scope: !5962)
!5970 = !DILocation(line: 1638, column: 14, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5968, file: !550, line: 1634, column: 5)
!5972 = !DILocation(line: 1638, column: 7, scope: !5971)
!5973 = !DILocation(line: 0, scope: !5968)
!5974 = !DILocation(line: 1642, column: 1, scope: !5962)
!5975 = distinct !DISubprogram(name: "gimple_has_ops", scope: !550, file: !550, line: 1274, type: !3197, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5976)
!5976 = !{!5977}
!5977 = !DILocalVariable(name: "g", arg: 1, scope: !5975, file: !550, line: 1274, type: !3100)
!5978 = !DILocation(line: 0, scope: !5975)
!5979 = !DILocation(line: 1276, column: 10, scope: !5975)
!5980 = !DILocation(line: 1276, column: 26, scope: !5975)
!5981 = !DILocation(line: 1276, column: 41, scope: !5975)
!5982 = !DILocation(line: 1276, column: 44, scope: !5975)
!5983 = !DILocation(line: 1276, column: 60, scope: !5975)
!5984 = !DILocation(line: 1276, column: 3, scope: !5975)
!5985 = distinct !DISubprogram(name: "gimple_ops", scope: !550, file: !550, line: 1614, type: !5986, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5988)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{!993, !958}
!5988 = !{!5989, !5990}
!5989 = !DILocalVariable(name: "gs", arg: 1, scope: !5985, file: !550, line: 1614, type: !958)
!5990 = !DILocalVariable(name: "off", scope: !5985, file: !550, line: 1616, type: !1104)
!5991 = !DILocation(line: 0, scope: !5985)
!5992 = !DILocation(line: 1621, column: 28, scope: !5985)
!5993 = !DILocation(line: 1621, column: 9, scope: !5985)
!5994 = !DILocation(line: 1622, column: 3, scope: !5985)
!5995 = !DILocation(line: 1624, column: 20, scope: !5985)
!5996 = !DILocation(line: 1624, column: 32, scope: !5985)
!5997 = !DILocation(line: 1624, column: 10, scope: !5985)
!5998 = !DILocation(line: 1624, column: 3, scope: !5985)
!5999 = distinct !DISubprogram(name: "gimple_code", scope: !550, file: !550, line: 1052, type: !6000, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6002)
!6000 = !DISubroutineType(types: !6001)
!6001 = !{!549, !3100}
!6002 = !{!6003}
!6003 = !DILocalVariable(name: "g", arg: 1, scope: !5999, file: !550, line: 1052, type: !3100)
!6004 = !DILocation(line: 0, scope: !5999)
!6005 = !DILocation(line: 1054, column: 20, scope: !5999)
!6006 = !DILocation(line: 1054, column: 3, scope: !5999)
!6007 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !550, file: !550, line: 1073, type: !6008, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6010)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{!588, !958}
!6010 = !{!6011}
!6011 = !DILocalVariable(name: "gs", arg: 1, scope: !6007, file: !550, line: 1073, type: !958)
!6012 = !DILocation(line: 0, scope: !6007)
!6013 = !DILocation(line: 1075, column: 24, scope: !6007)
!6014 = !DILocation(line: 1075, column: 10, scope: !6007)
!6015 = !DILocation(line: 1075, column: 3, scope: !6007)
!6016 = distinct !DISubprogram(name: "gss_for_code", scope: !550, file: !550, line: 1061, type: !6017, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6019)
!6017 = !DISubroutineType(types: !6018)
!6018 = !{!588, !549}
!6019 = !{!6020}
!6020 = !DILocalVariable(name: "code", arg: 1, scope: !6016, file: !550, line: 1061, type: !549)
!6021 = !DILocation(line: 0, scope: !6016)
!6022 = !DILocation(line: 1066, column: 10, scope: !6016)
!6023 = !DILocation(line: 1066, column: 3, scope: !6016)
!6024 = distinct !DISubprogram(name: "check_operand_nalternatives", scope: !3, file: !3, line: 1185, type: !6025, scopeLine: 1186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6027)
!6025 = !DISubroutineType(types: !6026)
!6026 = !{!626, !636, !636}
!6027 = !{!6028, !6029, !6030, !6033, !6034, !6035}
!6028 = !DILocalVariable(name: "outputs", arg: 1, scope: !6024, file: !3, line: 1185, type: !636)
!6029 = !DILocalVariable(name: "inputs", arg: 2, scope: !6024, file: !3, line: 1185, type: !636)
!6030 = !DILocalVariable(name: "tmp", scope: !6031, file: !3, line: 1189, type: !636)
!6031 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 1188, column: 5)
!6032 = distinct !DILexicalBlock(scope: !6024, file: !3, line: 1187, column: 7)
!6033 = !DILocalVariable(name: "nalternatives", scope: !6031, file: !3, line: 1190, type: !627)
!6034 = !DILocalVariable(name: "next", scope: !6031, file: !3, line: 1192, type: !636)
!6035 = !DILocalVariable(name: "constraint", scope: !6036, file: !3, line: 1203, type: !632)
!6036 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 1202, column: 2)
!6037 = !DILocation(line: 0, scope: !6024)
!6038 = !DILocation(line: 1187, column: 7, scope: !6032)
!6039 = !DILocation(line: 1187, column: 18, scope: !6032)
!6040 = !DILocation(line: 1187, column: 15, scope: !6032)
!6041 = !DILocation(line: 1189, column: 18, scope: !6031)
!6042 = !DILocation(line: 1191, column: 24, scope: !6031)
!6043 = !DILocation(line: 1191, column: 4, scope: !6031)
!6044 = !DILocation(line: 0, scope: !6031)
!6045 = !DILocation(line: 1194, column: 29, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 1194, column: 11)
!6047 = !DILocation(line: 1194, column: 11, scope: !6031)
!6048 = !DILocation(line: 1201, column: 7, scope: !6031)
!6049 = !DILocation(line: 1196, column: 4, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 1195, column: 2)
!6051 = !DILocation(line: 1197, column: 4, scope: !6050)
!6052 = !DILocation(line: 1200, column: 11, scope: !6031)
!6053 = !DILocation(line: 1192, column: 12, scope: !6031)
!6054 = !DILocation(line: 1204, column: 8, scope: !6036)
!6055 = !DILocation(line: 0, scope: !6036)
!6056 = !DILocation(line: 1206, column: 8, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1206, column: 8)
!6058 = !DILocation(line: 1206, column: 40, scope: !6057)
!6059 = !DILocation(line: 1206, column: 8, scope: !6036)
!6060 = !DILocation(line: 1208, column: 8, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1207, column: 6)
!6062 = !DILocation(line: 1210, column: 8, scope: !6061)
!6063 = !DILocation(line: 1213, column: 8, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1213, column: 8)
!6065 = !DILocation(line: 1213, column: 8, scope: !6036)
!6066 = !DILocation(line: 1214, column: 6, scope: !6064)
!6067 = distinct !{!6067, !6048, !6068}
!6068 = !DILocation(line: 1217, column: 2, scope: !6031)
!6069 = !DILocation(line: 1220, column: 3, scope: !6024)
!6070 = !DILocation(line: 1221, column: 1, scope: !6024)
!6071 = distinct !DISubprogram(name: "tree_conflicts_with_clobbers_p", scope: !3, file: !3, line: 597, type: !6072, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6074)
!6072 = !DISubroutineType(types: !6073)
!6073 = !{!626, !636, !2898}
!6074 = !{!6075, !6076, !6077}
!6075 = !DILocalVariable(name: "t", arg: 1, scope: !6071, file: !3, line: 597, type: !636)
!6076 = !DILocalVariable(name: "clobbered_regs", arg: 2, scope: !6071, file: !3, line: 597, type: !2898)
!6077 = !DILocalVariable(name: "overlap", scope: !6071, file: !3, line: 601, type: !636)
!6078 = !DILocation(line: 0, scope: !6071)
!6079 = !DILocation(line: 601, column: 18, scope: !6071)
!6080 = !DILocation(line: 603, column: 7, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 603, column: 7)
!6082 = !DILocation(line: 603, column: 7, scope: !6071)
!6083 = !DILocation(line: 606, column: 7, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 604, column: 5)
!6085 = !DILocation(line: 605, column: 7, scope: !6084)
!6086 = !DILocation(line: 610, column: 7, scope: !6084)
!6087 = !DILocation(line: 610, column: 31, scope: !6084)
!6088 = !DILocation(line: 611, column: 7, scope: !6084)
!6089 = !DILocation(line: 615, column: 1, scope: !6071)
!6090 = distinct !DISubprogram(name: "n_occurrences", scope: !3, file: !3, line: 244, type: !6091, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6093)
!6091 = !DISubroutineType(types: !6092)
!6092 = !{!627, !627, !632}
!6093 = !{!6094, !6095, !6096}
!6094 = !DILocalVariable(name: "c", arg: 1, scope: !6090, file: !3, line: 244, type: !627)
!6095 = !DILocalVariable(name: "s", arg: 2, scope: !6090, file: !3, line: 244, type: !632)
!6096 = !DILocalVariable(name: "n", scope: !6090, file: !3, line: 246, type: !627)
!6097 = !DILocation(line: 0, scope: !6090)
!6098 = !DILocation(line: 247, column: 3, scope: !6090)
!6099 = !DILocation(line: 247, column: 10, scope: !6090)
!6100 = !DILocation(line: 248, column: 13, scope: !6090)
!6101 = !DILocation(line: 248, column: 16, scope: !6090)
!6102 = !DILocation(line: 248, column: 7, scope: !6090)
!6103 = distinct !{!6103, !6098, !6104}
!6104 = !DILocation(line: 248, column: 20, scope: !6090)
!6105 = !DILocation(line: 249, column: 3, scope: !6090)
!6106 = distinct !DISubprogram(name: "gimple_num_ops", scope: !550, file: !550, line: 1596, type: !3107, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6107)
!6107 = !{!6108}
!6108 = !DILocalVariable(name: "gs", arg: 1, scope: !6106, file: !550, line: 1596, type: !3100)
!6109 = !DILocation(line: 0, scope: !6106)
!6110 = !DILocation(line: 1598, column: 21, scope: !6106)
!6111 = !DILocation(line: 1598, column: 3, scope: !6106)
!6112 = distinct !DISubprogram(name: "case_bit_test_cmp", scope: !3, file: !3, line: 2117, type: !1470, scopeLine: 2118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6113)
!6113 = !{!6114, !6115, !6116, !6118}
!6114 = !DILocalVariable(name: "p1", arg: 1, scope: !6112, file: !3, line: 2117, type: !1265)
!6115 = !DILocalVariable(name: "p2", arg: 2, scope: !6112, file: !3, line: 2117, type: !1265)
!6116 = !DILocalVariable(name: "d1", scope: !6112, file: !3, line: 2119, type: !6117)
!6117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2016)
!6118 = !DILocalVariable(name: "d2", scope: !6112, file: !3, line: 2120, type: !6117)
!6119 = !DILocation(line: 0, scope: !6112)
!6120 = !DILocation(line: 2122, column: 11, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 2122, column: 7)
!6122 = !DILocation(line: 2122, column: 23, scope: !6121)
!6123 = !DILocation(line: 2122, column: 16, scope: !6121)
!6124 = !DILocation(line: 2122, column: 7, scope: !6112)
!6125 = !DILocation(line: 2123, column: 21, scope: !6121)
!6126 = !DILocation(line: 2123, column: 5, scope: !6121)
!6127 = !DILocation(line: 2126, column: 10, scope: !6112)
!6128 = !DILocation(line: 2126, column: 42, scope: !6112)
!6129 = !DILocation(line: 2126, column: 40, scope: !6112)
!6130 = !DILocation(line: 2126, column: 3, scope: !6112)
!6131 = !DILocation(line: 2127, column: 1, scope: !6112)
!6132 = distinct !DISubprogram(name: "node_is_bounded", scope: !3, file: !3, line: 2844, type: !6133, scopeLine: 2845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6135)
!6133 = !DISubroutineType(types: !6134)
!6134 = !{!627, !5205, !636}
!6135 = !{!6136, !6137}
!6136 = !DILocalVariable(name: "node", arg: 1, scope: !6132, file: !3, line: 2844, type: !5205)
!6137 = !DILocalVariable(name: "index_type", arg: 2, scope: !6132, file: !3, line: 2844, type: !636)
!6138 = !DILocation(line: 0, scope: !6132)
!6139 = !DILocation(line: 2846, column: 11, scope: !6132)
!6140 = !DILocation(line: 2847, column: 4, scope: !6132)
!6141 = !DILocation(line: 2847, column: 7, scope: !6132)
!6142 = !DILocation(line: 2846, column: 3, scope: !6132)
!6143 = distinct !DISubprogram(name: "do_jump_if_equal", scope: !3, file: !3, line: 2538, type: !6144, scopeLine: 2540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6146)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{null, !5, !810, !810, !810, !627}
!6146 = !{!6147, !6148, !6149, !6150, !6151}
!6147 = !DILocalVariable(name: "mode", arg: 1, scope: !6143, file: !3, line: 2538, type: !5)
!6148 = !DILocalVariable(name: "op0", arg: 2, scope: !6143, file: !3, line: 2538, type: !810)
!6149 = !DILocalVariable(name: "op1", arg: 3, scope: !6143, file: !3, line: 2538, type: !810)
!6150 = !DILocalVariable(name: "label", arg: 4, scope: !6143, file: !3, line: 2538, type: !810)
!6151 = !DILocalVariable(name: "unsignedp", arg: 5, scope: !6143, file: !3, line: 2539, type: !627)
!6152 = !DILocation(line: 0, scope: !6143)
!6153 = !DILocation(line: 2541, column: 3, scope: !6143)
!6154 = !DILocation(line: 2543, column: 1, scope: !6143)
!6155 = distinct !DISubprogram(name: "node_has_low_bound", scope: !3, file: !3, line: 2753, type: !6133, scopeLine: 2754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6156)
!6156 = !{!6157, !6158, !6159, !6160}
!6157 = !DILocalVariable(name: "node", arg: 1, scope: !6155, file: !3, line: 2753, type: !5205)
!6158 = !DILocalVariable(name: "index_type", arg: 2, scope: !6155, file: !3, line: 2753, type: !636)
!6159 = !DILocalVariable(name: "low_minus_one", scope: !6155, file: !3, line: 2755, type: !636)
!6160 = !DILocalVariable(name: "pnode", scope: !6155, file: !3, line: 2756, type: !5205)
!6161 = !DILocation(line: 0, scope: !6155)
!6162 = !DILocation(line: 2761, column: 33, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 2761, column: 7)
!6164 = !DILocation(line: 2761, column: 38, scope: !6163)
!6165 = !DILocation(line: 2761, column: 7, scope: !6163)
!6166 = !DILocation(line: 2761, column: 7, scope: !6155)
!6167 = !DILocation(line: 2768, column: 13, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 2768, column: 7)
!6169 = !DILocation(line: 2768, column: 7, scope: !6168)
!6170 = !DILocation(line: 2768, column: 7, scope: !6155)
!6171 = !DILocation(line: 2771, column: 19, scope: !6155)
!6172 = !DILocation(line: 2778, column: 47, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 2778, column: 7)
!6174 = !DILocation(line: 2778, column: 9, scope: !6173)
!6175 = !DILocation(line: 2778, column: 7, scope: !6155)
!6176 = !DILocation(line: 2781, column: 8, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 2781, column: 3)
!6178 = !DILocation(line: 0, scope: !6177)
!6179 = !DILocation(line: 2781, column: 3, scope: !6177)
!6180 = !DILocation(line: 2782, column: 51, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 2782, column: 9)
!6182 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 2781, column: 3)
!6183 = !DILocation(line: 2782, column: 9, scope: !6181)
!6184 = !DILocation(line: 2782, column: 9, scope: !6182)
!6185 = !DILocation(line: 2781, column: 3, scope: !6182)
!6186 = distinct !{!6186, !6179, !6187}
!6187 = !DILocation(line: 2783, column: 14, scope: !6177)
!6188 = !DILocation(line: 2786, column: 1, scope: !6155)
!6189 = distinct !DISubprogram(name: "node_has_high_bound", scope: !3, file: !3, line: 2799, type: !6133, scopeLine: 2800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6190)
!6190 = !{!6191, !6192, !6193, !6194}
!6191 = !DILocalVariable(name: "node", arg: 1, scope: !6189, file: !3, line: 2799, type: !5205)
!6192 = !DILocalVariable(name: "index_type", arg: 2, scope: !6189, file: !3, line: 2799, type: !636)
!6193 = !DILocalVariable(name: "high_plus_one", scope: !6189, file: !3, line: 2801, type: !636)
!6194 = !DILocalVariable(name: "pnode", scope: !6189, file: !3, line: 2802, type: !5205)
!6195 = !DILocation(line: 0, scope: !6189)
!6196 = !DILocation(line: 2806, column: 7, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2806, column: 7)
!6198 = !DILocation(line: 2806, column: 35, scope: !6197)
!6199 = !DILocation(line: 2806, column: 7, scope: !6189)
!6200 = !DILocation(line: 2812, column: 33, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2812, column: 7)
!6202 = !DILocation(line: 2812, column: 7, scope: !6201)
!6203 = !DILocation(line: 2812, column: 7, scope: !6189)
!6204 = !DILocation(line: 2819, column: 13, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2819, column: 7)
!6206 = !DILocation(line: 2819, column: 7, scope: !6205)
!6207 = !DILocation(line: 2819, column: 7, scope: !6189)
!6208 = !DILocation(line: 2822, column: 19, scope: !6189)
!6209 = !DILocation(line: 2829, column: 32, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2829, column: 7)
!6211 = !DILocation(line: 2829, column: 9, scope: !6210)
!6212 = !DILocation(line: 2829, column: 7, scope: !6189)
!6213 = !DILocation(line: 2832, column: 8, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2832, column: 3)
!6215 = !DILocation(line: 0, scope: !6214)
!6216 = !DILocation(line: 2832, column: 3, scope: !6214)
!6217 = !DILocation(line: 2833, column: 51, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 2833, column: 9)
!6219 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 2832, column: 3)
!6220 = !DILocation(line: 2833, column: 9, scope: !6218)
!6221 = !DILocation(line: 2833, column: 9, scope: !6219)
!6222 = !DILocation(line: 2832, column: 3, scope: !6219)
!6223 = distinct !{!6223, !6216, !6224}
!6224 = !DILocation(line: 2834, column: 14, scope: !6214)
!6225 = !DILocation(line: 2837, column: 1, scope: !6189)
