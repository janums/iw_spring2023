; ModuleID = 'tree-into-ssa.bc'
source_filename = "tree-into-ssa.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.gimple_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.update_ssa_stats_d = type { i32, i32, %struct.bitmap_head_def*, i32 }
%struct.VEC_gimple_vec_heap = type { %struct.VEC_gimple_vec_base }
%struct.VEC_gimple_vec_base = type { i32, i32, [1 x %struct.VEC_gimple_heap*] }
%struct.VEC_gimple_heap = type { %struct.VEC_gimple_base }
%struct.VEC_ssa_name_info_p_heap = type { %struct.VEC_ssa_name_info_p_base }
%struct.VEC_ssa_name_info_p_base = type { i32, i32, [1 x %struct.ssa_name_info*] }
%struct.ssa_name_info = type { %union.tree_node*, i8, i32 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.var_ann_d = type { i8, i32, %union.tree_node* }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.referenced_var_iterator = type { %struct.htab_iterator }
%struct.htab_iterator = type { %struct.htab*, i8**, i8** }
%struct.def_blocks_d = type { %union.tree_node*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.repl_map_d = type { %union.tree_node*, %struct.bitmap_head_def* }
%struct.sbitmap_iterator = type { i64*, i32, i32, i32, i64 }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.dom_walk_data = type { i8, void (%struct.dom_walk_data*, %struct.basic_block_def*, i8)*, void (%struct.dom_walk_data*, %struct.basic_block_def*)*, void (%struct.dom_walk_data*, %struct.basic_block_def*)*, i8*, %struct.VEC_void_p_heap*, i64, %struct.VEC_void_p_heap* }
%struct.VEC_void_p_heap = type { %struct.VEC_void_p_base }
%struct.VEC_void_p_base = type { i32, i32, [1 x i8*] }
%struct.mark_def_sites_global_data = type { %struct.bitmap_head_def* }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.dom_dfsnum = type { i32, i32 }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str = private unnamed_addr constant [3 x i8] c"{ \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"NIL\00", align 1
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"\0A\0ARenaming stack\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c" (up to %d levels)\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"Level %d (current level)\0A\00", align 1
@block_defs_stack = internal global %struct.VEC_tree_heap* null, align 8, !dbg !0
@.str.9 = private unnamed_addr constant [11 x i8] c"\0ALevel %d\0A\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.10 = private unnamed_addr constant [23 x i8] c"    Previous CURRDEF (\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c") = \00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"<NIL>\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"\0A\0ACurrent reaching definitions\0A\0A\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"CURRDEF (\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.15 = private unnamed_addr constant [34 x i8] c"SSA renaming information for %s\0A\0A\00", align 1
@def_blocks = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2222
@repl_tbl = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2246
@.str.16 = private unnamed_addr constant [25 x i8] c"\0AHash table statistics:\0A\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"    def_blocks:   \00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"    repl_tbl:     \00", align 1
@.str.19 = private unnamed_addr constant [35 x i8] c"\0A\0ADefinition and live-in blocks:\0A\0A\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"ssa\00", align 1
@pass_build_ssa = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i8 ()* null, i32 ()* @rewrite_into_ssa, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 24, i32 32, i32 0, i32 0, i32 49157 } }, align 8, !dbg !2194
@.str.21 = private unnamed_addr constant [7 x i8] c" -> { \00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@new_ssa_names = internal unnamed_addr global %struct.simple_bitmap_def* null, align 8, !dbg !2236
@.str.23 = private unnamed_addr constant [24 x i8] c"\0ASSA replacement table\0A\00", align 1
@.str.24 = private unnamed_addr constant [63 x i8] c"N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j\0A\0A\00", align 1
@.str.25 = private unnamed_addr constant [44 x i8] c"Number of virtual NEW -> OLD mappings: %7u\0A\00", align 1
@update_ssa_stats = internal global %struct.update_ssa_stats_d zeroinitializer, align 8, !dbg !2248
@.str.26 = private unnamed_addr constant [44 x i8] c"Number of real NEW -> OLD mappings:    %7u\0A\00", align 1
@.str.27 = private unnamed_addr constant [44 x i8] c"Number of total NEW -> OLD mappings:   %7u\0A\00", align 1
@.str.28 = private unnamed_addr constant [32 x i8] c"\0ANumber of virtual symbols: %u\0A\00", align 1
@.str.29 = private unnamed_addr constant [34 x i8] c"\0A\0ASymbols to be put in SSA form\0A\0A\00", align 1
@names_to_release = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2240
@.str.30 = private unnamed_addr constant [52 x i8] c"\0A\0ASSA names to release after updating the SSA web\0A\0A\00", align 1
@old_ssa_names = internal unnamed_addr global %struct.simple_bitmap_def* null, align 8, !dbg !2224
@update_ssa_initialized_fn = internal unnamed_addr global %struct.function* null, align 8, !dbg !2262
@blocks_with_phis_to_rewrite = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2244
@phis_to_rewrite = internal global %struct.VEC_gimple_vec_heap* null, align 8, !dbg !2242
@blocks_to_update = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2256
@.str.31 = private unnamed_addr constant [16 x i8] c"tree-into-ssa.c\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@timevar_enable = external dso_local local_unnamed_addr global i8, align 1
@interesting_blocks = common dso_local local_unnamed_addr global %struct.simple_bitmap_def* null, align 8, !dbg !2238
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.33 = private unnamed_addr constant [46 x i8] c"Incremental SSA update started at block: %d\0A\0A\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c"Number of blocks in CFG: %d\0A\00", align 1
@.str.35 = private unnamed_addr constant [43 x i8] c"Number of blocks to update: %d (%3.0f%%)\0A\0A\00", align 1
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.36 = private unnamed_addr constant [18 x i8] c"Affected blocks: \00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"%u \00", align 1
@info_for_ssa_name = internal global %struct.VEC_ssa_name_info_p_heap* null, align 8, !dbg !2258
@current_info_for_ssa_name_age = internal unnamed_addr global i32 0, align 4, !dbg !2260
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.38 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.39 = private unnamed_addr constant [51 x i8] c"size %ld, %ld elements, %f collision/search ratio\0A\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"VAR: \00", align 1
@.str.41 = private unnamed_addr constant [17 x i8] c", DEF_BLOCKS: { \00", align 1
@.str.42 = private unnamed_addr constant [20 x i8] c", LIVEIN_BLOCKS: { \00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c", PHI_BLOCKS: { \00", align 1
@.str.44 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@htab_hash_pointer = external dso_local local_unnamed_addr global i32 (i8*)*, align 8
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.46 = private unnamed_addr constant [42 x i8] c"\0AEnabled virtual name mapping heuristic.\0A\00", align 1
@.str.47 = private unnamed_addr constant [40 x i8] c"\09Number of virtual mappings:       %7u\0A\00", align 1
@.str.48 = private unnamed_addr constant [40 x i8] c"\09Number of unique virtual symbols: %7u\0A\00", align 1
@.str.49 = private unnamed_addr constant [88 x i8] c"Updating FUD-chains from top of CFG will be faster than processing\0Athe name mappings.\0A\0A\00", align 1
@.str.50 = private unnamed_addr constant [23 x i8] c"\0A\0ARenaming block #%d\0A\0A\00", align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"Renaming statement \00", align 1
@.str.52 = private unnamed_addr constant [43 x i8] c"\0A\0ARegistering new PHI nodes in block #%d\0A\0A\00", align 1
@.str.53 = private unnamed_addr constant [40 x i8] c"Updating SSA information for statement \00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2268 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2281, metadata !DIExpression()), !dbg !2283
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2282, metadata !DIExpression()), !dbg !2283
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2284
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2285
  ret i32 %call, !dbg !2286
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2287 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2291
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2292
  ret i32 %call, !dbg !2293
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2294 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2298, metadata !DIExpression()), !dbg !2299
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2300
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2300
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2300
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2300
  %cmp = icmp uge i8* %0, %1, !dbg !2300
  %conv1 = zext i1 %cmp to i64, !dbg !2300
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2300
  %tobool = icmp eq i64 %expval, 0, !dbg !2300
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2300

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2300
  br label %cond.end, !dbg !2300

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2300
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2300
  %2 = load i8, i8* %0, align 1, !dbg !2300
  %conv3 = zext i8 %2 to i32, !dbg !2300
  br label %cond.end, !dbg !2300

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2300
  ret i32 %cond, !dbg !2301
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2302 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2304, metadata !DIExpression()), !dbg !2305
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2306
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2306
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2306
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2306
  %cmp = icmp uge i8* %0, %1, !dbg !2306
  %conv1 = zext i1 %cmp to i64, !dbg !2306
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2306
  %tobool = icmp eq i64 %expval, 0, !dbg !2306
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2306

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2306
  br label %cond.end, !dbg !2306

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2306
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2306
  %2 = load i8, i8* %0, align 1, !dbg !2306
  %conv3 = zext i8 %2 to i32, !dbg !2306
  br label %cond.end, !dbg !2306

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2306
  ret i32 %cond, !dbg !2307
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2308 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2309
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2309
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2309
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2309
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2309
  %cmp = icmp uge i8* %1, %2, !dbg !2309
  %conv1 = zext i1 %cmp to i64, !dbg !2309
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2309
  %tobool = icmp eq i64 %expval, 0, !dbg !2309
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2309

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2309
  br label %cond.end, !dbg !2309

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2309
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2309
  %3 = load i8, i8* %1, align 1, !dbg !2309
  %conv3 = zext i8 %3 to i32, !dbg !2309
  br label %cond.end, !dbg !2309

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2309
  ret i32 %cond, !dbg !2310
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2311 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2315, metadata !DIExpression()), !dbg !2316
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2317
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2318
  ret i32 %call, !dbg !2319
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2320 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2324, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2325, metadata !DIExpression()), !dbg !2326
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2327
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2327
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2327
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2327
  %cmp = icmp uge i8* %0, %1, !dbg !2327
  %conv1 = zext i1 %cmp to i64, !dbg !2327
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2327
  %tobool = icmp eq i64 %expval, 0, !dbg !2327
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2327

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2327
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2327
  br label %cond.end, !dbg !2327

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2327
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2327
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2327
  store i8 %conv2, i8* %0, align 1, !dbg !2327
  %conv6 = and i32 %__c, 255, !dbg !2327
  br label %cond.end, !dbg !2327

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2327
  ret i32 %cond, !dbg !2328
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2329 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2331, metadata !DIExpression()), !dbg !2333
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2332, metadata !DIExpression()), !dbg !2333
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2334
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2334
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2334
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2334
  %cmp = icmp uge i8* %0, %1, !dbg !2334
  %conv1 = zext i1 %cmp to i64, !dbg !2334
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2334
  %tobool = icmp eq i64 %expval, 0, !dbg !2334
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2334

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2334
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2334
  br label %cond.end, !dbg !2334

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2334
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2334
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2334
  store i8 %conv2, i8* %0, align 1, !dbg !2334
  %conv6 = and i32 %__c, 255, !dbg !2334
  br label %cond.end, !dbg !2334

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2334
  ret i32 %cond, !dbg !2335
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2336 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2338, metadata !DIExpression()), !dbg !2339
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2340
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2340
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2340
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2340
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2340
  %cmp = icmp uge i8* %1, %2, !dbg !2340
  %conv1 = zext i1 %cmp to i64, !dbg !2340
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2340
  %tobool = icmp eq i64 %expval, 0, !dbg !2340
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2340

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2340
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2340
  br label %cond.end, !dbg !2340

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2340
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2340
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2340
  store i8 %conv4, i8* %1, align 1, !dbg !2340
  %conv6 = and i32 %__c, 255, !dbg !2340
  br label %cond.end, !dbg !2340

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2340
  ret i32 %cond, !dbg !2341
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2342 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2348, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2349, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2350, metadata !DIExpression()), !dbg !2351
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2352
  ret i64 %call, !dbg !2353
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2354 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2356, metadata !DIExpression()), !dbg !2357
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2358
  %0 = load i32, i32* %_flags, align 8, !dbg !2358
  %and = lshr i32 %0, 4, !dbg !2358
  %and.lobit = and i32 %and, 1, !dbg !2358
  ret i32 %and.lobit, !dbg !2359
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2360 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2362, metadata !DIExpression()), !dbg !2363
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2364
  %0 = load i32, i32* %_flags, align 8, !dbg !2364
  %and = lshr i32 %0, 5, !dbg !2364
  %and.lobit = and i32 %and, 1, !dbg !2364
  ret i32 %and.lobit, !dbg !2365
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2366 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2369, metadata !DIExpression()), !dbg !2370
  %__c.off = add i32 %__c, 128, !dbg !2371
  %0 = icmp ult i32 %__c.off, 384, !dbg !2371
  br i1 %0, label %cond.true, label %cond.end, !dbg !2371

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2372
  %1 = load i32*, i32** %call, align 8, !dbg !2373
  %idxprom = sext i32 %__c to i64, !dbg !2374
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2374
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2374
  br label %cond.end, !dbg !2375

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2375
  ret i32 %cond, !dbg !2376
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2377 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2379, metadata !DIExpression()), !dbg !2380
  %__c.off = add i32 %__c, 128, !dbg !2381
  %0 = icmp ult i32 %__c.off, 384, !dbg !2381
  br i1 %0, label %cond.true, label %cond.end, !dbg !2381

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2382
  %1 = load i32*, i32** %call, align 8, !dbg !2383
  %idxprom = sext i32 %__c to i64, !dbg !2384
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2384
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2384
  br label %cond.end, !dbg !2385

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2385
  ret i32 %cond, !dbg !2386
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2387 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2392, metadata !DIExpression()), !dbg !2393
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2394
  %conv = trunc i64 %call to i32, !dbg !2395
  ret i32 %conv, !dbg !2396
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2397 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2401, metadata !DIExpression()), !dbg !2402
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2403
  ret i64 %call, !dbg !2404
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2405 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2410, metadata !DIExpression()), !dbg !2411
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2412
  ret i64 %call, !dbg !2413
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2414 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2420, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2421, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2422, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2423, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2424, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i64 0, metadata !2425, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2426, metadata !DIExpression()), !dbg !2430
  br label %while.cond, !dbg !2431

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2432
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2430
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2426, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2425, metadata !DIExpression()), !dbg !2430
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2433
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2431

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2434
  %div = lshr i64 %add, 1, !dbg !2436
  call void @llvm.dbg.value(metadata i64 %div, metadata !2427, metadata !DIExpression()), !dbg !2430
  %mul = mul i64 %div, %__size, !dbg !2437
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2438
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2428, metadata !DIExpression()), !dbg !2430
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2439
  call void @llvm.dbg.value(metadata i32 %call, metadata !2429, metadata !DIExpression()), !dbg !2430
  %cmp1 = icmp slt i32 %call, 0, !dbg !2440
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2442

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2443
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2445

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2446
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2425, metadata !DIExpression()), !dbg !2430
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2430
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2430
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2426, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2425, metadata !DIExpression()), !dbg !2430
  br label %while.cond, !dbg !2431, !llvm.loop !2447

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2430
  ret i8* %retval.0, !dbg !2449
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2450 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2456, metadata !DIExpression()), !dbg !2457
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2458
  ret double %call, !dbg !2459
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2460 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2469, metadata !DIExpression()), !dbg !2472
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2470, metadata !DIExpression()), !dbg !2472
  call void @llvm.dbg.value(metadata i32 %base, metadata !2471, metadata !DIExpression()), !dbg !2472
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2473
  ret i64 %call, !dbg !2474
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2475 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2481, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2482, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.value(metadata i32 %base, metadata !2483, metadata !DIExpression()), !dbg !2484
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2485
  ret i64 %call, !dbg !2486
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2487 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2498, metadata !DIExpression()), !dbg !2501
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2499, metadata !DIExpression()), !dbg !2501
  call void @llvm.dbg.value(metadata i32 %base, metadata !2500, metadata !DIExpression()), !dbg !2501
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2502
  ret i64 %call, !dbg !2503
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2504 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2508, metadata !DIExpression()), !dbg !2511
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2509, metadata !DIExpression()), !dbg !2511
  call void @llvm.dbg.value(metadata i32 %base, metadata !2510, metadata !DIExpression()), !dbg !2511
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2512
  ret i64 %call, !dbg !2513
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2514 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2554, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2555, metadata !DIExpression()), !dbg !2556
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2557
  ret i32 %call, !dbg !2558
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2559 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2561, metadata !DIExpression()), !dbg !2563
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2562, metadata !DIExpression()), !dbg !2563
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2564
  ret i32 %call, !dbg !2565
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2566 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2570, metadata !DIExpression()), !dbg !2572
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2571, metadata !DIExpression()), !dbg !2572
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2573
  ret i32 %call, !dbg !2574
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2575 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2579, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2580, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2581, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2582, metadata !DIExpression()), !dbg !2583
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2584
  ret i32 %call, !dbg !2585
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2586 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2590, metadata !DIExpression()), !dbg !2593
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2591, metadata !DIExpression()), !dbg !2593
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2592, metadata !DIExpression()), !dbg !2593
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2592, metadata !DIExpression(DW_OP_deref)), !dbg !2593
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2594
  ret i32 %call, !dbg !2595
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2596 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2600, metadata !DIExpression()), !dbg !2604
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2601, metadata !DIExpression()), !dbg !2604
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2602, metadata !DIExpression()), !dbg !2604
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2603, metadata !DIExpression()), !dbg !2604
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2603, metadata !DIExpression(DW_OP_deref)), !dbg !2604
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2605
  ret i32 %call, !dbg !2606
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2607 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2631, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2632, metadata !DIExpression()), !dbg !2633
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2634
  ret i32 %call, !dbg !2635
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2636 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2638, metadata !DIExpression()), !dbg !2640
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2639, metadata !DIExpression()), !dbg !2640
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2641
  ret i32 %call, !dbg !2642
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2643 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2647, metadata !DIExpression()), !dbg !2649
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2648, metadata !DIExpression()), !dbg !2649
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2650
  ret i32 %call, !dbg !2651
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2652 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2656, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2657, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2658, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2659, metadata !DIExpression()), !dbg !2660
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2661
  ret i32 %call, !dbg !2662
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_current_def(%union.tree_node* %var) local_unnamed_addr #5 !dbg !2663 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !2667, metadata !DIExpression()), !dbg !2668
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2669
  %bf.load = load i64, i64* %0, align 8, !dbg !2669
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2671
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !2671
  br i1 %cmp, label %if.then, label %if.else, !dbg !2672

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.ssa_name_info* @get_ssa_name_ann(%union.tree_node* %var) #7, !dbg !2673
  %current_def = getelementptr inbounds %struct.ssa_name_info, %struct.ssa_name_info* %call, i64 0, i32 0, !dbg !2674
  br label %return, !dbg !2675

if.else:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.var_ann_d* @var_ann(%union.tree_node* %var) #7, !dbg !2676
  %current_def2 = getelementptr inbounds %struct.var_ann_d, %struct.var_ann_d* %call1, i64 0, i32 2, !dbg !2677
  br label %return, !dbg !2678

return:                                           ; preds = %if.else, %if.then
  %retval.0.in = phi %union.tree_node** [ %current_def, %if.then ], [ %current_def2, %if.else ]
  %retval.0 = load %union.tree_node*, %union.tree_node** %retval.0.in, align 8, !dbg !2679
  ret %union.tree_node* %retval.0, !dbg !2680
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_name_info* @get_ssa_name_ann(%union.tree_node* %name) unnamed_addr #0 !dbg !2681 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !2685, metadata !DIExpression()), !dbg !2694
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2695
  %0 = bitcast %union.tree_node** %version to i32*, !dbg !2695
  %1 = load i32, i32* %0, align 8, !dbg !2695
  call void @llvm.dbg.value(metadata i32 %1, metadata !2686, metadata !DIExpression()), !dbg !2694
  %2 = load %struct.VEC_ssa_name_info_p_heap*, %struct.VEC_ssa_name_info_p_heap** @info_for_ssa_name, align 8, !dbg !2696
  %base = getelementptr inbounds %struct.VEC_ssa_name_info_p_heap, %struct.VEC_ssa_name_info_p_heap* %2, i64 0, i32 0, !dbg !2696
  %call = tail call fastcc i32 @VEC_ssa_name_info_p_base_length(%struct.VEC_ssa_name_info_p_base* %base) #7, !dbg !2696
  call void @llvm.dbg.value(metadata i32 %call, metadata !2687, metadata !DIExpression()), !dbg !2694
  %cmp = icmp ult i32 %1, %call, !dbg !2697
  br i1 %cmp, label %if.end, label %if.then, !dbg !2698

if.then:                                          ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2699
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 3, !dbg !2699
  %4 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !2699
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %4, i64 0, i32 2, !dbg !2699
  %5 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !2699
  %tobool1 = icmp eq %struct.VEC_tree_gc* %5, null, !dbg !2699
  br i1 %tobool1, label %cond.end8, label %cond.true2, !dbg !2699

cond.true2:                                       ; preds = %if.then
  %base6 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %5, i64 0, i32 0, !dbg !2699
  br label %cond.end8, !dbg !2699

cond.end8:                                        ; preds = %if.then, %cond.true2
  %cond9 = phi %struct.VEC_tree_base* [ %base6, %cond.true2 ], [ null, %if.then ], !dbg !2699
  %call10 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond9) #7, !dbg !2699
  call void @llvm.dbg.value(metadata i32 %call10, metadata !2689, metadata !DIExpression()), !dbg !2700
  %call11 = tail call fastcc i32 @VEC_ssa_name_info_p_heap_reserve(%struct.VEC_ssa_name_info_p_heap** nonnull @info_for_ssa_name, i32 %call10) #7, !dbg !2701
  br label %while.cond, !dbg !2702

while.cond:                                       ; preds = %while.body, %cond.end8
  %len.0 = phi i32 [ %call, %cond.end8 ], [ %inc, %while.body ], !dbg !2694
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !2687, metadata !DIExpression()), !dbg !2694
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !2687, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2694
  %cmp12 = icmp ult i32 %len.0, %call10, !dbg !2703
  br i1 %cmp12, label %while.body, label %if.end.loopexit, !dbg !2702

while.body:                                       ; preds = %while.cond
  %inc = add i32 %len.0, 1, !dbg !2704
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2687, metadata !DIExpression()), !dbg !2694
  %call14 = tail call i8* @xcalloc(i64 1, i64 16) #6, !dbg !2705
  %6 = bitcast i8* %call14 to %struct.ssa_name_info*, !dbg !2705
  call void @llvm.dbg.value(metadata %struct.ssa_name_info* %6, metadata !2692, metadata !DIExpression()), !dbg !2706
  %7 = load i32, i32* @current_info_for_ssa_name_age, align 4, !dbg !2707
  %age = getelementptr inbounds i8, i8* %call14, i64 12, !dbg !2708
  %8 = bitcast i8* %age to i32*, !dbg !2708
  store i32 %7, i32* %8, align 4, !dbg !2709
  %9 = load %struct.VEC_ssa_name_info_p_heap*, %struct.VEC_ssa_name_info_p_heap** @info_for_ssa_name, align 8, !dbg !2710
  %base17 = getelementptr inbounds %struct.VEC_ssa_name_info_p_heap, %struct.VEC_ssa_name_info_p_heap* %9, i64 0, i32 0, !dbg !2710
  %call21 = tail call fastcc %struct.ssa_name_info** @VEC_ssa_name_info_p_base_quick_push(%struct.VEC_ssa_name_info_p_base* %base17, %struct.ssa_name_info* %6) #7, !dbg !2710
  br label %while.cond, !dbg !2702, !llvm.loop !2711

if.end.loopexit:                                  ; preds = %while.cond
  br label %if.end, !dbg !2713

if.end:                                           ; preds = %if.end.loopexit, %entry
  %10 = load %struct.VEC_ssa_name_info_p_heap*, %struct.VEC_ssa_name_info_p_heap** @info_for_ssa_name, align 8, !dbg !2713
  %base24 = getelementptr inbounds %struct.VEC_ssa_name_info_p_heap, %struct.VEC_ssa_name_info_p_heap* %10, i64 0, i32 0, !dbg !2713
  %call28 = tail call fastcc %struct.ssa_name_info* @VEC_ssa_name_info_p_base_index(%struct.VEC_ssa_name_info_p_base* %base24, i32 %1) #7, !dbg !2713
  call void @llvm.dbg.value(metadata %struct.ssa_name_info* %call28, metadata !2688, metadata !DIExpression()), !dbg !2694
  %age29 = getelementptr inbounds %struct.ssa_name_info, %struct.ssa_name_info* %call28, i64 0, i32 2, !dbg !2714
  %11 = load i32, i32* %age29, align 4, !dbg !2714
  %12 = load i32, i32* @current_info_for_ssa_name_age, align 4, !dbg !2716
  %cmp30 = icmp ult i32 %11, %12, !dbg !2717
  br i1 %cmp30, label %if.then31, label %if.end33, !dbg !2718

if.then31:                                        ; preds = %if.end
  %need_phi_state = getelementptr inbounds %struct.ssa_name_info, %struct.ssa_name_info* %call28, i64 0, i32 1, !dbg !2719
  %bf.load = load i8, i8* %need_phi_state, align 8, !dbg !2721
  %bf.clear = and i8 %bf.load, -4, !dbg !2721
  store i8 %bf.clear, i8* %need_phi_state, align 8, !dbg !2721
  %current_def = getelementptr inbounds %struct.ssa_name_info, %struct.ssa_name_info* %call28, i64 0, i32 0, !dbg !2722
  store %union.tree_node* null, %union.tree_node** %current_def, align 8, !dbg !2723
  store i32 %12, i32* %age29, align 4, !dbg !2724
  br label %if.end33, !dbg !2725

if.end33:                                         ; preds = %if.then31, %if.end
  ret %struct.ssa_name_info* %call28, !dbg !2726
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.var_ann_d* @var_ann(%union.tree_node* %t) unnamed_addr #0 !dbg !2727 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2736, metadata !DIExpression()), !dbg !2740
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2741
  %bf.load = load i64, i64* %0, align 8, !dbg !2741
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2741
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !2741
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2741

cond.true:                                        ; preds = %entry
  %ann = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1, !dbg !2741
  %1 = bitcast %union.tree_node** %ann to %struct.var_ann_d**, !dbg !2741
  br label %cond.end19, !dbg !2741

cond.false:                                       ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 34, !dbg !2741
  br i1 %cmp5, label %cond.true6, label %cond.false8, !dbg !2741

cond.true6:                                       ; preds = %cond.false
  %ann7 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !2741
  %2 = bitcast %union.tree_node** %ann7 to %struct.var_ann_d**, !dbg !2741
  br label %cond.end19, !dbg !2741

cond.false8:                                      ; preds = %cond.false
  %cmp13 = icmp eq i64 %bf.cast1, 36, !dbg !2741
  %ann15 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !2741
  %3 = bitcast %union.tree_node** %ann15 to %struct.var_ann_d**, !dbg !2741
  %cond = select i1 %cmp13, %struct.var_ann_d** %3, %struct.var_ann_d** null, !dbg !2741
  br label %cond.end19, !dbg !2741

cond.end19:                                       ; preds = %cond.true6, %cond.false8, %cond.true
  %cond20 = phi %struct.var_ann_d** [ %1, %cond.true ], [ %2, %cond.true6 ], [ %cond, %cond.false8 ], !dbg !2741
  call void @llvm.dbg.value(metadata %struct.var_ann_d** %cond20, metadata !2737, metadata !DIExpression()), !dbg !2740
  %tobool = icmp eq %struct.var_ann_d** %cond20, null, !dbg !2742
  br i1 %tobool, label %cond.end23, label %cond.true21, !dbg !2742

cond.true21:                                      ; preds = %cond.end19
  %4 = load %struct.var_ann_d*, %struct.var_ann_d** %cond20, align 8, !dbg !2743
  br label %cond.end23, !dbg !2742

cond.end23:                                       ; preds = %cond.end19, %cond.true21
  %cond24 = phi %struct.var_ann_d* [ %4, %cond.true21 ], [ null, %cond.end19 ], !dbg !2742
  ret %struct.var_ann_d* %cond24, !dbg !2744
}

; Function Attrs: nounwind uwtable
define dso_local void @set_current_def(%union.tree_node* %var, %union.tree_node* %def) local_unnamed_addr #5 !dbg !2745 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !2749, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !2750, metadata !DIExpression()), !dbg !2751
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2752
  %bf.load = load i64, i64* %0, align 8, !dbg !2752
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2754
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !2754
  br i1 %cmp, label %if.then, label %if.else, !dbg !2755

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.ssa_name_info* @get_ssa_name_ann(%union.tree_node* %var) #7, !dbg !2756
  %current_def = getelementptr inbounds %struct.ssa_name_info, %struct.ssa_name_info* %call, i64 0, i32 0, !dbg !2757
  store %union.tree_node* %def, %union.tree_node** %current_def, align 8, !dbg !2758
  br label %if.end, !dbg !2756

if.else:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.var_ann_d* @var_ann(%union.tree_node* %var) #7, !dbg !2759
  %current_def2 = getelementptr inbounds %struct.var_ann_d, %struct.var_ann_d* %call1, i64 0, i32 2, !dbg !2760
  store %union.tree_node* %def, %union.tree_node** %current_def2, align 8, !dbg !2761
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2762
}

; Function Attrs: nounwind uwtable
define dso_local void @compute_global_livein(%struct.bitmap_head_def* %livein, %struct.bitmap_head_def* %def_blocks) local_unnamed_addr #5 !dbg !2763 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %livein, metadata !2767, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %def_blocks, metadata !2768, metadata !DIExpression()), !dbg !2795
  %0 = bitcast i32* %i to i8*, !dbg !2796
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !2796
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !2797
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !2797
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2798
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !2798
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2798
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 5, !dbg !2798
  %4 = load i32, i32* %x_last_basic_block, align 8, !dbg !2798
  %add = add nsw i32 %4, 1, !dbg !2799
  %conv = sext i32 %add to i64, !dbg !2800
  %mul = shl nsw i64 %conv, 3, !dbg !2801
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !2802
  %5 = bitcast i8* %call to %struct.basic_block_def**, !dbg !2803
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %5, metadata !2770, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %5, metadata !2771, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.value(metadata i32* %i, metadata !2772, metadata !DIExpression(DW_OP_deref)), !dbg !2795
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2773, metadata !DIExpression(DW_OP_deref)), !dbg !2795
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %livein, i32 0, i32* nonnull %i) #7, !dbg !2804
  br label %for.cond, !dbg !2804

for.cond:                                         ; preds = %cond.end, %entry
  %tos.0 = phi %struct.basic_block_def** [ %5, %entry ], [ %incdec.ptr, %cond.end ], !dbg !2795
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %tos.0, metadata !2771, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.value(metadata i32* %i, metadata !2772, metadata !DIExpression(DW_OP_deref)), !dbg !2795
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2773, metadata !DIExpression(DW_OP_deref)), !dbg !2795
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !2806
  %tobool = icmp eq i8 %call1, 0, !dbg !2804
  br i1 %tobool, label %while.cond.preheader, label %for.body, !dbg !2804

while.cond.preheader:                             ; preds = %for.cond
  %tos.0.lcssa = phi %struct.basic_block_def** [ %tos.0, %for.cond ], !dbg !2795
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %tos.0.lcssa, metadata !2771, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %tos.0.lcssa, metadata !2771, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %tos.0.lcssa, metadata !2771, metadata !DIExpression()), !dbg !2795
  %6 = bitcast %struct.edge_def** %e to i8*, !dbg !2808
  %7 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2808
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2809
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !2809
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !2809
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !2810
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !2810
  br label %while.cond, !dbg !2811

for.body:                                         ; preds = %for.cond
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2812
  %cfg3 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !2812
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3, align 8, !dbg !2812
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 2, !dbg !2812
  %15 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !2812
  %tobool4 = icmp eq %struct.VEC_basic_block_gc* %15, null, !dbg !2812
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !2812

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %15, i64 0, i32 0, !dbg !2812
  br label %cond.end, !dbg !2812

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !2812
  %16 = load i32, i32* %i, align 4, !dbg !2812
  call void @llvm.dbg.value(metadata i32 %16, metadata !2772, metadata !DIExpression()), !dbg !2795
  %call8 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %16) #7, !dbg !2812
  %incdec.ptr = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %tos.0, i64 1, !dbg !2813
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %incdec.ptr, metadata !2771, metadata !DIExpression()), !dbg !2795
  store %struct.basic_block_def* %call8, %struct.basic_block_def** %tos.0, align 8, !dbg !2814
  call void @llvm.dbg.value(metadata i32* %i, metadata !2772, metadata !DIExpression(DW_OP_deref)), !dbg !2795
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2773, metadata !DIExpression(DW_OP_deref)), !dbg !2795
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !2806
  br label %for.cond, !dbg !2806, !llvm.loop !2815

while.cond:                                       ; preds = %while.cond.preheader, %for.end28
  %tos.1 = phi %struct.basic_block_def** [ %tos.2.lcssa, %for.end28 ], [ %tos.0.lcssa, %while.cond.preheader ], !dbg !2795
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %tos.1, metadata !2771, metadata !DIExpression()), !dbg !2795
  %cmp = icmp eq %struct.basic_block_def** %tos.1, %5, !dbg !2817
  br i1 %cmp, label %while.end, label %while.body, !dbg !2811

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !2818
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8, !dbg !2819
  %incdec.ptr10 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %tos.1, i64 -1, !dbg !2820
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %incdec.ptr10, metadata !2771, metadata !DIExpression()), !dbg !2795
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %incdec.ptr10, align 8, !dbg !2821
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %17, metadata !2769, metadata !DIExpression()), !dbg !2795
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !2822
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 0, !dbg !2822
  %call11 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !2822
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call11, 0, !dbg !2822
  store i32 %18, i32* %9, align 8, !dbg !2822
  %19 = extractvalue { i32, %struct.VEC_edge_gc** } %call11, 1, !dbg !2822
  store %struct.VEC_edge_gc** %19, %struct.VEC_edge_gc*** %10, align 8, !dbg !2822
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !2822
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !2822
  br label %for.cond12, !dbg !2822

for.cond12:                                       ; preds = %for.inc27, %while.body
  %tos.2 = phi %struct.basic_block_def** [ %incdec.ptr10, %while.body ], [ %tos.3, %for.inc27 ], !dbg !2820
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %tos.2, metadata !2771, metadata !DIExpression()), !dbg !2795
  %20 = load i32, i32* %11, align 8, !dbg !2823
  %21 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !2823
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2781, metadata !DIExpression(DW_OP_deref)), !dbg !2808
  %call13 = call fastcc zeroext i8 @ei_cond(i32 %20, %struct.VEC_edge_gc** %21, %struct.edge_def** nonnull %e) #7, !dbg !2823
  %tobool14 = icmp eq i8 %call13, 0, !dbg !2822
  br i1 %tobool14, label %for.end28, label %for.body15, !dbg !2822

for.body15:                                       ; preds = %for.cond12
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2824
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !2781, metadata !DIExpression()), !dbg !2808
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i64 0, i32 0, !dbg !2825
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !2825
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %23, metadata !2790, metadata !DIExpression()), !dbg !2826
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 9, !dbg !2827
  %24 = load i32, i32* %index, align 8, !dbg !2827
  call void @llvm.dbg.value(metadata i32 %24, metadata !2794, metadata !DIExpression()), !dbg !2826
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2828
  %cfg17 = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, i32 1, !dbg !2828
  %26 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg17, align 8, !dbg !2828
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i64 0, i32 0, !dbg !2828
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2828
  %cmp18 = icmp eq %struct.basic_block_def* %23, %27, !dbg !2830
  br i1 %cmp18, label %for.inc27, label %land.lhs.true, !dbg !2831

land.lhs.true:                                    ; preds = %for.body15
  %call20 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %livein, i32 %24) #6, !dbg !2832
  %tobool21 = icmp eq i32 %call20, 0, !dbg !2832
  br i1 %tobool21, label %land.lhs.true22, label %for.inc27, !dbg !2833

land.lhs.true22:                                  ; preds = %land.lhs.true
  %call23 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %def_blocks, i32 %24) #6, !dbg !2834
  %tobool24 = icmp eq i32 %call23, 0, !dbg !2834
  br i1 %tobool24, label %if.then, label %for.inc27, !dbg !2835

if.then:                                          ; preds = %land.lhs.true22
  %incdec.ptr25 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %tos.2, i64 1, !dbg !2836
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %incdec.ptr25, metadata !2771, metadata !DIExpression()), !dbg !2795
  store %struct.basic_block_def* %23, %struct.basic_block_def** %tos.2, align 8, !dbg !2838
  %call26 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %livein, i32 %24) #6, !dbg !2839
  br label %for.inc27, !dbg !2840

for.inc27:                                        ; preds = %land.lhs.true22, %land.lhs.true, %for.body15, %if.then
  %tos.3 = phi %struct.basic_block_def** [ %tos.2, %land.lhs.true ], [ %tos.2, %land.lhs.true22 ], [ %incdec.ptr25, %if.then ], [ %tos.2, %for.body15 ], !dbg !2808
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %tos.3, metadata !2771, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2783, metadata !DIExpression(DW_OP_deref)), !dbg !2808
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !2823
  br label %for.cond12, !dbg !2823, !llvm.loop !2841

for.end28:                                        ; preds = %for.cond12
  %tos.2.lcssa = phi %struct.basic_block_def** [ %tos.2, %for.cond12 ], !dbg !2820
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %tos.2.lcssa, metadata !2771, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %tos.2.lcssa, metadata !2771, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %tos.2.lcssa, metadata !2771, metadata !DIExpression()), !dbg !2795
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8, !dbg !2843
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !2843
  br label %while.cond, !dbg !2811, !llvm.loop !2844

while.end:                                        ; preds = %while.cond
  call void @free(i8* %call) #6, !dbg !2845
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !2846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !2846
  ret void, !dbg !2846
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !2847 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2856, metadata !DIExpression()), !dbg !2860
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !2857, metadata !DIExpression()), !dbg !2860
  call void @llvm.dbg.value(metadata i32 0, metadata !2858, metadata !DIExpression()), !dbg !2860
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !2859, metadata !DIExpression()), !dbg !2860
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !2861
  %1 = load i64, i64* %0, align 8, !dbg !2861
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !2862
  store i64 %1, i64* %2, align 8, !dbg !2862
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !2863
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !2864
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !2865
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !2868
  br label %while.body, !dbg !2868

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !2869
  br i1 %tobool, label %if.then, label %if.end, !dbg !2870

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !2871
  br label %while.end, !dbg !2873

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !2874

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !2868, !llvm.loop !2875

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !2877

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !2877
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !2879
  %7 = load i32, i32* %indx9, align 8, !dbg !2879
  %cmp11 = icmp eq i32 %7, 0, !dbg !2880
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !2881

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !2882
  %8 = load i32, i32* %indx14, align 8, !dbg !2882
  %mul = shl i32 %8, 7, !dbg !2883
  call void @llvm.dbg.value(metadata i32 %mul, metadata !2858, metadata !DIExpression()), !dbg !2860
  br label %if.end15, !dbg !2884

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !2858, metadata !DIExpression()), !dbg !2860
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !2885
  store i32 0, i32* %word_no, align 8, !dbg !2886
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !2887
  %9 = load i64, i64* %arrayidx, align 8, !dbg !2887
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !2888
  store i64 %9, i64* %bits21, align 8, !dbg !2889
  %tobool23 = icmp eq i64 %9, 0, !dbg !2890
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !2890
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !2891
  call void @llvm.dbg.value(metadata i32 %add, metadata !2858, metadata !DIExpression()), !dbg !2860
  store i32 %add, i32* %bit_no, align 4, !dbg !2892
  ret void, !dbg !2893
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !2894 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2898, metadata !DIExpression()), !dbg !2903
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !2899, metadata !DIExpression()), !dbg !2903
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !2904
  %0 = load i64, i64* %bits, align 8, !dbg !2904
  %tobool = icmp eq i64 %0, 0, !dbg !2905
  br i1 %tobool, label %if.end, label %next_bit, !dbg !2906

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !2907
  br label %next_bit, !dbg !2910

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !2900), !dbg !2911
  br label %while.cond, !dbg !2910

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !2912
  %and = and i64 %2, 1, !dbg !2913
  %tobool2 = icmp eq i64 %and, 0, !dbg !2914
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !2910

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !2915
  store i64 %shr, i64* %bits, align 8, !dbg !2915
  %3 = load i32, i32* %bit_no, align 4, !dbg !2917
  %add = add i32 %3, 1, !dbg !2917
  store i32 %add, i32* %bit_no, align 4, !dbg !2917
  %.pre = load i64, i64* %bits, align 8, !dbg !2912
  br label %while.cond, !dbg !2910, !llvm.loop !2918

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !2920
  %sub = add i32 %4, 63, !dbg !2921
  %div = and i32 %sub, -64, !dbg !2922
  store i32 %div, i32* %bit_no, align 4, !dbg !2923
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !2924
  %5 = load i32, i32* %word_no, align 8, !dbg !2925
  %inc = add i32 %5, 1, !dbg !2925
  store i32 %inc, i32* %word_no, align 8, !dbg !2925
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !2926
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !2926
  br label %while.body6, !dbg !2927

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !2928

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !2929
  %cmp = icmp eq i32 %8, 2, !dbg !2930
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !2926
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !2928

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !2907
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !2907
  %10 = load i64, i64* %arrayidx, align 8, !dbg !2907
  store i64 %10, i64* %bits, align 8, !dbg !2931
  %tobool14 = icmp eq i64 %10, 0, !dbg !2932
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !2934

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !2935
  %add17 = add i32 %11, 64, !dbg !2935
  store i32 %add17, i32* %bit_no, align 4, !dbg !2935
  %12 = load i32, i32* %word_no, align 8, !dbg !2936
  %inc19 = add i32 %12, 1, !dbg !2936
  store i32 %inc19, i32* %word_no, align 8, !dbg !2936
  br label %while.cond7, !dbg !2928, !llvm.loop !2937

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !2926
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !2939
  %14 = load i64, i64* %13, align 8, !dbg !2939
  store i64 %14, i64* %6, align 8, !dbg !2940
  %tobool24 = icmp eq i64 %14, 0, !dbg !2941
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !2943

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !2943
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !2944
  %16 = load i32, i32* %indx, align 8, !dbg !2944
  %mul28 = shl i32 %16, 7, !dbg !2945
  store i32 %mul28, i32* %bit_no, align 4, !dbg !2946
  store i32 0, i32* %word_no, align 8, !dbg !2947
  br label %while.body6, !dbg !2927, !llvm.loop !2948

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !2950

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !2950

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !2903
  ret i8 %retval.0, !dbg !2950
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2951 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !2957, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2958, metadata !DIExpression()), !dbg !2959
  br label %land.end, !dbg !2960

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2960
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2960
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !2960
  ret %struct.basic_block_def* %0, !dbg !2960
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !2961 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2965, metadata !DIExpression()), !dbg !2967
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !2966, metadata !DIExpression()), !dbg !2967
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !2968
  %0 = load i64, i64* %bits, align 8, !dbg !2969
  %shr = lshr i64 %0, 1, !dbg !2969
  store i64 %shr, i64* %bits, align 8, !dbg !2969
  %1 = load i32, i32* %bit_no, align 4, !dbg !2970
  %add = add i32 %1, 1, !dbg !2970
  store i32 %add, i32* %bit_no, align 4, !dbg !2970
  ret void, !dbg !2971
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !2972 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !2976, metadata !DIExpression()), !dbg !2978
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !2979
  store i32 0, i32* %index, align 8, !dbg !2980
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !2981
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !2982
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !2983
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !2983
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !2983
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !2984 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !2990, metadata !DIExpression()), !dbg !2991
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !2992
  %tobool = icmp eq i8 %call, 0, !dbg !2992
  br i1 %tobool, label %if.then, label %if.else, !dbg !2994

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !2995
  br label %return, !dbg !2997

if.else:                                          ; preds = %entry
  br label %return, !dbg !2998

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !3000
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !3000
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !3000
  ret i8 %retval.0, !dbg !3001
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !3002 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !3007, metadata !DIExpression()), !dbg !3008
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !3009
  %0 = load i32, i32* %index, align 8, !dbg !3009
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !3009
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3009
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !3009
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3009
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3009

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !3009
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3009
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !3009
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3009
  br label %cond.end, !dbg !3009

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3009
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3009
  %cmp = icmp ult i32 %0, %call2, !dbg !3009
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !3009

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !3009
  br label %cond.end5, !dbg !3009

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !3010
  %inc = add i32 %5, 1, !dbg !3010
  store i32 %inc, i32* %index, align 8, !dbg !3010
  ret void, !dbg !3011
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dump_decl_set(%struct._IO_FILE* %file, %struct.bitmap_head_def* %set) local_unnamed_addr #5 !dbg !3012 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3016, metadata !DIExpression()), !dbg !3022
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %set, metadata !3017, metadata !DIExpression()), !dbg !3022
  %tobool = icmp eq %struct.bitmap_head_def* %set, null, !dbg !3023
  br i1 %tobool, label %if.else, label %if.then, !dbg !3024

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3025
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3025
  %1 = bitcast i32* %i to i8*, !dbg !3026
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3026
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #6, !dbg !3027
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3018, metadata !DIExpression(DW_OP_deref)), !dbg !3028
  call void @llvm.dbg.value(metadata i32* %i, metadata !3021, metadata !DIExpression(DW_OP_deref)), !dbg !3028
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %set, i32 0, i32* nonnull %i) #7, !dbg !3029
  br label %for.cond, !dbg !3029

for.cond:                                         ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3018, metadata !DIExpression(DW_OP_deref)), !dbg !3028
  call void @llvm.dbg.value(metadata i32* %i, metadata !3021, metadata !DIExpression(DW_OP_deref)), !dbg !3028
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3031
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3029
  br i1 %tobool2, label %for.end, label %for.body, !dbg !3029

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !3033
  call void @llvm.dbg.value(metadata i32 %2, metadata !3021, metadata !DIExpression()), !dbg !3028
  %call3 = call %union.tree_node* @referenced_var_lookup(i32 %2) #6, !dbg !3033
  call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %call3, i32 0) #6, !dbg !3035
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3036
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3018, metadata !DIExpression(DW_OP_deref)), !dbg !3028
  call void @llvm.dbg.value(metadata i32* %i, metadata !3021, metadata !DIExpression(DW_OP_deref)), !dbg !3028
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3031
  br label %for.cond, !dbg !3031, !llvm.loop !3037

for.end:                                          ; preds = %for.cond
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3039
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3040
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3040
  br label %if.end, !dbg !3041

if.else:                                          ; preds = %entry
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3042
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  ret void, !dbg !3043
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @referenced_var_lookup(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_decl_set(%struct.bitmap_head_def* %set) local_unnamed_addr #5 !dbg !3044 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %set, metadata !3048, metadata !DIExpression()), !dbg !3049
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3050
  tail call void @dump_decl_set(%struct._IO_FILE* %0, %struct.bitmap_head_def* %set) #7, !dbg !3051
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3052
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3053
  ret void, !dbg !3054
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_defs_stack(%struct._IO_FILE* %file, i32 %n) local_unnamed_addr #5 !dbg !3055 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3059, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata i32 %n, metadata !3060, metadata !DIExpression()), !dbg !3068
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3069
  %cmp = icmp sgt i32 %n, 0, !dbg !3070
  br i1 %cmp, label %if.then, label %if.end, !dbg !3072

if.then:                                          ; preds = %entry
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i32 %n) #6, !dbg !3073
  br label %if.end, !dbg !3073

if.end:                                           ; preds = %if.then, %entry
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3074
  call void @llvm.dbg.value(metadata i32 1, metadata !3061, metadata !DIExpression()), !dbg !3068
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i32 1) #6, !dbg !3075
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !3076
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !3076
  %call4 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #7, !dbg !3076
  call void @llvm.dbg.value(metadata i32 %call4, metadata !3062, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  br i1 %cmp, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !3077

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %for.cond, !dbg !3077

if.end.split.us:                                  ; preds = %if.end
  br label %for.cond.us, !dbg !3077

for.cond.us:                                      ; preds = %for.inc.us, %if.end.split.us
  %j.0.in.us = phi i32 [ %call4, %if.end.split.us ], [ %j.3.us, %for.inc.us ]
  %i.0.us = phi i32 [ 1, %if.end.split.us ], [ %i.1.us, %for.inc.us ], !dbg !3068
  %j.0.us = add nsw i32 %j.0.in.us, -1, !dbg !3078
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !3061, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata i32 %j.0.us, metadata !3062, metadata !DIExpression()), !dbg !3068
  %cmp5.us = icmp sgt i32 %j.0.in.us, 0, !dbg !3079
  br i1 %cmp5.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !3080

for.body.us:                                      ; preds = %for.cond.us
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !3081
  %base8.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !3081
  %call12.us = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base8.us, i32 %j.0.us) #7, !dbg !3081
  call void @llvm.dbg.value(metadata %union.tree_node* %call12.us, metadata !3063, metadata !DIExpression()), !dbg !3082
  %cmp13.us = icmp eq %union.tree_node* %call12.us, null, !dbg !3083
  br i1 %cmp13.us, label %if.then14.us, label %if.end20.us, !dbg !3085

if.end20.us:                                      ; preds = %for.body.us
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3086
  %bf.load.us = load i64, i64* %2, align 8, !dbg !3086
  %bf.cast.us = and i64 %bf.load.us, 65535, !dbg !3086
  %arrayidx.us = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast.us, !dbg !3086
  %3 = load i32, i32* %arrayidx.us, align 4, !dbg !3086
  %cmp22.us = icmp eq i32 %3, 3, !dbg !3086
  br i1 %cmp22.us, label %if.end36.us, label %if.else.us, !dbg !3088

if.else.us:                                       ; preds = %if.end20.us
  %var24.us = getelementptr inbounds %union.tree_node, %union.tree_node* %call12.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3089
  %4 = bitcast i32* %var24.us to %union.tree_node**, !dbg !3089
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !3089
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !3067, metadata !DIExpression()), !dbg !3082
  %call25.us = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %5) #6, !dbg !3091
  %tobool26.us = icmp eq i8 %call25.us, 0, !dbg !3091
  br i1 %tobool26.us, label %if.then27.us, label %if.end36.us, !dbg !3093

if.then27.us:                                     ; preds = %if.else.us
  %dec.us = add nsw i32 %j.0.in.us, -2, !dbg !3094
  call void @llvm.dbg.value(metadata i32 %dec.us, metadata !3062, metadata !DIExpression()), !dbg !3068
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !3096
  %base30.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %6, i64 0, i32 0, !dbg !3096
  %call34.us = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base30.us, i32 %dec.us) #7, !dbg !3096
  call void @llvm.dbg.value(metadata %union.tree_node* %call34.us, metadata !3067, metadata !DIExpression()), !dbg !3082
  br label %if.end36.us, !dbg !3097

if.end36.us:                                      ; preds = %if.then27.us, %if.else.us, %if.end20.us
  %name.0.us = phi %union.tree_node* [ null, %if.end20.us ], [ %call12.us, %if.then27.us ], [ %call12.us, %if.else.us ], !dbg !3082
  %j.2.us = phi i32 [ %j.0.us, %if.end20.us ], [ %dec.us, %if.then27.us ], [ %j.0.us, %if.else.us ], !dbg !3098
  %var.1.us = phi %union.tree_node* [ %call12.us, %if.end20.us ], [ %call34.us, %if.then27.us ], [ %5, %if.else.us ], !dbg !3099
  call void @llvm.dbg.value(metadata %union.tree_node* %var.1.us, metadata !3067, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata i32 %j.2.us, metadata !3062, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %union.tree_node* %name.0.us, metadata !3063, metadata !DIExpression()), !dbg !3082
  %call37.us = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3100
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %var.1.us, i32 0) #6, !dbg !3101
  %call38.us = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !3102
  %tobool39.us = icmp eq %union.tree_node* %name.0.us, null, !dbg !3103
  br i1 %tobool39.us, label %if.else41.us, label %if.then40.us, !dbg !3105

if.then40.us:                                     ; preds = %if.end36.us
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* nonnull %name.0.us, i32 0) #6, !dbg !3106
  br label %if.end43.us, !dbg !3106

if.else41.us:                                     ; preds = %if.end36.us
  %call42.us = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3107
  br label %if.end43.us

if.end43.us:                                      ; preds = %if.else41.us, %if.then40.us
  %call44.us = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3108
  br label %cleanup.us, !dbg !3109

if.then14.us:                                     ; preds = %for.body.us
  %inc.us = add nsw i32 %i.0.us, 1, !dbg !3110
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !3061, metadata !DIExpression()), !dbg !3068
  %cmp16.us = icmp slt i32 %i.0.us, %n, !dbg !3112
  br i1 %cmp16.us, label %if.end18.us, label %cleanup.us, !dbg !3114

if.end18.us:                                      ; preds = %if.then14.us
  %call19.us = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i32 %inc.us) #6, !dbg !3115
  br label %cleanup.us, !dbg !3116

cleanup.us:                                       ; preds = %if.then14.us, %if.end18.us, %if.end43.us
  %j.3.us = phi i32 [ %j.0.us, %if.end18.us ], [ %j.2.us, %if.end43.us ], [ %j.0.us, %if.then14.us ], !dbg !3098
  %i.1.us = phi i32 [ %inc.us, %if.end18.us ], [ %i.0.us, %if.end43.us ], [ %inc.us, %if.then14.us ], !dbg !3068
  %cleanup.dest.slot.0.us = phi i1 [ false, %if.end18.us ], [ false, %if.end43.us ], [ true, %if.then14.us ]
  call void @llvm.dbg.value(metadata i32 %i.1.us, metadata !3061, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata i32 %j.3.us, metadata !3062, metadata !DIExpression()), !dbg !3068
  br i1 %cleanup.dest.slot.0.us, label %for.end.us-lcssa.us, label %for.inc.us

for.inc.us:                                       ; preds = %cleanup.us
  call void @llvm.dbg.value(metadata i32 %j.3.us, metadata !3062, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  br label %for.cond.us, !dbg !3117, !llvm.loop !3118

for.end.us-lcssa.us:                              ; preds = %cleanup.us, %for.cond.us
  br label %for.end, !dbg !3120

for.cond:                                         ; preds = %cleanup, %if.end.if.end.split_crit_edge
  %j.0.in = phi i32 [ %call4, %if.end.if.end.split_crit_edge ], [ %j.3, %cleanup ]
  %i.0 = phi i32 [ 1, %if.end.if.end.split_crit_edge ], [ %i.1, %cleanup ], !dbg !3068
  %j.0 = add nsw i32 %j.0.in, -1, !dbg !3078
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3061, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3062, metadata !DIExpression()), !dbg !3068
  %cmp5 = icmp sgt i32 %j.0.in, 0, !dbg !3079
  br i1 %cmp5, label %for.body, label %for.end.us-lcssa, !dbg !3080

for.body:                                         ; preds = %for.cond
  %7 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !3081
  %base8 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %7, i64 0, i32 0, !dbg !3081
  %call12 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base8, i32 %j.0) #7, !dbg !3081
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !3063, metadata !DIExpression()), !dbg !3082
  %cmp13 = icmp eq %union.tree_node* %call12, null, !dbg !3083
  br i1 %cmp13, label %if.then14, label %if.end20, !dbg !3085

if.then14:                                        ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !3110
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3061, metadata !DIExpression()), !dbg !3068
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i32 %inc) #6, !dbg !3115
  br label %cleanup, !dbg !3116

if.end20:                                         ; preds = %for.body
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3086
  %bf.load = load i64, i64* %8, align 8, !dbg !3086
  %bf.cast = and i64 %bf.load, 65535, !dbg !3086
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3086
  %9 = load i32, i32* %arrayidx, align 4, !dbg !3086
  %cmp22 = icmp eq i32 %9, 3, !dbg !3086
  br i1 %cmp22, label %if.end36, label %if.else, !dbg !3088

if.else:                                          ; preds = %if.end20
  %var24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3089
  %10 = bitcast i32* %var24 to %union.tree_node**, !dbg !3089
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !3089
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !3067, metadata !DIExpression()), !dbg !3082
  %call25 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %11) #6, !dbg !3091
  %tobool26 = icmp eq i8 %call25, 0, !dbg !3091
  br i1 %tobool26, label %if.then27, label %if.end36, !dbg !3093

if.then27:                                        ; preds = %if.else
  %dec = add nsw i32 %j.0.in, -2, !dbg !3094
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3062, metadata !DIExpression()), !dbg !3068
  %12 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !3096
  %base30 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %12, i64 0, i32 0, !dbg !3096
  %call34 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base30, i32 %dec) #7, !dbg !3096
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !3067, metadata !DIExpression()), !dbg !3082
  br label %if.end36, !dbg !3097

if.end36:                                         ; preds = %if.else, %if.then27, %if.end20
  %name.0 = phi %union.tree_node* [ null, %if.end20 ], [ %call12, %if.then27 ], [ %call12, %if.else ], !dbg !3082
  %j.2 = phi i32 [ %j.0, %if.end20 ], [ %dec, %if.then27 ], [ %j.0, %if.else ], !dbg !3098
  %var.1 = phi %union.tree_node* [ %call12, %if.end20 ], [ %call34, %if.then27 ], [ %11, %if.else ], !dbg !3099
  call void @llvm.dbg.value(metadata %union.tree_node* %var.1, metadata !3067, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.value(metadata i32 %j.2, metadata !3062, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata %union.tree_node* %name.0, metadata !3063, metadata !DIExpression()), !dbg !3082
  %call37 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3100
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %var.1, i32 0) #6, !dbg !3101
  %call38 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !3102
  %tobool39 = icmp eq %union.tree_node* %name.0, null, !dbg !3103
  br i1 %tobool39, label %if.else41, label %if.then40, !dbg !3105

if.then40:                                        ; preds = %if.end36
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* nonnull %name.0, i32 0) #6, !dbg !3106
  br label %if.end43, !dbg !3106

if.else41:                                        ; preds = %if.end36
  %call42 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3107
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.then40
  %call44 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3108
  br label %cleanup, !dbg !3109

cleanup:                                          ; preds = %if.end43, %if.then14
  %j.3 = phi i32 [ %j.0, %if.then14 ], [ %j.2, %if.end43 ], !dbg !3098
  %i.1 = phi i32 [ %inc, %if.then14 ], [ %i.0, %if.end43 ], !dbg !3068
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3061, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata i32 %j.3, metadata !3062, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.value(metadata i32 %j.3, metadata !3062, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3068
  br label %for.cond, !dbg !3117, !llvm.loop !3118

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !3120

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  ret void, !dbg !3120
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !3121 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3127, metadata !DIExpression()), !dbg !3128
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !3129
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3129

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !3129
  %0 = load i32, i32* %num, align 8, !dbg !3129
  br label %cond.end, !dbg !3129

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3129
  ret i32 %cond, !dbg !3129
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3130 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3134, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3135, metadata !DIExpression()), !dbg !3136
  br label %land.end, !dbg !3137

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3137
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3137
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3137
  ret %union.tree_node* %0, !dbg !3137
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_defs_stack(i32 %n) local_unnamed_addr #5 !dbg !3138 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, metadata !3142, metadata !DIExpression()), !dbg !3143
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3144
  tail call void @dump_defs_stack(%struct._IO_FILE* %0, i32 %n) #7, !dbg !3145
  ret void, !dbg !3146
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_currdefs(%struct._IO_FILE* %file) local_unnamed_addr #5 !dbg !3147 {
entry:
  %i = alloca %struct.referenced_var_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3151, metadata !DIExpression()), !dbg !3164
  %0 = bitcast %struct.referenced_var_iterator* %i to i8*, !dbg !3165
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3165
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3166
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %i, metadata !3152, metadata !DIExpression(DW_OP_deref)), !dbg !3164
  %call1 = call fastcc %union.tree_node* @first_referenced_var(%struct.referenced_var_iterator* nonnull %i) #7, !dbg !3167
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3163, metadata !DIExpression()), !dbg !3164
  br label %for.cond, !dbg !3167

for.cond:                                         ; preds = %for.inc, %entry
  %var.0 = phi %union.tree_node* [ %call1, %entry ], [ %call17, %for.inc ], !dbg !3169
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !3163, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %i, metadata !3152, metadata !DIExpression(DW_OP_deref)), !dbg !3164
  %call2 = call fastcc zeroext i8 @end_referenced_vars_p(%struct.referenced_var_iterator* nonnull %i) #7, !dbg !3170
  %tobool = icmp eq i8 %call2, 0, !dbg !3170
  br i1 %tobool, label %for.body, label %for.end, !dbg !3167

for.body:                                         ; preds = %for.cond
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3172
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 3, !dbg !3172
  %2 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3172
  %syms_to_rename = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %2, i64 0, i32 9, !dbg !3172
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %syms_to_rename, align 8, !dbg !3172
  %cmp = icmp eq %struct.bitmap_head_def* %3, null, !dbg !3174
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3175

lor.lhs.false:                                    ; preds = %for.body
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3176
  %4 = load i32, i32* %uid, align 4, !dbg !3176
  %call6 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %3, i32 %4) #6, !dbg !3177
  %tobool7 = icmp eq i32 %call6, 0, !dbg !3177
  br i1 %tobool7, label %for.inc, label %if.then, !dbg !3178

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !3179
  call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %var.0, i32 0) #6, !dbg !3181
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !3182
  %call10 = call %union.tree_node* @get_current_def(%union.tree_node* %var.0) #7, !dbg !3183
  %tobool11 = icmp eq %union.tree_node* %call10, null, !dbg !3183
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !3185

if.then12:                                        ; preds = %if.then
  %call13 = call %union.tree_node* @get_current_def(%union.tree_node* %var.0) #7, !dbg !3186
  call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %call13, i32 0) #6, !dbg !3187
  br label %if.end, !dbg !3187

if.else:                                          ; preds = %if.then
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3188
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3189
  br label %for.inc, !dbg !3190

for.inc:                                          ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %i, metadata !3152, metadata !DIExpression(DW_OP_deref)), !dbg !3164
  %call17 = call fastcc %union.tree_node* @next_referenced_var(%struct.referenced_var_iterator* nonnull %i) #7, !dbg !3170
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !3163, metadata !DIExpression()), !dbg !3164
  br label %for.cond, !dbg !3170, !llvm.loop !3191

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3193
  ret void, !dbg !3193
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @first_referenced_var(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !3194 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !3199, metadata !DIExpression()), !dbg !3200
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !3201
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3202
  %call = tail call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %0) #7, !dbg !3203
  %call1 = tail call fastcc i8* @first_htab_element(%struct.htab_iterator* %hti, %struct.htab* %call) #7, !dbg !3204
  %1 = bitcast i8* %call1 to %union.tree_node*, !dbg !3205
  ret %union.tree_node* %1, !dbg !3206
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_referenced_vars_p(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !3207 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !3213, metadata !DIExpression()), !dbg !3214
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !3215
  %call = tail call fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* %hti) #7, !dbg !3216
  ret i8 %call, !dbg !3217
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @next_referenced_var(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !3218 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !3220, metadata !DIExpression()), !dbg !3221
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !3222
  %call = tail call fastcc i8* @next_htab_element(%struct.htab_iterator* %hti) #7, !dbg !3223
  %0 = bitcast i8* %call to %union.tree_node*, !dbg !3224
  ret %union.tree_node* %0, !dbg !3225
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_currdefs() local_unnamed_addr #5 !dbg !3226 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3229
  tail call void @dump_currdefs(%struct._IO_FILE* %0) #7, !dbg !3230
  ret void, !dbg !3231
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_tree_ssa(%struct._IO_FILE* %file) local_unnamed_addr #5 !dbg !3232 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3234, metadata !DIExpression()), !dbg !3236
  %0 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 22), align 8, !dbg !3237
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3238
  %call = tail call i8* %0(%union.tree_node* %1, i32 2) #6, !dbg !3239
  call void @llvm.dbg.value(metadata i8* %call, metadata !3235, metadata !DIExpression()), !dbg !3236
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0), i8* %call) #6, !dbg !3240
  tail call void @dump_def_blocks(%struct._IO_FILE* %file) #7, !dbg !3241
  tail call void @dump_defs_stack(%struct._IO_FILE* %file, i32 -1) #7, !dbg !3242
  tail call void @dump_currdefs(%struct._IO_FILE* %file) #7, !dbg !3243
  tail call void @dump_tree_ssa_stats(%struct._IO_FILE* %file) #7, !dbg !3244
  ret void, !dbg !3245
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_def_blocks(%struct._IO_FILE* %file) local_unnamed_addr #5 !dbg !3246 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3248, metadata !DIExpression()), !dbg !3249
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !3250
  %0 = load %struct.htab*, %struct.htab** @def_blocks, align 8, !dbg !3251
  %tobool = icmp eq %struct.htab* %0, null, !dbg !3251
  br i1 %tobool, label %if.end, label %if.then, !dbg !3253

if.then:                                          ; preds = %entry
  %1 = bitcast %struct._IO_FILE* %file to i8*, !dbg !3254
  tail call void @htab_traverse(%struct.htab* nonnull %0, i32 (i8**, i8*)* nonnull @debug_def_blocks_r, i8* %1) #6, !dbg !3255
  br label %if.end, !dbg !3255

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3256
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_tree_ssa_stats(%struct._IO_FILE* %file) local_unnamed_addr #5 !dbg !3257 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3259, metadata !DIExpression()), !dbg !3260
  %0 = load %struct.htab*, %struct.htab** @def_blocks, align 8, !dbg !3261
  %tobool = icmp ne %struct.htab* %0, null, !dbg !3261
  %1 = load %struct.htab*, %struct.htab** @repl_tbl, align 8, !dbg !3263
  %tobool1 = icmp ne %struct.htab* %1, null, !dbg !3263
  %or.cond = or i1 %tobool, %tobool1, !dbg !3264
  br i1 %or.cond, label %if.then, label %if.end, !dbg !3264

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !3265
  %.pre = load %struct.htab*, %struct.htab** @def_blocks, align 8, !dbg !3266
  %phitmp = icmp eq %struct.htab* %.pre, null, !dbg !3265
  br label %if.end, !dbg !3265

if.end:                                           ; preds = %entry, %if.then
  %2 = phi i1 [ true, %entry ], [ %phitmp, %if.then ]
  br i1 %2, label %if.end5, label %if.then3, !dbg !3268

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !3269
  %3 = load %struct.htab*, %struct.htab** @def_blocks, align 8, !dbg !3271
  tail call fastcc void @htab_statistics(%struct._IO_FILE* %file, %struct.htab* %3) #7, !dbg !3272
  br label %if.end5, !dbg !3273

if.end5:                                          ; preds = %if.end, %if.then3
  %4 = load %struct.htab*, %struct.htab** @repl_tbl, align 8, !dbg !3274
  %tobool6 = icmp eq %struct.htab* %4, null, !dbg !3274
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !3276

if.then7:                                         ; preds = %if.end5
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !3277
  %5 = load %struct.htab*, %struct.htab** @repl_tbl, align 8, !dbg !3279
  tail call fastcc void @htab_statistics(%struct._IO_FILE* %file, %struct.htab* %5) #7, !dbg !3280
  %.pre2 = load %struct.htab*, %struct.htab** @repl_tbl, align 8, !dbg !3281
  %phitmp3 = icmp ne %struct.htab* %.pre2, null, !dbg !3283
  br label %if.end9, !dbg !3283

if.end9:                                          ; preds = %if.end5, %if.then7
  %6 = phi i1 [ false, %if.end5 ], [ %phitmp3, %if.then7 ]
  %7 = load %struct.htab*, %struct.htab** @def_blocks, align 8, !dbg !3284
  %tobool10 = icmp ne %struct.htab* %7, null, !dbg !3284
  %or.cond1 = or i1 %tobool10, %6, !dbg !3285
  br i1 %or.cond1, label %if.then13, label %if.end15, !dbg !3285

if.then13:                                        ; preds = %if.end9
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3286
  br label %if.end15, !dbg !3286

if.end15:                                         ; preds = %if.end9, %if.then13
  ret void, !dbg !3287
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_tree_ssa() local_unnamed_addr #5 !dbg !3288 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3289
  tail call void @dump_tree_ssa(%struct._IO_FILE* %0) #7, !dbg !3290
  ret void, !dbg !3291
}

; Function Attrs: nounwind uwtable
define internal fastcc void @htab_statistics(%struct._IO_FILE* %file, %struct.htab* %htab) unnamed_addr #5 !dbg !3292 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3296, metadata !DIExpression()), !dbg !3298
  call void @llvm.dbg.value(metadata %struct.htab* %htab, metadata !3297, metadata !DIExpression()), !dbg !3298
  %call = tail call i64 @htab_size(%struct.htab* %htab) #6, !dbg !3299
  %call1 = tail call i64 @htab_elements(%struct.htab* %htab) #6, !dbg !3300
  %call2 = tail call double @htab_collisions(%struct.htab* %htab) #6, !dbg !3301
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.39, i64 0, i64 0), i64 %call, i64 %call1, double %call2) #6, !dbg !3302
  ret void, !dbg !3303
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_tree_ssa_stats() local_unnamed_addr #5 !dbg !3304 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3305
  tail call void @dump_tree_ssa_stats(%struct._IO_FILE* %0) #7, !dbg !3306
  ret void, !dbg !3307
}

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @debug_def_blocks_r(i8** %slot, i8* %data) #5 !dbg !3308 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !3312, metadata !DIExpression()), !dbg !3316
  call void @llvm.dbg.value(metadata i8* %data, metadata !3313, metadata !DIExpression()), !dbg !3316
  %0 = bitcast i8* %data to %struct._IO_FILE*, !dbg !3317
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, metadata !3314, metadata !DIExpression()), !dbg !3316
  %1 = bitcast i8** %slot to %struct.def_blocks_d**, !dbg !3318
  %2 = load %struct.def_blocks_d*, %struct.def_blocks_d** %1, align 8, !dbg !3318
  call void @llvm.dbg.value(metadata %struct.def_blocks_d* %2, metadata !3315, metadata !DIExpression()), !dbg !3316
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !3319
  %var = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %2, i64 0, i32 0, !dbg !3320
  %3 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !3320
  %4 = load i32, i32* @dump_flags, align 4, !dbg !3321
  tail call void @print_generic_expr(%struct._IO_FILE* %0, %union.tree_node* %3, i32 %4) #6, !dbg !3322
  %def_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %2, i64 0, i32 1, !dbg !3323
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def_blocks, align 8, !dbg !3323
  tail call void @bitmap_print(%struct._IO_FILE* %0, %struct.bitmap_head_def* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3324
  %livein_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %2, i64 0, i32 3, !dbg !3325
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %livein_blocks, align 8, !dbg !3325
  tail call void @bitmap_print(%struct._IO_FILE* %0, %struct.bitmap_head_def* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3326
  %phi_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %2, i64 0, i32 2, !dbg !3327
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %phi_blocks, align 8, !dbg !3327
  tail call void @bitmap_print(%struct._IO_FILE* %0, %struct.bitmap_head_def* %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !3328
  ret i32 1, !dbg !3329
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_def_blocks() local_unnamed_addr #5 !dbg !3330 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3331
  tail call void @dump_def_blocks(%struct._IO_FILE* %0) #7, !dbg !3332
  ret void, !dbg !3333
}

; Function Attrs: nounwind uwtable
define internal i32 @rewrite_into_ssa() #5 !dbg !3334 {
entry:
  %0 = load i8, i8* @timevar_enable, align 1, !dbg !3338
  %tobool = icmp eq i8 %0, 0, !dbg !3338
  br i1 %tobool, label %do.end, label %if.then, !dbg !3341

if.then:                                          ; preds = %entry
  tail call void @timevar_push_1(i32 59) #6, !dbg !3338
  br label %do.end, !dbg !3338

do.end:                                           ; preds = %entry, %if.then
  tail call void @init_ssa_operands() #6, !dbg !3342
  tail call fastcc void @init_ssa_renamer() #7, !dbg !3343
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3344
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !3344
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3344
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 5, !dbg !3344
  %3 = load i32, i32* %x_last_basic_block, align 8, !dbg !3344
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %3) #6, !dbg !3345
  store %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def** @interesting_blocks, align 8, !dbg !3346
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !3347
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3348
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !3348
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !3348
  %x_last_basic_block3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 5, !dbg !3348
  %6 = load i32, i32* %x_last_basic_block3, align 8, !dbg !3348
  %conv = sext i32 %6 to i64, !dbg !3348
  %mul = shl nsw i64 %conv, 3, !dbg !3348
  %call4 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !3348
  %7 = bitcast i8* %call4 to %struct.bitmap_head_def**, !dbg !3348
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %7, metadata !3336, metadata !DIExpression()), !dbg !3349
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3350
  %cfg6 = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !3350
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg6, align 8, !dbg !3350
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 0, !dbg !3350
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3350
  br label %for.cond, !dbg !3350

for.cond:                                         ; preds = %for.body, %do.end
  %11 = phi %struct.control_flow_graph* [ %9, %do.end ], [ %.pre2, %for.body ], !dbg !3352
  %.pn = phi %struct.basic_block_def* [ %10, %do.end ], [ %bb.0, %for.body ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3354
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3354
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3337, metadata !DIExpression()), !dbg !3349
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 1, !dbg !3352
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3352
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %12, !dbg !3352
  br i1 %cmp, label %for.end, label %for.body, !dbg !3350

for.body:                                         ; preds = %for.cond
  %call10 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3355
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3356
  %13 = load i32, i32* %index, align 8, !dbg !3356
  %idxprom = sext i32 %13 to i64, !dbg !3357
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %7, i64 %idxprom, !dbg !3357
  store %struct.bitmap_head_def* %call10, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !3358
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3352
  %cfg8.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3359
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8.phi.trans.insert, align 8, !dbg !3352
  br label %for.cond, !dbg !3352, !llvm.loop !3360

for.end:                                          ; preds = %for.cond
  tail call void @calculate_dominance_info(i32 1) #6, !dbg !3362
  tail call void @compute_dominance_frontiers(%struct.bitmap_head_def** %7) #6, !dbg !3363
  tail call fastcc void @mark_def_site_blocks() #7, !dbg !3364
  tail call fastcc void @insert_phi_nodes(%struct.bitmap_head_def** %7) #7, !dbg !3365
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3366
  %cfg13 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !3366
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg13, align 8, !dbg !3366
  %x_entry_block_ptr14 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 0, !dbg !3366
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr14, align 8, !dbg !3366
  tail call fastcc void @rewrite_blocks(%struct.basic_block_def* %16, i32 0) #7, !dbg !3367
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3368
  %cfg16 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !3368
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg16, align 8, !dbg !3368
  %x_entry_block_ptr17 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 0, !dbg !3368
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr17, align 8, !dbg !3368
  br label %for.cond19, !dbg !3368

for.cond19:                                       ; preds = %for.body25, %for.end
  %20 = phi %struct.control_flow_graph* [ %18, %for.end ], [ %.pre4, %for.body25 ], !dbg !3370
  %.pn1 = phi %struct.basic_block_def* [ %19, %for.end ], [ %bb.1, %for.body25 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn1, i64 0, i32 6, !dbg !3372
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !3372
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !3337, metadata !DIExpression()), !dbg !3349
  %x_exit_block_ptr22 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 1, !dbg !3370
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr22, align 8, !dbg !3370
  %cmp23 = icmp eq %struct.basic_block_def* %bb.1, %21, !dbg !3370
  br i1 %cmp23, label %for.end34, label %for.body25, !dbg !3368

for.body25:                                       ; preds = %for.cond19
  %index26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !3373
  %22 = load i32, i32* %index26, align 8, !dbg !3373
  %idxprom27 = sext i32 %22 to i64, !dbg !3373
  %arrayidx28 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %7, i64 %idxprom27, !dbg !3373
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx28, align 8, !dbg !3373
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %23) #6, !dbg !3373
  %24 = load i32, i32* %index26, align 8, !dbg !3373
  %idxprom30 = sext i32 %24 to i64, !dbg !3373
  %arrayidx31 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %7, i64 %idxprom30, !dbg !3373
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx31, align 8, !dbg !3373
  %.pre3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3370
  %cfg21.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre3, i64 0, i32 1, !dbg !3374
  %.pre4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg21.phi.trans.insert, align 8, !dbg !3370
  br label %for.cond19, !dbg !3370, !llvm.loop !3375

for.end34:                                        ; preds = %for.cond19
  tail call void @free(i8* %call4) #6, !dbg !3377
  %25 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @interesting_blocks, align 8, !dbg !3378
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %25, i64 0, i32 0, !dbg !3378
  %26 = load i8*, i8** %popcount, align 8, !dbg !3378
  tail call void @free(i8* %26) #6, !dbg !3378
  %27 = load i8*, i8** bitcast (%struct.simple_bitmap_def** @interesting_blocks to i8**), align 8, !dbg !3378
  tail call void @free(i8* %27) #6, !dbg !3378
  tail call fastcc void @fini_ssa_renamer() #7, !dbg !3379
  %28 = load i8, i8* @timevar_enable, align 1, !dbg !3380
  %tobool36 = icmp eq i8 %28, 0, !dbg !3380
  br i1 %tobool36, label %do.end40, label %if.then37, !dbg !3383

if.then37:                                        ; preds = %for.end34
  tail call void @timevar_pop_1(i32 59) #6, !dbg !3380
  br label %do.end40, !dbg !3380

do.end40:                                         ; preds = %for.end34, %if.then37
  ret i32 0, !dbg !3384
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_names_replaced_by(%struct._IO_FILE* %file, %union.tree_node* %name) local_unnamed_addr #5 !dbg !3385 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3389, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3390, metadata !DIExpression()), !dbg !3394
  %0 = bitcast i32* %i to i8*, !dbg !3395
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3395
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3396
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !3396
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %name, i32 0) #6, !dbg !3397
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !3398
  %call1 = tail call fastcc %struct.bitmap_head_def* @names_replaced_by(%union.tree_node* %name) #7, !dbg !3399
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !3392, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata i32* %i, metadata !3391, metadata !DIExpression(DW_OP_deref)), !dbg !3394
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3393, metadata !DIExpression(DW_OP_deref)), !dbg !3394
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call1, i32 0, i32* nonnull %i) #7, !dbg !3400
  br label %for.cond, !dbg !3400

for.cond:                                         ; preds = %cond.end, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !3391, metadata !DIExpression(DW_OP_deref)), !dbg !3394
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3393, metadata !DIExpression(DW_OP_deref)), !dbg !3394
  %call2 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3402
  %tobool = icmp eq i8 %call2, 0, !dbg !3400
  br i1 %tobool, label %for.end, label %for.body, !dbg !3400

for.body:                                         ; preds = %for.cond
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3404
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 3, !dbg !3404
  %3 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3404
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %3, i64 0, i32 2, !dbg !3404
  %4 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3404
  %tobool3 = icmp eq %struct.VEC_tree_gc* %4, null, !dbg !3404
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3404

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %4, i64 0, i32 0, !dbg !3404
  br label %cond.end, !dbg !3404

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !3404
  %5 = load i32, i32* %i, align 4, !dbg !3404
  call void @llvm.dbg.value(metadata i32 %5, metadata !3391, metadata !DIExpression()), !dbg !3394
  %call7 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %5) #7, !dbg !3404
  call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %call7, i32 0) #6, !dbg !3406
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3407
  call void @llvm.dbg.value(metadata i32* %i, metadata !3391, metadata !DIExpression(DW_OP_deref)), !dbg !3394
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3393, metadata !DIExpression(DW_OP_deref)), !dbg !3394
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3402
  br label %for.cond, !dbg !3402, !llvm.loop !3408

for.end:                                          ; preds = %for.cond
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !3410
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !3411
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3411
  ret void, !dbg !3411
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.bitmap_head_def* @names_replaced_by(%union.tree_node* %new_tree) unnamed_addr #0 !dbg !3412 {
entry:
  %m = alloca %struct.repl_map_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree, metadata !3416, metadata !DIExpression()), !dbg !3419
  %0 = bitcast %struct.repl_map_d* %m to i8*, !dbg !3420
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3420
  %name = getelementptr inbounds %struct.repl_map_d, %struct.repl_map_d* %m, i64 0, i32 0, !dbg !3421
  store %union.tree_node* %new_tree, %union.tree_node** %name, align 8, !dbg !3422
  %1 = load %struct.htab*, %struct.htab** @repl_tbl, align 8, !dbg !3423
  %call = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 0) #6, !dbg !3424
  call void @llvm.dbg.value(metadata i8** %call, metadata !3418, metadata !DIExpression()), !dbg !3419
  %cmp = icmp eq i8** %call, null, !dbg !3425
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !3427

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8*, i8** %call, align 8, !dbg !3428
  %cmp1 = icmp eq i8* %2, null, !dbg !3429
  br i1 %cmp1, label %cleanup, label %if.end, !dbg !3430

if.end:                                           ; preds = %lor.lhs.false
  %set = getelementptr inbounds i8, i8* %2, i64 8, !dbg !3431
  %3 = bitcast i8* %set to %struct.bitmap_head_def**, !dbg !3431
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %3, align 8, !dbg !3431
  br label %cleanup, !dbg !3432

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end
  %retval.0 = phi %struct.bitmap_head_def* [ %4, %if.end ], [ null, %lor.lhs.false ], [ null, %entry ], !dbg !3419
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3433
  ret %struct.bitmap_head_def* %retval.0, !dbg !3433
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_names_replaced_by(%union.tree_node* %name) local_unnamed_addr #5 !dbg !3434 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3438, metadata !DIExpression()), !dbg !3439
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3440
  tail call void @dump_names_replaced_by(%struct._IO_FILE* %0, %union.tree_node* %name) #7, !dbg !3441
  ret void, !dbg !3442
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_update_ssa(%struct._IO_FILE* %file) local_unnamed_addr #5 !dbg !3443 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %sbi = alloca %struct.sbitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3445, metadata !DIExpression()), !dbg !3461
  %0 = bitcast i32* %i to i8*, !dbg !3462
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3462
  call void @llvm.dbg.value(metadata i32 0, metadata !3446, metadata !DIExpression()), !dbg !3461
  store i32 0, i32* %i, align 4, !dbg !3463
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3464
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !3464
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3465
  %call = tail call zeroext i8 @need_ssa_update_p(%struct.function* %2) #7, !dbg !3467
  %tobool = icmp eq i8 %call, 0, !dbg !3467
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3468

if.end:                                           ; preds = %entry
  %3 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !3469
  %tobool1 = icmp eq %struct.simple_bitmap_def* %3, null, !dbg !3469
  br i1 %tobool1, label %if.end19, label %land.lhs.true, !dbg !3470

land.lhs.true:                                    ; preds = %if.end
  %call2 = tail call i32 @sbitmap_first_set_bit(%struct.simple_bitmap_def* nonnull %3) #6, !dbg !3471
  %cmp = icmp sgt i32 %call2, -1, !dbg !3472
  br i1 %cmp, label %if.then3, label %if.end19, !dbg !3473

if.then3:                                         ; preds = %land.lhs.true
  %4 = bitcast %struct.sbitmap_iterator* %sbi to i8*, !dbg !3474
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #8, !dbg !3474
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !3475
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !3476
  %5 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !3477
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3448, metadata !DIExpression(DW_OP_deref)), !dbg !3479
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %5, i32 0) #7, !dbg !3477
  br label %for.cond, !dbg !3477

for.cond:                                         ; preds = %cond.end, %if.then3
  call void @llvm.dbg.value(metadata i32* %i, metadata !3446, metadata !DIExpression(DW_OP_deref)), !dbg !3461
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3448, metadata !DIExpression(DW_OP_deref)), !dbg !3479
  %call6 = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %i) #7, !dbg !3480
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3477
  br i1 %tobool7, label %for.end, label %for.body, !dbg !3477

for.body:                                         ; preds = %for.cond
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3482
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 3, !dbg !3482
  %7 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3482
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %7, i64 0, i32 2, !dbg !3482
  %8 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3482
  %tobool9 = icmp eq %struct.VEC_tree_gc* %8, null, !dbg !3482
  br i1 %tobool9, label %cond.end, label %cond.true, !dbg !3482

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %8, i64 0, i32 0, !dbg !3482
  br label %cond.end, !dbg !3482

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !3482
  %9 = load i32, i32* %i, align 4, !dbg !3482
  call void @llvm.dbg.value(metadata i32 %9, metadata !3446, metadata !DIExpression()), !dbg !3461
  %call13 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %9) #7, !dbg !3482
  call void @dump_names_replaced_by(%struct._IO_FILE* %file, %union.tree_node* %call13) #7, !dbg !3483
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3448, metadata !DIExpression(DW_OP_deref)), !dbg !3479
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #7, !dbg !3480
  br label %for.cond, !dbg !3480, !llvm.loop !3484

for.end:                                          ; preds = %for.cond
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3486
  %10 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 0), align 8, !dbg !3487
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25, i64 0, i64 0), i32 %10) #6, !dbg !3488
  %11 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 1), align 4, !dbg !3489
  %12 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 0), align 8, !dbg !3490
  %sub = sub i32 %11, %12, !dbg !3491
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i32 %sub) #6, !dbg !3492
  %13 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 1), align 4, !dbg !3493
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27, i64 0, i64 0), i32 %13) #6, !dbg !3494
  %14 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 3), align 8, !dbg !3495
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i64 0, i64 0), i32 %14) #6, !dbg !3496
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #8, !dbg !3497
  br label %if.end19, !dbg !3498

if.end19:                                         ; preds = %if.end, %for.end, %land.lhs.true
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3499
  %gimple_df21 = getelementptr inbounds %struct.function, %struct.function* %15, i64 0, i32 3, !dbg !3499
  %16 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df21, align 8, !dbg !3499
  %syms_to_rename = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %16, i64 0, i32 9, !dbg !3499
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %syms_to_rename, align 8, !dbg !3499
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %17, i64 0, i32 0, !dbg !3499
  %18 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !3499
  %tobool22 = icmp eq %struct.bitmap_element_def* %18, null, !dbg !3499
  br i1 %tobool22, label %if.end29, label %if.then23, !dbg !3501

if.then23:                                        ; preds = %if.end19
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !3502
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3504
  %gimple_df26 = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 3, !dbg !3504
  %20 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df26, align 8, !dbg !3504
  %syms_to_rename27 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %20, i64 0, i32 9, !dbg !3504
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %syms_to_rename27, align 8, !dbg !3504
  call void @dump_decl_set(%struct._IO_FILE* %file, %struct.bitmap_head_def* %21) #7, !dbg !3505
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3506
  br label %if.end29, !dbg !3507

if.end29:                                         ; preds = %if.end19, %if.then23
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @names_to_release, align 8, !dbg !3508
  %tobool30 = icmp eq %struct.bitmap_head_def* %22, null, !dbg !3508
  br i1 %tobool30, label %if.end56, label %land.lhs.true31, !dbg !3510

land.lhs.true31:                                  ; preds = %if.end29
  %first32 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %22, i64 0, i32 0, !dbg !3511
  %23 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first32, align 8, !dbg !3511
  %tobool33 = icmp eq %struct.bitmap_element_def* %23, null, !dbg !3511
  br i1 %tobool33, label %if.end56, label %if.then34, !dbg !3512

if.then34:                                        ; preds = %land.lhs.true31
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !3513
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @names_to_release, align 8, !dbg !3515
  call void @llvm.dbg.value(metadata i32* %i, metadata !3446, metadata !DIExpression(DW_OP_deref)), !dbg !3461
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3447, metadata !DIExpression(DW_OP_deref)), !dbg !3461
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %24, i32 0, i32* nonnull %i) #7, !dbg !3515
  br label %for.cond36, !dbg !3515

for.cond36:                                       ; preds = %cond.end50, %if.then34
  call void @llvm.dbg.value(metadata i32* %i, metadata !3446, metadata !DIExpression(DW_OP_deref)), !dbg !3461
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3447, metadata !DIExpression(DW_OP_deref)), !dbg !3461
  %call37 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3517
  %tobool38 = icmp eq i8 %call37, 0, !dbg !3515
  br i1 %tobool38, label %if.end56.loopexit, label %for.body39, !dbg !3515

for.body39:                                       ; preds = %for.cond36
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3519
  %gimple_df41 = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, i32 3, !dbg !3519
  %26 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df41, align 8, !dbg !3519
  %ssa_names42 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %26, i64 0, i32 2, !dbg !3519
  %27 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names42, align 8, !dbg !3519
  %tobool43 = icmp eq %struct.VEC_tree_gc* %27, null, !dbg !3519
  br i1 %tobool43, label %cond.end50, label %cond.true44, !dbg !3519

cond.true44:                                      ; preds = %for.body39
  %base48 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %27, i64 0, i32 0, !dbg !3519
  br label %cond.end50, !dbg !3519

cond.end50:                                       ; preds = %for.body39, %cond.true44
  %cond51 = phi %struct.VEC_tree_base* [ %base48, %cond.true44 ], [ null, %for.body39 ], !dbg !3519
  %28 = load i32, i32* %i, align 4, !dbg !3519
  call void @llvm.dbg.value(metadata i32 %28, metadata !3446, metadata !DIExpression()), !dbg !3461
  %call52 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond51, i32 %28) #7, !dbg !3519
  call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %call52, i32 0) #6, !dbg !3521
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3522
  call void @llvm.dbg.value(metadata i32* %i, metadata !3446, metadata !DIExpression(DW_OP_deref)), !dbg !3461
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3447, metadata !DIExpression(DW_OP_deref)), !dbg !3461
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3517
  br label %for.cond36, !dbg !3517, !llvm.loop !3523

if.end56.loopexit:                                ; preds = %for.cond36
  br label %if.end56, !dbg !3525

if.end56:                                         ; preds = %if.end56.loopexit, %land.lhs.true31, %if.end29
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3525
  br label %cleanup, !dbg !3526

cleanup:                                          ; preds = %entry, %if.end56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !3526
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3526
  ret void, !dbg !3526
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @need_ssa_update_p(%struct.function* %fn) local_unnamed_addr #5 !dbg !3527 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !3531, metadata !DIExpression()), !dbg !3532
  %cmp = icmp eq %struct.function* %fn, null, !dbg !3533
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3533

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !3533
  br label %cond.end, !dbg !3533

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.function*, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !3534
  %cmp1 = icmp eq %struct.function* %0, %fn, !dbg !3535
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !3536

lor.rhs:                                          ; preds = %cond.end
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 3, !dbg !3537
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3537
  %tobool = icmp eq %struct.gimple_df* %1, null, !dbg !3538
  br i1 %tobool, label %lor.end, label %land.rhs, !dbg !3539

land.rhs:                                         ; preds = %lor.rhs
  %syms_to_rename = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 9, !dbg !3540
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %syms_to_rename, align 8, !dbg !3540
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %2, i64 0, i32 0, !dbg !3540
  %3 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !3540
  %tobool3 = icmp ne %struct.bitmap_element_def* %3, null, !dbg !3540
  %phitmp = zext i1 %tobool3 to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %cond.end
  %4 = phi i8 [ 1, %cond.end ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %4, !dbg !3541
}

declare dso_local i32 @sbitmap_first_set_bit(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* %i, %struct.simple_bitmap_def* %bmp, i32 %min) unnamed_addr #0 !dbg !3542 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !3550, metadata !DIExpression()), !dbg !3553
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %bmp, metadata !3551, metadata !DIExpression()), !dbg !3553
  call void @llvm.dbg.value(metadata i32 0, metadata !3552, metadata !DIExpression()), !dbg !3553
  %word_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 2, !dbg !3554
  store i32 0, i32* %word_num, align 4, !dbg !3555
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !3556
  store i32 0, i32* %bit_num, align 8, !dbg !3557
  %size = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %bmp, i64 0, i32 2, !dbg !3558
  %0 = load i32, i32* %size, align 4, !dbg !3558
  %size1 = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 1, !dbg !3559
  store i32 %0, i32* %size1, align 8, !dbg !3560
  %arraydecay = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %bmp, i64 0, i32 3, i64 0, !dbg !3561
  %ptr = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 0, !dbg !3562
  store i64* %arraydecay, i64** %ptr, align 8, !dbg !3563
  %cmp = icmp eq i32 %0, 0, !dbg !3564
  br i1 %cmp, label %if.then, label %if.else, !dbg !3566

if.then:                                          ; preds = %entry
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !3567
  store i64 0, i64* %word, align 8, !dbg !3568
  br label %if.end, !dbg !3569

if.else:                                          ; preds = %entry
  %1 = load i64, i64* %arraydecay, align 8, !dbg !3570
  %word7 = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !3571
  store i64 %1, i64* %word7, align 8, !dbg !3572
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3573
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* %i, i32* %n) unnamed_addr #0 !dbg !3574 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !3578, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32* %n, metadata !3579, metadata !DIExpression()), !dbg !3580
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !3581
  %word_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 2, !dbg !3584
  %size = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 1, !dbg !3586
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !3584
  %ptr = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 0, !dbg !3581
  %.pre = load i64, i64* %word, align 8, !dbg !3588
  br label %for.cond, !dbg !3589

for.cond:                                         ; preds = %if.end, %entry
  %0 = phi i64 [ %4, %if.end ], [ %.pre, %entry ], !dbg !3588
  %cmp = icmp eq i64 %0, 0, !dbg !3590
  br i1 %cmp, label %for.body, label %for.cond6.preheader, !dbg !3591

for.cond6.preheader:                              ; preds = %for.cond
  %.lcssa4 = phi i64 [ %0, %for.cond ], !dbg !3588
  %.pre1 = load i32, i32* %bit_num, align 8, !dbg !3580
  br label %for.cond6, !dbg !3592

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %word_num, align 4, !dbg !3594
  %inc = add i32 %1, 1, !dbg !3594
  store i32 %inc, i32* %word_num, align 4, !dbg !3594
  %2 = load i32, i32* %size, align 8, !dbg !3595
  %cmp2 = icmp ult i32 %inc, %2, !dbg !3596
  br i1 %cmp2, label %if.end, label %return.loopexit, !dbg !3597

if.end:                                           ; preds = %for.body
  %mul = shl i32 %inc, 6, !dbg !3598
  store i32 %mul, i32* %bit_num, align 8, !dbg !3599
  %3 = load i64*, i64** %ptr, align 8, !dbg !3600
  %idxprom = zext i32 %inc to i64, !dbg !3601
  %arrayidx = getelementptr inbounds i64, i64* %3, i64 %idxprom, !dbg !3601
  %4 = load i64, i64* %arrayidx, align 8, !dbg !3601
  store i64 %4, i64* %word, align 8, !dbg !3602
  br label %for.cond, !dbg !3603, !llvm.loop !3604

for.cond6:                                        ; preds = %for.cond6.preheader, %for.body9
  %5 = phi i32 [ %.pre1, %for.cond6.preheader ], [ %inc11, %for.body9 ], !dbg !3580
  %6 = phi i64 [ %.lcssa4, %for.cond6.preheader ], [ %shr, %for.body9 ], !dbg !3606
  %and = and i64 %6, 1, !dbg !3608
  %cmp8 = icmp eq i64 %and, 0, !dbg !3609
  br i1 %cmp8, label %for.body9, label %for.end14, !dbg !3592

for.body9:                                        ; preds = %for.cond6
  %inc11 = add i32 %5, 1, !dbg !3610
  store i32 %inc11, i32* %bit_num, align 8, !dbg !3610
  %shr = lshr i64 %6, 1, !dbg !3611
  store i64 %shr, i64* %word, align 8, !dbg !3611
  br label %for.cond6, !dbg !3612, !llvm.loop !3613

for.end14:                                        ; preds = %for.cond6
  %.lcssa = phi i32 [ %5, %for.cond6 ], !dbg !3580
  store i32 %.lcssa, i32* %n, align 4, !dbg !3615
  br label %return, !dbg !3616

return.loopexit:                                  ; preds = %for.body
  br label %return, !dbg !3617

return:                                           ; preds = %return.loopexit, %for.end14
  %retval.0 = phi i8 [ 1, %for.end14 ], [ 0, %return.loopexit ], !dbg !3580
  ret i8 %retval.0, !dbg !3617
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* %i) unnamed_addr #0 !dbg !3618 {
entry:
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %i, metadata !3622, metadata !DIExpression()), !dbg !3623
  %word = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 4, !dbg !3624
  %0 = load i64, i64* %word, align 8, !dbg !3625
  %shr = lshr i64 %0, 1, !dbg !3625
  store i64 %shr, i64* %word, align 8, !dbg !3625
  %bit_num = getelementptr inbounds %struct.sbitmap_iterator, %struct.sbitmap_iterator* %i, i64 0, i32 3, !dbg !3626
  %1 = load i32, i32* %bit_num, align 8, !dbg !3627
  %inc = add i32 %1, 1, !dbg !3627
  store i32 %inc, i32* %bit_num, align 8, !dbg !3627
  ret void, !dbg !3628
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_update_ssa() local_unnamed_addr #5 !dbg !3629 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3630
  tail call void @dump_update_ssa(%struct._IO_FILE* %0) #7, !dbg !3631
  ret void, !dbg !3632
}

; Function Attrs: nounwind uwtable
define dso_local void @delete_update_ssa() local_unnamed_addr #5 !dbg !3633 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %phis = alloca %struct.VEC_gimple_heap*, align 8
  %0 = bitcast i32* %i to i8*, !dbg !3642
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3642
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3643
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !3643
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !3644
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %2, i64 0, i32 0, !dbg !3644
  %3 = load i8*, i8** %popcount, align 8, !dbg !3644
  tail call void @free(i8* %3) #6, !dbg !3644
  %4 = load i8*, i8** bitcast (%struct.simple_bitmap_def** @old_ssa_names to i8**), align 8, !dbg !3644
  tail call void @free(i8* %4) #6, !dbg !3644
  store %struct.simple_bitmap_def* null, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !3645
  %5 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !3646
  %popcount1 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %5, i64 0, i32 0, !dbg !3646
  %6 = load i8*, i8** %popcount1, align 8, !dbg !3646
  tail call void @free(i8* %6) #6, !dbg !3646
  %7 = load i8*, i8** bitcast (%struct.simple_bitmap_def** @new_ssa_names to i8**), align 8, !dbg !3646
  tail call void @free(i8* %7) #6, !dbg !3646
  store %struct.simple_bitmap_def* null, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !3647
  %8 = load %struct.htab*, %struct.htab** @repl_tbl, align 8, !dbg !3648
  tail call void @htab_delete(%struct.htab* %8) #6, !dbg !3649
  store %struct.htab* null, %struct.htab** @repl_tbl, align 8, !dbg !3650
  %9 = load %struct.function*, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !3651
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 3, !dbg !3651
  %10 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3651
  %syms_to_rename = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %10, i64 0, i32 9, !dbg !3651
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %syms_to_rename, align 8, !dbg !3651
  tail call void @bitmap_clear(%struct.bitmap_head_def* %11) #6, !dbg !3652
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 2), align 8, !dbg !3653
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %12) #6, !dbg !3653
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 2), align 8, !dbg !3653
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @names_to_release, align 8, !dbg !3654
  %tobool = icmp eq %struct.bitmap_head_def* %13, null, !dbg !3654
  br i1 %tobool, label %if.end, label %if.then, !dbg !3656

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !3635, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3636, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %13, i32 0, i32* nonnull %i) #7, !dbg !3658
  br label %for.cond, !dbg !3658

for.cond:                                         ; preds = %cond.end, %if.then
  call void @llvm.dbg.value(metadata i32* %i, metadata !3635, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3636, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3661
  %tobool2 = icmp eq i8 %call, 0, !dbg !3658
  br i1 %tobool2, label %for.end, label %for.body, !dbg !3658

for.body:                                         ; preds = %for.cond
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3663
  %gimple_df3 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 3, !dbg !3663
  %15 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df3, align 8, !dbg !3663
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %15, i64 0, i32 2, !dbg !3663
  %16 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3663
  %tobool4 = icmp eq %struct.VEC_tree_gc* %16, null, !dbg !3663
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !3663

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %16, i64 0, i32 0, !dbg !3663
  br label %cond.end, !dbg !3663

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !3663
  %17 = load i32, i32* %i, align 4, !dbg !3663
  call void @llvm.dbg.value(metadata i32 %17, metadata !3635, metadata !DIExpression()), !dbg !3657
  %call8 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %17) #7, !dbg !3663
  call void @release_ssa_name(%union.tree_node* %call8) #6, !dbg !3664
  call void @llvm.dbg.value(metadata i32* %i, metadata !3635, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3636, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3661
  br label %for.cond, !dbg !3661, !llvm.loop !3665

for.end:                                          ; preds = %for.cond
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @names_to_release, align 8, !dbg !3667
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %18) #6, !dbg !3667
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @names_to_release, align 8, !dbg !3667
  br label %if.end, !dbg !3668

if.end:                                           ; preds = %entry, %for.end
  call fastcc void @clear_ssa_name_info() #7, !dbg !3669
  call fastcc void @fini_ssa_renamer() #7, !dbg !3670
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_with_phis_to_rewrite, align 8, !dbg !3671
  %tobool9 = icmp eq %struct.bitmap_head_def* %19, null, !dbg !3671
  br i1 %tobool9, label %if.end31, label %if.then10, !dbg !3672

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !3635, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3636, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %19, i32 0, i32* nonnull %i) #7, !dbg !3673
  %20 = bitcast %struct.VEC_gimple_heap** %phis to i8*, !dbg !3674
  br label %for.cond11, !dbg !3673

for.cond11:                                       ; preds = %for.body14, %if.then10
  call void @llvm.dbg.value(metadata i32* %i, metadata !3635, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3636, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  %call12 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3675
  %tobool13 = icmp eq i8 %call12, 0, !dbg !3673
  br i1 %tobool13, label %if.end31.loopexit, label %for.body14, !dbg !3673

for.body14:                                       ; preds = %for.cond11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8, !dbg !3676
  %21 = load %struct.VEC_gimple_vec_heap*, %struct.VEC_gimple_vec_heap** @phis_to_rewrite, align 8, !dbg !3677
  %base17 = getelementptr inbounds %struct.VEC_gimple_vec_heap, %struct.VEC_gimple_vec_heap* %21, i64 0, i32 0, !dbg !3677
  %22 = load i32, i32* %i, align 4, !dbg !3677
  call void @llvm.dbg.value(metadata i32 %22, metadata !3635, metadata !DIExpression()), !dbg !3657
  %call21 = call fastcc %struct.VEC_gimple_heap* @VEC_gimple_vec_base_index(%struct.VEC_gimple_vec_base* %base17, i32 %22) #7, !dbg !3677
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %call21, metadata !3637, metadata !DIExpression()), !dbg !3674
  store %struct.VEC_gimple_heap* %call21, %struct.VEC_gimple_heap** %phis, align 8, !dbg !3678
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %phis, metadata !3637, metadata !DIExpression(DW_OP_deref)), !dbg !3674
  call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %phis) #7, !dbg !3679
  %23 = load %struct.VEC_gimple_vec_heap*, %struct.VEC_gimple_vec_heap** @phis_to_rewrite, align 8, !dbg !3680
  %base24 = getelementptr inbounds %struct.VEC_gimple_vec_heap, %struct.VEC_gimple_vec_heap* %23, i64 0, i32 0, !dbg !3680
  %24 = load i32, i32* %i, align 4, !dbg !3680
  call void @llvm.dbg.value(metadata i32 %24, metadata !3635, metadata !DIExpression()), !dbg !3657
  %call28 = call fastcc %struct.VEC_gimple_heap* @VEC_gimple_vec_base_replace(%struct.VEC_gimple_vec_base* %base24, i32 %24, %struct.VEC_gimple_heap* null) #7, !dbg !3680
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8, !dbg !3681
  call void @llvm.dbg.value(metadata i32* %i, metadata !3635, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3636, metadata !DIExpression(DW_OP_deref)), !dbg !3657
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3675
  br label %for.cond11, !dbg !3675, !llvm.loop !3682

if.end31.loopexit:                                ; preds = %for.cond11
  %.pre = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_with_phis_to_rewrite, align 8, !dbg !3684
  br label %if.end31, !dbg !3684

if.end31:                                         ; preds = %if.end31.loopexit, %if.end
  %25 = phi %struct.bitmap_head_def* [ %.pre, %if.end31.loopexit ], [ null, %if.end ], !dbg !3684
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %25) #6, !dbg !3684
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @blocks_with_phis_to_rewrite, align 8, !dbg !3684
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !3685
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %26) #6, !dbg !3685
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !3685
  store %struct.function* null, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !3686
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !3687
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3687
  ret void, !dbg !3687
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @release_ssa_name(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_ssa_name_info() unnamed_addr #5 !dbg !3688 {
entry:
  %0 = load i32, i32* @current_info_for_ssa_name_age, align 4, !dbg !3689
  %inc = add i32 %0, 1, !dbg !3689
  store i32 %inc, i32* @current_info_for_ssa_name_age, align 4, !dbg !3689
  ret void, !dbg !3690
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fini_ssa_renamer() unnamed_addr #5 !dbg !3691 {
entry:
  %0 = load %struct.htab*, %struct.htab** @def_blocks, align 8, !dbg !3692
  %tobool = icmp eq %struct.htab* %0, null, !dbg !3692
  br i1 %tobool, label %if.end, label %if.then, !dbg !3694

if.then:                                          ; preds = %entry
  tail call void @htab_delete(%struct.htab* nonnull %0) #6, !dbg !3695
  store %struct.htab* null, %struct.htab** @def_blocks, align 8, !dbg !3697
  br label %if.end, !dbg !3698

if.end:                                           ; preds = %entry, %if.then
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3699
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 3, !dbg !3700
  %2 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3700
  %in_ssa_p = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %2, i64 0, i32 10, !dbg !3701
  %bf.load = load i8, i8* %in_ssa_p, align 8, !dbg !3702
  %bf.set = or i8 %bf.load, 1, !dbg !3702
  store i8 %bf.set, i8* %in_ssa_p, align 8, !dbg !3702
  ret void, !dbg !3703
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_gimple_heap* @VEC_gimple_vec_base_index(%struct.VEC_gimple_vec_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3704 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_vec_base* %vec_, metadata !3710, metadata !DIExpression()), !dbg !3712
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3711, metadata !DIExpression()), !dbg !3712
  br label %land.end, !dbg !3713

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3713
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_vec_base, %struct.VEC_gimple_vec_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3713
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %arrayidx, align 8, !dbg !3713
  ret %struct.VEC_gimple_heap* %0, !dbg !3713
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** %vec_) unnamed_addr #0 !dbg !3714 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !3719, metadata !DIExpression()), !dbg !3720
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !3721
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !3721
  br i1 %tobool, label %if.end, label %if.then, !dbg !3723

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_gimple_heap* %0 to i8*, !dbg !3723
  tail call void @free(i8* nonnull %1) #6, !dbg !3721
  br label %if.end, !dbg !3721

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_gimple_heap* null, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !3723
  ret void, !dbg !3723
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_gimple_heap* @VEC_gimple_vec_base_replace(%struct.VEC_gimple_vec_base* %vec_, i32 %ix_, %struct.VEC_gimple_heap* %obj_) unnamed_addr #0 !dbg !3724 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_vec_base* %vec_, metadata !3729, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3730, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %obj_, metadata !3731, metadata !DIExpression()), !dbg !3733
  %idxprom = zext i32 %ix_ to i64, !dbg !3734
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_vec_base, %struct.VEC_gimple_vec_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3734
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %arrayidx, align 8, !dbg !3734
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %0, metadata !3732, metadata !DIExpression()), !dbg !3733
  store %struct.VEC_gimple_heap* %obj_, %struct.VEC_gimple_heap** %arrayidx, align 8, !dbg !3734
  ret %struct.VEC_gimple_heap* %0, !dbg !3734
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @create_new_def_for(%union.tree_node* %old_name, %union.gimple_statement_d* %stmt, %union.tree_node** %def) local_unnamed_addr #5 !dbg !3735 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %old_name, metadata !3739, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3740, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !3741, metadata !DIExpression()), !dbg !3748
  %call = tail call %union.tree_node* @duplicate_ssa_name(%union.tree_node* %old_name, %union.gimple_statement_d* %stmt) #6, !dbg !3749
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3742, metadata !DIExpression()), !dbg !3748
  store %union.tree_node* %call, %union.tree_node** %def, align 8, !dbg !3750
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !3751
  %cmp = icmp eq i32 %call1, 16, !dbg !3752
  br i1 %cmp, label %if.then, label %if.end7, !dbg !3753

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !3754
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3754
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3755
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3755
  %call2 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !3756
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !3747, metadata !DIExpression()), !dbg !3757
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3758
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3758
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 0, !dbg !3758
  %call3 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !3758
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3758
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 0, !dbg !3758
  store i32 %4, i32* %3, align 8, !dbg !3758
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3758
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 1, !dbg !3758
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !3758
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !3758
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3758
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3760
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3760
  br label %for.cond, !dbg !3758

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %7, align 8, !dbg !3762
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !3762
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3743, metadata !DIExpression(DW_OP_deref)), !dbg !3757
  %call4 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !3762
  %tobool = icmp eq i8 %call4, 0, !dbg !3758
  br i1 %tobool, label %for.end.loopexit, label %for.body, !dbg !3758

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3763
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !3743, metadata !DIExpression()), !dbg !3757
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !3765
  %12 = load i32, i32* %flags, align 8, !dbg !3765
  %and = and i32 %12, 2, !dbg !3766
  %tobool5 = icmp eq i32 %and, 0, !dbg !3766
  br i1 %tobool5, label %for.inc, label %if.then6, !dbg !3767

if.then6:                                         ; preds = %for.body
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3768
  %bf.load = load i64, i64* %13, align 8, !dbg !3770
  %bf.set = or i64 %bf.load, 4194304, !dbg !3770
  store i64 %bf.set, i64* %13, align 8, !dbg !3770
  br label %for.end, !dbg !3771

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3746, metadata !DIExpression(DW_OP_deref)), !dbg !3757
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3762
  br label %for.cond, !dbg !3762, !llvm.loop !3772

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !3774

for.end:                                          ; preds = %for.end.loopexit, %if.then6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3774
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3774
  br label %if.end7, !dbg !3775

if.end7:                                          ; preds = %for.end, %entry
  call void @register_new_name_mapping(%union.tree_node* %call, %union.tree_node* %old_name) #7, !dbg !3776
  call void @set_current_def(%union.tree_node* %old_name, %union.tree_node* %call) #7, !dbg !3777
  ret %union.tree_node* %call, !dbg !3778
}

declare dso_local %union.tree_node* @duplicate_ssa_name(%union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3779 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3786, metadata !DIExpression()), !dbg !3787
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3788
  %bf.load = load i32, i32* %0, align 8, !dbg !3788
  %bf.clear = and i32 %bf.load, 255, !dbg !3788
  ret i32 %bf.clear, !dbg !3789
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3790 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3794, metadata !DIExpression()), !dbg !3795
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !3796
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3796
  ret %struct.basic_block_def* %0, !dbg !3797
}

; Function Attrs: nounwind uwtable
define dso_local void @register_new_name_mapping(%union.tree_node* %new_tree, %union.tree_node* %old) local_unnamed_addr #5 !dbg !3798 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree, metadata !3800, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata %union.tree_node* %old, metadata !3801, metadata !DIExpression()), !dbg !3802
  %0 = load %struct.function*, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !3803
  %tobool = icmp eq %struct.function* %0, null, !dbg !3803
  br i1 %tobool, label %if.then, label %if.end, !dbg !3805

if.then:                                          ; preds = %entry
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3806
  tail call fastcc void @init_update_ssa(%struct.function* %1) #7, !dbg !3807
  %.pre = load %struct.function*, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !3808
  br label %if.end, !dbg !3807

if.end:                                           ; preds = %entry, %if.then
  %2 = phi %struct.function* [ %0, %entry ], [ %.pre, %if.then ], !dbg !3808
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3808
  %cmp = icmp eq %struct.function* %2, %3, !dbg !3808
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3808

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2881, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !3808
  br label %cond.end, !dbg !3808

cond.end:                                         ; preds = %if.end, %cond.true
  tail call fastcc void @add_new_name_mapping(%union.tree_node* %new_tree, %union.tree_node* %old) #7, !dbg !3809
  ret void, !dbg !3810
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_update_ssa(%struct.function* %fn) unnamed_addr #5 !dbg !3811 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !3815, metadata !DIExpression()), !dbg !3816
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3817
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 3, !dbg !3817
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3817
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 2, !dbg !3817
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3817
  %tobool = icmp eq %struct.VEC_tree_gc* %2, null, !dbg !3817
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3817

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %2, i64 0, i32 0, !dbg !3817
  br label %cond.end, !dbg !3817

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3817
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !3817
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3818
  %gimple_df5 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 3, !dbg !3818
  %4 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df5, align 8, !dbg !3818
  %ssa_names6 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %4, i64 0, i32 2, !dbg !3818
  %5 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names6, align 8, !dbg !3818
  %tobool7 = icmp eq %struct.VEC_tree_gc* %5, null, !dbg !3818
  br i1 %tobool7, label %cond.end14, label %cond.true8, !dbg !3818

cond.true8:                                       ; preds = %cond.end
  %base12 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %5, i64 0, i32 0, !dbg !3818
  br label %cond.end14, !dbg !3818

cond.end14:                                       ; preds = %cond.end, %cond.true8
  %cond15 = phi %struct.VEC_tree_base* [ %base12, %cond.true8 ], [ null, %cond.end ], !dbg !3818
  %call16 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond15) #7, !dbg !3818
  %cmp = icmp ult i32 %call16, 9, !dbg !3818
  br i1 %cmp, label %cond.end33, label %cond.false18, !dbg !3818

cond.false18:                                     ; preds = %cond.end14
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3818
  %gimple_df20 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 3, !dbg !3818
  %7 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df20, align 8, !dbg !3818
  %ssa_names21 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %7, i64 0, i32 2, !dbg !3818
  %8 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names21, align 8, !dbg !3818
  %tobool22 = icmp eq %struct.VEC_tree_gc* %8, null, !dbg !3818
  br i1 %tobool22, label %cond.end29, label %cond.true23, !dbg !3818

cond.true23:                                      ; preds = %cond.false18
  %base27 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %8, i64 0, i32 0, !dbg !3818
  br label %cond.end29, !dbg !3818

cond.end29:                                       ; preds = %cond.false18, %cond.true23
  %cond30 = phi %struct.VEC_tree_base* [ %base27, %cond.true23 ], [ null, %cond.false18 ], !dbg !3818
  %call31 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond30) #7, !dbg !3818
  %div32 = udiv i32 %call31, 3, !dbg !3818
  br label %cond.end33, !dbg !3818

cond.end33:                                       ; preds = %cond.end14, %cond.end29
  %cond34 = phi i32 [ %div32, %cond.end29 ], [ 3, %cond.end14 ], !dbg !3818
  %add = add i32 %call, %cond34, !dbg !3819
  %call35 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %add) #6, !dbg !3820
  store %struct.simple_bitmap_def* %call35, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !3821
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call35) #6, !dbg !3822
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3823
  %gimple_df37 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 3, !dbg !3823
  %10 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df37, align 8, !dbg !3823
  %ssa_names38 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %10, i64 0, i32 2, !dbg !3823
  %11 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names38, align 8, !dbg !3823
  %tobool39 = icmp eq %struct.VEC_tree_gc* %11, null, !dbg !3823
  br i1 %tobool39, label %cond.end46, label %cond.true40, !dbg !3823

cond.true40:                                      ; preds = %cond.end33
  %base44 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %11, i64 0, i32 0, !dbg !3823
  br label %cond.end46, !dbg !3823

cond.end46:                                       ; preds = %cond.end33, %cond.true40
  %cond47 = phi %struct.VEC_tree_base* [ %base44, %cond.true40 ], [ null, %cond.end33 ], !dbg !3823
  %call48 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond47) #7, !dbg !3823
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3824
  %gimple_df50 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 3, !dbg !3824
  %13 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df50, align 8, !dbg !3824
  %ssa_names51 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %13, i64 0, i32 2, !dbg !3824
  %14 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names51, align 8, !dbg !3824
  %tobool52 = icmp eq %struct.VEC_tree_gc* %14, null, !dbg !3824
  br i1 %tobool52, label %cond.end59, label %cond.true53, !dbg !3824

cond.true53:                                      ; preds = %cond.end46
  %base57 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %14, i64 0, i32 0, !dbg !3824
  br label %cond.end59, !dbg !3824

cond.end59:                                       ; preds = %cond.end46, %cond.true53
  %cond60 = phi %struct.VEC_tree_base* [ %base57, %cond.true53 ], [ null, %cond.end46 ], !dbg !3824
  %call61 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond60) #7, !dbg !3824
  %cmp63 = icmp ult i32 %call61, 9, !dbg !3824
  br i1 %cmp63, label %cond.end80, label %cond.false65, !dbg !3824

cond.false65:                                     ; preds = %cond.end59
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3824
  %gimple_df67 = getelementptr inbounds %struct.function, %struct.function* %15, i64 0, i32 3, !dbg !3824
  %16 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df67, align 8, !dbg !3824
  %ssa_names68 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %16, i64 0, i32 2, !dbg !3824
  %17 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names68, align 8, !dbg !3824
  %tobool69 = icmp eq %struct.VEC_tree_gc* %17, null, !dbg !3824
  br i1 %tobool69, label %cond.end76, label %cond.true70, !dbg !3824

cond.true70:                                      ; preds = %cond.false65
  %base74 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %17, i64 0, i32 0, !dbg !3824
  br label %cond.end76, !dbg !3824

cond.end76:                                       ; preds = %cond.false65, %cond.true70
  %cond77 = phi %struct.VEC_tree_base* [ %base74, %cond.true70 ], [ null, %cond.false65 ], !dbg !3824
  %call78 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond77) #7, !dbg !3824
  %div79 = udiv i32 %call78, 3, !dbg !3824
  br label %cond.end80, !dbg !3824

cond.end80:                                       ; preds = %cond.end59, %cond.end76
  %cond81 = phi i32 [ %div79, %cond.end76 ], [ 3, %cond.end59 ], !dbg !3824
  %add82 = add i32 %call48, %cond81, !dbg !3825
  %call83 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %add82) #6, !dbg !3826
  store %struct.simple_bitmap_def* %call83, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !3827
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call83) #6, !dbg !3828
  %call84 = tail call %struct.htab* @htab_create(i64 20, i32 (i8*)* nonnull @repl_map_hash, i32 (i8*, i8*)* nonnull @repl_map_eq, void (i8*)* nonnull @repl_map_free) #6, !dbg !3829
  store %struct.htab* %call84, %struct.htab** @repl_tbl, align 8, !dbg !3830
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @names_to_release, align 8, !dbg !3831
  %call85 = tail call i8* @memset(i8* bitcast (%struct.update_ssa_stats_d* @update_ssa_stats to i8*), i32 0, i64 24) #6, !dbg !3832
  %call86 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3833
  store %struct.bitmap_head_def* %call86, %struct.bitmap_head_def** getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 2), align 8, !dbg !3834
  store %struct.function* %fn, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !3835
  ret void, !dbg !3836
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_new_name_mapping(%union.tree_node* %new_tree, %union.tree_node* %old) unnamed_addr #5 !dbg !3837 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree, metadata !3839, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata %union.tree_node* %old, metadata !3840, metadata !DIExpression()), !dbg !3847
  %0 = load i8, i8* @timevar_enable, align 1, !dbg !3848
  %tobool = icmp eq i8 %0, 0, !dbg !3848
  br i1 %tobool, label %do.end, label %if.then, !dbg !3851

if.then:                                          ; preds = %entry
  tail call void @timevar_push_1(i32 60) #6, !dbg !3848
  br label %do.end, !dbg !3848

do.end:                                           ; preds = %entry, %if.then
  %cmp = icmp eq %union.tree_node* %new_tree, %old, !dbg !3852
  br i1 %cmp, label %cond.true, label %land.lhs.true, !dbg !3852

land.lhs.true:                                    ; preds = %do.end
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %new_tree, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3852
  %1 = bitcast i32* %var to %union.tree_node**, !dbg !3852
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3852
  %var2 = getelementptr inbounds %union.tree_node, %union.tree_node* %old, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3852
  %3 = bitcast i32* %var2 to %union.tree_node**, !dbg !3852
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !3852
  %cmp3 = icmp eq %union.tree_node* %2, %4, !dbg !3852
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !3852

cond.true:                                        ; preds = %do.end, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 672, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !3852
  br label %cond.end, !dbg !3852

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %new_tree) #6, !dbg !3853
  %tobool4 = icmp eq i8 %call, 0, !dbg !3853
  br i1 %tobool4, label %if.then5, label %if.end10, !dbg !3854

if.then5:                                         ; preds = %cond.end
  %5 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 0), align 8, !dbg !3855
  %inc = add i32 %5, 1, !dbg !3855
  store i32 %inc, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 0), align 8, !dbg !3855
  %6 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 3), align 8, !dbg !3856
  %inc6 = add i32 %6, 1, !dbg !3856
  store i32 %inc6, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 3), align 8, !dbg !3856
  %var8 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_tree, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3857
  %7 = bitcast i32* %var8 to %struct.tree_decl_minimal**, !dbg !3857
  %8 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %7, align 8, !dbg !3857
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 2), align 8, !dbg !3858
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %8, i64 0, i32 2, !dbg !3859
  %10 = load i32, i32* %uid, align 4, !dbg !3859
  %call9 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %9, i32 %10) #6, !dbg !3860
  br label %if.end10, !dbg !3861

if.end10:                                         ; preds = %cond.end, %if.then5
  %11 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !3862
  %n_bits = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %11, i64 0, i32 1, !dbg !3863
  %12 = load i32, i32* %n_bits, align 8, !dbg !3863
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3864
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 3, !dbg !3864
  %14 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3864
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %14, i64 0, i32 2, !dbg !3864
  %15 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3864
  %tobool11 = icmp eq %struct.VEC_tree_gc* %15, null, !dbg !3864
  br i1 %tobool11, label %cond.end17, label %cond.true12, !dbg !3864

cond.true12:                                      ; preds = %if.end10
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %15, i64 0, i32 0, !dbg !3864
  br label %cond.end17, !dbg !3864

cond.end17:                                       ; preds = %if.end10, %cond.true12
  %cond18 = phi %struct.VEC_tree_base* [ %base, %cond.true12 ], [ null, %if.end10 ], !dbg !3864
  %call19 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond18) #7, !dbg !3864
  %sub = add i32 %call19, -1, !dbg !3865
  %cmp20 = icmp ugt i32 %12, %sub, !dbg !3866
  br i1 %cmp20, label %if.end69, label %if.then21, !dbg !3867

if.then21:                                        ; preds = %cond.end17
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3868
  %gimple_df23 = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, i32 3, !dbg !3868
  %17 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df23, align 8, !dbg !3868
  %ssa_names24 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %17, i64 0, i32 2, !dbg !3868
  %18 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names24, align 8, !dbg !3868
  %tobool25 = icmp eq %struct.VEC_tree_gc* %18, null, !dbg !3868
  br i1 %tobool25, label %cond.end32, label %cond.true26, !dbg !3868

cond.true26:                                      ; preds = %if.then21
  %base30 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %18, i64 0, i32 0, !dbg !3868
  br label %cond.end32, !dbg !3868

cond.end32:                                       ; preds = %if.then21, %cond.true26
  %cond33 = phi %struct.VEC_tree_base* [ %base30, %cond.true26 ], [ null, %if.then21 ], !dbg !3868
  %call34 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond33) #7, !dbg !3868
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3869
  %gimple_df36 = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 3, !dbg !3869
  %20 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df36, align 8, !dbg !3869
  %ssa_names37 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %20, i64 0, i32 2, !dbg !3869
  %21 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names37, align 8, !dbg !3869
  %tobool38 = icmp eq %struct.VEC_tree_gc* %21, null, !dbg !3869
  br i1 %tobool38, label %cond.end45, label %cond.true39, !dbg !3869

cond.true39:                                      ; preds = %cond.end32
  %base43 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %21, i64 0, i32 0, !dbg !3869
  br label %cond.end45, !dbg !3869

cond.end45:                                       ; preds = %cond.end32, %cond.true39
  %cond46 = phi %struct.VEC_tree_base* [ %base43, %cond.true39 ], [ null, %cond.end32 ], !dbg !3869
  %call47 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond46) #7, !dbg !3869
  %cmp48 = icmp ult i32 %call47, 9, !dbg !3869
  br i1 %cmp48, label %cond.end65, label %cond.false50, !dbg !3869

cond.false50:                                     ; preds = %cond.end45
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3869
  %gimple_df52 = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, i32 3, !dbg !3869
  %23 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df52, align 8, !dbg !3869
  %ssa_names53 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %23, i64 0, i32 2, !dbg !3869
  %24 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names53, align 8, !dbg !3869
  %tobool54 = icmp eq %struct.VEC_tree_gc* %24, null, !dbg !3869
  br i1 %tobool54, label %cond.end61, label %cond.true55, !dbg !3869

cond.true55:                                      ; preds = %cond.false50
  %base59 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %24, i64 0, i32 0, !dbg !3869
  br label %cond.end61, !dbg !3869

cond.end61:                                       ; preds = %cond.false50, %cond.true55
  %cond62 = phi %struct.VEC_tree_base* [ %base59, %cond.true55 ], [ null, %cond.false50 ], !dbg !3869
  %call63 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond62) #7, !dbg !3869
  %div64 = udiv i32 %call63, 3, !dbg !3869
  br label %cond.end65, !dbg !3869

cond.end65:                                       ; preds = %cond.end45, %cond.end61
  %cond66 = phi i32 [ %div64, %cond.end61 ], [ 3, %cond.end45 ], !dbg !3869
  %add = add i32 %call34, %cond66, !dbg !3870
  call void @llvm.dbg.value(metadata i32 %add, metadata !3844, metadata !DIExpression()), !dbg !3871
  %25 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !3872
  %call67 = tail call %struct.simple_bitmap_def* @sbitmap_resize(%struct.simple_bitmap_def* %25, i32 %add, i32 0) #6, !dbg !3873
  store %struct.simple_bitmap_def* %call67, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !3874
  %26 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !3875
  %call68 = tail call %struct.simple_bitmap_def* @sbitmap_resize(%struct.simple_bitmap_def* %26, i32 %add, i32 0) #6, !dbg !3876
  store %struct.simple_bitmap_def* %call68, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !3877
  br label %if.end69, !dbg !3878

if.end69:                                         ; preds = %cond.end17, %cond.end65
  tail call fastcc void @add_to_repl_tbl(%union.tree_node* %new_tree, %union.tree_node* %old) #7, !dbg !3879
  %call70 = tail call fastcc zeroext i8 @is_new_name(%union.tree_node* %old) #7, !dbg !3880
  %tobool71 = icmp eq i8 %call70, 0, !dbg !3880
  br i1 %tobool71, label %if.end76, label %if.then72, !dbg !3882

if.then72:                                        ; preds = %if.end69
  %call73 = tail call fastcc %struct.bitmap_head_def* @names_replaced_by(%union.tree_node* %new_tree) #7, !dbg !3883
  %call74 = tail call fastcc %struct.bitmap_head_def* @names_replaced_by(%union.tree_node* %old) #7, !dbg !3884
  %call75 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %call73, %struct.bitmap_head_def* %call74) #6, !dbg !3885
  br label %if.end76, !dbg !3885

if.end76:                                         ; preds = %if.end69, %if.then72
  %27 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !3886
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %new_tree, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3887
  %28 = bitcast %union.tree_node** %version to i32*, !dbg !3887
  %29 = load i32, i32* %28, align 8, !dbg !3887
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %27, i32 %29) #7, !dbg !3888
  %30 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !3889
  %version79 = getelementptr inbounds %union.tree_node, %union.tree_node* %old, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3890
  %31 = bitcast %union.tree_node** %version79 to i32*, !dbg !3890
  %32 = load i32, i32* %31, align 8, !dbg !3890
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %30, i32 %32) #7, !dbg !3891
  %33 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 1), align 4, !dbg !3892
  %inc80 = add i32 %33, 1, !dbg !3892
  store i32 %inc80, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 1), align 4, !dbg !3892
  %34 = load i8, i8* @timevar_enable, align 1, !dbg !3893
  %tobool82 = icmp eq i8 %34, 0, !dbg !3893
  br i1 %tobool82, label %do.end85, label %if.then83, !dbg !3896

if.then83:                                        ; preds = %if.end76
  tail call void @timevar_pop_1(i32 60) #6, !dbg !3893
  br label %do.end85, !dbg !3893

do.end85:                                         ; preds = %if.end76, %if.then83
  ret void, !dbg !3897
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_sym_for_renaming(%union.tree_node* %sym) local_unnamed_addr #5 !dbg !3898 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %sym, metadata !3900, metadata !DIExpression()), !dbg !3901
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3902
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 3, !dbg !3902
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3902
  %syms_to_rename = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 9, !dbg !3902
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %syms_to_rename, align 8, !dbg !3902
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %sym, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3903
  %3 = load i32, i32* %uid, align 4, !dbg !3903
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !3904
  ret void, !dbg !3905
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_set_for_renaming(%struct.bitmap_head_def* %set) local_unnamed_addr #5 !dbg !3906 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %set, metadata !3908, metadata !DIExpression()), !dbg !3911
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3912
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3912
  %1 = bitcast i32* %i to i8*, !dbg !3913
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3913
  %cmp = icmp eq %struct.bitmap_head_def* %set, null, !dbg !3914
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !3916

lor.lhs.false:                                    ; preds = %entry
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %set, i64 0, i32 0, !dbg !3917
  %2 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !3917
  %tobool = icmp eq %struct.bitmap_element_def* %2, null, !dbg !3917
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3918

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3909, metadata !DIExpression(DW_OP_deref)), !dbg !3911
  call void @llvm.dbg.value(metadata i32* %i, metadata !3910, metadata !DIExpression(DW_OP_deref)), !dbg !3911
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %set, i32 0, i32* nonnull %i) #7, !dbg !3919
  br label %for.cond, !dbg !3919

for.cond:                                         ; preds = %for.body, %if.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3909, metadata !DIExpression(DW_OP_deref)), !dbg !3911
  call void @llvm.dbg.value(metadata i32* %i, metadata !3910, metadata !DIExpression(DW_OP_deref)), !dbg !3911
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3921
  %tobool1 = icmp eq i8 %call, 0, !dbg !3919
  br i1 %tobool1, label %cleanup.loopexit, label %for.body, !dbg !3919

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !3923
  call void @llvm.dbg.value(metadata i32 %3, metadata !3910, metadata !DIExpression()), !dbg !3911
  %call2 = call %union.tree_node* @referenced_var_lookup(i32 %3) #6, !dbg !3923
  call void @mark_sym_for_renaming(%union.tree_node* %call2) #7, !dbg !3924
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3909, metadata !DIExpression(DW_OP_deref)), !dbg !3911
  call void @llvm.dbg.value(metadata i32* %i, metadata !3910, metadata !DIExpression(DW_OP_deref)), !dbg !3911
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3921
  br label %for.cond, !dbg !3921, !llvm.loop !3925

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !3927

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false, %entry
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3927
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3927
  ret void, !dbg !3927
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @name_mappings_registered_p() local_unnamed_addr #5 !dbg !3928 {
entry:
  %0 = load %struct.function*, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !3929
  %tobool = icmp eq %struct.function* %0, null, !dbg !3929
  br i1 %tobool, label %return, label %if.end, !dbg !3931

if.end:                                           ; preds = %entry
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3932
  %cmp = icmp eq %struct.function* %0, %1, !dbg !3932
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3932

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2932, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !3932
  br label %cond.end, !dbg !3932

cond.end:                                         ; preds = %if.end, %cond.true
  %2 = load %struct.htab*, %struct.htab** @repl_tbl, align 8, !dbg !3933
  %tobool1 = icmp eq %struct.htab* %2, null, !dbg !3933
  br i1 %tobool1, label %land.end, label %land.rhs, !dbg !3934

land.rhs:                                         ; preds = %cond.end
  %call = tail call i64 @htab_elements(%struct.htab* nonnull %2) #6, !dbg !3935
  %cmp2 = icmp ne i64 %call, 0, !dbg !3936
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %cond.end, %land.rhs
  %3 = phi i8 [ 0, %cond.end ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !3937

return:                                           ; preds = %entry, %land.end
  %retval.0 = phi i8 [ %3, %land.end ], [ 0, %entry ], !dbg !3938
  ret i8 %retval.0, !dbg !3939
}

declare dso_local i64 @htab_elements(%struct.htab*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @name_registered_for_update_p(%union.tree_node* %n) local_unnamed_addr #5 !dbg !3940 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %n, metadata !3944, metadata !DIExpression()), !dbg !3945
  %0 = load %struct.function*, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !3946
  %tobool = icmp eq %struct.function* %0, null, !dbg !3946
  br i1 %tobool, label %return, label %if.end, !dbg !3948

if.end:                                           ; preds = %entry
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3949
  %cmp = icmp eq %struct.function* %0, %1, !dbg !3949
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3949

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2945, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !3949
  br label %cond.end, !dbg !3949

cond.end:                                         ; preds = %if.end, %cond.true
  %call = tail call fastcc zeroext i8 @is_new_name(%union.tree_node* %n) #7, !dbg !3950
  %tobool1 = icmp eq i8 %call, 0, !dbg !3950
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !3951

lor.rhs:                                          ; preds = %cond.end
  %call2 = tail call fastcc zeroext i8 @is_old_name(%union.tree_node* %n) #7, !dbg !3952
  %tobool4 = icmp ne i8 %call2, 0, !dbg !3951
  %phitmp = zext i1 %tobool4 to i8, !dbg !3951
  br label %lor.end, !dbg !3951

lor.end:                                          ; preds = %cond.end, %lor.rhs
  %2 = phi i8 [ 1, %cond.end ], [ %phitmp, %lor.rhs ]
  br label %return, !dbg !3953

return:                                           ; preds = %entry, %lor.end
  %retval.0 = phi i8 [ %2, %lor.end ], [ 0, %entry ], !dbg !3945
  ret i8 %retval.0, !dbg !3954
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_new_name(%union.tree_node* %name) unnamed_addr #0 !dbg !3955 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3957, metadata !DIExpression()), !dbg !3959
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3960
  %0 = bitcast %union.tree_node** %version to i32*, !dbg !3960
  %1 = load i32, i32* %0, align 8, !dbg !3960
  call void @llvm.dbg.value(metadata i32 %1, metadata !3958, metadata !DIExpression()), !dbg !3959
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !3961
  %tobool = icmp eq %struct.simple_bitmap_def* %2, null, !dbg !3961
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3963

if.end:                                           ; preds = %entry
  %n_bits = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %2, i64 0, i32 1, !dbg !3964
  %3 = load i32, i32* %n_bits, align 8, !dbg !3964
  %cmp = icmp ult i32 %1, %3, !dbg !3965
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3966

land.rhs:                                         ; preds = %if.end
  %div = lshr i32 %1, 6, !dbg !3967
  %idxprom = zext i32 %div to i64, !dbg !3967
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %2, i64 0, i32 3, i64 %idxprom, !dbg !3967
  %4 = load i64, i64* %arrayidx, align 8, !dbg !3967
  %rem = and i32 %1, 63, !dbg !3967
  %sh_prom = zext i32 %rem to i64, !dbg !3967
  %shr = lshr i64 %4, %sh_prom, !dbg !3967
  %5 = trunc i64 %shr to i8
  %6 = and i8 %5, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %7 = phi i8 [ 0, %if.end ], [ %6, %land.rhs ]
  br label %cleanup, !dbg !3968

cleanup:                                          ; preds = %entry, %land.end
  %retval.0 = phi i8 [ %7, %land.end ], [ 0, %entry ], !dbg !3959
  ret i8 %retval.0, !dbg !3969
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_old_name(%union.tree_node* %name) unnamed_addr #0 !dbg !3970 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !3972, metadata !DIExpression()), !dbg !3974
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3975
  %0 = bitcast %union.tree_node** %version to i32*, !dbg !3975
  %1 = load i32, i32* %0, align 8, !dbg !3975
  call void @llvm.dbg.value(metadata i32 %1, metadata !3973, metadata !DIExpression()), !dbg !3974
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !3976
  %tobool = icmp eq %struct.simple_bitmap_def* %2, null, !dbg !3976
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3978

if.end:                                           ; preds = %entry
  %n_bits = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %2, i64 0, i32 1, !dbg !3979
  %3 = load i32, i32* %n_bits, align 8, !dbg !3979
  %cmp = icmp ult i32 %1, %3, !dbg !3980
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3981

land.rhs:                                         ; preds = %if.end
  %4 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !3982
  %div = lshr i32 %1, 6, !dbg !3982
  %idxprom = zext i32 %div to i64, !dbg !3982
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %4, i64 0, i32 3, i64 %idxprom, !dbg !3982
  %5 = load i64, i64* %arrayidx, align 8, !dbg !3982
  %rem = and i32 %1, 63, !dbg !3982
  %sh_prom = zext i32 %rem to i64, !dbg !3982
  %shr = lshr i64 %5, %sh_prom, !dbg !3982
  %6 = trunc i64 %shr to i8
  %7 = and i8 %6, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %8 = phi i8 [ 0, %if.end ], [ %7, %land.rhs ]
  br label %cleanup, !dbg !3983

cleanup:                                          ; preds = %entry, %land.end
  %retval.0 = phi i8 [ %8, %land.end ], [ 0, %entry ], !dbg !3974
  ret i8 %retval.0, !dbg !3984
}

; Function Attrs: nounwind uwtable
define dso_local %struct.bitmap_head_def* @ssa_names_to_replace() local_unnamed_addr #5 !dbg !3985 {
entry:
  %i = alloca i32, align 4
  %sbi = alloca %struct.sbitmap_iterator, align 8
  %0 = bitcast i32* %i to i8*, !dbg !3992
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3992
  call void @llvm.dbg.value(metadata i32 0, metadata !3989, metadata !DIExpression()), !dbg !3993
  store i32 0, i32* %i, align 4, !dbg !3994
  %1 = bitcast %struct.sbitmap_iterator* %sbi to i8*, !dbg !3995
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !3995
  %2 = load %struct.function*, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !3996
  %cmp = icmp eq %struct.function* %2, null, !dbg !3996
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !3996

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3996
  %cmp1 = icmp eq %struct.function* %2, %3, !dbg !3996
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !3996

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2961, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !3996
  br label %cond.end, !dbg !3996

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3997
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !3990, metadata !DIExpression()), !dbg !3993
  %4 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !3998
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3991, metadata !DIExpression(DW_OP_deref)), !dbg !3993
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %4, i32 0) #7, !dbg !3998
  br label %for.cond, !dbg !3998

for.cond:                                         ; preds = %for.body, %cond.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !3989, metadata !DIExpression(DW_OP_deref)), !dbg !3993
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3991, metadata !DIExpression(DW_OP_deref)), !dbg !3993
  %call2 = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %i) #7, !dbg !4000
  %tobool = icmp eq i8 %call2, 0, !dbg !3998
  br i1 %tobool, label %for.end, label %for.body, !dbg !3998

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !4002
  call void @llvm.dbg.value(metadata i32 %5, metadata !3989, metadata !DIExpression()), !dbg !3993
  %call3 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %5) #6, !dbg !4003
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !3991, metadata !DIExpression(DW_OP_deref)), !dbg !3993
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #7, !dbg !4000
  br label %for.cond, !dbg !4000, !llvm.loop !4004

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4006
  ret %struct.bitmap_head_def* %call, !dbg !4007
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @release_ssa_name_after_update_ssa(%union.tree_node* %name) local_unnamed_addr #5 !dbg !4008 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4010, metadata !DIExpression()), !dbg !4011
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4012
  %tobool = icmp eq %struct.function* %0, null, !dbg !4012
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !4012

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.function*, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !4012
  %cmp = icmp eq %struct.function* %1, %0, !dbg !4012
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4012

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2976, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4012
  br label %cond.end, !dbg !4012

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @names_to_release, align 8, !dbg !4013
  %cmp2 = icmp eq %struct.bitmap_head_def* %2, null, !dbg !4015
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4016

if.then:                                          ; preds = %cond.end
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4017
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @names_to_release, align 8, !dbg !4018
  br label %if.end, !dbg !4019

if.end:                                           ; preds = %if.then, %cond.end
  %3 = phi %struct.bitmap_head_def* [ %call, %if.then ], [ %2, %cond.end ], !dbg !4020
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4021
  %4 = bitcast %union.tree_node** %version to i32*, !dbg !4021
  %5 = load i32, i32* %4, align 8, !dbg !4021
  %call3 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %5) #6, !dbg !4022
  ret void, !dbg !4023
}

; Function Attrs: nounwind uwtable
define dso_local void @update_ssa(i32 %update_flags) local_unnamed_addr #5 !dbg !4024 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  %sbi = alloca %struct.sbitmap_iterator, align 8
  %sbi98 = alloca %struct.sbitmap_iterator, align 8
  %i201 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %update_flags, metadata !4028, metadata !DIExpression()), !dbg !4047
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4048
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4048
  %1 = bitcast i32* %i to i8*, !dbg !4049
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !4049
  call void @llvm.dbg.value(metadata i32 0, metadata !4032, metadata !DIExpression()), !dbg !4047
  store i32 0, i32* %i, align 4, !dbg !4050
  %2 = bitcast %struct.sbitmap_iterator* %sbi to i8*, !dbg !4051
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4051
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4052
  %call = tail call zeroext i8 @need_ssa_update_p(%struct.function* %3) #7, !dbg !4054
  %tobool = icmp eq i8 %call, 0, !dbg !4054
  br i1 %tobool, label %cleanup, label %do.body, !dbg !4055

do.body:                                          ; preds = %entry
  %4 = load i8, i8* @timevar_enable, align 1, !dbg !4056
  %tobool1 = icmp eq i8 %4, 0, !dbg !4056
  br i1 %tobool1, label %do.end, label %if.then2, !dbg !4059

if.then2:                                         ; preds = %do.body
  tail call void @timevar_push_1(i32 60) #6, !dbg !4056
  br label %do.end, !dbg !4056

do.end:                                           ; preds = %do.body, %if.then2
  %5 = load %struct.function*, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !4060
  %tobool4 = icmp eq %struct.function* %5, null, !dbg !4060
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !4062

if.then5:                                         ; preds = %do.end
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4063
  tail call fastcc void @init_update_ssa(%struct.function* %6) #7, !dbg !4064
  %.pre = load %struct.function*, %struct.function** @update_ssa_initialized_fn, align 8, !dbg !4065
  br label %if.end7, !dbg !4064

if.end7:                                          ; preds = %do.end, %if.then5
  %7 = phi %struct.function* [ %5, %do.end ], [ %.pre, %if.then5 ], !dbg !4065
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4065
  %cmp = icmp eq %struct.function* %7, %8, !dbg !4065
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4065

cond.true:                                        ; preds = %if.end7
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 3242, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4065
  br label %cond.end, !dbg !4065

cond.end:                                         ; preds = %if.end7, %cond.true
  %call9 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4066
  store %struct.bitmap_head_def* %call9, %struct.bitmap_head_def** @blocks_with_phis_to_rewrite, align 8, !dbg !4067
  %9 = load %struct.VEC_gimple_vec_heap*, %struct.VEC_gimple_vec_heap** @phis_to_rewrite, align 8, !dbg !4068
  %tobool10 = icmp eq %struct.VEC_gimple_vec_heap* %9, null, !dbg !4068
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !4070

if.then11:                                        ; preds = %cond.end
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4071
  %cfg = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 1, !dbg !4071
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4071
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 5, !dbg !4071
  %12 = load i32, i32* %x_last_basic_block, align 8, !dbg !4071
  %call13 = tail call fastcc %struct.VEC_gimple_vec_heap* @VEC_gimple_vec_heap_alloc(i32 %12) #7, !dbg !4071
  store %struct.VEC_gimple_vec_heap* %call13, %struct.VEC_gimple_vec_heap** @phis_to_rewrite, align 8, !dbg !4072
  br label %if.end14, !dbg !4073

if.end14:                                         ; preds = %cond.end, %if.then11
  %call15 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4074
  store %struct.bitmap_head_def* %call15, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !4075
  tail call void @calculate_dominance_info(i32 1) #6, !dbg !4076
  %13 = add i32 %update_flags, -2048, !dbg !4077
  %14 = lshr i32 %13, 11, !dbg !4077
  %15 = shl i32 %13, 21, !dbg !4077
  %16 = or i32 %14, %15, !dbg !4077
  switch i32 %16, label %cond.true22 [
    i32 0, label %cond.end24
    i32 1, label %cond.end24
    i32 3, label %cond.end24
    i32 7, label %cond.end24
  ], !dbg !4077

cond.true22:                                      ; preds = %if.end14
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 3256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4077
  br label %cond.end24, !dbg !4077

cond.end24:                                       ; preds = %if.end14, %if.end14, %if.end14, %if.end14, %cond.true22
  %cmp26 = icmp eq i32 %update_flags, 16384, !dbg !4078
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !4080

if.then27:                                        ; preds = %cond.end24
  %17 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !4081
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %17) #6, !dbg !4083
  %18 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !4084
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %18) #6, !dbg !4085
  %19 = load %struct.htab*, %struct.htab** @repl_tbl, align 8, !dbg !4086
  tail call void @htab_empty(%struct.htab* %19) #6, !dbg !4087
  br label %if.end28, !dbg !4088

if.end28:                                         ; preds = %if.then27, %cond.end24
  %cmp29 = icmp ne i32 %update_flags, 4096, !dbg !4089
  %conv30 = zext i1 %cmp29 to i8, !dbg !4090
  call void @llvm.dbg.value(metadata i8 %conv30, metadata !4033, metadata !DIExpression()), !dbg !4047
  br i1 %cmp29, label %if.then32, label %if.else, !dbg !4091

if.then32:                                        ; preds = %if.end28
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4092
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, i32 3, !dbg !4092
  %21 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4092
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %21, i64 0, i32 2, !dbg !4092
  %22 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !4092
  %tobool34 = icmp eq %struct.VEC_tree_gc* %22, null, !dbg !4092
  br i1 %tobool34, label %cond.end40, label %cond.true35, !dbg !4092

cond.true35:                                      ; preds = %if.then32
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %22, i64 0, i32 0, !dbg !4092
  br label %cond.end40, !dbg !4092

cond.end40:                                       ; preds = %if.then32, %cond.true35
  %cond41 = phi %struct.VEC_tree_base* [ %base, %cond.true35 ], [ null, %if.then32 ], !dbg !4092
  %call42 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond41) #7, !dbg !4092
  %conv43 = zext i32 %call42 to i64, !dbg !4092
  %call44 = tail call %struct.htab* @htab_create(i64 %conv43, i32 (i8*)* nonnull @def_blocks_hash, i32 (i8*, i8*)* nonnull @def_blocks_eq, void (i8*)* nonnull @def_blocks_free) #6, !dbg !4095
  br label %if.end45, !dbg !4096

if.else:                                          ; preds = %if.end28
  br label %if.end45

if.end45:                                         ; preds = %if.else, %cond.end40
  %storemerge = phi %struct.htab* [ null, %if.else ], [ %call44, %cond.end40 ], !dbg !4097
  store %struct.htab* %storemerge, %struct.htab** @def_blocks, align 8, !dbg !4097
  br i1 %cmp29, label %land.lhs.true, label %if.end52, !dbg !4098

land.lhs.true:                                    ; preds = %if.end45
  %call48 = tail call fastcc zeroext i8 @switch_virtuals_to_full_rewrite_p() #7, !dbg !4100
  %tobool50 = icmp eq i8 %call48, 0, !dbg !4100
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !4101

if.then51:                                        ; preds = %land.lhs.true
  tail call fastcc void @switch_virtuals_to_full_rewrite() #7, !dbg !4102
  br label %if.end52, !dbg !4102

if.end52:                                         ; preds = %land.lhs.true, %if.then51, %if.end45
  %23 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !4103
  %call53 = tail call i32 @sbitmap_first_set_bit(%struct.simple_bitmap_def* %23) #6, !dbg !4105
  %cmp54 = icmp sgt i32 %call53, -1, !dbg !4106
  br i1 %cmp54, label %if.then56, label %if.end66, !dbg !4107

if.then56:                                        ; preds = %if.end52
  tail call fastcc void @prepare_names_to_update(i8 zeroext %conv30) #7, !dbg !4108
  %24 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !4110
  %call57 = tail call i32 @sbitmap_first_set_bit(%struct.simple_bitmap_def* %24) #6, !dbg !4112
  %cmp58 = icmp slt i32 %call57, 0, !dbg !4113
  br i1 %cmp58, label %land.lhs.true60, label %if.end66, !dbg !4114

land.lhs.true60:                                  ; preds = %if.then56
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4115
  %gimple_df62 = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, i32 3, !dbg !4115
  %26 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df62, align 8, !dbg !4115
  %syms_to_rename = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %26, i64 0, i32 9, !dbg !4115
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %syms_to_rename, align 8, !dbg !4115
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %27, i64 0, i32 0, !dbg !4115
  %28 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !4115
  %tobool63 = icmp eq %struct.bitmap_element_def* %28, null, !dbg !4115
  br i1 %tobool63, label %done, label %if.end66, !dbg !4116

if.end66:                                         ; preds = %land.lhs.true60, %if.then56, %if.end52
  %29 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4117
  %gimple_df68 = getelementptr inbounds %struct.function, %struct.function* %29, i64 0, i32 3, !dbg !4117
  %30 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df68, align 8, !dbg !4117
  %syms_to_rename69 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %30, i64 0, i32 9, !dbg !4117
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %syms_to_rename69, align 8, !dbg !4117
  %first70 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %31, i64 0, i32 0, !dbg !4117
  %32 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first70, align 8, !dbg !4117
  %tobool71 = icmp eq %struct.bitmap_element_def* %32, null, !dbg !4117
  br i1 %tobool71, label %if.else75, label %if.then72, !dbg !4119

if.then72:                                        ; preds = %if.end66
  %cfg74 = getelementptr inbounds %struct.function, %struct.function* %29, i64 0, i32 1, !dbg !4120
  %33 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg74, align 8, !dbg !4120
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %33, i64 0, i32 0, !dbg !4120
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4120
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %34, metadata !4030, metadata !DIExpression()), !dbg !4047
  tail call fastcc void @prepare_block_for_update(%struct.basic_block_def* %34, i8 zeroext %conv30) #7, !dbg !4122
  br label %if.end77, !dbg !4123

if.else75:                                        ; preds = %if.end66
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !4124
  %call76 = tail call %struct.basic_block_def* @nearest_common_dominator_for_set(i32 1, %struct.bitmap_head_def* %35) #6, !dbg !4126
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call76, metadata !4030, metadata !DIExpression()), !dbg !4047
  br label %if.end77

if.end77:                                         ; preds = %if.else75, %if.then72
  %start_bb.0 = phi %struct.basic_block_def* [ %34, %if.then72 ], [ %call76, %if.else75 ], !dbg !4127
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %start_bb.0, metadata !4030, metadata !DIExpression()), !dbg !4047
  br i1 %cmp29, label %if.then79, label %if.end158, !dbg !4128

if.then79:                                        ; preds = %if.end77
  %36 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4129
  %cfg81 = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, i32 1, !dbg !4129
  %37 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg81, align 8, !dbg !4129
  %x_last_basic_block82 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %37, i64 0, i32 5, !dbg !4129
  %38 = load i32, i32* %x_last_basic_block82, align 8, !dbg !4129
  %conv83 = sext i32 %38 to i64, !dbg !4129
  %mul = shl nsw i64 %conv83, 3, !dbg !4129
  %call84 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !4129
  %39 = bitcast i8* %call84 to %struct.bitmap_head_def**, !dbg !4129
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %39, metadata !4035, metadata !DIExpression()), !dbg !4130
  %40 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4131
  %cfg86 = getelementptr inbounds %struct.function, %struct.function* %40, i64 0, i32 1, !dbg !4131
  %41 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg86, align 8, !dbg !4131
  %x_entry_block_ptr87 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %41, i64 0, i32 0, !dbg !4131
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr87, align 8, !dbg !4131
  br label %for.cond, !dbg !4131

for.cond:                                         ; preds = %for.body, %if.then79
  %43 = phi %struct.control_flow_graph* [ %41, %if.then79 ], [ %.pre4, %for.body ], !dbg !4133
  %.pn = phi %struct.basic_block_def* [ %42, %if.then79 ], [ %bb.0, %for.body ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4135
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4135
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4029, metadata !DIExpression()), !dbg !4047
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %43, i64 0, i32 1, !dbg !4133
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4133
  %cmp90 = icmp eq %struct.basic_block_def* %bb.0, %44, !dbg !4133
  br i1 %cmp90, label %for.end, label %for.body, !dbg !4131

for.body:                                         ; preds = %for.cond
  %call92 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4136
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !4137
  %45 = load i32, i32* %index, align 8, !dbg !4137
  %idxprom = sext i32 %45 to i64, !dbg !4138
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %39, i64 %idxprom, !dbg !4138
  store %struct.bitmap_head_def* %call92, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !4139
  %.pre3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4133
  %cfg89.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre3, i64 0, i32 1, !dbg !4140
  %.pre4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg89.phi.trans.insert, align 8, !dbg !4133
  br label %for.cond, !dbg !4133, !llvm.loop !4141

for.end:                                          ; preds = %for.cond
  tail call void @compute_dominance_frontiers(%struct.bitmap_head_def** %39) #6, !dbg !4143
  %46 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !4144
  %call94 = tail call i32 @sbitmap_first_set_bit(%struct.simple_bitmap_def* %46) #6, !dbg !4145
  %cmp95 = icmp sgt i32 %call94, -1, !dbg !4146
  br i1 %cmp95, label %if.then97, label %if.end119, !dbg !4147

if.then97:                                        ; preds = %for.end
  %47 = bitcast %struct.sbitmap_iterator* %sbi98 to i8*, !dbg !4148
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #8, !dbg !4148
  %48 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !4149
  %n_bits = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %48, i64 0, i32 1, !dbg !4150
  %49 = load i32, i32* %n_bits, align 8, !dbg !4150
  %call99 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %49) #6, !dbg !4151
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call99, metadata !4041, metadata !DIExpression()), !dbg !4152
  %50 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !4153
  tail call void @sbitmap_copy(%struct.simple_bitmap_def* %call99, %struct.simple_bitmap_def* %50) #6, !dbg !4154
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi98, metadata !4038, metadata !DIExpression(DW_OP_deref)), !dbg !4152
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi98, %struct.simple_bitmap_def* %call99, i32 0) #7, !dbg !4155
  br label %for.cond100, !dbg !4155

for.cond100:                                      ; preds = %cond.end114, %if.then97
  call void @llvm.dbg.value(metadata i32* %i, metadata !4032, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi98, metadata !4038, metadata !DIExpression(DW_OP_deref)), !dbg !4152
  %call101 = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi98, i32* nonnull %i) #7, !dbg !4157
  %tobool102 = icmp eq i8 %call101, 0, !dbg !4155
  br i1 %tobool102, label %for.end118, label %for.body103, !dbg !4155

for.body103:                                      ; preds = %for.cond100
  %51 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4159
  %gimple_df105 = getelementptr inbounds %struct.function, %struct.function* %51, i64 0, i32 3, !dbg !4159
  %52 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df105, align 8, !dbg !4159
  %ssa_names106 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %52, i64 0, i32 2, !dbg !4159
  %53 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names106, align 8, !dbg !4159
  %tobool107 = icmp eq %struct.VEC_tree_gc* %53, null, !dbg !4159
  br i1 %tobool107, label %cond.end114, label %cond.true108, !dbg !4159

cond.true108:                                     ; preds = %for.body103
  %base112 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %53, i64 0, i32 0, !dbg !4159
  br label %cond.end114, !dbg !4159

cond.end114:                                      ; preds = %for.body103, %cond.true108
  %cond115 = phi %struct.VEC_tree_base* [ %base112, %cond.true108 ], [ null, %for.body103 ], !dbg !4159
  %54 = load i32, i32* %i, align 4, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %54, metadata !4032, metadata !DIExpression()), !dbg !4047
  %call116 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond115, i32 %54) #7, !dbg !4159
  %55 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !4160
  call fastcc void @insert_updated_phi_nodes_for(%union.tree_node* %call116, %struct.bitmap_head_def** %39, %struct.bitmap_head_def* %55, i32 %update_flags) #7, !dbg !4161
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi98, metadata !4038, metadata !DIExpression(DW_OP_deref)), !dbg !4152
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi98) #7, !dbg !4157
  br label %for.cond100, !dbg !4157, !llvm.loop !4162

for.end118:                                       ; preds = %for.cond100
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call99, i64 0, i32 0, !dbg !4164
  %56 = load i8*, i8** %popcount, align 8, !dbg !4164
  call void @free(i8* %56) #6, !dbg !4164
  %57 = bitcast %struct.simple_bitmap_def* %call99 to i8*, !dbg !4164
  call void @free(i8* %57) #6, !dbg !4164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #8, !dbg !4165
  br label %if.end119, !dbg !4166

if.end119:                                        ; preds = %for.end118, %for.end
  %58 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4167
  %gimple_df121 = getelementptr inbounds %struct.function, %struct.function* %58, i64 0, i32 3, !dbg !4167
  %59 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df121, align 8, !dbg !4167
  %syms_to_rename122 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %59, i64 0, i32 9, !dbg !4167
  %60 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %syms_to_rename122, align 8, !dbg !4167
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i, metadata !4032, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %60, i32 0, i32* nonnull %i) #7, !dbg !4167
  br label %for.cond123, !dbg !4167

for.cond123:                                      ; preds = %for.body126, %if.end119
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i, metadata !4032, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  %call124 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4169
  %tobool125 = icmp eq i8 %call124, 0, !dbg !4167
  br i1 %tobool125, label %for.end129, label %for.body126, !dbg !4167

for.body126:                                      ; preds = %for.cond123
  %61 = load i32, i32* %i, align 4, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %61, metadata !4032, metadata !DIExpression()), !dbg !4047
  %call127 = call %union.tree_node* @referenced_var_lookup(i32 %61) #6, !dbg !4171
  %62 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !4172
  call fastcc void @insert_updated_phi_nodes_for(%union.tree_node* %call127, %struct.bitmap_head_def** %39, %struct.bitmap_head_def* %62, i32 %update_flags) #7, !dbg !4173
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i, metadata !4032, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4169
  br label %for.cond123, !dbg !4169, !llvm.loop !4174

for.end129:                                       ; preds = %for.cond123
  %63 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4176
  %cfg131 = getelementptr inbounds %struct.function, %struct.function* %63, i64 0, i32 1, !dbg !4176
  %64 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg131, align 8, !dbg !4176
  %x_entry_block_ptr132 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %64, i64 0, i32 0, !dbg !4176
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr132, align 8, !dbg !4176
  br label %for.cond134, !dbg !4176

for.cond134:                                      ; preds = %for.body140, %for.end129
  %66 = phi %struct.control_flow_graph* [ %64, %for.end129 ], [ %.pre6, %for.body140 ], !dbg !4178
  %.pn1 = phi %struct.basic_block_def* [ %65, %for.end129 ], [ %bb.1, %for.body140 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn1, i64 0, i32 6, !dbg !4180
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !4180
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !4029, metadata !DIExpression()), !dbg !4047
  %x_exit_block_ptr137 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %66, i64 0, i32 1, !dbg !4178
  %67 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr137, align 8, !dbg !4178
  %cmp138 = icmp eq %struct.basic_block_def* %bb.1, %67, !dbg !4178
  br i1 %cmp138, label %for.end149, label %for.body140, !dbg !4176

for.body140:                                      ; preds = %for.cond134
  %index141 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !4181
  %68 = load i32, i32* %index141, align 8, !dbg !4181
  %idxprom142 = sext i32 %68 to i64, !dbg !4181
  %arrayidx143 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %39, i64 %idxprom142, !dbg !4181
  %69 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx143, align 8, !dbg !4181
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %69) #6, !dbg !4181
  %70 = load i32, i32* %index141, align 8, !dbg !4181
  %idxprom145 = sext i32 %70 to i64, !dbg !4181
  %arrayidx146 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %39, i64 %idxprom145, !dbg !4181
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx146, align 8, !dbg !4181
  %.pre5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4178
  %cfg136.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre5, i64 0, i32 1, !dbg !4182
  %.pre6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg136.phi.trans.insert, align 8, !dbg !4178
  br label %for.cond134, !dbg !4178, !llvm.loop !4183

for.end149:                                       ; preds = %for.cond134
  call void @free(i8* %call84) #6, !dbg !4185
  %71 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4186
  %cfg151 = getelementptr inbounds %struct.function, %struct.function* %71, i64 0, i32 1, !dbg !4186
  %72 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg151, align 8, !dbg !4186
  %x_entry_block_ptr152 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %72, i64 0, i32 0, !dbg !4186
  %73 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr152, align 8, !dbg !4186
  %cmp153 = icmp eq %struct.basic_block_def* %start_bb.0, %73, !dbg !4188
  br i1 %cmp153, label %if.end158, label %if.then155, !dbg !4189

if.then155:                                       ; preds = %for.end149
  %74 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !4190
  %call156 = call %struct.basic_block_def* @nearest_common_dominator_for_set(i32 1, %struct.bitmap_head_def* %74) #6, !dbg !4191
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call156, metadata !4030, metadata !DIExpression()), !dbg !4047
  br label %if.end158, !dbg !4192

if.end158:                                        ; preds = %for.end149, %if.then155, %if.end77
  %start_bb.2 = phi %struct.basic_block_def* [ %start_bb.0, %if.end77 ], [ %call156, %if.then155 ], [ %start_bb.0, %for.end149 ], !dbg !4047
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %start_bb.2, metadata !4030, metadata !DIExpression()), !dbg !4047
  %75 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !4193
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4034, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %75, i32 0) #7, !dbg !4193
  br label %for.cond159, !dbg !4193

for.cond159:                                      ; preds = %cond.end173, %if.end158
  call void @llvm.dbg.value(metadata i32* %i, metadata !4032, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4034, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  %call160 = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %i) #7, !dbg !4195
  %tobool161 = icmp eq i8 %call160, 0, !dbg !4193
  %76 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4047
  %gimple_df164 = getelementptr inbounds %struct.function, %struct.function* %76, i64 0, i32 3, !dbg !4047
  %77 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df164, align 8, !dbg !4047
  br i1 %tobool161, label %for.end177, label %for.body162, !dbg !4193

for.body162:                                      ; preds = %for.cond159
  %ssa_names165 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %77, i64 0, i32 2, !dbg !4197
  %78 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names165, align 8, !dbg !4197
  %tobool166 = icmp eq %struct.VEC_tree_gc* %78, null, !dbg !4197
  br i1 %tobool166, label %cond.end173, label %cond.true167, !dbg !4197

cond.true167:                                     ; preds = %for.body162
  %base171 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %78, i64 0, i32 0, !dbg !4197
  br label %cond.end173, !dbg !4197

cond.end173:                                      ; preds = %for.body162, %cond.true167
  %cond174 = phi %struct.VEC_tree_base* [ %base171, %cond.true167 ], [ null, %for.body162 ], !dbg !4197
  %79 = load i32, i32* %i, align 4, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %79, metadata !4032, metadata !DIExpression()), !dbg !4047
  %call175 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond174, i32 %79) #7, !dbg !4197
  call void @set_current_def(%union.tree_node* %call175, %union.tree_node* null) #7, !dbg !4198
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4034, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #7, !dbg !4195
  br label %for.cond159, !dbg !4195, !llvm.loop !4199

for.end177:                                       ; preds = %for.cond159
  %.lcssa8 = phi %struct.gimple_df* [ %77, %for.cond159 ], !dbg !4047
  %syms_to_rename180 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %.lcssa8, i64 0, i32 9, !dbg !4201
  %80 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %syms_to_rename180, align 8, !dbg !4201
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i, metadata !4032, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %80, i32 0, i32* nonnull %i) #7, !dbg !4201
  br label %for.cond181, !dbg !4201

for.cond181:                                      ; preds = %for.body184, %for.end177
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i, metadata !4032, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  %call182 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4203
  %tobool183 = icmp eq i8 %call182, 0, !dbg !4201
  br i1 %tobool183, label %for.end187, label %for.body184, !dbg !4201

for.body184:                                      ; preds = %for.cond181
  %81 = load i32, i32* %i, align 4, !dbg !4205
  call void @llvm.dbg.value(metadata i32 %81, metadata !4032, metadata !DIExpression()), !dbg !4047
  %call185 = call %union.tree_node* @referenced_var_lookup(i32 %81) #6, !dbg !4205
  call void @set_current_def(%union.tree_node* %call185, %union.tree_node* null) #7, !dbg !4206
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i, metadata !4032, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4203
  br label %for.cond181, !dbg !4203, !llvm.loop !4207

for.end187:                                       ; preds = %for.cond181
  %82 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4209
  %cfg189 = getelementptr inbounds %struct.function, %struct.function* %82, i64 0, i32 1, !dbg !4209
  %83 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg189, align 8, !dbg !4209
  %x_last_basic_block190 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %83, i64 0, i32 5, !dbg !4209
  %84 = load i32, i32* %x_last_basic_block190, align 8, !dbg !4209
  %call191 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %84) #6, !dbg !4210
  store %struct.simple_bitmap_def* %call191, %struct.simple_bitmap_def** @interesting_blocks, align 8, !dbg !4211
  call void @sbitmap_zero(%struct.simple_bitmap_def* %call191) #6, !dbg !4212
  %85 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !4213
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i, metadata !4032, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %85, i32 0, i32* nonnull %i) #7, !dbg !4213
  br label %for.cond192, !dbg !4213

for.cond192:                                      ; preds = %for.body195, %for.end187
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i, metadata !4032, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  %call193 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4215
  %tobool194 = icmp eq i8 %call193, 0, !dbg !4213
  br i1 %tobool194, label %for.end197, label %for.body195, !dbg !4213

for.body195:                                      ; preds = %for.cond192
  %86 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @interesting_blocks, align 8, !dbg !4217
  %87 = load i32, i32* %i, align 4, !dbg !4218
  call void @llvm.dbg.value(metadata i32 %87, metadata !4032, metadata !DIExpression()), !dbg !4047
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %86, i32 %87) #7, !dbg !4219
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i, metadata !4032, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4215
  br label %for.cond192, !dbg !4215, !llvm.loop !4220

for.end197:                                       ; preds = %for.cond192
  call fastcc void @rewrite_blocks(%struct.basic_block_def* %start_bb.2, i32 1) #7, !dbg !4222
  %88 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @interesting_blocks, align 8, !dbg !4223
  %popcount198 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %88, i64 0, i32 0, !dbg !4223
  %89 = load i8*, i8** %popcount198, align 8, !dbg !4223
  call void @free(i8* %89) #6, !dbg !4223
  %90 = load i8*, i8** bitcast (%struct.simple_bitmap_def** @interesting_blocks to i8**), align 8, !dbg !4223
  call void @free(i8* %90) #6, !dbg !4223
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4224
  %tobool199 = icmp eq %struct._IO_FILE* %91, null, !dbg !4224
  br i1 %tobool199, label %done, label %if.then200, !dbg !4225

if.then200:                                       ; preds = %for.end197
  %92 = bitcast i32* %i201 to i8*, !dbg !4226
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #8, !dbg !4226
  call void @dump_update_ssa(%struct._IO_FILE* nonnull %91) #7, !dbg !4227
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4228
  %index202 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %start_bb.2, i64 0, i32 9, !dbg !4229
  %94 = load i32, i32* %index202, align 8, !dbg !4229
  %call203 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33, i64 0, i64 0), i32 %94) #6, !dbg !4230
  call void @llvm.dbg.value(metadata i32 0, metadata !4042, metadata !DIExpression()), !dbg !4231
  %95 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !4232
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i201, metadata !4045, metadata !DIExpression(DW_OP_deref)), !dbg !4231
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %95, i32 0, i32* nonnull %i201) #7, !dbg !4232
  br label %for.cond204, !dbg !4232

for.cond204:                                      ; preds = %for.body207, %if.then200
  %c.0 = phi i32 [ 0, %if.then200 ], [ %inc, %for.body207 ], !dbg !4231
  call void @llvm.dbg.value(metadata i32 %c.0, metadata !4042, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i201, metadata !4045, metadata !DIExpression(DW_OP_deref)), !dbg !4231
  %call205 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i201) #7, !dbg !4234
  %tobool206 = icmp eq i8 %call205, 0, !dbg !4232
  br i1 %tobool206, label %for.end209, label %for.body207, !dbg !4232

for.body207:                                      ; preds = %for.cond204
  %inc = add nuw nsw i32 %c.0, 1, !dbg !4236
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4042, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i201, metadata !4045, metadata !DIExpression(DW_OP_deref)), !dbg !4231
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i201) #7, !dbg !4234
  br label %for.cond204, !dbg !4234, !llvm.loop !4237

for.end209:                                       ; preds = %for.cond204
  %c.0.lcssa = phi i32 [ %c.0, %for.cond204 ], !dbg !4231
  call void @llvm.dbg.value(metadata i32 %c.0.lcssa, metadata !4042, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata i32 %c.0.lcssa, metadata !4042, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata i32 %c.0.lcssa, metadata !4042, metadata !DIExpression()), !dbg !4231
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4239
  %97 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4240
  %cfg211 = getelementptr inbounds %struct.function, %struct.function* %97, i64 0, i32 1, !dbg !4240
  %98 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg211, align 8, !dbg !4240
  %x_last_basic_block212 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %98, i64 0, i32 5, !dbg !4240
  %99 = load i32, i32* %x_last_basic_block212, align 8, !dbg !4240
  %call213 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i64 0, i64 0), i32 %99) #6, !dbg !4241
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4242
  %conv214 = sitofp i32 %c.0.lcssa to float, !dbg !4243
  %conv215 = fpext float %conv214 to double, !dbg !4243
  %mul216 = fmul double %conv215, 1.000000e+02, !dbg !4243
  %101 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4243
  %cfg218 = getelementptr inbounds %struct.function, %struct.function* %101, i64 0, i32 1, !dbg !4243
  %102 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg218, align 8, !dbg !4243
  %x_last_basic_block219 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %102, i64 0, i32 5, !dbg !4243
  %103 = load i32, i32* %x_last_basic_block219, align 8, !dbg !4243
  %conv220 = sitofp i32 %103 to float, !dbg !4243
  %conv221 = fpext float %conv220 to double, !dbg !4243
  %div = fdiv double %mul216, %conv221, !dbg !4243
  %call222 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.35, i64 0, i64 0), i32 %c.0.lcssa, double %div) #6, !dbg !4244
  %104 = load i32, i32* @dump_flags, align 4, !dbg !4245
  %and = and i32 %104, 8, !dbg !4247
  %tobool223 = icmp eq i32 %and, 0, !dbg !4247
  br i1 %tobool223, label %if.end234, label %if.then224, !dbg !4248

if.then224:                                       ; preds = %for.end209
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4249
  %call225 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %105, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !4251
  %106 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !4252
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i201, metadata !4045, metadata !DIExpression(DW_OP_deref)), !dbg !4231
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %106, i32 0, i32* nonnull %i201) #7, !dbg !4252
  br label %for.cond226, !dbg !4252

for.cond226:                                      ; preds = %for.body229, %if.then224
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i201, metadata !4045, metadata !DIExpression(DW_OP_deref)), !dbg !4231
  %call227 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i201) #7, !dbg !4254
  %tobool228 = icmp eq i8 %call227, 0, !dbg !4252
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4256
  br i1 %tobool228, label %for.end232, label %for.body229, !dbg !4252

for.body229:                                      ; preds = %for.cond226
  %108 = load i32, i32* %i201, align 4, !dbg !4257
  call void @llvm.dbg.value(metadata i32 %108, metadata !4045, metadata !DIExpression()), !dbg !4231
  %call230 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i32 %108) #6, !dbg !4258
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4031, metadata !DIExpression(DW_OP_deref)), !dbg !4047
  call void @llvm.dbg.value(metadata i32* %i201, metadata !4045, metadata !DIExpression(DW_OP_deref)), !dbg !4231
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i201) #7, !dbg !4254
  br label %for.cond226, !dbg !4254, !llvm.loop !4259

for.end232:                                       ; preds = %for.cond226
  %.lcssa = phi %struct._IO_FILE* [ %107, %for.cond226 ], !dbg !4256
  %call233 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %.lcssa, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4261
  br label %if.end234, !dbg !4262

if.end234:                                        ; preds = %for.end209, %for.end232
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4263
  %call235 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !4264
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #8, !dbg !4265
  br label %done, !dbg !4266

done:                                             ; preds = %land.lhs.true60, %for.end197, %if.end234
  call void @llvm.dbg.label(metadata !4046), !dbg !4267
  call void @delete_update_ssa() #7, !dbg !4268
  %110 = load i8, i8* @timevar_enable, align 1, !dbg !4269
  %tobool238 = icmp eq i8 %110, 0, !dbg !4269
  br i1 %tobool238, label %cleanup, label %if.then239, !dbg !4272

if.then239:                                       ; preds = %done
  call void @timevar_pop_1(i32 60) #6, !dbg !4269
  br label %cleanup, !dbg !4269

cleanup:                                          ; preds = %done, %entry, %if.then239
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4273
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !4273
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4273
  ret void, !dbg !4273
}

declare dso_local void @timevar_push_1(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_gimple_vec_heap* @VEC_gimple_vec_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4274 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4278, metadata !DIExpression()), !dbg !4279
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !4280
  %0 = bitcast i8* %call to %struct.VEC_gimple_vec_heap*, !dbg !4280
  ret %struct.VEC_gimple_vec_heap* %0, !dbg !4280
}

declare dso_local void @calculate_dominance_info(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

declare dso_local void @htab_empty(%struct.htab*) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @def_blocks_hash(i8* %p) #5 !dbg !4281 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !4283, metadata !DIExpression()), !dbg !4284
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !4285
  %1 = bitcast i8* %p to i8**, !dbg !4286
  %2 = load i8*, i8** %1, align 8, !dbg !4286
  %call = tail call i32 %0(i8* %2) #6, !dbg !4285
  ret i32 %call, !dbg !4287
}

; Function Attrs: nounwind uwtable
define internal i32 @def_blocks_eq(i8* %p1, i8* %p2) #5 !dbg !4288 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !4290, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.value(metadata i8* %p2, metadata !4291, metadata !DIExpression()), !dbg !4292
  %var = bitcast i8* %p1 to %union.tree_node**, !dbg !4293
  %0 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !4293
  %var1 = bitcast i8* %p2 to %union.tree_node**, !dbg !4294
  %1 = load %union.tree_node*, %union.tree_node** %var1, align 8, !dbg !4294
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !4295
  %conv = zext i1 %cmp to i32, !dbg !4295
  ret i32 %conv, !dbg !4296
}

; Function Attrs: nounwind uwtable
define internal void @def_blocks_free(i8* %p) #5 !dbg !4297 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !4299, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i8* %p, metadata !4300, metadata !DIExpression()), !dbg !4301
  %def_blocks = getelementptr inbounds i8, i8* %p, i64 8, !dbg !4302
  %0 = bitcast i8* %def_blocks to %struct.bitmap_head_def**, !dbg !4302
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, align 8, !dbg !4302
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !4302
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %0, align 8, !dbg !4302
  %phi_blocks = getelementptr inbounds i8, i8* %p, i64 16, !dbg !4303
  %2 = bitcast i8* %phi_blocks to %struct.bitmap_head_def**, !dbg !4303
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %2, align 8, !dbg !4303
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %3) #6, !dbg !4303
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %2, align 8, !dbg !4303
  %livein_blocks = getelementptr inbounds i8, i8* %p, i64 24, !dbg !4304
  %4 = bitcast i8* %livein_blocks to %struct.bitmap_head_def**, !dbg !4304
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %4, align 8, !dbg !4304
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %5) #6, !dbg !4304
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %4, align 8, !dbg !4304
  tail call void @free(i8* %p) #6, !dbg !4305
  ret void, !dbg !4306
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @switch_virtuals_to_full_rewrite_p() unnamed_addr #5 !dbg !4307 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 0), align 8, !dbg !4308
  %1 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4310
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %1, i64 91, i32 1, !dbg !4310
  %2 = load i32, i32* %value, align 8, !dbg !4310
  %cmp = icmp ult i32 %0, %2, !dbg !4311
  br i1 %cmp, label %return, label %if.end, !dbg !4312

if.end:                                           ; preds = %entry
  %value2 = getelementptr inbounds %struct.param_info, %struct.param_info* %1, i64 92, i32 1, !dbg !4313
  %3 = load i32, i32* %value2, align 8, !dbg !4313
  %4 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 3), align 8, !dbg !4315
  %mul = mul i32 %3, %4, !dbg !4316
  %cmp3 = icmp ugt i32 %0, %mul, !dbg !4317
  %. = zext i1 %cmp3 to i8, !dbg !4318
  br label %return, !dbg !4318

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ %., %if.end ], !dbg !4318
  ret i8 %retval.0, !dbg !4319
}

; Function Attrs: nounwind uwtable
define internal fastcc void @switch_virtuals_to_full_rewrite() unnamed_addr #5 !dbg !4320 {
entry:
  %i = alloca i32, align 4
  %sbi = alloca %struct.sbitmap_iterator, align 8
  %0 = bitcast i32* %i to i8*, !dbg !4324
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4324
  call void @llvm.dbg.value(metadata i32 0, metadata !4322, metadata !DIExpression()), !dbg !4325
  store i32 0, i32* %i, align 4, !dbg !4326
  %1 = bitcast %struct.sbitmap_iterator* %sbi to i8*, !dbg !4327
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4327
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4328
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !4328
  br i1 %tobool, label %if.end, label %if.then, !dbg !4330

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !4331
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4333
  %4 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 0), align 8, !dbg !4334
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0), i32 %4) #6, !dbg !4335
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4336
  %6 = load i32, i32* getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 3), align 8, !dbg !4337
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.48, i64 0, i64 0), i32 %6) #6, !dbg !4338
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4339
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !4340
  br label %if.end, !dbg !4341

if.end:                                           ; preds = %entry, %if.then
  %8 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !4342
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4323, metadata !DIExpression(DW_OP_deref)), !dbg !4325
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %8, i32 0) #7, !dbg !4342
  br label %for.cond, !dbg !4342

for.cond:                                         ; preds = %for.inc, %if.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !4322, metadata !DIExpression(DW_OP_deref)), !dbg !4325
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4323, metadata !DIExpression(DW_OP_deref)), !dbg !4325
  %call4 = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %i) #7, !dbg !4344
  %tobool5 = icmp eq i8 %call4, 0, !dbg !4342
  br i1 %tobool5, label %for.end, label %for.body, !dbg !4342

for.body:                                         ; preds = %for.cond
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4346
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 3, !dbg !4346
  %10 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4346
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %10, i64 0, i32 2, !dbg !4346
  %11 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !4346
  %tobool6 = icmp eq %struct.VEC_tree_gc* %11, null, !dbg !4346
  br i1 %tobool6, label %cond.end, label %cond.true, !dbg !4346

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %11, i64 0, i32 0, !dbg !4346
  br label %cond.end, !dbg !4346

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !4346
  %12 = load i32, i32* %i, align 4, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %12, metadata !4322, metadata !DIExpression()), !dbg !4325
  %call10 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %12) #7, !dbg !4346
  %call11 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call10) #6, !dbg !4348
  %tobool12 = icmp eq i8 %call11, 0, !dbg !4348
  br i1 %tobool12, label %if.then13, label %for.inc, !dbg !4349

if.then13:                                        ; preds = %cond.end
  %13 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !4350
  %14 = load i32, i32* %i, align 4, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %14, metadata !4322, metadata !DIExpression()), !dbg !4325
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %13, i32 %14) #7, !dbg !4352
  br label %for.inc, !dbg !4352

for.inc:                                          ; preds = %cond.end, %if.then13
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4323, metadata !DIExpression(DW_OP_deref)), !dbg !4325
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #7, !dbg !4344
  br label %for.cond, !dbg !4344, !llvm.loop !4353

for.end:                                          ; preds = %for.cond
  %15 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !4355
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4323, metadata !DIExpression(DW_OP_deref)), !dbg !4325
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %15, i32 0) #7, !dbg !4355
  br label %for.cond15, !dbg !4355

for.cond15:                                       ; preds = %for.inc36, %for.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !4322, metadata !DIExpression(DW_OP_deref)), !dbg !4325
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4323, metadata !DIExpression(DW_OP_deref)), !dbg !4325
  %call16 = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %i) #7, !dbg !4357
  %tobool17 = icmp eq i8 %call16, 0, !dbg !4355
  br i1 %tobool17, label %for.end37, label %for.body18, !dbg !4355

for.body18:                                       ; preds = %for.cond15
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4359
  %gimple_df20 = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, i32 3, !dbg !4359
  %17 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df20, align 8, !dbg !4359
  %ssa_names21 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %17, i64 0, i32 2, !dbg !4359
  %18 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names21, align 8, !dbg !4359
  %tobool22 = icmp eq %struct.VEC_tree_gc* %18, null, !dbg !4359
  br i1 %tobool22, label %cond.end29, label %cond.true23, !dbg !4359

cond.true23:                                      ; preds = %for.body18
  %base27 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %18, i64 0, i32 0, !dbg !4359
  br label %cond.end29, !dbg !4359

cond.end29:                                       ; preds = %for.body18, %cond.true23
  %cond30 = phi %struct.VEC_tree_base* [ %base27, %cond.true23 ], [ null, %for.body18 ], !dbg !4359
  %19 = load i32, i32* %i, align 4, !dbg !4359
  call void @llvm.dbg.value(metadata i32 %19, metadata !4322, metadata !DIExpression()), !dbg !4325
  %call31 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond30, i32 %19) #7, !dbg !4359
  %call32 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call31) #6, !dbg !4361
  %tobool33 = icmp eq i8 %call32, 0, !dbg !4361
  br i1 %tobool33, label %if.then34, label %for.inc36, !dbg !4362

if.then34:                                        ; preds = %cond.end29
  %20 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !4363
  %21 = load i32, i32* %i, align 4, !dbg !4364
  call void @llvm.dbg.value(metadata i32 %21, metadata !4322, metadata !DIExpression()), !dbg !4325
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %20, i32 %21) #7, !dbg !4365
  br label %for.inc36, !dbg !4365

for.inc36:                                        ; preds = %cond.end29, %if.then34
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4323, metadata !DIExpression(DW_OP_deref)), !dbg !4325
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #7, !dbg !4357
  br label %for.cond15, !dbg !4357, !llvm.loop !4366

for.end37:                                        ; preds = %for.cond15
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** getelementptr inbounds (%struct.update_ssa_stats_d, %struct.update_ssa_stats_d* @update_ssa_stats, i64 0, i32 2), align 8, !dbg !4368
  call void @mark_set_for_renaming(%struct.bitmap_head_def* %22) #7, !dbg !4369
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4370
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4370
  ret void, !dbg !4370
}

; Function Attrs: nounwind uwtable
define internal fastcc void @prepare_names_to_update(i8 zeroext %insert_phi_p) unnamed_addr #5 !dbg !4371 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %sbi = alloca %struct.sbitmap_iterator, align 8
  call void @llvm.dbg.value(metadata i8 %insert_phi_p, metadata !4375, metadata !DIExpression()), !dbg !4379
  %0 = bitcast i32* %i to i8*, !dbg !4380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4380
  call void @llvm.dbg.value(metadata i32 0, metadata !4376, metadata !DIExpression()), !dbg !4379
  store i32 0, i32* %i, align 4, !dbg !4381
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4382
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4382
  %2 = bitcast %struct.sbitmap_iterator* %sbi to i8*, !dbg !4383
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4383
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @names_to_release, align 8, !dbg !4384
  %tobool = icmp eq %struct.bitmap_head_def* %3, null, !dbg !4384
  br i1 %tobool, label %if.end, label %if.then, !dbg !4386

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4377, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %3, i32 0, i32* nonnull %i) #7, !dbg !4387
  br label %for.cond, !dbg !4387

for.cond:                                         ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata i32* %i, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4377, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4389
  %tobool1 = icmp eq i8 %call, 0, !dbg !4387
  br i1 %tobool1, label %if.end.loopexit, label %for.body, !dbg !4387

for.body:                                         ; preds = %for.cond
  %4 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !4391
  %5 = load i32, i32* %i, align 4, !dbg !4392
  call void @llvm.dbg.value(metadata i32 %5, metadata !4376, metadata !DIExpression()), !dbg !4379
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %4, i32 %5) #7, !dbg !4393
  call void @llvm.dbg.value(metadata i32* %i, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4377, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4389
  br label %for.cond, !dbg !4389, !llvm.loop !4394

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !4396

if.end:                                           ; preds = %if.end.loopexit, %entry
  %6 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @new_ssa_names, align 8, !dbg !4396
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4378, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %6, i32 0) #7, !dbg !4396
  br label %for.cond2, !dbg !4396

for.cond2:                                        ; preds = %cond.end, %if.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4378, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  %call3 = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %i) #7, !dbg !4398
  %tobool4 = icmp eq i8 %call3, 0, !dbg !4396
  br i1 %tobool4, label %for.end12, label %for.body5, !dbg !4396

for.body5:                                        ; preds = %for.cond2
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4400
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 3, !dbg !4400
  %8 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4400
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %8, i64 0, i32 2, !dbg !4400
  %9 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !4400
  %tobool6 = icmp eq %struct.VEC_tree_gc* %9, null, !dbg !4400
  br i1 %tobool6, label %cond.end, label %cond.true, !dbg !4400

cond.true:                                        ; preds = %for.body5
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %9, i64 0, i32 0, !dbg !4400
  br label %cond.end, !dbg !4400

cond.end:                                         ; preds = %for.body5, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.body5 ], !dbg !4400
  %10 = load i32, i32* %i, align 4, !dbg !4400
  call void @llvm.dbg.value(metadata i32 %10, metadata !4376, metadata !DIExpression()), !dbg !4379
  %call10 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %10) #7, !dbg !4400
  call fastcc void @prepare_def_site_for(%union.tree_node* %call10, i8 zeroext %insert_phi_p) #7, !dbg !4401
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4378, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #7, !dbg !4398
  br label %for.cond2, !dbg !4398, !llvm.loop !4402

for.end12:                                        ; preds = %for.cond2
  %11 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @old_ssa_names, align 8, !dbg !4404
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4378, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  call fastcc void @sbitmap_iter_init(%struct.sbitmap_iterator* nonnull %sbi, %struct.simple_bitmap_def* %11, i32 0) #7, !dbg !4404
  br label %for.cond13, !dbg !4404

for.cond13:                                       ; preds = %cond.end44, %for.end12
  call void @llvm.dbg.value(metadata i32* %i, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4378, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  %call14 = call fastcc zeroext i8 @sbitmap_iter_cond(%struct.sbitmap_iterator* nonnull %sbi, i32* nonnull %i) #7, !dbg !4406
  %tobool15 = icmp eq i8 %call14, 0, !dbg !4404
  br i1 %tobool15, label %for.end48, label %for.body16, !dbg !4404

for.body16:                                       ; preds = %for.cond13
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @names_to_release, align 8, !dbg !4408
  %cmp = icmp eq %struct.bitmap_head_def* %12, null, !dbg !4411
  br i1 %cmp, label %if.then19, label %lor.lhs.false, !dbg !4412

lor.lhs.false:                                    ; preds = %for.body16
  %13 = load i32, i32* %i, align 4, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %13, metadata !4376, metadata !DIExpression()), !dbg !4379
  %call17 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %12, i32 %13) #6, !dbg !4414
  %tobool18 = icmp eq i32 %call17, 0, !dbg !4414
  br i1 %tobool18, label %if.then19, label %if.end33, !dbg !4415

if.then19:                                        ; preds = %lor.lhs.false, %for.body16
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4416
  %gimple_df21 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 3, !dbg !4416
  %15 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df21, align 8, !dbg !4416
  %ssa_names22 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %15, i64 0, i32 2, !dbg !4416
  %16 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names22, align 8, !dbg !4416
  %tobool23 = icmp eq %struct.VEC_tree_gc* %16, null, !dbg !4416
  br i1 %tobool23, label %cond.end30, label %cond.true24, !dbg !4416

cond.true24:                                      ; preds = %if.then19
  %base28 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %16, i64 0, i32 0, !dbg !4416
  br label %cond.end30, !dbg !4416

cond.end30:                                       ; preds = %if.then19, %cond.true24
  %cond31 = phi %struct.VEC_tree_base* [ %base28, %cond.true24 ], [ null, %if.then19 ], !dbg !4416
  %17 = load i32, i32* %i, align 4, !dbg !4416
  call void @llvm.dbg.value(metadata i32 %17, metadata !4376, metadata !DIExpression()), !dbg !4379
  %call32 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond31, i32 %17) #7, !dbg !4416
  call fastcc void @prepare_def_site_for(%union.tree_node* %call32, i8 zeroext %insert_phi_p) #7, !dbg !4417
  br label %if.end33, !dbg !4417

if.end33:                                         ; preds = %lor.lhs.false, %cond.end30
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4418
  %gimple_df35 = getelementptr inbounds %struct.function, %struct.function* %18, i64 0, i32 3, !dbg !4418
  %19 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df35, align 8, !dbg !4418
  %ssa_names36 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %19, i64 0, i32 2, !dbg !4418
  %20 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names36, align 8, !dbg !4418
  %tobool37 = icmp eq %struct.VEC_tree_gc* %20, null, !dbg !4418
  br i1 %tobool37, label %cond.end44, label %cond.true38, !dbg !4418

cond.true38:                                      ; preds = %if.end33
  %base42 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %20, i64 0, i32 0, !dbg !4418
  br label %cond.end44, !dbg !4418

cond.end44:                                       ; preds = %if.end33, %cond.true38
  %cond45 = phi %struct.VEC_tree_base* [ %base42, %cond.true38 ], [ null, %if.end33 ], !dbg !4418
  %21 = load i32, i32* %i, align 4, !dbg !4418
  call void @llvm.dbg.value(metadata i32 %21, metadata !4376, metadata !DIExpression()), !dbg !4379
  %call46 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond45, i32 %21) #7, !dbg !4418
  call fastcc void @prepare_use_sites_for(%union.tree_node* %call46, i8 zeroext %insert_phi_p) #7, !dbg !4419
  call void @llvm.dbg.value(metadata %struct.sbitmap_iterator* %sbi, metadata !4378, metadata !DIExpression(DW_OP_deref)), !dbg !4379
  call fastcc void @sbitmap_iter_next(%struct.sbitmap_iterator* nonnull %sbi) #7, !dbg !4406
  br label %for.cond13, !dbg !4406, !llvm.loop !4420

for.end48:                                        ; preds = %for.cond13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4422
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4422
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4422
  ret void, !dbg !4422
}

; Function Attrs: nounwind uwtable
define internal fastcc void @prepare_block_for_update(%struct.basic_block_def* %bb, i8 zeroext %insert_phi_p) unnamed_addr #5 !dbg !4423 {
entry:
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp5 = alloca %struct.edge_iterator, align 8
  %tmp15 = alloca %struct.gimple_stmt_iterator, align 8
  %i = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4427, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i8 %insert_phi_p, metadata !4428, metadata !DIExpression()), !dbg !4474
  %0 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !4475
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4475
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !4476
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4476
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4477
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4477
  tail call fastcc void @mark_block_for_update(%struct.basic_block_def* %bb) #7, !dbg !4478
  %3 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4479
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !4479
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #6, !dbg !4479
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !4479
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !4479
  %4 = bitcast %struct.edge_iterator* %tmp5 to i8*, !dbg !4480
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !4480
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp5, i64 0, i32 0, !dbg !4480
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp5, i64 0, i32 1, !dbg !4480
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4482
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4482
  br label %for.cond, !dbg !4484

for.cond:                                         ; preds = %cleanup, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4430, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !4485
  %tobool = icmp eq i8 %call, 0, !dbg !4486
  br i1 %tobool, label %for.body, label %for.end14, !dbg !4487

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4430, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !4488
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4439, metadata !DIExpression()), !dbg !4489
  %call2 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call1) #7, !dbg !4490
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4444, metadata !DIExpression()), !dbg !4489
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4491
  %bf.load = load i64, i64* %9, align 8, !dbg !4491
  %bf.cast = and i64 %bf.load, 65535, !dbg !4491
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4491
  %10 = load i32, i32* %arrayidx, align 4, !dbg !4491
  %cmp = icmp eq i32 %10, 3, !dbg !4491
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !4491

cond.false:                                       ; preds = %for.body
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4492
  %11 = bitcast i32* %var to %union.tree_node**, !dbg !4492
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !4492
  br label %cond.end, !dbg !4491

cond.end:                                         ; preds = %for.body, %cond.false
  %cond = phi %union.tree_node* [ %12, %cond.false ], [ %call2, %for.body ], !dbg !4491
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !4443, metadata !DIExpression()), !dbg !4489
  %call3 = call fastcc zeroext i8 @symbol_marked_for_renaming(%union.tree_node* %cond) #7, !dbg !4493
  %tobool4 = icmp eq i8 %call3, 0, !dbg !4493
  br i1 %tobool4, label %cleanup, label %if.end, !dbg !4495

if.end:                                           ; preds = %cond.end
  call fastcc void @mark_def_interesting(%union.tree_node* %cond, %union.gimple_statement_d* %call1, %struct.basic_block_def* %bb, i8 zeroext %insert_phi_p) #7, !dbg !4496
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !4497
  %call6 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !4497
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call6, 0, !dbg !4497
  store i32 %13, i32* %5, align 8, !dbg !4497
  %14 = extractvalue { i32, %struct.VEC_edge_gc** } %call6, 1, !dbg !4497
  store %struct.VEC_edge_gc** %14, %struct.VEC_edge_gc*** %6, align 8, !dbg !4497
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !4497
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !4497
  br label %for.cond7, !dbg !4497

for.cond7:                                        ; preds = %for.body10, %if.end
  %15 = load i32, i32* %7, align 8, !dbg !4498
  %16 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !4498
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4437, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call8 = call fastcc zeroext i8 @ei_cond(i32 %15, %struct.VEC_edge_gc** %16, %struct.edge_def** nonnull %e) #7, !dbg !4498
  %tobool9 = icmp eq i8 %call8, 0, !dbg !4497
  br i1 %tobool9, label %cleanup.loopexit, label %for.body10, !dbg !4497

for.body10:                                       ; preds = %for.cond7
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4499
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !4437, metadata !DIExpression()), !dbg !4474
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i64 0, i32 0, !dbg !4500
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4500
  call fastcc void @mark_use_interesting(%union.tree_node* %cond, %union.gimple_statement_d* %call1, %struct.basic_block_def* %18, i8 zeroext %insert_phi_p) #7, !dbg !4501
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4438, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4498
  br label %for.cond7, !dbg !4498, !llvm.loop !4502

cleanup.loopexit:                                 ; preds = %for.cond7
  br label %cleanup, !dbg !4504

cleanup:                                          ; preds = %cleanup.loopexit, %cond.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4430, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #7, !dbg !4504
  br label %for.cond, !dbg !4505, !llvm.loop !4506

for.end14:                                        ; preds = %for.cond
  %19 = bitcast %struct.gimple_stmt_iterator* %tmp15 to i8*, !dbg !4508
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8, !dbg !4508
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp15, %struct.basic_block_def* %bb) #7, !dbg !4508
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %19, i64 24, i1 false), !dbg !4508
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8, !dbg !4508
  %20 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %i, i64 0, i32 0, !dbg !4509
  br label %for.cond16, !dbg !4510

for.cond16:                                       ; preds = %for.end76, %for.end14
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4430, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call17 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !4511
  %tobool18 = icmp eq i8 %call17, 0, !dbg !4512
  br i1 %tobool18, label %for.body20, label %for.end78, !dbg !4513

for.body20:                                       ; preds = %for.cond16
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #8, !dbg !4514
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4430, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call21 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !4515
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call21, metadata !4445, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %i, metadata !4449, metadata !DIExpression(DW_OP_deref)), !dbg !4509
  %call22 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %i, %union.gimple_statement_d* %call21, i32 5) #7, !dbg !4516
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call22, metadata !4462, metadata !DIExpression()), !dbg !4509
  br label %for.cond23, !dbg !4516

for.cond23:                                       ; preds = %for.inc46, %for.body20
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call22, %for.body20 ], [ %call47, %for.inc46 ], !dbg !4517
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !4462, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %i, metadata !4449, metadata !DIExpression(DW_OP_deref)), !dbg !4509
  %call24 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %i) #7, !dbg !4518
  %tobool25 = icmp eq i8 %call24, 0, !dbg !4518
  br i1 %tobool25, label %for.body27, label %for.end48, !dbg !4516

for.body27:                                       ; preds = %for.cond23
  %call28 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !4519
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !4464, metadata !DIExpression()), !dbg !4520
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4521
  %bf.load30 = load i64, i64* %21, align 8, !dbg !4521
  %bf.cast32 = and i64 %bf.load30, 65535, !dbg !4521
  %arrayidx34 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast32, !dbg !4521
  %22 = load i32, i32* %arrayidx34, align 4, !dbg !4521
  %cmp35 = icmp eq i32 %22, 3, !dbg !4521
  br i1 %cmp35, label %cond.end40, label %cond.false37, !dbg !4521

cond.false37:                                     ; preds = %for.body27
  %var39 = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4522
  %23 = bitcast i32* %var39 to %union.tree_node**, !dbg !4522
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !4522
  br label %cond.end40, !dbg !4521

cond.end40:                                       ; preds = %for.body27, %cond.false37
  %cond41 = phi %union.tree_node* [ %24, %cond.false37 ], [ %call28, %for.body27 ], !dbg !4521
  call void @llvm.dbg.value(metadata %union.tree_node* %cond41, metadata !4468, metadata !DIExpression()), !dbg !4520
  %call42 = call fastcc zeroext i8 @symbol_marked_for_renaming(%union.tree_node* %cond41) #7, !dbg !4523
  %tobool43 = icmp eq i8 %call42, 0, !dbg !4523
  br i1 %tobool43, label %for.inc46, label %if.then44, !dbg !4525

if.then44:                                        ; preds = %cond.end40
  call fastcc void @mark_use_interesting(%union.tree_node* %cond41, %union.gimple_statement_d* %call21, %struct.basic_block_def* %bb, i8 zeroext %insert_phi_p) #7, !dbg !4526
  br label %for.inc46, !dbg !4526

for.inc46:                                        ; preds = %cond.end40, %if.then44
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %i, metadata !4449, metadata !DIExpression(DW_OP_deref)), !dbg !4509
  %call47 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %i) #7, !dbg !4518
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call47, metadata !4462, metadata !DIExpression()), !dbg !4509
  br label %for.cond23, !dbg !4518, !llvm.loop !4527

for.end48:                                        ; preds = %for.cond23
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %i, metadata !4449, metadata !DIExpression(DW_OP_deref)), !dbg !4509
  %call49 = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %i, %union.gimple_statement_d* %call21, i32 10) #7, !dbg !4529
  call void @llvm.dbg.value(metadata %union.tree_node** %call49, metadata !4463, metadata !DIExpression()), !dbg !4509
  br label %for.cond50, !dbg !4529

for.cond50:                                       ; preds = %for.inc74, %for.end48
  %def_p.0 = phi %union.tree_node** [ %call49, %for.end48 ], [ %call75, %for.inc74 ], !dbg !4530
  call void @llvm.dbg.value(metadata %union.tree_node** %def_p.0, metadata !4463, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %i, metadata !4449, metadata !DIExpression(DW_OP_deref)), !dbg !4509
  %call51 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %i) #7, !dbg !4531
  %tobool52 = icmp eq i8 %call51, 0, !dbg !4531
  br i1 %tobool52, label %for.body54, label %for.end76, !dbg !4529

for.body54:                                       ; preds = %for.cond50
  %call55 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def_p.0) #7, !dbg !4532
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !4469, metadata !DIExpression()), !dbg !4533
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4534
  %bf.load58 = load i64, i64* %25, align 8, !dbg !4534
  %bf.cast60 = and i64 %bf.load58, 65535, !dbg !4534
  %arrayidx62 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast60, !dbg !4534
  %26 = load i32, i32* %arrayidx62, align 4, !dbg !4534
  %cmp63 = icmp eq i32 %26, 3, !dbg !4534
  br i1 %cmp63, label %cond.end68, label %cond.false65, !dbg !4534

cond.false65:                                     ; preds = %for.body54
  %var67 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4535
  %27 = bitcast i32* %var67 to %union.tree_node**, !dbg !4535
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8, !dbg !4535
  br label %cond.end68, !dbg !4534

cond.end68:                                       ; preds = %for.body54, %cond.false65
  %cond69 = phi %union.tree_node* [ %28, %cond.false65 ], [ %call55, %for.body54 ], !dbg !4534
  call void @llvm.dbg.value(metadata %union.tree_node* %cond69, metadata !4473, metadata !DIExpression()), !dbg !4533
  %call70 = call fastcc zeroext i8 @symbol_marked_for_renaming(%union.tree_node* %cond69) #7, !dbg !4536
  %tobool71 = icmp eq i8 %call70, 0, !dbg !4536
  br i1 %tobool71, label %for.inc74, label %if.then72, !dbg !4538

if.then72:                                        ; preds = %cond.end68
  call fastcc void @mark_def_interesting(%union.tree_node* %cond69, %union.gimple_statement_d* %call21, %struct.basic_block_def* %bb, i8 zeroext %insert_phi_p) #7, !dbg !4539
  br label %for.inc74, !dbg !4539

for.inc74:                                        ; preds = %cond.end68, %if.then72
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %i, metadata !4449, metadata !DIExpression(DW_OP_deref)), !dbg !4509
  %call75 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %i) #7, !dbg !4531
  call void @llvm.dbg.value(metadata %union.tree_node** %call75, metadata !4463, metadata !DIExpression()), !dbg !4509
  br label %for.cond50, !dbg !4531, !llvm.loop !4540

for.end76:                                        ; preds = %for.cond50
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #8, !dbg !4542
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4430, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #7, !dbg !4543
  br label %for.cond16, !dbg !4544, !llvm.loop !4545

for.end78:                                        ; preds = %for.cond16
  %call79 = call %struct.basic_block_def* @first_dom_son(i32 1, %struct.basic_block_def* %bb) #6, !dbg !4547
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call79, metadata !4429, metadata !DIExpression()), !dbg !4474
  br label %for.cond80, !dbg !4549

for.cond80:                                       ; preds = %for.body82, %for.end78
  %son.0 = phi %struct.basic_block_def* [ %call79, %for.end78 ], [ %call84, %for.body82 ], !dbg !4550
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %son.0, metadata !4429, metadata !DIExpression()), !dbg !4474
  %tobool81 = icmp eq %struct.basic_block_def* %son.0, null, !dbg !4551
  br i1 %tobool81, label %for.end85, label %for.body82, !dbg !4551

for.body82:                                       ; preds = %for.cond80
  call fastcc void @prepare_block_for_update(%struct.basic_block_def* nonnull %son.0, i8 zeroext %insert_phi_p) #7, !dbg !4552
  %call84 = call %struct.basic_block_def* @next_dom_son(i32 1, %struct.basic_block_def* nonnull %son.0) #6, !dbg !4554
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call84, metadata !4429, metadata !DIExpression()), !dbg !4474
  br label %for.cond80, !dbg !4555, !llvm.loop !4556

for.end85:                                        ; preds = %for.cond80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4558
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4558
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4558
  ret void, !dbg !4558
}

declare dso_local %struct.basic_block_def* @nearest_common_dominator_for_set(i32, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @compute_dominance_frontiers(%struct.bitmap_head_def**) local_unnamed_addr #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_copy(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_updated_phi_nodes_for(%union.tree_node* %var, %struct.bitmap_head_def** %dfs, %struct.bitmap_head_def* %blocks, i32 %update_flags) unnamed_addr #5 !dbg !4559 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !4563, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %dfs, metadata !4564, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %blocks, metadata !4565, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i32 %update_flags, metadata !4566, metadata !DIExpression()), !dbg !4581
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4582
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4582
  %1 = bitcast i32* %i to i8*, !dbg !4583
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !4583
  %call = tail call fastcc %struct.def_blocks_d* @find_def_blocks_for(%union.tree_node* %var) #7, !dbg !4584
  call void @llvm.dbg.value(metadata %struct.def_blocks_d* %call, metadata !4568, metadata !DIExpression()), !dbg !4581
  %cmp = icmp eq %struct.def_blocks_d* %call, null, !dbg !4585
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !4587

lor.lhs.false:                                    ; preds = %entry
  %def_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %call, i64 0, i32 1, !dbg !4588
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def_blocks, align 8, !dbg !4588
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %2, i64 0, i32 0, !dbg !4588
  %3 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !4588
  %tobool = icmp eq %struct.bitmap_element_def* %3, null, !dbg !4588
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4589

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call %struct.bitmap_head_def* @compute_idf(%struct.bitmap_head_def* %2, %struct.bitmap_head_def** %dfs) #6, !dbg !4590
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call3, metadata !4569, metadata !DIExpression()), !dbg !4581
  %call4 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4591
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call4, metadata !4570, metadata !DIExpression()), !dbg !4581
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4592
  %bf.load = load i64, i64* %4, align 8, !dbg !4592
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4594
  %cmp5 = icmp eq i64 %bf.cast1, 141, !dbg !4594
  br i1 %cmp5, label %if.then6, label %if.else50, !dbg !4595

if.then6:                                         ; preds = %if.end
  switch i32 %update_flags, label %cond.true45 [
    i32 2048, label %if.then8
    i32 8192, label %cond.end47
  ], !dbg !4596

if.then8:                                         ; preds = %if.then6
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def_blocks, align 8, !dbg !4598
  %call10 = tail call %struct.basic_block_def* @nearest_common_dominator_for_set(i32 1, %struct.bitmap_head_def* %5) #6, !dbg !4601
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call10, metadata !4567, metadata !DIExpression()), !dbg !4581
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4602
  %cfg = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !4602
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4602
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 0, !dbg !4602
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4602
  %cmp11 = icmp eq %struct.basic_block_def* %call10, %8, !dbg !4604
  br i1 %cmp11, label %if.end51, label %if.then12, !dbg !4605

if.then12:                                        ; preds = %if.then8
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call void @llvm.dbg.value(metadata i32* %i, metadata !4572, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call3, i32 0, i32* nonnull %i) #7, !dbg !4606
  br label %for.cond, !dbg !4606

for.cond:                                         ; preds = %for.inc, %if.then12
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call void @llvm.dbg.value(metadata i32* %i, metadata !4572, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  %call13 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4608
  %tobool14 = icmp eq i8 %call13, 0, !dbg !4606
  br i1 %tobool14, label %if.end51.loopexit, label %for.body, !dbg !4606

for.body:                                         ; preds = %for.cond
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4610
  %cfg16 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !4610
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg16, align 8, !dbg !4610
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 2, !dbg !4610
  %11 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4610
  %tobool17 = icmp eq %struct.VEC_basic_block_gc* %11, null, !dbg !4610
  br i1 %tobool17, label %cond.end, label %cond.true, !dbg !4610

cond.true:                                        ; preds = %for.body
  %base21 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %11, i64 0, i32 0, !dbg !4610
  br label %cond.end, !dbg !4610

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base21, %cond.true ], [ null, %for.body ], !dbg !4610
  %12 = load i32, i32* %i, align 4, !dbg !4610
  call void @llvm.dbg.value(metadata i32 %12, metadata !4572, metadata !DIExpression()), !dbg !4581
  %call22 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %12) #7, !dbg !4610
  %cmp23 = icmp eq %struct.basic_block_def* %call22, %call10, !dbg !4612
  br i1 %cmp23, label %for.inc, label %land.lhs.true, !dbg !4613

land.lhs.true:                                    ; preds = %cond.end
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4614
  %cfg25 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !4614
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg25, align 8, !dbg !4614
  %x_basic_block_info26 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 2, !dbg !4614
  %15 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info26, align 8, !dbg !4614
  %tobool27 = icmp eq %struct.VEC_basic_block_gc* %15, null, !dbg !4614
  br i1 %tobool27, label %cond.end34, label %cond.true28, !dbg !4614

cond.true28:                                      ; preds = %land.lhs.true
  %base32 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %15, i64 0, i32 0, !dbg !4614
  br label %cond.end34, !dbg !4614

cond.end34:                                       ; preds = %land.lhs.true, %cond.true28
  %cond35 = phi %struct.VEC_basic_block_base* [ %base32, %cond.true28 ], [ null, %land.lhs.true ], !dbg !4614
  %16 = load i32, i32* %i, align 4, !dbg !4614
  call void @llvm.dbg.value(metadata i32 %16, metadata !4572, metadata !DIExpression()), !dbg !4581
  %call36 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond35, i32 %16) #7, !dbg !4614
  %call37 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call36, %struct.basic_block_def* %call10) #6, !dbg !4615
  %tobool38 = icmp eq i8 %call37, 0, !dbg !4615
  br i1 %tobool38, label %for.inc, label %if.then39, !dbg !4616

if.then39:                                        ; preds = %cond.end34
  %17 = load i32, i32* %i, align 4, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %17, metadata !4572, metadata !DIExpression()), !dbg !4581
  %call40 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call4, i32 %17) #6, !dbg !4618
  br label %for.inc, !dbg !4618

for.inc:                                          ; preds = %cond.end34, %cond.end, %if.then39
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call void @llvm.dbg.value(metadata i32* %i, metadata !4572, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4608
  br label %for.cond, !dbg !4608, !llvm.loop !4619

cond.true45:                                      ; preds = %if.then6
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 3054, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4621
  br label %cond.end47, !dbg !4621

cond.end47:                                       ; preds = %if.then6, %cond.true45
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call4, %struct.bitmap_head_def* %call3) #6, !dbg !4623
  br label %if.end51

if.else50:                                        ; preds = %if.end
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call4, %struct.bitmap_head_def* %call3) #6, !dbg !4624
  br label %if.end51

if.end51.loopexit:                                ; preds = %for.cond
  br label %if.end51, !dbg !4626

if.end51:                                         ; preds = %if.end51.loopexit, %if.then8, %cond.end47, %if.else50
  %first52 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %call4, i64 0, i32 0, !dbg !4626
  %18 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first52, align 8, !dbg !4626
  %tobool53 = icmp eq %struct.bitmap_element_def* %18, null, !dbg !4626
  br i1 %tobool53, label %if.end89, label %if.then54, !dbg !4627

if.then54:                                        ; preds = %if.end51
  %call55 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %blocks, %struct.bitmap_head_def* %call4) #6, !dbg !4628
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call void @llvm.dbg.value(metadata i32* %i, metadata !4572, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call4, i32 0, i32* nonnull %i) #7, !dbg !4629
  %19 = bitcast %struct.edge_def** %e to i8*, !dbg !4630
  %20 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4630
  %21 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4631
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4631
  %23 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4631
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4633
  %25 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4633
  br label %for.cond56, !dbg !4629

for.cond56:                                       ; preds = %for.end86, %if.then54
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call void @llvm.dbg.value(metadata i32* %i, metadata !4572, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  %call57 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4635
  %tobool58 = icmp eq i8 %call57, 0, !dbg !4629
  br i1 %tobool58, label %for.end88, label %for.body59, !dbg !4629

for.body59:                                       ; preds = %for.cond56
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8, !dbg !4636
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8, !dbg !4637
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4638
  %cfg61 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, i32 1, !dbg !4638
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg61, align 8, !dbg !4638
  %x_basic_block_info62 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i64 0, i32 2, !dbg !4638
  %28 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info62, align 8, !dbg !4638
  %tobool63 = icmp eq %struct.VEC_basic_block_gc* %28, null, !dbg !4638
  br i1 %tobool63, label %cond.end70, label %cond.true64, !dbg !4638

cond.true64:                                      ; preds = %for.body59
  %base68 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %28, i64 0, i32 0, !dbg !4638
  br label %cond.end70, !dbg !4638

cond.end70:                                       ; preds = %for.body59, %cond.true64
  %cond71 = phi %struct.VEC_basic_block_base* [ %base68, %cond.true64 ], [ null, %for.body59 ], !dbg !4638
  %29 = load i32, i32* %i, align 4, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %29, metadata !4572, metadata !DIExpression()), !dbg !4581
  %call72 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond71, i32 %29) #7, !dbg !4638
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call72, metadata !4580, metadata !DIExpression()), !dbg !4630
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #8, !dbg !4639
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call72, i64 0, i32 0, !dbg !4639
  %call73 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !4639
  %30 = extractvalue { i32, %struct.VEC_edge_gc** } %call73, 0, !dbg !4639
  store i32 %30, i32* %22, align 8, !dbg !4639
  %31 = extractvalue { i32, %struct.VEC_edge_gc** } %call73, 1, !dbg !4639
  store %struct.VEC_edge_gc** %31, %struct.VEC_edge_gc*** %23, align 8, !dbg !4639
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %21, i64 16, i1 false), !dbg !4639
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #8, !dbg !4639
  br label %for.cond74, !dbg !4639

for.cond74:                                       ; preds = %for.inc85, %cond.end70
  %32 = load i32, i32* %24, align 8, !dbg !4640
  %33 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %25, align 8, !dbg !4640
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4573, metadata !DIExpression(DW_OP_deref)), !dbg !4630
  %call75 = call fastcc zeroext i8 @ei_cond(i32 %32, %struct.VEC_edge_gc** %33, %struct.edge_def** nonnull %e) #7, !dbg !4640
  %tobool76 = icmp eq i8 %call75, 0, !dbg !4639
  br i1 %tobool76, label %for.end86, label %for.body77, !dbg !4639

for.body77:                                       ; preds = %for.cond74
  %34 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4641
  call void @llvm.dbg.value(metadata %struct.edge_def* %34, metadata !4573, metadata !DIExpression()), !dbg !4630
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %34, i64 0, i32 0, !dbg !4643
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4643
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i64 0, i32 9, !dbg !4644
  %36 = load i32, i32* %index, align 8, !dbg !4644
  %cmp78 = icmp sgt i32 %36, -1, !dbg !4645
  br i1 %cmp78, label %if.then80, label %for.inc85, !dbg !4646

if.then80:                                        ; preds = %for.body77
  call void @llvm.dbg.value(metadata %struct.edge_def* %34, metadata !4573, metadata !DIExpression()), !dbg !4630
  %call83 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %blocks, i32 %36) #6, !dbg !4647
  br label %for.inc85, !dbg !4647

for.inc85:                                        ; preds = %for.body77, %if.then80
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4579, metadata !DIExpression(DW_OP_deref)), !dbg !4630
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4640
  br label %for.cond74, !dbg !4640, !llvm.loop !4648

for.end86:                                        ; preds = %for.cond74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8, !dbg !4650
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8, !dbg !4650
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call void @llvm.dbg.value(metadata i32* %i, metadata !4572, metadata !DIExpression(DW_OP_deref)), !dbg !4581
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4635
  br label %for.cond56, !dbg !4635, !llvm.loop !4651

for.end88:                                        ; preds = %for.cond56
  call fastcc void @insert_phi_nodes_for(%union.tree_node* %var, %struct.bitmap_head_def* %call4, i8 zeroext 1) #7, !dbg !4653
  br label %if.end89, !dbg !4654

if.end89:                                         ; preds = %if.end51, %for.end88
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call4) #6, !dbg !4655
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !4570, metadata !DIExpression()), !dbg !4581
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call3) #6, !dbg !4656
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !4569, metadata !DIExpression()), !dbg !4581
  br label %cleanup, !dbg !4657

cleanup:                                          ; preds = %lor.lhs.false, %entry, %if.end89
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !4657
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4657
  ret void, !dbg !4657
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !4658 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !4662, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !4663, metadata !DIExpression()), !dbg !4667
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !4668
  %0 = load i8*, i8** %popcount, align 8, !dbg !4668
  %tobool = icmp eq i8* %0, null, !dbg !4669
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !4670

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !4671
  %.pre2 = zext i32 %.pre to i64, !dbg !4672
  %.pre3 = shl i64 1, %.pre2, !dbg !4672
  %.pre4 = lshr i32 %bitno, 6, !dbg !4673
  %.pre5 = zext i32 %.pre4 to i64, !dbg !4674
  br label %if.end7, !dbg !4670

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !4675
  %idxprom = zext i32 %div to i64, !dbg !4675
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !4675
  %1 = load i64, i64* %arrayidx, align 8, !dbg !4675
  %rem = and i32 %bitno, 63, !dbg !4675
  %sh_prom = zext i32 %rem to i64, !dbg !4675
  %2 = shl i64 1, %sh_prom, !dbg !4676
  %3 = and i64 %1, %2, !dbg !4676
  %tobool1 = icmp eq i64 %3, 0, !dbg !4676
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !4678

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !4679
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !4680
  %inc = add i8 %4, 1, !dbg !4680
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !4680
  br label %if.end7, !dbg !4679

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !4674
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !4672
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !4674
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !4681
  %or = or i64 %5, %shl.pre-phi, !dbg !4681
  store i64 %or, i64* %arrayidx13, align 8, !dbg !4681
  ret void, !dbg !4682
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_blocks(%struct.basic_block_def* %entry1, i32 %what) unnamed_addr #5 !dbg !4683 {
entry:
  %walk_data = alloca %struct.dom_walk_data, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %entry1, metadata !4687, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.value(metadata i32 %what, metadata !4688, metadata !DIExpression()), !dbg !4721
  %0 = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 0, !dbg !4722
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #8, !dbg !4722
  %1 = load i8, i8* @timevar_enable, align 1, !dbg !4723
  %tobool = icmp eq i8 %1, 0, !dbg !4723
  br i1 %tobool, label %do.end, label %if.then, !dbg !4726

if.then:                                          ; preds = %entry
  tail call void @timevar_push_1(i32 58) #6, !dbg !4723
  br label %do.end, !dbg !4723

do.end:                                           ; preds = %entry, %if.then
  %call = call i8* @memset(i8* nonnull %0, i32 0, i64 64) #6, !dbg !4727
  %bf.load = load i8, i8* %0, align 8, !dbg !4728
  %bf.clear = and i8 %bf.load, -4, !dbg !4728
  %bf.set = or i8 %bf.clear, 1, !dbg !4728
  store i8 %bf.set, i8* %0, align 8, !dbg !4728
  switch i32 %what, label %if.else7 [
    i32 0, label %if.then2
    i32 1, label %if.then4
  ], !dbg !4729

if.then2:                                         ; preds = %do.end
  %before_dom_children = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 2, !dbg !4730
  store void (%struct.dom_walk_data*, %struct.basic_block_def*)* @rewrite_enter_block, void (%struct.dom_walk_data*, %struct.basic_block_def*)** %before_dom_children, align 8, !dbg !4733
  %after_dom_children = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 3, !dbg !4734
  store void (%struct.dom_walk_data*, %struct.basic_block_def*)* @rewrite_leave_block, void (%struct.dom_walk_data*, %struct.basic_block_def*)** %after_dom_children, align 8, !dbg !4735
  br label %if.end9, !dbg !4736

if.then4:                                         ; preds = %do.end
  %before_dom_children5 = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 2, !dbg !4737
  store void (%struct.dom_walk_data*, %struct.basic_block_def*)* @rewrite_update_enter_block, void (%struct.dom_walk_data*, %struct.basic_block_def*)** %before_dom_children5, align 8, !dbg !4740
  %after_dom_children6 = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 3, !dbg !4741
  store void (%struct.dom_walk_data*, %struct.basic_block_def*)* @rewrite_update_leave_block, void (%struct.dom_walk_data*, %struct.basic_block_def*)** %after_dom_children6, align 8, !dbg !4742
  br label %if.end9, !dbg !4743

if.else7:                                         ; preds = %do.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2209, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4744
  br label %if.end9

if.end9:                                          ; preds = %if.then4, %if.else7, %if.then2
  %call10 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 10) #7, !dbg !4745
  store %struct.VEC_tree_heap* %call10, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !4746
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !4689, metadata !DIExpression(DW_OP_deref)), !dbg !4721
  call void @init_walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data) #6, !dbg !4747
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !4689, metadata !DIExpression(DW_OP_deref)), !dbg !4721
  call void @walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data, %struct.basic_block_def* %entry1) #6, !dbg !4748
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !4689, metadata !DIExpression(DW_OP_deref)), !dbg !4721
  call void @fini_walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data) #6, !dbg !4749
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4750
  %tobool11 = icmp eq %struct._IO_FILE* %2, null, !dbg !4750
  br i1 %tobool11, label %if.end17, label %land.lhs.true, !dbg !4752

land.lhs.true:                                    ; preds = %if.end9
  %3 = load i32, i32* @dump_flags, align 4, !dbg !4753
  %and = and i32 %3, 16, !dbg !4754
  %tobool12 = icmp eq i32 %and, 0, !dbg !4754
  br i1 %tobool12, label %if.end17, label %if.then13, !dbg !4755

if.then13:                                        ; preds = %land.lhs.true
  call void @dump_dfa_stats(%struct._IO_FILE* nonnull %2) #6, !dbg !4756
  %4 = load %struct.htab*, %struct.htab** @def_blocks, align 8, !dbg !4758
  %tobool14 = icmp eq %struct.htab* %4, null, !dbg !4758
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !4760

if.then15:                                        ; preds = %if.then13
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4761
  call void @dump_tree_ssa_stats(%struct._IO_FILE* %5) #7, !dbg !4762
  br label %if.end17, !dbg !4762

if.end17:                                         ; preds = %if.then13, %land.lhs.true, %if.end9, %if.then15
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull @block_defs_stack) #7, !dbg !4763
  %6 = load i8, i8* @timevar_enable, align 1, !dbg !4764
  %tobool19 = icmp eq i8 %6, 0, !dbg !4764
  br i1 %tobool19, label %do.end23, label %if.then20, !dbg !4767

if.then20:                                        ; preds = %if.end17
  call void @timevar_pop_1(i32 58) #6, !dbg !4764
  br label %do.end23, !dbg !4764

do.end23:                                         ; preds = %if.end17, %if.then20
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #8, !dbg !4768
  ret void, !dbg !4768
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local void @timevar_pop_1(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ssa_name_info_p_base_length(%struct.VEC_ssa_name_info_p_base* %vec_) unnamed_addr #0 !dbg !4769 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_name_info_p_base* %vec_, metadata !4775, metadata !DIExpression()), !dbg !4776
  %tobool = icmp eq %struct.VEC_ssa_name_info_p_base* %vec_, null, !dbg !4777
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4777

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ssa_name_info_p_base, %struct.VEC_ssa_name_info_p_base* %vec_, i64 0, i32 0, !dbg !4777
  %0 = load i32, i32* %num, align 8, !dbg !4777
  br label %cond.end, !dbg !4777

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4777
  ret i32 %cond, !dbg !4777
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ssa_name_info_p_heap_reserve(%struct.VEC_ssa_name_info_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4778 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_name_info_p_heap** @info_for_ssa_name, metadata !4783, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4784, metadata !DIExpression()), !dbg !4786
  %0 = load %struct.VEC_ssa_name_info_p_heap*, %struct.VEC_ssa_name_info_p_heap** @info_for_ssa_name, align 8, !dbg !4787
  %tobool = icmp eq %struct.VEC_ssa_name_info_p_heap* %0, null, !dbg !4787
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4787

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ssa_name_info_p_heap, %struct.VEC_ssa_name_info_p_heap* %0, i64 0, i32 0, !dbg !4787
  br label %cond.end, !dbg !4787

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ssa_name_info_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4787
  %call = tail call fastcc i32 @VEC_ssa_name_info_p_base_space(%struct.VEC_ssa_name_info_p_base* %cond, i32 %alloc_) #7, !dbg !4787
  %tobool1 = icmp eq i32 %call, 0, !dbg !4787
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4787
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4785, metadata !DIExpression()), !dbg !4786
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4787

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_ssa_name_info_p_heap** @info_for_ssa_name to i8**), align 8, !dbg !4788
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 %alloc_) #6, !dbg !4788
  store i8* %call3, i8** bitcast (%struct.VEC_ssa_name_info_p_heap** @info_for_ssa_name to i8**), align 8, !dbg !4788
  br label %if.end, !dbg !4788

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4787
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_name_info** @VEC_ssa_name_info_p_base_quick_push(%struct.VEC_ssa_name_info_p_base* %vec_, %struct.ssa_name_info* %obj_) unnamed_addr #0 !dbg !4790 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_name_info_p_base* %vec_, metadata !4796, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata %struct.ssa_name_info* %obj_, metadata !4797, metadata !DIExpression()), !dbg !4799
  %num1 = getelementptr inbounds %struct.VEC_ssa_name_info_p_base, %struct.VEC_ssa_name_info_p_base* %vec_, i64 0, i32 0, !dbg !4800
  %0 = load i32, i32* %num1, align 8, !dbg !4800
  %inc = add i32 %0, 1, !dbg !4800
  store i32 %inc, i32* %num1, align 8, !dbg !4800
  %idxprom = zext i32 %0 to i64, !dbg !4800
  %arrayidx = getelementptr inbounds %struct.VEC_ssa_name_info_p_base, %struct.VEC_ssa_name_info_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4800
  call void @llvm.dbg.value(metadata %struct.ssa_name_info** %arrayidx, metadata !4798, metadata !DIExpression()), !dbg !4799
  store %struct.ssa_name_info* %obj_, %struct.ssa_name_info** %arrayidx, align 8, !dbg !4800
  ret %struct.ssa_name_info** %arrayidx, !dbg !4800
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_name_info* @VEC_ssa_name_info_p_base_index(%struct.VEC_ssa_name_info_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4801 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_name_info_p_base* %vec_, metadata !4805, metadata !DIExpression()), !dbg !4807
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4806, metadata !DIExpression()), !dbg !4807
  br label %land.end, !dbg !4808

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4808
  %arrayidx = getelementptr inbounds %struct.VEC_ssa_name_info_p_base, %struct.VEC_ssa_name_info_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4808
  %0 = load %struct.ssa_name_info*, %struct.ssa_name_info** %arrayidx, align 8, !dbg !4808
  ret %struct.ssa_name_info* %0, !dbg !4808
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ssa_name_info_p_base_space(%struct.VEC_ssa_name_info_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4809 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ssa_name_info_p_base* %vec_, metadata !4813, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4814, metadata !DIExpression()), !dbg !4815
  %tobool = icmp eq %struct.VEC_ssa_name_info_p_base* %vec_, null, !dbg !4816
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4816

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_ssa_name_info_p_base, %struct.VEC_ssa_name_info_p_base* %vec_, i64 0, i32 1, !dbg !4816
  %0 = load i32, i32* %alloc, align 4, !dbg !4816
  %num = getelementptr inbounds %struct.VEC_ssa_name_info_p_base, %struct.VEC_ssa_name_info_p_base* %vec_, i64 0, i32 0, !dbg !4816
  %1 = load i32, i32* %num, align 8, !dbg !4816
  %sub = sub i32 %0, %1, !dbg !4816
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !4816
  br label %cond.end, !dbg !4816

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !4816
  br label %cond.end, !dbg !4816

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !4816
  ret i32 %cond, !dbg !4816
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4817 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4822
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4822
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4822

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4822
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4822
  br label %cond.end, !dbg !4822

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4822
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4822
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !4823
  %conv3 = zext i1 %cmp to i8, !dbg !4824
  ret i8 %conv3, !dbg !4825
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4826 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4831
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4831
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4831

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4831
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4831
  br label %cond.end, !dbg !4831

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4831
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !4831
  ret %struct.edge_def* %call2, !dbg !4832
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !4833 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4839, metadata !DIExpression()), !dbg !4840
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4841
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4841

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4841
  %0 = load i32, i32* %num, align 8, !dbg !4841
  br label %cond.end, !dbg !4841

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4841
  ret i32 %cond, !dbg !4841
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4842 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !4847
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4847

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4847
  br label %cond.end, !dbg !4847

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !4848
  ret %struct.VEC_edge_gc* %0, !dbg !4849
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4850 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4854, metadata !DIExpression()), !dbg !4856
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4855, metadata !DIExpression()), !dbg !4856
  br label %land.end, !dbg !4857

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4857
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4857
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4857
  ret %struct.edge_def* %0, !dbg !4857
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @first_htab_element(%struct.htab_iterator* %hti, %struct.htab* %table) unnamed_addr #0 !dbg !4858 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !4863, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata %struct.htab* %table, metadata !4864, metadata !DIExpression()), !dbg !4867
  %htab = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 0, !dbg !4868
  store %struct.htab* %table, %struct.htab** %htab, align 8, !dbg !4869
  %entries = getelementptr inbounds %struct.htab, %struct.htab* %table, i64 0, i32 3, !dbg !4870
  %0 = bitcast i8*** %entries to i64*, !dbg !4870
  %1 = load i64, i64* %0, align 8, !dbg !4870
  %slot = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !4871
  %2 = bitcast i8*** %slot to i64*, !dbg !4872
  store i64 %1, i64* %2, align 8, !dbg !4872
  %.cast = inttoptr i64 %1 to i8**, !dbg !4873
  %call = tail call i64 @htab_size(%struct.htab* %table) #6, !dbg !4874
  %add.ptr = getelementptr inbounds i8*, i8** %.cast, i64 %call, !dbg !4875
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !4876
  store i8** %add.ptr, i8*** %limit, align 8, !dbg !4877
  %.pre3 = load i8**, i8*** %slot, align 8, !dbg !4878
  br label %do.body, !dbg !4879

do.body:                                          ; preds = %do.cond, %entry
  %3 = phi i8** [ %incdec.ptr, %do.cond ], [ %.pre3, %entry ]
  %indvars2 = bitcast i8** %3 to i64*, !dbg !4878
  %4 = load i64, i64* %indvars2, align 8, !dbg !4880
  %switch1 = icmp ult i64 %4, 2, !dbg !4881
  br i1 %switch1, label %do.cond, label %do.end

do.cond:                                          ; preds = %do.body
  %incdec.ptr = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !4883
  store i8** %incdec.ptr, i8*** %slot, align 8, !dbg !4883
  %cmp6 = icmp ult i8** %incdec.ptr, %add.ptr, !dbg !4884
  br i1 %cmp6, label %do.body, label %do.end, !dbg !4885, !llvm.loop !4886

do.end:                                           ; preds = %do.body, %do.cond
  %5 = phi i8** [ %3, %do.body ], [ %incdec.ptr, %do.cond ]
  %6 = phi i8** [ %3, %do.body ], [ %incdec.ptr, %do.cond ], !dbg !4888
  %cmp9 = icmp ult i8** %6, %add.ptr, !dbg !4890
  br i1 %cmp9, label %if.then10, label %return, !dbg !4891

if.then10:                                        ; preds = %do.end
  %7 = load i8*, i8** %5, align 8, !dbg !4892
  br label %return, !dbg !4893

return:                                           ; preds = %do.end, %if.then10
  %retval.0 = phi i8* [ %7, %if.then10 ], [ null, %do.end ], !dbg !4867
  ret i8* %retval.0, !dbg !4894
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %fun) unnamed_addr #0 !dbg !4895 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !4901, metadata !DIExpression()), !dbg !4902
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !4903
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4903
  %tobool = icmp eq %struct.gimple_df* %0, null, !dbg !4905
  br i1 %tobool, label %return, label %if.end, !dbg !4906

if.end:                                           ; preds = %entry
  %referenced_vars = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 0, !dbg !4907
  %1 = load %struct.htab*, %struct.htab** %referenced_vars, align 8, !dbg !4907
  br label %return, !dbg !4908

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.htab* [ %1, %if.end ], [ null, %entry ], !dbg !4902
  ret %struct.htab* %retval.0, !dbg !4909
}

declare dso_local i64 @htab_size(%struct.htab*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* %hti) unnamed_addr #0 !dbg !4910 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !4916, metadata !DIExpression()), !dbg !4917
  %slot = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !4918
  %0 = load i8**, i8*** %slot, align 8, !dbg !4918
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !4920
  %1 = load i8**, i8*** %limit, align 8, !dbg !4920
  %cmp = icmp uge i8** %0, %1, !dbg !4921
  %. = zext i1 %cmp to i8, !dbg !4917
  ret i8 %., !dbg !4922
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @next_htab_element(%struct.htab_iterator* %hti) unnamed_addr #0 !dbg !4923 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !4927, metadata !DIExpression()), !dbg !4930
  %slot1 = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !4931
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !4930
  %.pre = load i8**, i8*** %slot1, align 8, !dbg !4932
  %.pre3 = load i8**, i8*** %limit, align 8, !dbg !4933
  br label %while.cond, !dbg !4934

while.cond:                                       ; preds = %while.body, %entry
  %0 = phi i8** [ %.pre, %entry ], [ %incdec.ptr, %while.body ], !dbg !4932
  %retval.0 = phi i8* [ undef, %entry ], [ %spec.select2, %while.body ]
  %incdec.ptr = getelementptr inbounds i8*, i8** %0, i64 1, !dbg !4932
  store i8** %incdec.ptr, i8*** %slot1, align 8, !dbg !4932
  %cmp = icmp ult i8** %incdec.ptr, %.pre3, !dbg !4935
  br i1 %cmp, label %while.body, label %return, !dbg !4934

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %incdec.ptr, align 8, !dbg !4936
  call void @llvm.dbg.value(metadata i8* %1, metadata !4928, metadata !DIExpression()), !dbg !4937
  %switch1 = icmp ult i8* %1, inttoptr (i64 2 to i8*), !dbg !4938
  %spec.select2 = select i1 %switch1, i8* %retval.0, i8* %1, !dbg !4938
  br i1 %switch1, label %while.cond, label %return, !llvm.loop !4940

return:                                           ; preds = %while.cond, %while.body
  %retval.2 = phi i8* [ %spec.select2, %while.body ], [ null, %while.cond ], !dbg !4930
  ret i8* %retval.2, !dbg !4942
}

declare dso_local double @htab_collisions(%struct.htab*) local_unnamed_addr #2

declare dso_local void @bitmap_print(%struct._IO_FILE*, %struct.bitmap_head_def*, i8*, i8*) local_unnamed_addr #2

declare dso_local void @init_ssa_operands() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_ssa_renamer() unnamed_addr #5 !dbg !4943 {
entry:
  %rvi = alloca %struct.referenced_var_iterator, align 8
  %0 = bitcast %struct.referenced_var_iterator* %rvi to i8*, !dbg !4947
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4947
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4948
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 3, !dbg !4949
  %2 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4949
  %in_ssa_p = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %2, i64 0, i32 10, !dbg !4950
  %bf.load = load i8, i8* %in_ssa_p, align 8, !dbg !4951
  %bf.clear = and i8 %bf.load, -2, !dbg !4951
  store i8 %bf.clear, i8* %in_ssa_p, align 8, !dbg !4951
  %3 = load %struct.htab*, %struct.htab** @def_blocks, align 8, !dbg !4952
  %cmp = icmp eq %struct.htab* %3, null, !dbg !4952
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4952

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2310, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !4952
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4953
  br label %cond.end, !dbg !4952

cond.end:                                         ; preds = %entry, %cond.true
  %4 = phi %struct.function* [ %1, %entry ], [ %.pre, %cond.true ], !dbg !4953
  %call = tail call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %4) #7, !dbg !4953
  %call2 = tail call i64 @htab_elements(%struct.htab* %call) #6, !dbg !4953
  %call3 = tail call %struct.htab* @htab_create(i64 %call2, i32 (i8*)* nonnull @def_blocks_hash, i32 (i8*, i8*)* nonnull @def_blocks_eq, void (i8*)* nonnull @def_blocks_free) #6, !dbg !4954
  store %struct.htab* %call3, %struct.htab** @def_blocks, align 8, !dbg !4955
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !4946, metadata !DIExpression(DW_OP_deref)), !dbg !4956
  %call4 = call fastcc %union.tree_node* @first_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !4957
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4945, metadata !DIExpression()), !dbg !4956
  br label %for.cond, !dbg !4957

for.cond:                                         ; preds = %for.body, %cond.end
  %var.0 = phi %union.tree_node* [ %call4, %cond.end ], [ %call6, %for.body ], !dbg !4959
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !4945, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !4946, metadata !DIExpression(DW_OP_deref)), !dbg !4956
  %call5 = call fastcc zeroext i8 @end_referenced_vars_p(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !4960
  %tobool = icmp eq i8 %call5, 0, !dbg !4960
  br i1 %tobool, label %for.body, label %for.end, !dbg !4957

for.body:                                         ; preds = %for.cond
  call void @set_current_def(%union.tree_node* %var.0, %union.tree_node* null) #7, !dbg !4962
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !4946, metadata !DIExpression(DW_OP_deref)), !dbg !4956
  %call6 = call fastcc %union.tree_node* @next_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !4960
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !4945, metadata !DIExpression()), !dbg !4956
  br label %for.cond, !dbg !4960, !llvm.loop !4963

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4965
  ret void, !dbg !4965
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_def_site_blocks() unnamed_addr #5 !dbg !4966 {
entry:
  %walk_data = alloca %struct.dom_walk_data, align 8
  %mark_def_sites_global_data = alloca %struct.mark_def_sites_global_data, align 8
  %0 = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 0, !dbg !4970
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #8, !dbg !4970
  %1 = bitcast %struct.mark_def_sites_global_data* %mark_def_sites_global_data to i8*, !dbg !4971
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4971
  store i8 1, i8* %0, align 8, !dbg !4972
  %initialize_block_local_data = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 1, !dbg !4973
  store void (%struct.dom_walk_data*, %struct.basic_block_def*, i8)* null, void (%struct.dom_walk_data*, %struct.basic_block_def*, i8)** %initialize_block_local_data, align 8, !dbg !4974
  %before_dom_children = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 2, !dbg !4975
  store void (%struct.dom_walk_data*, %struct.basic_block_def*)* @mark_def_sites_block, void (%struct.dom_walk_data*, %struct.basic_block_def*)** %before_dom_children, align 8, !dbg !4976
  %after_dom_children = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 3, !dbg !4977
  store void (%struct.dom_walk_data*, %struct.basic_block_def*)* null, void (%struct.dom_walk_data*, %struct.basic_block_def*)** %after_dom_children, align 8, !dbg !4978
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4979
  %kills = getelementptr inbounds %struct.mark_def_sites_global_data, %struct.mark_def_sites_global_data* %mark_def_sites_global_data, i64 0, i32 0, !dbg !4980
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %kills, align 8, !dbg !4981
  %global_data = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 4, !dbg !4982
  %2 = bitcast i8** %global_data to %struct.mark_def_sites_global_data**, !dbg !4983
  store %struct.mark_def_sites_global_data* %mark_def_sites_global_data, %struct.mark_def_sites_global_data** %2, align 8, !dbg !4983
  %block_local_data_size = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 6, !dbg !4984
  store i64 0, i64* %block_local_data_size, align 8, !dbg !4985
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !4968, metadata !DIExpression(DW_OP_deref)), !dbg !4986
  call void @init_walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data) #6, !dbg !4987
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4988
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !4988
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4988
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !4988
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4988
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !4968, metadata !DIExpression(DW_OP_deref)), !dbg !4986
  call void @walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data, %struct.basic_block_def* %5) #6, !dbg !4989
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !4968, metadata !DIExpression(DW_OP_deref)), !dbg !4986
  call void @fini_walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data) #6, !dbg !4990
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kills, align 8, !dbg !4991
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %6) #6, !dbg !4991
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4992
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #8, !dbg !4992
  ret void, !dbg !4992
}

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_phi_nodes(%struct.bitmap_head_def** %dfs) unnamed_addr #5 !dbg !4993 {
entry:
  %rvi = alloca %struct.referenced_var_iterator, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %uid = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %dfs, metadata !4997, metadata !DIExpression()), !dbg !5013
  %0 = bitcast %struct.referenced_var_iterator* %rvi to i8*, !dbg !5014
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5014
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5015
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5015
  %2 = bitcast i32* %uid to i8*, !dbg !5016
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !5016
  %3 = load i8, i8* @timevar_enable, align 1, !dbg !5017
  %tobool = icmp eq i8 %3, 0, !dbg !5017
  br i1 %tobool, label %do.end, label %if.then, !dbg !5020

if.then:                                          ; preds = %entry
  tail call void @timevar_push_1(i32 57) #6, !dbg !5017
  br label %do.end, !dbg !5017

do.end:                                           ; preds = %entry, %if.then
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5021
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !5001, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !4998, metadata !DIExpression(DW_OP_deref)), !dbg !5013
  %call1 = call fastcc %union.tree_node* @first_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !5022
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5000, metadata !DIExpression()), !dbg !5013
  br label %for.cond, !dbg !5022

for.cond:                                         ; preds = %cleanup, %do.end
  %var.0 = phi %union.tree_node* [ %call1, %do.end ], [ %call13, %cleanup ], !dbg !5023
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !5000, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !4998, metadata !DIExpression(DW_OP_deref)), !dbg !5013
  %call2 = call fastcc zeroext i8 @end_referenced_vars_p(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !5024
  %tobool3 = icmp eq i8 %call2, 0, !dbg !5024
  br i1 %tobool3, label %for.body, label %for.end, !dbg !5022

for.body:                                         ; preds = %for.cond
  %call4 = call fastcc %struct.def_blocks_d* @find_def_blocks_for(%union.tree_node* %var.0) #7, !dbg !5025
  call void @llvm.dbg.value(metadata %struct.def_blocks_d* %call4, metadata !5003, metadata !DIExpression()), !dbg !5026
  %cmp = icmp eq %struct.def_blocks_d* %call4, null, !dbg !5027
  br i1 %cmp, label %cleanup, label %if.end6, !dbg !5029

if.end6:                                          ; preds = %for.body
  %call7 = call fastcc i32 @get_phi_state(%union.tree_node* %var.0) #7, !dbg !5030
  %cmp8 = icmp eq i32 %call7, 1, !dbg !5032
  br i1 %cmp8, label %cleanup, label %if.then9, !dbg !5033

if.then9:                                         ; preds = %if.end6
  %uid10 = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5034
  %4 = load i32, i32* %uid10, align 4, !dbg !5034
  %call11 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %4) #6, !dbg !5035
  br label %cleanup, !dbg !5035

cleanup:                                          ; preds = %if.end6, %if.then9, %for.body
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !4998, metadata !DIExpression(DW_OP_deref)), !dbg !5013
  %call13 = call fastcc %union.tree_node* @next_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !5024
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !5000, metadata !DIExpression()), !dbg !5013
  br label %for.cond, !dbg !5024, !llvm.loop !5036

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4999, metadata !DIExpression(DW_OP_deref)), !dbg !5013
  call void @llvm.dbg.value(metadata i32* %uid, metadata !5002, metadata !DIExpression(DW_OP_deref)), !dbg !5013
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call, i32 0, i32* nonnull %uid) #7, !dbg !5038
  br label %for.cond14, !dbg !5038

for.cond14:                                       ; preds = %for.body17, %for.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4999, metadata !DIExpression(DW_OP_deref)), !dbg !5013
  call void @llvm.dbg.value(metadata i32* %uid, metadata !5002, metadata !DIExpression(DW_OP_deref)), !dbg !5013
  %call15 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %uid) #7, !dbg !5039
  %tobool16 = icmp eq i8 %call15, 0, !dbg !5038
  br i1 %tobool16, label %for.end24, label %for.body17, !dbg !5038

for.body17:                                       ; preds = %for.cond14
  %5 = load i32, i32* %uid, align 4, !dbg !5040
  call void @llvm.dbg.value(metadata i32 %5, metadata !5002, metadata !DIExpression()), !dbg !5013
  %call19 = call %union.tree_node* @referenced_var_lookup(i32 %5) #6, !dbg !5040
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !5007, metadata !DIExpression()), !dbg !5041
  %call21 = call fastcc %struct.def_blocks_d* @find_def_blocks_for(%union.tree_node* %call19) #7, !dbg !5042
  call void @llvm.dbg.value(metadata %struct.def_blocks_d* %call21, metadata !5011, metadata !DIExpression()), !dbg !5041
  %def_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %call21, i64 0, i32 1, !dbg !5043
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def_blocks, align 8, !dbg !5043
  %call22 = call %struct.bitmap_head_def* @compute_idf(%struct.bitmap_head_def* %6, %struct.bitmap_head_def** %dfs) #6, !dbg !5044
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call22, metadata !5012, metadata !DIExpression()), !dbg !5041
  call fastcc void @insert_phi_nodes_for(%union.tree_node* %call19, %struct.bitmap_head_def* %call22, i8 zeroext 0) #7, !dbg !5045
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call22) #6, !dbg !5046
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5012, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4999, metadata !DIExpression(DW_OP_deref)), !dbg !5013
  call void @llvm.dbg.value(metadata i32* %uid, metadata !5002, metadata !DIExpression(DW_OP_deref)), !dbg !5013
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %uid) #7, !dbg !5039
  br label %for.cond14, !dbg !5039, !llvm.loop !5047

for.end24:                                        ; preds = %for.cond14
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !5049
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5001, metadata !DIExpression()), !dbg !5013
  %7 = load i8, i8* @timevar_enable, align 1, !dbg !5050
  %tobool26 = icmp eq i8 %7, 0, !dbg !5050
  br i1 %tobool26, label %do.end30, label %if.then27, !dbg !5053

if.then27:                                        ; preds = %for.end24
  call void @timevar_pop_1(i32 57) #6, !dbg !5050
  br label %do.end30, !dbg !5050

do.end30:                                         ; preds = %for.end24, %if.then27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !5054
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5054
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5054
  ret void, !dbg !5054
}

; Function Attrs: nounwind uwtable
define internal void @mark_def_sites_block(%struct.dom_walk_data* %walk_data, %struct.basic_block_def* %bb) #5 !dbg !5055 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !5057, metadata !DIExpression()), !dbg !5062
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5058, metadata !DIExpression()), !dbg !5062
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5063
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5063
  %global_data = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 4, !dbg !5064
  %1 = bitcast i8** %global_data to %struct.mark_def_sites_global_data**, !dbg !5064
  %2 = load %struct.mark_def_sites_global_data*, %struct.mark_def_sites_global_data** %1, align 8, !dbg !5064
  call void @llvm.dbg.value(metadata %struct.mark_def_sites_global_data* %2, metadata !5059, metadata !DIExpression()), !dbg !5062
  %kills1 = getelementptr inbounds %struct.mark_def_sites_global_data, %struct.mark_def_sites_global_data* %2, i64 0, i32 0, !dbg !5065
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kills1, align 8, !dbg !5065
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %3, metadata !5060, metadata !DIExpression()), !dbg !5062
  tail call void @bitmap_clear(%struct.bitmap_head_def* %3) #6, !dbg !5066
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5067
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5067
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !5067
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !5067
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5067
  br label %for.cond, !dbg !5069

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5061, metadata !DIExpression(DW_OP_deref)), !dbg !5062
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5070
  %tobool = icmp eq i8 %call, 0, !dbg !5072
  br i1 %tobool, label %for.body, label %for.end, !dbg !5073

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5061, metadata !DIExpression(DW_OP_deref)), !dbg !5062
  %call2 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5074
  call fastcc void @mark_def_sites(%struct.basic_block_def* %bb, %union.gimple_statement_d* %call2, %struct.bitmap_head_def* %3) #7, !dbg !5075
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5061, metadata !DIExpression(DW_OP_deref)), !dbg !5062
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !5076
  br label %for.cond, !dbg !5077, !llvm.loop !5078

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5080
  ret void, !dbg !5080
}

declare dso_local void @init_walk_dominator_tree(%struct.dom_walk_data*) local_unnamed_addr #2

declare dso_local void @walk_dominator_tree(%struct.dom_walk_data*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @fini_walk_dominator_tree(%struct.dom_walk_data*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5081 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5085, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5086, metadata !DIExpression()), !dbg !5089
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !5090
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5087, metadata !DIExpression()), !dbg !5088
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !5091
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !5092
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5093
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !5094
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !5095
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !5096
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !5097
  ret void, !dbg !5098
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5099 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5103, metadata !DIExpression()), !dbg !5104
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5105
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5105
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !5106
  %conv1 = zext i1 %cmp to i8, !dbg !5107
  ret i8 %conv1, !dbg !5108
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_def_sites(%struct.basic_block_def* %bb, %union.gimple_statement_d* %stmt, %struct.bitmap_head_def* %kills) unnamed_addr #5 !dbg !5109 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5113, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5114, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %kills, metadata !5115, metadata !DIExpression()), !dbg !5123
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !5124
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5124
  tail call fastcc void @update_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !5125
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !5126
  %cmp = icmp eq %struct.bitmap_head_def* %1, null, !dbg !5126
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5126

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 748, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5126
  br label %cond.end, !dbg !5126

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @set_register_defs(%union.gimple_statement_d* %stmt, i8 zeroext 0) #7, !dbg !5127
  tail call fastcc void @set_rewrite_uses(%union.gimple_statement_d* %stmt, i8 zeroext 0) #7, !dbg !5128
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt) #7, !dbg !5129
  %tobool = icmp eq i8 %call, 0, !dbg !5129
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5131

if.end:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5118, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call1 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !5132
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call1, metadata !5117, metadata !DIExpression()), !dbg !5123
  br label %for.cond, !dbg !5132

for.cond:                                         ; preds = %if.end13, %if.end
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call1, %if.end ], [ %call14, %if.end13 ], !dbg !5133
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !5117, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5118, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call2 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5134
  %tobool3 = icmp eq i8 %call2, 0, !dbg !5134
  br i1 %tobool3, label %for.body, label %for.end, !dbg !5132

for.body:                                         ; preds = %for.cond
  %call4 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !5135
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5119, metadata !DIExpression()), !dbg !5136
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5137
  %bf.load = load i64, i64* %2, align 8, !dbg !5137
  %bf.cast = and i64 %bf.load, 65535, !dbg !5137
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5137
  %3 = load i32, i32* %arrayidx, align 4, !dbg !5137
  %cmp5 = icmp eq i32 %3, 3, !dbg !5137
  br i1 %cmp5, label %cond.end8, label %cond.true6, !dbg !5137

cond.true6:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 760, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5137
  br label %cond.end8, !dbg !5137

cond.end8:                                        ; preds = %for.body, %cond.true6
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5138
  %4 = load i32, i32* %uid, align 4, !dbg !5138
  %call10 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %kills, i32 %4) #6, !dbg !5140
  %tobool11 = icmp eq i32 %call10, 0, !dbg !5140
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !5141

if.then12:                                        ; preds = %cond.end8
  call fastcc void @set_livein_block(%union.tree_node* %call4, %struct.basic_block_def* %bb) #7, !dbg !5142
  br label %if.end13, !dbg !5142

if.end13:                                         ; preds = %cond.end8, %if.then12
  call fastcc void @set_rewrite_uses(%union.gimple_statement_d* %stmt, i8 zeroext 1) #7, !dbg !5143
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5118, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call14 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5134
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call14, metadata !5117, metadata !DIExpression()), !dbg !5123
  br label %for.cond, !dbg !5134, !llvm.loop !5144

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5118, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call15 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 2) #7, !dbg !5146
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !5116, metadata !DIExpression()), !dbg !5123
  br label %for.cond16, !dbg !5146

for.cond16:                                       ; preds = %cond.end30, %for.end
  %def.0 = phi %union.tree_node* [ %call15, %for.end ], [ %call36, %cond.end30 ], !dbg !5148
  call void @llvm.dbg.value(metadata %union.tree_node* %def.0, metadata !5116, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5118, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call17 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5149
  %tobool18 = icmp eq i8 %call17, 0, !dbg !5149
  br i1 %tobool18, label %for.body20, label %for.end37, !dbg !5146

for.body20:                                       ; preds = %for.cond16
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %def.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5151
  %bf.load22 = load i64, i64* %5, align 8, !dbg !5151
  %bf.cast24 = and i64 %bf.load22, 65535, !dbg !5151
  %arrayidx26 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast24, !dbg !5151
  %6 = load i32, i32* %arrayidx26, align 4, !dbg !5151
  %cmp27 = icmp eq i32 %6, 3, !dbg !5151
  br i1 %cmp27, label %cond.end30, label %cond.true28, !dbg !5151

cond.true28:                                      ; preds = %for.body20
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 770, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5151
  br label %cond.end30, !dbg !5151

cond.end30:                                       ; preds = %for.body20, %cond.true28
  call fastcc void @set_def_block(%union.tree_node* %def.0, %struct.basic_block_def* %bb, i8 zeroext 0) #7, !dbg !5153
  %uid33 = getelementptr inbounds %union.tree_node, %union.tree_node* %def.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5154
  %7 = load i32, i32* %uid33, align 4, !dbg !5154
  %call34 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %kills, i32 %7) #6, !dbg !5155
  call fastcc void @set_register_defs(%union.gimple_statement_d* %stmt, i8 zeroext 1) #7, !dbg !5156
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5118, metadata !DIExpression(DW_OP_deref)), !dbg !5123
  %call36 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5149
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !5116, metadata !DIExpression()), !dbg !5123
  br label %for.cond16, !dbg !5149, !llvm.loop !5157

for.end37:                                        ; preds = %for.cond16
  %call38 = call fastcc zeroext i8 @rewrite_uses_p(%union.gimple_statement_d* %stmt) #7, !dbg !5159
  %tobool39 = icmp eq i8 %call38, 0, !dbg !5159
  br i1 %tobool39, label %lor.lhs.false, label %if.then43, !dbg !5161

lor.lhs.false:                                    ; preds = %for.end37
  %call40 = call fastcc zeroext i8 @register_defs_p(%union.gimple_statement_d* %stmt) #7, !dbg !5162
  %tobool42 = icmp eq i8 %call40, 0, !dbg !5162
  br i1 %tobool42, label %cleanup, label %if.then43, !dbg !5163

if.then43:                                        ; preds = %lor.lhs.false, %for.end37
  %8 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @interesting_blocks, align 8, !dbg !5164
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5165
  %9 = load i32, i32* %index, align 8, !dbg !5165
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %8, i32 %9) #7, !dbg !5166
  br label %cleanup, !dbg !5166

cleanup:                                          ; preds = %lor.lhs.false, %cond.end, %if.then43
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5167
  ret void, !dbg !5167
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5168 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5172, metadata !DIExpression()), !dbg !5173
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5174
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5174
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !5175
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5175
  ret %union.gimple_statement_d* %1, !dbg !5176
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5177 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5182, metadata !DIExpression()), !dbg !5183
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5184
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5184
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !5185
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !5185
  %2 = load i64, i64* %1, align 8, !dbg !5185
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5186
  store i64 %2, i64* %3, align 8, !dbg !5186
  ret void, !dbg !5187
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5188 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5195, metadata !DIExpression()), !dbg !5196
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !5197
  %0 = load i32, i32* %flags, align 8, !dbg !5197
  %and = and i32 %0, 512, !dbg !5198
  %tobool = icmp eq i32 %and, 0, !dbg !5198
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !5199

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !5200
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !5200
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !5201
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5202

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !5203
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5203
  br label %cond.end, !dbg !5202

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !5202
  ret %struct.gimple_seq_d* %cond, !dbg !5204
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !5205 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !5212, metadata !DIExpression()), !dbg !5213
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !5214
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5214

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !5215
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !5215
  br label %cond.end, !dbg !5214

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !5214
  ret %struct.gimple_seq_node_d* %cond, !dbg !5216
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !5217 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !5221, metadata !DIExpression()), !dbg !5222
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !5223
  %tobool = icmp eq i8 %call, 0, !dbg !5223
  br i1 %tobool, label %if.end, label %if.then, !dbg !5225

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !5226
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !5228
  br label %if.end, !dbg !5229

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !5230
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_register_defs(%union.gimple_statement_d* %stmt, i8 zeroext %register_defs_p) unnamed_addr #0 !dbg !5231 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5235, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i8 %register_defs_p, metadata !5236, metadata !DIExpression()), !dbg !5237
  tail call fastcc void @gimple_set_plf(%union.gimple_statement_d* %stmt, i32 1, i8 zeroext %register_defs_p) #7, !dbg !5238
  ret void, !dbg !5239
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_rewrite_uses(%union.gimple_statement_d* %stmt, i8 zeroext %rewrite_p) unnamed_addr #0 !dbg !5240 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5242, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i8 %rewrite_p, metadata !5243, metadata !DIExpression()), !dbg !5244
  tail call fastcc void @gimple_set_visited(%union.gimple_statement_d* %stmt, i8 zeroext %rewrite_p) #7, !dbg !5245
  ret void, !dbg !5246
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5247 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5251, metadata !DIExpression()), !dbg !5252
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5253
  %cmp = icmp eq i32 %call, 2, !dbg !5254
  %conv1 = zext i1 %cmp to i8, !dbg !5253
  ret i8 %conv1, !dbg !5255
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5256 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5261, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5262, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5263, metadata !DIExpression()), !dbg !5264
  %0 = and i32 %flags, 11, !dbg !5265
  %1 = icmp eq i32 %0, 1, !dbg !5265
  br i1 %1, label %cond.end, label %cond.true, !dbg !5265

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5265
  br label %cond.end, !dbg !5265

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !5266
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5267
  store i32 2, i32* %iter_type, align 4, !dbg !5268
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !5269
  ret %struct.ssa_use_operand_d* %call, !dbg !5270
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5271 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5277, metadata !DIExpression()), !dbg !5278
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5279
  %0 = load i8, i8* %done, align 8, !dbg !5279
  ret i8 %0, !dbg !5280
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !5281 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5285, metadata !DIExpression()), !dbg !5286
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5287
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5287
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5288
  ret %union.tree_node* %1, !dbg !5289
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_livein_block(%union.tree_node* %var, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !5290 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5294, metadata !DIExpression()), !dbg !5301
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5295, metadata !DIExpression()), !dbg !5301
  %call = tail call fastcc i32 @get_phi_state(%union.tree_node* %var) #7, !dbg !5302
  call void @llvm.dbg.value(metadata i32 %call, metadata !5297, metadata !DIExpression()), !dbg !5301
  %call1 = tail call fastcc %struct.def_blocks_d* @get_def_blocks_for(%union.tree_node* %var) #7, !dbg !5303
  call void @llvm.dbg.value(metadata %struct.def_blocks_d* %call1, metadata !5296, metadata !DIExpression()), !dbg !5301
  %livein_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %call1, i64 0, i32 3, !dbg !5304
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %livein_blocks, align 8, !dbg !5304
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5305
  %1 = load i32, i32* %index, align 8, !dbg !5305
  %call2 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !5306
  %cmp = icmp eq i32 %call, 1, !dbg !5307
  br i1 %cmp, label %if.then, label %if.else, !dbg !5308

if.then:                                          ; preds = %entry
  %def_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %call1, i64 0, i32 1, !dbg !5309
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def_blocks, align 8, !dbg !5309
  %call3 = tail call i32 @bitmap_first_set_bit(%struct.bitmap_head_def* %2) #6, !dbg !5310
  call void @llvm.dbg.value(metadata i32 %call3, metadata !5298, metadata !DIExpression()), !dbg !5311
  %cmp4 = icmp eq i32 %call3, -1, !dbg !5312
  br i1 %cmp4, label %if.then11, label %lor.lhs.false, !dbg !5314

lor.lhs.false:                                    ; preds = %if.then
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5315
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !5315
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5315
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 2, !dbg !5315
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !5315
  %tobool = icmp eq %struct.VEC_basic_block_gc* %5, null, !dbg !5315
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5315

cond.true:                                        ; preds = %lor.lhs.false
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i64 0, i32 0, !dbg !5315
  br label %cond.end, !dbg !5315

cond.end:                                         ; preds = %lor.lhs.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %lor.lhs.false ], !dbg !5315
  %call8 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %call3) #7, !dbg !5315
  %call9 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %bb, %struct.basic_block_def* %call8) #6, !dbg !5316
  %tobool10 = icmp eq i8 %call9, 0, !dbg !5316
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5317

if.then11:                                        ; preds = %cond.end, %if.then
  tail call fastcc void @set_phi_state(%union.tree_node* %var, i32 2) #7, !dbg !5318
  br label %if.end12, !dbg !5318

if.else:                                          ; preds = %entry
  tail call fastcc void @set_phi_state(%union.tree_node* %var, i32 2) #7, !dbg !5319
  br label %if.end12

if.end12:                                         ; preds = %cond.end, %if.then11, %if.else
  ret void, !dbg !5320
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5321 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5325, metadata !DIExpression()), !dbg !5327
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5328
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !5328
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !5330
  br i1 %tobool, label %if.end, label %if.then, !dbg !5331

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !5332
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !5326, metadata !DIExpression()), !dbg !5327
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !5334
  %2 = load i64, i64* %1, align 8, !dbg !5334
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5335
  store i64 %2, i64* %3, align 8, !dbg !5335
  br label %cleanup, !dbg !5336

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5337
  %4 = load i32, i32* %phi_i, align 8, !dbg !5337
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5339
  %5 = load i32, i32* %num_phi, align 4, !dbg !5339
  %cmp = icmp slt i32 %4, %5, !dbg !5340
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !5341

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5342
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5342
  %inc = add nsw i32 %4, 1, !dbg !5342
  store i32 %inc, i32* %phi_i, align 8, !dbg !5342
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #7, !dbg !5342
  br label %cleanup, !dbg !5344

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5345
  store i8 1, i8* %done, align 8, !dbg !5346
  br label %cleanup, !dbg !5347

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !5327
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5348
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5349 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5353, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5354, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata i32 2, metadata !5355, metadata !DIExpression()), !dbg !5356
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 2) #7, !dbg !5357
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5358
  store i32 1, i32* %iter_type, align 4, !dbg !5359
  %call = tail call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !5360
  ret %union.tree_node* %call, !dbg !5361
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_def_block(%union.tree_node* %var, %struct.basic_block_def* %bb, i8 zeroext %phi_p) unnamed_addr #5 !dbg !5362 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5366, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5367, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i8 %phi_p, metadata !5368, metadata !DIExpression()), !dbg !5371
  %call = tail call fastcc i32 @get_phi_state(%union.tree_node* %var) #7, !dbg !5372
  call void @llvm.dbg.value(metadata i32 %call, metadata !5370, metadata !DIExpression()), !dbg !5371
  %call1 = tail call fastcc %struct.def_blocks_d* @get_def_blocks_for(%union.tree_node* %var) #7, !dbg !5373
  call void @llvm.dbg.value(metadata %struct.def_blocks_d* %call1, metadata !5369, metadata !DIExpression()), !dbg !5371
  %def_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %call1, i64 0, i32 1, !dbg !5374
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def_blocks, align 8, !dbg !5374
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5375
  %1 = load i32, i32* %index, align 8, !dbg !5375
  %call2 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !5376
  %tobool = icmp eq i8 %phi_p, 0, !dbg !5377
  br i1 %tobool, label %if.end, label %if.then, !dbg !5379

if.then:                                          ; preds = %entry
  %phi_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %call1, i64 0, i32 2, !dbg !5380
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %phi_blocks, align 8, !dbg !5380
  %3 = load i32, i32* %index, align 8, !dbg !5381
  %call4 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !5382
  br label %if.end, !dbg !5382

if.end:                                           ; preds = %entry, %if.then
  %cmp = icmp eq i32 %call, 0, !dbg !5383
  br i1 %cmp, label %if.then5, label %if.else, !dbg !5385

if.then5:                                         ; preds = %if.end
  tail call fastcc void @set_phi_state(%union.tree_node* %var, i32 1) #7, !dbg !5386
  br label %if.end6, !dbg !5386

if.else:                                          ; preds = %if.end
  tail call fastcc void @set_phi_state(%union.tree_node* %var, i32 2) #7, !dbg !5387
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then5
  ret void, !dbg !5388
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5389 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5393, metadata !DIExpression()), !dbg !5395
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5396
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !5396
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !5398
  br i1 %tobool, label %if.end, label %if.then, !dbg !5399

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !5400
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %use_ptr) #7, !dbg !5400
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5394, metadata !DIExpression()), !dbg !5395
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5402
  %2 = load i64*, i64** %1, align 8, !dbg !5402
  %3 = load i64, i64* %2, align 8, !dbg !5403
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5404
  store i64 %3, i64* %4, align 8, !dbg !5404
  br label %cleanup, !dbg !5405

if.end:                                           ; preds = %entry
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5406
  %5 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !5406
  %tobool4 = icmp eq %struct.def_optype_d* %5, null, !dbg !5408
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !5409

if.then5:                                         ; preds = %if.end
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %5, i64 0, i32 1, !dbg !5410
  %6 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !5410
  %call7 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %6) #7, !dbg !5410
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5394, metadata !DIExpression()), !dbg !5395
  %7 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !5412
  %8 = load i64*, i64** %7, align 8, !dbg !5412
  %9 = load i64, i64* %8, align 8, !dbg !5413
  %10 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5414
  store i64 %9, i64* %10, align 8, !dbg !5414
  br label %cleanup, !dbg !5415

if.end11:                                         ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5416
  store i8 1, i8* %done, align 8, !dbg !5417
  br label %cleanup, !dbg !5418

cleanup:                                          ; preds = %if.end11, %if.then5, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call7, %if.then5 ], [ null, %if.end11 ], !dbg !5395
  ret %union.tree_node* %retval.0, !dbg !5419
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @rewrite_uses_p(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5420 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5424, metadata !DIExpression()), !dbg !5425
  %call = tail call fastcc zeroext i8 @gimple_visited_p(%union.gimple_statement_d* %stmt) #7, !dbg !5426
  ret i8 %call, !dbg !5427
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @register_defs_p(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5428 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5430, metadata !DIExpression()), !dbg !5431
  %call = tail call fastcc i32 @gimple_plf(%union.gimple_statement_d* %stmt, i32 1) #7, !dbg !5432
  %cmp = icmp ne i32 %call, 0, !dbg !5433
  %conv1 = zext i1 %cmp to i8, !dbg !5432
  ret i8 %conv1, !dbg !5434
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5435 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5437, metadata !DIExpression()), !dbg !5438
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5439
  %cmp = icmp eq i32 %call, 0, !dbg !5440
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !5441

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5442
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5443
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5444
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_plf(%union.gimple_statement_d* %stmt, i32 %plf, i8 zeroext %val_p) unnamed_addr #0 !dbg !5445 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5449, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.value(metadata i32 1, metadata !5450, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.value(metadata i8 %val_p, metadata !5451, metadata !DIExpression()), !dbg !5452
  %tobool = icmp eq i8 %val_p, 0, !dbg !5453
  br i1 %tobool, label %if.else, label %if.then, !dbg !5455

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5456
  %bf.load = load i32, i32* %0, align 8, !dbg !5457
  %bf.set = or i32 %bf.load, 2048, !dbg !5457
  store i32 %bf.set, i32* %0, align 8, !dbg !5457
  br label %if.end, !dbg !5458

if.else:                                          ; preds = %entry
  %1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5459
  %bf.load4 = load i32, i32* %1, align 8, !dbg !5460
  %bf.set11 = and i32 %bf.load4, -2049, !dbg !5460
  store i32 %bf.set11, i32* %1, align 8, !dbg !5460
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5461
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_visited(%union.gimple_statement_d* %stmt, i8 zeroext %visited_p) unnamed_addr #0 !dbg !5462 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5464, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata i8 %visited_p, metadata !5465, metadata !DIExpression()), !dbg !5466
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5467
  %bf.load = load i32, i32* %0, align 8, !dbg !5468
  %1 = and i8 %visited_p, 1, !dbg !5468
  %bf.value = zext i8 %1 to i32, !dbg !5468
  %bf.shl = shl nuw nsw i32 %bf.value, 9, !dbg !5468
  %bf.clear = and i32 %bf.load, -513, !dbg !5468
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !5468
  store i32 %bf.set, i32* %0, align 8, !dbg !5468
  ret void, !dbg !5469
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5470 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5474, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5475, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5476, metadata !DIExpression()), !dbg !5477
  %0 = and i32 %flags, 10, !dbg !5478
  %1 = icmp eq i32 %0, 8, !dbg !5478
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !5478

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !5478
  %3 = icmp eq i32 %2, 4, !dbg !5478
  br i1 %3, label %cond.true, label %cond.end, !dbg !5478

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5478
  br label %cond.end, !dbg !5478

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !5479
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !5480

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5481
  br label %cond.end12, !dbg !5480

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !5480
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5482
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !5483
  %and14 = and i32 %flags, 8, !dbg !5484
  %tobool15 = icmp eq i32 %and14, 0, !dbg !5484
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !5486

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !5487
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !5488

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !5489
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !5490
  br i1 %cmp, label %if.end, label %if.then, !dbg !5491

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !5492
  %6 = load i64*, i64** %5, align 8, !dbg !5492
  %7 = load i64, i64* %6, align 8, !dbg !5493
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5494
  store i64 %7, i64* %8, align 8, !dbg !5494
  br label %if.end, !dbg !5495

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !5496
  %tobool24 = icmp eq i32 %and23, 0, !dbg !5496
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !5497

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5498
  br label %cond.end28, !dbg !5497

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !5497
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5499
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !5500
  %and30 = and i32 %flags, 4, !dbg !5501
  %tobool31 = icmp eq i32 %and30, 0, !dbg !5501
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !5503

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !5504
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !5505

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !5506
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !5507
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !5508

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5509
  %11 = load i64*, i64** %10, align 8, !dbg !5509
  %12 = load i64, i64* %11, align 8, !dbg !5510
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5511
  store i64 %12, i64* %13, align 8, !dbg !5511
  br label %if.end42, !dbg !5512

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5513
  store i8 0, i8* %done, align 8, !dbg !5514
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5515
  store i32 0, i32* %phi_i, align 8, !dbg !5516
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5517
  store i32 0, i32* %num_phi, align 4, !dbg !5518
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5519
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5520
  ret void, !dbg !5521
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5522 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5526, metadata !DIExpression()), !dbg !5527
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !5528
  %tobool = icmp eq i8 %call, 0, !dbg !5528
  br i1 %tobool, label %return, label %if.end, !dbg !5530

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !5531
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !5531
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !5531
  br label %return, !dbg !5532

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5527
  ret %struct.def_optype_d* %retval.0, !dbg !5533
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5534 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5538, metadata !DIExpression()), !dbg !5539
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !5540
  %tobool = icmp eq i8 %call, 0, !dbg !5540
  br i1 %tobool, label %return, label %if.end, !dbg !5542

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !5543
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !5543
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5543
  br label %return, !dbg !5544

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5539
  ret %union.tree_node* %retval.0, !dbg !5545
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5546 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5550, metadata !DIExpression()), !dbg !5551
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !5552
  %tobool = icmp eq i8 %call, 0, !dbg !5552
  br i1 %tobool, label %return, label %if.end, !dbg !5554

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !5555
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !5555
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !5555
  br label %return, !dbg !5556

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5551
  ret %struct.use_optype_d* %retval.0, !dbg !5557
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5558 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5560, metadata !DIExpression()), !dbg !5561
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !5562
  %tobool = icmp eq i8 %call, 0, !dbg !5562
  br i1 %tobool, label %return, label %if.end, !dbg !5564

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5565
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !5565
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5565
  br label %return, !dbg !5566

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5561
  ret %union.tree_node* %retval.0, !dbg !5567
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5568 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5570, metadata !DIExpression()), !dbg !5571
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5572
  %cmp = icmp ugt i32 %call, 5, !dbg !5573
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5574

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5575
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5576
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5577
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_phi_state(%union.tree_node* %var) unnamed_addr #0 !dbg !5578 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5582, metadata !DIExpression()), !dbg !5583
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5584
  %bf.load = load i64, i64* %0, align 8, !dbg !5584
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5586
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5586
  br i1 %cmp, label %if.then, label %if.else, !dbg !5587

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.ssa_name_info* @get_ssa_name_ann(%union.tree_node* %var) #7, !dbg !5588
  %need_phi_state = getelementptr inbounds %struct.ssa_name_info, %struct.ssa_name_info* %call, i64 0, i32 1, !dbg !5589
  %bf.load1 = load i8, i8* %need_phi_state, align 8, !dbg !5589
  br label %return, !dbg !5590

if.else:                                          ; preds = %entry
  %call4 = tail call fastcc %struct.var_ann_d* @var_ann(%union.tree_node* %var) #7, !dbg !5591
  %1 = getelementptr inbounds %struct.var_ann_d, %struct.var_ann_d* %call4, i64 0, i32 0, !dbg !5592
  %bf.load5 = load i8, i8* %1, align 8, !dbg !5592
  %bf.lshr = lshr i8 %bf.load5, 2, !dbg !5592
  br label %return, !dbg !5593

return:                                           ; preds = %if.else, %if.then
  %retval.0.in.in = phi i8 [ %bf.load1, %if.then ], [ %bf.lshr, %if.else ]
  %retval.0.in = and i8 %retval.0.in.in, 3, !dbg !5594
  %retval.0 = zext i8 %retval.0.in to i32, !dbg !5594
  ret i32 %retval.0, !dbg !5595
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_blocks_d* @get_def_blocks_for(%union.tree_node* %var) unnamed_addr #0 !dbg !5596 {
entry:
  %db = alloca %struct.def_blocks_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5600, metadata !DIExpression()), !dbg !5604
  %0 = bitcast %struct.def_blocks_d* %db to i8*, !dbg !5605
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5605
  %var1 = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %db, i64 0, i32 0, !dbg !5606
  store %union.tree_node* %var, %union.tree_node** %var1, align 8, !dbg !5607
  %1 = load %struct.htab*, %struct.htab** @def_blocks, align 8, !dbg !5608
  %call = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 1) #6, !dbg !5609
  call void @llvm.dbg.value(metadata i8** %call, metadata !5603, metadata !DIExpression()), !dbg !5604
  %2 = load i8*, i8** %call, align 8, !dbg !5610
  %cmp = icmp eq i8* %2, null, !dbg !5612
  br i1 %cmp, label %if.then, label %if.else, !dbg !5613

if.then:                                          ; preds = %entry
  %call2 = call i8* @xmalloc(i64 32) #6, !dbg !5614
  call void @llvm.dbg.value(metadata i8* %call2, metadata !5602, metadata !DIExpression()), !dbg !5604
  %var3 = bitcast i8* %call2 to %union.tree_node**, !dbg !5616
  store %union.tree_node* %var, %union.tree_node** %var3, align 8, !dbg !5617
  %call4 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5618
  %def_blocks = getelementptr inbounds i8, i8* %call2, i64 8, !dbg !5619
  %3 = bitcast i8* %def_blocks to %struct.bitmap_head_def**, !dbg !5619
  store %struct.bitmap_head_def* %call4, %struct.bitmap_head_def** %3, align 8, !dbg !5620
  %call5 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5621
  %phi_blocks = getelementptr inbounds i8, i8* %call2, i64 16, !dbg !5622
  %4 = bitcast i8* %phi_blocks to %struct.bitmap_head_def**, !dbg !5622
  store %struct.bitmap_head_def* %call5, %struct.bitmap_head_def** %4, align 8, !dbg !5623
  %call6 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5624
  %livein_blocks = getelementptr inbounds i8, i8* %call2, i64 24, !dbg !5625
  %5 = bitcast i8* %livein_blocks to %struct.bitmap_head_def**, !dbg !5625
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** %5, align 8, !dbg !5626
  store i8* %call2, i8** %call, align 8, !dbg !5627
  br label %if.end, !dbg !5628

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %2, metadata !5602, metadata !DIExpression()), !dbg !5604
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %db_p.0.in = phi i8* [ %call2, %if.then ], [ %2, %if.else ]
  %db_p.0 = bitcast i8* %db_p.0.in to %struct.def_blocks_d*, !dbg !5629
  call void @llvm.dbg.value(metadata %struct.def_blocks_d* %db_p.0, metadata !5602, metadata !DIExpression()), !dbg !5604
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5630
  ret %struct.def_blocks_d* %db_p.0, !dbg !5631
}

declare dso_local i32 @bitmap_first_set_bit(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_phi_state(%union.tree_node* %var, i32 %state) unnamed_addr #0 !dbg !5632 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5636, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.value(metadata i32 %state, metadata !5637, metadata !DIExpression()), !dbg !5638
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5639
  %bf.load = load i64, i64* %0, align 8, !dbg !5639
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5641
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5641
  br i1 %cmp, label %if.then, label %if.else, !dbg !5642

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.ssa_name_info* @get_ssa_name_ann(%union.tree_node* %var) #7, !dbg !5643
  %need_phi_state = getelementptr inbounds %struct.ssa_name_info, %struct.ssa_name_info* %call, i64 0, i32 1, !dbg !5644
  %1 = trunc i32 %state to i8, !dbg !5645
  %bf.load1 = load i8, i8* %need_phi_state, align 8, !dbg !5645
  %bf.value = and i8 %1, 3, !dbg !5645
  %bf.clear2 = and i8 %bf.load1, -4, !dbg !5645
  %bf.set = or i8 %bf.clear2, %bf.value, !dbg !5645
  store i8 %bf.set, i8* %need_phi_state, align 8, !dbg !5645
  br label %if.end, !dbg !5643

if.else:                                          ; preds = %entry
  %call3 = tail call fastcc %struct.var_ann_d* @var_ann(%union.tree_node* %var) #7, !dbg !5646
  %2 = getelementptr inbounds %struct.var_ann_d, %struct.var_ann_d* %call3, i64 0, i32 0, !dbg !5647
  %3 = trunc i32 %state to i8, !dbg !5648
  %bf.load4 = load i8, i8* %2, align 8, !dbg !5648
  %bf.value5 = shl i8 %3, 2, !dbg !5648
  %bf.shl = and i8 %bf.value5, 12, !dbg !5648
  %bf.clear6 = and i8 %bf.load4, -13, !dbg !5648
  %bf.set7 = or i8 %bf.clear6, %bf.shl, !dbg !5648
  store i8 %bf.set7, i8* %2, align 8, !dbg !5648
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5649
}

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5650 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5654, metadata !DIExpression()), !dbg !5656
  call void @llvm.dbg.value(metadata i32 %i, metadata !5655, metadata !DIExpression()), !dbg !5656
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !5657
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !5658
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !5659
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5660 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5664, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %index, metadata !5665, metadata !DIExpression()), !dbg !5666
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !5667
  %0 = load i32, i32* %capacity, align 8, !dbg !5667
  %cmp = icmp ult i32 %0, %index, !dbg !5667
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5667

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5667
  br label %cond.end, !dbg !5667

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !5668
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !5668
  ret %struct.phi_arg_d* %arrayidx, !dbg !5669
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !5670 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5674, metadata !DIExpression()), !dbg !5675
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5676
  ret %union.tree_node* %0, !dbg !5677
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_visited_p(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5678 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5680, metadata !DIExpression()), !dbg !5681
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5682
  %bf.load = load i32, i32* %0, align 8, !dbg !5682
  %bf.lshr = lshr i32 %bf.load, 9, !dbg !5682
  %1 = trunc i32 %bf.lshr to i8, !dbg !5683
  %conv = and i8 %1, 1, !dbg !5683
  ret i8 %conv, !dbg !5684
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_plf(%union.gimple_statement_d* %stmt, i32 %plf) unnamed_addr #0 !dbg !5685 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5689, metadata !DIExpression()), !dbg !5691
  call void @llvm.dbg.value(metadata i32 1, metadata !5690, metadata !DIExpression()), !dbg !5691
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5692
  %bf.load = load i32, i32* %0, align 8, !dbg !5692
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !5692
  %and = and i32 %bf.lshr, 1, !dbg !5693
  ret i32 %and, !dbg !5694
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_blocks_d* @find_def_blocks_for(%union.tree_node* %var) unnamed_addr #0 !dbg !5695 {
entry:
  %dm = alloca %struct.def_blocks_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5697, metadata !DIExpression()), !dbg !5699
  %0 = bitcast %struct.def_blocks_d* %dm to i8*, !dbg !5700
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5700
  %var1 = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %dm, i64 0, i32 0, !dbg !5701
  store %union.tree_node* %var, %union.tree_node** %var1, align 8, !dbg !5702
  %1 = load %struct.htab*, %struct.htab** @def_blocks, align 8, !dbg !5703
  %call = call i8* @htab_find(%struct.htab* %1, i8* nonnull %0) #6, !dbg !5704
  %2 = bitcast i8* %call to %struct.def_blocks_d*, !dbg !5705
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5706
  ret %struct.def_blocks_d* %2, !dbg !5707
}

declare dso_local %struct.bitmap_head_def* @compute_idf(%struct.bitmap_head_def*, %struct.bitmap_head_def**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_phi_nodes_for(%union.tree_node* %var, %struct.bitmap_head_def* %phi_insertion_points, i8 zeroext %update_p) unnamed_addr #5 !dbg !5708 {
entry:
  %bb_index = alloca i32, align 4
  %e = alloca %struct.edge_def*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %si = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5712, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %phi_insertion_points, metadata !5713, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.value(metadata i8 %update_p, metadata !5714, metadata !DIExpression()), !dbg !5734
  %0 = bitcast i32* %bb_index to i8*, !dbg !5735
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5735
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !5736
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5736
  %2 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5737
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !5737
  %call = tail call fastcc %struct.def_blocks_d* @find_def_blocks_for(%union.tree_node* %var) #7, !dbg !5738
  call void @llvm.dbg.value(metadata %struct.def_blocks_d* %call, metadata !5720, metadata !DIExpression()), !dbg !5734
  %tobool = icmp eq %struct.def_blocks_d* %call, null, !dbg !5739
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5739

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 1082, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5739
  br label %cond.end, !dbg !5739

cond.end:                                         ; preds = %entry, %cond.true
  %phi_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %call, i64 0, i32 2, !dbg !5740
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %phi_blocks, align 8, !dbg !5740
  %call1 = tail call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %phi_insertion_points, %struct.bitmap_head_def* %3) #6, !dbg !5741
  %def_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %call, i64 0, i32 1, !dbg !5742
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def_blocks, align 8, !dbg !5742
  %livein_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %call, i64 0, i32 3, !dbg !5743
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %livein_blocks, align 8, !dbg !5743
  tail call fastcc void @prune_unused_phi_nodes(%struct.bitmap_head_def* %phi_insertion_points, %struct.bitmap_head_def* %4, %struct.bitmap_head_def* %5) #7, !dbg !5744
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5715, metadata !DIExpression(DW_OP_deref)), !dbg !5734
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5719, metadata !DIExpression(DW_OP_deref)), !dbg !5734
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %phi_insertion_points, i32 0, i32* nonnull %bb_index) #7, !dbg !5745
  %tobool13 = icmp eq i8 %update_p, 0, !dbg !5746
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5748
  %7 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !5749
  %8 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5750
  %9 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5751
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5751
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5751
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5753
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5753
  br label %for.cond, !dbg !5745

for.cond:                                         ; preds = %if.end45, %cond.end
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5715, metadata !DIExpression(DW_OP_deref)), !dbg !5734
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5719, metadata !DIExpression(DW_OP_deref)), !dbg !5734
  %call2 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5755
  %tobool3 = icmp eq i8 %call2, 0, !dbg !5745
  br i1 %tobool3, label %for.end47, label %for.body, !dbg !5745

for.body:                                         ; preds = %for.cond
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5756
  %cfg = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !5756
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5756
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 2, !dbg !5756
  %16 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !5756
  %tobool4 = icmp eq %struct.VEC_basic_block_gc* %16, null, !dbg !5756
  br i1 %tobool4, label %cond.end10, label %cond.true5, !dbg !5756

cond.true5:                                       ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %16, i64 0, i32 0, !dbg !5756
  br label %cond.end10, !dbg !5756

cond.end10:                                       ; preds = %for.body, %cond.true5
  %cond11 = phi %struct.VEC_basic_block_base* [ %base, %cond.true5 ], [ null, %for.body ], !dbg !5756
  %17 = load i32, i32* %bb_index, align 4, !dbg !5756
  call void @llvm.dbg.value(metadata i32 %17, metadata !5715, metadata !DIExpression()), !dbg !5734
  %call12 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond11, i32 %17) #7, !dbg !5756
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call12, metadata !5718, metadata !DIExpression()), !dbg !5734
  br i1 %tobool13, label %if.end, label %if.then, !dbg !5757

if.then:                                          ; preds = %cond.end10
  call fastcc void @mark_block_for_update(%struct.basic_block_def* %call12) #7, !dbg !5758
  br label %if.end, !dbg !5758

if.end:                                           ; preds = %cond.end10, %if.then
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !5717, metadata !DIExpression()), !dbg !5734
  %bf.load = load i64, i64* %6, align 8, !dbg !5759
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5760
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5760
  br i1 %cmp, label %if.then15, label %if.else, !dbg !5761

if.then15:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !5762
  br i1 %tobool13, label %cond.true17, label %cond.end19, !dbg !5763

cond.true17:                                      ; preds = %if.then15
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 1109, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5763
  br label %cond.end19, !dbg !5763

cond.end19:                                       ; preds = %if.then15, %cond.true17
  %call21 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %var, %struct.basic_block_def* %call12) #6, !dbg !5764
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call21, metadata !5717, metadata !DIExpression()), !dbg !5734
  %call22 = call %union.tree_node* @duplicate_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %call21) #6, !dbg !5765
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !5727, metadata !DIExpression()), !dbg !5750
  call fastcc void @gimple_phi_set_result(%union.gimple_statement_d* %call21, %union.tree_node* %call22) #7, !dbg !5766
  call fastcc void @add_new_name_mapping(%union.tree_node* %call22, %union.tree_node* %var) #7, !dbg !5767
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8, !dbg !5768
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call12, i64 0, i32 0, !dbg !5768
  %call23 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !5768
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call23, 0, !dbg !5768
  store i32 %18, i32* %10, align 8, !dbg !5768
  %19 = extractvalue { i32, %struct.VEC_edge_gc** } %call23, 1, !dbg !5768
  store %struct.VEC_edge_gc** %19, %struct.VEC_edge_gc*** %11, align 8, !dbg !5768
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %9, i64 16, i1 false), !dbg !5768
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8, !dbg !5768
  br label %for.cond24, !dbg !5768

for.cond24:                                       ; preds = %for.body27, %cond.end19
  %20 = load i32, i32* %12, align 8, !dbg !5769
  %21 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %13, align 8, !dbg !5769
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5716, metadata !DIExpression(DW_OP_deref)), !dbg !5734
  %call25 = call fastcc zeroext i8 @ei_cond(i32 %20, %struct.VEC_edge_gc** %21, %struct.edge_def** nonnull %e) #7, !dbg !5769
  %tobool26 = icmp eq i8 %call25, 0, !dbg !5768
  br i1 %tobool26, label %for.end, label %for.body27, !dbg !5768

for.body27:                                       ; preds = %for.cond24
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5770
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !5716, metadata !DIExpression()), !dbg !5734
  call void @add_phi_arg(%union.gimple_statement_d* %call21, %union.tree_node* %var, %struct.edge_def* %22, i32 0) #6, !dbg !5771
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5721, metadata !DIExpression(DW_OP_deref)), !dbg !5750
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5769
  br label %for.cond24, !dbg !5769, !llvm.loop !5772

for.end:                                          ; preds = %for.cond24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !5774
  br label %if.end45, !dbg !5775

if.else:                                          ; preds = %if.end
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1, !dbg !5776
  %23 = load i32, i32* %arrayidx, align 4, !dbg !5776
  %cmp32 = icmp eq i32 %23, 3, !dbg !5776
  br i1 %cmp32, label %cond.end35, label %cond.true33, !dbg !5776

cond.true33:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 1129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5776
  br label %cond.end35, !dbg !5776

cond.end35:                                       ; preds = %if.else, %cond.true33
  %call37 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %var, %struct.basic_block_def* %call12) #6, !dbg !5777
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call37, metadata !5717, metadata !DIExpression()), !dbg !5734
  %call38 = call %union.tree_node* @target_for_debug_bind(%union.tree_node* %var) #6, !dbg !5778
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !5728, metadata !DIExpression()), !dbg !5779
  %tobool39 = icmp eq %union.tree_node* %call38, null, !dbg !5780
  br i1 %tobool39, label %if.end45, label %if.then40, !dbg !5781

if.then40:                                        ; preds = %cond.end35
  %call41 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call37) #7, !dbg !5782
  %call42 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call41) #7, !dbg !5782
  %call43 = call %union.gimple_statement_d* @gimple_build_debug_bind_stat(%union.tree_node* nonnull %call38, %union.tree_node* %call42, %union.gimple_statement_d* %call37) #6, !dbg !5782
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call43, metadata !5730, metadata !DIExpression()), !dbg !5749
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !5783
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !5733, metadata !DIExpression(DW_OP_deref)), !dbg !5749
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %si, %struct.basic_block_def* %call12) #7, !dbg !5784
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !5733, metadata !DIExpression(DW_OP_deref)), !dbg !5749
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %si, %union.gimple_statement_d* %call43, i32 1) #6, !dbg !5785
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !5786
  br label %if.end45, !dbg !5787

if.end45:                                         ; preds = %cond.end35, %if.then40, %for.end
  %phi.0 = phi %union.gimple_statement_d* [ %call21, %for.end ], [ %call37, %if.then40 ], [ %call37, %cond.end35 ], !dbg !5748
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.0, metadata !5717, metadata !DIExpression()), !dbg !5734
  call fastcc void @set_register_defs(%union.gimple_statement_d* %phi.0, i8 zeroext 1) #7, !dbg !5788
  call fastcc void @mark_phi_for_rewrite(%struct.basic_block_def* %call12, %union.gimple_statement_d* %phi.0) #7, !dbg !5789
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5715, metadata !DIExpression(DW_OP_deref)), !dbg !5734
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5719, metadata !DIExpression(DW_OP_deref)), !dbg !5734
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5755
  br label %for.cond, !dbg !5755, !llvm.loop !5790

for.end47:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !5792
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5792
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5792
  ret void, !dbg !5792
}

declare dso_local i8* @htab_find(%struct.htab*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @prune_unused_phi_nodes(%struct.bitmap_head_def* %phis, %struct.bitmap_head_def* %kills, %struct.bitmap_head_def* %uses) unnamed_addr #5 !dbg !5793 {
entry:
  %worklist = alloca %struct.VEC_int_heap*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %phis, metadata !5797, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %kills, metadata !5798, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %uses, metadata !5799, metadata !DIExpression()), !dbg !5816
  %0 = bitcast %struct.VEC_int_heap** %worklist to i8*, !dbg !5817
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5817
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5818
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5818
  %2 = bitcast i32* %i to i8*, !dbg !5819
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !5819
  %3 = bitcast %struct.edge_def** %e to i8*, !dbg !5820
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5820
  %4 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5821
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !5821
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %uses, i64 0, i32 0, !dbg !5822
  %5 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !5822
  %tobool = icmp eq %struct.bitmap_element_def* %5, null, !dbg !5822
  br i1 %tobool, label %if.then, label %if.end, !dbg !5824

if.then:                                          ; preds = %entry
  tail call void @bitmap_clear(%struct.bitmap_head_def* %phis) #6, !dbg !5825
  br label %cleanup, !dbg !5827

if.end:                                           ; preds = %entry
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5828
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !5812, metadata !DIExpression()), !dbg !5816
  %call1 = tail call zeroext i8 @bitmap_and_compl(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %kills, %struct.bitmap_head_def* %uses) #6, !dbg !5829
  %call2 = tail call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %phis, %struct.bitmap_head_def* %call) #6, !dbg !5830
  %first3 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %phis, i64 0, i32 0, !dbg !5831
  %6 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first3, align 8, !dbg !5831
  %tobool4 = icmp eq %struct.bitmap_element_def* %6, null, !dbg !5831
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5833

if.then5:                                         ; preds = %if.end
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !5834
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5812, metadata !DIExpression()), !dbg !5816
  br label %cleanup, !dbg !5836

if.end6:                                          ; preds = %if.end
  %call7 = tail call zeroext i8 @bitmap_ior(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %kills, %struct.bitmap_head_def* %phis) #6, !dbg !5837
  %call8 = tail call i64 @bitmap_count_bits(%struct.bitmap_head_def* %call) #6, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5814, metadata !DIExpression()), !dbg !5816
  %mul = shl i64 %call8, 4, !dbg !5839
  %add = and i64 %mul, 34359738352, !dbg !5839
  %conv9 = or i64 %add, 8, !dbg !5839
  %call11 = tail call i8* @xmalloc(i64 %conv9) #6, !dbg !5839
  %7 = bitcast i8* %call11 to %struct.dom_dfsnum*, !dbg !5839
  call void @llvm.dbg.value(metadata %struct.dom_dfsnum* %7, metadata !5813, metadata !DIExpression()), !dbg !5816
  %bb_index = bitcast i8* %call11 to i32*, !dbg !5840
  store i32 1, i32* %bb_index, align 4, !dbg !5841
  %dfs_num = getelementptr inbounds i8, i8* %call11, i64 4, !dbg !5842
  %8 = bitcast i8* %dfs_num to i32*, !dbg !5842
  store i32 0, i32* %8, align 4, !dbg !5843
  call void @llvm.dbg.value(metadata i32 1, metadata !5815, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5801, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call void @llvm.dbg.value(metadata i32* %i, metadata !5802, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call, i32 0, i32* nonnull %i) #7, !dbg !5844
  br label %for.cond, !dbg !5844

for.cond:                                         ; preds = %cond.end, %if.end6
  %adef.0 = phi i32 [ 1, %if.end6 ], [ %add35, %cond.end ], !dbg !5816
  call void @llvm.dbg.value(metadata i32 %adef.0, metadata !5815, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5801, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call void @llvm.dbg.value(metadata i32* %i, metadata !5802, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  %call13 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5846
  %tobool14 = icmp eq i8 %call13, 0, !dbg !5844
  br i1 %tobool14, label %for.end, label %for.body, !dbg !5844

for.body:                                         ; preds = %for.cond
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5848
  %cfg = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !5848
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5848
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 2, !dbg !5848
  %11 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !5848
  %tobool15 = icmp eq %struct.VEC_basic_block_gc* %11, null, !dbg !5848
  br i1 %tobool15, label %cond.end, label %cond.true, !dbg !5848

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %11, i64 0, i32 0, !dbg !5848
  br label %cond.end, !dbg !5848

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !5848
  %12 = load i32, i32* %i, align 4, !dbg !5848
  call void @llvm.dbg.value(metadata i32 %12, metadata !5802, metadata !DIExpression()), !dbg !5816
  %call19 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %12) #7, !dbg !5848
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call19, metadata !5808, metadata !DIExpression()), !dbg !5816
  %13 = load i32, i32* %i, align 4, !dbg !5850
  call void @llvm.dbg.value(metadata i32 %13, metadata !5802, metadata !DIExpression()), !dbg !5816
  %idxprom = zext i32 %adef.0 to i64, !dbg !5851
  %bb_index21 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom, i32 0, !dbg !5852
  store i32 %13, i32* %bb_index21, align 4, !dbg !5853
  %call22 = call i32 @bb_dom_dfs_in(i32 1, %struct.basic_block_def* %call19) #6, !dbg !5854
  %dfs_num25 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom, i32 1, !dbg !5855
  store i32 %call22, i32* %dfs_num25, align 4, !dbg !5856
  %14 = load i32, i32* %i, align 4, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %14, metadata !5802, metadata !DIExpression()), !dbg !5816
  %add26 = add i32 %adef.0, 1, !dbg !5858
  %idxprom27 = zext i32 %add26 to i64, !dbg !5859
  %bb_index29 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom27, i32 0, !dbg !5860
  store i32 %14, i32* %bb_index29, align 4, !dbg !5861
  %call30 = call i32 @bb_dom_dfs_out(i32 1, %struct.basic_block_def* %call19) #6, !dbg !5862
  %dfs_num34 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom27, i32 1, !dbg !5863
  store i32 %call30, i32* %dfs_num34, align 4, !dbg !5864
  %add35 = add i32 %adef.0, 2, !dbg !5865
  call void @llvm.dbg.value(metadata i32 %add35, metadata !5815, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5801, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call void @llvm.dbg.value(metadata i32* %i, metadata !5802, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5846
  br label %for.cond, !dbg !5846, !llvm.loop !5866

for.end:                                          ; preds = %for.cond
  %adef.0.lcssa = phi i32 [ %adef.0, %for.cond ], !dbg !5816
  call void @llvm.dbg.value(metadata i32 %adef.0.lcssa, metadata !5815, metadata !DIExpression()), !dbg !5816
  %conv = trunc i64 %call8 to i32, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %adef.0.lcssa, metadata !5815, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %adef.0.lcssa, metadata !5815, metadata !DIExpression()), !dbg !5816
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !5868
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5812, metadata !DIExpression()), !dbg !5816
  %mul36 = shl i32 %conv, 1, !dbg !5869
  %add37 = or i32 %mul36, 1, !dbg !5869
  %cmp = icmp eq i32 %adef.0.lcssa, %add37, !dbg !5869
  br i1 %cmp, label %cond.end41, label %cond.true39, !dbg !5869

cond.true39:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 894, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5869
  br label %cond.end41, !dbg !5869

cond.end41:                                       ; preds = %for.end, %cond.true39
  %conv43 = zext i32 %adef.0.lcssa to i64, !dbg !5870
  call void @spec_qsort(i8* %call11, i64 %conv43, i64 8, i32 (i8*, i8*)* nonnull @cmp_dfsnum) #6, !dbg !5871
  %15 = load i32, i32* %bb_index, align 4, !dbg !5872
  %cmp46 = icmp eq i32 %15, 1, !dbg !5872
  br i1 %cmp46, label %cond.end50, label %cond.true48, !dbg !5872

cond.true48:                                      ; preds = %cond.end41
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5872
  br label %cond.end50, !dbg !5872

cond.end50:                                       ; preds = %cond.end41, %cond.true48
  %add52 = add i32 %conv, 1, !dbg !5873
  %call53 = call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %add52) #7, !dbg !5873
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %call53, metadata !5800, metadata !DIExpression()), !dbg !5816
  store %struct.VEC_int_heap* %call53, %struct.VEC_int_heap** %worklist, align 8, !dbg !5874
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %call53, metadata !5800, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %call53, metadata !5800, metadata !DIExpression()), !dbg !5816
  %base56 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %call53, i64 0, i32 0, !dbg !5875
  %call60 = call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %base56, i32 1) #7, !dbg !5875
  call void @llvm.dbg.value(metadata i32 1, metadata !5806, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 1, metadata !5814, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 1, metadata !5802, metadata !DIExpression()), !dbg !5816
  br label %for.cond61, !dbg !5876

for.cond61:                                       ; preds = %for.inc141, %cond.end50
  %16 = phi i32 [ 1, %cond.end50 ], [ %inc142, %for.inc141 ], !dbg !5878
  %top.0 = phi i32 [ 1, %cond.end50 ], [ %top.1, %for.inc141 ], !dbg !5816
  %n_defs.0 = phi i32 [ 1, %cond.end50 ], [ %n_defs.1, %for.inc141 ], !dbg !5879
  store i32 %16, i32* %i, align 4, !dbg !5878
  call void @llvm.dbg.value(metadata i32 %n_defs.0, metadata !5814, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %top.0, metadata !5806, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %16, metadata !5802, metadata !DIExpression()), !dbg !5816
  %cmp62 = icmp ult i32 %16, %adef.0.lcssa, !dbg !5880
  br i1 %cmp62, label %for.body64, label %for.end143, !dbg !5882

for.body64:                                       ; preds = %for.cond61
  call void @llvm.dbg.value(metadata i32 %16, metadata !5802, metadata !DIExpression()), !dbg !5816
  %idxprom65 = zext i32 %16 to i64, !dbg !5883
  %bb_index67 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom65, i32 0, !dbg !5885
  %17 = load i32, i32* %bb_index67, align 4, !dbg !5885
  call void @llvm.dbg.value(metadata i32 %17, metadata !5803, metadata !DIExpression()), !dbg !5816
  %cmp68 = icmp eq i32 %17, %top.0, !dbg !5886
  br i1 %cmp68, label %if.then70, label %if.else, !dbg !5888

if.then70:                                        ; preds = %for.body64
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %worklist, align 8, !dbg !5889
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %18, metadata !5800, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %18, metadata !5800, metadata !DIExpression()), !dbg !5816
  %base73 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i64 0, i32 0, !dbg !5889
  %call77 = call fastcc i32 @VEC_int_base_pop(%struct.VEC_int_base* %base73) #7, !dbg !5889
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %worklist, align 8, !dbg !5891
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %19, metadata !5800, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %19, metadata !5800, metadata !DIExpression()), !dbg !5816
  %base80 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %19, i64 0, i32 0, !dbg !5891
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %19, metadata !5800, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %19, metadata !5800, metadata !DIExpression()), !dbg !5816
  %call90 = call fastcc i32 @VEC_int_base_length(%struct.VEC_int_base* %base80) #7, !dbg !5891
  %sub = add i32 %call90, -1, !dbg !5891
  %call91 = call fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %base80, i32 %sub) #7, !dbg !5891
  call void @llvm.dbg.value(metadata i32 %call91, metadata !5806, metadata !DIExpression()), !dbg !5816
  %idxprom92 = zext i32 %n_defs.0 to i64, !dbg !5892
  %bb_index94 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom92, i32 0, !dbg !5893
  store i32 %call91, i32* %bb_index94, align 4, !dbg !5894
  %20 = load i32, i32* %i, align 4, !dbg !5895
  call void @llvm.dbg.value(metadata i32 %20, metadata !5802, metadata !DIExpression()), !dbg !5816
  %idxprom95 = zext i32 %20 to i64, !dbg !5896
  %dfs_num97 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom95, i32 1, !dbg !5897
  %21 = load i32, i32* %dfs_num97, align 4, !dbg !5897
  %add98 = add i32 %21, 1, !dbg !5898
  %dfs_num101 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom92, i32 1, !dbg !5899
  store i32 %add98, i32* %dfs_num101, align 4, !dbg !5900
  br label %if.end121, !dbg !5901

if.else:                                          ; preds = %for.body64
  call void @llvm.dbg.value(metadata i32 %16, metadata !5802, metadata !DIExpression()), !dbg !5816
  %idxprom105 = zext i32 %n_defs.0 to i64, !dbg !5902
  %bb_index107 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom105, i32 0, !dbg !5904
  store i32 %17, i32* %bb_index107, align 4, !dbg !5905
  %22 = load i32, i32* %i, align 4, !dbg !5906
  call void @llvm.dbg.value(metadata i32 %22, metadata !5802, metadata !DIExpression()), !dbg !5816
  %idxprom108 = zext i32 %22 to i64, !dbg !5907
  %dfs_num110 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom108, i32 1, !dbg !5908
  %23 = load i32, i32* %dfs_num110, align 4, !dbg !5908
  %dfs_num113 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom105, i32 1, !dbg !5909
  store i32 %23, i32* %dfs_num113, align 4, !dbg !5910
  %24 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %worklist, align 8, !dbg !5911
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %24, metadata !5800, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %24, metadata !5800, metadata !DIExpression()), !dbg !5816
  %base116 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %24, i64 0, i32 0, !dbg !5911
  %call120 = call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %base116, i32 %17) #7, !dbg !5911
  call void @llvm.dbg.value(metadata i32 %17, metadata !5806, metadata !DIExpression()), !dbg !5816
  %.pre = load i32, i32* %dfs_num113, align 4, !dbg !5912
  br label %if.end121

if.end121:                                        ; preds = %if.else, %if.then70
  %25 = phi i32 [ %.pre, %if.else ], [ %add98, %if.then70 ], !dbg !5912
  %idxprom122.pre-phi = phi i64 [ %idxprom105, %if.else ], [ %idxprom92, %if.then70 ], !dbg !5914
  %top.1 = phi i32 [ %17, %if.else ], [ %call91, %if.then70 ], !dbg !5915
  call void @llvm.dbg.value(metadata i32 %top.1, metadata !5806, metadata !DIExpression()), !dbg !5816
  %sub125 = add i32 %n_defs.0, -1, !dbg !5916
  %idxprom126 = zext i32 %sub125 to i64, !dbg !5917
  %dfs_num128 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom126, i32 1, !dbg !5918
  %26 = load i32, i32* %dfs_num128, align 4, !dbg !5918
  %cmp129 = icmp eq i32 %25, %26, !dbg !5919
  br i1 %cmp129, label %if.then131, label %if.else139, !dbg !5920

if.then131:                                       ; preds = %if.end121
  %bb_index134 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom122.pre-phi, i32 0, !dbg !5921
  %27 = load i32, i32* %bb_index134, align 4, !dbg !5921
  %bb_index138 = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %7, i64 %idxprom126, i32 0, !dbg !5922
  store i32 %27, i32* %bb_index138, align 4, !dbg !5923
  br label %for.inc141, !dbg !5924

if.else139:                                       ; preds = %if.end121
  %inc = add i32 %n_defs.0, 1, !dbg !5925
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5814, metadata !DIExpression()), !dbg !5816
  br label %for.inc141

for.inc141:                                       ; preds = %if.then131, %if.else139
  %n_defs.1 = phi i32 [ %n_defs.0, %if.then131 ], [ %inc, %if.else139 ], !dbg !5816
  call void @llvm.dbg.value(metadata i32 %n_defs.1, metadata !5814, metadata !DIExpression()), !dbg !5816
  %28 = load i32, i32* %i, align 4, !dbg !5926
  call void @llvm.dbg.value(metadata i32 %28, metadata !5802, metadata !DIExpression()), !dbg !5816
  %inc142 = add i32 %28, 1, !dbg !5926
  call void @llvm.dbg.value(metadata i32 %inc142, metadata !5802, metadata !DIExpression()), !dbg !5816
  br label %for.cond61, !dbg !5927, !llvm.loop !5928

for.end143:                                       ; preds = %for.cond61
  %n_defs.0.lcssa = phi i32 [ %n_defs.0, %for.cond61 ], !dbg !5879
  call void @llvm.dbg.value(metadata i32 %n_defs.0.lcssa, metadata !5814, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %n_defs.0.lcssa, metadata !5814, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %n_defs.0.lcssa, metadata !5814, metadata !DIExpression()), !dbg !5816
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %worklist, align 8, !dbg !5930
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %29, metadata !5800, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %29, metadata !5800, metadata !DIExpression()), !dbg !5816
  %base146 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %29, i64 0, i32 0, !dbg !5930
  %call150 = call fastcc i32 @VEC_int_base_pop(%struct.VEC_int_base* %base146) #7, !dbg !5930
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %29, metadata !5800, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %29, metadata !5800, metadata !DIExpression()), !dbg !5816
  %call157 = call fastcc i32 @VEC_int_base_length(%struct.VEC_int_base* %base146) #7, !dbg !5931
  %cmp158 = icmp eq i32 %call157, 0, !dbg !5931
  br i1 %cmp158, label %cond.end162, label %cond.true160, !dbg !5931

cond.true160:                                     ; preds = %for.end143
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 942, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5931
  br label %cond.end162, !dbg !5931

cond.end162:                                      ; preds = %for.end143, %cond.true160
  %call164 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5932
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call164, metadata !5807, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5801, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call void @llvm.dbg.value(metadata i32* %i, metadata !5802, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %uses, i32 0, i32* nonnull %i) #7, !dbg !5933
  br label %for.cond165, !dbg !5933

for.cond165:                                      ; preds = %for.body168, %cond.end162
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5801, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call void @llvm.dbg.value(metadata i32* %i, metadata !5802, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  %call166 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5935
  %tobool167 = icmp eq i8 %call166, 0, !dbg !5933
  br i1 %tobool167, label %while.cond.preheader, label %for.body168, !dbg !5933

while.cond.preheader:                             ; preds = %for.cond165
  %30 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5937
  %31 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !5937
  %32 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !5937
  %33 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !5940
  %34 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !5940
  br label %while.cond, !dbg !5942

for.body168:                                      ; preds = %for.cond165
  %35 = load i32, i32* %i, align 4, !dbg !5943
  call void @llvm.dbg.value(metadata i32 %35, metadata !5802, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %worklist, metadata !5800, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  %call169 = call fastcc i32* @VEC_int_heap_safe_push(%struct.VEC_int_heap** nonnull %worklist, i32 %35) #7, !dbg !5943
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5801, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call void @llvm.dbg.value(metadata i32* %i, metadata !5802, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5935
  br label %for.cond165, !dbg !5935, !llvm.loop !5945

while.cond.loopexit:                              ; preds = %for.cond236
  br label %while.cond.backedge, !dbg !5942

while.cond:                                       ; preds = %while.cond.backedge, %while.cond.preheader
  %36 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %worklist, align 8, !dbg !5947
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %36, metadata !5800, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %36, metadata !5800, metadata !DIExpression()), !dbg !5816
  %base174 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %36, i64 0, i32 0, !dbg !5947
  %call178 = call fastcc i32 @VEC_int_base_length(%struct.VEC_int_base* %base174) #7, !dbg !5947
  %cmp179 = icmp eq i32 %call178, 0, !dbg !5947
  br i1 %cmp179, label %while.end, label %while.body, !dbg !5942

while.body:                                       ; preds = %while.cond
  %37 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %worklist, align 8, !dbg !5948
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %37, metadata !5800, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %37, metadata !5800, metadata !DIExpression()), !dbg !5816
  %base183 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %37, i64 0, i32 0, !dbg !5948
  %call187 = call fastcc i32 @VEC_int_base_pop(%struct.VEC_int_base* %base183) #7, !dbg !5948
  call void @llvm.dbg.value(metadata i32 %call187, metadata !5803, metadata !DIExpression()), !dbg !5816
  %cmp188 = icmp eq i32 %call187, 0, !dbg !5949
  br i1 %cmp188, label %while.cond.backedge, label %if.end191, !dbg !5951

while.cond.backedge:                              ; preds = %while.body, %cond.end206, %if.end216, %while.cond.loopexit
  br label %while.cond, !dbg !5947, !llvm.loop !5952

if.end191:                                        ; preds = %while.body
  %call192 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %phis, i32 %call187) #6, !dbg !5954
  %tobool193 = icmp eq i32 %call192, 0, !dbg !5954
  br i1 %tobool193, label %if.else195, label %if.end216, !dbg !5956

if.else195:                                       ; preds = %if.end191
  %38 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5957
  %cfg197 = getelementptr inbounds %struct.function, %struct.function* %38, i64 0, i32 1, !dbg !5957
  %39 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg197, align 8, !dbg !5957
  %x_basic_block_info198 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %39, i64 0, i32 2, !dbg !5957
  %40 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info198, align 8, !dbg !5957
  %tobool199 = icmp eq %struct.VEC_basic_block_gc* %40, null, !dbg !5957
  br i1 %tobool199, label %cond.end206, label %cond.true200, !dbg !5957

cond.true200:                                     ; preds = %if.else195
  %base204 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %40, i64 0, i32 0, !dbg !5957
  br label %cond.end206, !dbg !5957

cond.end206:                                      ; preds = %if.else195, %cond.true200
  %cond207 = phi %struct.VEC_basic_block_base* [ %base204, %cond.true200 ], [ null, %if.else195 ], !dbg !5957
  %call208 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond207, i32 %call187) #7, !dbg !5957
  %call209 = call %struct.basic_block_def* @get_immediate_dominator(i32 1, %struct.basic_block_def* %call208) #6, !dbg !5959
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call209, metadata !5809, metadata !DIExpression()), !dbg !5816
  %call210 = call i32 @bb_dom_dfs_in(i32 1, %struct.basic_block_def* %call209) #6, !dbg !5960
  %call211 = call fastcc i32 @find_dfsnum_interval(%struct.dom_dfsnum* %7, i32 %n_defs.0.lcssa, i32 %call210) #7, !dbg !5961
  call void @llvm.dbg.value(metadata i32 %call211, metadata !5804, metadata !DIExpression()), !dbg !5816
  %call212 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %phis, i32 %call211) #6, !dbg !5962
  %tobool213 = icmp eq i32 %call212, 0, !dbg !5962
  br i1 %tobool213, label %while.cond.backedge, label %if.end216, !dbg !5964

if.end216:                                        ; preds = %cond.end206, %if.end191
  %p.0 = phi i32 [ %call187, %if.end191 ], [ %call211, %cond.end206 ], !dbg !5965
  call void @llvm.dbg.value(metadata i32 %p.0, metadata !5804, metadata !DIExpression()), !dbg !5816
  %call217 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call164, i32 %p.0) #6, !dbg !5966
  %tobool218 = icmp eq i32 %call217, 0, !dbg !5966
  br i1 %tobool218, label %if.end220, label %while.cond.backedge, !dbg !5968

if.end220:                                        ; preds = %if.end216
  %call221 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call164, i32 %p.0) #6, !dbg !5969
  %41 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5970
  %cfg223 = getelementptr inbounds %struct.function, %struct.function* %41, i64 0, i32 1, !dbg !5970
  %42 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg223, align 8, !dbg !5970
  %x_basic_block_info224 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %42, i64 0, i32 2, !dbg !5970
  %43 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info224, align 8, !dbg !5970
  %tobool225 = icmp eq %struct.VEC_basic_block_gc* %43, null, !dbg !5970
  br i1 %tobool225, label %cond.end232, label %cond.true226, !dbg !5970

cond.true226:                                     ; preds = %if.end220
  %base230 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %43, i64 0, i32 0, !dbg !5970
  br label %cond.end232, !dbg !5970

cond.end232:                                      ; preds = %if.end220, %cond.true226
  %cond233 = phi %struct.VEC_basic_block_base* [ %base230, %cond.true226 ], [ null, %if.end220 ], !dbg !5970
  %call234 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond233, i32 %p.0) #7, !dbg !5970
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call234, metadata !5808, metadata !DIExpression()), !dbg !5816
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8, !dbg !5971
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call234, i64 0, i32 0, !dbg !5971
  %call235 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !5971
  %44 = extractvalue { i32, %struct.VEC_edge_gc** } %call235, 0, !dbg !5971
  store i32 %44, i32* %31, align 8, !dbg !5971
  %45 = extractvalue { i32, %struct.VEC_edge_gc** } %call235, 1, !dbg !5971
  store %struct.VEC_edge_gc** %45, %struct.VEC_edge_gc*** %32, align 8, !dbg !5971
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %30, i64 16, i1 false), !dbg !5971
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8, !dbg !5971
  br label %for.cond236, !dbg !5971

for.cond236:                                      ; preds = %for.inc250, %cond.end232
  %46 = load i32, i32* %33, align 8, !dbg !5972
  %47 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %34, align 8, !dbg !5972
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !5810, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  %call237 = call fastcc zeroext i8 @ei_cond(i32 %46, %struct.VEC_edge_gc** %47, %struct.edge_def** nonnull %e) #7, !dbg !5972
  %tobool238 = icmp eq i8 %call237, 0, !dbg !5971
  br i1 %tobool238, label %while.cond.loopexit, label %for.body239, !dbg !5971, !llvm.loop !5952

for.body239:                                      ; preds = %for.cond236
  %48 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5973
  call void @llvm.dbg.value(metadata %struct.edge_def* %48, metadata !5810, metadata !DIExpression()), !dbg !5816
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %48, i64 0, i32 0, !dbg !5975
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5975
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %49, i64 0, i32 9, !dbg !5976
  %50 = load i32, i32* %index, align 8, !dbg !5976
  call void @llvm.dbg.value(metadata i32 %50, metadata !5805, metadata !DIExpression()), !dbg !5816
  %call240 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %uses, i32 %50) #6, !dbg !5977
  %tobool241 = icmp eq i32 %call240, 0, !dbg !5977
  br i1 %tobool241, label %if.end243, label %for.inc250, !dbg !5979

if.end243:                                        ; preds = %for.body239
  %call244 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %kills, i32 %50) #6, !dbg !5980
  %tobool245 = icmp eq i32 %call244, 0, !dbg !5980
  br i1 %tobool245, label %if.end247, label %for.inc250, !dbg !5982

if.end247:                                        ; preds = %if.end243
  %call248 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %uses, i32 %50) #6, !dbg !5983
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %worklist, metadata !5800, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  %call249 = call fastcc i32* @VEC_int_heap_safe_push(%struct.VEC_int_heap** nonnull %worklist, i32 %50) #7, !dbg !5984
  br label %for.inc250, !dbg !5985

for.inc250:                                       ; preds = %if.end243, %for.body239, %if.end247
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !5811, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !5972
  br label %for.cond236, !dbg !5972, !llvm.loop !5986

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %worklist, metadata !5800, metadata !DIExpression(DW_OP_deref)), !dbg !5816
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %worklist) #7, !dbg !5988
  call void @bitmap_copy(%struct.bitmap_head_def* %phis, %struct.bitmap_head_def* %call164) #6, !dbg !5989
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call164) #6, !dbg !5990
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5807, metadata !DIExpression()), !dbg !5816
  call void @free(i8* %call11) #6, !dbg !5991
  br label %cleanup, !dbg !5992

cleanup:                                          ; preds = %while.end, %if.then5, %if.then
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !5992
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5992
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !5992
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5992
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5992
  ret void, !dbg !5992
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_block_for_update(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !5993 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5997, metadata !DIExpression()), !dbg !5998
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !5999
  %cmp = icmp eq %struct.bitmap_head_def* %0, null, !dbg !5999
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5999

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 458, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5999
  %.pre = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !6000
  br label %cond.end, !dbg !5999

cond.end:                                         ; preds = %entry, %cond.true
  %1 = phi %struct.bitmap_head_def* [ %0, %entry ], [ %.pre, %cond.true ], !dbg !6000
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6002
  %2 = load i32, i32* %index, align 8, !dbg !6002
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %1, i32 %2) #6, !dbg !6003
  %tobool = icmp eq i32 %call, 0, !dbg !6003
  br i1 %tobool, label %if.end, label %return, !dbg !6004

if.end:                                           ; preds = %cond.end
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !6005
  %4 = load i32, i32* %index, align 8, !dbg !6006
  %call2 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %4) #6, !dbg !6007
  tail call fastcc void @initialize_flags_in_bb(%struct.basic_block_def* %bb) #7, !dbg !6008
  br label %return, !dbg !6009

return:                                           ; preds = %cond.end, %if.end
  ret void, !dbg !6009
}

declare dso_local %union.gimple_statement_d* @create_phi_node(%union.tree_node*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_phi_set_result(%union.gimple_statement_d* %gs, %union.tree_node* %result) unnamed_addr #0 !dbg !6010 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6014, metadata !DIExpression()), !dbg !6016
  call void @llvm.dbg.value(metadata %union.tree_node* %result, metadata !6015, metadata !DIExpression()), !dbg !6016
  %result1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !6017
  store %union.tree_node* %result, %union.tree_node** %result1, align 8, !dbg !6018
  ret void, !dbg !6019
}

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @target_for_debug_bind(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_debug_bind_stat(%union.tree_node*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6020 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6024, metadata !DIExpression()), !dbg !6025
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !6026
  ret %union.tree_node** %result, !dbg !6027
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6028 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6030, metadata !DIExpression()), !dbg !6032
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !6031, metadata !DIExpression()), !dbg !6033
  tail call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* sret %agg.result, %struct.basic_block_def* %bb) #7, !dbg !6034
  br label %while.cond, !dbg !6035

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !6036
  %tobool = icmp eq i8 %call, 0, !dbg !6036
  br i1 %tobool, label %land.rhs, label %while.end, !dbg !6037

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !6038
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !6039
  %cmp = icmp eq i32 %call2, 4, !dbg !6040
  br i1 %cmp, label %while.body, label %while.end, !dbg !6035

while.body:                                       ; preds = %land.rhs
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %agg.result) #7, !dbg !6041
  br label %while.cond, !dbg !6035, !llvm.loop !6042

while.end:                                        ; preds = %while.cond, %land.rhs
  ret void, !dbg !6044
}

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_phi_for_rewrite(%struct.basic_block_def* %bb, %union.gimple_statement_d* %phi) unnamed_addr #5 !dbg !6045 {
entry:
  %phis = alloca %struct.VEC_gimple_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6049, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !6050, metadata !DIExpression()), !dbg !6054
  %0 = bitcast %struct.VEC_gimple_heap** %phis to i8*, !dbg !6055
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6055
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6056
  %1 = load i32, i32* %index, align 8, !dbg !6056
  call void @llvm.dbg.value(metadata i32 %1, metadata !6053, metadata !DIExpression()), !dbg !6054
  %call = tail call fastcc zeroext i8 @rewrite_uses_p(%union.gimple_statement_d* %phi) #7, !dbg !6057
  %tobool = icmp eq i8 %call, 0, !dbg !6057
  br i1 %tobool, label %if.end, label %cleanup, !dbg !6059

if.end:                                           ; preds = %entry
  tail call fastcc void @set_rewrite_uses(%union.gimple_statement_d* %phi, i8 zeroext 1) #7, !dbg !6060
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_with_phis_to_rewrite, align 8, !dbg !6061
  %tobool1 = icmp eq %struct.bitmap_head_def* %2, null, !dbg !6061
  br i1 %tobool1, label %cleanup, label %if.end3, !dbg !6063

if.end3:                                          ; preds = %if.end
  %call4 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %2, i32 %1) #6, !dbg !6064
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6065
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !6065
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6065
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 5, !dbg !6065
  %5 = load i32, i32* %x_last_basic_block, align 8, !dbg !6065
  %add = add nsw i32 %5, 1, !dbg !6065
  %call5 = tail call fastcc i32 @VEC_gimple_vec_heap_reserve(%struct.VEC_gimple_vec_heap** nonnull @phis_to_rewrite, i32 %add) #7, !dbg !6065
  %6 = load %struct.VEC_gimple_vec_heap*, %struct.VEC_gimple_vec_heap** @phis_to_rewrite, align 8, !dbg !6066
  %base = getelementptr inbounds %struct.VEC_gimple_vec_heap, %struct.VEC_gimple_vec_heap* %6, i64 0, i32 0, !dbg !6066
  %call7 = tail call fastcc i32 @VEC_gimple_vec_base_length(%struct.VEC_gimple_vec_base* %base) #7, !dbg !6066
  call void @llvm.dbg.value(metadata i32 %call7, metadata !6052, metadata !DIExpression()), !dbg !6054
  br label %for.cond, !dbg !6068

for.cond:                                         ; preds = %cond.end12, %if.end3
  %i.0 = phi i32 [ %call7, %if.end3 ], [ %inc, %cond.end12 ], !dbg !6069
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6052, metadata !DIExpression()), !dbg !6054
  %cmp = icmp ugt i32 %i.0, %1, !dbg !6070
  %7 = load %struct.VEC_gimple_vec_heap*, %struct.VEC_gimple_vec_heap** @phis_to_rewrite, align 8, !dbg !6054
  %base10 = getelementptr inbounds %struct.VEC_gimple_vec_heap, %struct.VEC_gimple_vec_heap* %7, i64 0, i32 0, !dbg !6054
  br i1 %cmp, label %cond.end19, label %cond.end12, !dbg !6072

cond.end12:                                       ; preds = %for.cond
  %call14 = tail call fastcc %struct.VEC_gimple_heap** @VEC_gimple_vec_base_quick_push(%struct.VEC_gimple_vec_base* %base10, %struct.VEC_gimple_heap* null) #7, !dbg !6073
  %inc = add i32 %i.0, 1, !dbg !6074
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6052, metadata !DIExpression()), !dbg !6054
  br label %for.cond, !dbg !6075, !llvm.loop !6076

cond.end19:                                       ; preds = %for.cond
  %base10.lcssa = phi %struct.VEC_gimple_vec_base* [ %base10, %for.cond ], !dbg !6054
  %call21 = tail call fastcc %struct.VEC_gimple_heap* @VEC_gimple_vec_base_index(%struct.VEC_gimple_vec_base* %base10.lcssa, i32 %1) #7, !dbg !6078
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %call21, metadata !6051, metadata !DIExpression()), !dbg !6054
  store %struct.VEC_gimple_heap* %call21, %struct.VEC_gimple_heap** %phis, align 8, !dbg !6079
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %call21, metadata !6051, metadata !DIExpression()), !dbg !6054
  %tobool22 = icmp eq %struct.VEC_gimple_heap* %call21, null, !dbg !6080
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !6082

if.then23:                                        ; preds = %cond.end19
  %call24 = tail call fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 10) #7, !dbg !6083
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %call24, metadata !6051, metadata !DIExpression()), !dbg !6054
  store %struct.VEC_gimple_heap* %call24, %struct.VEC_gimple_heap** %phis, align 8, !dbg !6084
  br label %if.end25, !dbg !6085

if.end25:                                         ; preds = %cond.end19, %if.then23
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %phis, metadata !6051, metadata !DIExpression(DW_OP_deref)), !dbg !6054
  %call26 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** nonnull %phis, %union.gimple_statement_d* %phi) #7, !dbg !6086
  %8 = load %struct.VEC_gimple_vec_heap*, %struct.VEC_gimple_vec_heap** @phis_to_rewrite, align 8, !dbg !6087
  %base29 = getelementptr inbounds %struct.VEC_gimple_vec_heap, %struct.VEC_gimple_vec_heap* %8, i64 0, i32 0, !dbg !6087
  %9 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %phis, align 8, !dbg !6087
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %9, metadata !6051, metadata !DIExpression()), !dbg !6054
  %call33 = call fastcc %struct.VEC_gimple_heap* @VEC_gimple_vec_base_replace(%struct.VEC_gimple_vec_base* %base29, i32 %1, %struct.VEC_gimple_heap* %9) #7, !dbg !6087
  br label %cleanup, !dbg !6088

cleanup:                                          ; preds = %if.end, %entry, %if.end25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6088
  ret void, !dbg !6088
}

declare dso_local zeroext i8 @bitmap_and_compl(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_ior(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local i64 @bitmap_count_bits(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local i32 @bb_dom_dfs_in(i32, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local i32 @bb_dom_dfs_out(i32, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @cmp_dfsnum(i8* %a, i8* %b) #5 !dbg !6089 {
entry:
  call void @llvm.dbg.value(metadata i8* %a, metadata !6091, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %b, metadata !6092, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %a, metadata !6093, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %b, metadata !6095, metadata !DIExpression()), !dbg !6096
  %dfs_num = getelementptr inbounds i8, i8* %a, i64 4, !dbg !6097
  %0 = bitcast i8* %dfs_num to i32*, !dbg !6097
  %1 = load i32, i32* %0, align 4, !dbg !6097
  %dfs_num1 = getelementptr inbounds i8, i8* %b, i64 4, !dbg !6098
  %2 = bitcast i8* %dfs_num1 to i32*, !dbg !6098
  %3 = load i32, i32* %2, align 4, !dbg !6098
  %sub = sub nsw i32 %1, %3, !dbg !6099
  ret i32 %sub, !dbg !6100
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6101 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6105, metadata !DIExpression()), !dbg !6106
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #6, !dbg !6107
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !6107
  ret %struct.VEC_int_heap* %0, !dbg !6107
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !6108 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !6114, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !6115, metadata !DIExpression()), !dbg !6117
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !6118
  %0 = load i32, i32* %num1, align 4, !dbg !6118
  %inc = add i32 %0, 1, !dbg !6118
  store i32 %inc, i32* %num1, align 4, !dbg !6118
  %idxprom = zext i32 %0 to i64, !dbg !6118
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6118
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !6116, metadata !DIExpression()), !dbg !6117
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !6118
  ret i32* %arrayidx, !dbg !6118
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_pop(%struct.VEC_int_base* %vec_) unnamed_addr #0 !dbg !6119 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !6123, metadata !DIExpression()), !dbg !6125
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !6126
  %0 = load i32, i32* %num1, align 4, !dbg !6126
  %dec = add i32 %0, -1, !dbg !6126
  store i32 %dec, i32* %num1, align 4, !dbg !6126
  %idxprom = zext i32 %dec to i64, !dbg !6126
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6126
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6126
  call void @llvm.dbg.value(metadata i32 %1, metadata !6124, metadata !DIExpression()), !dbg !6125
  ret i32 %1, !dbg !6126
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_index(%struct.VEC_int_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6127 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !6133, metadata !DIExpression()), !dbg !6135
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6134, metadata !DIExpression()), !dbg !6135
  br label %land.end, !dbg !6136

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6136
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6136
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6136
  ret i32 %0, !dbg !6136
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_length(%struct.VEC_int_base* %vec_) unnamed_addr #0 !dbg !6137 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !6141, metadata !DIExpression()), !dbg !6142
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !6143
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6143

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !6143
  %0 = load i32, i32* %num, align 4, !dbg !6143
  br label %cond.end, !dbg !6143

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6143
  ret i32 %cond, !dbg !6143
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_heap_safe_push(%struct.VEC_int_heap** %vec_, i32 %obj_) unnamed_addr #0 !dbg !6144 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !6150, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !6151, metadata !DIExpression()), !dbg !6152
  %call = tail call fastcc i32 @VEC_int_heap_reserve(%struct.VEC_int_heap** %vec_, i32 1) #7, !dbg !6153
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !6153
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !6153
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6153

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !6153
  br label %cond.end, !dbg !6153

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6153
  %call1 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond, i32 %obj_) #7, !dbg !6153
  ret i32* %call1, !dbg !6153
}

declare dso_local %struct.basic_block_def* @get_immediate_dominator(i32, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_dfsnum_interval(%struct.dom_dfsnum* %defs, i32 %n, i32 %s) unnamed_addr #5 !dbg !6154 {
entry:
  call void @llvm.dbg.value(metadata %struct.dom_dfsnum* %defs, metadata !6158, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %n, metadata !6159, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %s, metadata !6160, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 0, metadata !6161, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %n, metadata !6162, metadata !DIExpression()), !dbg !6164
  br label %while.cond, !dbg !6165

while.cond:                                       ; preds = %while.body, %entry
  %f.0 = phi i32 [ 0, %entry ], [ %div.f.0, %while.body ], !dbg !6164
  %t.0 = phi i32 [ %n, %entry ], [ %t.0.div, %while.body ], !dbg !6166
  call void @llvm.dbg.value(metadata i32 %t.0, metadata !6162, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %f.0, metadata !6161, metadata !DIExpression()), !dbg !6164
  %add = add i32 %f.0, 1, !dbg !6167
  %cmp = icmp ugt i32 %t.0, %add, !dbg !6168
  br i1 %cmp, label %while.body, label %while.end, !dbg !6165

while.body:                                       ; preds = %while.cond
  %add1 = add i32 %f.0, %t.0, !dbg !6169
  %div = lshr i32 %add1, 1, !dbg !6171
  call void @llvm.dbg.value(metadata i32 %div, metadata !6163, metadata !DIExpression()), !dbg !6164
  %idxprom = zext i32 %div to i64, !dbg !6172
  %dfs_num = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %defs, i64 %idxprom, i32 1, !dbg !6174
  %0 = load i32, i32* %dfs_num, align 4, !dbg !6174
  %cmp2 = icmp ule i32 %0, %s, !dbg !6175
  %div.f.0 = select i1 %cmp2, i32 %div, i32 %f.0
  %t.0.div = select i1 %cmp2, i32 %t.0, i32 %div
  call void @llvm.dbg.value(metadata i32 %t.0.div, metadata !6162, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %div.f.0, metadata !6161, metadata !DIExpression()), !dbg !6164
  br label %while.cond, !dbg !6165, !llvm.loop !6176

while.end:                                        ; preds = %while.cond
  %f.0.lcssa = phi i32 [ %f.0, %while.cond ], !dbg !6164
  call void @llvm.dbg.value(metadata i32 %f.0.lcssa, metadata !6161, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %f.0.lcssa, metadata !6161, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %f.0.lcssa, metadata !6161, metadata !DIExpression()), !dbg !6164
  %idxprom3 = zext i32 %f.0.lcssa to i64, !dbg !6178
  %bb_index = getelementptr inbounds %struct.dom_dfsnum, %struct.dom_dfsnum* %defs, i64 %idxprom3, i32 0, !dbg !6179
  %1 = load i32, i32* %bb_index, align 4, !dbg !6179
  ret i32 %1, !dbg !6180
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !6181 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !6185, metadata !DIExpression()), !dbg !6186
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !6187
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !6187
  br i1 %tobool, label %if.end, label %if.then, !dbg !6189

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !6189
  tail call void @free(i8* nonnull %1) #6, !dbg !6187
  br label %if.end, !dbg !6187

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !6189
  ret void, !dbg !6189
}

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_heap_reserve(%struct.VEC_int_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6190 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !6194, metadata !DIExpression()), !dbg !6197
  call void @llvm.dbg.value(metadata i32 1, metadata !6195, metadata !DIExpression()), !dbg !6197
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !6198
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !6198
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6198

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !6198
  br label %cond.end, !dbg !6198

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6198
  %call = tail call fastcc i32 @VEC_int_base_space(%struct.VEC_int_base* %cond, i32 1) #7, !dbg !6198
  %tobool1 = icmp eq i32 %call, 0, !dbg !6198
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6198
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6196, metadata !DIExpression()), !dbg !6197
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6198

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_int_heap** %vec_ to i8**, !dbg !6199
  %2 = load i8*, i8** %1, align 8, !dbg !6199
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 4) #6, !dbg !6199
  store i8* %call3, i8** %1, align 8, !dbg !6199
  br label %if.end, !dbg !6199

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6198
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_space(%struct.VEC_int_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6201 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !6205, metadata !DIExpression()), !dbg !6207
  call void @llvm.dbg.value(metadata i32 1, metadata !6206, metadata !DIExpression()), !dbg !6207
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !6208
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6208

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 1, !dbg !6208
  %0 = load i32, i32* %alloc, align 4, !dbg !6208
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !6208
  %1 = load i32, i32* %num, align 4, !dbg !6208
  %cmp1 = icmp ne i32 %0, %1, !dbg !6208
  %phitmp = zext i1 %cmp1 to i32, !dbg !6208
  br label %cond.end, !dbg !6208

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6208

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6208
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_flags_in_bb(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !6209 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp2 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6211, metadata !DIExpression()), !dbg !6218
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6219
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6219
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6220
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6220
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #6, !dbg !6220
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !6220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6220
  br label %for.cond, !dbg !6221

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6213, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6222
  %tobool = icmp eq i8 %call, 0, !dbg !6223
  br i1 %tobool, label %for.body, label %for.end, !dbg !6224

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6213, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6225
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !6214, metadata !DIExpression()), !dbg !6226
  call fastcc void @set_rewrite_uses(%union.gimple_statement_d* %call1, i8 zeroext 0) #7, !dbg !6227
  call fastcc void @set_register_defs(%union.gimple_statement_d* %call1, i8 zeroext 0) #7, !dbg !6228
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6213, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !6229
  br label %for.cond, !dbg !6230, !llvm.loop !6231

for.end:                                          ; preds = %for.cond
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp2 to i8*, !dbg !6233
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6233
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp2, %struct.basic_block_def* %bb) #7, !dbg !6233
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !6233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6233
  br label %for.cond3, !dbg !6235

for.cond3:                                        ; preds = %cond.end, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6213, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  %call4 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6236
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6238
  br i1 %tobool5, label %for.body7, label %for.end12, !dbg !6239

for.body7:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6213, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  %call8 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6240
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call8, metadata !6212, metadata !DIExpression()), !dbg !6218
  %call9 = call fastcc zeroext i8 @gimple_modified_p(%union.gimple_statement_d* %call8) #7, !dbg !6242
  %tobool10 = icmp eq i8 %call9, 0, !dbg !6242
  br i1 %tobool10, label %cond.end, label %cond.true, !dbg !6242

cond.true:                                        ; preds = %for.body7
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 447, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6242
  br label %cond.end, !dbg !6242

cond.end:                                         ; preds = %for.body7, %cond.true
  call fastcc void @set_rewrite_uses(%union.gimple_statement_d* %call8, i8 zeroext 0) #7, !dbg !6243
  call fastcc void @set_register_defs(%union.gimple_statement_d* %call8, i8 zeroext 0) #7, !dbg !6244
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6213, metadata !DIExpression(DW_OP_deref)), !dbg !6218
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !6245
  br label %for.cond3, !dbg !6246, !llvm.loop !6247

for.end12:                                        ; preds = %for.cond3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6249
  ret void, !dbg !6249
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_modified_p(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6250 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6252, metadata !DIExpression()), !dbg !6253
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !6254
  %tobool = icmp eq i8 %call, 0, !dbg !6255
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6255

cond.true:                                        ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !6256
  %bf.load = load i32, i32* %0, align 8, !dbg !6256
  %bf.lshr = lshr i32 %bf.load, 13, !dbg !6256
  %1 = trunc i32 %bf.lshr to i8, !dbg !6257
  %conv1 = and i8 %1, 1, !dbg !6257
  br label %cond.end, !dbg !6255

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i8 [ %conv1, %cond.true ], [ 0, %entry ]
  ret i8 %cond, !dbg !6258
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_vec_heap_reserve(%struct.VEC_gimple_vec_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6259 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_vec_heap** @phis_to_rewrite, metadata !6264, metadata !DIExpression()), !dbg !6267
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6265, metadata !DIExpression()), !dbg !6267
  %0 = load %struct.VEC_gimple_vec_heap*, %struct.VEC_gimple_vec_heap** @phis_to_rewrite, align 8, !dbg !6268
  %tobool = icmp eq %struct.VEC_gimple_vec_heap* %0, null, !dbg !6268
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6268

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_vec_heap, %struct.VEC_gimple_vec_heap* %0, i64 0, i32 0, !dbg !6268
  br label %cond.end, !dbg !6268

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_vec_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6268
  %call = tail call fastcc i32 @VEC_gimple_vec_base_space(%struct.VEC_gimple_vec_base* %cond, i32 %alloc_) #7, !dbg !6268
  %tobool1 = icmp eq i32 %call, 0, !dbg !6268
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6268
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6266, metadata !DIExpression()), !dbg !6267
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6268

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_gimple_vec_heap** @phis_to_rewrite to i8**), align 8, !dbg !6269
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 %alloc_) #6, !dbg !6269
  store i8* %call3, i8** bitcast (%struct.VEC_gimple_vec_heap** @phis_to_rewrite to i8**), align 8, !dbg !6269
  br label %if.end, !dbg !6269

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6268
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_vec_base_length(%struct.VEC_gimple_vec_base* %vec_) unnamed_addr #0 !dbg !6271 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_vec_base* %vec_, metadata !6275, metadata !DIExpression()), !dbg !6276
  %tobool = icmp eq %struct.VEC_gimple_vec_base* %vec_, null, !dbg !6277
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6277

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_gimple_vec_base, %struct.VEC_gimple_vec_base* %vec_, i64 0, i32 0, !dbg !6277
  %0 = load i32, i32* %num, align 8, !dbg !6277
  br label %cond.end, !dbg !6277

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6277
  ret i32 %cond, !dbg !6277
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_gimple_heap** @VEC_gimple_vec_base_quick_push(%struct.VEC_gimple_vec_base* %vec_, %struct.VEC_gimple_heap* %obj_) unnamed_addr #0 !dbg !6278 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_vec_base* %vec_, metadata !6283, metadata !DIExpression()), !dbg !6286
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* null, metadata !6284, metadata !DIExpression()), !dbg !6286
  %num1 = getelementptr inbounds %struct.VEC_gimple_vec_base, %struct.VEC_gimple_vec_base* %vec_, i64 0, i32 0, !dbg !6287
  %0 = load i32, i32* %num1, align 8, !dbg !6287
  %inc = add i32 %0, 1, !dbg !6287
  store i32 %inc, i32* %num1, align 8, !dbg !6287
  %idxprom = zext i32 %0 to i64, !dbg !6287
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_vec_base, %struct.VEC_gimple_vec_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6287
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %arrayidx, metadata !6285, metadata !DIExpression()), !dbg !6286
  store %struct.VEC_gimple_heap* null, %struct.VEC_gimple_heap** %arrayidx, align 8, !dbg !6287
  ret %struct.VEC_gimple_heap** %arrayidx, !dbg !6287
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6288 {
entry:
  call void @llvm.dbg.value(metadata i32 10, metadata !6292, metadata !DIExpression()), !dbg !6293
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 10) #6, !dbg !6294
  %0 = bitcast i8* %call to %struct.VEC_gimple_heap*, !dbg !6294
  ret %struct.VEC_gimple_heap* %0, !dbg !6294
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !6295 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !6300, metadata !DIExpression()), !dbg !6302
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !6301, metadata !DIExpression()), !dbg !6302
  %call = tail call fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 1) #7, !dbg !6303
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !6303
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !6303
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6303

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !6303
  br label %cond.end, !dbg !6303

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6303
  %call1 = tail call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond, %union.gimple_statement_d* %obj_) #7, !dbg !6303
  ret %union.gimple_statement_d** %call1, !dbg !6303
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_vec_base_space(%struct.VEC_gimple_vec_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6304 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_vec_base* %vec_, metadata !6308, metadata !DIExpression()), !dbg !6310
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6309, metadata !DIExpression()), !dbg !6310
  %tobool = icmp eq %struct.VEC_gimple_vec_base* %vec_, null, !dbg !6311
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6311

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_gimple_vec_base, %struct.VEC_gimple_vec_base* %vec_, i64 0, i32 1, !dbg !6311
  %0 = load i32, i32* %alloc, align 4, !dbg !6311
  %num = getelementptr inbounds %struct.VEC_gimple_vec_base, %struct.VEC_gimple_vec_base* %vec_, i64 0, i32 0, !dbg !6311
  %1 = load i32, i32* %num, align 8, !dbg !6311
  %sub = sub i32 %0, %1, !dbg !6311
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !6311
  br label %cond.end, !dbg !6311

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !6311
  br label %cond.end, !dbg !6311

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !6311
  ret i32 %cond, !dbg !6311
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6312 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !6316, metadata !DIExpression()), !dbg !6319
  call void @llvm.dbg.value(metadata i32 1, metadata !6317, metadata !DIExpression()), !dbg !6319
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !6320
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !6320
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6320

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !6320
  br label %cond.end, !dbg !6320

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6320
  %call = tail call fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %cond, i32 1) #7, !dbg !6320
  %tobool1 = icmp eq i32 %call, 0, !dbg !6320
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6320
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6318, metadata !DIExpression()), !dbg !6319
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6320

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_gimple_heap** %vec_ to i8**, !dbg !6321
  %2 = load i8*, i8** %1, align 8, !dbg !6321
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !6321
  store i8* %call3, i8** %1, align 8, !dbg !6321
  br label %if.end, !dbg !6321

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6320
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !6323 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !6328, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !6329, metadata !DIExpression()), !dbg !6331
  %num1 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !6332
  %0 = load i32, i32* %num1, align 8, !dbg !6332
  %inc = add i32 %0, 1, !dbg !6332
  store i32 %inc, i32* %num1, align 8, !dbg !6332
  %idxprom = zext i32 %0 to i64, !dbg !6332
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6332
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %arrayidx, metadata !6330, metadata !DIExpression()), !dbg !6331
  store %union.gimple_statement_d* %obj_, %union.gimple_statement_d** %arrayidx, align 8, !dbg !6332
  ret %union.gimple_statement_d** %arrayidx, !dbg !6332
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6333 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !6337, metadata !DIExpression()), !dbg !6339
  call void @llvm.dbg.value(metadata i32 1, metadata !6338, metadata !DIExpression()), !dbg !6339
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !6340
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6340

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 1, !dbg !6340
  %0 = load i32, i32* %alloc, align 4, !dbg !6340
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !6340
  %1 = load i32, i32* %num, align 8, !dbg !6340
  %cmp1 = icmp ne i32 %0, %1, !dbg !6340
  %phitmp = zext i1 %cmp1 to i32, !dbg !6340
  br label %cond.end, !dbg !6340

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6340

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6340
}

; Function Attrs: nounwind uwtable
define internal i32 @repl_map_hash(i8* %p) #5 !dbg !6341 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !6343, metadata !DIExpression()), !dbg !6344
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !6345
  %1 = bitcast i8* %p to i8**, !dbg !6346
  %2 = load i8*, i8** %1, align 8, !dbg !6346
  %call = tail call i32 %0(i8* %2) #6, !dbg !6345
  ret i32 %call, !dbg !6347
}

; Function Attrs: nounwind uwtable
define internal i32 @repl_map_eq(i8* %p1, i8* %p2) #5 !dbg !6348 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !6350, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i8* %p2, metadata !6351, metadata !DIExpression()), !dbg !6352
  %name = bitcast i8* %p1 to %union.tree_node**, !dbg !6353
  %0 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !6353
  %name1 = bitcast i8* %p2 to %union.tree_node**, !dbg !6354
  %1 = load %union.tree_node*, %union.tree_node** %name1, align 8, !dbg !6354
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !6355
  %conv = zext i1 %cmp to i32, !dbg !6355
  ret i32 %conv, !dbg !6356
}

; Function Attrs: nounwind uwtable
define internal void @repl_map_free(i8* %p) #5 !dbg !6357 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !6359, metadata !DIExpression()), !dbg !6360
  %set = getelementptr inbounds i8, i8* %p, i64 8, !dbg !6361
  %0 = bitcast i8* %set to %struct.bitmap_head_def**, !dbg !6361
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, align 8, !dbg !6361
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !6361
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %0, align 8, !dbg !6361
  tail call void @free(i8* %p) #6, !dbg !6362
  ret void, !dbg !6363
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_resize(%struct.simple_bitmap_def*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @add_to_repl_tbl(%union.tree_node* %new_tree, %union.tree_node* %old) unnamed_addr #0 !dbg !6364 {
entry:
  %m = alloca %struct.repl_map_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree, metadata !6366, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %union.tree_node* %old, metadata !6367, metadata !DIExpression()), !dbg !6371
  %0 = bitcast %struct.repl_map_d* %m to i8*, !dbg !6372
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6372
  %name = getelementptr inbounds %struct.repl_map_d, %struct.repl_map_d* %m, i64 0, i32 0, !dbg !6373
  store %union.tree_node* %new_tree, %union.tree_node** %name, align 8, !dbg !6374
  %1 = load %struct.htab*, %struct.htab** @repl_tbl, align 8, !dbg !6375
  %call = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 1) #6, !dbg !6376
  call void @llvm.dbg.value(metadata i8** %call, metadata !6370, metadata !DIExpression()), !dbg !6371
  %2 = load i8*, i8** %call, align 8, !dbg !6377
  %cmp = icmp eq i8* %2, null, !dbg !6379
  br i1 %cmp, label %if.then, label %if.else, !dbg !6380

if.then:                                          ; preds = %entry
  %call1 = call i8* @xmalloc(i64 16) #6, !dbg !6381
  call void @llvm.dbg.value(metadata i8* %call1, metadata !6369, metadata !DIExpression()), !dbg !6371
  %name2 = bitcast i8* %call1 to %union.tree_node**, !dbg !6383
  store %union.tree_node* %new_tree, %union.tree_node** %name2, align 8, !dbg !6384
  %call3 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !6385
  %set = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !6386
  %3 = bitcast i8* %set to %struct.bitmap_head_def**, !dbg !6386
  store %struct.bitmap_head_def* %call3, %struct.bitmap_head_def** %3, align 8, !dbg !6387
  store i8* %call1, i8** %call, align 8, !dbg !6388
  br label %if.end, !dbg !6389

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %2, metadata !6369, metadata !DIExpression()), !dbg !6371
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %mp.0.in = phi i8* [ %call1, %if.then ], [ %2, %if.else ]
  call void @llvm.dbg.value(metadata i8* %mp.0.in, metadata !6369, metadata !DIExpression()), !dbg !6371
  %set4 = getelementptr inbounds i8, i8* %mp.0.in, i64 8, !dbg !6390
  %4 = bitcast i8* %set4 to %struct.bitmap_head_def**, !dbg !6390
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %4, align 8, !dbg !6390
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %old, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6391
  %6 = bitcast %union.tree_node** %version to i32*, !dbg !6391
  %7 = load i32, i32* %6, align 8, !dbg !6391
  %call5 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %5, i32 %7) #6, !dbg !6392
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6393
  ret void, !dbg !6393
}

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !6394 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !6396, metadata !DIExpression()), !dbg !6401
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !6397, metadata !DIExpression()), !dbg !6401
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !6402
  %0 = load i8*, i8** %popcount, align 8, !dbg !6402
  %tobool = icmp eq i8* %0, null, !dbg !6403
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !6404

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !6405
  %.pre2 = zext i32 %.pre to i64, !dbg !6406
  %.pre3 = shl i64 1, %.pre2, !dbg !6406
  %.pre4 = lshr i32 %bitno, 6, !dbg !6407
  %.pre5 = zext i32 %.pre4 to i64, !dbg !6408
  br label %if.end7, !dbg !6404

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !6409
  %idxprom = zext i32 %div to i64, !dbg !6409
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !6409
  %1 = load i64, i64* %arrayidx, align 8, !dbg !6409
  %rem = and i32 %bitno, 63, !dbg !6409
  %sh_prom = zext i32 %rem to i64, !dbg !6409
  %2 = shl i64 1, %sh_prom, !dbg !6410
  %3 = and i64 %1, %2, !dbg !6410
  %tobool1 = icmp eq i64 %3, 0, !dbg !6410
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !6412

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !6413
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !6414
  %dec = add i8 %4, -1, !dbg !6414
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !6414
  br label %if.end7, !dbg !6413

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !6408
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !6406
  %neg = xor i64 %shl.pre-phi, -1, !dbg !6415
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !6408
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !6416
  %and14 = and i64 %5, %neg, !dbg !6416
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !6416
  ret void, !dbg !6417
}

; Function Attrs: nounwind uwtable
define internal fastcc void @prepare_def_site_for(%union.tree_node* %name, i8 zeroext %insert_phi_p) unnamed_addr #5 !dbg !6418 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !6422, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i8 %insert_phi_p, metadata !6423, metadata !DIExpression()), !dbg !6426
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @names_to_release, align 8, !dbg !6427
  %cmp = icmp eq %struct.bitmap_head_def* %0, null, !dbg !6427
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !6427

lor.lhs.false:                                    ; preds = %entry
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6427
  %1 = bitcast %union.tree_node** %version to i32*, !dbg !6427
  %2 = load i32, i32* %1, align 8, !dbg !6427
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %0, i32 %2) #6, !dbg !6427
  %tobool = icmp eq i32 %call, 0, !dbg !6427
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6427

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2618, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6427
  br label %cond.end, !dbg !6427

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6428
  %3 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6428
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %3, align 8, !dbg !6428
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %4, metadata !6424, metadata !DIExpression()), !dbg !6426
  %call2 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %4) #7, !dbg !6429
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !6425, metadata !DIExpression()), !dbg !6426
  %tobool3 = icmp eq %struct.basic_block_def* %call2, null, !dbg !6430
  br i1 %tobool3, label %if.end, label %if.then, !dbg !6432

if.then:                                          ; preds = %cond.end
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 9, !dbg !6433
  %5 = load i32, i32* %index, align 8, !dbg !6433
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6433
  %cfg = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !6433
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6433
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 5, !dbg !6433
  %8 = load i32, i32* %x_last_basic_block, align 8, !dbg !6433
  %cmp4 = icmp slt i32 %5, %8, !dbg !6433
  br i1 %cmp4, label %cond.end7, label %cond.true5, !dbg !6433

cond.true5:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2624, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6433
  br label %cond.end7, !dbg !6433

cond.end7:                                        ; preds = %if.then, %cond.true5
  tail call fastcc void @mark_block_for_update(%struct.basic_block_def* nonnull %call2) #7, !dbg !6435
  tail call fastcc void @mark_def_interesting(%union.tree_node* %name, %union.gimple_statement_d* %4, %struct.basic_block_def* nonnull %call2, i8 zeroext %insert_phi_p) #7, !dbg !6436
  br label %if.end, !dbg !6437

if.end:                                           ; preds = %cond.end, %cond.end7
  ret void, !dbg !6438
}

; Function Attrs: nounwind uwtable
define internal fastcc void @prepare_use_sites_for(%union.tree_node* %name, i8 zeroext %insert_phi_p) unnamed_addr #5 !dbg !6439 {
entry:
  %iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !6441, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata i8 %insert_phi_p, metadata !6442, metadata !DIExpression()), !dbg !6461
  %0 = bitcast %struct.immediate_use_iterator_d* %iter to i8*, !dbg !6462
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !6462
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6444, metadata !DIExpression(DW_OP_deref)), !dbg !6461
  %call = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %iter, %union.tree_node* %name) #7, !dbg !6463
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call, metadata !6443, metadata !DIExpression()), !dbg !6461
  br label %for.cond, !dbg !6463

for.cond:                                         ; preds = %for.inc, %entry
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call, %entry ], [ %call7, %for.inc ], !dbg !6464
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !6443, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6444, metadata !DIExpression(DW_OP_deref)), !dbg !6461
  %call1 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !6465
  %tobool = icmp eq i8 %call1, 0, !dbg !6465
  br i1 %tobool, label %for.body, label %for.end, !dbg !6463

for.body:                                         ; preds = %for.cond
  %stmt2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p.0, i64 0, i32 2, i32 0, !dbg !6466
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt2, align 8, !dbg !6466
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !6452, metadata !DIExpression()), !dbg !6467
  %call3 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %1) #7, !dbg !6468
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !6456, metadata !DIExpression()), !dbg !6467
  %call4 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %1) #7, !dbg !6469
  %cmp = icmp eq i32 %call4, 16, !dbg !6470
  br i1 %cmp, label %if.then, label %if.else, !dbg !6471

if.then:                                          ; preds = %for.body
  %call5 = call fastcc i32 @phi_arg_index_from_use(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !6472
  call void @llvm.dbg.value(metadata i32 %call5, metadata !6457, metadata !DIExpression()), !dbg !6473
  %conv = sext i32 %call5 to i64, !dbg !6474
  %call6 = call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %1, i64 %conv) #7, !dbg !6475
  call void @llvm.dbg.value(metadata %struct.edge_def* %call6, metadata !6460, metadata !DIExpression()), !dbg !6473
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call6, i64 0, i32 0, !dbg !6476
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6476
  call fastcc void @mark_use_interesting(%union.tree_node* %name, %union.gimple_statement_d* %1, %struct.basic_block_def* %2, i8 zeroext %insert_phi_p) #7, !dbg !6477
  br label %for.inc, !dbg !6478

if.else:                                          ; preds = %for.body
  call fastcc void @mark_use_interesting(%union.tree_node* %name, %union.gimple_statement_d* %1, %struct.basic_block_def* %call3, i8 zeroext %insert_phi_p) #7, !dbg !6479
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6444, metadata !DIExpression(DW_OP_deref)), !dbg !6461
  %call7 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !6465
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call7, metadata !6443, metadata !DIExpression()), !dbg !6461
  br label %for.cond, !dbg !6465, !llvm.loop !6481

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !6483
  ret void, !dbg !6483
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_def_interesting(%union.tree_node* %var, %union.gimple_statement_d* %stmt, %struct.basic_block_def* %bb, i8 zeroext %insert_phi_p) unnamed_addr #5 !dbg !6484 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6488, metadata !DIExpression()), !dbg !6500
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6489, metadata !DIExpression()), !dbg !6500
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6490, metadata !DIExpression()), !dbg !6500
  call void @llvm.dbg.value(metadata i8 %insert_phi_p, metadata !6491, metadata !DIExpression()), !dbg !6500
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !6501
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6501
  %1 = load i32, i32* %index, align 8, !dbg !6501
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !6501
  %tobool = icmp eq i32 %call, 0, !dbg !6501
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6501

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6501
  br label %cond.end, !dbg !6501

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @set_register_defs(%union.gimple_statement_d* %stmt, i8 zeroext 1) #7, !dbg !6502
  %tobool1 = icmp eq i8 %insert_phi_p, 0, !dbg !6503
  br i1 %tobool1, label %if.end26, label %if.then, !dbg !6504

if.then:                                          ; preds = %cond.end
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6505
  %cmp = icmp eq i32 %call2, 16, !dbg !6506
  %conv3 = zext i1 %cmp to i8, !dbg !6505
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !6492, metadata !DIExpression()), !dbg !6507
  tail call fastcc void @set_def_block(%union.tree_node* %var, %struct.basic_block_def* %bb, i8 zeroext %conv3) #7, !dbg !6508
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6509
  %bf.load = load i64, i64* %2, align 8, !dbg !6509
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6510
  %cmp4 = icmp eq i64 %bf.cast1, 141, !dbg !6510
  br i1 %cmp4, label %land.lhs.true, label %if.end26, !dbg !6511

land.lhs.true:                                    ; preds = %if.then
  %call6 = tail call fastcc zeroext i8 @is_new_name(%union.tree_node* %var) #7, !dbg !6512
  %tobool8 = icmp eq i8 %call6, 0, !dbg !6512
  br i1 %tobool8, label %if.end26, label %if.then9, !dbg !6513

if.then9:                                         ; preds = %land.lhs.true
  %3 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6514
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8, !dbg !6514
  %4 = bitcast i32* %i to i8*, !dbg !6515
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8, !dbg !6515
  %call10 = tail call fastcc %struct.bitmap_head_def* @names_replaced_by(%union.tree_node* %var) #7, !dbg !6516
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call10, metadata !6499, metadata !DIExpression()), !dbg !6517
  %tobool11 = icmp eq %struct.bitmap_head_def* %call10, null, !dbg !6518
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !6520

if.then12:                                        ; preds = %if.then9
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6495, metadata !DIExpression(DW_OP_deref)), !dbg !6517
  call void @llvm.dbg.value(metadata i32* %i, metadata !6498, metadata !DIExpression(DW_OP_deref)), !dbg !6517
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %call10, i32 0, i32* nonnull %i) #7, !dbg !6521
  br label %for.cond, !dbg !6521

for.cond:                                         ; preds = %cond.end22, %if.then12
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6495, metadata !DIExpression(DW_OP_deref)), !dbg !6517
  call void @llvm.dbg.value(metadata i32* %i, metadata !6498, metadata !DIExpression(DW_OP_deref)), !dbg !6517
  %call13 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6523
  %tobool14 = icmp eq i8 %call13, 0, !dbg !6521
  br i1 %tobool14, label %if.end.loopexit, label %for.body, !dbg !6521

for.body:                                         ; preds = %for.cond
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6525
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 3, !dbg !6525
  %6 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !6525
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %6, i64 0, i32 2, !dbg !6525
  %7 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !6525
  %tobool15 = icmp eq %struct.VEC_tree_gc* %7, null, !dbg !6525
  br i1 %tobool15, label %cond.end22, label %cond.true16, !dbg !6525

cond.true16:                                      ; preds = %for.body
  %base20 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %7, i64 0, i32 0, !dbg !6525
  br label %cond.end22, !dbg !6525

cond.end22:                                       ; preds = %for.body, %cond.true16
  %cond23 = phi %struct.VEC_tree_base* [ %base20, %cond.true16 ], [ null, %for.body ], !dbg !6525
  %8 = load i32, i32* %i, align 4, !dbg !6525
  call void @llvm.dbg.value(metadata i32 %8, metadata !6498, metadata !DIExpression()), !dbg !6517
  %call24 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond23, i32 %8) #7, !dbg !6525
  call fastcc void @set_def_block(%union.tree_node* %call24, %struct.basic_block_def* %bb, i8 zeroext %conv3) #7, !dbg !6526
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6495, metadata !DIExpression(DW_OP_deref)), !dbg !6517
  call void @llvm.dbg.value(metadata i32* %i, metadata !6498, metadata !DIExpression(DW_OP_deref)), !dbg !6517
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6523
  br label %for.cond, !dbg !6523, !llvm.loop !6527

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !6529

if.end:                                           ; preds = %if.end.loopexit, %if.then9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8, !dbg !6529
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8, !dbg !6529
  br label %if.end26, !dbg !6530

if.end26:                                         ; preds = %land.lhs.true, %cond.end, %if.then, %if.end
  ret void, !dbg !6531
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !6532 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6537, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6538, metadata !DIExpression()), !dbg !6539
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6540
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6541
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !6542
  store i40* %imm_uses, i40** %0, align 8, !dbg !6542
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !6543
  %1 = bitcast i40* %next to i64*, !dbg !6543
  %2 = load i64, i64* %1, align 8, !dbg !6543
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6544
  store i64 %2, i64* %3, align 8, !dbg !6544
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6545
  %tobool = icmp eq i8 %call, 0, !dbg !6545
  br i1 %tobool, label %if.end, label %return, !dbg !6547

if.end:                                           ; preds = %entry
  %imm_use2 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6548
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use2, align 8, !dbg !6548
  br label %return, !dbg !6549

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !6539
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6550
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6551 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6557, metadata !DIExpression()), !dbg !6558
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6559
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6559
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6560
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !6560
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !6561
  %conv1 = zext i1 %cmp to i8, !dbg !6562
  ret i8 %conv1, !dbg !6563
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @phi_arg_index_from_use(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !6564 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !6568, metadata !DIExpression()), !dbg !6573
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 2, i32 0, !dbg !6574
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6574
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !6572, metadata !DIExpression()), !dbg !6573
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #7, !dbg !6575
  %cmp = icmp eq i32 %call, 16, !dbg !6575
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6575

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 544, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6575
  br label %cond.end, !dbg !6575

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !6569, metadata !DIExpression()), !dbg !6573
  %call1 = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %0, i32 0) #7, !dbg !6576
  call void @llvm.dbg.value(metadata %struct.phi_arg_d* %call1, metadata !6570, metadata !DIExpression()), !dbg !6573
  %sub.ptr.lhs.cast = ptrtoint %struct.ssa_use_operand_d* %use to i64, !dbg !6577
  %sub.ptr.rhs.cast = ptrtoint %struct.phi_arg_d* %call1 to i64, !dbg !6577
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6577
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 48, !dbg !6577
  call void @llvm.dbg.value(metadata i64 %sub.ptr.div, metadata !6571, metadata !DIExpression()), !dbg !6573
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !6578
  ret i32 %conv, !dbg !6579
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !6580 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6584, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i64 %i, metadata !6585, metadata !DIExpression()), !dbg !6586
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !6587
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 0, !dbg !6587
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6587
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6587
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6587

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !6587
  %preds2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call1, i64 0, i32 0, !dbg !6587
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds2, align 8, !dbg !6587
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !6587
  br label %cond.end, !dbg !6587

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6587
  %conv = trunc i64 %i to i32, !dbg !6587
  %call3 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %conv) #7, !dbg !6587
  ret %struct.edge_def* %call3, !dbg !6588
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @mark_use_interesting(%union.tree_node* %var, %union.gimple_statement_d* %stmt, %struct.basic_block_def* %bb, i8 zeroext %insert_phi_p) unnamed_addr #0 !dbg !6589 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6591, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6592, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6593, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.value(metadata i8 %insert_phi_p, metadata !6594, metadata !DIExpression()), !dbg !6599
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !6600
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !6595, metadata !DIExpression()), !dbg !6599
  tail call fastcc void @mark_block_for_update(%struct.basic_block_def* %call) #7, !dbg !6601
  tail call fastcc void @mark_block_for_update(%struct.basic_block_def* %bb) #7, !dbg !6602
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6603
  %cmp = icmp eq i32 %call1, 16, !dbg !6605
  br i1 %cmp, label %if.then, label %if.else, !dbg !6606

if.then:                                          ; preds = %entry
  tail call fastcc void @mark_phi_for_rewrite(%struct.basic_block_def* %call, %union.gimple_statement_d* %stmt) #7, !dbg !6607
  %tobool5.old = icmp eq i8 %insert_phi_p, 0, !dbg !6608
  br i1 %tobool5.old, label %cleanup.cont, label %if.then6, !dbg !6609

if.else:                                          ; preds = %entry
  tail call fastcc void @set_rewrite_uses(%union.gimple_statement_d* %stmt, i8 zeroext 1) #7, !dbg !6610
  %call2 = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt) #7, !dbg !6612
  %tobool = icmp eq i8 %call2, 0, !dbg !6612
  %tobool5 = icmp ne i8 %insert_phi_p, 0, !dbg !6608
  %or.cond = and i1 %tobool, %tobool5, !dbg !6614
  br i1 %or.cond, label %if.then6, label %cleanup.cont, !dbg !6614

if.then6:                                         ; preds = %if.then, %if.else
  %call7 = tail call fastcc %struct.def_blocks_d* @get_def_blocks_for(%union.tree_node* %var) #7, !dbg !6615
  call void @llvm.dbg.value(metadata %struct.def_blocks_d* %call7, metadata !6596, metadata !DIExpression()), !dbg !6616
  %def_blocks = getelementptr inbounds %struct.def_blocks_d, %struct.def_blocks_d* %call7, i64 0, i32 1, !dbg !6617
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def_blocks, align 8, !dbg !6617
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6619
  %1 = load i32, i32* %index, align 8, !dbg !6619
  %call8 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !6620
  %tobool9 = icmp eq i32 %call8, 0, !dbg !6620
  br i1 %tobool9, label %if.then10, label %cleanup.cont, !dbg !6621

if.then10:                                        ; preds = %if.then6
  tail call fastcc void @set_livein_block(%union.tree_node* %var, %struct.basic_block_def* %bb) #7, !dbg !6622
  br label %cleanup.cont, !dbg !6622

cleanup.cont:                                     ; preds = %if.then, %if.then6, %if.else, %if.then10
  ret void, !dbg !6623
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6624 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6628, metadata !DIExpression()), !dbg !6630
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6631
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6631
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !6629, metadata !DIExpression()), !dbg !6630
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !6632
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6632
  %2 = load i64, i64* %1, align 8, !dbg !6632
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6633
  store i64 %2, i64* %3, align 8, !dbg !6633
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6634
  %tobool = icmp eq i8 %call, 0, !dbg !6634
  br i1 %tobool, label %if.end, label %cleanup, !dbg !6636

if.end:                                           ; preds = %entry
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6637
  br label %cleanup, !dbg !6638

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !6630
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6639
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6640 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6642, metadata !DIExpression()), !dbg !6643
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !6644
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !6644
  ret %union.tree_node* %0, !dbg !6645
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @symbol_marked_for_renaming(%union.tree_node* %sym) unnamed_addr #0 !dbg !6646 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %sym, metadata !6648, metadata !DIExpression()), !dbg !6649
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6650
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 3, !dbg !6650
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !6650
  %syms_to_rename = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 9, !dbg !6650
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %syms_to_rename, align 8, !dbg !6650
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %sym, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6651
  %3 = load i32, i32* %uid, align 4, !dbg !6651
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !6652
  %conv = trunc i32 %call to i8, !dbg !6652
  ret i8 %conv, !dbg !6653
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6654 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6658, metadata !DIExpression()), !dbg !6661
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6659, metadata !DIExpression()), !dbg !6661
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6660, metadata !DIExpression()), !dbg !6661
  %0 = and i32 %flags, 7, !dbg !6662
  %1 = icmp eq i32 %0, 2, !dbg !6662
  br i1 %1, label %cond.end, label %cond.true, !dbg !6662

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 783, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6662
  br label %cond.end, !dbg !6662

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !6663
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6664
  store i32 3, i32* %iter_type, align 4, !dbg !6665
  %call = tail call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6666
  ret %union.tree_node** %call, !dbg !6667
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6668 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6672, metadata !DIExpression()), !dbg !6674
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6675
  %0 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !6675
  %tobool = icmp eq %struct.def_optype_d* %0, null, !dbg !6677
  br i1 %tobool, label %if.end, label %if.then, !dbg !6678

if.then:                                          ; preds = %entry
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %0, i64 0, i32 1, !dbg !6679
  %1 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !6679
  call void @llvm.dbg.value(metadata %union.tree_node** %1, metadata !6673, metadata !DIExpression()), !dbg !6674
  %2 = bitcast %struct.def_optype_d* %0 to i64*, !dbg !6681
  %3 = load i64, i64* %2, align 8, !dbg !6681
  %4 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !6682
  store i64 %3, i64* %4, align 8, !dbg !6682
  br label %cleanup, !dbg !6683

if.end:                                           ; preds = %entry
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6684
  store i8 1, i8* %done, align 8, !dbg !6685
  br label %cleanup, !dbg !6686

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ %1, %if.then ], [ null, %if.end ], !dbg !6674
  ret %union.tree_node** %retval.0, !dbg !6687
}

declare dso_local %struct.basic_block_def* @first_dom_son(i32, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @next_dom_son(i32, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @rewrite_enter_block(%struct.dom_walk_data* %walk_data, %struct.basic_block_def* %bb) #5 !dbg !6688 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp14 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !6690, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6691, metadata !DIExpression()), !dbg !6698
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6699
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6699
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6700
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !6700
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6702

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !6703
  %and = and i32 %2, 8, !dbg !6704
  %tobool1 = icmp eq i32 %and, 0, !dbg !6704
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6705

if.then:                                          ; preds = %land.lhs.true
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6706
  %3 = load i32, i32* %index, align 8, !dbg !6706
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.50, i64 0, i64 0), i32 %3) #6, !dbg !6707
  br label %if.end, !dbg !6707

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call2 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull @block_defs_stack, %union.tree_node* null) #7, !dbg !6708
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6709
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !6709
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #6, !dbg !6709
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !6709
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !6709
  br label %for.cond, !dbg !6710

for.cond:                                         ; preds = %cond.end, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6693, metadata !DIExpression(DW_OP_deref)), !dbg !6698
  %call3 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6711
  %tobool4 = icmp eq i8 %call3, 0, !dbg !6712
  br i1 %tobool4, label %for.body, label %for.end, !dbg !6713

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6693, metadata !DIExpression(DW_OP_deref)), !dbg !6698
  %call5 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6714
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !6692, metadata !DIExpression()), !dbg !6698
  %call6 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call5) #7, !dbg !6715
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !6694, metadata !DIExpression()), !dbg !6716
  %call7 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call6) #6, !dbg !6717
  %tobool8 = icmp eq i8 %call7, 0, !dbg !6717
  br i1 %tobool8, label %cond.true, label %cond.end, !dbg !6717

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 1404, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6717
  br label %cond.end, !dbg !6717

cond.end:                                         ; preds = %for.body, %cond.true
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6718
  %5 = bitcast i32* %var to %union.tree_node**, !dbg !6718
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !6718
  call fastcc void @register_new_def(%union.tree_node* %call6, %union.tree_node* %6) #7, !dbg !6719
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6693, metadata !DIExpression(DW_OP_deref)), !dbg !6698
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !6720
  br label %for.cond, !dbg !6721, !llvm.loop !6722

for.end:                                          ; preds = %for.cond
  %7 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @interesting_blocks, align 8, !dbg !6724
  %index9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6724
  %8 = load i32, i32* %index9, align 8, !dbg !6724
  %div = lshr i32 %8, 6, !dbg !6724
  %idxprom = zext i32 %div to i64, !dbg !6724
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %7, i64 0, i32 3, i64 %idxprom, !dbg !6724
  %9 = load i64, i64* %arrayidx, align 8, !dbg !6724
  %rem = and i32 %8, 63, !dbg !6724
  %sh_prom = zext i32 %rem to i64, !dbg !6724
  %10 = shl i64 1, %sh_prom, !dbg !6724
  %11 = and i64 %9, %10, !dbg !6724
  %tobool12 = icmp eq i64 %11, 0, !dbg !6724
  br i1 %tobool12, label %if.end22, label %if.then13, !dbg !6726

if.then13:                                        ; preds = %for.end
  %12 = bitcast %struct.gimple_stmt_iterator* %tmp14 to i8*, !dbg !6727
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8, !dbg !6727
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp14, %struct.basic_block_def* %bb) #7, !dbg !6727
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %12, i64 24, i1 false), !dbg !6727
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8, !dbg !6727
  br label %for.cond15, !dbg !6729

for.cond15:                                       ; preds = %for.body19, %if.then13
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6693, metadata !DIExpression(DW_OP_deref)), !dbg !6698
  %call16 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6730
  %tobool17 = icmp eq i8 %call16, 0, !dbg !6732
  br i1 %tobool17, label %for.body19, label %if.end22.loopexit, !dbg !6733

for.body19:                                       ; preds = %for.cond15
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6693, metadata !DIExpression(DW_OP_deref)), !dbg !6698
  call fastcc void @rewrite_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6734
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6693, metadata !DIExpression(DW_OP_deref)), !dbg !6698
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !6735
  br label %for.cond15, !dbg !6736, !llvm.loop !6737

if.end22.loopexit:                                ; preds = %for.cond15
  br label %if.end22, !dbg !6739

if.end22:                                         ; preds = %if.end22.loopexit, %for.end
  call fastcc void @rewrite_add_phi_arguments(%struct.basic_block_def* %bb) #7, !dbg !6739
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6740
  ret void, !dbg !6740
}

; Function Attrs: nounwind uwtable
define internal void @rewrite_leave_block(%struct.dom_walk_data* %walk_data, %struct.basic_block_def* %bb) #5 !dbg !6741 {
entry:
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !6743, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6744, metadata !DIExpression()), !dbg !6749
  br label %while.cond, !dbg !6750

while.cond:                                       ; preds = %cleanup, %entry
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !6751
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6751
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #7, !dbg !6751
  %cmp = icmp eq i32 %call, 0, !dbg !6752
  br i1 %cmp, label %while.end, label %while.body, !dbg !6750

while.body:                                       ; preds = %while.cond
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !6753
  %base3 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !6753
  %call7 = tail call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base3) #7, !dbg !6753
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !6745, metadata !DIExpression()), !dbg !6754
  %cmp8 = icmp eq %union.tree_node* %call7, null, !dbg !6755
  br i1 %cmp8, label %cleanup, label %if.end, !dbg !6757

if.end:                                           ; preds = %while.body
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6758
  %bf.load = load i64, i64* %2, align 8, !dbg !6758
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6760
  %cmp10 = icmp eq i64 %bf.cast1, 141, !dbg !6760
  br i1 %cmp10, label %if.then11, label %if.end24, !dbg !6761

if.then11:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !6747, metadata !DIExpression()), !dbg !6754
  %var12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6762
  %3 = bitcast i32* %var12 to %union.tree_node**, !dbg !6762
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !6762
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6748, metadata !DIExpression()), !dbg !6754
  %call13 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %4) #6, !dbg !6764
  %tobool14 = icmp eq i8 %call13, 0, !dbg !6764
  br i1 %tobool14, label %if.then15, label %if.end24, !dbg !6766

if.then15:                                        ; preds = %if.then11
  %5 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !6767
  %base18 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %5, i64 0, i32 0, !dbg !6767
  %call22 = tail call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base18) #7, !dbg !6767
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !6748, metadata !DIExpression()), !dbg !6754
  br label %if.end24, !dbg !6768

if.end24:                                         ; preds = %if.then11, %if.end, %if.then15
  %saved_def.0 = phi %union.tree_node* [ %call7, %if.then15 ], [ %call7, %if.then11 ], [ null, %if.end ], !dbg !6769
  %var.1 = phi %union.tree_node* [ %call22, %if.then15 ], [ %4, %if.then11 ], [ %call7, %if.end ], !dbg !6769
  call void @llvm.dbg.value(metadata %union.tree_node* %var.1, metadata !6748, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata %union.tree_node* %saved_def.0, metadata !6747, metadata !DIExpression()), !dbg !6754
  tail call void @set_current_def(%union.tree_node* %var.1, %union.tree_node* %saved_def.0) #7, !dbg !6770
  br label %cleanup, !dbg !6771

cleanup:                                          ; preds = %while.body, %if.end24
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end24 ], [ false, %while.body ]
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !6772

while.end:                                        ; preds = %while.cond, %cleanup
  ret void, !dbg !6773
}

; Function Attrs: nounwind uwtable
define internal void @rewrite_update_enter_block(%struct.dom_walk_data* %walk_data, %struct.basic_block_def* %bb) #5 !dbg !6774 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp15 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp54 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !6776, metadata !DIExpression()), !dbg !6788
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6777, metadata !DIExpression()), !dbg !6788
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !6789
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6789
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6790
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6790
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6791
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6791
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6792
  %tobool = icmp eq %struct._IO_FILE* %3, null, !dbg !6792
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6794

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* @dump_flags, align 4, !dbg !6795
  %and = and i32 %4, 8, !dbg !6796
  %tobool1 = icmp eq i32 %and, 0, !dbg !6796
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6797

if.then:                                          ; preds = %land.lhs.true
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6798
  %5 = load i32, i32* %index, align 8, !dbg !6798
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.52, i64 0, i64 0), i32 %5) #6, !dbg !6799
  br label %if.end, !dbg !6799

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call2 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull @block_defs_stack, %union.tree_node* null) #7, !dbg !6800
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !6801
  %index3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6803
  %7 = load i32, i32* %index3, align 8, !dbg !6803
  %call4 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %7) #6, !dbg !6804
  %tobool5 = icmp eq i32 %call4, 0, !dbg !6804
  br i1 %tobool5, label %cleanup64, label %if.end7, !dbg !6805

if.end7:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i8 0, metadata !6780, metadata !DIExpression()), !dbg !6788
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6806
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !6806
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !6806
  %call8 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !6806
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6806
  %10 = extractvalue { i32, %struct.VEC_edge_gc** } %call8, 0, !dbg !6806
  store i32 %10, i32* %9, align 8, !dbg !6806
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6806
  %12 = extractvalue { i32, %struct.VEC_edge_gc** } %call8, 1, !dbg !6806
  store %struct.VEC_edge_gc** %12, %struct.VEC_edge_gc*** %11, align 8, !dbg !6806
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !6806
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !6806
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6808
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6808
  br label %for.cond, !dbg !6806

for.cond:                                         ; preds = %for.inc, %if.end7
  %15 = load i32, i32* %13, align 8, !dbg !6810
  %16 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %14, align 8, !dbg !6810
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6778, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  %call9 = call fastcc zeroext i8 @ei_cond(i32 %15, %struct.VEC_edge_gc** %16, %struct.edge_def** nonnull %e) #7, !dbg !6810
  %tobool10 = icmp eq i8 %call9, 0, !dbg !6806
  br i1 %tobool10, label %for.end, label %for.body, !dbg !6806

for.body:                                         ; preds = %for.cond
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6811
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !6778, metadata !DIExpression()), !dbg !6788
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i64 0, i32 7, !dbg !6813
  %18 = load i32, i32* %flags, align 8, !dbg !6813
  %and11 = and i32 %18, 2, !dbg !6814
  %tobool12 = icmp eq i32 %and11, 0, !dbg !6814
  br i1 %tobool12, label %for.inc, label %for.end, !dbg !6815

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6779, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6810
  br label %for.cond, !dbg !6810, !llvm.loop !6816

for.end:                                          ; preds = %for.body, %for.cond
  %is_abnormal_phi.0 = phi i1 [ true, %for.cond ], [ false, %for.body ]
  %19 = bitcast %struct.gimple_stmt_iterator* %tmp15 to i8*, !dbg !6818
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8, !dbg !6818
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp15, %struct.basic_block_def* %bb) #6, !dbg !6818
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %19, i64 24, i1 false), !dbg !6818
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8, !dbg !6818
  br i1 %is_abnormal_phi.0, label %for.end.split.us, label %for.end.for.end.split_crit_edge, !dbg !6819

for.end.for.end.split_crit_edge:                  ; preds = %for.end
  br label %for.cond16, !dbg !6819

for.end.split.us:                                 ; preds = %for.end
  br label %for.cond16.us, !dbg !6819

for.cond16.us:                                    ; preds = %cleanup.us, %for.end.split.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6781, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  %call17.us = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6820
  %tobool18.us = icmp eq i8 %call17.us, 0, !dbg !6821
  br i1 %tobool18.us, label %for.body19.us, label %for.end45.us-lcssa.us, !dbg !6822

for.body19.us:                                    ; preds = %for.cond16.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6781, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  %call20.us = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6823
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call20.us, metadata !6787, metadata !DIExpression()), !dbg !6824
  %call21.us = call fastcc zeroext i8 @register_defs_p(%union.gimple_statement_d* %call20.us) #7, !dbg !6825
  %tobool22.us = icmp eq i8 %call21.us, 0, !dbg !6825
  br i1 %tobool22.us, label %cleanup.us, label %if.end24.us, !dbg !6827

if.end24.us:                                      ; preds = %for.body19.us
  %call25.us = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call20.us) #7, !dbg !6828
  call void @llvm.dbg.value(metadata %union.tree_node* %call25.us, metadata !6782, metadata !DIExpression()), !dbg !6824
  %var.us = getelementptr inbounds %union.tree_node, %union.tree_node* %call25.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6829
  %20 = bitcast i32* %var.us to %union.tree_node**, !dbg !6829
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !6829
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !6786, metadata !DIExpression()), !dbg !6824
  %call26.us = call fastcc zeroext i8 @symbol_marked_for_renaming(%union.tree_node* %21) #7, !dbg !6830
  %tobool27.us = icmp eq i8 %call26.us, 0, !dbg !6830
  br i1 %tobool27.us, label %if.else.us, label %if.then28.us, !dbg !6832

if.then28.us:                                     ; preds = %if.end24.us
  call fastcc void @register_new_update_single(%union.tree_node* %call25.us, %union.tree_node* %21) #7, !dbg !6833
  br label %if.end38.us, !dbg !6833

if.else.us:                                       ; preds = %if.end24.us
  %call29.us = call fastcc zeroext i8 @is_new_name(%union.tree_node* %call25.us) #7, !dbg !6834
  %tobool30.us = icmp eq i8 %call29.us, 0, !dbg !6834
  br i1 %tobool30.us, label %if.end33.us, label %if.then31.us, !dbg !6837

if.then31.us:                                     ; preds = %if.else.us
  %call32.us = call fastcc %struct.bitmap_head_def* @names_replaced_by(%union.tree_node* %call25.us) #7, !dbg !6838
  call fastcc void @register_new_update_set(%union.tree_node* %call25.us, %struct.bitmap_head_def* %call32.us) #7, !dbg !6839
  br label %if.end33.us, !dbg !6839

if.end33.us:                                      ; preds = %if.then31.us, %if.else.us
  %call34.us = call fastcc zeroext i8 @is_old_name(%union.tree_node* %call25.us) #7, !dbg !6840
  %tobool35.us = icmp eq i8 %call34.us, 0, !dbg !6840
  br i1 %tobool35.us, label %if.end38.us, label %if.then36.us, !dbg !6842

if.then36.us:                                     ; preds = %if.end33.us
  call fastcc void @register_new_update_single(%union.tree_node* %call25.us, %union.tree_node* %call25.us) #7, !dbg !6843
  br label %if.end38.us, !dbg !6843

if.end38.us:                                      ; preds = %if.then36.us, %if.end33.us, %if.then28.us
  br label %cleanup.us, !dbg !6844

cleanup.us:                                       ; preds = %if.end38.us, %for.body19.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6781, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !6845
  br label %for.cond16.us, !dbg !6846, !llvm.loop !6847

for.end45.us-lcssa.us:                            ; preds = %for.cond16.us
  br label %for.end45, !dbg !6849

for.cond16:                                       ; preds = %cleanup, %for.end.for.end.split_crit_edge
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6781, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  %call17 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6820
  %tobool18 = icmp eq i8 %call17, 0, !dbg !6821
  br i1 %tobool18, label %for.body19, label %for.end45.us-lcssa, !dbg !6822

for.body19:                                       ; preds = %for.cond16
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6781, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  %call20 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6823
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call20, metadata !6787, metadata !DIExpression()), !dbg !6824
  %call21 = call fastcc zeroext i8 @register_defs_p(%union.gimple_statement_d* %call20) #7, !dbg !6825
  %tobool22 = icmp eq i8 %call21, 0, !dbg !6825
  br i1 %tobool22, label %cleanup, label %if.end24, !dbg !6827

if.end24:                                         ; preds = %for.body19
  %call25 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call20) #7, !dbg !6828
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !6782, metadata !DIExpression()), !dbg !6824
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6829
  %22 = bitcast i32* %var to %union.tree_node**, !dbg !6829
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !6829
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !6786, metadata !DIExpression()), !dbg !6824
  %call26 = call fastcc zeroext i8 @symbol_marked_for_renaming(%union.tree_node* %23) #7, !dbg !6830
  %tobool27 = icmp eq i8 %call26, 0, !dbg !6830
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !6832

if.then28:                                        ; preds = %if.end24
  call fastcc void @register_new_update_single(%union.tree_node* %call25, %union.tree_node* %23) #7, !dbg !6833
  br label %if.end38, !dbg !6833

if.else:                                          ; preds = %if.end24
  %call29 = call fastcc zeroext i8 @is_new_name(%union.tree_node* %call25) #7, !dbg !6834
  %tobool30 = icmp eq i8 %call29, 0, !dbg !6834
  br i1 %tobool30, label %if.end33, label %if.then31, !dbg !6837

if.then31:                                        ; preds = %if.else
  %call32 = call fastcc %struct.bitmap_head_def* @names_replaced_by(%union.tree_node* %call25) #7, !dbg !6838
  call fastcc void @register_new_update_set(%union.tree_node* %call25, %struct.bitmap_head_def* %call32) #7, !dbg !6839
  br label %if.end33, !dbg !6839

if.end33:                                         ; preds = %if.else, %if.then31
  %call34 = call fastcc zeroext i8 @is_old_name(%union.tree_node* %call25) #7, !dbg !6840
  %tobool35 = icmp eq i8 %call34, 0, !dbg !6840
  br i1 %tobool35, label %if.end38, label %if.then36, !dbg !6842

if.then36:                                        ; preds = %if.end33
  call fastcc void @register_new_update_single(%union.tree_node* %call25, %union.tree_node* %call25) #7, !dbg !6843
  br label %if.end38, !dbg !6843

if.end38:                                         ; preds = %if.end33, %if.then36, %if.then28
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6851
  %bf.load = load i64, i64* %24, align 8, !dbg !6853
  %bf.set = or i64 %bf.load, 4194304, !dbg !6853
  store i64 %bf.set, i64* %24, align 8, !dbg !6853
  br label %cleanup, !dbg !6851

cleanup:                                          ; preds = %for.body19, %if.end38
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6781, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !6845
  br label %for.cond16, !dbg !6846, !llvm.loop !6847

for.end45.us-lcssa:                               ; preds = %for.cond16
  br label %for.end45, !dbg !6849

for.end45:                                        ; preds = %for.end45.us-lcssa.us, %for.end45.us-lcssa
  %25 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @interesting_blocks, align 8, !dbg !6849
  %26 = load i32, i32* %index3, align 8, !dbg !6849
  %div = lshr i32 %26, 6, !dbg !6849
  %idxprom = zext i32 %div to i64, !dbg !6849
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %25, i64 0, i32 3, i64 %idxprom, !dbg !6849
  %27 = load i64, i64* %arrayidx, align 8, !dbg !6849
  %rem = and i32 %26, 63, !dbg !6849
  %sh_prom = zext i32 %rem to i64, !dbg !6849
  %28 = shl i64 1, %sh_prom, !dbg !6849
  %29 = and i64 %27, %28, !dbg !6849
  %tobool49 = icmp eq i64 %29, 0, !dbg !6849
  br i1 %tobool49, label %if.end63, label %if.then50, !dbg !6854

if.then50:                                        ; preds = %for.end45
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !6855
  %call52 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %30, i32 %26) #6, !dbg !6855
  %tobool53 = icmp eq i32 %call52, 0, !dbg !6855
  br i1 %tobool53, label %cond.true, label %cond.end, !dbg !6855

cond.true:                                        ; preds = %if.then50
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2136, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6855
  br label %cond.end, !dbg !6855

cond.end:                                         ; preds = %if.then50, %cond.true
  %31 = bitcast %struct.gimple_stmt_iterator* %tmp54 to i8*, !dbg !6857
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8, !dbg !6857
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp54, %struct.basic_block_def* %bb) #7, !dbg !6857
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %31, i64 24, i1 false), !dbg !6857
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8, !dbg !6857
  br label %for.cond55, !dbg !6859

for.cond55:                                       ; preds = %for.body59, %cond.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6781, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  %call56 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6860
  %tobool57 = icmp eq i8 %call56, 0, !dbg !6862
  br i1 %tobool57, label %for.body59, label %if.end63.loopexit, !dbg !6863

for.body59:                                       ; preds = %for.cond55
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6781, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  %call60 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6864
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6781, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  call fastcc void @rewrite_update_stmt(%union.gimple_statement_d* %call60, %struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6865
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6781, metadata !DIExpression(DW_OP_deref)), !dbg !6788
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !6866
  br label %for.cond55, !dbg !6867, !llvm.loop !6868

if.end63.loopexit:                                ; preds = %for.cond55
  br label %if.end63, !dbg !6870

if.end63:                                         ; preds = %if.end63.loopexit, %for.end45
  call fastcc void @rewrite_update_phi_arguments(%struct.basic_block_def* %bb) #7, !dbg !6870
  br label %cleanup64, !dbg !6871

cleanup64:                                        ; preds = %if.end, %if.end63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6871
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6871
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6871
  ret void, !dbg !6871
}

; Function Attrs: nounwind uwtable
define internal void @rewrite_update_leave_block(%struct.dom_walk_data* %walk_data, %struct.basic_block_def* %bb) #5 !dbg !6872 {
entry:
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !6874, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6875, metadata !DIExpression()), !dbg !6879
  br label %while.cond, !dbg !6880

while.cond:                                       ; preds = %cleanup, %entry
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !6881
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6881
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #7, !dbg !6881
  %cmp = icmp eq i32 %call, 0, !dbg !6882
  br i1 %cmp, label %while.end, label %while.body, !dbg !6880

while.body:                                       ; preds = %while.cond
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !6883
  %base3 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !6883
  %call7 = tail call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base3) #7, !dbg !6883
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !6876, metadata !DIExpression()), !dbg !6884
  %cmp8 = icmp eq %union.tree_node* %call7, null, !dbg !6885
  br i1 %cmp8, label %cleanup, label %if.end, !dbg !6887

if.end:                                           ; preds = %while.body
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !6888
  %base11 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !6888
  %call15 = tail call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base11) #7, !dbg !6888
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !6878, metadata !DIExpression()), !dbg !6884
  tail call void @set_current_def(%union.tree_node* nonnull %call7, %union.tree_node* %call15) #7, !dbg !6889
  br label %cleanup, !dbg !6890

cleanup:                                          ; preds = %while.body, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %while.body ]
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !6891

while.end:                                        ; preds = %while.cond, %cleanup
  ret void, !dbg !6892
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6893 {
entry:
  call void @llvm.dbg.value(metadata i32 10, metadata !6897, metadata !DIExpression()), !dbg !6898
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 10) #6, !dbg !6899
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !6899
  ret %struct.VEC_tree_heap* %0, !dbg !6899
}

declare dso_local void @dump_dfa_stats(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !6900 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** @block_defs_stack, metadata !6905, metadata !DIExpression()), !dbg !6906
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !6907
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !6907
  br i1 %tobool, label %if.end, label %if.then, !dbg !6909

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !6909
  tail call void @free(i8* nonnull %1) #6, !dbg !6907
  br label %if.end, !dbg !6907

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !6909
  ret void, !dbg !6909
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !6910 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** @block_defs_stack, metadata !6914, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !6915, metadata !DIExpression()), !dbg !6916
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** nonnull @block_defs_stack, i32 1) #7, !dbg !6917
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !6917
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !6917
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6917

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6917
  br label %cond.end, !dbg !6917

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6917
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !6917
  ret %union.tree_node** %call1, !dbg !6917
}

; Function Attrs: nounwind uwtable
define internal fastcc void @register_new_def(%union.tree_node* %def, %union.tree_node* %sym) unnamed_addr #5 !dbg !6918 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !6920, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata %union.tree_node* %sym, metadata !6921, metadata !DIExpression()), !dbg !6923
  %call = tail call fastcc i32 @get_phi_state(%union.tree_node* %sym) #7, !dbg !6924
  %cmp = icmp eq i32 %call, 1, !dbg !6926
  br i1 %cmp, label %if.then, label %if.end, !dbg !6927

if.then:                                          ; preds = %entry
  tail call void @set_current_def(%union.tree_node* %sym, %union.tree_node* %def) #7, !dbg !6928
  br label %cleanup.cont, !dbg !6930

if.end:                                           ; preds = %entry
  %call1 = tail call %union.tree_node* @get_current_def(%union.tree_node* %sym) #7, !dbg !6931
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6922, metadata !DIExpression()), !dbg !6923
  %cond1 = icmp eq %union.tree_node* %call1, null, !dbg !6932
  br i1 %cond1, label %cond.false, label %land.lhs.true, !dbg !6932

land.lhs.true:                                    ; preds = %if.end
  %call2 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %sym) #6, !dbg !6934
  %tobool3 = icmp eq i8 %call2, 0, !dbg !6934
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !6935

if.then4:                                         ; preds = %land.lhs.true
  %call5 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull @block_defs_stack, %union.tree_node* %sym) #7, !dbg !6936
  br label %if.end6, !dbg !6936

if.end6:                                          ; preds = %land.lhs.true, %if.then4
  br label %cond.end, !dbg !6937

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !6937

cond.end:                                         ; preds = %if.end6, %cond.false
  %cond = phi %union.tree_node* [ %sym, %cond.false ], [ %call1, %if.end6 ], !dbg !6937
  %call8 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull @block_defs_stack, %union.tree_node* %cond) #7, !dbg !6937
  tail call void @set_current_def(%union.tree_node* %sym, %union.tree_node* %def) #7, !dbg !6938
  br label %cleanup.cont, !dbg !6939

cleanup.cont:                                     ; preds = %if.then, %cond.end
  ret void, !dbg !6939
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %si) unnamed_addr #5 !dbg !6940 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %si, metadata !6944, metadata !DIExpression()), !dbg !6964
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !6965
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !6965
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !6966
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !6948, metadata !DIExpression()), !dbg !6967
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_to_update, align 8, !dbg !6968
  %cmp = icmp eq %struct.bitmap_head_def* %1, null, !dbg !6968
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6968

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 1306, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6968
  br label %cond.end, !dbg !6968

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call fastcc zeroext i8 @rewrite_uses_p(%union.gimple_statement_d* %call) #7, !dbg !6969
  %tobool = icmp eq i8 %call1, 0, !dbg !6969
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6971

land.lhs.true:                                    ; preds = %cond.end
  %call2 = tail call fastcc zeroext i8 @register_defs_p(%union.gimple_statement_d* %call) #7, !dbg !6972
  %tobool3 = icmp eq i8 %call2, 0, !dbg !6972
  br i1 %tobool3, label %cleanup, label %if.end, !dbg !6973

if.end:                                           ; preds = %land.lhs.true, %cond.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6974
  %tobool4 = icmp eq %struct._IO_FILE* %2, null, !dbg !6974
  br i1 %tobool4, label %if.end10, label %land.lhs.true5, !dbg !6976

land.lhs.true5:                                   ; preds = %if.end
  %3 = load i32, i32* @dump_flags, align 4, !dbg !6977
  %and = and i32 %3, 8, !dbg !6978
  %tobool6 = icmp eq i32 %and, 0, !dbg !6978
  br i1 %tobool6, label %if.end10, label %if.then7, !dbg !6979

if.then7:                                         ; preds = %land.lhs.true5
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i64 0, i64 0)) #6, !dbg !6980
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6982
  tail call void @print_gimple_stmt(%struct._IO_FILE* %4, %union.gimple_statement_d* %call, i32 0, i32 2) #6, !dbg !6983
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6984
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6985
  br label %if.end10, !dbg !6986

if.end10:                                         ; preds = %land.lhs.true5, %if.end, %if.then7
  %call11 = tail call fastcc zeroext i8 @rewrite_uses_p(%union.gimple_statement_d* %call) #7, !dbg !6987
  %tobool12 = icmp eq i8 %call11, 0, !dbg !6987
  br i1 %tobool12, label %if.end25, label %if.then13, !dbg !6988

if.then13:                                        ; preds = %if.end10
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6947, metadata !DIExpression(DW_OP_deref)), !dbg !6967
  %call14 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call, i32 1) #7, !dbg !6989
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call14, metadata !6945, metadata !DIExpression()), !dbg !6967
  br label %for.cond, !dbg !6989

for.cond:                                         ; preds = %cond.end21, %if.then13
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call14, %if.then13 ], [ %call24, %cond.end21 ], !dbg !6990
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !6945, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6947, metadata !DIExpression(DW_OP_deref)), !dbg !6967
  %call15 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !6991
  %tobool16 = icmp eq i8 %call15, 0, !dbg !6991
  br i1 %tobool16, label %for.body, label %if.end25.loopexit, !dbg !6989

for.body:                                         ; preds = %for.cond
  %call17 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !6992
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !6949, metadata !DIExpression()), !dbg !6993
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6994
  %bf.load = load i64, i64* %6, align 8, !dbg !6994
  %bf.cast = and i64 %bf.load, 65535, !dbg !6994
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !6994
  %7 = load i32, i32* %arrayidx, align 4, !dbg !6994
  %cmp18 = icmp eq i32 %7, 3, !dbg !6994
  br i1 %cmp18, label %cond.end21, label %cond.true19, !dbg !6994

cond.true19:                                      ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 1322, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6994
  br label %cond.end21, !dbg !6994

cond.end21:                                       ; preds = %for.body, %cond.true19
  %call23 = call fastcc %union.tree_node* @get_reaching_def(%union.tree_node* %call17) #7, !dbg !6995
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %call23) #7, !dbg !6995
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6947, metadata !DIExpression(DW_OP_deref)), !dbg !6967
  %call24 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !6991
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call24, metadata !6945, metadata !DIExpression()), !dbg !6967
  br label %for.cond, !dbg !6991, !llvm.loop !6996

if.end25.loopexit:                                ; preds = %for.cond
  br label %if.end25, !dbg !6998

if.end25:                                         ; preds = %if.end25.loopexit, %if.end10
  %call26 = call fastcc zeroext i8 @register_defs_p(%union.gimple_statement_d* %call) #7, !dbg !6998
  %tobool27 = icmp eq i8 %call26, 0, !dbg !6998
  br i1 %tobool27, label %cleanup, label %if.then28, !dbg !6999

if.then28:                                        ; preds = %if.end25
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6947, metadata !DIExpression(DW_OP_deref)), !dbg !6967
  %call29 = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call, i32 2) #7, !dbg !7000
  call void @llvm.dbg.value(metadata %union.tree_node** %call29, metadata !6946, metadata !DIExpression()), !dbg !6967
  br label %for.cond30, !dbg !7000

for.cond30:                                       ; preds = %for.inc55, %if.then28
  %def_p.0 = phi %union.tree_node** [ %call29, %if.then28 ], [ %call56, %for.inc55 ], !dbg !7001
  call void @llvm.dbg.value(metadata %union.tree_node** %def_p.0, metadata !6946, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6947, metadata !DIExpression(DW_OP_deref)), !dbg !6967
  %call31 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7002
  %tobool32 = icmp eq i8 %call31, 0, !dbg !7002
  br i1 %tobool32, label %for.body34, label %cleanup.loopexit, !dbg !7000

for.body34:                                       ; preds = %for.cond30
  %call36 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def_p.0) #7, !dbg !7003
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !6954, metadata !DIExpression()), !dbg !7004
  %call37 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call36, %union.gimple_statement_d* %call) #7, !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !6959, metadata !DIExpression()), !dbg !7004
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7006
  %bf.load39 = load i64, i64* %8, align 8, !dbg !7006
  %bf.cast41 = and i64 %bf.load39, 65535, !dbg !7006
  %arrayidx43 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast41, !dbg !7006
  %9 = load i32, i32* %arrayidx43, align 4, !dbg !7006
  %cmp44 = icmp eq i32 %9, 3, !dbg !7006
  br i1 %cmp44, label %cond.end47, label %cond.true45, !dbg !7006

cond.true45:                                      ; preds = %for.body34
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 1333, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !7006
  br label %cond.end47, !dbg !7006

cond.end47:                                       ; preds = %for.body34, %cond.true45
  store %union.tree_node* %call37, %union.tree_node** %def_p.0, align 8, !dbg !7007
  %call49 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def_p.0) #7, !dbg !7008
  call fastcc void @register_new_def(%union.tree_node* %call49, %union.tree_node* %call36) #7, !dbg !7009
  %call50 = call %union.tree_node* @target_for_debug_bind(%union.tree_node* %call36) #6, !dbg !7010
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !6960, metadata !DIExpression()), !dbg !7004
  %tobool51 = icmp eq %union.tree_node* %call50, null, !dbg !7011
  br i1 %tobool51, label %for.inc55, label %if.then52, !dbg !7012

if.then52:                                        ; preds = %cond.end47
  %call53 = call %union.gimple_statement_d* @gimple_build_debug_bind_stat(%union.tree_node* nonnull %call50, %union.tree_node* %call37, %union.gimple_statement_d* %call) #6, !dbg !7013
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call53, metadata !6961, metadata !DIExpression()), !dbg !7014
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %si, %union.gimple_statement_d* %call53, i32 1) #6, !dbg !7015
  br label %for.inc55, !dbg !7016

for.inc55:                                        ; preds = %cond.end47, %if.then52
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6947, metadata !DIExpression(DW_OP_deref)), !dbg !6967
  %call56 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7002
  call void @llvm.dbg.value(metadata %union.tree_node** %call56, metadata !6946, metadata !DIExpression()), !dbg !6967
  br label %for.cond30, !dbg !7002, !llvm.loop !7017

cleanup.loopexit:                                 ; preds = %for.cond30
  br label %cleanup, !dbg !7019

cleanup:                                          ; preds = %cleanup.loopexit, %if.end25, %land.lhs.true
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !7019
  ret void, !dbg !7019
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_add_phi_arguments(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7020 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp2 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7022, metadata !DIExpression()), !dbg !7035
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !7036
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7036
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7037
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7037
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7038
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7038
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7038
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !7038
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7038
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !7038
  store i32 %4, i32* %3, align 8, !dbg !7038
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7038
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !7038
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !7038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !7038
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7038
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7039
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7039
  %9 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !7040
  %10 = bitcast %struct.gimple_stmt_iterator* %tmp2 to i8*, !dbg !7041
  br label %for.cond, !dbg !7038

for.cond:                                         ; preds = %for.end, %entry
  %11 = load i32, i32* %7, align 8, !dbg !7042
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !7042
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7023, metadata !DIExpression(DW_OP_deref)), !dbg !7035
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %11, %struct.VEC_edge_gc** %12, %struct.edge_def** nonnull %e) #7, !dbg !7042
  %tobool = icmp eq i8 %call1, 0, !dbg !7038
  br i1 %tobool, label %for.end13, label %for.body, !dbg !7038

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !7043
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8, !dbg !7044
  %13 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7045
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !7023, metadata !DIExpression()), !dbg !7035
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i64 0, i32 1, !dbg !7046
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7046
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp2, %struct.basic_block_def* %14) #6, !dbg !7044
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !7044
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8, !dbg !7044
  br label %for.cond3, !dbg !7047

for.cond3:                                        ; preds = %for.body6, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7029, metadata !DIExpression(DW_OP_deref)), !dbg !7040
  %call4 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7048
  %tobool5 = icmp eq i8 %call4, 0, !dbg !7049
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !7050

for.body6:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7029, metadata !DIExpression(DW_OP_deref)), !dbg !7040
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7051
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !7025, metadata !DIExpression()), !dbg !7040
  %call8 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call7) #7, !dbg !7052
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7052
  %15 = bitcast i32* %var to %union.tree_node**, !dbg !7052
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !7052
  %call9 = call fastcc %union.tree_node* @get_reaching_def(%union.tree_node* %16) #7, !dbg !7053
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !7030, metadata !DIExpression()), !dbg !7054
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7055
  %17 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !7055
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %17, align 8, !dbg !7055
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %18, metadata !7034, metadata !DIExpression()), !dbg !7054
  %19 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7056
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !7023, metadata !DIExpression()), !dbg !7035
  %call11 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %18) #7, !dbg !7057
  call void @add_phi_arg(%union.gimple_statement_d* %call7, %union.tree_node* %call9, %struct.edge_def* %19, i32 %call11) #6, !dbg !7058
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7029, metadata !DIExpression(DW_OP_deref)), !dbg !7040
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !7059
  br label %for.cond3, !dbg !7060, !llvm.loop !7061

for.end:                                          ; preds = %for.cond3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !7063
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7024, metadata !DIExpression(DW_OP_deref)), !dbg !7035
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7042
  br label %for.cond, !dbg !7042, !llvm.loop !7064

for.end13:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7066
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7066
  ret void, !dbg !7066
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7067 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** @block_defs_stack, metadata !7071, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !7072, metadata !DIExpression()), !dbg !7074
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !7075
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !7075
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7075

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !7075
  br label %cond.end, !dbg !7075

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7075
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 %alloc_) #7, !dbg !7075
  %tobool1 = icmp eq i32 %call, 0, !dbg !7075
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7075
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7073, metadata !DIExpression()), !dbg !7074
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7075

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_tree_heap** @block_defs_stack to i8**), align 8, !dbg !7076
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 %alloc_) #6, !dbg !7076
  store i8* %call3, i8** bitcast (%struct.VEC_tree_heap** @block_defs_stack to i8**), align 8, !dbg !7076
  br label %if.end, !dbg !7076

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7075
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !7078 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !7083, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !7084, metadata !DIExpression()), !dbg !7086
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !7087
  %0 = load i32, i32* %num1, align 8, !dbg !7087
  %inc = add i32 %0, 1, !dbg !7087
  store i32 %inc, i32* %num1, align 8, !dbg !7087
  %idxprom = zext i32 %0 to i64, !dbg !7087
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7087
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !7085, metadata !DIExpression()), !dbg !7086
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !7087
  ret %union.tree_node** %arrayidx, !dbg !7087
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7088 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !7092, metadata !DIExpression()), !dbg !7094
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !7093, metadata !DIExpression()), !dbg !7094
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !7095
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7095

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !7095
  %0 = load i32, i32* %alloc, align 4, !dbg !7095
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !7095
  %1 = load i32, i32* %num, align 8, !dbg !7095
  %sub = sub i32 %0, %1, !dbg !7095
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !7095
  br label %cond.end, !dbg !7095

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !7095
  br label %cond.end, !dbg !7095

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !7095
  ret i32 %cond, !dbg !7095
}

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !7096 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !7100, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !7101, metadata !DIExpression()), !dbg !7102
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #7, !dbg !7103
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !7104
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !7104
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !7105
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #7, !dbg !7106
  ret void, !dbg !7107
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_reaching_def(%union.tree_node* %var) unnamed_addr #5 !dbg !7108 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !7110, metadata !DIExpression()), !dbg !7115
  %call = tail call %union.tree_node* @get_current_def(%union.tree_node* %var) #7, !dbg !7116
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7111, metadata !DIExpression()), !dbg !7115
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !7117
  br i1 %cmp, label %if.then, label %if.end, !dbg !7118

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7119
  %bf.load = load i64, i64* %0, align 8, !dbg !7119
  %bf.cast = and i64 %bf.load, 65535, !dbg !7119
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7119
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7119
  %cmp1 = icmp eq i32 %1, 3, !dbg !7119
  br i1 %cmp1, label %cond.end, label %cond.false, !dbg !7119

cond.false:                                       ; preds = %if.then
  %var2 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7120
  %2 = bitcast i32* %var2 to %union.tree_node**, !dbg !7120
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !7120
  br label %cond.end, !dbg !7119

cond.end:                                         ; preds = %if.then, %cond.false
  %cond = phi %union.tree_node* [ %3, %cond.false ], [ %var, %if.then ], !dbg !7119
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !7112, metadata !DIExpression()), !dbg !7121
  %call3 = tail call fastcc %union.tree_node* @get_default_def_for(%union.tree_node* %cond) #7, !dbg !7122
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !7111, metadata !DIExpression()), !dbg !7115
  tail call void @set_current_def(%union.tree_node* %var, %union.tree_node* %call3) #7, !dbg !7123
  br label %if.end, !dbg !7124

if.end:                                           ; preds = %cond.end, %entry
  %currdef.0 = phi %union.tree_node* [ %call3, %cond.end ], [ %call, %entry ], !dbg !7115
  call void @llvm.dbg.value(metadata %union.tree_node* %currdef.0, metadata !7111, metadata !DIExpression()), !dbg !7115
  ret %union.tree_node* %currdef.0, !dbg !7125
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !7126 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !7130, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7131, metadata !DIExpression()), !dbg !7132
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7133
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !7134
  ret %union.tree_node* %call, !dbg !7135
}

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !7136 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7140, metadata !DIExpression()), !dbg !7141
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7142
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7142
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !7144
  br i1 %cmp, label %return, label %if.end, !dbg !7145

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !7146
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7146
  %2 = load i64, i64* %1, align 8, !dbg !7146
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !7147
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !7148
  store i64 %2, i64* %3, align 8, !dbg !7148
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !7149
  %5 = load i64, i64* %4, align 8, !dbg !7149
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !7150
  %7 = load i64*, i64** %6, align 8, !dbg !7150
  store i64 %5, i64* %7, align 8, !dbg !7151
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7152
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !7153
  br label %return, !dbg !7154

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !7154
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !7155 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7159, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !7160, metadata !DIExpression()), !dbg !7162
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !7163
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7165

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7166
  %bf.load = load i64, i64* %0, align 8, !dbg !7166
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7167
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !7167
  br i1 %cmp, label %if.else, label %if.then, !dbg !7168

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7169
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7170
  br label %if.end, !dbg !7171

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7172
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !7172
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !7161, metadata !DIExpression()), !dbg !7162
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #7, !dbg !7174
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7175
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !7176 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7180, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !7181, metadata !DIExpression()), !dbg !7182
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7183
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7184
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !7185
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7185
  %1 = load i64, i64* %0, align 8, !dbg !7185
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !7186
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !7187
  store i64 %1, i64* %2, align 8, !dbg !7187
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !7188
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !7189
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !7190
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !7191
  ret void, !dbg !7192
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_default_def_for(%union.tree_node* %sym) unnamed_addr #0 !dbg !7193 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %sym, metadata !7195, metadata !DIExpression()), !dbg !7197
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7198
  %call = tail call %union.tree_node* @gimple_default_def(%struct.function* %0, %union.tree_node* %sym) #6, !dbg !7199
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7196, metadata !DIExpression()), !dbg !7197
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !7200
  br i1 %cmp, label %if.then, label %if.end, !dbg !7202

if.then:                                          ; preds = %entry
  %call1 = tail call %union.gimple_statement_d* @gimple_build_nop() #6, !dbg !7203
  %call2 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %sym, %union.gimple_statement_d* %call1) #7, !dbg !7205
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7196, metadata !DIExpression()), !dbg !7197
  tail call void @set_default_def(%union.tree_node* %sym, %union.tree_node* %call2) #6, !dbg !7206
  br label %if.end, !dbg !7207

if.end:                                           ; preds = %if.then, %entry
  %ddef.0 = phi %union.tree_node* [ %call2, %if.then ], [ %call, %entry ], !dbg !7197
  call void @llvm.dbg.value(metadata %union.tree_node* %ddef.0, metadata !7196, metadata !DIExpression()), !dbg !7197
  ret %union.tree_node* %ddef.0, !dbg !7208
}

declare dso_local %union.tree_node* @gimple_default_def(%struct.function*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_nop() local_unnamed_addr #2

declare dso_local void @set_default_def(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7209 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7213, metadata !DIExpression()), !dbg !7214
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !7215
  %0 = load i32, i32* %location, align 8, !dbg !7215
  ret i32 %0, !dbg !7216
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !7217 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !7221, metadata !DIExpression()), !dbg !7223
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !7224
  %0 = load i32, i32* %num1, align 8, !dbg !7224
  %dec = add i32 %0, -1, !dbg !7224
  store i32 %dec, i32* %num1, align 8, !dbg !7224
  %idxprom = zext i32 %dec to i64, !dbg !7224
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7224
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7224
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7222, metadata !DIExpression()), !dbg !7223
  ret %union.tree_node* %1, !dbg !7224
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @register_new_update_single(%union.tree_node* %new_name, %union.tree_node* %old_name) unnamed_addr #0 !dbg !7225 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %new_name, metadata !7227, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata %union.tree_node* %old_name, metadata !7228, metadata !DIExpression()), !dbg !7230
  %call = tail call %union.tree_node* @get_current_def(%union.tree_node* %old_name) #7, !dbg !7231
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7229, metadata !DIExpression()), !dbg !7230
  %call1 = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** nonnull @block_defs_stack, i32 2) #7, !dbg !7232
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !7233
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !7233
  %call2 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* %call) #7, !dbg !7233
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** @block_defs_stack, align 8, !dbg !7234
  %base5 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !7234
  %call9 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base5, %union.tree_node* %old_name) #7, !dbg !7234
  tail call void @set_current_def(%union.tree_node* %old_name, %union.tree_node* %new_name) #7, !dbg !7235
  ret void, !dbg !7236
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @register_new_update_set(%union.tree_node* %new_name, %struct.bitmap_head_def* %old_names) unnamed_addr #0 !dbg !7237 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %new_name, metadata !7241, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %old_names, metadata !7242, metadata !DIExpression()), !dbg !7245
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !7246
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7246
  %1 = bitcast i32* %i to i8*, !dbg !7247
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !7247
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7243, metadata !DIExpression(DW_OP_deref)), !dbg !7245
  call void @llvm.dbg.value(metadata i32* %i, metadata !7244, metadata !DIExpression(DW_OP_deref)), !dbg !7245
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %old_names, i32 0, i32* nonnull %i) #7, !dbg !7248
  br label %for.cond, !dbg !7248

for.cond:                                         ; preds = %cond.end, %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7243, metadata !DIExpression(DW_OP_deref)), !dbg !7245
  call void @llvm.dbg.value(metadata i32* %i, metadata !7244, metadata !DIExpression(DW_OP_deref)), !dbg !7245
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !7250
  %tobool = icmp eq i8 %call, 0, !dbg !7248
  br i1 %tobool, label %for.end, label %for.body, !dbg !7248

for.body:                                         ; preds = %for.cond
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7252
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 3, !dbg !7252
  %3 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !7252
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %3, i64 0, i32 2, !dbg !7252
  %4 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !7252
  %tobool1 = icmp eq %struct.VEC_tree_gc* %4, null, !dbg !7252
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !7252

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %4, i64 0, i32 0, !dbg !7252
  br label %cond.end, !dbg !7252

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !7252
  %5 = load i32, i32* %i, align 4, !dbg !7252
  call void @llvm.dbg.value(metadata i32 %5, metadata !7244, metadata !DIExpression()), !dbg !7245
  %call5 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %5) #7, !dbg !7252
  call fastcc void @register_new_update_single(%union.tree_node* %new_name, %union.tree_node* %call5) #7, !dbg !7253
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7243, metadata !DIExpression(DW_OP_deref)), !dbg !7245
  call void @llvm.dbg.value(metadata i32* %i, metadata !7244, metadata !DIExpression(DW_OP_deref)), !dbg !7245
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !7250
  br label %for.cond, !dbg !7250, !llvm.loop !7254

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !7256
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !7256
  ret void, !dbg !7256
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_update_stmt(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) unnamed_addr #5 !dbg !7257 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7261, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7262, metadata !DIExpression()), !dbg !7272
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !7273
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !7273
  %call = tail call fastcc zeroext i8 @rewrite_uses_p(%union.gimple_statement_d* %stmt) #7, !dbg !7274
  %tobool = icmp eq i8 %call, 0, !dbg !7274
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7276

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @register_defs_p(%union.gimple_statement_d* %stmt) #7, !dbg !7277
  %tobool2 = icmp eq i8 %call1, 0, !dbg !7277
  br i1 %tobool2, label %cleanup, label %if.end, !dbg !7278

if.end:                                           ; preds = %land.lhs.true, %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7279
  %tobool3 = icmp eq %struct._IO_FILE* %1, null, !dbg !7279
  br i1 %tobool3, label %if.end9, label %land.lhs.true4, !dbg !7281

land.lhs.true4:                                   ; preds = %if.end
  %2 = load i32, i32* @dump_flags, align 4, !dbg !7282
  %and = and i32 %2, 8, !dbg !7283
  %tobool5 = icmp eq i32 %and, 0, !dbg !7283
  br i1 %tobool5, label %if.end9, label %if.then6, !dbg !7284

if.then6:                                         ; preds = %land.lhs.true4
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.53, i64 0, i64 0)) #6, !dbg !7285
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7287
  tail call void @print_gimple_stmt(%struct._IO_FILE* %3, %union.gimple_statement_d* %stmt, i32 0, i32 2) #6, !dbg !7288
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7289
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7290
  br label %if.end9, !dbg !7291

if.end9:                                          ; preds = %land.lhs.true4, %if.end, %if.then6
  %call10 = tail call fastcc zeroext i8 @rewrite_uses_p(%union.gimple_statement_d* %stmt) #7, !dbg !7292
  %tobool11 = icmp eq i8 %call10, 0, !dbg !7292
  br i1 %tobool11, label %if.end37, label %if.then12, !dbg !7293

if.then12:                                        ; preds = %if.end9
  %call13 = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt) #7, !dbg !7294
  %tobool14 = icmp eq i8 %call13, 0, !dbg !7294
  br i1 %tobool14, label %if.else, label %if.then15, !dbg !7295

if.then15:                                        ; preds = %if.then12
  call void @llvm.dbg.value(metadata i8 0, metadata !7266, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7265, metadata !DIExpression(DW_OP_deref)), !dbg !7271
  %call16 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !7297
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !7263, metadata !DIExpression()), !dbg !7271
  br label %for.cond, !dbg !7297

for.cond:                                         ; preds = %for.inc, %if.then15
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call16, %if.then15 ], [ %call23, %for.inc ], !dbg !7299
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !7263, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7265, metadata !DIExpression(DW_OP_deref)), !dbg !7271
  %call17 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7300
  %tobool18 = icmp eq i8 %call17, 0, !dbg !7300
  br i1 %tobool18, label %for.body, label %for.end, !dbg !7297

for.body:                                         ; preds = %for.cond
  %call19 = call fastcc zeroext i8 @maybe_replace_use_in_debug_stmt(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !7302
  %tobool20 = icmp eq i8 %call19, 0, !dbg !7302
  br i1 %tobool20, label %for.end, label %for.inc, !dbg !7304

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7265, metadata !DIExpression(DW_OP_deref)), !dbg !7271
  %call23 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7300
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call23, metadata !7263, metadata !DIExpression()), !dbg !7271
  br label %for.cond, !dbg !7300, !llvm.loop !7305

for.end:                                          ; preds = %for.body, %for.cond
  %failed.0 = phi i1 [ false, %for.cond ], [ true, %for.body ]
  br i1 %failed.0, label %if.then25, label %if.end37, !dbg !7307

if.then25:                                        ; preds = %for.end
  call fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %stmt) #7, !dbg !7308
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !7311
  br label %if.end37, !dbg !7312

if.else:                                          ; preds = %if.then12
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7265, metadata !DIExpression(DW_OP_deref)), !dbg !7271
  %call27 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 5) #7, !dbg !7313
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call27, metadata !7263, metadata !DIExpression()), !dbg !7271
  br label %for.cond28, !dbg !7313

for.cond28:                                       ; preds = %for.body32, %if.else
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call27, %if.else ], [ %call34, %for.body32 ], !dbg !7316
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !7263, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7265, metadata !DIExpression(DW_OP_deref)), !dbg !7271
  %call29 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7317
  %tobool30 = icmp eq i8 %call29, 0, !dbg !7317
  br i1 %tobool30, label %for.body32, label %if.end37.loopexit, !dbg !7313

for.body32:                                       ; preds = %for.cond28
  call fastcc void @maybe_replace_use(%struct.ssa_use_operand_d* %use_p.1) #7, !dbg !7319
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7265, metadata !DIExpression(DW_OP_deref)), !dbg !7271
  %call34 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7317
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call34, metadata !7263, metadata !DIExpression()), !dbg !7271
  br label %for.cond28, !dbg !7317, !llvm.loop !7320

if.end37.loopexit:                                ; preds = %for.cond28
  br label %if.end37, !dbg !7322

if.end37:                                         ; preds = %if.end37.loopexit, %if.end9, %if.then25, %for.end
  %call38 = call fastcc zeroext i8 @register_defs_p(%union.gimple_statement_d* %stmt) #7, !dbg !7322
  %tobool39 = icmp eq i8 %call38, 0, !dbg !7322
  br i1 %tobool39, label %cleanup, label %if.then40, !dbg !7324

if.then40:                                        ; preds = %if.end37
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7265, metadata !DIExpression(DW_OP_deref)), !dbg !7271
  %call41 = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 10) #7, !dbg !7325
  call void @llvm.dbg.value(metadata %union.tree_node** %call41, metadata !7264, metadata !DIExpression()), !dbg !7271
  br label %for.cond42, !dbg !7325

for.cond42:                                       ; preds = %for.body46, %if.then40
  %def_p.0 = phi %union.tree_node** [ %call41, %if.then40 ], [ %call48, %for.body46 ], !dbg !7327
  call void @llvm.dbg.value(metadata %union.tree_node** %def_p.0, metadata !7264, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7265, metadata !DIExpression(DW_OP_deref)), !dbg !7271
  %call43 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7328
  %tobool44 = icmp eq i8 %call43, 0, !dbg !7328
  br i1 %tobool44, label %for.body46, label %cleanup.loopexit, !dbg !7325

for.body46:                                       ; preds = %for.cond42
  call fastcc void @maybe_register_def(%union.tree_node** %def_p.0, %union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7330
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !7265, metadata !DIExpression(DW_OP_deref)), !dbg !7271
  %call48 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !7328
  call void @llvm.dbg.value(metadata %union.tree_node** %call48, metadata !7264, metadata !DIExpression()), !dbg !7271
  br label %for.cond42, !dbg !7328, !llvm.loop !7331

cleanup.loopexit:                                 ; preds = %for.cond42
  br label %cleanup, !dbg !7333

cleanup:                                          ; preds = %cleanup.loopexit, %if.end37, %land.lhs.true
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !7333
  ret void, !dbg !7333
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_update_phi_arguments(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7334 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %phi = alloca %union.gimple_statement_d*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7336, metadata !DIExpression()), !dbg !7360
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !7361
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7361
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7362
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7362
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7363
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7363
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !7363
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !7363
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7363
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !7363
  store i32 %4, i32* %3, align 8, !dbg !7363
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7363
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !7363
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !7363
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !7363
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7363
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7364
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7364
  %9 = bitcast %union.gimple_statement_d** %phi to i8*, !dbg !7365
  br label %for.cond, !dbg !7363

for.cond:                                         ; preds = %cleanup90, %entry
  %10 = load i32, i32* %7, align 8, !dbg !7366
  %11 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !7366
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7337, metadata !DIExpression(DW_OP_deref)), !dbg !7360
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %10, %struct.VEC_edge_gc** %11, %struct.edge_def** nonnull %e) #7, !dbg !7366
  %tobool = icmp eq i8 %call1, 0, !dbg !7363
  br i1 %tobool, label %for.end95, label %for.body, !dbg !7363

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !7367
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @blocks_with_phis_to_rewrite, align 8, !dbg !7368
  %13 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7370
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !7337, metadata !DIExpression()), !dbg !7360
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i64 0, i32 1, !dbg !7371
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7371
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i64 0, i32 9, !dbg !7372
  %15 = load i32, i32* %index, align 8, !dbg !7372
  %call2 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %12, i32 %15) #6, !dbg !7373
  %tobool3 = icmp eq i32 %call2, 0, !dbg !7373
  br i1 %tobool3, label %cleanup90, label %if.end, !dbg !7374

if.end:                                           ; preds = %for.body
  %16 = load %struct.VEC_gimple_vec_heap*, %struct.VEC_gimple_vec_heap** @phis_to_rewrite, align 8, !dbg !7375
  %base = getelementptr inbounds %struct.VEC_gimple_vec_heap, %struct.VEC_gimple_vec_heap* %16, i64 0, i32 0, !dbg !7375
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7375
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !7337, metadata !DIExpression()), !dbg !7360
  %dest5 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i64 0, i32 1, !dbg !7375
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %dest5, align 8, !dbg !7375
  %index6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i64 0, i32 9, !dbg !7375
  %19 = load i32, i32* %index6, align 8, !dbg !7375
  %call7 = call fastcc %struct.VEC_gimple_heap* @VEC_gimple_vec_base_index(%struct.VEC_gimple_vec_base* %base, i32 %19) #7, !dbg !7375
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %call7, metadata !7344, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i32 0, metadata !7339, metadata !DIExpression()), !dbg !7360
  %base11 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %call7, i64 0, i32 0, !dbg !7376
  br label %for.cond8, !dbg !7377

for.cond8:                                        ; preds = %cleanup, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %cleanup ], !dbg !7378
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7339, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %phi, metadata !7340, metadata !DIExpression(DW_OP_deref)), !dbg !7365
  %call15 = call fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %base11, i32 %i.0, %union.gimple_statement_d** nonnull %phi) #7, !dbg !7379
  %tobool16 = icmp eq i32 %call15, 0, !dbg !7380
  br i1 %tobool16, label %cleanup90.loopexit, label %for.body17, !dbg !7380

for.body17:                                       ; preds = %for.cond8
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7350, metadata !DIExpression()), !dbg !7381
  %20 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi, align 8, !dbg !7382
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %20, metadata !7340, metadata !DIExpression()), !dbg !7365
  %call18 = call fastcc zeroext i8 @rewrite_uses_p(%union.gimple_statement_d* %20) #7, !dbg !7382
  %tobool19 = icmp eq i8 %call18, 0, !dbg !7382
  br i1 %tobool19, label %cond.true20, label %cond.end22, !dbg !7382

cond.true20:                                      ; preds = %for.body17
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 2006, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !7382
  br label %cond.end22, !dbg !7382

cond.end22:                                       ; preds = %for.body17, %cond.true20
  %21 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi, align 8, !dbg !7383
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %21, metadata !7340, metadata !DIExpression()), !dbg !7365
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7383
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !7337, metadata !DIExpression()), !dbg !7360
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i64 0, i32 6, !dbg !7383
  %23 = load i32, i32* %dest_idx, align 4, !dbg !7383
  %call24 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %21, i32 %23) #7, !dbg !7383
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call24, metadata !7351, metadata !DIExpression()), !dbg !7381
  %call25 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call24) #7, !dbg !7384
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !7345, metadata !DIExpression()), !dbg !7381
  %tobool26 = icmp eq %union.tree_node* %call25, null, !dbg !7385
  br i1 %tobool26, label %if.end35, label %land.lhs.true, !dbg !7387

land.lhs.true:                                    ; preds = %cond.end22
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7388
  %bf.load = load i64, i64* %24, align 8, !dbg !7388
  %bf.cast = and i64 %bf.load, 65535, !dbg !7388
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7388
  %25 = load i32, i32* %arrayidx, align 4, !dbg !7388
  %cmp = icmp eq i32 %25, 3, !dbg !7388
  br i1 %cmp, label %if.end35, label %land.lhs.true28, !dbg !7389

land.lhs.true28:                                  ; preds = %land.lhs.true
  %cmp33 = icmp eq i64 %bf.cast, 141, !dbg !7390
  br i1 %cmp33, label %if.end35, label %cleanup, !dbg !7391

if.end35:                                         ; preds = %land.lhs.true28, %cond.end22, %land.lhs.true
  %26 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi, align 8, !dbg !7392
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %26, metadata !7340, metadata !DIExpression()), !dbg !7365
  %call36 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %26) #7, !dbg !7392
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !7349, metadata !DIExpression()), !dbg !7381
  br i1 %tobool26, label %if.then38, label %if.else, !dbg !7393

if.then38:                                        ; preds = %if.end35
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7392
  %27 = bitcast i32* %var to %union.tree_node**, !dbg !7392
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8, !dbg !7392
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !7349, metadata !DIExpression()), !dbg !7381
  %call39 = call fastcc %union.tree_node* @get_reaching_def(%union.tree_node* %28) #7, !dbg !7394
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !7350, metadata !DIExpression()), !dbg !7381
  br label %if.end64, !dbg !7396

if.else:                                          ; preds = %if.end35
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7397
  %bf.load41 = load i64, i64* %29, align 8, !dbg !7397
  %bf.cast43 = and i64 %bf.load41, 65535, !dbg !7397
  %arrayidx45 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast43, !dbg !7397
  %30 = load i32, i32* %arrayidx45, align 4, !dbg !7397
  %cmp46 = icmp eq i32 %30, 3, !dbg !7397
  br i1 %cmp46, label %cond.end51, label %cond.false48, !dbg !7397

cond.false48:                                     ; preds = %if.else
  %var50 = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7398
  %31 = bitcast i32* %var50 to %union.tree_node**, !dbg !7398
  %32 = load %union.tree_node*, %union.tree_node** %31, align 8, !dbg !7398
  br label %cond.end51, !dbg !7397

cond.end51:                                       ; preds = %if.else, %cond.false48
  %cond52 = phi %union.tree_node* [ %32, %cond.false48 ], [ %call25, %if.else ], !dbg !7397
  call void @llvm.dbg.value(metadata %union.tree_node* %cond52, metadata !7352, metadata !DIExpression()), !dbg !7399
  %call53 = call fastcc zeroext i8 @symbol_marked_for_renaming(%union.tree_node* %cond52) #7, !dbg !7400
  %tobool54 = icmp eq i8 %call53, 0, !dbg !7400
  br i1 %tobool54, label %if.else57, label %if.then55, !dbg !7402

if.then55:                                        ; preds = %cond.end51
  %call56 = call fastcc %union.tree_node* @get_reaching_def(%union.tree_node* %cond52) #7, !dbg !7403
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !7350, metadata !DIExpression()), !dbg !7381
  br label %if.end64, !dbg !7404

if.else57:                                        ; preds = %cond.end51
  %call58 = call fastcc zeroext i8 @is_old_name(%union.tree_node* nonnull %call25) #7, !dbg !7405
  %tobool59 = icmp eq i8 %call58, 0, !dbg !7405
  br i1 %tobool59, label %if.end64, label %if.then60, !dbg !7407

if.then60:                                        ; preds = %if.else57
  %call61 = call fastcc %union.tree_node* @get_reaching_def(%union.tree_node* nonnull %call25) #7, !dbg !7408
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !7350, metadata !DIExpression()), !dbg !7381
  br label %if.end64, !dbg !7409

if.end64:                                         ; preds = %if.else57, %if.then55, %if.then60, %if.then38
  %reaching_def.2 = phi %union.tree_node* [ %call39, %if.then38 ], [ %call56, %if.then55 ], [ %call61, %if.then60 ], [ null, %if.else57 ], !dbg !7410
  call void @llvm.dbg.value(metadata %union.tree_node* %reaching_def.2, metadata !7350, metadata !DIExpression()), !dbg !7381
  %tobool65 = icmp eq %union.tree_node* %reaching_def.2, null, !dbg !7411
  br i1 %tobool65, label %if.end79, label %if.then66, !dbg !7412

if.then66:                                        ; preds = %if.end64
  %call67 = call fastcc i32 @phi_arg_index_from_use(%struct.ssa_use_operand_d* %call24) #7, !dbg !7413
  call void @llvm.dbg.value(metadata i32 %call67, metadata !7359, metadata !DIExpression()), !dbg !7414
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %call24, %union.tree_node* nonnull %reaching_def.2) #7, !dbg !7415
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %reaching_def.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7416
  %33 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !7416
  %34 = load %union.gimple_statement_d*, %union.gimple_statement_d** %33, align 8, !dbg !7416
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %34, metadata !7355, metadata !DIExpression()), !dbg !7414
  %call69 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %34) #7, !dbg !7417
  %cmp70 = icmp eq i32 %call69, 16, !dbg !7419
  br i1 %cmp70, label %land.lhs.true71, label %if.else76, !dbg !7420

land.lhs.true71:                                  ; preds = %if.then66
  %call72 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %34) #7, !dbg !7421
  %cmp73 = icmp eq i32 %call72, 1, !dbg !7422
  br i1 %cmp73, label %if.then74, label %if.else76, !dbg !7423

if.then74:                                        ; preds = %land.lhs.true71
  %call75 = call fastcc i32 @gimple_phi_arg_location(%union.gimple_statement_d* %34, i64 0) #7, !dbg !7424
  call void @llvm.dbg.value(metadata i32 %call75, metadata !7358, metadata !DIExpression()), !dbg !7414
  br label %if.end78, !dbg !7425

if.else76:                                        ; preds = %land.lhs.true71, %if.then66
  %call77 = call fastcc i32 @gimple_location(%union.gimple_statement_d* %34) #7, !dbg !7426
  call void @llvm.dbg.value(metadata i32 %call77, metadata !7358, metadata !DIExpression()), !dbg !7414
  br label %if.end78

if.end78:                                         ; preds = %if.else76, %if.then74
  %locus.0 = phi i32 [ %call75, %if.then74 ], [ %call77, %if.else76 ], !dbg !7427
  call void @llvm.dbg.value(metadata i32 %locus.0, metadata !7358, metadata !DIExpression()), !dbg !7414
  %35 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi, align 8, !dbg !7428
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %35, metadata !7340, metadata !DIExpression()), !dbg !7365
  %conv = sext i32 %call67 to i64, !dbg !7429
  call fastcc void @gimple_phi_arg_set_location(%union.gimple_statement_d* %35, i64 %conv, i32 %locus.0) #7, !dbg !7430
  br label %if.end79, !dbg !7431

if.end79:                                         ; preds = %if.end64, %if.end78
  %36 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7432
  call void @llvm.dbg.value(metadata %struct.edge_def* %36, metadata !7337, metadata !DIExpression()), !dbg !7360
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %36, i64 0, i32 7, !dbg !7434
  %37 = load i32, i32* %flags, align 8, !dbg !7434
  %and = and i32 %37, 2, !dbg !7435
  %tobool80 = icmp eq i32 %and, 0, !dbg !7435
  br i1 %tobool80, label %cleanup, label %if.then81, !dbg !7436

if.then81:                                        ; preds = %if.end79
  %call82 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call24) #7, !dbg !7437
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7437
  %bf.load84 = load i64, i64* %38, align 8, !dbg !7438
  %bf.set = or i64 %bf.load84, 4194304, !dbg !7438
  store i64 %bf.set, i64* %38, align 8, !dbg !7438
  br label %cleanup, !dbg !7437

cleanup:                                          ; preds = %land.lhs.true28, %if.end79, %if.then81
  %inc = add i32 %i.0, 1, !dbg !7439
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7339, metadata !DIExpression()), !dbg !7360
  br label %for.cond8, !dbg !7440, !llvm.loop !7441

cleanup90.loopexit:                               ; preds = %for.cond8
  br label %cleanup90, !dbg !7443

cleanup90:                                        ; preds = %cleanup90.loopexit, %for.body
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !7443
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7338, metadata !DIExpression(DW_OP_deref)), !dbg !7360
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7366
  br label %for.cond, !dbg !7366, !llvm.loop !7444

for.end95:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7446
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7446
  ret void, !dbg !7446
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @maybe_replace_use_in_debug_stmt(%struct.ssa_use_operand_d* %use_p) unnamed_addr #0 !dbg !7447 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !7451, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7452, metadata !DIExpression()), !dbg !7455
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p) #7, !dbg !7456
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7453, metadata !DIExpression()), !dbg !7455
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7457
  %bf.load = load i64, i64* %0, align 8, !dbg !7457
  %bf.cast = and i64 %bf.load, 65535, !dbg !7457
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7457
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7457
  %cmp = icmp eq i32 %1, 3, !dbg !7457
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !7457

cond.false:                                       ; preds = %entry
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7458
  %2 = bitcast i32* %var to %union.tree_node**, !dbg !7458
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !7458
  br label %cond.end, !dbg !7457

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %3, %cond.false ], [ %call, %entry ], !dbg !7457
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !7454, metadata !DIExpression()), !dbg !7455
  %call1 = tail call fastcc zeroext i8 @symbol_marked_for_renaming(%union.tree_node* %cond) #7, !dbg !7459
  %tobool = icmp eq i8 %call1, 0, !dbg !7459
  br i1 %tobool, label %if.else, label %if.then, !dbg !7461

if.then:                                          ; preds = %cond.end
  %call2 = tail call %union.tree_node* @get_current_def(%union.tree_node* %cond) #7, !dbg !7462
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7452, metadata !DIExpression()), !dbg !7455
  br label %if.end16, !dbg !7463

if.else:                                          ; preds = %cond.end
  %call3 = tail call fastcc zeroext i8 @is_old_name(%union.tree_node* %call) #7, !dbg !7464
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7464
  br i1 %tobool4, label %if.end16, label %if.then5, !dbg !7466

if.then5:                                         ; preds = %if.else
  %call6 = tail call %union.tree_node* @get_current_def(%union.tree_node* %call) #7, !dbg !7467
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !7452, metadata !DIExpression()), !dbg !7455
  %tobool7 = icmp eq %union.tree_node* %call6, null, !dbg !7469
  br i1 %tobool7, label %land.lhs.true, label %if.end16, !dbg !7471

land.lhs.true:                                    ; preds = %if.then5
  %bf.load9 = load i64, i64* %0, align 8, !dbg !7472
  %bf.cast111 = and i64 %bf.load9, 4294967296, !dbg !7472
  %tobool12 = icmp eq i64 %bf.cast111, 0, !dbg !7472
  %spec.select = select i1 %tobool12, %union.tree_node* null, %union.tree_node* %call, !dbg !7473
  br label %if.end16, !dbg !7473

if.end16:                                         ; preds = %if.then5, %if.else, %land.lhs.true, %if.then
  %rdef.2 = phi %union.tree_node* [ %call2, %if.then ], [ %call6, %if.then5 ], [ %spec.select, %land.lhs.true ], [ %call, %if.else ], !dbg !7474
  call void @llvm.dbg.value(metadata %union.tree_node* %rdef.2, metadata !7452, metadata !DIExpression()), !dbg !7455
  %tobool17 = icmp ne %union.tree_node* %rdef.2, null, !dbg !7475
  %cmp19 = icmp ne %union.tree_node* %rdef.2, %call, !dbg !7477
  %or.cond = and i1 %tobool17, %cmp19, !dbg !7478
  br i1 %or.cond, label %if.then20, label %if.end21, !dbg !7478

if.then20:                                        ; preds = %if.end16
  tail call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p, %union.tree_node* nonnull %rdef.2) #7, !dbg !7479
  br label %if.end21, !dbg !7479

if.end21:                                         ; preds = %if.then20, %if.end16
  %conv23 = zext i1 %tobool17 to i8, !dbg !7480
  ret i8 %conv23, !dbg !7481
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !7482 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !7484, metadata !DIExpression()), !dbg !7485
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %dbg, i32 1, %union.tree_node* null) #7, !dbg !7486
  ret void, !dbg !7487
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @maybe_replace_use(%struct.ssa_use_operand_d* %use_p) unnamed_addr #0 !dbg !7488 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !7492, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7493, metadata !DIExpression()), !dbg !7496
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p) #7, !dbg !7497
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7494, metadata !DIExpression()), !dbg !7496
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7498
  %bf.load = load i64, i64* %0, align 8, !dbg !7498
  %bf.cast = and i64 %bf.load, 65535, !dbg !7498
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7498
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7498
  %cmp = icmp eq i32 %1, 3, !dbg !7498
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !7498

cond.false:                                       ; preds = %entry
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7499
  %2 = bitcast i32* %var to %union.tree_node**, !dbg !7499
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !7499
  br label %cond.end, !dbg !7498

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %3, %cond.false ], [ %call, %entry ], !dbg !7498
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !7495, metadata !DIExpression()), !dbg !7496
  %call1 = tail call fastcc zeroext i8 @symbol_marked_for_renaming(%union.tree_node* %cond) #7, !dbg !7500
  %tobool = icmp eq i8 %call1, 0, !dbg !7500
  br i1 %tobool, label %if.else, label %if.then, !dbg !7502

if.then:                                          ; preds = %cond.end
  %call2 = tail call fastcc %union.tree_node* @get_reaching_def(%union.tree_node* %cond) #7, !dbg !7503
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7493, metadata !DIExpression()), !dbg !7496
  br label %if.end7, !dbg !7504

if.else:                                          ; preds = %cond.end
  %call3 = tail call fastcc zeroext i8 @is_old_name(%union.tree_node* %call) #7, !dbg !7505
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7505
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !7507

if.then5:                                         ; preds = %if.else
  %call6 = tail call fastcc %union.tree_node* @get_reaching_def(%union.tree_node* %call) #7, !dbg !7508
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !7493, metadata !DIExpression()), !dbg !7496
  br label %if.end7, !dbg !7509

if.end7:                                          ; preds = %if.else, %if.then5, %if.then
  %rdef.1 = phi %union.tree_node* [ %call2, %if.then ], [ %call6, %if.then5 ], [ null, %if.else ], !dbg !7510
  call void @llvm.dbg.value(metadata %union.tree_node* %rdef.1, metadata !7493, metadata !DIExpression()), !dbg !7496
  %tobool8 = icmp ne %union.tree_node* %rdef.1, null, !dbg !7511
  %cmp9 = icmp ne %union.tree_node* %rdef.1, %call, !dbg !7513
  %or.cond = and i1 %tobool8, %cmp9, !dbg !7514
  br i1 %or.cond, label %if.then10, label %if.end11, !dbg !7514

if.then10:                                        ; preds = %if.end7
  tail call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p, %union.tree_node* nonnull %rdef.1) #7, !dbg !7515
  br label %if.end11, !dbg !7515

if.end11:                                         ; preds = %if.then10, %if.end7
  ret void, !dbg !7516
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @maybe_register_def(%union.tree_node** %def_p, %union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) unnamed_addr #0 !dbg !7517 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %def_p, metadata !7521, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7522, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7523, metadata !DIExpression()), !dbg !7541
  %call = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def_p) #7, !dbg !7542
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7524, metadata !DIExpression()), !dbg !7540
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7543
  %bf.load = load i64, i64* %0, align 8, !dbg !7543
  %bf.cast = and i64 %bf.load, 65535, !dbg !7543
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7543
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7543
  %cmp = icmp eq i32 %1, 3, !dbg !7543
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !7543

cond.false:                                       ; preds = %entry
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7544
  %2 = bitcast i32* %var to %union.tree_node**, !dbg !7544
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !7544
  br label %cond.end, !dbg !7543

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %3, %cond.false ], [ %call, %entry ], !dbg !7543
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !7525, metadata !DIExpression()), !dbg !7540
  %call1 = tail call fastcc zeroext i8 @symbol_marked_for_renaming(%union.tree_node* %cond) #7, !dbg !7545
  %tobool = icmp eq i8 %call1, 0, !dbg !7545
  br i1 %tobool, label %if.else53, label %if.then, !dbg !7546

if.then:                                          ; preds = %cond.end
  %bf.load3 = load i64, i64* %0, align 8, !dbg !7547
  %bf.cast5 = and i64 %bf.load3, 65535, !dbg !7547
  %arrayidx7 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast5, !dbg !7547
  %4 = load i32, i32* %arrayidx7, align 4, !dbg !7547
  %cmp8 = icmp eq i32 %4, 3, !dbg !7547
  br i1 %cmp8, label %if.then9, label %if.end52, !dbg !7548

if.then9:                                         ; preds = %if.then
  %call10 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call, %union.gimple_statement_d* %stmt) #7, !dbg !7549
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !7524, metadata !DIExpression()), !dbg !7540
  store %union.tree_node* %call10, %union.tree_node** %def_p, align 8, !dbg !7550
  %call11 = tail call %union.tree_node* @target_for_debug_bind(%union.tree_node* %cond) #6, !dbg !7551
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !7526, metadata !DIExpression()), !dbg !7552
  %tobool12 = icmp eq %union.tree_node* %call11, null, !dbg !7553
  br i1 %tobool12, label %if.end52, label %if.then13, !dbg !7554

if.then13:                                        ; preds = %if.then9
  %call14 = tail call %union.gimple_statement_d* @gimple_build_debug_bind_stat(%union.tree_node* nonnull %call11, %union.tree_node* %call10, %union.gimple_statement_d* %stmt) #6, !dbg !7555
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call14, metadata !7531, metadata !DIExpression()), !dbg !7556
  %call15 = tail call fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7557
  %tobool16 = icmp eq i8 %call15, 0, !dbg !7557
  br i1 %tobool16, label %if.else, label %land.lhs.true, !dbg !7558

land.lhs.true:                                    ; preds = %if.then13
  %call17 = tail call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* %stmt) #6, !dbg !7559
  %tobool19 = icmp eq i8 %call17, 0, !dbg !7559
  br i1 %tobool19, label %if.else, label %if.then20, !dbg !7560

if.then20:                                        ; preds = %land.lhs.true
  %call21 = tail call fastcc %struct.basic_block_def* @gsi_bb(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7561
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call21, metadata !7534, metadata !DIExpression()), !dbg !7562
  %5 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7563
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !7563
  %6 = bitcast %struct.edge_def** %e to i8*, !dbg !7564
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !7564
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !7539, metadata !DIExpression()), !dbg !7562
  %7 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7565
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8, !dbg !7565
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call21, i64 0, i32 1, !dbg !7565
  %call22 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !7565
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7565
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call22, 0, !dbg !7565
  store i32 %9, i32* %8, align 8, !dbg !7565
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7565
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call22, 1, !dbg !7565
  store %struct.VEC_edge_gc** %11, %struct.VEC_edge_gc*** %10, align 8, !dbg !7565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %7, i64 16, i1 false), !dbg !7565
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8, !dbg !7565
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7567
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7567
  br label %for.cond, !dbg !7565

for.cond:                                         ; preds = %for.inc, %if.then20
  %ef.0 = phi %struct.edge_def* [ null, %if.then20 ], [ %ef.1, %for.inc ], !dbg !7569
  call void @llvm.dbg.value(metadata %struct.edge_def* %ef.0, metadata !7539, metadata !DIExpression()), !dbg !7562
  %14 = load i32, i32* %12, align 8, !dbg !7570
  %15 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %13, align 8, !dbg !7570
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7538, metadata !DIExpression(DW_OP_deref)), !dbg !7562
  %call23 = call fastcc zeroext i8 @ei_cond(i32 %14, %struct.VEC_edge_gc** %15, %struct.edge_def** nonnull %e) #7, !dbg !7570
  %tobool24 = icmp eq i8 %call23, 0, !dbg !7565
  br i1 %tobool24, label %for.end, label %for.body, !dbg !7565

for.body:                                         ; preds = %for.cond
  %16 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7571
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !7538, metadata !DIExpression()), !dbg !7562
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %16, i64 0, i32 7, !dbg !7573
  %17 = load i32, i32* %flags, align 8, !dbg !7573
  %and = and i32 %17, 8, !dbg !7574
  %tobool25 = icmp eq i32 %and, 0, !dbg !7574
  br i1 %tobool25, label %if.then26, label %for.inc, !dbg !7575

if.then26:                                        ; preds = %for.body
  %tobool27 = icmp eq %struct.edge_def* %ef.0, null, !dbg !7576
  br i1 %tobool27, label %cond.end30, label %cond.true28, !dbg !7576

cond.true28:                                      ; preds = %if.then26
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 1875, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !7576
  %.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7578
  br label %cond.end30, !dbg !7576

cond.end30:                                       ; preds = %if.then26, %cond.true28
  %18 = phi %struct.edge_def* [ %16, %if.then26 ], [ %.pre, %cond.true28 ], !dbg !7578
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !7538, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata %struct.edge_def* %18, metadata !7539, metadata !DIExpression()), !dbg !7562
  br label %for.inc, !dbg !7579

for.inc:                                          ; preds = %for.body, %cond.end30
  %ef.1 = phi %struct.edge_def* [ %ef.0, %for.body ], [ %18, %cond.end30 ], !dbg !7562
  call void @llvm.dbg.value(metadata %struct.edge_def* %ef.1, metadata !7539, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7537, metadata !DIExpression(DW_OP_deref)), !dbg !7562
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7570
  br label %for.cond, !dbg !7570, !llvm.loop !7580

for.end:                                          ; preds = %for.cond
  %ef.0.lcssa = phi %struct.edge_def* [ %ef.0, %for.cond ], !dbg !7569
  call void @llvm.dbg.value(metadata %struct.edge_def* %ef.0.lcssa, metadata !7539, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata %struct.edge_def* %ef.0.lcssa, metadata !7539, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.value(metadata %struct.edge_def* %ef.0.lcssa, metadata !7539, metadata !DIExpression()), !dbg !7562
  %tobool32 = icmp eq %struct.edge_def* %ef.0.lcssa, null, !dbg !7582
  br i1 %tobool32, label %cond.true45, label %land.lhs.true33, !dbg !7582

land.lhs.true33:                                  ; preds = %for.end
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %ef.0.lcssa, i64 0, i32 1, !dbg !7582
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7582
  %call34 = call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %19) #7, !dbg !7582
  %tobool36 = icmp eq i8 %call34, 0, !dbg !7582
  br i1 %tobool36, label %cond.true45, label %land.lhs.true37, !dbg !7582

land.lhs.true37:                                  ; preds = %land.lhs.true33
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7582
  %call39 = call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %20) #7, !dbg !7582
  %tobool40 = icmp eq %struct.gimple_seq_d* %call39, null, !dbg !7582
  br i1 %tobool40, label %land.lhs.true41, label %cond.true45, !dbg !7582

land.lhs.true41:                                  ; preds = %land.lhs.true37
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7582
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7582
  %cfg = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, i32 1, !dbg !7582
  %23 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7582
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i64 0, i32 1, !dbg !7582
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7582
  %cmp43 = icmp eq %struct.basic_block_def* %21, %24, !dbg !7582
  br i1 %cmp43, label %cond.true45, label %cond.end47, !dbg !7582

cond.true45:                                      ; preds = %land.lhs.true41, %land.lhs.true37, %land.lhs.true33, %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 1881, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !7582
  br label %cond.end47, !dbg !7582

cond.end47:                                       ; preds = %land.lhs.true41, %cond.true45
  %call49 = call %struct.basic_block_def* @gsi_insert_on_edge_immediate(%struct.edge_def* %ef.0.lcssa, %union.gimple_statement_d* %call14) #6, !dbg !7583
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !7584
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !7584
  br label %if.end52, !dbg !7585

if.else:                                          ; preds = %land.lhs.true, %if.then13
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call14, i32 1) #6, !dbg !7586
  br label %if.end52

if.end52:                                         ; preds = %if.then9, %if.else, %cond.end47, %if.then
  %def.0 = phi %union.tree_node* [ %call, %if.then ], [ %call10, %cond.end47 ], [ %call10, %if.else ], [ %call10, %if.then9 ], !dbg !7540
  call void @llvm.dbg.value(metadata %union.tree_node* %def.0, metadata !7524, metadata !DIExpression()), !dbg !7540
  call fastcc void @register_new_update_single(%union.tree_node* %def.0, %union.tree_node* %cond) #7, !dbg !7587
  br label %if.end63, !dbg !7588

if.else53:                                        ; preds = %cond.end
  %call54 = tail call fastcc zeroext i8 @is_new_name(%union.tree_node* %call) #7, !dbg !7589
  %tobool55 = icmp eq i8 %call54, 0, !dbg !7589
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !7592

if.then56:                                        ; preds = %if.else53
  %call57 = tail call fastcc %struct.bitmap_head_def* @names_replaced_by(%union.tree_node* %call) #7, !dbg !7593
  tail call fastcc void @register_new_update_set(%union.tree_node* %call, %struct.bitmap_head_def* %call57) #7, !dbg !7594
  br label %if.end58, !dbg !7594

if.end58:                                         ; preds = %if.else53, %if.then56
  %call59 = tail call fastcc zeroext i8 @is_old_name(%union.tree_node* %call) #7, !dbg !7595
  %tobool60 = icmp eq i8 %call59, 0, !dbg !7595
  br i1 %tobool60, label %if.end63, label %if.then61, !dbg !7597

if.then61:                                        ; preds = %if.end58
  tail call fastcc void @register_new_update_single(%union.tree_node* %call, %union.tree_node* %call) #7, !dbg !7598
  br label %if.end63, !dbg !7598

if.end63:                                         ; preds = %if.end58, %if.then61, %if.end52
  ret void, !dbg !7599
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !7600 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7604, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata i32 1, metadata !7605, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7606, metadata !DIExpression()), !dbg !7607
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !7608
  %tobool = icmp eq i8 %call, 0, !dbg !7608
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !7608

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !7608
  %cmp = icmp ugt i32 %call1, 1, !dbg !7608
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7608

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !7608
  br label %cond.end, !dbg !7608

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !7609
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 1, !dbg !7609
  store %union.tree_node* null, %union.tree_node** %arrayidx, align 8, !dbg !7610
  ret void, !dbg !7611
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7612 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7616, metadata !DIExpression()), !dbg !7617
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !7618
  %0 = load i32, i32* %num_ops, align 4, !dbg !7618
  ret i32 %0, !dbg !7619
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7620 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7622, metadata !DIExpression()), !dbg !7624
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !7625
  %idxprom = zext i32 %call to i64, !dbg !7626
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !7626
  %0 = load i64, i64* %arrayidx, align 8, !dbg !7626
  call void @llvm.dbg.value(metadata i64 %0, metadata !7623, metadata !DIExpression()), !dbg !7624
  %cmp = icmp eq i64 %0, 0, !dbg !7627
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7627

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !7627
  br label %cond.end, !dbg !7627

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !7628
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !7629
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !7630
  ret %union.tree_node** %2, !dbg !7631
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7632 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7636, metadata !DIExpression()), !dbg !7637
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !7638
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !7639
  ret i32 %call1, !dbg !7640
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !7641 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !7645, metadata !DIExpression()), !dbg !7646
  %idxprom = zext i32 %code to i64, !dbg !7647
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !7647
  %0 = load i32, i32* %arrayidx, align 4, !dbg !7647
  ret i32 %0, !dbg !7648
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !7649 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !7651, metadata !DIExpression()), !dbg !7652
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !7653
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !7653
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !7654
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !7655

land.rhs:                                         ; preds = %entry
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !7656
  %1 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %next, align 8, !dbg !7656
  %cmp2 = icmp eq %struct.gimple_seq_node_d* %1, null, !dbg !7657
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !7658
}

declare dso_local zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gsi_bb(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !7659 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !7663, metadata !DIExpression()), !dbg !7664
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 2, !dbg !7665
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7665
  ret %struct.basic_block_def* %0, !dbg !7666
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7667 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7671, metadata !DIExpression()), !dbg !7672
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !7673
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !7673
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7673
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7673

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7673
  br label %cond.end, !dbg !7673

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7673
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !7673
  %cmp = icmp eq i32 %call, 1, !dbg !7674
  %conv2 = zext i1 %cmp to i8, !dbg !7673
  ret i8 %conv2, !dbg !7675
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7676 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7678, metadata !DIExpression()), !dbg !7679
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !7680
  %0 = load i32, i32* %flags, align 8, !dbg !7680
  %and = and i32 %0, 512, !dbg !7680
  %tobool = icmp eq i32 %and, 0, !dbg !7680
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7680

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 510, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !7680
  br label %cond.end, !dbg !7680

cond.end:                                         ; preds = %entry, %cond.true
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !7681
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !7681
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !7683
  br i1 %tobool1, label %return, label %if.end, !dbg !7684

if.end:                                           ; preds = %cond.end
  %phi_nodes = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 1, !dbg !7685
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %phi_nodes, align 8, !dbg !7685
  br label %return, !dbg !7686

return:                                           ; preds = %cond.end, %if.end
  %retval.0 = phi %struct.gimple_seq_d* [ %2, %if.end ], [ null, %cond.end ], !dbg !7679
  ret %struct.gimple_seq_d* %retval.0, !dbg !7687
}

declare dso_local %struct.basic_block_def* @gsi_insert_on_edge_immediate(%struct.edge_def*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %vec_, i32 %ix_, %union.gimple_statement_d** %ptr) unnamed_addr #0 !dbg !7688 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !7694, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7695, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %ptr, metadata !7696, metadata !DIExpression()), !dbg !7697
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !7698
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !7698

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !7698
  %0 = load i32, i32* %num, align 8, !dbg !7698
  %cmp = icmp ugt i32 %0, %ix_, !dbg !7698
  br i1 %cmp, label %if.then, label %if.else, !dbg !7700

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !7701
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7701
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !7701
  br label %return, !dbg !7701

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !7703

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.gimple_statement_d* [ null, %if.else ], [ %1, %if.then ], !dbg !7705
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !7705
  store %union.gimple_statement_d* %storemerge, %union.gimple_statement_d** %ptr, align 8, !dbg !7705
  ret i32 %retval.0, !dbg !7700
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7706 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7708, metadata !DIExpression()), !dbg !7709
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !7710
  %0 = load i32, i32* %nargs, align 4, !dbg !7710
  ret i32 %0, !dbg !7711
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_arg_location(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !7712 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7716, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.value(metadata i64 0, metadata !7717, metadata !DIExpression()), !dbg !7718
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !7719
  %locus = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 2, !dbg !7720
  %0 = load i32, i32* %locus, align 8, !dbg !7720
  ret i32 %0, !dbg !7721
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_phi_arg_set_location(%union.gimple_statement_d* %gs, i64 %i, i32 %loc) unnamed_addr #0 !dbg !7722 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7726, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i64 %i, metadata !7727, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7728, metadata !DIExpression()), !dbg !7729
  %conv = trunc i64 %i to i32, !dbg !7730
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #7, !dbg !7731
  %locus = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 2, !dbg !7732
  store i32 %loc, i32* %locus, align 8, !dbg !7733
  ret void, !dbg !7734
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2264, !2265, !2266}
!llvm.ident = !{!2267}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "block_defs_stack", scope: !2, file: !3, line: 104, type: !2188, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !659, globals: !2193, nameTableKind: None)
!3 = !DIFile(filename: "tree-into-ssa.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !338, !342, !348, !353, !358, !376, !383, !390, !397, !573, !580, !585, !591, !629, !633}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !330, line: 31, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334, !335, !336, !337}
!332 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!335 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!336 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!337 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !330, line: 91, baseType: !7, size: 32, elements: !339)
!339 = !{!340, !341}
!340 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!341 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !343, line: 363, baseType: !7, size: 32, elements: !344)
!343 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!344 = !{!345, !346, !347}
!345 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!346 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!347 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !343, line: 355, baseType: !7, size: 32, elements: !349)
!349 = !{!350, !351, !352}
!350 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!351 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!352 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !354, line: 474, baseType: !7, size: 32, elements: !355)
!354 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!355 = !{!356, !357}
!356 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!357 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !359)
!359 = !{!360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375}
!360 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !377)
!377 = !{!378, !379, !380, !381, !382}
!378 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!383 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !384)
!384 = !{!385, !386, !387, !388, !389}
!385 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!386 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!387 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!388 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!389 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !391, line: 104, baseType: !7, size: 32, elements: !392)
!391 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!392 = !{!393, !394, !395, !396}
!393 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !398, line: 74, baseType: !7, size: 32, elements: !399)
!398 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!399 = !{!400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572}
!400 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!572 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!573 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !574, line: 119, baseType: !7, size: 32, elements: !575)
!574 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!575 = !{!576, !577, !578, !579}
!576 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!577 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!578 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!579 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!580 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "plf_mask", file: !581, line: 130, baseType: !7, size: 32, elements: !582)
!581 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!582 = !{!583, !584}
!583 = !DIEnumerator(name: "GF_PLF_1", value: 1, isUnsigned: true)
!584 = !DIEnumerator(name: "GF_PLF_2", value: 2, isUnsigned: true)
!585 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "need_phi_state", file: !586, line: 128, baseType: !7, size: 32, elements: !587)
!586 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!587 = !{!588, !589, !590}
!588 = !DIEnumerator(name: "NEED_PHI_STATE_UNKNOWN", value: 0, isUnsigned: true)
!589 = !DIEnumerator(name: "NEED_PHI_STATE_NO", value: 1, isUnsigned: true)
!590 = !DIEnumerator(name: "NEED_PHI_STATE_MAYBE", value: 2, isUnsigned: true)
!591 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !581, line: 51, baseType: !7, size: 32, elements: !592)
!592 = !{!593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628}
!593 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!594 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!595 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!596 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!597 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!598 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!599 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!600 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!601 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!602 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!603 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!604 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!605 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!606 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!607 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!608 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!609 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!610 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!611 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!612 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!613 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!614 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!615 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!616 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!617 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!618 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!619 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!620 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!621 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!622 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!623 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!624 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!625 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!626 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!627 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!628 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!629 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rewrite_mode", file: !3, line: 209, baseType: !7, size: 32, elements: !630)
!630 = !{!631, !632}
!631 = !DIEnumerator(name: "REWRITE_ALL", value: 0, isUnsigned: true)
!632 = !DIEnumerator(name: "REWRITE_UPDATE", value: 1, isUnsigned: true)
!633 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !581, line: 727, baseType: !7, size: 32, elements: !634)
!634 = !{!635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658}
!635 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!636 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!637 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!638 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!639 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!640 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!641 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!642 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!643 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!644 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!645 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!646 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!647 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!648 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!649 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!650 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!651 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!652 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!653 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!654 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!655 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!656 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!657 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!658 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!659 = !{!660, !661, !662, !663, !666, !667, !134, !669, !733, !1319, !2053, !2054, !2055, !2061, !7, !788, !2074, !2125, !2132, !2136, !728, !2139, !2144, !2146, !2159, !2172, !2177, !1075, !2182, !2184, !786, !2186, !2187, !2188, !1347, !664, !708}
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!662 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !665)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !671, line: 111, baseType: !672)
!671 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !343, line: 217, size: 832, elements: !674)
!674 = !{!675, !2020, !2021, !2022, !2023, !2027, !2028, !2029, !2047, !2048, !2049, !2050, !2051, !2052}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !673, file: !343, line: 219, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !343, line: 151, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !343, line: 151, size: 128, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !678, file: !343, line: 151, baseType: !681, size: 128)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !343, line: 150, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !343, line: 150, size: 128, elements: !683)
!683 = !{!684, !685, !686}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !682, file: !343, line: 150, baseType: !7, size: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !682, file: !343, line: 150, baseType: !7, size: 32, offset: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !682, file: !343, line: 150, baseType: !687, size: 64, offset: 64)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !688, size: 64, elements: !831)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !671, line: 108, baseType: !689)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !343, line: 122, size: 512, elements: !691)
!691 = !{!692, !693, !694, !2012, !2013, !2014, !2015, !2016, !2017, !2018}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !690, file: !343, line: 124, baseType: !672, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !690, file: !343, line: 125, baseType: !672, size: 64, offset: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !690, file: !343, line: 131, baseType: !695, size: 64, offset: 128)
!695 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !343, line: 128, size: 64, elements: !696)
!696 = !{!697, !2011}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !695, file: !343, line: 129, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !671, line: 66, baseType: !699)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !581, line: 143, size: 192, elements: !701)
!701 = !{!702, !2009, !2010}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !700, file: !581, line: 145, baseType: !703, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !671, line: 69, baseType: !704)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !581, line: 136, size: 192, elements: !706)
!706 = !{!707, !2007, !2008}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !705, file: !581, line: 137, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !671, line: 58, baseType: !709)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !581, line: 737, size: 768, elements: !711)
!711 = !{!712, !1854, !1864, !1870, !1875, !1880, !1887, !1893, !1899, !1904, !1918, !1923, !1929, !1934, !1944, !1949, !1965, !1972, !1979, !1985, !1990, !1996, !2002}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !710, file: !581, line: 738, baseType: !713, size: 256)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !581, line: 271, size: 256, elements: !714)
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !730, !731, !732}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !713, file: !581, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !713, file: !581, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !713, file: !581, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !713, file: !581, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !713, file: !581, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !713, file: !581, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !713, file: !581, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !713, file: !581, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !713, file: !581, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !713, file: !581, line: 312, baseType: !7, size: 32, offset: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !713, file: !581, line: 316, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !727, line: 58, baseType: !728)
!727 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !729, line: 44, baseType: !7)
!729 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!730 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !713, file: !581, line: 319, baseType: !7, size: 32, offset: 96)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !713, file: !581, line: 323, baseType: !672, size: 64, offset: 128)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !713, file: !581, line: 327, baseType: !733, size: 64, offset: 192)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !671, line: 56, baseType: !734)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !736)
!736 = !{!737, !770, !776, !789, !808, !819, !824, !833, !839, !852, !860, !898, !1106, !1134, !1150, !1151, !1156, !1165, !1171, !1176, !1180, !1184, !1505, !1552, !1558, !1564, !1571, !1584, !1598, !1615, !1627, !1649, !1664, !1836}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !735, file: !135, line: 3372, baseType: !738, size: 64)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !739)
!739 = !{!740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !738, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !738, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !738, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !738, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !738, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !738, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !738, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !738, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !738, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !738, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !738, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !738, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !738, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !738, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !738, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !738, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !738, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !738, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !738, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !738, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !738, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !738, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !738, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !738, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !738, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !738, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !738, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !738, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !738, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !738, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !735, file: !135, line: 3373, baseType: !771, size: 192)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !772)
!772 = !{!773, !774, !775}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !771, file: !135, line: 403, baseType: !738, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !771, file: !135, line: 404, baseType: !733, size: 64, offset: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !771, file: !135, line: 405, baseType: !733, size: 64, offset: 128)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !735, file: !135, line: 3374, baseType: !777, size: 320)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !778)
!778 = !{!779, !780}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !777, file: !135, line: 1385, baseType: !771, size: 192)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !777, file: !135, line: 1386, baseType: !781, size: 128, offset: 192)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !782, line: 58, baseType: !783)
!782 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !782, line: 54, size: 128, elements: !784)
!784 = !{!785, !787}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !783, file: !782, line: 56, baseType: !786, size: 64)
!786 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !783, file: !782, line: 57, baseType: !788, size: 64, offset: 64)
!788 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !735, file: !135, line: 3375, baseType: !790, size: 256)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !791)
!791 = !{!792, !793}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !790, file: !135, line: 1398, baseType: !771, size: 192)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !790, file: !135, line: 1399, baseType: !794, size: 64, offset: 192)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !796, line: 52, size: 256, elements: !797)
!796 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!797 = !{!798, !799, !800, !801, !802, !803, !804}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !795, file: !796, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !795, file: !796, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !795, file: !796, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !795, file: !796, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !795, file: !796, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !795, file: !796, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !795, file: !796, line: 62, baseType: !805, size: 192, offset: 64)
!805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !786, size: 192, elements: !806)
!806 = !{!807}
!807 = !DISubrange(count: 3)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !735, file: !135, line: 3376, baseType: !809, size: 256)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !810)
!810 = !{!811, !812}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !809, file: !135, line: 1409, baseType: !771, size: 192)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !809, file: !135, line: 1410, baseType: !813, size: 64, offset: 192)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !815, line: 27, size: 192, elements: !816)
!815 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!816 = !{!817, !818}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !814, file: !815, line: 29, baseType: !781, size: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !814, file: !815, line: 30, baseType: !5, size: 32, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !735, file: !135, line: 3377, baseType: !820, size: 256)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !820, file: !135, line: 1438, baseType: !771, size: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !820, file: !135, line: 1439, baseType: !733, size: 64, offset: 192)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !735, file: !135, line: 3378, baseType: !825, size: 256)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !826)
!826 = !{!827, !828, !829}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !825, file: !135, line: 1419, baseType: !771, size: 192)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !825, file: !135, line: 1420, baseType: !662, size: 32, offset: 192)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !825, file: !135, line: 1421, baseType: !830, size: 8, offset: 224)
!830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 8, elements: !831)
!831 = !{!832}
!832 = !DISubrange(count: 1)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !735, file: !135, line: 3379, baseType: !834, size: 320)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !835)
!835 = !{!836, !837, !838}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !834, file: !135, line: 1429, baseType: !771, size: 192)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !834, file: !135, line: 1430, baseType: !733, size: 64, offset: 192)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !834, file: !135, line: 1431, baseType: !733, size: 64, offset: 256)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !735, file: !135, line: 3380, baseType: !840, size: 320)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !841)
!841 = !{!842, !843}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !840, file: !135, line: 1461, baseType: !771, size: 192)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !840, file: !135, line: 1462, baseType: !844, size: 128, offset: 192)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !845, line: 31, size: 128, elements: !846)
!845 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!846 = !{!847, !850, !851}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !844, file: !845, line: 32, baseType: !848, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !844, file: !845, line: 33, baseType: !7, size: 32, offset: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !844, file: !845, line: 34, baseType: !7, size: 32, offset: 96)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !735, file: !135, line: 3381, baseType: !853, size: 384)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !854)
!854 = !{!855, !856, !857, !858, !859}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !853, file: !135, line: 2508, baseType: !771, size: 192)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !853, file: !135, line: 2509, baseType: !726, size: 32, offset: 192)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !853, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !853, file: !135, line: 2511, baseType: !733, size: 64, offset: 256)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !853, file: !135, line: 2512, baseType: !733, size: 64, offset: 320)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !735, file: !135, line: 3382, baseType: !861, size: 896)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !862)
!862 = !{!863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !861, file: !135, line: 2653, baseType: !853, size: 384)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !861, file: !135, line: 2654, baseType: !733, size: 64, offset: 384)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !861, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !861, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !861, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !861, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !861, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !861, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !861, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !861, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !861, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !861, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !861, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !861, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !861, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !861, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !861, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !861, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !861, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !861, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !861, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !861, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !861, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !861, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !861, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !861, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !861, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !861, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !861, file: !135, line: 2705, baseType: !733, size: 64, offset: 576)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !861, file: !135, line: 2706, baseType: !733, size: 64, offset: 640)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !861, file: !135, line: 2707, baseType: !733, size: 64, offset: 704)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !861, file: !135, line: 2708, baseType: !733, size: 64, offset: 768)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !861, file: !135, line: 2711, baseType: !896, size: 64, offset: 832)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !735, file: !135, line: 3383, baseType: !899, size: 960)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !900)
!900 = !{!901, !902}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !899, file: !135, line: 2757, baseType: !861, size: 896)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !899, file: !135, line: 2758, baseType: !903, size: 64, offset: 896)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !671, line: 50, baseType: !904)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !906, line: 240, size: 384, elements: !907)
!906 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!907 = !{!908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !905, file: !906, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !905, file: !906, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !905, file: !906, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !905, file: !906, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !905, file: !906, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !905, file: !906, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !905, file: !906, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !905, file: !906, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !905, file: !906, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !905, file: !906, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !905, file: !906, line: 321, baseType: !919, size: 320, offset: 64)
!919 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !906, line: 315, size: 320, elements: !920)
!920 = !{!921, !1039, !1041, !1104, !1105}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !919, file: !906, line: 316, baseType: !922, size: 64)
!922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 64, elements: !831)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !906, line: 183, baseType: !924)
!924 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !906, line: 166, size: 64, elements: !925)
!925 = !{!926, !927, !928, !929, !930, !938, !939, !951, !954, !1014, !1015, !1016, !1029, !1036}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !924, file: !906, line: 168, baseType: !662, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !924, file: !906, line: 169, baseType: !7, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !924, file: !906, line: 170, baseType: !667, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !924, file: !906, line: 171, baseType: !903, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !924, file: !906, line: 172, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !671, line: 53, baseType: !932)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !906, line: 359, size: 128, elements: !934)
!934 = !{!935, !936}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !933, file: !906, line: 360, baseType: !662, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !933, file: !906, line: 361, baseType: !937, size: 64, offset: 64)
!937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !903, size: 64, elements: !831)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !924, file: !906, line: 173, baseType: !5, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !924, file: !906, line: 174, baseType: !940, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !906, line: 133, baseType: !941)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !906, line: 115, size: 32, elements: !942)
!942 = !{!943, !944, !945, !946, !947, !948, !949, !950}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !941, file: !906, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !941, file: !906, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !941, file: !906, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !941, file: !906, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !941, file: !906, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !941, file: !906, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !941, file: !906, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !941, file: !906, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !924, file: !906, line: 175, baseType: !952, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !906, line: 175, flags: DIFlagFwdDecl)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !924, file: !906, line: 176, baseType: !955, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !957, line: 75, size: 256, elements: !958)
!957 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!958 = !{!959, !973, !974, !975}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !956, file: !957, line: 76, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !957, line: 68, baseType: !962)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !957, line: 63, size: 320, elements: !963)
!963 = !{!964, !966, !967, !968}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !962, file: !957, line: 64, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !962, file: !957, line: 65, baseType: !965, size: 64, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !962, file: !957, line: 66, baseType: !7, size: 32, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !962, file: !957, line: 67, baseType: !969, size: 128, offset: 192)
!969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 128, elements: !971)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !957, line: 29, baseType: !786)
!971 = !{!972}
!972 = !DISubrange(count: 2)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !956, file: !957, line: 77, baseType: !960, size: 64, offset: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !956, file: !957, line: 78, baseType: !7, size: 32, offset: 128)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !956, file: !957, line: 79, baseType: !976, size: 64, offset: 192)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !957, line: 49, baseType: !978)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !957, line: 45, size: 832, elements: !979)
!979 = !{!980, !981, !982}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !978, file: !957, line: 46, baseType: !965, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !978, file: !957, line: 47, baseType: !955, size: 64, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !978, file: !957, line: 48, baseType: !983, size: 704, offset: 128)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !984, line: 164, size: 704, elements: !985)
!984 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!985 = !{!986, !987, !997, !998, !999, !1000, !1001, !1002, !1006, !1010, !1011, !1012, !1013}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !983, file: !984, line: 166, baseType: !788, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !983, file: !984, line: 167, baseType: !988, size: 64, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !984, line: 157, size: 192, elements: !990)
!990 = !{!991, !992, !993}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !989, file: !984, line: 159, baseType: !664, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !989, file: !984, line: 160, baseType: !988, size: 64, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !989, file: !984, line: 161, baseType: !994, size: 32, offset: 128)
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 32, elements: !995)
!995 = !{!996}
!996 = !DISubrange(count: 4)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !983, file: !984, line: 168, baseType: !664, size: 64, offset: 128)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !983, file: !984, line: 169, baseType: !664, size: 64, offset: 192)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !983, file: !984, line: 170, baseType: !664, size: 64, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !983, file: !984, line: 171, baseType: !788, size: 64, offset: 320)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !983, file: !984, line: 172, baseType: !662, size: 32, offset: 384)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !983, file: !984, line: 176, baseType: !1003, size: 64, offset: 448)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!988, !666, !788}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !983, file: !984, line: 177, baseType: !1007, size: 64, offset: 512)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{null, !666, !988}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !983, file: !984, line: 178, baseType: !666, size: 64, offset: 576)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !983, file: !984, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !983, file: !984, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !983, file: !984, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !924, file: !906, line: 177, baseType: !733, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !924, file: !906, line: 178, baseType: !672, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !924, file: !906, line: 179, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !906, line: 150, baseType: !1019)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !906, line: 142, size: 320, elements: !1020)
!1020 = !{!1021, !1022, !1023, !1024, !1027, !1028}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1019, file: !906, line: 144, baseType: !733, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1019, file: !906, line: 145, baseType: !903, size: 64, offset: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1019, file: !906, line: 146, baseType: !903, size: 64, offset: 128)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1019, file: !906, line: 147, baseType: !1025, size: 32, offset: 192)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1026, line: 31, baseType: !662)
!1026 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1019, file: !906, line: 148, baseType: !7, size: 32, offset: 224)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1019, file: !906, line: 149, baseType: !661, size: 8, offset: 256)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !924, file: !906, line: 180, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !906, line: 162, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !906, line: 159, size: 128, elements: !1033)
!1033 = !{!1034, !1035}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1032, file: !906, line: 160, baseType: !733, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1032, file: !906, line: 161, baseType: !788, size: 64, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !924, file: !906, line: 181, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !906, line: 181, flags: DIFlagFwdDecl)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !919, file: !906, line: 317, baseType: !1040, size: 64)
!1040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !788, size: 64, elements: !831)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !919, file: !906, line: 318, baseType: !1042, size: 320)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !906, line: 188, size: 320, elements: !1043)
!1043 = !{!1044, !1046, !1103}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1042, file: !906, line: 190, baseType: !1045, size: 192)
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 192, elements: !806)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1042, file: !906, line: 193, baseType: !1047, size: 64, offset: 192)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !906, line: 206, size: 320, elements: !1049)
!1049 = !{!1050, !1088, !1089, !1090, !1102}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1048, file: !906, line: 208, baseType: !1051, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !671, line: 62, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1054, line: 538, size: 256, elements: !1055)
!1054 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1055 = !{!1056, !1060, !1066, !1079}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1053, file: !1054, line: 539, baseType: !1057, size: 32)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1054, line: 482, size: 32, elements: !1058)
!1058 = !{!1059}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1057, file: !1054, line: 484, baseType: !7, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1053, file: !1054, line: 540, baseType: !1061, size: 192)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1054, line: 488, size: 192, elements: !1062)
!1062 = !{!1063, !1064, !1065}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1061, file: !1054, line: 489, baseType: !1057, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1061, file: !1054, line: 492, baseType: !667, size: 64, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1061, file: !1054, line: 496, baseType: !733, size: 64, offset: 128)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1053, file: !1054, line: 541, baseType: !1067, size: 256)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1054, line: 504, size: 256, elements: !1068)
!1068 = !{!1069, !1070, !1077, !1078}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1067, file: !1054, line: 505, baseType: !1057, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1067, file: !1054, line: 509, baseType: !1071, size: 64, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1054, line: 501, baseType: !1072)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{null, !1075}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1067, file: !1054, line: 510, baseType: !1075, size: 64, offset: 128)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1067, file: !1054, line: 513, baseType: !1051, size: 64, offset: 192)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1053, file: !1054, line: 542, baseType: !1080, size: 128)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1054, line: 530, size: 128, elements: !1081)
!1081 = !{!1082, !1083}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1080, file: !1054, line: 531, baseType: !1057, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1080, file: !1054, line: 534, baseType: !1084, size: 64, offset: 64)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1054, line: 525, baseType: !1085)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!661, !733, !667, !786, !786}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1048, file: !906, line: 211, baseType: !7, size: 32, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1048, file: !906, line: 214, baseType: !788, size: 64, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1048, file: !906, line: 224, baseType: !1091, size: 64, offset: 192)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !906, line: 202, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !906, line: 202, size: 128, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1093, file: !906, line: 202, baseType: !1096, size: 128)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !906, line: 200, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !906, line: 200, size: 128, elements: !1098)
!1098 = !{!1099, !1100, !1101}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1097, file: !906, line: 200, baseType: !7, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1097, file: !906, line: 200, baseType: !7, size: 32, offset: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1097, file: !906, line: 200, baseType: !937, size: 64, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1048, file: !906, line: 234, baseType: !1091, size: 64, offset: 256)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1042, file: !906, line: 197, baseType: !788, size: 64, offset: 256)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !919, file: !906, line: 319, baseType: !795, size: 256)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !919, file: !906, line: 320, baseType: !814, size: 192)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !735, file: !135, line: 3384, baseType: !1107, size: 1472)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !1108)
!1108 = !{!1109, !1130, !1131, !1132, !1133}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1107, file: !135, line: 3115, baseType: !1110, size: 1216)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !1111)
!1111 = !{!1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1110, file: !135, line: 2985, baseType: !899, size: 960)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1110, file: !135, line: 2986, baseType: !733, size: 64, offset: 960)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1110, file: !135, line: 2987, baseType: !733, size: 64, offset: 1024)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1110, file: !135, line: 2988, baseType: !733, size: 64, offset: 1088)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1110, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1110, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1110, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1110, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1110, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1110, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1110, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1110, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1110, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1110, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1110, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1110, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1110, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1110, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1107, file: !135, line: 3117, baseType: !733, size: 64, offset: 1216)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1107, file: !135, line: 3119, baseType: !733, size: 64, offset: 1280)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1107, file: !135, line: 3121, baseType: !733, size: 64, offset: 1344)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1107, file: !135, line: 3123, baseType: !733, size: 64, offset: 1408)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !735, file: !135, line: 3385, baseType: !1135, size: 1088)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !1136)
!1136 = !{!1137, !1138, !1139}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1135, file: !135, line: 2875, baseType: !899, size: 960)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1135, file: !135, line: 2876, baseType: !903, size: 64, offset: 960)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1135, file: !135, line: 2877, baseType: !1140, size: 64, offset: 1024)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !586, line: 172, size: 128, elements: !1142)
!1142 = !{!1143, !1144, !1145, !1146, !1147, !1148, !1149}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1141, file: !586, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1141, file: !586, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1141, file: !586, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1141, file: !586, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1141, file: !586, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1141, file: !586, line: 195, baseType: !7, size: 32, offset: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1141, file: !586, line: 199, baseType: !733, size: 64, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !735, file: !135, line: 3386, baseType: !1110, size: 1216)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !735, file: !135, line: 3387, baseType: !1152, size: 1280)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !1153)
!1153 = !{!1154, !1155}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1152, file: !135, line: 3094, baseType: !1110, size: 1216)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1152, file: !135, line: 3095, baseType: !1140, size: 64, offset: 1216)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !735, file: !135, line: 3388, baseType: !1157, size: 1216)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162, !1163, !1164}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1157, file: !135, line: 2825, baseType: !861, size: 896)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1157, file: !135, line: 2827, baseType: !733, size: 64, offset: 896)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1157, file: !135, line: 2828, baseType: !733, size: 64, offset: 960)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1157, file: !135, line: 2829, baseType: !733, size: 64, offset: 1024)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1157, file: !135, line: 2830, baseType: !733, size: 64, offset: 1088)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1157, file: !135, line: 2831, baseType: !733, size: 64, offset: 1152)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !735, file: !135, line: 3389, baseType: !1166, size: 1024)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !1167)
!1167 = !{!1168, !1169, !1170}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1166, file: !135, line: 2851, baseType: !899, size: 960)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1166, file: !135, line: 2852, baseType: !662, size: 32, offset: 960)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1166, file: !135, line: 2853, baseType: !662, size: 32, offset: 992)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !735, file: !135, line: 3390, baseType: !1172, size: 1024)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !1173)
!1173 = !{!1174, !1175}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1172, file: !135, line: 2858, baseType: !899, size: 960)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1172, file: !135, line: 2859, baseType: !1140, size: 64, offset: 960)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !735, file: !135, line: 3391, baseType: !1177, size: 960)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !1178)
!1178 = !{!1179}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1177, file: !135, line: 2863, baseType: !899, size: 960)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !735, file: !135, line: 3392, baseType: !1181, size: 1472)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !1182)
!1182 = !{!1183}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1181, file: !135, line: 3305, baseType: !1107, size: 1472)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !735, file: !135, line: 3393, baseType: !1185, size: 1792)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !1186)
!1186 = !{!1187, !1188, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1185, file: !135, line: 3249, baseType: !1107, size: 1472)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1185, file: !135, line: 3251, baseType: !1189, size: 64, offset: 1472)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1191, line: 463, size: 1152, elements: !1192)
!1191 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1192 = !{!1193, !1196, !1226, !1227, !1365, !1428, !1429, !1430, !1431, !1432, !1433, !1457, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1190, file: !1191, line: 464, baseType: !1194, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1191, line: 464, flags: DIFlagFwdDecl)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1190, file: !1191, line: 467, baseType: !1197, size: 64, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !343, line: 374, size: 640, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1215, !1216, !1217, !1218, !1219, !1220, !1222, !1224, !1225}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1198, file: !343, line: 377, baseType: !670, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1198, file: !343, line: 378, baseType: !670, size: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1198, file: !343, line: 381, baseType: !1203, size: 64, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !343, line: 282, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !343, line: 282, size: 128, elements: !1206)
!1206 = !{!1207}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1205, file: !343, line: 282, baseType: !1208, size: 128)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !343, line: 281, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !343, line: 281, size: 128, elements: !1210)
!1210 = !{!1211, !1212, !1213}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1209, file: !343, line: 281, baseType: !7, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1209, file: !343, line: 281, baseType: !7, size: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1209, file: !343, line: 281, baseType: !1214, size: 64, offset: 64)
!1214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !670, size: 64, elements: !831)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1198, file: !343, line: 384, baseType: !662, size: 32, offset: 192)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1198, file: !343, line: 387, baseType: !662, size: 32, offset: 224)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1198, file: !343, line: 390, baseType: !662, size: 32, offset: 256)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1198, file: !343, line: 394, baseType: !1203, size: 64, offset: 320)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1198, file: !343, line: 396, baseType: !342, size: 32, offset: 384)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1198, file: !343, line: 399, baseType: !1221, size: 64, offset: 416)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 64, elements: !971)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1198, file: !343, line: 402, baseType: !1223, size: 64, offset: 480)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !971)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1198, file: !343, line: 406, baseType: !662, size: 32, offset: 544)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1198, file: !343, line: 409, baseType: !662, size: 32, offset: 576)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1190, file: !1191, line: 470, baseType: !699, size: 64, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1190, file: !1191, line: 473, baseType: !1228, size: 64, offset: 192)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !586, line: 39, size: 1152, elements: !1230)
!1230 = !{!1231, !1281, !1294, !1307, !1308, !1320, !1321, !1325, !1326, !1327, !1328, !1329}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1229, file: !586, line: 41, baseType: !1232, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1233, line: 144, baseType: !1234)
!1233 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1233, line: 100, size: 896, elements: !1236)
!1236 = !{!1237, !1243, !1248, !1253, !1255, !1258, !1259, !1260, !1261, !1262, !1267, !1269, !1270, !1275, !1280}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1235, file: !1233, line: 102, baseType: !1238, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1233, line: 52, baseType: !1239)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!1242, !1075}
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1233, line: 47, baseType: !7)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1235, file: !1233, line: 105, baseType: !1244, size: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1233, line: 59, baseType: !1245)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!662, !1075, !1075}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1235, file: !1233, line: 108, baseType: !1249, size: 64, offset: 128)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1233, line: 63, baseType: !1250)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{null, !666}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1235, file: !1233, line: 111, baseType: !1254, size: 64, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1235, file: !1233, line: 114, baseType: !1256, size: 64, offset: 256)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1257, line: 46, baseType: !786)
!1257 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1235, file: !1233, line: 117, baseType: !1256, size: 64, offset: 320)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1235, file: !1233, line: 120, baseType: !1256, size: 64, offset: 384)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1235, file: !1233, line: 124, baseType: !7, size: 32, offset: 448)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1235, file: !1233, line: 128, baseType: !7, size: 32, offset: 480)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1235, file: !1233, line: 131, baseType: !1263, size: 64, offset: 512)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1233, line: 75, baseType: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!666, !1256, !1256}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1235, file: !1233, line: 132, baseType: !1268, size: 64, offset: 576)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1233, line: 78, baseType: !1250)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1235, file: !1233, line: 135, baseType: !666, size: 64, offset: 640)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1235, file: !1233, line: 136, baseType: !1271, size: 64, offset: 704)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1233, line: 82, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!666, !666, !1256, !1256}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1235, file: !1233, line: 137, baseType: !1276, size: 64, offset: 768)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1233, line: 83, baseType: !1277)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{null, !666, !666}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1235, file: !1233, line: 141, baseType: !7, size: 32, offset: 832)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1229, file: !586, line: 48, baseType: !1282, size: 64, offset: 64)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !581, line: 35, baseType: !1284)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !581, line: 35, size: 128, elements: !1285)
!1285 = !{!1286}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1284, file: !581, line: 35, baseType: !1287, size: 128)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !581, line: 33, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !581, line: 33, size: 128, elements: !1289)
!1289 = !{!1290, !1291, !1292}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1288, file: !581, line: 33, baseType: !7, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1288, file: !581, line: 33, baseType: !7, size: 32, offset: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1288, file: !581, line: 33, baseType: !1293, size: 64, offset: 64)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !708, size: 64, elements: !831)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1229, file: !586, line: 51, baseType: !1295, size: 64, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !1297)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !1298)
!1298 = !{!1299}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1297, file: !135, line: 183, baseType: !1300, size: 128)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !1301)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !1302)
!1302 = !{!1303, !1304, !1305}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1301, file: !135, line: 182, baseType: !7, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1301, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1301, file: !135, line: 182, baseType: !1306, size: 64, offset: 64)
!1306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 64, elements: !831)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1229, file: !586, line: 54, baseType: !733, size: 64, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1229, file: !586, line: 57, baseType: !1309, size: 128, offset: 256)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1310, line: 31, size: 128, elements: !1311)
!1310 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1311 = !{!1312, !1313, !1314, !1315, !1316, !1317, !1318}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1309, file: !1310, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1309, file: !1310, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1309, file: !1310, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1309, file: !1310, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1309, file: !1310, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1309, file: !1310, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1309, file: !1310, line: 56, baseType: !1319, size: 64, offset: 64)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !671, line: 47, baseType: !955)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1229, file: !586, line: 60, baseType: !1309, size: 128, offset: 384)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1229, file: !586, line: 64, baseType: !1322, size: 64, offset: 512)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1324, line: 33, flags: DIFlagFwdDecl)
!1324 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1229, file: !586, line: 67, baseType: !733, size: 64, offset: 576)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1229, file: !586, line: 73, baseType: !1232, size: 64, offset: 640)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1229, file: !586, line: 77, baseType: !1319, size: 64, offset: 704)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1229, file: !586, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1229, file: !586, line: 82, baseType: !1330, size: 320, offset: 832)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !574, line: 62, size: 320, elements: !1331)
!1331 = !{!1332, !1338, !1339, !1340, !1341, !1348}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1330, file: !574, line: 63, baseType: !1333, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !574, line: 56, size: 128, elements: !1335)
!1335 = !{!1336, !1337}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1334, file: !574, line: 57, baseType: !1333, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1334, file: !574, line: 58, baseType: !830, size: 8, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1330, file: !574, line: 64, baseType: !7, size: 32, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1330, file: !574, line: 66, baseType: !7, size: 32, offset: 96)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1330, file: !574, line: 68, baseType: !661, size: 8, offset: 128)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1330, file: !574, line: 70, baseType: !1342, size: 64, offset: 192)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !574, line: 37, size: 128, elements: !1344)
!1344 = !{!1345, !1346}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1343, file: !574, line: 39, baseType: !1342, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1343, file: !574, line: 40, baseType: !1347, size: 64, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1330, file: !574, line: 71, baseType: !1349, size: 64, offset: 256)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !574, line: 45, size: 320, elements: !1351)
!1351 = !{!1352, !1353}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1350, file: !574, line: 47, baseType: !1349, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1350, file: !574, line: 48, baseType: !1354, size: 256, offset: 64)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !1355)
!1355 = !{!1356, !1358, !1359, !1364}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1354, file: !135, line: 1884, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1354, file: !135, line: 1885, baseType: !1357, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1354, file: !135, line: 1891, baseType: !1360, size: 64, offset: 128)
!1360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1354, file: !135, line: 1891, size: 64, elements: !1361)
!1361 = !{!1362, !1363}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1360, file: !135, line: 1891, baseType: !708, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1360, file: !135, line: 1891, baseType: !733, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1354, file: !135, line: 1892, baseType: !1347, size: 64, offset: 192)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1190, file: !1191, line: 476, baseType: !1366, size: 64, offset: 256)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !330, line: 187, size: 256, elements: !1368)
!1368 = !{!1369, !1370, !1426, !1427}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1367, file: !330, line: 189, baseType: !662, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1367, file: !330, line: 192, baseType: !1371, size: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !330, line: 87, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !330, line: 87, size: 128, elements: !1374)
!1374 = !{!1375}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1373, file: !330, line: 87, baseType: !1376, size: 128)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !330, line: 85, baseType: !1377)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !330, line: 85, size: 128, elements: !1378)
!1378 = !{!1379, !1380, !1381}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1377, file: !330, line: 85, baseType: !7, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1377, file: !330, line: 85, baseType: !7, size: 32, offset: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1377, file: !330, line: 85, baseType: !1382, size: 64, offset: 64)
!1382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1383, size: 64, elements: !831)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !330, line: 84, baseType: !1384)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !330, line: 100, size: 1216, elements: !1386)
!1386 = !{!1387, !1388, !1389, !1390, !1391, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1416, !1424, !1425}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1385, file: !330, line: 102, baseType: !662, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1385, file: !330, line: 105, baseType: !7, size: 32, offset: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1385, file: !330, line: 108, baseType: !672, size: 64, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1385, file: !330, line: 111, baseType: !672, size: 64, offset: 128)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1385, file: !330, line: 114, baseType: !1392, size: 64, offset: 192)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !330, line: 41, size: 64, elements: !1393)
!1393 = !{!1394, !1395}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1392, file: !330, line: 42, baseType: !329, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1392, file: !330, line: 43, baseType: !7, size: 32, offset: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1385, file: !330, line: 117, baseType: !7, size: 32, offset: 256)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1385, file: !330, line: 120, baseType: !7, size: 32, offset: 288)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1385, file: !330, line: 123, baseType: !1371, size: 64, offset: 320)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1385, file: !330, line: 126, baseType: !1384, size: 64, offset: 384)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1385, file: !330, line: 129, baseType: !1384, size: 64, offset: 448)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1385, file: !330, line: 132, baseType: !666, size: 64, offset: 512)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1385, file: !330, line: 139, baseType: !733, size: 64, offset: 576)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1385, file: !330, line: 143, baseType: !781, size: 128, offset: 640)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1385, file: !330, line: 146, baseType: !781, size: 128, offset: 768)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1385, file: !330, line: 148, baseType: !661, size: 8, offset: 896)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1385, file: !330, line: 149, baseType: !661, size: 8, offset: 904)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1385, file: !330, line: 153, baseType: !338, size: 32, offset: 928)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1385, file: !330, line: 156, baseType: !1409, size: 64, offset: 960)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !330, line: 48, size: 320, elements: !1411)
!1411 = !{!1412, !1413, !1414, !1415}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1410, file: !330, line: 50, baseType: !708, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1410, file: !330, line: 59, baseType: !781, size: 128, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1410, file: !330, line: 64, baseType: !661, size: 8, offset: 192)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1410, file: !330, line: 67, baseType: !1409, size: 64, offset: 256)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1385, file: !330, line: 159, baseType: !1417, size: 64, offset: 1024)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !330, line: 72, size: 256, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1423}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1418, file: !330, line: 74, baseType: !689, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1418, file: !330, line: 77, baseType: !1417, size: 64, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1418, file: !330, line: 78, baseType: !1417, size: 64, offset: 128)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1418, file: !330, line: 81, baseType: !1417, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1385, file: !330, line: 162, baseType: !661, size: 8, offset: 1088)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1385, file: !330, line: 166, baseType: !733, size: 64, offset: 1152)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1367, file: !330, line: 197, baseType: !1232, size: 64, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1367, file: !330, line: 200, baseType: !1384, size: 64, offset: 192)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1190, file: !1191, line: 479, baseType: !1232, size: 64, offset: 320)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1190, file: !1191, line: 484, baseType: !733, size: 64, offset: 384)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1190, file: !1191, line: 488, baseType: !733, size: 64, offset: 448)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1190, file: !1191, line: 493, baseType: !733, size: 64, offset: 512)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1190, file: !1191, line: 496, baseType: !733, size: 64, offset: 576)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1190, file: !1191, line: 501, baseType: !1434, size: 64, offset: 640)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !354, line: 2355, size: 576, elements: !1436)
!1436 = !{!1437, !1440, !1441, !1442, !1443, !1445, !1446, !1451, !1452, !1453, !1454, !1455, !1456}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1435, file: !354, line: 2356, baseType: !1438, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !354, line: 2356, flags: DIFlagFwdDecl)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1435, file: !354, line: 2357, baseType: !667, size: 64, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1435, file: !354, line: 2358, baseType: !662, size: 32, offset: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1435, file: !354, line: 2359, baseType: !662, size: 32, offset: 160)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1435, file: !354, line: 2360, baseType: !1444, size: 128, offset: 192)
!1444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 128, elements: !995)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1435, file: !354, line: 2364, baseType: !662, size: 32, offset: 320)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1435, file: !354, line: 2367, baseType: !1447, size: 128, offset: 384)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !354, line: 2349, size: 128, elements: !1448)
!1448 = !{!1449, !1450}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1447, file: !354, line: 2351, baseType: !903, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1447, file: !354, line: 2352, baseType: !788, size: 64, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1435, file: !354, line: 2371, baseType: !353, size: 32, offset: 512)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1435, file: !354, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1435, file: !354, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1435, file: !354, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1435, file: !354, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1435, file: !354, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1190, file: !1191, line: 504, baseType: !1458, size: 64, offset: 704)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1191, line: 504, flags: DIFlagFwdDecl)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1190, file: !1191, line: 507, baseType: !1232, size: 64, offset: 768)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1190, file: !1191, line: 510, baseType: !662, size: 32, offset: 832)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1190, file: !1191, line: 513, baseType: !662, size: 32, offset: 864)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1190, file: !1191, line: 516, baseType: !726, size: 32, offset: 896)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1190, file: !1191, line: 519, baseType: !726, size: 32, offset: 928)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1190, file: !1191, line: 522, baseType: !7, size: 32, offset: 960)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1190, file: !1191, line: 523, baseType: !7, size: 32, offset: 992)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1190, file: !1191, line: 528, baseType: !667, size: 64, offset: 1024)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1190, file: !1191, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1190, file: !1191, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1190, file: !1191, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1190, file: !1191, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1190, file: !1191, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1190, file: !1191, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1190, file: !1191, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1190, file: !1191, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1190, file: !1191, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1190, file: !1191, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1190, file: !1191, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1190, file: !1191, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1190, file: !1191, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1190, file: !1191, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1190, file: !1191, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1190, file: !1191, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1185, file: !135, line: 3254, baseType: !733, size: 64, offset: 1536)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1185, file: !135, line: 3257, baseType: !733, size: 64, offset: 1600)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1185, file: !135, line: 3258, baseType: !733, size: 64, offset: 1664)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1185, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1185, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1185, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1185, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1185, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1185, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1185, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1185, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1185, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1185, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1185, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1185, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1185, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1185, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1185, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1185, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1185, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1185, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !735, file: !135, line: 3394, baseType: !1506, size: 1344)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1506, file: !135, line: 2280, baseType: !771, size: 192)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1506, file: !135, line: 2281, baseType: !733, size: 64, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1506, file: !135, line: 2282, baseType: !733, size: 64, offset: 256)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1506, file: !135, line: 2283, baseType: !733, size: 64, offset: 320)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1506, file: !135, line: 2284, baseType: !733, size: 64, offset: 384)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1506, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1506, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1506, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1506, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1506, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1506, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1506, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1506, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1506, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1506, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1506, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1506, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1506, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1506, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1506, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1506, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1506, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1506, file: !135, line: 2306, baseType: !1025, size: 32, offset: 544)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1506, file: !135, line: 2307, baseType: !733, size: 64, offset: 576)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1506, file: !135, line: 2308, baseType: !733, size: 64, offset: 640)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1506, file: !135, line: 2314, baseType: !1534, size: 64, offset: 704)
!1534 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !1535)
!1535 = !{!1536, !1537, !1538}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1534, file: !135, line: 2310, baseType: !662, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1534, file: !135, line: 2311, baseType: !667, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1534, file: !135, line: 2312, baseType: !1539, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1506, file: !135, line: 2315, baseType: !733, size: 64, offset: 768)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1506, file: !135, line: 2316, baseType: !733, size: 64, offset: 832)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1506, file: !135, line: 2317, baseType: !733, size: 64, offset: 896)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1506, file: !135, line: 2318, baseType: !733, size: 64, offset: 960)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1506, file: !135, line: 2319, baseType: !733, size: 64, offset: 1024)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1506, file: !135, line: 2320, baseType: !733, size: 64, offset: 1088)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1506, file: !135, line: 2321, baseType: !733, size: 64, offset: 1152)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1506, file: !135, line: 2322, baseType: !733, size: 64, offset: 1216)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1506, file: !135, line: 2324, baseType: !1550, size: 64, offset: 1280)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !735, file: !135, line: 3395, baseType: !1553, size: 320)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !1554)
!1554 = !{!1555, !1556, !1557}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1553, file: !135, line: 1470, baseType: !771, size: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1553, file: !135, line: 1471, baseType: !733, size: 64, offset: 192)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1553, file: !135, line: 1472, baseType: !733, size: 64, offset: 256)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !735, file: !135, line: 3396, baseType: !1559, size: 320)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !1560)
!1560 = !{!1561, !1562, !1563}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1559, file: !135, line: 1483, baseType: !771, size: 192)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1559, file: !135, line: 1484, baseType: !662, size: 32, offset: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1559, file: !135, line: 1485, baseType: !1306, size: 64, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !735, file: !135, line: 3397, baseType: !1565, size: 384)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1565, file: !135, line: 1830, baseType: !771, size: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1565, file: !135, line: 1831, baseType: !726, size: 32, offset: 192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1565, file: !135, line: 1832, baseType: !733, size: 64, offset: 256)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1565, file: !135, line: 1835, baseType: !1306, size: 64, offset: 320)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !735, file: !135, line: 3398, baseType: !1572, size: 704)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1583}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1572, file: !135, line: 1899, baseType: !771, size: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1572, file: !135, line: 1902, baseType: !733, size: 64, offset: 192)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1572, file: !135, line: 1905, baseType: !708, size: 64, offset: 256)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1572, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1572, file: !135, line: 1911, baseType: !1579, size: 64, offset: 384)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !586, line: 117, size: 128, elements: !1581)
!1581 = !{!1582}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1580, file: !586, line: 120, baseType: !1309, size: 128)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1572, file: !135, line: 1914, baseType: !1354, size: 256, offset: 448)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !735, file: !135, line: 3399, baseType: !1585, size: 704)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !1586)
!1586 = !{!1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1585, file: !135, line: 2009, baseType: !771, size: 192)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1585, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1585, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1585, file: !135, line: 2014, baseType: !726, size: 32, offset: 224)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1585, file: !135, line: 2016, baseType: !733, size: 64, offset: 256)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1585, file: !135, line: 2017, baseType: !1295, size: 64, offset: 320)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1585, file: !135, line: 2019, baseType: !733, size: 64, offset: 384)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1585, file: !135, line: 2020, baseType: !733, size: 64, offset: 448)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1585, file: !135, line: 2021, baseType: !733, size: 64, offset: 512)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1585, file: !135, line: 2022, baseType: !733, size: 64, offset: 576)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1585, file: !135, line: 2023, baseType: !733, size: 64, offset: 640)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !735, file: !135, line: 3400, baseType: !1599, size: 832)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !1600)
!1600 = !{!1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1599, file: !135, line: 2431, baseType: !771, size: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1599, file: !135, line: 2433, baseType: !733, size: 64, offset: 192)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1599, file: !135, line: 2434, baseType: !733, size: 64, offset: 256)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1599, file: !135, line: 2435, baseType: !733, size: 64, offset: 320)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1599, file: !135, line: 2436, baseType: !733, size: 64, offset: 384)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1599, file: !135, line: 2437, baseType: !1295, size: 64, offset: 448)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1599, file: !135, line: 2438, baseType: !733, size: 64, offset: 512)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1599, file: !135, line: 2440, baseType: !733, size: 64, offset: 576)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1599, file: !135, line: 2441, baseType: !733, size: 64, offset: 640)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1599, file: !135, line: 2443, baseType: !1611, size: 128, offset: 704)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !1613)
!1613 = !{!1614}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1612, file: !135, line: 182, baseType: !1300, size: 128)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !735, file: !135, line: 3401, baseType: !1616, size: 320)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !1617)
!1617 = !{!1618, !1619, !1626}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1616, file: !135, line: 3329, baseType: !771, size: 192)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1616, file: !135, line: 3330, baseType: !1620, size: 64, offset: 192)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !1622)
!1622 = !{!1623, !1624, !1625}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1621, file: !135, line: 3322, baseType: !1620, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1621, file: !135, line: 3323, baseType: !1620, size: 64, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1621, file: !135, line: 3324, baseType: !733, size: 64, offset: 128)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1616, file: !135, line: 3331, baseType: !1620, size: 64, offset: 256)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !735, file: !135, line: 3402, baseType: !1628, size: 256)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !1629)
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1628, file: !135, line: 1541, baseType: !771, size: 192)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1628, file: !135, line: 1542, baseType: !1632, size: 64, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !1635)
!1635 = !{!1636}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1634, file: !135, line: 1538, baseType: !1637, size: 192)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !1639)
!1639 = !{!1640, !1641, !1642}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1638, file: !135, line: 1537, baseType: !7, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1638, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1638, file: !135, line: 1537, baseType: !1643, size: 128, offset: 64)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1644, size: 128, elements: !831)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !1646)
!1646 = !{!1647, !1648}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1645, file: !135, line: 1533, baseType: !733, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1645, file: !135, line: 1534, baseType: !733, size: 64, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !735, file: !135, line: 3403, baseType: !1650, size: 512)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !1651)
!1651 = !{!1652, !1653, !1654, !1655, !1661, !1662, !1663}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1650, file: !135, line: 1939, baseType: !771, size: 192)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1650, file: !135, line: 1940, baseType: !726, size: 32, offset: 192)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1650, file: !135, line: 1941, baseType: !358, size: 32, offset: 224)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1650, file: !135, line: 1946, baseType: !1656, size: 32, offset: 256)
!1656 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !1657)
!1657 = !{!1658, !1659, !1660}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1656, file: !135, line: 1943, baseType: !376, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1656, file: !135, line: 1944, baseType: !383, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1656, file: !135, line: 1945, baseType: !134, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1650, file: !135, line: 1950, baseType: !698, size: 64, offset: 320)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1650, file: !135, line: 1951, baseType: !698, size: 64, offset: 384)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1650, file: !135, line: 1953, baseType: !1306, size: 64, offset: 448)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !735, file: !135, line: 3404, baseType: !1665, size: 1664)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !1666)
!1666 = !{!1667, !1668}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1665, file: !135, line: 3338, baseType: !771, size: 192)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1665, file: !135, line: 3341, baseType: !1669, size: 1472, offset: 192)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1670, line: 410, size: 1472, elements: !1671)
!1670 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1671 = !{!1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1669, file: !1670, line: 412, baseType: !662, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1669, file: !1670, line: 413, baseType: !662, size: 32, offset: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1669, file: !1670, line: 414, baseType: !662, size: 32, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1669, file: !1670, line: 415, baseType: !662, size: 32, offset: 96)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1669, file: !1670, line: 416, baseType: !662, size: 32, offset: 128)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1669, file: !1670, line: 417, baseType: !662, size: 32, offset: 160)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1669, file: !1670, line: 418, baseType: !661, size: 8, offset: 192)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1669, file: !1670, line: 419, baseType: !661, size: 8, offset: 200)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1669, file: !1670, line: 420, baseType: !1681, size: 8, offset: 208)
!1681 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1669, file: !1670, line: 421, baseType: !1681, size: 8, offset: 216)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1669, file: !1670, line: 422, baseType: !1681, size: 8, offset: 224)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1669, file: !1670, line: 423, baseType: !1681, size: 8, offset: 232)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1669, file: !1670, line: 424, baseType: !1681, size: 8, offset: 240)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1669, file: !1670, line: 425, baseType: !1681, size: 8, offset: 248)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1669, file: !1670, line: 426, baseType: !1681, size: 8, offset: 256)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1669, file: !1670, line: 427, baseType: !1681, size: 8, offset: 264)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1669, file: !1670, line: 428, baseType: !1681, size: 8, offset: 272)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1669, file: !1670, line: 429, baseType: !1681, size: 8, offset: 280)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1669, file: !1670, line: 430, baseType: !1681, size: 8, offset: 288)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1669, file: !1670, line: 431, baseType: !1681, size: 8, offset: 296)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1669, file: !1670, line: 432, baseType: !1681, size: 8, offset: 304)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1669, file: !1670, line: 433, baseType: !1681, size: 8, offset: 312)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1669, file: !1670, line: 434, baseType: !1681, size: 8, offset: 320)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1669, file: !1670, line: 435, baseType: !1681, size: 8, offset: 328)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1669, file: !1670, line: 436, baseType: !1681, size: 8, offset: 336)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1669, file: !1670, line: 437, baseType: !1681, size: 8, offset: 344)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1669, file: !1670, line: 438, baseType: !1681, size: 8, offset: 352)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1669, file: !1670, line: 439, baseType: !1681, size: 8, offset: 360)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1669, file: !1670, line: 440, baseType: !1681, size: 8, offset: 368)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1669, file: !1670, line: 441, baseType: !1681, size: 8, offset: 376)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1669, file: !1670, line: 442, baseType: !1681, size: 8, offset: 384)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1669, file: !1670, line: 443, baseType: !1681, size: 8, offset: 392)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1669, file: !1670, line: 444, baseType: !1681, size: 8, offset: 400)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1669, file: !1670, line: 445, baseType: !1681, size: 8, offset: 408)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1669, file: !1670, line: 446, baseType: !1681, size: 8, offset: 416)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1669, file: !1670, line: 447, baseType: !1681, size: 8, offset: 424)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1669, file: !1670, line: 448, baseType: !1681, size: 8, offset: 432)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1669, file: !1670, line: 449, baseType: !1681, size: 8, offset: 440)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1669, file: !1670, line: 450, baseType: !1681, size: 8, offset: 448)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1669, file: !1670, line: 451, baseType: !1681, size: 8, offset: 456)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1669, file: !1670, line: 452, baseType: !1681, size: 8, offset: 464)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1669, file: !1670, line: 453, baseType: !1681, size: 8, offset: 472)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1669, file: !1670, line: 454, baseType: !1681, size: 8, offset: 480)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1669, file: !1670, line: 455, baseType: !1681, size: 8, offset: 488)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1669, file: !1670, line: 456, baseType: !1681, size: 8, offset: 496)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1669, file: !1670, line: 457, baseType: !1681, size: 8, offset: 504)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1669, file: !1670, line: 458, baseType: !1681, size: 8, offset: 512)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1669, file: !1670, line: 459, baseType: !1681, size: 8, offset: 520)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1669, file: !1670, line: 460, baseType: !1681, size: 8, offset: 528)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1669, file: !1670, line: 461, baseType: !1681, size: 8, offset: 536)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1669, file: !1670, line: 462, baseType: !1681, size: 8, offset: 544)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1669, file: !1670, line: 463, baseType: !1681, size: 8, offset: 552)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1669, file: !1670, line: 464, baseType: !1681, size: 8, offset: 560)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1669, file: !1670, line: 465, baseType: !1681, size: 8, offset: 568)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1669, file: !1670, line: 466, baseType: !1681, size: 8, offset: 576)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1669, file: !1670, line: 467, baseType: !1681, size: 8, offset: 584)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1669, file: !1670, line: 468, baseType: !1681, size: 8, offset: 592)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1669, file: !1670, line: 469, baseType: !1681, size: 8, offset: 600)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1669, file: !1670, line: 470, baseType: !1681, size: 8, offset: 608)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1669, file: !1670, line: 471, baseType: !1681, size: 8, offset: 616)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1669, file: !1670, line: 472, baseType: !1681, size: 8, offset: 624)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1669, file: !1670, line: 473, baseType: !1681, size: 8, offset: 632)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1669, file: !1670, line: 474, baseType: !1681, size: 8, offset: 640)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1669, file: !1670, line: 475, baseType: !1681, size: 8, offset: 648)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1669, file: !1670, line: 476, baseType: !1681, size: 8, offset: 656)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1669, file: !1670, line: 477, baseType: !1681, size: 8, offset: 664)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1669, file: !1670, line: 478, baseType: !1681, size: 8, offset: 672)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1669, file: !1670, line: 479, baseType: !1681, size: 8, offset: 680)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1669, file: !1670, line: 480, baseType: !1681, size: 8, offset: 688)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1669, file: !1670, line: 481, baseType: !1681, size: 8, offset: 696)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1669, file: !1670, line: 482, baseType: !1681, size: 8, offset: 704)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1669, file: !1670, line: 483, baseType: !1681, size: 8, offset: 712)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1669, file: !1670, line: 484, baseType: !1681, size: 8, offset: 720)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1669, file: !1670, line: 485, baseType: !1681, size: 8, offset: 728)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1669, file: !1670, line: 486, baseType: !1681, size: 8, offset: 736)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1669, file: !1670, line: 487, baseType: !1681, size: 8, offset: 744)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1669, file: !1670, line: 488, baseType: !1681, size: 8, offset: 752)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1669, file: !1670, line: 489, baseType: !1681, size: 8, offset: 760)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1669, file: !1670, line: 490, baseType: !1681, size: 8, offset: 768)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1669, file: !1670, line: 491, baseType: !1681, size: 8, offset: 776)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1669, file: !1670, line: 492, baseType: !1681, size: 8, offset: 784)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1669, file: !1670, line: 493, baseType: !1681, size: 8, offset: 792)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1669, file: !1670, line: 494, baseType: !1681, size: 8, offset: 800)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1669, file: !1670, line: 495, baseType: !1681, size: 8, offset: 808)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1669, file: !1670, line: 496, baseType: !1681, size: 8, offset: 816)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1669, file: !1670, line: 497, baseType: !1681, size: 8, offset: 824)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1669, file: !1670, line: 498, baseType: !1681, size: 8, offset: 832)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1669, file: !1670, line: 499, baseType: !1681, size: 8, offset: 840)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1669, file: !1670, line: 500, baseType: !1681, size: 8, offset: 848)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1669, file: !1670, line: 501, baseType: !1681, size: 8, offset: 856)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1669, file: !1670, line: 502, baseType: !1681, size: 8, offset: 864)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1669, file: !1670, line: 503, baseType: !1681, size: 8, offset: 872)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1669, file: !1670, line: 504, baseType: !1681, size: 8, offset: 880)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1669, file: !1670, line: 505, baseType: !1681, size: 8, offset: 888)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1669, file: !1670, line: 506, baseType: !1681, size: 8, offset: 896)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1669, file: !1670, line: 507, baseType: !1681, size: 8, offset: 904)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1669, file: !1670, line: 508, baseType: !1681, size: 8, offset: 912)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1669, file: !1670, line: 509, baseType: !1681, size: 8, offset: 920)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1669, file: !1670, line: 510, baseType: !1681, size: 8, offset: 928)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1669, file: !1670, line: 511, baseType: !1681, size: 8, offset: 936)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1669, file: !1670, line: 512, baseType: !1681, size: 8, offset: 944)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1669, file: !1670, line: 513, baseType: !1681, size: 8, offset: 952)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1669, file: !1670, line: 514, baseType: !1681, size: 8, offset: 960)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1669, file: !1670, line: 515, baseType: !1681, size: 8, offset: 968)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1669, file: !1670, line: 516, baseType: !1681, size: 8, offset: 976)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1669, file: !1670, line: 517, baseType: !1681, size: 8, offset: 984)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1669, file: !1670, line: 518, baseType: !1681, size: 8, offset: 992)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1669, file: !1670, line: 519, baseType: !1681, size: 8, offset: 1000)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1669, file: !1670, line: 520, baseType: !1681, size: 8, offset: 1008)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1669, file: !1670, line: 521, baseType: !1681, size: 8, offset: 1016)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1669, file: !1670, line: 522, baseType: !1681, size: 8, offset: 1024)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1669, file: !1670, line: 523, baseType: !1681, size: 8, offset: 1032)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1669, file: !1670, line: 524, baseType: !1681, size: 8, offset: 1040)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1669, file: !1670, line: 525, baseType: !1681, size: 8, offset: 1048)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1669, file: !1670, line: 526, baseType: !1681, size: 8, offset: 1056)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1669, file: !1670, line: 527, baseType: !1681, size: 8, offset: 1064)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1669, file: !1670, line: 528, baseType: !1681, size: 8, offset: 1072)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1669, file: !1670, line: 529, baseType: !1681, size: 8, offset: 1080)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1669, file: !1670, line: 530, baseType: !1681, size: 8, offset: 1088)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1669, file: !1670, line: 531, baseType: !1681, size: 8, offset: 1096)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1669, file: !1670, line: 532, baseType: !1681, size: 8, offset: 1104)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1669, file: !1670, line: 533, baseType: !1681, size: 8, offset: 1112)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1669, file: !1670, line: 534, baseType: !1681, size: 8, offset: 1120)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1669, file: !1670, line: 535, baseType: !1681, size: 8, offset: 1128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1669, file: !1670, line: 536, baseType: !1681, size: 8, offset: 1136)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1669, file: !1670, line: 537, baseType: !1681, size: 8, offset: 1144)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1669, file: !1670, line: 538, baseType: !1681, size: 8, offset: 1152)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1669, file: !1670, line: 539, baseType: !1681, size: 8, offset: 1160)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1669, file: !1670, line: 540, baseType: !1681, size: 8, offset: 1168)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1669, file: !1670, line: 541, baseType: !1681, size: 8, offset: 1176)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1669, file: !1670, line: 542, baseType: !1681, size: 8, offset: 1184)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1669, file: !1670, line: 543, baseType: !1681, size: 8, offset: 1192)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1669, file: !1670, line: 544, baseType: !1681, size: 8, offset: 1200)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1669, file: !1670, line: 545, baseType: !1681, size: 8, offset: 1208)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1669, file: !1670, line: 546, baseType: !1681, size: 8, offset: 1216)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1669, file: !1670, line: 547, baseType: !1681, size: 8, offset: 1224)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1669, file: !1670, line: 548, baseType: !1681, size: 8, offset: 1232)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1669, file: !1670, line: 549, baseType: !1681, size: 8, offset: 1240)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1669, file: !1670, line: 550, baseType: !1681, size: 8, offset: 1248)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1669, file: !1670, line: 551, baseType: !1681, size: 8, offset: 1256)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1669, file: !1670, line: 552, baseType: !1681, size: 8, offset: 1264)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1669, file: !1670, line: 553, baseType: !1681, size: 8, offset: 1272)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1669, file: !1670, line: 554, baseType: !1681, size: 8, offset: 1280)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1669, file: !1670, line: 555, baseType: !1681, size: 8, offset: 1288)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1669, file: !1670, line: 556, baseType: !1681, size: 8, offset: 1296)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1669, file: !1670, line: 557, baseType: !1681, size: 8, offset: 1304)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1669, file: !1670, line: 558, baseType: !1681, size: 8, offset: 1312)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1669, file: !1670, line: 559, baseType: !1681, size: 8, offset: 1320)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1669, file: !1670, line: 560, baseType: !1681, size: 8, offset: 1328)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1669, file: !1670, line: 561, baseType: !1681, size: 8, offset: 1336)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1669, file: !1670, line: 562, baseType: !1681, size: 8, offset: 1344)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1669, file: !1670, line: 563, baseType: !1681, size: 8, offset: 1352)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1669, file: !1670, line: 564, baseType: !1681, size: 8, offset: 1360)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1669, file: !1670, line: 565, baseType: !1681, size: 8, offset: 1368)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1669, file: !1670, line: 566, baseType: !1681, size: 8, offset: 1376)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1669, file: !1670, line: 567, baseType: !1681, size: 8, offset: 1384)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1669, file: !1670, line: 568, baseType: !1681, size: 8, offset: 1392)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1669, file: !1670, line: 569, baseType: !1681, size: 8, offset: 1400)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1669, file: !1670, line: 570, baseType: !1681, size: 8, offset: 1408)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1669, file: !1670, line: 571, baseType: !1681, size: 8, offset: 1416)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1669, file: !1670, line: 572, baseType: !1681, size: 8, offset: 1424)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1669, file: !1670, line: 573, baseType: !1681, size: 8, offset: 1432)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1669, file: !1670, line: 574, baseType: !1681, size: 8, offset: 1440)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !735, file: !135, line: 3405, baseType: !1837, size: 384)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !1838)
!1838 = !{!1839, !1840}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1837, file: !135, line: 3353, baseType: !771, size: 192)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1837, file: !135, line: 3356, baseType: !1841, size: 192, offset: 192)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1670, line: 578, size: 192, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1841, file: !1670, line: 580, baseType: !662, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1841, file: !1670, line: 581, baseType: !662, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1841, file: !1670, line: 582, baseType: !662, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1841, file: !1670, line: 583, baseType: !662, size: 32, offset: 96)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1841, file: !1670, line: 584, baseType: !661, size: 8, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1841, file: !1670, line: 585, baseType: !661, size: 8, offset: 136)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1841, file: !1670, line: 586, baseType: !661, size: 8, offset: 144)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1841, file: !1670, line: 587, baseType: !661, size: 8, offset: 152)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1841, file: !1670, line: 588, baseType: !661, size: 8, offset: 160)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1841, file: !1670, line: 589, baseType: !661, size: 8, offset: 168)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1841, file: !1670, line: 590, baseType: !661, size: 8, offset: 176)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !710, file: !581, line: 739, baseType: !1855, size: 448)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !581, line: 350, size: 448, elements: !1856)
!1856 = !{!1857, !1863}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1855, file: !581, line: 353, baseType: !1858, size: 384)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !581, line: 333, size: 384, elements: !1859)
!1859 = !{!1860, !1861, !1862}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1858, file: !581, line: 336, baseType: !713, size: 256)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1858, file: !581, line: 343, baseType: !1342, size: 64, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1858, file: !581, line: 344, baseType: !1349, size: 64, offset: 320)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1855, file: !581, line: 359, baseType: !1306, size: 64, offset: 384)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !710, file: !581, line: 740, baseType: !1865, size: 512)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !581, line: 365, size: 512, elements: !1866)
!1866 = !{!1867, !1868, !1869}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1865, file: !581, line: 368, baseType: !1858, size: 384)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1865, file: !581, line: 373, baseType: !733, size: 64, offset: 384)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1865, file: !581, line: 374, baseType: !733, size: 64, offset: 448)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !710, file: !581, line: 741, baseType: !1871, size: 576)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !581, line: 380, size: 576, elements: !1872)
!1872 = !{!1873, !1874}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1871, file: !581, line: 383, baseType: !1865, size: 512)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1871, file: !581, line: 389, baseType: !1306, size: 64, offset: 512)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !710, file: !581, line: 742, baseType: !1876, size: 320)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !581, line: 395, size: 320, elements: !1877)
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1876, file: !581, line: 397, baseType: !713, size: 256)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1876, file: !581, line: 400, baseType: !698, size: 64, offset: 256)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !710, file: !581, line: 743, baseType: !1881, size: 448)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !581, line: 406, size: 448, elements: !1882)
!1882 = !{!1883, !1884, !1885, !1886}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1881, file: !581, line: 408, baseType: !713, size: 256)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1881, file: !581, line: 412, baseType: !733, size: 64, offset: 256)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1881, file: !581, line: 420, baseType: !733, size: 64, offset: 320)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1881, file: !581, line: 423, baseType: !698, size: 64, offset: 384)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !710, file: !581, line: 744, baseType: !1888, size: 384)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !581, line: 429, size: 384, elements: !1889)
!1889 = !{!1890, !1891, !1892}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1888, file: !581, line: 431, baseType: !713, size: 256)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1888, file: !581, line: 434, baseType: !733, size: 64, offset: 256)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1888, file: !581, line: 437, baseType: !698, size: 64, offset: 320)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !710, file: !581, line: 745, baseType: !1894, size: 384)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !581, line: 443, size: 384, elements: !1895)
!1895 = !{!1896, !1897, !1898}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1894, file: !581, line: 445, baseType: !713, size: 256)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1894, file: !581, line: 449, baseType: !733, size: 64, offset: 256)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1894, file: !581, line: 453, baseType: !698, size: 64, offset: 320)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !710, file: !581, line: 746, baseType: !1900, size: 320)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !581, line: 459, size: 320, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1900, file: !581, line: 461, baseType: !713, size: 256)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1900, file: !581, line: 464, baseType: !733, size: 64, offset: 256)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !710, file: !581, line: 747, baseType: !1905, size: 768)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !581, line: 469, size: 768, elements: !1906)
!1906 = !{!1907, !1908, !1909, !1910, !1911}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1905, file: !581, line: 471, baseType: !713, size: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1905, file: !581, line: 474, baseType: !7, size: 32, offset: 256)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1905, file: !581, line: 475, baseType: !7, size: 32, offset: 288)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1905, file: !581, line: 478, baseType: !733, size: 64, offset: 320)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1905, file: !581, line: 481, baseType: !1912, size: 384, offset: 384)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1913, size: 384, elements: !831)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !1914)
!1914 = !{!1915, !1916, !1917}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1913, file: !135, line: 1920, baseType: !1354, size: 256)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1913, file: !135, line: 1921, baseType: !733, size: 64, offset: 256)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1913, file: !135, line: 1922, baseType: !726, size: 32, offset: 320)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !710, file: !581, line: 748, baseType: !1919, size: 320)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !581, line: 487, size: 320, elements: !1920)
!1920 = !{!1921, !1922}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1919, file: !581, line: 490, baseType: !713, size: 256)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1919, file: !581, line: 494, baseType: !662, size: 32, offset: 256)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !710, file: !581, line: 749, baseType: !1924, size: 384)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !581, line: 500, size: 384, elements: !1925)
!1925 = !{!1926, !1927, !1928}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1924, file: !581, line: 502, baseType: !713, size: 256)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1924, file: !581, line: 506, baseType: !698, size: 64, offset: 256)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1924, file: !581, line: 510, baseType: !698, size: 64, offset: 320)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !710, file: !581, line: 750, baseType: !1930, size: 320)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !581, line: 529, size: 320, elements: !1931)
!1931 = !{!1932, !1933}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1930, file: !581, line: 531, baseType: !713, size: 256)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1930, file: !581, line: 540, baseType: !698, size: 64, offset: 256)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !710, file: !581, line: 751, baseType: !1935, size: 704)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !581, line: 546, size: 704, elements: !1936)
!1936 = !{!1937, !1938, !1939, !1940, !1941, !1942, !1943}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1935, file: !581, line: 549, baseType: !1865, size: 512)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1935, file: !581, line: 553, baseType: !667, size: 64, offset: 512)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1935, file: !581, line: 557, baseType: !661, size: 8, offset: 576)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1935, file: !581, line: 558, baseType: !661, size: 8, offset: 584)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1935, file: !581, line: 559, baseType: !661, size: 8, offset: 592)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1935, file: !581, line: 560, baseType: !661, size: 8, offset: 600)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1935, file: !581, line: 566, baseType: !1306, size: 64, offset: 640)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !710, file: !581, line: 752, baseType: !1945, size: 384)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !581, line: 571, size: 384, elements: !1946)
!1946 = !{!1947, !1948}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1945, file: !581, line: 573, baseType: !1876, size: 320)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1945, file: !581, line: 577, baseType: !733, size: 64, offset: 320)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !710, file: !581, line: 753, baseType: !1950, size: 576)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !581, line: 600, size: 576, elements: !1951)
!1951 = !{!1952, !1953, !1954, !1955, !1964}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1950, file: !581, line: 602, baseType: !1876, size: 320)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1950, file: !581, line: 605, baseType: !733, size: 64, offset: 320)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1950, file: !581, line: 609, baseType: !1256, size: 64, offset: 384)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1950, file: !581, line: 612, baseType: !1956, size: 64, offset: 448)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !581, line: 581, size: 320, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1962, !1963}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1957, file: !581, line: 583, baseType: !134, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1957, file: !581, line: 586, baseType: !733, size: 64, offset: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1957, file: !581, line: 589, baseType: !733, size: 64, offset: 128)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1957, file: !581, line: 592, baseType: !733, size: 64, offset: 192)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1957, file: !581, line: 595, baseType: !733, size: 64, offset: 256)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1950, file: !581, line: 616, baseType: !698, size: 64, offset: 512)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !710, file: !581, line: 754, baseType: !1966, size: 512)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !581, line: 622, size: 512, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1966, file: !581, line: 624, baseType: !1876, size: 320)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1966, file: !581, line: 628, baseType: !733, size: 64, offset: 320)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1966, file: !581, line: 632, baseType: !733, size: 64, offset: 384)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1966, file: !581, line: 636, baseType: !733, size: 64, offset: 448)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !710, file: !581, line: 755, baseType: !1973, size: 704)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !581, line: 642, size: 704, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1973, file: !581, line: 644, baseType: !1966, size: 512)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1973, file: !581, line: 648, baseType: !733, size: 64, offset: 512)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1973, file: !581, line: 652, baseType: !733, size: 64, offset: 576)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1973, file: !581, line: 653, baseType: !733, size: 64, offset: 640)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !710, file: !581, line: 756, baseType: !1980, size: 448)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !581, line: 663, size: 448, elements: !1981)
!1981 = !{!1982, !1983, !1984}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1980, file: !581, line: 665, baseType: !1876, size: 320)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1980, file: !581, line: 668, baseType: !733, size: 64, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1980, file: !581, line: 673, baseType: !733, size: 64, offset: 384)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !710, file: !581, line: 757, baseType: !1986, size: 384)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !581, line: 694, size: 384, elements: !1987)
!1987 = !{!1988, !1989}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1986, file: !581, line: 696, baseType: !1876, size: 320)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1986, file: !581, line: 699, baseType: !733, size: 64, offset: 320)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !710, file: !581, line: 758, baseType: !1991, size: 384)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !581, line: 681, size: 384, elements: !1992)
!1992 = !{!1993, !1994, !1995}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1991, file: !581, line: 683, baseType: !713, size: 256)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1991, file: !581, line: 686, baseType: !733, size: 64, offset: 256)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1991, file: !581, line: 689, baseType: !733, size: 64, offset: 320)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !710, file: !581, line: 759, baseType: !1997, size: 384)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !581, line: 707, size: 384, elements: !1998)
!1998 = !{!1999, !2000, !2001}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1997, file: !581, line: 709, baseType: !713, size: 256)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1997, file: !581, line: 712, baseType: !733, size: 64, offset: 256)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1997, file: !581, line: 712, baseType: !733, size: 64, offset: 320)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !710, file: !581, line: 760, baseType: !2003, size: 320)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !581, line: 718, size: 320, elements: !2004)
!2004 = !{!2005, !2006}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2003, file: !581, line: 720, baseType: !713, size: 256)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2003, file: !581, line: 723, baseType: !733, size: 64, offset: 256)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !705, file: !581, line: 138, baseType: !704, size: 64, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !705, file: !581, line: 139, baseType: !704, size: 64, offset: 128)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !700, file: !581, line: 146, baseType: !703, size: 64, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !700, file: !581, line: 152, baseType: !698, size: 64, offset: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !695, file: !343, line: 130, baseType: !903, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !690, file: !343, line: 134, baseType: !666, size: 64, offset: 192)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !690, file: !343, line: 137, baseType: !733, size: 64, offset: 256)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !690, file: !343, line: 138, baseType: !726, size: 32, offset: 320)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !690, file: !343, line: 142, baseType: !7, size: 32, offset: 352)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !690, file: !343, line: 144, baseType: !662, size: 32, offset: 384)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !690, file: !343, line: 145, baseType: !662, size: 32, offset: 416)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !690, file: !343, line: 146, baseType: !2019, size: 64, offset: 448)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !343, line: 119, baseType: !788)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !673, file: !343, line: 220, baseType: !676, size: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !673, file: !343, line: 223, baseType: !666, size: 64, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !673, file: !343, line: 226, baseType: !1384, size: 64, offset: 192)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !673, file: !343, line: 229, baseType: !2024, size: 128, offset: 256)
!2024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2025, size: 128, elements: !971)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !343, line: 229, flags: DIFlagFwdDecl)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !673, file: !343, line: 232, baseType: !672, size: 64, offset: 384)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !673, file: !343, line: 233, baseType: !672, size: 64, offset: 448)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !673, file: !343, line: 238, baseType: !2030, size: 64, offset: 512)
!2030 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !343, line: 235, size: 64, elements: !2031)
!2031 = !{!2032, !2038}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !2030, file: !343, line: 236, baseType: !2033, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !343, line: 273, size: 128, elements: !2035)
!2035 = !{!2036, !2037}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2034, file: !343, line: 275, baseType: !698, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !2034, file: !343, line: 278, baseType: !698, size: 64, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2030, file: !343, line: 237, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !343, line: 259, size: 320, elements: !2041)
!2041 = !{!2042, !2043, !2044, !2045, !2046}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !2040, file: !343, line: 261, baseType: !903, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !2040, file: !343, line: 262, baseType: !903, size: 64, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2040, file: !343, line: 266, baseType: !903, size: 64, offset: 128)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !2040, file: !343, line: 267, baseType: !903, size: 64, offset: 192)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2040, file: !343, line: 270, baseType: !662, size: 32, offset: 256)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !673, file: !343, line: 241, baseType: !2019, size: 64, offset: 576)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !673, file: !343, line: 244, baseType: !662, size: 32, offset: 640)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !673, file: !343, line: 247, baseType: !662, size: 32, offset: 672)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !673, file: !343, line: 250, baseType: !662, size: 32, offset: 704)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !673, file: !343, line: 253, baseType: !662, size: 32, offset: 736)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !673, file: !343, line: 256, baseType: !662, size: 32, offset: 768)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!2054 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_name_info", file: !3, line: 176, size: 128, elements: !2057)
!2057 = !{!2058, !2059, !2060}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !2056, file: !3, line: 179, baseType: !733, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !2056, file: !3, line: 184, baseType: !7, size: 2, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "age", scope: !2056, file: !3, line: 189, baseType: !7, size: 32, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ssa_name_info_p_heap", file: !3, line: 195, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ssa_name_info_p_heap", file: !3, line: 195, size: 128, elements: !2064)
!2064 = !{!2065}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2063, file: !3, line: 195, baseType: !2066, size: 128)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ssa_name_info_p_base", file: !3, line: 194, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ssa_name_info_p_base", file: !3, line: 194, size: 128, elements: !2068)
!2068 = !{!2069, !2070, !2071}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2067, file: !3, line: 194, baseType: !7, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2067, file: !3, line: 194, baseType: !7, size: 32, offset: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2067, file: !3, line: 194, baseType: !2072, size: 64, offset: 64)
!2072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2073, size: 64, elements: !831)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_name_info_p", file: !3, line: 193, baseType: !2055)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2076, line: 7, baseType: !2077)
!2076 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2078, line: 49, size: 1728, elements: !2079)
!2078 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2079 = !{!2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2095, !2097, !2098, !2099, !2102, !2104, !2105, !2106, !2109, !2111, !2114, !2117, !2118, !2119, !2120, !2121}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2077, file: !2078, line: 51, baseType: !662, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2077, file: !2078, line: 54, baseType: !664, size: 64, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2077, file: !2078, line: 55, baseType: !664, size: 64, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2077, file: !2078, line: 56, baseType: !664, size: 64, offset: 192)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2077, file: !2078, line: 57, baseType: !664, size: 64, offset: 256)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2077, file: !2078, line: 58, baseType: !664, size: 64, offset: 320)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2077, file: !2078, line: 59, baseType: !664, size: 64, offset: 384)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2077, file: !2078, line: 60, baseType: !664, size: 64, offset: 448)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2077, file: !2078, line: 61, baseType: !664, size: 64, offset: 512)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2077, file: !2078, line: 64, baseType: !664, size: 64, offset: 576)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2077, file: !2078, line: 65, baseType: !664, size: 64, offset: 640)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2077, file: !2078, line: 66, baseType: !664, size: 64, offset: 704)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2077, file: !2078, line: 68, baseType: !2093, size: 64, offset: 768)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2078, line: 36, flags: DIFlagFwdDecl)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2077, file: !2078, line: 70, baseType: !2096, size: 64, offset: 832)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2077, file: !2078, line: 72, baseType: !662, size: 32, offset: 896)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2077, file: !2078, line: 73, baseType: !662, size: 32, offset: 928)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2077, file: !2078, line: 74, baseType: !2100, size: 64, offset: 960)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2101, line: 152, baseType: !788)
!2101 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2077, file: !2078, line: 77, baseType: !2103, size: 16, offset: 1024)
!2103 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2077, file: !2078, line: 78, baseType: !1681, size: 8, offset: 1040)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2077, file: !2078, line: 79, baseType: !830, size: 8, offset: 1048)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2077, file: !2078, line: 81, baseType: !2107, size: 64, offset: 1088)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2078, line: 43, baseType: null)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2077, file: !2078, line: 89, baseType: !2110, size: 64, offset: 1152)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2101, line: 153, baseType: !788)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2077, file: !2078, line: 91, baseType: !2112, size: 64, offset: 1216)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2078, line: 37, flags: DIFlagFwdDecl)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2077, file: !2078, line: 92, baseType: !2115, size: 64, offset: 1280)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2078, line: 38, flags: DIFlagFwdDecl)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2077, file: !2078, line: 93, baseType: !2096, size: 64, offset: 1344)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2077, file: !2078, line: 94, baseType: !666, size: 64, offset: 1408)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2077, file: !2078, line: 95, baseType: !1256, size: 64, offset: 1472)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2077, file: !2078, line: 96, baseType: !662, size: 32, offset: 1536)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2077, file: !2078, line: 98, baseType: !2122, size: 160, offset: 1568)
!2122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 160, elements: !2123)
!2123 = !{!2124}
!2124 = !DISubrange(count: 20)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_blocks_d", file: !3, line: 61, size: 256, elements: !2127)
!2127 = !{!2128, !2129, !2130, !2131}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2126, file: !3, line: 64, baseType: !733, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "def_blocks", scope: !2126, file: !3, line: 68, baseType: !1319, size: 64, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "phi_blocks", scope: !2126, file: !3, line: 71, baseType: !1319, size: 64, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "livein_blocks", scope: !2126, file: !3, line: 75, baseType: !1319, size: 64, offset: 192)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mark_def_sites_global_data", file: !3, line: 167, size: 64, elements: !2134)
!2134 = !{!2135}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "kills", scope: !2133, file: !3, line: 171, baseType: !1319, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !574, line: 30, baseType: !2137)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !135, line: 1893, baseType: !1354)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dom_dfsnum", file: !3, line: 785, size: 64, elements: !2141)
!2141 = !{!2142, !2143}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "bb_index", scope: !2140, file: !3, line: 788, baseType: !7, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "dfs_num", scope: !2140, file: !3, line: 791, baseType: !7, size: 32, offset: 32)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2140)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !2148, line: 32, baseType: !2149)
!2148 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !2148, line: 32, size: 96, elements: !2150)
!2150 = !{!2151}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2149, file: !2148, line: 32, baseType: !2152, size: 96)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !2148, line: 31, baseType: !2153)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !2148, line: 31, size: 96, elements: !2154)
!2154 = !{!2155, !2156, !2157}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2153, file: !2148, line: 31, baseType: !7, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2153, file: !2148, line: 31, baseType: !7, size: 32, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2153, file: !2148, line: 31, baseType: !2158, size: 32, offset: 64)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 32, elements: !831)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_vec_heap", file: !581, line: 49, baseType: !2161)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_vec_heap", file: !581, line: 49, size: 128, elements: !2162)
!2162 = !{!2163}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2161, file: !581, line: 49, baseType: !2164, size: 128)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_vec_base", file: !581, line: 48, baseType: !2165)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_vec_base", file: !581, line: 48, size: 128, elements: !2166)
!2166 = !{!2167, !2168, !2169}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2165, file: !581, line: 48, baseType: !7, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2165, file: !581, line: 48, baseType: !7, size: 32, offset: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2165, file: !581, line: 48, baseType: !2170, size: 64, offset: 64)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 64, elements: !831)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_vec", file: !581, line: 47, baseType: !2172)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_heap", file: !581, line: 34, baseType: !2174)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_heap", file: !581, line: 34, size: 128, elements: !2175)
!2175 = !{!2176}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2174, file: !581, line: 34, baseType: !1287, size: 128)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "repl_map_d", file: !3, line: 135, size: 128, elements: !2179)
!2179 = !{!2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2178, file: !3, line: 137, baseType: !733, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2178, file: !3, line: 138, baseType: !1319, size: 64, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2178)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2126)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !574, line: 27, baseType: !1347)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !135, line: 184, baseType: !2190)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !135, line: 184, size: 128, elements: !2191)
!2191 = !{!2192}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2190, file: !135, line: 184, baseType: !1300, size: 128)
!2193 = !{!2194, !2222, !0, !2224, !2236, !2238, !2240, !2242, !2244, !2246, !2248, !2256, !2258, !2260, !2262}
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "pass_build_ssa", scope: !2, file: !3, line: 2402, type: !2196, isLocal: false, isDefinition: true)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_opt_pass", file: !391, line: 156, size: 640, elements: !2197)
!2197 = !{!2198}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2196, file: !391, line: 158, baseType: !2199, size: 640)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !391, line: 114, size: 640, elements: !2200)
!2200 = !{!2201, !2202, !2203, !2207, !2211, !2213, !2214, !2215, !2217, !2218, !2219, !2220, !2221}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2199, file: !391, line: 117, baseType: !390, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2199, file: !391, line: 121, baseType: !667, size: 64, offset: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2199, file: !391, line: 125, baseType: !2204, size: 64, offset: 128)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{!661}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2199, file: !391, line: 130, baseType: !2208, size: 64, offset: 192)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!7}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2199, file: !391, line: 133, baseType: !2212, size: 64, offset: 256)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2199, file: !391, line: 136, baseType: !2212, size: 64, offset: 320)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2199, file: !391, line: 139, baseType: !662, size: 32, offset: 384)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2199, file: !391, line: 143, baseType: !2216, size: 32, offset: 416)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !398, line: 80, baseType: !397)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2199, file: !391, line: 146, baseType: !7, size: 32, offset: 448)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2199, file: !391, line: 147, baseType: !7, size: 32, offset: 480)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2199, file: !391, line: 148, baseType: !7, size: 32, offset: 512)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2199, file: !391, line: 151, baseType: !7, size: 32, offset: 544)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2199, file: !391, line: 152, baseType: !7, size: 32, offset: 576)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "def_blocks", scope: !2, file: !3, line: 86, type: !1232, isLocal: true, isDefinition: true)
!2224 = !DIGlobalVariableExpression(var: !2225, expr: !DIExpression())
!2225 = distinct !DIGlobalVariable(name: "old_ssa_names", scope: !2, file: !3, line: 108, type: !2226, isLocal: true, isDefinition: true)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2227, line: 45, baseType: !2228)
!2227 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2227, line: 39, size: 192, elements: !2230)
!2230 = !{!2231, !2232, !2233, !2234}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2229, file: !2227, line: 41, baseType: !660, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2229, file: !2227, line: 42, baseType: !7, size: 32, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2229, file: !2227, line: 43, baseType: !7, size: 32, offset: 96)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2229, file: !2227, line: 44, baseType: !2235, size: 64, offset: 128)
!2235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !786, size: 64, elements: !831)
!2236 = !DIGlobalVariableExpression(var: !2237, expr: !DIExpression())
!2237 = distinct !DIGlobalVariable(name: "new_ssa_names", scope: !2, file: !3, line: 113, type: !2226, isLocal: true, isDefinition: true)
!2238 = !DIGlobalVariableExpression(var: !2239, expr: !DIExpression())
!2239 = distinct !DIGlobalVariable(name: "interesting_blocks", scope: !2, file: !3, line: 115, type: !2226, isLocal: false, isDefinition: true)
!2240 = !DIGlobalVariableExpression(var: !2241, expr: !DIExpression())
!2241 = distinct !DIGlobalVariable(name: "names_to_release", scope: !2, file: !3, line: 120, type: !1319, isLocal: true, isDefinition: true)
!2242 = !DIGlobalVariableExpression(var: !2243, expr: !DIExpression())
!2243 = distinct !DIGlobalVariable(name: "phis_to_rewrite", scope: !2, file: !3, line: 122, type: !2159, isLocal: true, isDefinition: true)
!2244 = !DIGlobalVariableExpression(var: !2245, expr: !DIExpression())
!2245 = distinct !DIGlobalVariable(name: "blocks_with_phis_to_rewrite", scope: !2, file: !3, line: 125, type: !1319, isLocal: true, isDefinition: true)
!2246 = !DIGlobalVariableExpression(var: !2247, expr: !DIExpression())
!2247 = distinct !DIGlobalVariable(name: "repl_tbl", scope: !2, file: !3, line: 145, type: !1232, isLocal: true, isDefinition: true)
!2248 = !DIGlobalVariableExpression(var: !2249, expr: !DIExpression())
!2249 = distinct !DIGlobalVariable(name: "update_ssa_stats", scope: !2, file: !3, line: 164, type: !2250, isLocal: true, isDefinition: true)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "update_ssa_stats_d", file: !3, line: 157, size: 192, elements: !2251)
!2251 = !{!2252, !2253, !2254, !2255}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "num_virtual_mappings", scope: !2250, file: !3, line: 159, baseType: !7, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "num_total_mappings", scope: !2250, file: !3, line: 160, baseType: !7, size: 32, offset: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_symbols", scope: !2250, file: !3, line: 161, baseType: !1319, size: 64, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "num_virtual_symbols", scope: !2250, file: !3, line: 162, baseType: !7, size: 32, offset: 128)
!2256 = !DIGlobalVariableExpression(var: !2257, expr: !DIExpression())
!2257 = distinct !DIGlobalVariable(name: "blocks_to_update", scope: !2, file: !3, line: 201, type: !1319, isLocal: true, isDefinition: true)
!2258 = !DIGlobalVariableExpression(var: !2259, expr: !DIExpression())
!2259 = distinct !DIGlobalVariable(name: "info_for_ssa_name", scope: !2, file: !3, line: 197, type: !2061, isLocal: true, isDefinition: true)
!2260 = !DIGlobalVariableExpression(var: !2261, expr: !DIExpression())
!2261 = distinct !DIGlobalVariable(name: "current_info_for_ssa_name_age", scope: !2, file: !3, line: 198, type: !7, isLocal: true, isDefinition: true)
!2262 = !DIGlobalVariableExpression(var: !2263, expr: !DIExpression())
!2263 = distinct !DIGlobalVariable(name: "update_ssa_initialized_fn", scope: !2, file: !3, line: 149, type: !1189, isLocal: true, isDefinition: true)
!2264 = !{i32 2, !"Dwarf Version", i32 4}
!2265 = !{i32 2, !"Debug Info Version", i32 3}
!2266 = !{i32 1, !"wchar_size", i32 4}
!2267 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2268 = distinct !DISubprogram(name: "vprintf", scope: !2269, file: !2269, line: 39, type: !2270, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2280)
!2269 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2270 = !DISubroutineType(types: !2271)
!2271 = !{!662, !2272, !2273}
!2272 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !667)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2275)
!2275 = !{!2276, !2277, !2278, !2279}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2274, file: !3, baseType: !7, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2274, file: !3, baseType: !7, size: 32, offset: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2274, file: !3, baseType: !666, size: 64, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2274, file: !3, baseType: !666, size: 64, offset: 128)
!2280 = !{!2281, !2282}
!2281 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2268, file: !2269, line: 39, type: !2272)
!2282 = !DILocalVariable(name: "__arg", arg: 2, scope: !2268, file: !2269, line: 39, type: !2273)
!2283 = !DILocation(line: 0, scope: !2268)
!2284 = !DILocation(line: 41, column: 20, scope: !2268)
!2285 = !DILocation(line: 41, column: 10, scope: !2268)
!2286 = !DILocation(line: 41, column: 3, scope: !2268)
!2287 = distinct !DISubprogram(name: "getchar", scope: !2269, file: !2269, line: 47, type: !2288, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{!662}
!2290 = !{}
!2291 = !DILocation(line: 49, column: 16, scope: !2287)
!2292 = !DILocation(line: 49, column: 10, scope: !2287)
!2293 = !DILocation(line: 49, column: 3, scope: !2287)
!2294 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2269, file: !2269, line: 56, type: !2295, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2297)
!2295 = !DISubroutineType(types: !2296)
!2296 = !{!662, !2074}
!2297 = !{!2298}
!2298 = !DILocalVariable(name: "__fp", arg: 1, scope: !2294, file: !2269, line: 56, type: !2074)
!2299 = !DILocation(line: 0, scope: !2294)
!2300 = !DILocation(line: 58, column: 10, scope: !2294)
!2301 = !DILocation(line: 58, column: 3, scope: !2294)
!2302 = distinct !DISubprogram(name: "getc_unlocked", scope: !2269, file: !2269, line: 66, type: !2295, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2303)
!2303 = !{!2304}
!2304 = !DILocalVariable(name: "__fp", arg: 1, scope: !2302, file: !2269, line: 66, type: !2074)
!2305 = !DILocation(line: 0, scope: !2302)
!2306 = !DILocation(line: 68, column: 10, scope: !2302)
!2307 = !DILocation(line: 68, column: 3, scope: !2302)
!2308 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2269, file: !2269, line: 73, type: !2288, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!2309 = !DILocation(line: 75, column: 10, scope: !2308)
!2310 = !DILocation(line: 75, column: 3, scope: !2308)
!2311 = distinct !DISubprogram(name: "putchar", scope: !2269, file: !2269, line: 82, type: !2312, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2314)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!662, !662}
!2314 = !{!2315}
!2315 = !DILocalVariable(name: "__c", arg: 1, scope: !2311, file: !2269, line: 82, type: !662)
!2316 = !DILocation(line: 0, scope: !2311)
!2317 = !DILocation(line: 84, column: 21, scope: !2311)
!2318 = !DILocation(line: 84, column: 10, scope: !2311)
!2319 = !DILocation(line: 84, column: 3, scope: !2311)
!2320 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2269, file: !2269, line: 91, type: !2321, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2323)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{!662, !662, !2074}
!2323 = !{!2324, !2325}
!2324 = !DILocalVariable(name: "__c", arg: 1, scope: !2320, file: !2269, line: 91, type: !662)
!2325 = !DILocalVariable(name: "__stream", arg: 2, scope: !2320, file: !2269, line: 91, type: !2074)
!2326 = !DILocation(line: 0, scope: !2320)
!2327 = !DILocation(line: 93, column: 10, scope: !2320)
!2328 = !DILocation(line: 93, column: 3, scope: !2320)
!2329 = distinct !DISubprogram(name: "putc_unlocked", scope: !2269, file: !2269, line: 101, type: !2321, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2330)
!2330 = !{!2331, !2332}
!2331 = !DILocalVariable(name: "__c", arg: 1, scope: !2329, file: !2269, line: 101, type: !662)
!2332 = !DILocalVariable(name: "__stream", arg: 2, scope: !2329, file: !2269, line: 101, type: !2074)
!2333 = !DILocation(line: 0, scope: !2329)
!2334 = !DILocation(line: 103, column: 10, scope: !2329)
!2335 = !DILocation(line: 103, column: 3, scope: !2329)
!2336 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2269, file: !2269, line: 108, type: !2312, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2337)
!2337 = !{!2338}
!2338 = !DILocalVariable(name: "__c", arg: 1, scope: !2336, file: !2269, line: 108, type: !662)
!2339 = !DILocation(line: 0, scope: !2336)
!2340 = !DILocation(line: 110, column: 10, scope: !2336)
!2341 = !DILocation(line: 110, column: 3, scope: !2336)
!2342 = distinct !DISubprogram(name: "getline", scope: !2269, file: !2269, line: 118, type: !2343, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2347)
!2343 = !DISubroutineType(types: !2344)
!2344 = !{!2345, !663, !2346, !2074}
!2345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2101, line: 193, baseType: !788)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!2347 = !{!2348, !2349, !2350}
!2348 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2342, file: !2269, line: 118, type: !663)
!2349 = !DILocalVariable(name: "__n", arg: 2, scope: !2342, file: !2269, line: 118, type: !2346)
!2350 = !DILocalVariable(name: "__stream", arg: 3, scope: !2342, file: !2269, line: 118, type: !2074)
!2351 = !DILocation(line: 0, scope: !2342)
!2352 = !DILocation(line: 120, column: 10, scope: !2342)
!2353 = !DILocation(line: 120, column: 3, scope: !2342)
!2354 = distinct !DISubprogram(name: "feof_unlocked", scope: !2269, file: !2269, line: 128, type: !2295, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2355)
!2355 = !{!2356}
!2356 = !DILocalVariable(name: "__stream", arg: 1, scope: !2354, file: !2269, line: 128, type: !2074)
!2357 = !DILocation(line: 0, scope: !2354)
!2358 = !DILocation(line: 130, column: 10, scope: !2354)
!2359 = !DILocation(line: 130, column: 3, scope: !2354)
!2360 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2269, file: !2269, line: 135, type: !2295, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2361)
!2361 = !{!2362}
!2362 = !DILocalVariable(name: "__stream", arg: 1, scope: !2360, file: !2269, line: 135, type: !2074)
!2363 = !DILocation(line: 0, scope: !2360)
!2364 = !DILocation(line: 137, column: 10, scope: !2360)
!2365 = !DILocation(line: 137, column: 3, scope: !2360)
!2366 = distinct !DISubprogram(name: "tolower", scope: !2367, file: !2367, line: 207, type: !2312, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2368)
!2367 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2368 = !{!2369}
!2369 = !DILocalVariable(name: "__c", arg: 1, scope: !2366, file: !2367, line: 207, type: !662)
!2370 = !DILocation(line: 0, scope: !2366)
!2371 = !DILocation(line: 209, column: 22, scope: !2366)
!2372 = !DILocation(line: 209, column: 39, scope: !2366)
!2373 = !DILocation(line: 209, column: 38, scope: !2366)
!2374 = !DILocation(line: 209, column: 37, scope: !2366)
!2375 = !DILocation(line: 209, column: 10, scope: !2366)
!2376 = !DILocation(line: 209, column: 3, scope: !2366)
!2377 = distinct !DISubprogram(name: "toupper", scope: !2367, file: !2367, line: 213, type: !2312, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2378)
!2378 = !{!2379}
!2379 = !DILocalVariable(name: "__c", arg: 1, scope: !2377, file: !2367, line: 213, type: !662)
!2380 = !DILocation(line: 0, scope: !2377)
!2381 = !DILocation(line: 215, column: 22, scope: !2377)
!2382 = !DILocation(line: 215, column: 39, scope: !2377)
!2383 = !DILocation(line: 215, column: 38, scope: !2377)
!2384 = !DILocation(line: 215, column: 37, scope: !2377)
!2385 = !DILocation(line: 215, column: 10, scope: !2377)
!2386 = !DILocation(line: 215, column: 3, scope: !2377)
!2387 = distinct !DISubprogram(name: "atoi", scope: !2388, file: !2388, line: 361, type: !2389, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2391)
!2388 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2389 = !DISubroutineType(types: !2390)
!2390 = !{!662, !667}
!2391 = !{!2392}
!2392 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2387, file: !2388, line: 361, type: !667)
!2393 = !DILocation(line: 0, scope: !2387)
!2394 = !DILocation(line: 363, column: 16, scope: !2387)
!2395 = !DILocation(line: 363, column: 10, scope: !2387)
!2396 = !DILocation(line: 363, column: 3, scope: !2387)
!2397 = distinct !DISubprogram(name: "atol", scope: !2388, file: !2388, line: 366, type: !2398, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2400)
!2398 = !DISubroutineType(types: !2399)
!2399 = !{!788, !667}
!2400 = !{!2401}
!2401 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2397, file: !2388, line: 366, type: !667)
!2402 = !DILocation(line: 0, scope: !2397)
!2403 = !DILocation(line: 368, column: 10, scope: !2397)
!2404 = !DILocation(line: 368, column: 3, scope: !2397)
!2405 = distinct !DISubprogram(name: "atoll", scope: !2388, file: !2388, line: 373, type: !2406, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2409)
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!2408, !667}
!2408 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2409 = !{!2410}
!2410 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2405, file: !2388, line: 373, type: !667)
!2411 = !DILocation(line: 0, scope: !2405)
!2412 = !DILocation(line: 375, column: 10, scope: !2405)
!2413 = !DILocation(line: 375, column: 3, scope: !2405)
!2414 = distinct !DISubprogram(name: "bsearch", scope: !2415, file: !2415, line: 20, type: !2416, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2419)
!2415 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2416 = !DISubroutineType(types: !2417)
!2417 = !{!666, !1075, !1075, !1256, !1256, !2418}
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2388, line: 808, baseType: !1245)
!2419 = !{!2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429}
!2420 = !DILocalVariable(name: "__key", arg: 1, scope: !2414, file: !2415, line: 20, type: !1075)
!2421 = !DILocalVariable(name: "__base", arg: 2, scope: !2414, file: !2415, line: 20, type: !1075)
!2422 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2414, file: !2415, line: 20, type: !1256)
!2423 = !DILocalVariable(name: "__size", arg: 4, scope: !2414, file: !2415, line: 20, type: !1256)
!2424 = !DILocalVariable(name: "__compar", arg: 5, scope: !2414, file: !2415, line: 21, type: !2418)
!2425 = !DILocalVariable(name: "__l", scope: !2414, file: !2415, line: 23, type: !1256)
!2426 = !DILocalVariable(name: "__u", scope: !2414, file: !2415, line: 23, type: !1256)
!2427 = !DILocalVariable(name: "__idx", scope: !2414, file: !2415, line: 23, type: !1256)
!2428 = !DILocalVariable(name: "__p", scope: !2414, file: !2415, line: 24, type: !1075)
!2429 = !DILocalVariable(name: "__comparison", scope: !2414, file: !2415, line: 25, type: !662)
!2430 = !DILocation(line: 0, scope: !2414)
!2431 = !DILocation(line: 29, column: 3, scope: !2414)
!2432 = !DILocation(line: 27, column: 7, scope: !2414)
!2433 = !DILocation(line: 29, column: 14, scope: !2414)
!2434 = !DILocation(line: 31, column: 20, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2414, file: !2415, line: 30, column: 5)
!2436 = !DILocation(line: 31, column: 27, scope: !2435)
!2437 = !DILocation(line: 32, column: 56, scope: !2435)
!2438 = !DILocation(line: 32, column: 47, scope: !2435)
!2439 = !DILocation(line: 33, column: 22, scope: !2435)
!2440 = !DILocation(line: 34, column: 24, scope: !2441)
!2441 = distinct !DILexicalBlock(scope: !2435, file: !2415, line: 34, column: 11)
!2442 = !DILocation(line: 34, column: 11, scope: !2435)
!2443 = !DILocation(line: 36, column: 29, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2441, file: !2415, line: 36, column: 16)
!2445 = !DILocation(line: 36, column: 16, scope: !2441)
!2446 = !DILocation(line: 37, column: 14, scope: !2444)
!2447 = distinct !{!2447, !2431, !2448}
!2448 = !DILocation(line: 40, column: 5, scope: !2414)
!2449 = !DILocation(line: 43, column: 1, scope: !2414)
!2450 = distinct !DISubprogram(name: "atof", scope: !2451, file: !2451, line: 25, type: !2452, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2455)
!2451 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!2454, !667}
!2454 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2455 = !{!2456}
!2456 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2450, file: !2451, line: 25, type: !667)
!2457 = !DILocation(line: 0, scope: !2450)
!2458 = !DILocation(line: 27, column: 10, scope: !2450)
!2459 = !DILocation(line: 27, column: 3, scope: !2450)
!2460 = distinct !DISubprogram(name: "strtoimax", scope: !2461, file: !2461, line: 324, type: !2462, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2468)
!2461 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2462 = !DISubroutineType(types: !2463)
!2463 = !{!2464, !2272, !2467, !662}
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2465, line: 101, baseType: !2466)
!2465 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2101, line: 72, baseType: !788)
!2467 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !663)
!2468 = !{!2469, !2470, !2471}
!2469 = !DILocalVariable(name: "nptr", arg: 1, scope: !2460, file: !2461, line: 324, type: !2272)
!2470 = !DILocalVariable(name: "endptr", arg: 2, scope: !2460, file: !2461, line: 324, type: !2467)
!2471 = !DILocalVariable(name: "base", arg: 3, scope: !2460, file: !2461, line: 324, type: !662)
!2472 = !DILocation(line: 0, scope: !2460)
!2473 = !DILocation(line: 327, column: 10, scope: !2460)
!2474 = !DILocation(line: 327, column: 3, scope: !2460)
!2475 = distinct !DISubprogram(name: "strtoumax", scope: !2461, file: !2461, line: 336, type: !2476, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2480)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!2478, !2272, !2467, !662}
!2478 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2465, line: 102, baseType: !2479)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2101, line: 73, baseType: !786)
!2480 = !{!2481, !2482, !2483}
!2481 = !DILocalVariable(name: "nptr", arg: 1, scope: !2475, file: !2461, line: 336, type: !2272)
!2482 = !DILocalVariable(name: "endptr", arg: 2, scope: !2475, file: !2461, line: 336, type: !2467)
!2483 = !DILocalVariable(name: "base", arg: 3, scope: !2475, file: !2461, line: 336, type: !662)
!2484 = !DILocation(line: 0, scope: !2475)
!2485 = !DILocation(line: 339, column: 10, scope: !2475)
!2486 = !DILocation(line: 339, column: 3, scope: !2475)
!2487 = distinct !DISubprogram(name: "wcstoimax", scope: !2461, file: !2461, line: 348, type: !2488, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2497)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{!2464, !2490, !2494, !662}
!2490 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2491)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2493)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2461, line: 34, baseType: !662)
!2494 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2495)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2497 = !{!2498, !2499, !2500}
!2498 = !DILocalVariable(name: "nptr", arg: 1, scope: !2487, file: !2461, line: 348, type: !2490)
!2499 = !DILocalVariable(name: "endptr", arg: 2, scope: !2487, file: !2461, line: 348, type: !2494)
!2500 = !DILocalVariable(name: "base", arg: 3, scope: !2487, file: !2461, line: 348, type: !662)
!2501 = !DILocation(line: 0, scope: !2487)
!2502 = !DILocation(line: 351, column: 10, scope: !2487)
!2503 = !DILocation(line: 351, column: 3, scope: !2487)
!2504 = distinct !DISubprogram(name: "wcstoumax", scope: !2461, file: !2461, line: 362, type: !2505, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2507)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{!2478, !2490, !2494, !662}
!2507 = !{!2508, !2509, !2510}
!2508 = !DILocalVariable(name: "nptr", arg: 1, scope: !2504, file: !2461, line: 362, type: !2490)
!2509 = !DILocalVariable(name: "endptr", arg: 2, scope: !2504, file: !2461, line: 362, type: !2494)
!2510 = !DILocalVariable(name: "base", arg: 3, scope: !2504, file: !2461, line: 362, type: !662)
!2511 = !DILocation(line: 0, scope: !2504)
!2512 = !DILocation(line: 365, column: 10, scope: !2504)
!2513 = !DILocation(line: 365, column: 3, scope: !2504)
!2514 = distinct !DISubprogram(name: "stat", scope: !2515, file: !2515, line: 453, type: !2516, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2553)
!2515 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2516 = !DISubroutineType(types: !2517)
!2517 = !{!662, !667, !2518}
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2520, line: 46, size: 1152, elements: !2521)
!2520 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2521 = !{!2522, !2524, !2526, !2528, !2530, !2532, !2534, !2535, !2536, !2537, !2539, !2541, !2549, !2550, !2551}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2519, file: !2520, line: 48, baseType: !2523, size: 64)
!2523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2101, line: 145, baseType: !786)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2519, file: !2520, line: 53, baseType: !2525, size: 64, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2101, line: 148, baseType: !786)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2519, file: !2520, line: 61, baseType: !2527, size: 64, offset: 128)
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2101, line: 151, baseType: !786)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2519, file: !2520, line: 62, baseType: !2529, size: 32, offset: 192)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2101, line: 150, baseType: !7)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2519, file: !2520, line: 64, baseType: !2531, size: 32, offset: 224)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2101, line: 146, baseType: !7)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2519, file: !2520, line: 65, baseType: !2533, size: 32, offset: 256)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2101, line: 147, baseType: !7)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2519, file: !2520, line: 67, baseType: !662, size: 32, offset: 288)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2519, file: !2520, line: 69, baseType: !2523, size: 64, offset: 320)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2519, file: !2520, line: 74, baseType: !2100, size: 64, offset: 384)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2519, file: !2520, line: 78, baseType: !2538, size: 64, offset: 448)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2101, line: 174, baseType: !788)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2519, file: !2520, line: 80, baseType: !2540, size: 64, offset: 512)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2101, line: 179, baseType: !788)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2519, file: !2520, line: 91, baseType: !2542, size: 128, offset: 576)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2543, line: 10, size: 128, elements: !2544)
!2543 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2544 = !{!2545, !2547}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2542, file: !2543, line: 12, baseType: !2546, size: 64)
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2101, line: 160, baseType: !788)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2542, file: !2543, line: 16, baseType: !2548, size: 64, offset: 64)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2101, line: 196, baseType: !788)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2519, file: !2520, line: 92, baseType: !2542, size: 128, offset: 704)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2519, file: !2520, line: 93, baseType: !2542, size: 128, offset: 832)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2519, file: !2520, line: 106, baseType: !2552, size: 192, offset: 960)
!2552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2548, size: 192, elements: !806)
!2553 = !{!2554, !2555}
!2554 = !DILocalVariable(name: "__path", arg: 1, scope: !2514, file: !2515, line: 453, type: !667)
!2555 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2514, file: !2515, line: 453, type: !2518)
!2556 = !DILocation(line: 0, scope: !2514)
!2557 = !DILocation(line: 455, column: 10, scope: !2514)
!2558 = !DILocation(line: 455, column: 3, scope: !2514)
!2559 = distinct !DISubprogram(name: "lstat", scope: !2515, file: !2515, line: 460, type: !2516, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2560)
!2560 = !{!2561, !2562}
!2561 = !DILocalVariable(name: "__path", arg: 1, scope: !2559, file: !2515, line: 460, type: !667)
!2562 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2559, file: !2515, line: 460, type: !2518)
!2563 = !DILocation(line: 0, scope: !2559)
!2564 = !DILocation(line: 462, column: 10, scope: !2559)
!2565 = !DILocation(line: 462, column: 3, scope: !2559)
!2566 = distinct !DISubprogram(name: "fstat", scope: !2515, file: !2515, line: 467, type: !2567, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2569)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{!662, !662, !2518}
!2569 = !{!2570, !2571}
!2570 = !DILocalVariable(name: "__fd", arg: 1, scope: !2566, file: !2515, line: 467, type: !662)
!2571 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2566, file: !2515, line: 467, type: !2518)
!2572 = !DILocation(line: 0, scope: !2566)
!2573 = !DILocation(line: 469, column: 10, scope: !2566)
!2574 = !DILocation(line: 469, column: 3, scope: !2566)
!2575 = distinct !DISubprogram(name: "fstatat", scope: !2515, file: !2515, line: 474, type: !2576, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2578)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{!662, !662, !667, !2518, !662}
!2578 = !{!2579, !2580, !2581, !2582}
!2579 = !DILocalVariable(name: "__fd", arg: 1, scope: !2575, file: !2515, line: 474, type: !662)
!2580 = !DILocalVariable(name: "__filename", arg: 2, scope: !2575, file: !2515, line: 474, type: !667)
!2581 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2575, file: !2515, line: 474, type: !2518)
!2582 = !DILocalVariable(name: "__flag", arg: 4, scope: !2575, file: !2515, line: 474, type: !662)
!2583 = !DILocation(line: 0, scope: !2575)
!2584 = !DILocation(line: 477, column: 10, scope: !2575)
!2585 = !DILocation(line: 477, column: 3, scope: !2575)
!2586 = distinct !DISubprogram(name: "mknod", scope: !2515, file: !2515, line: 483, type: !2587, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2589)
!2587 = !DISubroutineType(types: !2588)
!2588 = !{!662, !667, !2529, !2523}
!2589 = !{!2590, !2591, !2592}
!2590 = !DILocalVariable(name: "__path", arg: 1, scope: !2586, file: !2515, line: 483, type: !667)
!2591 = !DILocalVariable(name: "__mode", arg: 2, scope: !2586, file: !2515, line: 483, type: !2529)
!2592 = !DILocalVariable(name: "__dev", arg: 3, scope: !2586, file: !2515, line: 483, type: !2523)
!2593 = !DILocation(line: 0, scope: !2586)
!2594 = !DILocation(line: 485, column: 10, scope: !2586)
!2595 = !DILocation(line: 485, column: 3, scope: !2586)
!2596 = distinct !DISubprogram(name: "mknodat", scope: !2515, file: !2515, line: 491, type: !2597, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2599)
!2597 = !DISubroutineType(types: !2598)
!2598 = !{!662, !662, !667, !2529, !2523}
!2599 = !{!2600, !2601, !2602, !2603}
!2600 = !DILocalVariable(name: "__fd", arg: 1, scope: !2596, file: !2515, line: 491, type: !662)
!2601 = !DILocalVariable(name: "__path", arg: 2, scope: !2596, file: !2515, line: 491, type: !667)
!2602 = !DILocalVariable(name: "__mode", arg: 3, scope: !2596, file: !2515, line: 491, type: !2529)
!2603 = !DILocalVariable(name: "__dev", arg: 4, scope: !2596, file: !2515, line: 491, type: !2523)
!2604 = !DILocation(line: 0, scope: !2596)
!2605 = !DILocation(line: 494, column: 10, scope: !2596)
!2606 = !DILocation(line: 494, column: 3, scope: !2596)
!2607 = distinct !DISubprogram(name: "stat64", scope: !2515, file: !2515, line: 502, type: !2608, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2630)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{!662, !667, !2610}
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2520, line: 119, size: 1152, elements: !2612)
!2612 = !{!2613, !2614, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2626, !2627, !2628, !2629}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2611, file: !2520, line: 121, baseType: !2523, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2611, file: !2520, line: 123, baseType: !2615, size: 64, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2101, line: 149, baseType: !786)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2611, file: !2520, line: 124, baseType: !2527, size: 64, offset: 128)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2611, file: !2520, line: 125, baseType: !2529, size: 32, offset: 192)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2611, file: !2520, line: 132, baseType: !2531, size: 32, offset: 224)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2611, file: !2520, line: 133, baseType: !2533, size: 32, offset: 256)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2611, file: !2520, line: 135, baseType: !662, size: 32, offset: 288)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2611, file: !2520, line: 136, baseType: !2523, size: 64, offset: 320)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2611, file: !2520, line: 137, baseType: !2100, size: 64, offset: 384)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2611, file: !2520, line: 143, baseType: !2538, size: 64, offset: 448)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2611, file: !2520, line: 144, baseType: !2625, size: 64, offset: 512)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2101, line: 180, baseType: !788)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2611, file: !2520, line: 152, baseType: !2542, size: 128, offset: 576)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2611, file: !2520, line: 153, baseType: !2542, size: 128, offset: 704)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2611, file: !2520, line: 154, baseType: !2542, size: 128, offset: 832)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2611, file: !2520, line: 164, baseType: !2552, size: 192, offset: 960)
!2630 = !{!2631, !2632}
!2631 = !DILocalVariable(name: "__path", arg: 1, scope: !2607, file: !2515, line: 502, type: !667)
!2632 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2607, file: !2515, line: 502, type: !2610)
!2633 = !DILocation(line: 0, scope: !2607)
!2634 = !DILocation(line: 504, column: 10, scope: !2607)
!2635 = !DILocation(line: 504, column: 3, scope: !2607)
!2636 = distinct !DISubprogram(name: "lstat64", scope: !2515, file: !2515, line: 509, type: !2608, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2637)
!2637 = !{!2638, !2639}
!2638 = !DILocalVariable(name: "__path", arg: 1, scope: !2636, file: !2515, line: 509, type: !667)
!2639 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2636, file: !2515, line: 509, type: !2610)
!2640 = !DILocation(line: 0, scope: !2636)
!2641 = !DILocation(line: 511, column: 10, scope: !2636)
!2642 = !DILocation(line: 511, column: 3, scope: !2636)
!2643 = distinct !DISubprogram(name: "fstat64", scope: !2515, file: !2515, line: 516, type: !2644, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2646)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{!662, !662, !2610}
!2646 = !{!2647, !2648}
!2647 = !DILocalVariable(name: "__fd", arg: 1, scope: !2643, file: !2515, line: 516, type: !662)
!2648 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2643, file: !2515, line: 516, type: !2610)
!2649 = !DILocation(line: 0, scope: !2643)
!2650 = !DILocation(line: 518, column: 10, scope: !2643)
!2651 = !DILocation(line: 518, column: 3, scope: !2643)
!2652 = distinct !DISubprogram(name: "fstatat64", scope: !2515, file: !2515, line: 523, type: !2653, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2655)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!662, !662, !667, !2610, !662}
!2655 = !{!2656, !2657, !2658, !2659}
!2656 = !DILocalVariable(name: "__fd", arg: 1, scope: !2652, file: !2515, line: 523, type: !662)
!2657 = !DILocalVariable(name: "__filename", arg: 2, scope: !2652, file: !2515, line: 523, type: !667)
!2658 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2652, file: !2515, line: 523, type: !2610)
!2659 = !DILocalVariable(name: "__flag", arg: 4, scope: !2652, file: !2515, line: 523, type: !662)
!2660 = !DILocation(line: 0, scope: !2652)
!2661 = !DILocation(line: 526, column: 10, scope: !2652)
!2662 = !DILocation(line: 526, column: 3, scope: !2652)
!2663 = distinct !DISubprogram(name: "get_current_def", scope: !3, file: !3, line: 352, type: !2664, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2666)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!733, !733}
!2666 = !{!2667}
!2667 = !DILocalVariable(name: "var", arg: 1, scope: !2663, file: !3, line: 352, type: !733)
!2668 = !DILocation(line: 0, scope: !2663)
!2669 = !DILocation(line: 354, column: 7, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2663, file: !3, line: 354, column: 7)
!2671 = !DILocation(line: 354, column: 23, scope: !2670)
!2672 = !DILocation(line: 354, column: 7, scope: !2663)
!2673 = !DILocation(line: 355, column: 12, scope: !2670)
!2674 = !DILocation(line: 355, column: 36, scope: !2670)
!2675 = !DILocation(line: 355, column: 5, scope: !2670)
!2676 = !DILocation(line: 357, column: 12, scope: !2670)
!2677 = !DILocation(line: 357, column: 27, scope: !2670)
!2678 = !DILocation(line: 357, column: 5, scope: !2670)
!2679 = !DILocation(line: 0, scope: !2670)
!2680 = !DILocation(line: 358, column: 1, scope: !2663)
!2681 = distinct !DISubprogram(name: "get_ssa_name_ann", scope: !3, file: !3, line: 285, type: !2682, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2684)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!2073, !733}
!2684 = !{!2685, !2686, !2687, !2688, !2689, !2692}
!2685 = !DILocalVariable(name: "name", arg: 1, scope: !2681, file: !3, line: 285, type: !733)
!2686 = !DILocalVariable(name: "ver", scope: !2681, file: !3, line: 287, type: !7)
!2687 = !DILocalVariable(name: "len", scope: !2681, file: !3, line: 288, type: !7)
!2688 = !DILocalVariable(name: "info", scope: !2681, file: !3, line: 289, type: !2055)
!2689 = !DILocalVariable(name: "new_len", scope: !2690, file: !3, line: 293, type: !7)
!2690 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 292, column: 5)
!2691 = distinct !DILexicalBlock(scope: !2681, file: !3, line: 291, column: 7)
!2692 = !DILocalVariable(name: "info", scope: !2693, file: !3, line: 298, type: !2055)
!2693 = distinct !DILexicalBlock(scope: !2690, file: !3, line: 297, column: 2)
!2694 = !DILocation(line: 0, scope: !2681)
!2695 = !DILocation(line: 287, column: 18, scope: !2681)
!2696 = !DILocation(line: 288, column: 18, scope: !2681)
!2697 = !DILocation(line: 291, column: 11, scope: !2691)
!2698 = !DILocation(line: 291, column: 7, scope: !2681)
!2699 = !DILocation(line: 293, column: 26, scope: !2690)
!2700 = !DILocation(line: 0, scope: !2690)
!2701 = !DILocation(line: 295, column: 7, scope: !2690)
!2702 = !DILocation(line: 296, column: 7, scope: !2690)
!2703 = !DILocation(line: 296, column: 20, scope: !2690)
!2704 = !DILocation(line: 296, column: 17, scope: !2690)
!2705 = !DILocation(line: 298, column: 33, scope: !2693)
!2706 = !DILocation(line: 0, scope: !2693)
!2707 = !DILocation(line: 299, column: 16, scope: !2693)
!2708 = !DILocation(line: 299, column: 10, scope: !2693)
!2709 = !DILocation(line: 299, column: 14, scope: !2693)
!2710 = !DILocation(line: 300, column: 4, scope: !2693)
!2711 = distinct !{!2711, !2702, !2712}
!2712 = !DILocation(line: 301, column: 2, scope: !2690)
!2713 = !DILocation(line: 304, column: 10, scope: !2681)
!2714 = !DILocation(line: 305, column: 13, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2681, file: !3, line: 305, column: 7)
!2716 = !DILocation(line: 305, column: 19, scope: !2715)
!2717 = !DILocation(line: 305, column: 17, scope: !2715)
!2718 = !DILocation(line: 305, column: 7, scope: !2681)
!2719 = !DILocation(line: 307, column: 13, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2715, file: !3, line: 306, column: 5)
!2721 = !DILocation(line: 307, column: 28, scope: !2720)
!2722 = !DILocation(line: 308, column: 13, scope: !2720)
!2723 = !DILocation(line: 308, column: 25, scope: !2720)
!2724 = !DILocation(line: 309, column: 17, scope: !2720)
!2725 = !DILocation(line: 310, column: 5, scope: !2720)
!2726 = !DILocation(line: 312, column: 3, scope: !2681)
!2727 = distinct !DISubprogram(name: "var_ann", scope: !2728, file: !2728, line: 132, type: !2729, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2735)
!2728 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2729 = !DISubroutineType(types: !2730)
!2730 = !{!2731, !2732}
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "var_ann_t", file: !586, line: 297, baseType: !1140)
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !671, line: 59, baseType: !2733)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !735)
!2735 = !{!2736, !2737}
!2736 = !DILocalVariable(name: "t", arg: 1, scope: !2727, file: !2728, line: 132, type: !2732)
!2737 = !DILocalVariable(name: "p", scope: !2727, file: !2728, line: 134, type: !2738)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2731)
!2740 = !DILocation(line: 0, scope: !2727)
!2741 = !DILocation(line: 134, column: 24, scope: !2727)
!2742 = !DILocation(line: 135, column: 10, scope: !2727)
!2743 = !DILocation(line: 135, column: 14, scope: !2727)
!2744 = !DILocation(line: 135, column: 3, scope: !2727)
!2745 = distinct !DISubprogram(name: "set_current_def", scope: !3, file: !3, line: 364, type: !2746, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2748)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{null, !733, !733}
!2748 = !{!2749, !2750}
!2749 = !DILocalVariable(name: "var", arg: 1, scope: !2745, file: !3, line: 364, type: !733)
!2750 = !DILocalVariable(name: "def", arg: 2, scope: !2745, file: !3, line: 364, type: !733)
!2751 = !DILocation(line: 0, scope: !2745)
!2752 = !DILocation(line: 366, column: 7, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2745, file: !3, line: 366, column: 7)
!2754 = !DILocation(line: 366, column: 23, scope: !2753)
!2755 = !DILocation(line: 366, column: 7, scope: !2745)
!2756 = !DILocation(line: 367, column: 5, scope: !2753)
!2757 = !DILocation(line: 367, column: 29, scope: !2753)
!2758 = !DILocation(line: 367, column: 41, scope: !2753)
!2759 = !DILocation(line: 369, column: 5, scope: !2753)
!2760 = !DILocation(line: 369, column: 20, scope: !2753)
!2761 = !DILocation(line: 369, column: 32, scope: !2753)
!2762 = !DILocation(line: 370, column: 1, scope: !2745)
!2763 = distinct !DISubprogram(name: "compute_global_livein", scope: !3, file: !3, line: 382, type: !2764, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2766)
!2764 = !DISubroutineType(types: !2765)
!2765 = !{null, !1319, !1319}
!2766 = !{!2767, !2768, !2769, !2770, !2771, !2772, !2773, !2781, !2783, !2790, !2794}
!2767 = !DILocalVariable(name: "livein", arg: 1, scope: !2763, file: !3, line: 382, type: !1319)
!2768 = !DILocalVariable(name: "def_blocks", arg: 2, scope: !2763, file: !3, line: 382, type: !1319)
!2769 = !DILocalVariable(name: "bb", scope: !2763, file: !3, line: 384, type: !670)
!2770 = !DILocalVariable(name: "worklist", scope: !2763, file: !3, line: 384, type: !669)
!2771 = !DILocalVariable(name: "tos", scope: !2763, file: !3, line: 384, type: !669)
!2772 = !DILocalVariable(name: "i", scope: !2763, file: !3, line: 385, type: !7)
!2773 = !DILocalVariable(name: "bi", scope: !2763, file: !3, line: 386, type: !2774)
!2774 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !957, line: 218, baseType: !2775)
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !957, line: 203, size: 256, elements: !2776)
!2776 = !{!2777, !2778, !2779, !2780}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !2775, file: !957, line: 206, baseType: !960, size: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !2775, file: !957, line: 209, baseType: !960, size: 64, offset: 64)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !2775, file: !957, line: 212, baseType: !7, size: 32, offset: 128)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2775, file: !957, line: 217, baseType: !970, size: 64, offset: 192)
!2781 = !DILocalVariable(name: "e", scope: !2782, file: !3, line: 397, type: !688)
!2782 = distinct !DILexicalBlock(scope: !2763, file: !3, line: 396, column: 5)
!2783 = !DILocalVariable(name: "ei", scope: !2782, file: !3, line: 398, type: !2784)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !343, line: 682, baseType: !2785)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 679, size: 128, elements: !2786)
!2786 = !{!2787, !2788}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2785, file: !343, line: 680, baseType: !7, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2785, file: !343, line: 681, baseType: !2789, size: 64, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!2790 = !DILocalVariable(name: "pred", scope: !2791, file: !3, line: 406, type: !670)
!2791 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 405, column: 2)
!2792 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 404, column: 7)
!2793 = distinct !DILexicalBlock(scope: !2782, file: !3, line: 404, column: 7)
!2794 = !DILocalVariable(name: "pred_index", scope: !2791, file: !3, line: 407, type: !662)
!2795 = !DILocation(line: 0, scope: !2763)
!2796 = !DILocation(line: 385, column: 3, scope: !2763)
!2797 = !DILocation(line: 386, column: 3, scope: !2763)
!2798 = !DILocation(line: 389, column: 56, scope: !2763)
!2799 = !DILocation(line: 389, column: 73, scope: !2763)
!2800 = !DILocation(line: 389, column: 55, scope: !2763)
!2801 = !DILocation(line: 389, column: 53, scope: !2763)
!2802 = !DILocation(line: 389, column: 23, scope: !2763)
!2803 = !DILocation(line: 389, column: 7, scope: !2763)
!2804 = !DILocation(line: 391, column: 3, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2763, file: !3, line: 391, column: 3)
!2806 = !DILocation(line: 391, column: 3, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 391, column: 3)
!2808 = !DILocation(line: 0, scope: !2782)
!2809 = !DILocation(line: 0, scope: !2793)
!2810 = !DILocation(line: 0, scope: !2792)
!2811 = !DILocation(line: 395, column: 3, scope: !2763)
!2812 = !DILocation(line: 392, column: 14, scope: !2807)
!2813 = !DILocation(line: 392, column: 9, scope: !2807)
!2814 = !DILocation(line: 392, column: 12, scope: !2807)
!2815 = distinct !{!2815, !2804, !2816}
!2816 = !DILocation(line: 392, column: 14, scope: !2805)
!2817 = !DILocation(line: 395, column: 14, scope: !2763)
!2818 = !DILocation(line: 397, column: 7, scope: !2782)
!2819 = !DILocation(line: 398, column: 7, scope: !2782)
!2820 = !DILocation(line: 401, column: 13, scope: !2782)
!2821 = !DILocation(line: 401, column: 12, scope: !2782)
!2822 = !DILocation(line: 404, column: 7, scope: !2793)
!2823 = !DILocation(line: 404, column: 7, scope: !2792)
!2824 = !DILocation(line: 406, column: 23, scope: !2791)
!2825 = !DILocation(line: 406, column: 26, scope: !2791)
!2826 = !DILocation(line: 0, scope: !2791)
!2827 = !DILocation(line: 407, column: 27, scope: !2791)
!2828 = !DILocation(line: 410, column: 16, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 410, column: 8)
!2830 = !DILocation(line: 410, column: 13, scope: !2829)
!2831 = !DILocation(line: 411, column: 8, scope: !2829)
!2832 = !DILocation(line: 411, column: 13, scope: !2829)
!2833 = !DILocation(line: 412, column: 8, scope: !2829)
!2834 = !DILocation(line: 412, column: 13, scope: !2829)
!2835 = !DILocation(line: 410, column: 8, scope: !2791)
!2836 = !DILocation(line: 414, column: 12, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 413, column: 6)
!2838 = !DILocation(line: 414, column: 15, scope: !2837)
!2839 = !DILocation(line: 415, column: 8, scope: !2837)
!2840 = !DILocation(line: 416, column: 6, scope: !2837)
!2841 = distinct !{!2841, !2822, !2842}
!2842 = !DILocation(line: 417, column: 2, scope: !2793)
!2843 = !DILocation(line: 418, column: 5, scope: !2763)
!2844 = distinct !{!2844, !2811, !2843}
!2845 = !DILocation(line: 420, column: 3, scope: !2763)
!2846 = !DILocation(line: 421, column: 1, scope: !2763)
!2847 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !957, file: !957, line: 224, type: !2848, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2855)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{null, !2850, !2851, !7, !2854}
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !671, line: 48, baseType: !2852)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2855 = !{!2856, !2857, !2858, !2859}
!2856 = !DILocalVariable(name: "bi", arg: 1, scope: !2847, file: !957, line: 224, type: !2850)
!2857 = !DILocalVariable(name: "map", arg: 2, scope: !2847, file: !957, line: 224, type: !2851)
!2858 = !DILocalVariable(name: "start_bit", arg: 3, scope: !2847, file: !957, line: 225, type: !7)
!2859 = !DILocalVariable(name: "bit_no", arg: 4, scope: !2847, file: !957, line: 225, type: !2854)
!2860 = !DILocation(line: 0, scope: !2847)
!2861 = !DILocation(line: 227, column: 19, scope: !2847)
!2862 = !DILocation(line: 227, column: 12, scope: !2847)
!2863 = !DILocation(line: 228, column: 7, scope: !2847)
!2864 = !DILocation(line: 228, column: 12, scope: !2847)
!2865 = !DILocation(line: 0, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2867, file: !957, line: 233, column: 11)
!2867 = distinct !DILexicalBlock(scope: !2847, file: !957, line: 232, column: 5)
!2868 = !DILocation(line: 231, column: 3, scope: !2847)
!2869 = !DILocation(line: 233, column: 12, scope: !2866)
!2870 = !DILocation(line: 233, column: 11, scope: !2867)
!2871 = !DILocation(line: 235, column: 13, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2866, file: !957, line: 234, column: 2)
!2873 = !DILocation(line: 236, column: 4, scope: !2872)
!2874 = !DILocation(line: 239, column: 11, scope: !2867)
!2875 = distinct !{!2875, !2868, !2876}
!2876 = !DILocation(line: 242, column: 5, scope: !2847)
!2877 = !DILocation(line: 245, column: 11, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2847, file: !957, line: 245, column: 7)
!2879 = !DILocation(line: 245, column: 17, scope: !2878)
!2880 = !DILocation(line: 245, column: 22, scope: !2878)
!2881 = !DILocation(line: 245, column: 7, scope: !2847)
!2882 = !DILocation(line: 246, column: 27, scope: !2878)
!2883 = !DILocation(line: 246, column: 32, scope: !2878)
!2884 = !DILocation(line: 246, column: 5, scope: !2878)
!2885 = !DILocation(line: 249, column: 7, scope: !2847)
!2886 = !DILocation(line: 249, column: 15, scope: !2847)
!2887 = !DILocation(line: 250, column: 14, scope: !2847)
!2888 = !DILocation(line: 251, column: 7, scope: !2847)
!2889 = !DILocation(line: 251, column: 12, scope: !2847)
!2890 = !DILocation(line: 257, column: 16, scope: !2847)
!2891 = !DILocation(line: 257, column: 13, scope: !2847)
!2892 = !DILocation(line: 259, column: 11, scope: !2847)
!2893 = !DILocation(line: 260, column: 1, scope: !2847)
!2894 = distinct !DISubprogram(name: "bmp_iter_set", scope: !957, file: !957, line: 393, type: !2895, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2897)
!2895 = !DISubroutineType(types: !2896)
!2896 = !{!661, !2850, !2854}
!2897 = !{!2898, !2899, !2900}
!2898 = !DILocalVariable(name: "bi", arg: 1, scope: !2894, file: !957, line: 393, type: !2850)
!2899 = !DILocalVariable(name: "bit_no", arg: 2, scope: !2894, file: !957, line: 393, type: !2854)
!2900 = !DILabel(scope: !2901, name: "next_bit", file: !957, line: 398)
!2901 = distinct !DILexicalBlock(scope: !2902, file: !957, line: 397, column: 5)
!2902 = distinct !DILexicalBlock(scope: !2894, file: !957, line: 396, column: 7)
!2903 = !DILocation(line: 0, scope: !2894)
!2904 = !DILocation(line: 396, column: 11, scope: !2902)
!2905 = !DILocation(line: 396, column: 7, scope: !2902)
!2906 = !DILocation(line: 396, column: 7, scope: !2894)
!2907 = !DILocation(line: 419, column: 15, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2909, file: !957, line: 418, column: 2)
!2909 = distinct !DILexicalBlock(scope: !2894, file: !957, line: 415, column: 5)
!2910 = !DILocation(line: 399, column: 7, scope: !2901)
!2911 = !DILocation(line: 398, column: 5, scope: !2901)
!2912 = !DILocation(line: 399, column: 20, scope: !2901)
!2913 = !DILocation(line: 399, column: 25, scope: !2901)
!2914 = !DILocation(line: 399, column: 14, scope: !2901)
!2915 = !DILocation(line: 401, column: 13, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2901, file: !957, line: 400, column: 2)
!2917 = !DILocation(line: 402, column: 12, scope: !2916)
!2918 = distinct !{!2918, !2910, !2919}
!2919 = !DILocation(line: 403, column: 2, scope: !2901)
!2920 = !DILocation(line: 410, column: 15, scope: !2894)
!2921 = !DILocation(line: 410, column: 42, scope: !2894)
!2922 = !DILocation(line: 411, column: 26, scope: !2894)
!2923 = !DILocation(line: 410, column: 11, scope: !2894)
!2924 = !DILocation(line: 412, column: 7, scope: !2894)
!2925 = !DILocation(line: 412, column: 14, scope: !2894)
!2926 = !DILocation(line: 0, scope: !2909)
!2927 = !DILocation(line: 414, column: 3, scope: !2894)
!2928 = !DILocation(line: 417, column: 7, scope: !2909)
!2929 = !DILocation(line: 417, column: 18, scope: !2909)
!2930 = !DILocation(line: 417, column: 26, scope: !2909)
!2931 = !DILocation(line: 419, column: 13, scope: !2908)
!2932 = !DILocation(line: 420, column: 8, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2908, file: !957, line: 420, column: 8)
!2934 = !DILocation(line: 420, column: 8, scope: !2908)
!2935 = !DILocation(line: 422, column: 12, scope: !2908)
!2936 = !DILocation(line: 423, column: 15, scope: !2908)
!2937 = distinct !{!2937, !2928, !2938}
!2938 = !DILocation(line: 424, column: 2, scope: !2909)
!2939 = !DILocation(line: 427, column: 28, scope: !2909)
!2940 = !DILocation(line: 427, column: 16, scope: !2909)
!2941 = !DILocation(line: 428, column: 12, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2909, file: !957, line: 428, column: 11)
!2943 = !DILocation(line: 428, column: 11, scope: !2909)
!2944 = !DILocation(line: 430, column: 27, scope: !2909)
!2945 = !DILocation(line: 430, column: 32, scope: !2909)
!2946 = !DILocation(line: 430, column: 15, scope: !2909)
!2947 = !DILocation(line: 431, column: 19, scope: !2909)
!2948 = distinct !{!2948, !2927, !2949}
!2949 = !DILocation(line: 432, column: 5, scope: !2894)
!2950 = !DILocation(line: 433, column: 1, scope: !2894)
!2951 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !343, file: !343, line: 281, type: !2952, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2956)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{!670, !2954, !7}
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!2956 = !{!2957, !2958}
!2957 = !DILocalVariable(name: "vec_", arg: 1, scope: !2951, file: !343, line: 281, type: !2954)
!2958 = !DILocalVariable(name: "ix_", arg: 2, scope: !2951, file: !343, line: 281, type: !7)
!2959 = !DILocation(line: 0, scope: !2951)
!2960 = !DILocation(line: 281, column: 1, scope: !2951)
!2961 = distinct !DISubprogram(name: "bmp_iter_next", scope: !957, file: !957, line: 382, type: !2962, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2964)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{null, !2850, !2854}
!2964 = !{!2965, !2966}
!2965 = !DILocalVariable(name: "bi", arg: 1, scope: !2961, file: !957, line: 382, type: !2850)
!2966 = !DILocalVariable(name: "bit_no", arg: 2, scope: !2961, file: !957, line: 382, type: !2854)
!2967 = !DILocation(line: 0, scope: !2961)
!2968 = !DILocation(line: 384, column: 7, scope: !2961)
!2969 = !DILocation(line: 384, column: 12, scope: !2961)
!2970 = !DILocation(line: 385, column: 11, scope: !2961)
!2971 = !DILocation(line: 386, column: 1, scope: !2961)
!2972 = distinct !DISubprogram(name: "ei_start_1", scope: !343, file: !343, line: 696, type: !2973, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2975)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{!2784, !2789}
!2975 = !{!2976, !2977}
!2976 = !DILocalVariable(name: "ev", arg: 1, scope: !2972, file: !343, line: 696, type: !2789)
!2977 = !DILocalVariable(name: "i", scope: !2972, file: !343, line: 698, type: !2784)
!2978 = !DILocation(line: 0, scope: !2972)
!2979 = !DILocation(line: 700, column: 5, scope: !2972)
!2980 = !DILocation(line: 700, column: 11, scope: !2972)
!2981 = !DILocation(line: 701, column: 5, scope: !2972)
!2982 = !DILocation(line: 701, column: 15, scope: !2972)
!2983 = !DILocation(line: 703, column: 3, scope: !2972)
!2984 = distinct !DISubprogram(name: "ei_cond", scope: !343, file: !343, line: 771, type: !2985, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2988)
!2985 = !DISubroutineType(types: !2986)
!2986 = !{!661, !2784, !2987}
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!2988 = !{!2989, !2990}
!2989 = !DILocalVariable(name: "ei", arg: 1, scope: !2984, file: !343, line: 771, type: !2784)
!2990 = !DILocalVariable(name: "p", arg: 2, scope: !2984, file: !343, line: 771, type: !2987)
!2991 = !DILocation(line: 0, scope: !2984)
!2992 = !DILocation(line: 773, column: 8, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2984, file: !343, line: 773, column: 7)
!2994 = !DILocation(line: 773, column: 7, scope: !2984)
!2995 = !DILocation(line: 775, column: 12, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2993, file: !343, line: 774, column: 5)
!2997 = !DILocation(line: 776, column: 7, scope: !2996)
!2998 = !DILocation(line: 781, column: 7, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2993, file: !343, line: 779, column: 5)
!3000 = !DILocation(line: 0, scope: !2993)
!3001 = !DILocation(line: 783, column: 1, scope: !2984)
!3002 = distinct !DISubprogram(name: "ei_next", scope: !343, file: !343, line: 736, type: !3003, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3006)
!3003 = !DISubroutineType(types: !3004)
!3004 = !{null, !3005}
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!3006 = !{!3007}
!3007 = !DILocalVariable(name: "i", arg: 1, scope: !3002, file: !343, line: 736, type: !3005)
!3008 = !DILocation(line: 0, scope: !3002)
!3009 = !DILocation(line: 738, column: 3, scope: !3002)
!3010 = !DILocation(line: 739, column: 11, scope: !3002)
!3011 = !DILocation(line: 740, column: 1, scope: !3002)
!3012 = distinct !DISubprogram(name: "dump_decl_set", scope: !3, file: !3, line: 1471, type: !3013, scopeLine: 1472, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3015)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{null, !2074, !1319}
!3015 = !{!3016, !3017, !3018, !3021}
!3016 = !DILocalVariable(name: "file", arg: 1, scope: !3012, file: !3, line: 1471, type: !2074)
!3017 = !DILocalVariable(name: "set", arg: 2, scope: !3012, file: !3, line: 1471, type: !1319)
!3018 = !DILocalVariable(name: "bi", scope: !3019, file: !3, line: 1475, type: !2774)
!3019 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 1474, column: 5)
!3020 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 1473, column: 7)
!3021 = !DILocalVariable(name: "i", scope: !3019, file: !3, line: 1476, type: !7)
!3022 = !DILocation(line: 0, scope: !3012)
!3023 = !DILocation(line: 1473, column: 7, scope: !3020)
!3024 = !DILocation(line: 1473, column: 7, scope: !3012)
!3025 = !DILocation(line: 1475, column: 7, scope: !3019)
!3026 = !DILocation(line: 1476, column: 7, scope: !3019)
!3027 = !DILocation(line: 1478, column: 7, scope: !3019)
!3028 = !DILocation(line: 0, scope: !3019)
!3029 = !DILocation(line: 1480, column: 7, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1480, column: 7)
!3031 = !DILocation(line: 1480, column: 7, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3030, file: !3, line: 1480, column: 7)
!3033 = !DILocation(line: 1482, column: 30, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 1481, column: 2)
!3035 = !DILocation(line: 1482, column: 4, scope: !3034)
!3036 = !DILocation(line: 1483, column: 4, scope: !3034)
!3037 = distinct !{!3037, !3029, !3038}
!3038 = !DILocation(line: 1484, column: 2, scope: !3030)
!3039 = !DILocation(line: 1486, column: 7, scope: !3019)
!3040 = !DILocation(line: 1487, column: 5, scope: !3020)
!3041 = !DILocation(line: 1487, column: 5, scope: !3019)
!3042 = !DILocation(line: 1489, column: 5, scope: !3020)
!3043 = !DILocation(line: 1490, column: 1, scope: !3012)
!3044 = distinct !DISubprogram(name: "debug_decl_set", scope: !3, file: !3, line: 1496, type: !3045, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3047)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{null, !1319}
!3047 = !{!3048}
!3048 = !DILocalVariable(name: "set", arg: 1, scope: !3044, file: !3, line: 1496, type: !1319)
!3049 = !DILocation(line: 0, scope: !3044)
!3050 = !DILocation(line: 1498, column: 18, scope: !3044)
!3051 = !DILocation(line: 1498, column: 3, scope: !3044)
!3052 = !DILocation(line: 1499, column: 12, scope: !3044)
!3053 = !DILocation(line: 1499, column: 3, scope: !3044)
!3054 = !DILocation(line: 1500, column: 1, scope: !3044)
!3055 = distinct !DISubprogram(name: "dump_defs_stack", scope: !3, file: !3, line: 1509, type: !3056, scopeLine: 1510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3058)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{null, !2074, !662}
!3058 = !{!3059, !3060, !3061, !3062, !3063, !3067}
!3059 = !DILocalVariable(name: "file", arg: 1, scope: !3055, file: !3, line: 1509, type: !2074)
!3060 = !DILocalVariable(name: "n", arg: 2, scope: !3055, file: !3, line: 1509, type: !662)
!3061 = !DILocalVariable(name: "i", scope: !3055, file: !3, line: 1511, type: !662)
!3062 = !DILocalVariable(name: "j", scope: !3055, file: !3, line: 1511, type: !662)
!3063 = !DILocalVariable(name: "name", scope: !3064, file: !3, line: 1522, type: !733)
!3064 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 1521, column: 5)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 1520, column: 3)
!3066 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 1520, column: 3)
!3067 = !DILocalVariable(name: "var", scope: !3064, file: !3, line: 1522, type: !733)
!3068 = !DILocation(line: 0, scope: !3055)
!3069 = !DILocation(line: 1513, column: 3, scope: !3055)
!3070 = !DILocation(line: 1514, column: 9, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 1514, column: 7)
!3072 = !DILocation(line: 1514, column: 7, scope: !3055)
!3073 = !DILocation(line: 1515, column: 5, scope: !3071)
!3074 = !DILocation(line: 1516, column: 3, scope: !3055)
!3075 = !DILocation(line: 1519, column: 3, scope: !3055)
!3076 = !DILocation(line: 1520, column: 18, scope: !3066)
!3077 = !DILocation(line: 1520, column: 8, scope: !3066)
!3078 = !DILocation(line: 0, scope: !3066)
!3079 = !DILocation(line: 1520, column: 61, scope: !3065)
!3080 = !DILocation(line: 1520, column: 3, scope: !3066)
!3081 = !DILocation(line: 1524, column: 14, scope: !3064)
!3082 = !DILocation(line: 0, scope: !3064)
!3083 = !DILocation(line: 1525, column: 16, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 1525, column: 11)
!3085 = !DILocation(line: 1525, column: 11, scope: !3064)
!3086 = !DILocation(line: 1534, column: 11, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 1534, column: 11)
!3088 = !DILocation(line: 1534, column: 11, scope: !3064)
!3089 = !DILocation(line: 1541, column: 10, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 1540, column: 2)
!3091 = !DILocation(line: 1542, column: 9, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 1542, column: 8)
!3093 = !DILocation(line: 1542, column: 8, scope: !3090)
!3094 = !DILocation(line: 1544, column: 9, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 1543, column: 6)
!3096 = !DILocation(line: 1545, column: 14, scope: !3095)
!3097 = !DILocation(line: 1546, column: 6, scope: !3095)
!3098 = !DILocation(line: 1520, column: 10, scope: !3066)
!3099 = !DILocation(line: 0, scope: !3087)
!3100 = !DILocation(line: 1549, column: 7, scope: !3064)
!3101 = !DILocation(line: 1550, column: 7, scope: !3064)
!3102 = !DILocation(line: 1551, column: 7, scope: !3064)
!3103 = !DILocation(line: 1552, column: 11, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 1552, column: 11)
!3105 = !DILocation(line: 1552, column: 11, scope: !3064)
!3106 = !DILocation(line: 1553, column: 2, scope: !3104)
!3107 = !DILocation(line: 1555, column: 2, scope: !3104)
!3108 = !DILocation(line: 1556, column: 7, scope: !3064)
!3109 = !DILocation(line: 1557, column: 5, scope: !3065)
!3110 = !DILocation(line: 1527, column: 5, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 1526, column: 2)
!3112 = !DILocation(line: 1528, column: 19, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 1528, column: 8)
!3114 = !DILocation(line: 1528, column: 14, scope: !3113)
!3115 = !DILocation(line: 1530, column: 4, scope: !3111)
!3116 = !DILocation(line: 1531, column: 4, scope: !3111)
!3117 = !DILocation(line: 1520, column: 3, scope: !3065)
!3118 = distinct !{!3118, !3080, !3119}
!3119 = !DILocation(line: 1557, column: 5, scope: !3066)
!3120 = !DILocation(line: 1558, column: 1, scope: !3055)
!3121 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !135, file: !135, line: 182, type: !3122, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3126)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{!7, !3124}
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1300)
!3126 = !{!3127}
!3127 = !DILocalVariable(name: "vec_", arg: 1, scope: !3121, file: !135, line: 182, type: !3124)
!3128 = !DILocation(line: 0, scope: !3121)
!3129 = !DILocation(line: 182, column: 1, scope: !3121)
!3130 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !135, file: !135, line: 182, type: !3131, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3133)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{!733, !3124, !7}
!3133 = !{!3134, !3135}
!3134 = !DILocalVariable(name: "vec_", arg: 1, scope: !3130, file: !135, line: 182, type: !3124)
!3135 = !DILocalVariable(name: "ix_", arg: 2, scope: !3130, file: !135, line: 182, type: !7)
!3136 = !DILocation(line: 0, scope: !3130)
!3137 = !DILocation(line: 182, column: 1, scope: !3130)
!3138 = distinct !DISubprogram(name: "debug_defs_stack", scope: !3, file: !3, line: 1567, type: !3139, scopeLine: 1568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3141)
!3139 = !DISubroutineType(types: !3140)
!3140 = !{null, !662}
!3141 = !{!3142}
!3142 = !DILocalVariable(name: "n", arg: 1, scope: !3138, file: !3, line: 1567, type: !662)
!3143 = !DILocation(line: 0, scope: !3138)
!3144 = !DILocation(line: 1569, column: 20, scope: !3138)
!3145 = !DILocation(line: 1569, column: 3, scope: !3138)
!3146 = !DILocation(line: 1570, column: 1, scope: !3138)
!3147 = distinct !DISubprogram(name: "dump_currdefs", scope: !3, file: !3, line: 1576, type: !3148, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3150)
!3148 = !DISubroutineType(types: !3149)
!3149 = !{null, !2074}
!3150 = !{!3151, !3152, !3163}
!3151 = !DILocalVariable(name: "file", arg: 1, scope: !3147, file: !3, line: 1576, type: !2074)
!3152 = !DILocalVariable(name: "i", scope: !3147, file: !3, line: 1578, type: !3153)
!3153 = !DIDerivedType(tag: DW_TAG_typedef, name: "referenced_var_iterator", file: !586, line: 336, baseType: !3154)
!3154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !586, line: 333, size: 192, elements: !3155)
!3155 = !{!3156}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "hti", scope: !3154, file: !586, line: 335, baseType: !3157, size: 192)
!3157 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_iterator", file: !586, line: 98, baseType: !3158)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !586, line: 93, size: 192, elements: !3159)
!3159 = !{!3160, !3161, !3162}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "htab", scope: !3158, file: !586, line: 95, baseType: !1232, size: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !3158, file: !586, line: 96, baseType: !1254, size: 64, offset: 64)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !3158, file: !586, line: 97, baseType: !1254, size: 64, offset: 128)
!3163 = !DILocalVariable(name: "var", scope: !3147, file: !3, line: 1579, type: !733)
!3164 = !DILocation(line: 0, scope: !3147)
!3165 = !DILocation(line: 1578, column: 3, scope: !3147)
!3166 = !DILocation(line: 1581, column: 3, scope: !3147)
!3167 = !DILocation(line: 1582, column: 3, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 1582, column: 3)
!3169 = !DILocation(line: 0, scope: !3168)
!3170 = !DILocation(line: 1582, column: 3, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 1582, column: 3)
!3172 = !DILocation(line: 1583, column: 9, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 1583, column: 9)
!3174 = !DILocation(line: 1583, column: 31, scope: !3173)
!3175 = !DILocation(line: 1584, column: 2, scope: !3173)
!3176 = !DILocation(line: 1584, column: 42, scope: !3173)
!3177 = !DILocation(line: 1584, column: 5, scope: !3173)
!3178 = !DILocation(line: 1583, column: 9, scope: !3171)
!3179 = !DILocation(line: 1586, column: 2, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3173, file: !3, line: 1585, column: 7)
!3181 = !DILocation(line: 1587, column: 2, scope: !3180)
!3182 = !DILocation(line: 1588, column: 2, scope: !3180)
!3183 = !DILocation(line: 1589, column: 6, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3180, file: !3, line: 1589, column: 6)
!3185 = !DILocation(line: 1589, column: 6, scope: !3180)
!3186 = !DILocation(line: 1590, column: 30, scope: !3184)
!3187 = !DILocation(line: 1590, column: 4, scope: !3184)
!3188 = !DILocation(line: 1592, column: 4, scope: !3184)
!3189 = !DILocation(line: 1593, column: 2, scope: !3180)
!3190 = !DILocation(line: 1594, column: 7, scope: !3180)
!3191 = distinct !{!3191, !3167, !3192}
!3192 = !DILocation(line: 1594, column: 7, scope: !3168)
!3193 = !DILocation(line: 1595, column: 1, scope: !3147)
!3194 = distinct !DISubprogram(name: "first_referenced_var", scope: !2728, file: !2728, line: 105, type: !3195, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3198)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!733, !3197}
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3198 = !{!3199}
!3199 = !DILocalVariable(name: "iter", arg: 1, scope: !3194, file: !2728, line: 105, type: !3197)
!3200 = !DILocation(line: 0, scope: !3194)
!3201 = !DILocation(line: 107, column: 44, scope: !3194)
!3202 = !DILocation(line: 108, column: 33, scope: !3194)
!3203 = !DILocation(line: 108, column: 9, scope: !3194)
!3204 = !DILocation(line: 107, column: 17, scope: !3194)
!3205 = !DILocation(line: 107, column: 10, scope: !3194)
!3206 = !DILocation(line: 107, column: 3, scope: !3194)
!3207 = distinct !DISubprogram(name: "end_referenced_vars_p", scope: !2728, file: !2728, line: 115, type: !3208, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3212)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{!661, !3210}
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3153)
!3212 = !{!3213}
!3213 = !DILocalVariable(name: "iter", arg: 1, scope: !3207, file: !2728, line: 115, type: !3210)
!3214 = !DILocation(line: 0, scope: !3207)
!3215 = !DILocation(line: 117, column: 29, scope: !3207)
!3216 = !DILocation(line: 117, column: 10, scope: !3207)
!3217 = !DILocation(line: 117, column: 3, scope: !3207)
!3218 = distinct !DISubprogram(name: "next_referenced_var", scope: !2728, file: !2728, line: 124, type: !3195, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3219)
!3219 = !{!3220}
!3220 = !DILocalVariable(name: "iter", arg: 1, scope: !3218, file: !2728, line: 124, type: !3197)
!3221 = !DILocation(line: 0, scope: !3218)
!3222 = !DILocation(line: 126, column: 43, scope: !3218)
!3223 = !DILocation(line: 126, column: 17, scope: !3218)
!3224 = !DILocation(line: 126, column: 10, scope: !3218)
!3225 = !DILocation(line: 126, column: 3, scope: !3218)
!3226 = distinct !DISubprogram(name: "debug_currdefs", scope: !3, file: !3, line: 1601, type: !3227, scopeLine: 1602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{null}
!3229 = !DILocation(line: 1603, column: 18, scope: !3226)
!3230 = !DILocation(line: 1603, column: 3, scope: !3226)
!3231 = !DILocation(line: 1604, column: 1, scope: !3226)
!3232 = distinct !DISubprogram(name: "dump_tree_ssa", scope: !3, file: !3, line: 1610, type: !3148, scopeLine: 1611, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3233)
!3233 = !{!3234, !3235}
!3234 = !DILocalVariable(name: "file", arg: 1, scope: !3232, file: !3, line: 1610, type: !2074)
!3235 = !DILocalVariable(name: "funcname", scope: !3232, file: !3, line: 1612, type: !667)
!3236 = !DILocation(line: 0, scope: !3232)
!3237 = !DILocation(line: 1613, column: 18, scope: !3232)
!3238 = !DILocation(line: 1613, column: 39, scope: !3232)
!3239 = !DILocation(line: 1613, column: 7, scope: !3232)
!3240 = !DILocation(line: 1615, column: 3, scope: !3232)
!3241 = !DILocation(line: 1617, column: 3, scope: !3232)
!3242 = !DILocation(line: 1618, column: 3, scope: !3232)
!3243 = !DILocation(line: 1619, column: 3, scope: !3232)
!3244 = !DILocation(line: 1620, column: 3, scope: !3232)
!3245 = !DILocation(line: 1621, column: 1, scope: !3232)
!3246 = distinct !DISubprogram(name: "dump_def_blocks", scope: !3, file: !3, line: 1730, type: !3148, scopeLine: 1731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3247)
!3247 = !{!3248}
!3248 = !DILocalVariable(name: "file", arg: 1, scope: !3246, file: !3, line: 1730, type: !2074)
!3249 = !DILocation(line: 0, scope: !3246)
!3250 = !DILocation(line: 1732, column: 3, scope: !3246)
!3251 = !DILocation(line: 1733, column: 7, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 1733, column: 7)
!3253 = !DILocation(line: 1733, column: 7, scope: !3246)
!3254 = !DILocation(line: 1734, column: 52, scope: !3252)
!3255 = !DILocation(line: 1734, column: 5, scope: !3252)
!3256 = !DILocation(line: 1735, column: 1, scope: !3246)
!3257 = distinct !DISubprogram(name: "dump_tree_ssa_stats", scope: !3, file: !3, line: 1648, type: !3148, scopeLine: 1649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3258)
!3258 = !{!3259}
!3259 = !DILocalVariable(name: "file", arg: 1, scope: !3257, file: !3, line: 1648, type: !2074)
!3260 = !DILocation(line: 0, scope: !3257)
!3261 = !DILocation(line: 1650, column: 7, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1650, column: 7)
!3263 = !DILocation(line: 1650, column: 21, scope: !3262)
!3264 = !DILocation(line: 1650, column: 18, scope: !3262)
!3265 = !DILocation(line: 1651, column: 5, scope: !3262)
!3266 = !DILocation(line: 1653, column: 7, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1653, column: 7)
!3268 = !DILocation(line: 1653, column: 7, scope: !3257)
!3269 = !DILocation(line: 1655, column: 7, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 1654, column: 5)
!3271 = !DILocation(line: 1656, column: 30, scope: !3270)
!3272 = !DILocation(line: 1656, column: 7, scope: !3270)
!3273 = !DILocation(line: 1657, column: 5, scope: !3270)
!3274 = !DILocation(line: 1659, column: 7, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1659, column: 7)
!3276 = !DILocation(line: 1659, column: 7, scope: !3257)
!3277 = !DILocation(line: 1661, column: 7, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 1660, column: 5)
!3279 = !DILocation(line: 1662, column: 30, scope: !3278)
!3280 = !DILocation(line: 1662, column: 7, scope: !3278)
!3281 = !DILocation(line: 1665, column: 21, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1665, column: 7)
!3283 = !DILocation(line: 1663, column: 5, scope: !3278)
!3284 = !DILocation(line: 1665, column: 7, scope: !3282)
!3285 = !DILocation(line: 1665, column: 18, scope: !3282)
!3286 = !DILocation(line: 1666, column: 5, scope: !3282)
!3287 = !DILocation(line: 1667, column: 1, scope: !3257)
!3288 = distinct !DISubprogram(name: "debug_tree_ssa", scope: !3, file: !3, line: 1627, type: !3227, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!3289 = !DILocation(line: 1629, column: 18, scope: !3288)
!3290 = !DILocation(line: 1629, column: 3, scope: !3288)
!3291 = !DILocation(line: 1630, column: 1, scope: !3288)
!3292 = distinct !DISubprogram(name: "htab_statistics", scope: !3, file: !3, line: 1636, type: !3293, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3295)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{null, !2074, !1232}
!3295 = !{!3296, !3297}
!3296 = !DILocalVariable(name: "file", arg: 1, scope: !3292, file: !3, line: 1636, type: !2074)
!3297 = !DILocalVariable(name: "htab", arg: 2, scope: !3292, file: !3, line: 1636, type: !1232)
!3298 = !DILocation(line: 0, scope: !3292)
!3299 = !DILocation(line: 1639, column: 12, scope: !3292)
!3300 = !DILocation(line: 1640, column: 12, scope: !3292)
!3301 = !DILocation(line: 1641, column: 5, scope: !3292)
!3302 = !DILocation(line: 1638, column: 3, scope: !3292)
!3303 = !DILocation(line: 1642, column: 1, scope: !3292)
!3304 = distinct !DISubprogram(name: "debug_tree_ssa_stats", scope: !3, file: !3, line: 1673, type: !3227, scopeLine: 1674, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!3305 = !DILocation(line: 1675, column: 24, scope: !3304)
!3306 = !DILocation(line: 1675, column: 3, scope: !3304)
!3307 = !DILocation(line: 1676, column: 1, scope: !3304)
!3308 = distinct !DISubprogram(name: "debug_def_blocks_r", scope: !3, file: !3, line: 1712, type: !3309, scopeLine: 1713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3311)
!3309 = !DISubroutineType(types: !3310)
!3310 = !{!662, !1254, !666}
!3311 = !{!3312, !3313, !3314, !3315}
!3312 = !DILocalVariable(name: "slot", arg: 1, scope: !3308, file: !3, line: 1712, type: !1254)
!3313 = !DILocalVariable(name: "data", arg: 2, scope: !3308, file: !3, line: 1712, type: !666)
!3314 = !DILocalVariable(name: "file", scope: !3308, file: !3, line: 1714, type: !2074)
!3315 = !DILocalVariable(name: "db_p", scope: !3308, file: !3, line: 1715, type: !2125)
!3316 = !DILocation(line: 0, scope: !3308)
!3317 = !DILocation(line: 1714, column: 16, scope: !3308)
!3318 = !DILocation(line: 1715, column: 55, scope: !3308)
!3319 = !DILocation(line: 1717, column: 3, scope: !3308)
!3320 = !DILocation(line: 1718, column: 35, scope: !3308)
!3321 = !DILocation(line: 1718, column: 40, scope: !3308)
!3322 = !DILocation(line: 1718, column: 3, scope: !3308)
!3323 = !DILocation(line: 1719, column: 29, scope: !3308)
!3324 = !DILocation(line: 1719, column: 3, scope: !3308)
!3325 = !DILocation(line: 1720, column: 29, scope: !3308)
!3326 = !DILocation(line: 1720, column: 3, scope: !3308)
!3327 = !DILocation(line: 1721, column: 29, scope: !3308)
!3328 = !DILocation(line: 1721, column: 3, scope: !3308)
!3329 = !DILocation(line: 1723, column: 3, scope: !3308)
!3330 = distinct !DISubprogram(name: "debug_def_blocks", scope: !3, file: !3, line: 1741, type: !3227, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!3331 = !DILocation(line: 1743, column: 20, scope: !3330)
!3332 = !DILocation(line: 1743, column: 3, scope: !3330)
!3333 = !DILocation(line: 1744, column: 1, scope: !3330)
!3334 = distinct !DISubprogram(name: "rewrite_into_ssa", scope: !3, file: !3, line: 2351, type: !2209, scopeLine: 2352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3335)
!3335 = !{!3336, !3337}
!3336 = !DILocalVariable(name: "dfs", scope: !3334, file: !3, line: 2353, type: !2053)
!3337 = !DILocalVariable(name: "bb", scope: !3334, file: !3, line: 2354, type: !670)
!3338 = !DILocation(line: 2356, column: 3, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3340, file: !3, line: 2356, column: 3)
!3340 = distinct !DILexicalBlock(scope: !3334, file: !3, line: 2356, column: 3)
!3341 = !DILocation(line: 2356, column: 3, scope: !3340)
!3342 = !DILocation(line: 2359, column: 3, scope: !3334)
!3343 = !DILocation(line: 2362, column: 3, scope: !3334)
!3344 = !DILocation(line: 2367, column: 39, scope: !3334)
!3345 = !DILocation(line: 2367, column: 24, scope: !3334)
!3346 = !DILocation(line: 2367, column: 22, scope: !3334)
!3347 = !DILocation(line: 2368, column: 3, scope: !3334)
!3348 = !DILocation(line: 2371, column: 9, scope: !3334)
!3349 = !DILocation(line: 0, scope: !3334)
!3350 = !DILocation(line: 2372, column: 3, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3334, file: !3, line: 2372, column: 3)
!3352 = !DILocation(line: 2372, column: 3, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 2372, column: 3)
!3354 = !DILocation(line: 0, scope: !3351)
!3355 = !DILocation(line: 2373, column: 22, scope: !3353)
!3356 = !DILocation(line: 2373, column: 13, scope: !3353)
!3357 = !DILocation(line: 2373, column: 5, scope: !3353)
!3358 = !DILocation(line: 2373, column: 20, scope: !3353)
!3359 = !DILocation(line: 0, scope: !3353)
!3360 = distinct !{!3360, !3350, !3361}
!3361 = !DILocation(line: 2373, column: 22, scope: !3351)
!3362 = !DILocation(line: 2376, column: 3, scope: !3334)
!3363 = !DILocation(line: 2377, column: 3, scope: !3334)
!3364 = !DILocation(line: 2380, column: 3, scope: !3334)
!3365 = !DILocation(line: 2383, column: 3, scope: !3334)
!3366 = !DILocation(line: 2386, column: 19, scope: !3334)
!3367 = !DILocation(line: 2386, column: 3, scope: !3334)
!3368 = !DILocation(line: 2389, column: 3, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3334, file: !3, line: 2389, column: 3)
!3370 = !DILocation(line: 2389, column: 3, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 2389, column: 3)
!3372 = !DILocation(line: 0, scope: !3369)
!3373 = !DILocation(line: 2390, column: 5, scope: !3371)
!3374 = !DILocation(line: 0, scope: !3371)
!3375 = distinct !{!3375, !3368, !3376}
!3376 = !DILocation(line: 2390, column: 5, scope: !3369)
!3377 = !DILocation(line: 2391, column: 3, scope: !3334)
!3378 = !DILocation(line: 2393, column: 3, scope: !3334)
!3379 = !DILocation(line: 2395, column: 3, scope: !3334)
!3380 = !DILocation(line: 2397, column: 3, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 2397, column: 3)
!3382 = distinct !DILexicalBlock(scope: !3334, file: !3, line: 2397, column: 3)
!3383 = !DILocation(line: 2397, column: 3, scope: !3382)
!3384 = !DILocation(line: 2398, column: 3, scope: !3334)
!3385 = distinct !DISubprogram(name: "dump_names_replaced_by", scope: !3, file: !3, line: 2671, type: !3386, scopeLine: 2672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3388)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{null, !2074, !733}
!3388 = !{!3389, !3390, !3391, !3392, !3393}
!3389 = !DILocalVariable(name: "file", arg: 1, scope: !3385, file: !3, line: 2671, type: !2074)
!3390 = !DILocalVariable(name: "name", arg: 2, scope: !3385, file: !3, line: 2671, type: !733)
!3391 = !DILocalVariable(name: "i", scope: !3385, file: !3, line: 2673, type: !7)
!3392 = !DILocalVariable(name: "old_set", scope: !3385, file: !3, line: 2674, type: !1319)
!3393 = !DILocalVariable(name: "bi", scope: !3385, file: !3, line: 2675, type: !2774)
!3394 = !DILocation(line: 0, scope: !3385)
!3395 = !DILocation(line: 2673, column: 3, scope: !3385)
!3396 = !DILocation(line: 2675, column: 3, scope: !3385)
!3397 = !DILocation(line: 2677, column: 3, scope: !3385)
!3398 = !DILocation(line: 2678, column: 3, scope: !3385)
!3399 = !DILocation(line: 2680, column: 13, scope: !3385)
!3400 = !DILocation(line: 2681, column: 3, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 2681, column: 3)
!3402 = !DILocation(line: 2681, column: 3, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 2681, column: 3)
!3404 = !DILocation(line: 2683, column: 33, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 2682, column: 5)
!3406 = !DILocation(line: 2683, column: 7, scope: !3405)
!3407 = !DILocation(line: 2684, column: 7, scope: !3405)
!3408 = distinct !{!3408, !3400, !3409}
!3409 = !DILocation(line: 2685, column: 5, scope: !3401)
!3410 = !DILocation(line: 2687, column: 3, scope: !3385)
!3411 = !DILocation(line: 2688, column: 1, scope: !3385)
!3412 = distinct !DISubprogram(name: "names_replaced_by", scope: !3, file: !3, line: 621, type: !3413, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3415)
!3413 = !DISubroutineType(types: !3414)
!3414 = !{!1319, !733}
!3415 = !{!3416, !3417, !3418}
!3416 = !DILocalVariable(name: "new_tree", arg: 1, scope: !3412, file: !3, line: 621, type: !733)
!3417 = !DILocalVariable(name: "m", scope: !3412, file: !3, line: 623, type: !2178)
!3418 = !DILocalVariable(name: "slot", scope: !3412, file: !3, line: 624, type: !1254)
!3419 = !DILocation(line: 0, scope: !3412)
!3420 = !DILocation(line: 623, column: 3, scope: !3412)
!3421 = !DILocation(line: 626, column: 5, scope: !3412)
!3422 = !DILocation(line: 626, column: 10, scope: !3412)
!3423 = !DILocation(line: 627, column: 26, scope: !3412)
!3424 = !DILocation(line: 627, column: 10, scope: !3412)
!3425 = !DILocation(line: 630, column: 12, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 630, column: 7)
!3427 = !DILocation(line: 630, column: 20, scope: !3426)
!3428 = !DILocation(line: 630, column: 23, scope: !3426)
!3429 = !DILocation(line: 630, column: 29, scope: !3426)
!3430 = !DILocation(line: 630, column: 7, scope: !3412)
!3431 = !DILocation(line: 633, column: 41, scope: !3412)
!3432 = !DILocation(line: 633, column: 3, scope: !3412)
!3433 = !DILocation(line: 634, column: 1, scope: !3412)
!3434 = distinct !DISubprogram(name: "debug_names_replaced_by", scope: !3, file: !3, line: 2694, type: !3435, scopeLine: 2695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3437)
!3435 = !DISubroutineType(types: !3436)
!3436 = !{null, !733}
!3437 = !{!3438}
!3438 = !DILocalVariable(name: "name", arg: 1, scope: !3434, file: !3, line: 2694, type: !733)
!3439 = !DILocation(line: 0, scope: !3434)
!3440 = !DILocation(line: 2696, column: 27, scope: !3434)
!3441 = !DILocation(line: 2696, column: 3, scope: !3434)
!3442 = !DILocation(line: 2697, column: 1, scope: !3434)
!3443 = distinct !DISubprogram(name: "dump_update_ssa", scope: !3, file: !3, line: 2703, type: !3148, scopeLine: 2704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3444)
!3444 = !{!3445, !3446, !3447, !3448}
!3445 = !DILocalVariable(name: "file", arg: 1, scope: !3443, file: !3, line: 2703, type: !2074)
!3446 = !DILocalVariable(name: "i", scope: !3443, file: !3, line: 2705, type: !7)
!3447 = !DILocalVariable(name: "bi", scope: !3443, file: !3, line: 2706, type: !2774)
!3448 = !DILocalVariable(name: "sbi", scope: !3449, file: !3, line: 2713, type: !3451)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !3, line: 2712, column: 5)
!3450 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 2711, column: 7)
!3451 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap_iterator", file: !2227, line: 111, baseType: !3452)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2227, line: 96, size: 256, elements: !3453)
!3453 = !{!3454, !3457, !3458, !3459, !3460}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3452, file: !2227, line: 98, baseType: !3455, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !786)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3452, file: !2227, line: 101, baseType: !7, size: 32, offset: 64)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "word_num", scope: !3452, file: !2227, line: 104, baseType: !7, size: 32, offset: 96)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "bit_num", scope: !3452, file: !2227, line: 107, baseType: !7, size: 32, offset: 128)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !3452, file: !2227, line: 110, baseType: !786, size: 64, offset: 192)
!3461 = !DILocation(line: 0, scope: !3443)
!3462 = !DILocation(line: 2705, column: 3, scope: !3443)
!3463 = !DILocation(line: 2705, column: 12, scope: !3443)
!3464 = !DILocation(line: 2706, column: 3, scope: !3443)
!3465 = !DILocation(line: 2708, column: 27, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 2708, column: 7)
!3467 = !DILocation(line: 2708, column: 8, scope: !3466)
!3468 = !DILocation(line: 2708, column: 7, scope: !3443)
!3469 = !DILocation(line: 2711, column: 7, scope: !3450)
!3470 = !DILocation(line: 2711, column: 21, scope: !3450)
!3471 = !DILocation(line: 2711, column: 24, scope: !3450)
!3472 = !DILocation(line: 2711, column: 62, scope: !3450)
!3473 = !DILocation(line: 2711, column: 7, scope: !3443)
!3474 = !DILocation(line: 2713, column: 7, scope: !3449)
!3475 = !DILocation(line: 2715, column: 7, scope: !3449)
!3476 = !DILocation(line: 2716, column: 7, scope: !3449)
!3477 = !DILocation(line: 2719, column: 7, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 2719, column: 7)
!3479 = !DILocation(line: 0, scope: !3449)
!3480 = !DILocation(line: 2719, column: 7, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 2719, column: 7)
!3482 = !DILocation(line: 2720, column: 32, scope: !3481)
!3483 = !DILocation(line: 2720, column: 2, scope: !3481)
!3484 = distinct !{!3484, !3477, !3485}
!3485 = !DILocation(line: 2720, column: 44, scope: !3478)
!3486 = !DILocation(line: 2722, column: 7, scope: !3449)
!3487 = !DILocation(line: 2724, column: 26, scope: !3449)
!3488 = !DILocation(line: 2723, column: 7, scope: !3449)
!3489 = !DILocation(line: 2726, column: 26, scope: !3449)
!3490 = !DILocation(line: 2727, column: 28, scope: !3449)
!3491 = !DILocation(line: 2727, column: 9, scope: !3449)
!3492 = !DILocation(line: 2725, column: 7, scope: !3449)
!3493 = !DILocation(line: 2729, column: 26, scope: !3449)
!3494 = !DILocation(line: 2728, column: 7, scope: !3449)
!3495 = !DILocation(line: 2732, column: 26, scope: !3449)
!3496 = !DILocation(line: 2731, column: 7, scope: !3449)
!3497 = !DILocation(line: 2733, column: 5, scope: !3450)
!3498 = !DILocation(line: 2733, column: 5, scope: !3449)
!3499 = !DILocation(line: 2735, column: 8, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 2735, column: 7)
!3501 = !DILocation(line: 2735, column: 7, scope: !3443)
!3502 = !DILocation(line: 2737, column: 7, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3500, file: !3, line: 2736, column: 5)
!3504 = !DILocation(line: 2738, column: 28, scope: !3503)
!3505 = !DILocation(line: 2738, column: 7, scope: !3503)
!3506 = !DILocation(line: 2739, column: 7, scope: !3503)
!3507 = !DILocation(line: 2740, column: 5, scope: !3503)
!3508 = !DILocation(line: 2742, column: 7, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 2742, column: 7)
!3510 = !DILocation(line: 2742, column: 24, scope: !3509)
!3511 = !DILocation(line: 2742, column: 28, scope: !3509)
!3512 = !DILocation(line: 2742, column: 7, scope: !3443)
!3513 = !DILocation(line: 2744, column: 7, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3509, file: !3, line: 2743, column: 5)
!3515 = !DILocation(line: 2745, column: 7, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 2745, column: 7)
!3517 = !DILocation(line: 2745, column: 7, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 2745, column: 7)
!3519 = !DILocation(line: 2747, column: 30, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 2746, column: 2)
!3521 = !DILocation(line: 2747, column: 4, scope: !3520)
!3522 = !DILocation(line: 2748, column: 4, scope: !3520)
!3523 = distinct !{!3523, !3515, !3524}
!3524 = !DILocation(line: 2749, column: 2, scope: !3516)
!3525 = !DILocation(line: 2752, column: 3, scope: !3443)
!3526 = !DILocation(line: 2753, column: 1, scope: !3443)
!3527 = distinct !DISubprogram(name: "need_ssa_update_p", scope: !3, file: !3, line: 2916, type: !3528, scopeLine: 2917, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3530)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{!661, !1189}
!3530 = !{!3531}
!3531 = !DILocalVariable(name: "fn", arg: 1, scope: !3527, file: !3, line: 2916, type: !1189)
!3532 = !DILocation(line: 0, scope: !3527)
!3533 = !DILocation(line: 2918, column: 3, scope: !3527)
!3534 = !DILocation(line: 2919, column: 11, scope: !3527)
!3535 = !DILocation(line: 2919, column: 37, scope: !3527)
!3536 = !DILocation(line: 2920, column: 4, scope: !3527)
!3537 = !DILocation(line: 2920, column: 12, scope: !3527)
!3538 = !DILocation(line: 2920, column: 8, scope: !3527)
!3539 = !DILocation(line: 2921, column: 8, scope: !3527)
!3540 = !DILocation(line: 2921, column: 12, scope: !3527)
!3541 = !DILocation(line: 2919, column: 3, scope: !3527)
!3542 = distinct !DISubprogram(name: "sbitmap_iter_init", scope: !2227, file: !2227, line: 117, type: !3543, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3549)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{null, !3545, !3546, !7}
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3546 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_sbitmap", file: !2227, line: 46, baseType: !3547)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2229)
!3549 = !{!3550, !3551, !3552}
!3550 = !DILocalVariable(name: "i", arg: 1, scope: !3542, file: !2227, line: 117, type: !3545)
!3551 = !DILocalVariable(name: "bmp", arg: 2, scope: !3542, file: !2227, line: 117, type: !3546)
!3552 = !DILocalVariable(name: "min", arg: 3, scope: !3542, file: !2227, line: 117, type: !7)
!3553 = !DILocation(line: 0, scope: !3542)
!3554 = !DILocation(line: 119, column: 6, scope: !3542)
!3555 = !DILocation(line: 119, column: 15, scope: !3542)
!3556 = !DILocation(line: 120, column: 6, scope: !3542)
!3557 = !DILocation(line: 120, column: 14, scope: !3542)
!3558 = !DILocation(line: 121, column: 18, scope: !3542)
!3559 = !DILocation(line: 121, column: 6, scope: !3542)
!3560 = !DILocation(line: 121, column: 11, scope: !3542)
!3561 = !DILocation(line: 122, column: 12, scope: !3542)
!3562 = !DILocation(line: 122, column: 6, scope: !3542)
!3563 = !DILocation(line: 122, column: 10, scope: !3542)
!3564 = !DILocation(line: 124, column: 19, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3542, file: !2227, line: 124, column: 7)
!3566 = !DILocation(line: 124, column: 7, scope: !3542)
!3567 = !DILocation(line: 125, column: 8, scope: !3565)
!3568 = !DILocation(line: 125, column: 13, scope: !3565)
!3569 = !DILocation(line: 125, column: 5, scope: !3565)
!3570 = !DILocation(line: 127, column: 16, scope: !3565)
!3571 = !DILocation(line: 127, column: 8, scope: !3565)
!3572 = !DILocation(line: 127, column: 13, scope: !3565)
!3573 = !DILocation(line: 129, column: 1, scope: !3542)
!3574 = distinct !DISubprogram(name: "sbitmap_iter_cond", scope: !2227, file: !2227, line: 136, type: !3575, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3577)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!661, !3545, !2854}
!3577 = !{!3578, !3579}
!3578 = !DILocalVariable(name: "i", arg: 1, scope: !3574, file: !2227, line: 136, type: !3545)
!3579 = !DILocalVariable(name: "n", arg: 2, scope: !3574, file: !2227, line: 136, type: !2854)
!3580 = !DILocation(line: 0, scope: !3574)
!3581 = !DILocation(line: 0, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !2227, line: 139, column: 3)
!3583 = distinct !DILexicalBlock(scope: !3574, file: !2227, line: 139, column: 3)
!3584 = !DILocation(line: 0, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3582, file: !2227, line: 140, column: 5)
!3586 = !DILocation(line: 0, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3585, file: !2227, line: 144, column: 11)
!3588 = !DILocation(line: 139, column: 13, scope: !3582)
!3589 = !DILocation(line: 139, column: 3, scope: !3574)
!3590 = !DILocation(line: 139, column: 18, scope: !3582)
!3591 = !DILocation(line: 139, column: 3, scope: !3583)
!3592 = !DILocation(line: 151, column: 3, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3574, file: !2227, line: 151, column: 3)
!3594 = !DILocation(line: 141, column: 18, scope: !3585)
!3595 = !DILocation(line: 144, column: 29, scope: !3587)
!3596 = !DILocation(line: 144, column: 23, scope: !3587)
!3597 = !DILocation(line: 144, column: 11, scope: !3585)
!3598 = !DILocation(line: 147, column: 32, scope: !3585)
!3599 = !DILocation(line: 147, column: 18, scope: !3585)
!3600 = !DILocation(line: 139, column: 37, scope: !3582)
!3601 = !DILocation(line: 139, column: 34, scope: !3582)
!3602 = !DILocation(line: 139, column: 32, scope: !3582)
!3603 = !DILocation(line: 139, column: 3, scope: !3582)
!3604 = distinct !{!3604, !3591, !3605}
!3605 = !DILocation(line: 148, column: 5, scope: !3583)
!3606 = !DILocation(line: 151, column: 14, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3593, file: !2227, line: 151, column: 3)
!3608 = !DILocation(line: 151, column: 19, scope: !3607)
!3609 = !DILocation(line: 151, column: 24, scope: !3607)
!3610 = !DILocation(line: 152, column: 15, scope: !3607)
!3611 = !DILocation(line: 151, column: 38, scope: !3607)
!3612 = !DILocation(line: 151, column: 3, scope: !3607)
!3613 = distinct !{!3613, !3592, !3614}
!3614 = !DILocation(line: 152, column: 15, scope: !3593)
!3615 = !DILocation(line: 154, column: 6, scope: !3574)
!3616 = !DILocation(line: 156, column: 3, scope: !3574)
!3617 = !DILocation(line: 157, column: 1, scope: !3574)
!3618 = distinct !DISubprogram(name: "sbitmap_iter_next", scope: !2227, file: !2227, line: 162, type: !3619, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3621)
!3619 = !DISubroutineType(types: !3620)
!3620 = !{null, !3545}
!3621 = !{!3622}
!3622 = !DILocalVariable(name: "i", arg: 1, scope: !3618, file: !2227, line: 162, type: !3545)
!3623 = !DILocation(line: 0, scope: !3618)
!3624 = !DILocation(line: 164, column: 6, scope: !3618)
!3625 = !DILocation(line: 164, column: 11, scope: !3618)
!3626 = !DILocation(line: 165, column: 6, scope: !3618)
!3627 = !DILocation(line: 165, column: 13, scope: !3618)
!3628 = !DILocation(line: 166, column: 1, scope: !3618)
!3629 = distinct !DISubprogram(name: "debug_update_ssa", scope: !3, file: !3, line: 2759, type: !3227, scopeLine: 2760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!3630 = !DILocation(line: 2761, column: 20, scope: !3629)
!3631 = !DILocation(line: 2761, column: 3, scope: !3629)
!3632 = !DILocation(line: 2762, column: 1, scope: !3629)
!3633 = distinct !DISubprogram(name: "delete_update_ssa", scope: !3, file: !3, line: 2790, type: !3227, scopeLine: 2791, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3634)
!3634 = !{!3635, !3636, !3637}
!3635 = !DILocalVariable(name: "i", scope: !3633, file: !3, line: 2792, type: !7)
!3636 = !DILocalVariable(name: "bi", scope: !3633, file: !3, line: 2793, type: !2774)
!3637 = !DILocalVariable(name: "phis", scope: !3638, file: !3, line: 2821, type: !2171)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 2820, column: 7)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 2819, column: 5)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 2819, column: 5)
!3641 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 2818, column: 7)
!3642 = !DILocation(line: 2792, column: 3, scope: !3633)
!3643 = !DILocation(line: 2793, column: 3, scope: !3633)
!3644 = !DILocation(line: 2795, column: 3, scope: !3633)
!3645 = !DILocation(line: 2796, column: 17, scope: !3633)
!3646 = !DILocation(line: 2798, column: 3, scope: !3633)
!3647 = !DILocation(line: 2799, column: 17, scope: !3633)
!3648 = !DILocation(line: 2801, column: 16, scope: !3633)
!3649 = !DILocation(line: 2801, column: 3, scope: !3633)
!3650 = !DILocation(line: 2802, column: 12, scope: !3633)
!3651 = !DILocation(line: 2804, column: 17, scope: !3633)
!3652 = !DILocation(line: 2804, column: 3, scope: !3633)
!3653 = !DILocation(line: 2805, column: 3, scope: !3633)
!3654 = !DILocation(line: 2807, column: 7, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 2807, column: 7)
!3656 = !DILocation(line: 2807, column: 7, scope: !3633)
!3657 = !DILocation(line: 0, scope: !3633)
!3658 = !DILocation(line: 2809, column: 7, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 2809, column: 7)
!3660 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 2808, column: 5)
!3661 = !DILocation(line: 2809, column: 7, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3659, file: !3, line: 2809, column: 7)
!3663 = !DILocation(line: 2810, column: 20, scope: !3662)
!3664 = !DILocation(line: 2810, column: 2, scope: !3662)
!3665 = distinct !{!3665, !3658, !3666}
!3666 = !DILocation(line: 2810, column: 32, scope: !3659)
!3667 = !DILocation(line: 2811, column: 7, scope: !3660)
!3668 = !DILocation(line: 2812, column: 5, scope: !3660)
!3669 = !DILocation(line: 2814, column: 3, scope: !3633)
!3670 = !DILocation(line: 2816, column: 3, scope: !3633)
!3671 = !DILocation(line: 2818, column: 7, scope: !3641)
!3672 = !DILocation(line: 2818, column: 7, scope: !3633)
!3673 = !DILocation(line: 2819, column: 5, scope: !3640)
!3674 = !DILocation(line: 0, scope: !3638)
!3675 = !DILocation(line: 2819, column: 5, scope: !3639)
!3676 = !DILocation(line: 2821, column: 2, scope: !3638)
!3677 = !DILocation(line: 2821, column: 20, scope: !3638)
!3678 = !DILocation(line: 2821, column: 13, scope: !3638)
!3679 = !DILocation(line: 2823, column: 2, scope: !3638)
!3680 = !DILocation(line: 2824, column: 2, scope: !3638)
!3681 = !DILocation(line: 2825, column: 7, scope: !3639)
!3682 = distinct !{!3682, !3673, !3683}
!3683 = !DILocation(line: 2825, column: 7, scope: !3640)
!3684 = !DILocation(line: 2827, column: 3, scope: !3633)
!3685 = !DILocation(line: 2828, column: 3, scope: !3633)
!3686 = !DILocation(line: 2829, column: 29, scope: !3633)
!3687 = !DILocation(line: 2830, column: 1, scope: !3633)
!3688 = distinct !DISubprogram(name: "clear_ssa_name_info", scope: !3, file: !3, line: 319, type: !3227, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!3689 = !DILocation(line: 321, column: 32, scope: !3688)
!3690 = !DILocation(line: 322, column: 1, scope: !3688)
!3691 = distinct !DISubprogram(name: "fini_ssa_renamer", scope: !3, file: !3, line: 2322, type: !3227, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!3692 = !DILocation(line: 2324, column: 7, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2324, column: 7)
!3694 = !DILocation(line: 2324, column: 7, scope: !3691)
!3695 = !DILocation(line: 2326, column: 7, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 2325, column: 5)
!3697 = !DILocation(line: 2327, column: 18, scope: !3696)
!3698 = !DILocation(line: 2328, column: 5, scope: !3696)
!3699 = !DILocation(line: 2330, column: 3, scope: !3691)
!3700 = !DILocation(line: 2330, column: 9, scope: !3691)
!3701 = !DILocation(line: 2330, column: 20, scope: !3691)
!3702 = !DILocation(line: 2330, column: 29, scope: !3691)
!3703 = !DILocation(line: 2331, column: 1, scope: !3691)
!3704 = distinct !DISubprogram(name: "VEC_gimple_vec_base_index", scope: !581, file: !581, line: 48, type: !3705, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3709)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!2171, !3707, !7}
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3708, size: 64)
!3708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2164)
!3709 = !{!3710, !3711}
!3710 = !DILocalVariable(name: "vec_", arg: 1, scope: !3704, file: !581, line: 48, type: !3707)
!3711 = !DILocalVariable(name: "ix_", arg: 2, scope: !3704, file: !581, line: 48, type: !7)
!3712 = !DILocation(line: 0, scope: !3704)
!3713 = !DILocation(line: 48, column: 1, scope: !3704)
!3714 = distinct !DISubprogram(name: "VEC_gimple_heap_free", scope: !581, file: !581, line: 34, type: !3715, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3718)
!3715 = !DISubroutineType(types: !3716)
!3716 = !{null, !3717}
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!3718 = !{!3719}
!3719 = !DILocalVariable(name: "vec_", arg: 1, scope: !3714, file: !581, line: 34, type: !3717)
!3720 = !DILocation(line: 0, scope: !3714)
!3721 = !DILocation(line: 34, column: 1, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3714, file: !581, line: 34, column: 1)
!3723 = !DILocation(line: 34, column: 1, scope: !3714)
!3724 = distinct !DISubprogram(name: "VEC_gimple_vec_base_replace", scope: !581, file: !581, line: 48, type: !3725, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3728)
!3725 = !DISubroutineType(types: !3726)
!3726 = !{!2171, !3727, !7, !2171}
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!3728 = !{!3729, !3730, !3731, !3732}
!3729 = !DILocalVariable(name: "vec_", arg: 1, scope: !3724, file: !581, line: 48, type: !3727)
!3730 = !DILocalVariable(name: "ix_", arg: 2, scope: !3724, file: !581, line: 48, type: !7)
!3731 = !DILocalVariable(name: "obj_", arg: 3, scope: !3724, file: !581, line: 48, type: !2171)
!3732 = !DILocalVariable(name: "old_obj_", scope: !3724, file: !581, line: 48, type: !2171)
!3733 = !DILocation(line: 0, scope: !3724)
!3734 = !DILocation(line: 48, column: 1, scope: !3724)
!3735 = distinct !DISubprogram(name: "create_new_def_for", scope: !3, file: !3, line: 2839, type: !3736, scopeLine: 2840, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3738)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!733, !733, !708, !2187}
!3738 = !{!3739, !3740, !3741, !3742, !3743, !3746, !3747}
!3739 = !DILocalVariable(name: "old_name", arg: 1, scope: !3735, file: !3, line: 2839, type: !733)
!3740 = !DILocalVariable(name: "stmt", arg: 2, scope: !3735, file: !3, line: 2839, type: !708)
!3741 = !DILocalVariable(name: "def", arg: 3, scope: !3735, file: !3, line: 2839, type: !2187)
!3742 = !DILocalVariable(name: "new_name", scope: !3735, file: !3, line: 2841, type: !733)
!3743 = !DILocalVariable(name: "e", scope: !3744, file: !3, line: 2847, type: !688)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 2846, column: 5)
!3745 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 2845, column: 7)
!3746 = !DILocalVariable(name: "ei", scope: !3744, file: !3, line: 2848, type: !2784)
!3747 = !DILocalVariable(name: "bb", scope: !3744, file: !3, line: 2849, type: !670)
!3748 = !DILocation(line: 0, scope: !3735)
!3749 = !DILocation(line: 2841, column: 19, scope: !3735)
!3750 = !DILocation(line: 2843, column: 3, scope: !3735)
!3751 = !DILocation(line: 2845, column: 7, scope: !3745)
!3752 = !DILocation(line: 2845, column: 26, scope: !3745)
!3753 = !DILocation(line: 2845, column: 7, scope: !3735)
!3754 = !DILocation(line: 2847, column: 7, scope: !3744)
!3755 = !DILocation(line: 2848, column: 7, scope: !3744)
!3756 = !DILocation(line: 2849, column: 24, scope: !3744)
!3757 = !DILocation(line: 0, scope: !3744)
!3758 = !DILocation(line: 2852, column: 7, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 2852, column: 7)
!3760 = !DILocation(line: 0, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 2852, column: 7)
!3762 = !DILocation(line: 2852, column: 7, scope: !3761)
!3763 = !DILocation(line: 2853, column: 6, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3761, file: !3, line: 2853, column: 6)
!3765 = !DILocation(line: 2853, column: 9, scope: !3764)
!3766 = !DILocation(line: 2853, column: 15, scope: !3764)
!3767 = !DILocation(line: 2853, column: 6, scope: !3761)
!3768 = !DILocation(line: 2855, column: 6, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 2854, column: 4)
!3770 = !DILocation(line: 2855, column: 49, scope: !3769)
!3771 = !DILocation(line: 2856, column: 6, scope: !3769)
!3772 = distinct !{!3772, !3758, !3773}
!3773 = !DILocation(line: 2857, column: 4, scope: !3759)
!3774 = !DILocation(line: 2858, column: 5, scope: !3745)
!3775 = !DILocation(line: 2858, column: 5, scope: !3744)
!3776 = !DILocation(line: 2860, column: 3, scope: !3735)
!3777 = !DILocation(line: 2865, column: 3, scope: !3735)
!3778 = !DILocation(line: 2867, column: 3, scope: !3735)
!3779 = distinct !DISubprogram(name: "gimple_code", scope: !581, file: !581, line: 1052, type: !3780, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3785)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!591, !3782}
!3782 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !671, line: 60, baseType: !3783)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!3785 = !{!3786}
!3786 = !DILocalVariable(name: "g", arg: 1, scope: !3779, file: !581, line: 1052, type: !3782)
!3787 = !DILocation(line: 0, scope: !3779)
!3788 = !DILocation(line: 1054, column: 20, scope: !3779)
!3789 = !DILocation(line: 1054, column: 3, scope: !3779)
!3790 = distinct !DISubprogram(name: "gimple_bb", scope: !581, file: !581, line: 1112, type: !3791, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3793)
!3791 = !DISubroutineType(types: !3792)
!3792 = !{!672, !3782}
!3793 = !{!3794}
!3794 = !DILocalVariable(name: "g", arg: 1, scope: !3790, file: !581, line: 1112, type: !3782)
!3795 = !DILocation(line: 0, scope: !3790)
!3796 = !DILocation(line: 1114, column: 20, scope: !3790)
!3797 = !DILocation(line: 1114, column: 3, scope: !3790)
!3798 = distinct !DISubprogram(name: "register_new_name_mapping", scope: !3, file: !3, line: 2876, type: !2746, scopeLine: 2877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3799)
!3799 = !{!3800, !3801}
!3800 = !DILocalVariable(name: "new_tree", arg: 1, scope: !3798, file: !3, line: 2876, type: !733)
!3801 = !DILocalVariable(name: "old", arg: 2, scope: !3798, file: !3, line: 2876, type: !733)
!3802 = !DILocation(line: 0, scope: !3798)
!3803 = !DILocation(line: 2878, column: 8, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 2878, column: 7)
!3805 = !DILocation(line: 2878, column: 7, scope: !3798)
!3806 = !DILocation(line: 2879, column: 22, scope: !3804)
!3807 = !DILocation(line: 2879, column: 5, scope: !3804)
!3808 = !DILocation(line: 2881, column: 3, scope: !3798)
!3809 = !DILocation(line: 2883, column: 3, scope: !3798)
!3810 = !DILocation(line: 2884, column: 1, scope: !3798)
!3811 = distinct !DISubprogram(name: "init_update_ssa", scope: !3, file: !3, line: 2768, type: !3812, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3814)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{null, !1189}
!3814 = !{!3815}
!3815 = !DILocalVariable(name: "fn", arg: 1, scope: !3811, file: !3, line: 2768, type: !1189)
!3816 = !DILocation(line: 0, scope: !3811)
!3817 = !DILocation(line: 2773, column: 34, scope: !3811)
!3818 = !DILocation(line: 2773, column: 50, scope: !3811)
!3819 = !DILocation(line: 2773, column: 48, scope: !3811)
!3820 = !DILocation(line: 2773, column: 19, scope: !3811)
!3821 = !DILocation(line: 2773, column: 17, scope: !3811)
!3822 = !DILocation(line: 2774, column: 3, scope: !3811)
!3823 = !DILocation(line: 2776, column: 34, scope: !3811)
!3824 = !DILocation(line: 2776, column: 50, scope: !3811)
!3825 = !DILocation(line: 2776, column: 48, scope: !3811)
!3826 = !DILocation(line: 2776, column: 19, scope: !3811)
!3827 = !DILocation(line: 2776, column: 17, scope: !3811)
!3828 = !DILocation(line: 2777, column: 3, scope: !3811)
!3829 = !DILocation(line: 2779, column: 14, scope: !3811)
!3830 = !DILocation(line: 2779, column: 12, scope: !3811)
!3831 = !DILocation(line: 2780, column: 20, scope: !3811)
!3832 = !DILocation(line: 2781, column: 3, scope: !3811)
!3833 = !DILocation(line: 2782, column: 38, scope: !3811)
!3834 = !DILocation(line: 2782, column: 36, scope: !3811)
!3835 = !DILocation(line: 2783, column: 29, scope: !3811)
!3836 = !DILocation(line: 2784, column: 1, scope: !3811)
!3837 = distinct !DISubprogram(name: "add_new_name_mapping", scope: !3, file: !3, line: 667, type: !2746, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3838)
!3838 = !{!3839, !3840, !3841, !3844}
!3839 = !DILocalVariable(name: "new_tree", arg: 1, scope: !3837, file: !3, line: 667, type: !733)
!3840 = !DILocalVariable(name: "old", arg: 2, scope: !3837, file: !3, line: 667, type: !733)
!3841 = !DILocalVariable(name: "sym", scope: !3842, file: !3, line: 679, type: !733)
!3842 = distinct !DILexicalBlock(scope: !3843, file: !3, line: 678, column: 5)
!3843 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 677, column: 7)
!3844 = !DILocalVariable(name: "new_sz", scope: !3845, file: !3, line: 698, type: !7)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 697, column: 5)
!3846 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 696, column: 7)
!3847 = !DILocation(line: 0, scope: !3837)
!3848 = !DILocation(line: 669, column: 3, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 669, column: 3)
!3850 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 669, column: 3)
!3851 = !DILocation(line: 669, column: 3, scope: !3850)
!3852 = !DILocation(line: 672, column: 3, scope: !3837)
!3853 = !DILocation(line: 677, column: 8, scope: !3843)
!3854 = !DILocation(line: 677, column: 7, scope: !3837)
!3855 = !DILocation(line: 681, column: 44, scope: !3842)
!3856 = !DILocation(line: 682, column: 43, scope: !3842)
!3857 = !DILocation(line: 690, column: 13, scope: !3842)
!3858 = !DILocation(line: 691, column: 40, scope: !3842)
!3859 = !DILocation(line: 691, column: 57, scope: !3842)
!3860 = !DILocation(line: 691, column: 7, scope: !3842)
!3861 = !DILocation(line: 692, column: 5, scope: !3842)
!3862 = !DILocation(line: 696, column: 7, scope: !3846)
!3863 = !DILocation(line: 696, column: 22, scope: !3846)
!3864 = !DILocation(line: 696, column: 32, scope: !3846)
!3865 = !DILocation(line: 696, column: 46, scope: !3846)
!3866 = !DILocation(line: 696, column: 29, scope: !3846)
!3867 = !DILocation(line: 696, column: 7, scope: !3837)
!3868 = !DILocation(line: 698, column: 29, scope: !3845)
!3869 = !DILocation(line: 698, column: 45, scope: !3845)
!3870 = !DILocation(line: 698, column: 43, scope: !3845)
!3871 = !DILocation(line: 0, scope: !3845)
!3872 = !DILocation(line: 699, column: 39, scope: !3845)
!3873 = !DILocation(line: 699, column: 23, scope: !3845)
!3874 = !DILocation(line: 699, column: 21, scope: !3845)
!3875 = !DILocation(line: 700, column: 39, scope: !3845)
!3876 = !DILocation(line: 700, column: 23, scope: !3845)
!3877 = !DILocation(line: 700, column: 21, scope: !3845)
!3878 = !DILocation(line: 701, column: 5, scope: !3845)
!3879 = !DILocation(line: 704, column: 3, scope: !3837)
!3880 = !DILocation(line: 708, column: 7, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 708, column: 7)
!3882 = !DILocation(line: 708, column: 7, scope: !3837)
!3883 = !DILocation(line: 709, column: 22, scope: !3881)
!3884 = !DILocation(line: 709, column: 52, scope: !3881)
!3885 = !DILocation(line: 709, column: 5, scope: !3881)
!3886 = !DILocation(line: 713, column: 12, scope: !3837)
!3887 = !DILocation(line: 713, column: 27, scope: !3837)
!3888 = !DILocation(line: 713, column: 3, scope: !3837)
!3889 = !DILocation(line: 714, column: 12, scope: !3837)
!3890 = !DILocation(line: 714, column: 27, scope: !3837)
!3891 = !DILocation(line: 714, column: 3, scope: !3837)
!3892 = !DILocation(line: 717, column: 38, scope: !3837)
!3893 = !DILocation(line: 719, column: 3, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 719, column: 3)
!3895 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 719, column: 3)
!3896 = !DILocation(line: 719, column: 3, scope: !3895)
!3897 = !DILocation(line: 720, column: 1, scope: !3837)
!3898 = distinct !DISubprogram(name: "mark_sym_for_renaming", scope: !3, file: !3, line: 2890, type: !3435, scopeLine: 2891, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3899)
!3899 = !{!3900}
!3900 = !DILocalVariable(name: "sym", arg: 1, scope: !3898, file: !3, line: 2890, type: !733)
!3901 = !DILocation(line: 0, scope: !3898)
!3902 = !DILocation(line: 2892, column: 19, scope: !3898)
!3903 = !DILocation(line: 2892, column: 42, scope: !3898)
!3904 = !DILocation(line: 2892, column: 3, scope: !3898)
!3905 = !DILocation(line: 2893, column: 1, scope: !3898)
!3906 = distinct !DISubprogram(name: "mark_set_for_renaming", scope: !3, file: !3, line: 2899, type: !3045, scopeLine: 2900, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3907)
!3907 = !{!3908, !3909, !3910}
!3908 = !DILocalVariable(name: "set", arg: 1, scope: !3906, file: !3, line: 2899, type: !1319)
!3909 = !DILocalVariable(name: "bi", scope: !3906, file: !3, line: 2901, type: !2774)
!3910 = !DILocalVariable(name: "i", scope: !3906, file: !3, line: 2902, type: !7)
!3911 = !DILocation(line: 0, scope: !3906)
!3912 = !DILocation(line: 2901, column: 3, scope: !3906)
!3913 = !DILocation(line: 2902, column: 3, scope: !3906)
!3914 = !DILocation(line: 2904, column: 11, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3906, file: !3, line: 2904, column: 7)
!3916 = !DILocation(line: 2904, column: 19, scope: !3915)
!3917 = !DILocation(line: 2904, column: 22, scope: !3915)
!3918 = !DILocation(line: 2904, column: 7, scope: !3906)
!3919 = !DILocation(line: 2907, column: 3, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3906, file: !3, line: 2907, column: 3)
!3921 = !DILocation(line: 2907, column: 3, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3920, file: !3, line: 2907, column: 3)
!3923 = !DILocation(line: 2908, column: 28, scope: !3922)
!3924 = !DILocation(line: 2908, column: 5, scope: !3922)
!3925 = distinct !{!3925, !3919, !3926}
!3926 = !DILocation(line: 2908, column: 46, scope: !3920)
!3927 = !DILocation(line: 2909, column: 1, scope: !3906)
!3928 = distinct !DISubprogram(name: "name_mappings_registered_p", scope: !3, file: !3, line: 2927, type: !2205, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!3929 = !DILocation(line: 2929, column: 8, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 2929, column: 7)
!3931 = !DILocation(line: 2929, column: 7, scope: !3928)
!3932 = !DILocation(line: 2932, column: 3, scope: !3928)
!3933 = !DILocation(line: 2934, column: 10, scope: !3928)
!3934 = !DILocation(line: 2934, column: 19, scope: !3928)
!3935 = !DILocation(line: 2934, column: 22, scope: !3928)
!3936 = !DILocation(line: 2934, column: 47, scope: !3928)
!3937 = !DILocation(line: 2934, column: 3, scope: !3928)
!3938 = !DILocation(line: 0, scope: !3928)
!3939 = !DILocation(line: 2935, column: 1, scope: !3928)
!3940 = distinct !DISubprogram(name: "name_registered_for_update_p", scope: !3, file: !3, line: 2940, type: !3941, scopeLine: 2941, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3943)
!3941 = !DISubroutineType(types: !3942)
!3942 = !{!661, !733}
!3943 = !{!3944}
!3944 = !DILocalVariable(name: "n", arg: 1, scope: !3940, file: !3, line: 2940, type: !733)
!3945 = !DILocation(line: 0, scope: !3940)
!3946 = !DILocation(line: 2942, column: 8, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 2942, column: 7)
!3948 = !DILocation(line: 2942, column: 7, scope: !3940)
!3949 = !DILocation(line: 2945, column: 3, scope: !3940)
!3950 = !DILocation(line: 2947, column: 10, scope: !3940)
!3951 = !DILocation(line: 2947, column: 26, scope: !3940)
!3952 = !DILocation(line: 2947, column: 29, scope: !3940)
!3953 = !DILocation(line: 2947, column: 3, scope: !3940)
!3954 = !DILocation(line: 2948, column: 1, scope: !3940)
!3955 = distinct !DISubprogram(name: "is_new_name", scope: !3, file: !3, line: 586, type: !3941, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3956)
!3956 = !{!3957, !3958}
!3957 = !DILocalVariable(name: "name", arg: 1, scope: !3955, file: !3, line: 586, type: !733)
!3958 = !DILocalVariable(name: "ver", scope: !3955, file: !3, line: 588, type: !7)
!3959 = !DILocation(line: 0, scope: !3955)
!3960 = !DILocation(line: 588, column: 18, scope: !3955)
!3961 = !DILocation(line: 589, column: 8, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3955, file: !3, line: 589, column: 7)
!3963 = !DILocation(line: 589, column: 7, scope: !3955)
!3964 = !DILocation(line: 591, column: 31, scope: !3955)
!3965 = !DILocation(line: 591, column: 14, scope: !3955)
!3966 = !DILocation(line: 591, column: 38, scope: !3955)
!3967 = !DILocation(line: 591, column: 41, scope: !3955)
!3968 = !DILocation(line: 591, column: 3, scope: !3955)
!3969 = !DILocation(line: 592, column: 1, scope: !3955)
!3970 = distinct !DISubprogram(name: "is_old_name", scope: !3, file: !3, line: 574, type: !3941, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3971)
!3971 = !{!3972, !3973}
!3972 = !DILocalVariable(name: "name", arg: 1, scope: !3970, file: !3, line: 574, type: !733)
!3973 = !DILocalVariable(name: "ver", scope: !3970, file: !3, line: 576, type: !7)
!3974 = !DILocation(line: 0, scope: !3970)
!3975 = !DILocation(line: 576, column: 18, scope: !3970)
!3976 = !DILocation(line: 577, column: 8, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 577, column: 7)
!3978 = !DILocation(line: 577, column: 7, scope: !3970)
!3979 = !DILocation(line: 579, column: 31, scope: !3970)
!3980 = !DILocation(line: 579, column: 14, scope: !3970)
!3981 = !DILocation(line: 579, column: 38, scope: !3970)
!3982 = !DILocation(line: 579, column: 41, scope: !3970)
!3983 = !DILocation(line: 579, column: 3, scope: !3970)
!3984 = !DILocation(line: 580, column: 1, scope: !3970)
!3985 = distinct !DISubprogram(name: "ssa_names_to_replace", scope: !3, file: !3, line: 2954, type: !3986, scopeLine: 2955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3988)
!3986 = !DISubroutineType(types: !3987)
!3987 = !{!1319}
!3988 = !{!3989, !3990, !3991}
!3989 = !DILocalVariable(name: "i", scope: !3985, file: !3, line: 2956, type: !7)
!3990 = !DILocalVariable(name: "ret", scope: !3985, file: !3, line: 2957, type: !1319)
!3991 = !DILocalVariable(name: "sbi", scope: !3985, file: !3, line: 2958, type: !3451)
!3992 = !DILocation(line: 2956, column: 3, scope: !3985)
!3993 = !DILocation(line: 0, scope: !3985)
!3994 = !DILocation(line: 2956, column: 12, scope: !3985)
!3995 = !DILocation(line: 2958, column: 3, scope: !3985)
!3996 = !DILocation(line: 2960, column: 3, scope: !3985)
!3997 = !DILocation(line: 2963, column: 9, scope: !3985)
!3998 = !DILocation(line: 2964, column: 3, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 2964, column: 3)
!4000 = !DILocation(line: 2964, column: 3, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 2964, column: 3)
!4002 = !DILocation(line: 2965, column: 26, scope: !4001)
!4003 = !DILocation(line: 2965, column: 5, scope: !4001)
!4004 = distinct !{!4004, !3998, !4005}
!4005 = !DILocation(line: 2965, column: 27, scope: !3999)
!4006 = !DILocation(line: 2968, column: 1, scope: !3985)
!4007 = !DILocation(line: 2967, column: 3, scope: !3985)
!4008 = distinct !DISubprogram(name: "release_ssa_name_after_update_ssa", scope: !3, file: !3, line: 2974, type: !3435, scopeLine: 2975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4009)
!4009 = !{!4010}
!4010 = !DILocalVariable(name: "name", arg: 1, scope: !4008, file: !3, line: 2974, type: !733)
!4011 = !DILocation(line: 0, scope: !4008)
!4012 = !DILocation(line: 2976, column: 3, scope: !4008)
!4013 = !DILocation(line: 2978, column: 7, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 2978, column: 7)
!4015 = !DILocation(line: 2978, column: 24, scope: !4014)
!4016 = !DILocation(line: 2978, column: 7, scope: !4008)
!4017 = !DILocation(line: 2979, column: 24, scope: !4014)
!4018 = !DILocation(line: 2979, column: 22, scope: !4014)
!4019 = !DILocation(line: 2979, column: 5, scope: !4014)
!4020 = !DILocation(line: 2981, column: 19, scope: !4008)
!4021 = !DILocation(line: 2981, column: 37, scope: !4008)
!4022 = !DILocation(line: 2981, column: 3, scope: !4008)
!4023 = !DILocation(line: 2982, column: 1, scope: !4008)
!4024 = distinct !DISubprogram(name: "update_ssa", scope: !3, file: !3, line: 3227, type: !4025, scopeLine: 3228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4027)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{null, !7}
!4027 = !{!4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4038, !4041, !4042, !4045, !4046}
!4028 = !DILocalVariable(name: "update_flags", arg: 1, scope: !4024, file: !3, line: 3227, type: !7)
!4029 = !DILocalVariable(name: "bb", scope: !4024, file: !3, line: 3229, type: !670)
!4030 = !DILocalVariable(name: "start_bb", scope: !4024, file: !3, line: 3229, type: !670)
!4031 = !DILocalVariable(name: "bi", scope: !4024, file: !3, line: 3230, type: !2774)
!4032 = !DILocalVariable(name: "i", scope: !4024, file: !3, line: 3231, type: !7)
!4033 = !DILocalVariable(name: "insert_phi_p", scope: !4024, file: !3, line: 3232, type: !661)
!4034 = !DILocalVariable(name: "sbi", scope: !4024, file: !3, line: 3233, type: !3451)
!4035 = !DILocalVariable(name: "dfs", scope: !4036, file: !3, line: 3336, type: !2053)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 3335, column: 5)
!4037 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3334, column: 7)
!4038 = !DILocalVariable(name: "sbi", scope: !4039, file: !3, line: 3347, type: !3451)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 3346, column: 2)
!4040 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 3345, column: 11)
!4041 = !DILocalVariable(name: "tmp", scope: !4039, file: !3, line: 3354, type: !2226)
!4042 = !DILocalVariable(name: "c", scope: !4043, file: !3, line: 3399, type: !662)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 3398, column: 5)
!4044 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3397, column: 7)
!4045 = !DILocalVariable(name: "i", scope: !4043, file: !3, line: 3400, type: !7)
!4046 = !DILabel(scope: !4024, name: "done", file: !3, line: 3426)
!4047 = !DILocation(line: 0, scope: !4024)
!4048 = !DILocation(line: 3230, column: 3, scope: !4024)
!4049 = !DILocation(line: 3231, column: 3, scope: !4024)
!4050 = !DILocation(line: 3231, column: 12, scope: !4024)
!4051 = !DILocation(line: 3233, column: 3, scope: !4024)
!4052 = !DILocation(line: 3235, column: 27, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3235, column: 7)
!4054 = !DILocation(line: 3235, column: 8, scope: !4053)
!4055 = !DILocation(line: 3235, column: 7, scope: !4024)
!4056 = !DILocation(line: 3238, column: 3, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 3238, column: 3)
!4058 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3238, column: 3)
!4059 = !DILocation(line: 3238, column: 3, scope: !4058)
!4060 = !DILocation(line: 3240, column: 8, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3240, column: 7)
!4062 = !DILocation(line: 3240, column: 7, scope: !4024)
!4063 = !DILocation(line: 3241, column: 22, scope: !4061)
!4064 = !DILocation(line: 3241, column: 5, scope: !4061)
!4065 = !DILocation(line: 3242, column: 3, scope: !4024)
!4066 = !DILocation(line: 3244, column: 33, scope: !4024)
!4067 = !DILocation(line: 3244, column: 31, scope: !4024)
!4068 = !DILocation(line: 3245, column: 8, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3245, column: 7)
!4070 = !DILocation(line: 3245, column: 7, scope: !4024)
!4071 = !DILocation(line: 3246, column: 23, scope: !4069)
!4072 = !DILocation(line: 3246, column: 21, scope: !4069)
!4073 = !DILocation(line: 3246, column: 5, scope: !4069)
!4074 = !DILocation(line: 3247, column: 22, scope: !4024)
!4075 = !DILocation(line: 3247, column: 20, scope: !4024)
!4076 = !DILocation(line: 3250, column: 3, scope: !4024)
!4077 = !DILocation(line: 3253, column: 3, scope: !4024)
!4078 = !DILocation(line: 3261, column: 20, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3261, column: 7)
!4080 = !DILocation(line: 3261, column: 7, scope: !4024)
!4081 = !DILocation(line: 3263, column: 21, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 3262, column: 5)
!4083 = !DILocation(line: 3263, column: 7, scope: !4082)
!4084 = !DILocation(line: 3264, column: 21, scope: !4082)
!4085 = !DILocation(line: 3264, column: 7, scope: !4082)
!4086 = !DILocation(line: 3265, column: 19, scope: !4082)
!4087 = !DILocation(line: 3265, column: 7, scope: !4082)
!4088 = !DILocation(line: 3266, column: 5, scope: !4082)
!4089 = !DILocation(line: 3268, column: 32, scope: !4024)
!4090 = !DILocation(line: 3268, column: 18, scope: !4024)
!4091 = !DILocation(line: 3270, column: 7, scope: !4024)
!4092 = !DILocation(line: 3279, column: 33, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 3271, column: 5)
!4094 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3270, column: 7)
!4095 = !DILocation(line: 3279, column: 20, scope: !4093)
!4096 = !DILocation(line: 3281, column: 5, scope: !4093)
!4097 = !DILocation(line: 0, scope: !4094)
!4098 = !DILocation(line: 3289, column: 20, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3289, column: 7)
!4100 = !DILocation(line: 3289, column: 23, scope: !4099)
!4101 = !DILocation(line: 3289, column: 7, scope: !4024)
!4102 = !DILocation(line: 3290, column: 5, scope: !4099)
!4103 = !DILocation(line: 3295, column: 30, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3295, column: 7)
!4105 = !DILocation(line: 3295, column: 7, scope: !4104)
!4106 = !DILocation(line: 3295, column: 45, scope: !4104)
!4107 = !DILocation(line: 3295, column: 7, scope: !4024)
!4108 = !DILocation(line: 3297, column: 7, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 3296, column: 5)
!4110 = !DILocation(line: 3302, column: 34, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 3302, column: 11)
!4112 = !DILocation(line: 3302, column: 11, scope: !4111)
!4113 = !DILocation(line: 3302, column: 49, scope: !4111)
!4114 = !DILocation(line: 3303, column: 4, scope: !4111)
!4115 = !DILocation(line: 3303, column: 7, scope: !4111)
!4116 = !DILocation(line: 3302, column: 11, scope: !4109)
!4117 = !DILocation(line: 3308, column: 8, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3308, column: 7)
!4119 = !DILocation(line: 3308, column: 7, scope: !4024)
!4120 = !DILocation(line: 3315, column: 18, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 3309, column: 5)
!4122 = !DILocation(line: 3321, column: 7, scope: !4121)
!4123 = !DILocation(line: 3322, column: 5, scope: !4121)
!4124 = !DILocation(line: 3328, column: 10, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 3324, column: 5)
!4126 = !DILocation(line: 3327, column: 18, scope: !4125)
!4127 = !DILocation(line: 0, scope: !4118)
!4128 = !DILocation(line: 3334, column: 7, scope: !4024)
!4129 = !DILocation(line: 3340, column: 13, scope: !4036)
!4130 = !DILocation(line: 0, scope: !4036)
!4131 = !DILocation(line: 3341, column: 7, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 3341, column: 7)
!4133 = !DILocation(line: 3341, column: 7, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 3341, column: 7)
!4135 = !DILocation(line: 0, scope: !4132)
!4136 = !DILocation(line: 3342, column: 19, scope: !4134)
!4137 = !DILocation(line: 3342, column: 10, scope: !4134)
!4138 = !DILocation(line: 3342, column: 2, scope: !4134)
!4139 = !DILocation(line: 3342, column: 17, scope: !4134)
!4140 = !DILocation(line: 0, scope: !4134)
!4141 = distinct !{!4141, !4131, !4142}
!4142 = !DILocation(line: 3342, column: 19, scope: !4132)
!4143 = !DILocation(line: 3343, column: 7, scope: !4036)
!4144 = !DILocation(line: 3345, column: 34, scope: !4040)
!4145 = !DILocation(line: 3345, column: 11, scope: !4040)
!4146 = !DILocation(line: 3345, column: 49, scope: !4040)
!4147 = !DILocation(line: 3345, column: 11, scope: !4036)
!4148 = !DILocation(line: 3347, column: 4, scope: !4039)
!4149 = !DILocation(line: 3354, column: 33, scope: !4039)
!4150 = !DILocation(line: 3354, column: 48, scope: !4039)
!4151 = !DILocation(line: 3354, column: 18, scope: !4039)
!4152 = !DILocation(line: 0, scope: !4039)
!4153 = !DILocation(line: 3355, column: 23, scope: !4039)
!4154 = !DILocation(line: 3355, column: 4, scope: !4039)
!4155 = !DILocation(line: 3356, column: 4, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 3356, column: 4)
!4157 = !DILocation(line: 3356, column: 4, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 3356, column: 4)
!4159 = !DILocation(line: 3357, column: 36, scope: !4158)
!4160 = !DILocation(line: 3357, column: 55, scope: !4158)
!4161 = !DILocation(line: 3357, column: 6, scope: !4158)
!4162 = distinct !{!4162, !4155, !4163}
!4163 = !DILocation(line: 3358, column: 48, scope: !4156)
!4164 = !DILocation(line: 3359, column: 4, scope: !4039)
!4165 = !DILocation(line: 3360, column: 2, scope: !4040)
!4166 = !DILocation(line: 3360, column: 2, scope: !4039)
!4167 = !DILocation(line: 3362, column: 7, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 3362, column: 7)
!4169 = !DILocation(line: 3362, column: 7, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4168, file: !3, line: 3362, column: 7)
!4171 = !DILocation(line: 3363, column: 32, scope: !4170)
!4172 = !DILocation(line: 3363, column: 57, scope: !4170)
!4173 = !DILocation(line: 3363, column: 2, scope: !4170)
!4174 = distinct !{!4174, !4167, !4175}
!4175 = !DILocation(line: 3364, column: 44, scope: !4168)
!4176 = !DILocation(line: 3366, column: 7, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 3366, column: 7)
!4178 = !DILocation(line: 3366, column: 7, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 3366, column: 7)
!4180 = !DILocation(line: 0, scope: !4177)
!4181 = !DILocation(line: 3367, column: 2, scope: !4179)
!4182 = !DILocation(line: 0, scope: !4179)
!4183 = distinct !{!4183, !4176, !4184}
!4184 = !DILocation(line: 3367, column: 2, scope: !4177)
!4185 = !DILocation(line: 3368, column: 7, scope: !4036)
!4186 = !DILocation(line: 3373, column: 23, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 3373, column: 11)
!4188 = !DILocation(line: 3373, column: 20, scope: !4187)
!4189 = !DILocation(line: 3373, column: 11, scope: !4036)
!4190 = !DILocation(line: 3375, column: 12, scope: !4187)
!4191 = !DILocation(line: 3374, column: 13, scope: !4187)
!4192 = !DILocation(line: 3374, column: 2, scope: !4187)
!4193 = !DILocation(line: 3380, column: 3, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3380, column: 3)
!4195 = !DILocation(line: 3380, column: 3, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 3380, column: 3)
!4197 = !DILocation(line: 3381, column: 22, scope: !4196)
!4198 = !DILocation(line: 3381, column: 5, scope: !4196)
!4199 = distinct !{!4199, !4193, !4200}
!4200 = !DILocation(line: 3381, column: 45, scope: !4194)
!4201 = !DILocation(line: 3383, column: 3, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3383, column: 3)
!4203 = !DILocation(line: 3383, column: 3, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 3383, column: 3)
!4205 = !DILocation(line: 3384, column: 22, scope: !4204)
!4206 = !DILocation(line: 3384, column: 5, scope: !4204)
!4207 = distinct !{!4207, !4201, !4208}
!4208 = !DILocation(line: 3384, column: 51, scope: !4202)
!4209 = !DILocation(line: 3387, column: 39, scope: !4024)
!4210 = !DILocation(line: 3387, column: 24, scope: !4024)
!4211 = !DILocation(line: 3387, column: 22, scope: !4024)
!4212 = !DILocation(line: 3388, column: 3, scope: !4024)
!4213 = !DILocation(line: 3389, column: 3, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3389, column: 3)
!4215 = !DILocation(line: 3389, column: 3, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 3389, column: 3)
!4217 = !DILocation(line: 3390, column: 14, scope: !4216)
!4218 = !DILocation(line: 3390, column: 34, scope: !4216)
!4219 = !DILocation(line: 3390, column: 5, scope: !4216)
!4220 = distinct !{!4220, !4213, !4221}
!4221 = !DILocation(line: 3390, column: 35, scope: !4214)
!4222 = !DILocation(line: 3392, column: 3, scope: !4024)
!4223 = !DILocation(line: 3394, column: 3, scope: !4024)
!4224 = !DILocation(line: 3397, column: 7, scope: !4044)
!4225 = !DILocation(line: 3397, column: 7, scope: !4024)
!4226 = !DILocation(line: 3400, column: 7, scope: !4043)
!4227 = !DILocation(line: 3402, column: 7, scope: !4043)
!4228 = !DILocation(line: 3404, column: 16, scope: !4043)
!4229 = !DILocation(line: 3405, column: 19, scope: !4043)
!4230 = !DILocation(line: 3404, column: 7, scope: !4043)
!4231 = !DILocation(line: 0, scope: !4043)
!4232 = !DILocation(line: 3408, column: 7, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 3408, column: 7)
!4234 = !DILocation(line: 3408, column: 7, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 3408, column: 7)
!4236 = !DILocation(line: 3409, column: 3, scope: !4235)
!4237 = distinct !{!4237, !4232, !4238}
!4238 = !DILocation(line: 3409, column: 3, scope: !4233)
!4239 = !DILocation(line: 3410, column: 16, scope: !4043)
!4240 = !DILocation(line: 3410, column: 60, scope: !4043)
!4241 = !DILocation(line: 3410, column: 7, scope: !4043)
!4242 = !DILocation(line: 3411, column: 16, scope: !4043)
!4243 = !DILocation(line: 3412, column: 12, scope: !4043)
!4244 = !DILocation(line: 3411, column: 7, scope: !4043)
!4245 = !DILocation(line: 3414, column: 11, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 3414, column: 11)
!4247 = !DILocation(line: 3414, column: 22, scope: !4246)
!4248 = !DILocation(line: 3414, column: 11, scope: !4043)
!4249 = !DILocation(line: 3416, column: 13, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 3415, column: 2)
!4251 = !DILocation(line: 3416, column: 4, scope: !4250)
!4252 = !DILocation(line: 3417, column: 4, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 3417, column: 4)
!4254 = !DILocation(line: 3417, column: 4, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 3417, column: 4)
!4256 = !DILocation(line: 0, scope: !4250)
!4257 = !DILocation(line: 3418, column: 33, scope: !4255)
!4258 = !DILocation(line: 3418, column: 6, scope: !4255)
!4259 = distinct !{!4259, !4252, !4260}
!4260 = !DILocation(line: 3418, column: 34, scope: !4253)
!4261 = !DILocation(line: 3419, column: 4, scope: !4250)
!4262 = !DILocation(line: 3420, column: 2, scope: !4250)
!4263 = !DILocation(line: 3422, column: 16, scope: !4043)
!4264 = !DILocation(line: 3422, column: 7, scope: !4043)
!4265 = !DILocation(line: 3423, column: 5, scope: !4044)
!4266 = !DILocation(line: 3423, column: 5, scope: !4043)
!4267 = !DILocation(line: 3426, column: 1, scope: !4024)
!4268 = !DILocation(line: 3427, column: 3, scope: !4024)
!4269 = !DILocation(line: 3429, column: 3, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 3429, column: 3)
!4271 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3429, column: 3)
!4272 = !DILocation(line: 3429, column: 3, scope: !4271)
!4273 = !DILocation(line: 3430, column: 1, scope: !4024)
!4274 = distinct !DISubprogram(name: "VEC_gimple_vec_heap_alloc", scope: !581, file: !581, line: 49, type: !4275, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4277)
!4275 = !DISubroutineType(types: !4276)
!4276 = !{!2159, !662}
!4277 = !{!4278}
!4278 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4274, file: !581, line: 49, type: !662)
!4279 = !DILocation(line: 0, scope: !4274)
!4280 = !DILocation(line: 49, column: 1, scope: !4274)
!4281 = distinct !DISubprogram(name: "def_blocks_hash", scope: !3, file: !3, line: 1682, type: !1240, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4282)
!4282 = !{!4283}
!4283 = !DILocalVariable(name: "p", arg: 1, scope: !4281, file: !3, line: 1682, type: !1075)
!4284 = !DILocation(line: 0, scope: !4281)
!4285 = !DILocation(line: 1684, column: 10, scope: !4281)
!4286 = !DILocation(line: 1685, column: 51, scope: !4281)
!4287 = !DILocation(line: 1684, column: 3, scope: !4281)
!4288 = distinct !DISubprogram(name: "def_blocks_eq", scope: !3, file: !3, line: 1689, type: !1246, scopeLine: 1690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4289)
!4289 = !{!4290, !4291}
!4290 = !DILocalVariable(name: "p1", arg: 1, scope: !4288, file: !3, line: 1689, type: !1075)
!4291 = !DILocalVariable(name: "p2", arg: 2, scope: !4288, file: !3, line: 1689, type: !1075)
!4292 = !DILocation(line: 0, scope: !4288)
!4293 = !DILocation(line: 1691, column: 45, scope: !4288)
!4294 = !DILocation(line: 1692, column: 41, scope: !4288)
!4295 = !DILocation(line: 1692, column: 3, scope: !4288)
!4296 = !DILocation(line: 1691, column: 3, scope: !4288)
!4297 = distinct !DISubprogram(name: "def_blocks_free", scope: !3, file: !3, line: 1699, type: !1251, scopeLine: 1700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4298)
!4298 = !{!4299, !4300}
!4299 = !DILocalVariable(name: "p", arg: 1, scope: !4297, file: !3, line: 1699, type: !666)
!4300 = !DILocalVariable(name: "entry", scope: !4297, file: !3, line: 1701, type: !2125)
!4301 = !DILocation(line: 0, scope: !4297)
!4302 = !DILocation(line: 1702, column: 3, scope: !4297)
!4303 = !DILocation(line: 1703, column: 3, scope: !4297)
!4304 = !DILocation(line: 1704, column: 3, scope: !4297)
!4305 = !DILocation(line: 1705, column: 3, scope: !4297)
!4306 = !DILocation(line: 1706, column: 1, scope: !4297)
!4307 = distinct !DISubprogram(name: "switch_virtuals_to_full_rewrite_p", scope: !3, file: !3, line: 3113, type: !2205, scopeLine: 3114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!4308 = !DILocation(line: 3115, column: 24, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 3115, column: 7)
!4310 = !DILocation(line: 3115, column: 58, scope: !4309)
!4311 = !DILocation(line: 3115, column: 45, scope: !4309)
!4312 = !DILocation(line: 3115, column: 7, scope: !4307)
!4313 = !DILocation(line: 3119, column: 20, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 3118, column: 7)
!4315 = !DILocation(line: 3120, column: 28, scope: !4314)
!4316 = !DILocation(line: 3120, column: 9, scope: !4314)
!4317 = !DILocation(line: 3119, column: 7, scope: !4314)
!4318 = !DILocation(line: 0, scope: !4307)
!4319 = !DILocation(line: 3124, column: 1, scope: !4307)
!4320 = distinct !DISubprogram(name: "switch_virtuals_to_full_rewrite", scope: !3, file: !3, line: 3131, type: !3227, scopeLine: 3132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4321)
!4321 = !{!4322, !4323}
!4322 = !DILocalVariable(name: "i", scope: !4320, file: !3, line: 3133, type: !7)
!4323 = !DILocalVariable(name: "sbi", scope: !4320, file: !3, line: 3134, type: !3451)
!4324 = !DILocation(line: 3133, column: 3, scope: !4320)
!4325 = !DILocation(line: 0, scope: !4320)
!4326 = !DILocation(line: 3133, column: 12, scope: !4320)
!4327 = !DILocation(line: 3134, column: 3, scope: !4320)
!4328 = !DILocation(line: 3136, column: 7, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 3136, column: 7)
!4330 = !DILocation(line: 3136, column: 7, scope: !4320)
!4331 = !DILocation(line: 3138, column: 7, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 3137, column: 5)
!4333 = !DILocation(line: 3139, column: 16, scope: !4332)
!4334 = !DILocation(line: 3140, column: 26, scope: !4332)
!4335 = !DILocation(line: 3139, column: 7, scope: !4332)
!4336 = !DILocation(line: 3141, column: 16, scope: !4332)
!4337 = !DILocation(line: 3142, column: 26, scope: !4332)
!4338 = !DILocation(line: 3141, column: 7, scope: !4332)
!4339 = !DILocation(line: 3143, column: 16, scope: !4332)
!4340 = !DILocation(line: 3143, column: 7, scope: !4332)
!4341 = !DILocation(line: 3145, column: 5, scope: !4332)
!4342 = !DILocation(line: 3150, column: 3, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 3150, column: 3)
!4344 = !DILocation(line: 3150, column: 3, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 3150, column: 3)
!4346 = !DILocation(line: 3151, column: 25, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 3151, column: 9)
!4348 = !DILocation(line: 3151, column: 10, scope: !4347)
!4349 = !DILocation(line: 3151, column: 9, scope: !4345)
!4350 = !DILocation(line: 3152, column: 18, scope: !4347)
!4351 = !DILocation(line: 3152, column: 33, scope: !4347)
!4352 = !DILocation(line: 3152, column: 7, scope: !4347)
!4353 = distinct !{!4353, !4342, !4354}
!4354 = !DILocation(line: 3152, column: 34, scope: !4343)
!4355 = !DILocation(line: 3154, column: 3, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 3154, column: 3)
!4357 = !DILocation(line: 3154, column: 3, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 3154, column: 3)
!4359 = !DILocation(line: 3155, column: 25, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 3155, column: 9)
!4361 = !DILocation(line: 3155, column: 10, scope: !4360)
!4362 = !DILocation(line: 3155, column: 9, scope: !4358)
!4363 = !DILocation(line: 3156, column: 18, scope: !4360)
!4364 = !DILocation(line: 3156, column: 33, scope: !4360)
!4365 = !DILocation(line: 3156, column: 7, scope: !4360)
!4366 = distinct !{!4366, !4355, !4367}
!4367 = !DILocation(line: 3156, column: 34, scope: !4356)
!4368 = !DILocation(line: 3158, column: 43, scope: !4320)
!4369 = !DILocation(line: 3158, column: 3, scope: !4320)
!4370 = !DILocation(line: 3159, column: 1, scope: !4320)
!4371 = distinct !DISubprogram(name: "prepare_names_to_update", scope: !3, file: !3, line: 2636, type: !4372, scopeLine: 2637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{null, !661}
!4374 = !{!4375, !4376, !4377, !4378}
!4375 = !DILocalVariable(name: "insert_phi_p", arg: 1, scope: !4371, file: !3, line: 2636, type: !661)
!4376 = !DILocalVariable(name: "i", scope: !4371, file: !3, line: 2638, type: !7)
!4377 = !DILocalVariable(name: "bi", scope: !4371, file: !3, line: 2639, type: !2774)
!4378 = !DILocalVariable(name: "sbi", scope: !4371, file: !3, line: 2640, type: !3451)
!4379 = !DILocation(line: 0, scope: !4371)
!4380 = !DILocation(line: 2638, column: 3, scope: !4371)
!4381 = !DILocation(line: 2638, column: 12, scope: !4371)
!4382 = !DILocation(line: 2639, column: 3, scope: !4371)
!4383 = !DILocation(line: 2640, column: 3, scope: !4371)
!4384 = !DILocation(line: 2647, column: 7, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 2647, column: 7)
!4386 = !DILocation(line: 2647, column: 7, scope: !4371)
!4387 = !DILocation(line: 2648, column: 5, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 2648, column: 5)
!4389 = !DILocation(line: 2648, column: 5, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 2648, column: 5)
!4391 = !DILocation(line: 2649, column: 18, scope: !4390)
!4392 = !DILocation(line: 2649, column: 33, scope: !4390)
!4393 = !DILocation(line: 2649, column: 7, scope: !4390)
!4394 = distinct !{!4394, !4387, !4395}
!4395 = !DILocation(line: 2649, column: 34, scope: !4388)
!4396 = !DILocation(line: 2654, column: 3, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 2654, column: 3)
!4398 = !DILocation(line: 2654, column: 3, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 2654, column: 3)
!4400 = !DILocation(line: 2655, column: 27, scope: !4399)
!4401 = !DILocation(line: 2655, column: 5, scope: !4399)
!4402 = distinct !{!4402, !4396, !4403}
!4403 = !DILocation(line: 2655, column: 53, scope: !4397)
!4404 = !DILocation(line: 2659, column: 3, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 2659, column: 3)
!4406 = !DILocation(line: 2659, column: 3, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 2659, column: 3)
!4408 = !DILocation(line: 2661, column: 11, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 2661, column: 11)
!4410 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 2660, column: 5)
!4411 = !DILocation(line: 2661, column: 28, scope: !4409)
!4412 = !DILocation(line: 2661, column: 36, scope: !4409)
!4413 = !DILocation(line: 2661, column: 72, scope: !4409)
!4414 = !DILocation(line: 2661, column: 40, scope: !4409)
!4415 = !DILocation(line: 2661, column: 11, scope: !4410)
!4416 = !DILocation(line: 2662, column: 24, scope: !4409)
!4417 = !DILocation(line: 2662, column: 2, scope: !4409)
!4418 = !DILocation(line: 2663, column: 30, scope: !4410)
!4419 = !DILocation(line: 2663, column: 7, scope: !4410)
!4420 = distinct !{!4420, !4404, !4421}
!4421 = !DILocation(line: 2664, column: 5, scope: !4405)
!4422 = !DILocation(line: 2665, column: 1, scope: !4371)
!4423 = distinct !DISubprogram(name: "prepare_block_for_update", scope: !3, file: !3, line: 2507, type: !4424, scopeLine: 2508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4426)
!4424 = !DISubroutineType(types: !4425)
!4425 = !{null, !670, !661}
!4426 = !{!4427, !4428, !4429, !4430, !4437, !4438, !4439, !4443, !4444, !4445, !4449, !4462, !4463, !4464, !4468, !4469, !4473}
!4427 = !DILocalVariable(name: "bb", arg: 1, scope: !4423, file: !3, line: 2507, type: !670)
!4428 = !DILocalVariable(name: "insert_phi_p", arg: 2, scope: !4423, file: !3, line: 2507, type: !661)
!4429 = !DILocalVariable(name: "son", scope: !4423, file: !3, line: 2509, type: !670)
!4430 = !DILocalVariable(name: "si", scope: !4423, file: !3, line: 2510, type: !4431)
!4431 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !581, line: 265, baseType: !4432)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !581, line: 254, size: 192, elements: !4433)
!4433 = !{!4434, !4435, !4436}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4432, file: !581, line: 257, baseType: !703, size: 64)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !4432, file: !581, line: 263, baseType: !698, size: 64, offset: 64)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !4432, file: !581, line: 264, baseType: !670, size: 64, offset: 128)
!4437 = !DILocalVariable(name: "e", scope: !4423, file: !3, line: 2511, type: !688)
!4438 = !DILocalVariable(name: "ei", scope: !4423, file: !3, line: 2512, type: !2784)
!4439 = !DILocalVariable(name: "phi", scope: !4440, file: !3, line: 2520, type: !708)
!4440 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 2519, column: 5)
!4441 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 2518, column: 3)
!4442 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 2518, column: 3)
!4443 = !DILocalVariable(name: "lhs_sym", scope: !4440, file: !3, line: 2521, type: !733)
!4444 = !DILocalVariable(name: "lhs", scope: !4440, file: !3, line: 2521, type: !733)
!4445 = !DILocalVariable(name: "stmt", scope: !4446, file: !3, line: 2544, type: !708)
!4446 = distinct !DILexicalBlock(scope: !4447, file: !3, line: 2543, column: 5)
!4447 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 2542, column: 3)
!4448 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 2542, column: 3)
!4449 = !DILocalVariable(name: "i", scope: !4446, file: !3, line: 2545, type: !4450)
!4450 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !574, line: 140, baseType: !4451)
!4451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !574, line: 131, size: 320, elements: !4452)
!4452 = !{!4453, !4454, !4455, !4457, !4459, !4460, !4461}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4451, file: !574, line: 133, baseType: !661, size: 8)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !4451, file: !574, line: 134, baseType: !573, size: 32, offset: 32)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !4451, file: !574, line: 135, baseType: !4456, size: 64, offset: 64)
!4456 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !574, line: 42, baseType: !1342)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !4451, file: !574, line: 136, baseType: !4458, size: 64, offset: 128)
!4458 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !574, line: 50, baseType: !1349)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !4451, file: !574, line: 137, baseType: !662, size: 32, offset: 192)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !4451, file: !574, line: 138, baseType: !662, size: 32, offset: 224)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !4451, file: !574, line: 139, baseType: !708, size: 64, offset: 256)
!4462 = !DILocalVariable(name: "use_p", scope: !4446, file: !3, line: 2546, type: !2136)
!4463 = !DILocalVariable(name: "def_p", scope: !4446, file: !3, line: 2547, type: !2187)
!4464 = !DILocalVariable(name: "use", scope: !4465, file: !3, line: 2553, type: !733)
!4465 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 2552, column: 2)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 2551, column: 7)
!4467 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 2551, column: 7)
!4468 = !DILocalVariable(name: "sym", scope: !4465, file: !3, line: 2554, type: !733)
!4469 = !DILocalVariable(name: "def", scope: !4470, file: !3, line: 2561, type: !733)
!4470 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 2560, column: 2)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 2559, column: 7)
!4472 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 2559, column: 7)
!4473 = !DILocalVariable(name: "sym", scope: !4470, file: !3, line: 2562, type: !733)
!4474 = !DILocation(line: 0, scope: !4423)
!4475 = !DILocation(line: 2510, column: 3, scope: !4423)
!4476 = !DILocation(line: 2511, column: 3, scope: !4423)
!4477 = !DILocation(line: 2512, column: 3, scope: !4423)
!4478 = !DILocation(line: 2514, column: 3, scope: !4423)
!4479 = !DILocation(line: 2518, column: 13, scope: !4442)
!4480 = !DILocation(line: 0, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 2537, column: 7)
!4482 = !DILocation(line: 0, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4481, file: !3, line: 2537, column: 7)
!4484 = !DILocation(line: 2518, column: 8, scope: !4442)
!4485 = !DILocation(line: 2518, column: 35, scope: !4441)
!4486 = !DILocation(line: 2518, column: 34, scope: !4441)
!4487 = !DILocation(line: 2518, column: 3, scope: !4442)
!4488 = !DILocation(line: 2520, column: 20, scope: !4440)
!4489 = !DILocation(line: 0, scope: !4440)
!4490 = !DILocation(line: 2521, column: 27, scope: !4440)
!4491 = !DILocation(line: 2523, column: 17, scope: !4440)
!4492 = !DILocation(line: 2523, column: 38, scope: !4440)
!4493 = !DILocation(line: 2525, column: 12, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 2525, column: 11)
!4495 = !DILocation(line: 2525, column: 11, scope: !4440)
!4496 = !DILocation(line: 2528, column: 7, scope: !4440)
!4497 = !DILocation(line: 2537, column: 7, scope: !4481)
!4498 = !DILocation(line: 2537, column: 7, scope: !4483)
!4499 = !DILocation(line: 2538, column: 38, scope: !4483)
!4500 = !DILocation(line: 2538, column: 41, scope: !4483)
!4501 = !DILocation(line: 2538, column: 2, scope: !4483)
!4502 = distinct !{!4502, !4497, !4503}
!4503 = !DILocation(line: 2538, column: 58, scope: !4481)
!4504 = !DILocation(line: 2518, column: 51, scope: !4441)
!4505 = !DILocation(line: 2518, column: 3, scope: !4441)
!4506 = distinct !{!4506, !4487, !4507}
!4507 = !DILocation(line: 2539, column: 5, scope: !4442)
!4508 = !DILocation(line: 2542, column: 13, scope: !4448)
!4509 = !DILocation(line: 0, scope: !4446)
!4510 = !DILocation(line: 2542, column: 8, scope: !4448)
!4511 = !DILocation(line: 2542, column: 33, scope: !4447)
!4512 = !DILocation(line: 2542, column: 32, scope: !4447)
!4513 = !DILocation(line: 2542, column: 3, scope: !4448)
!4514 = !DILocation(line: 2545, column: 7, scope: !4446)
!4515 = !DILocation(line: 2549, column: 14, scope: !4446)
!4516 = !DILocation(line: 2551, column: 7, scope: !4467)
!4517 = !DILocation(line: 0, scope: !4467)
!4518 = !DILocation(line: 2551, column: 7, scope: !4466)
!4519 = !DILocation(line: 2553, column: 15, scope: !4465)
!4520 = !DILocation(line: 0, scope: !4465)
!4521 = !DILocation(line: 2554, column: 15, scope: !4465)
!4522 = !DILocation(line: 2554, column: 36, scope: !4465)
!4523 = !DILocation(line: 2555, column: 8, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4465, file: !3, line: 2555, column: 8)
!4525 = !DILocation(line: 2555, column: 8, scope: !4465)
!4526 = !DILocation(line: 2556, column: 6, scope: !4524)
!4527 = distinct !{!4527, !4516, !4528}
!4528 = !DILocation(line: 2557, column: 2, scope: !4467)
!4529 = !DILocation(line: 2559, column: 7, scope: !4472)
!4530 = !DILocation(line: 0, scope: !4472)
!4531 = !DILocation(line: 2559, column: 7, scope: !4471)
!4532 = !DILocation(line: 2561, column: 15, scope: !4470)
!4533 = !DILocation(line: 0, scope: !4470)
!4534 = !DILocation(line: 2562, column: 15, scope: !4470)
!4535 = !DILocation(line: 2562, column: 36, scope: !4470)
!4536 = !DILocation(line: 2563, column: 8, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4470, file: !3, line: 2563, column: 8)
!4538 = !DILocation(line: 2563, column: 8, scope: !4470)
!4539 = !DILocation(line: 2564, column: 6, scope: !4537)
!4540 = distinct !{!4540, !4529, !4541}
!4541 = !DILocation(line: 2565, column: 2, scope: !4472)
!4542 = !DILocation(line: 2566, column: 5, scope: !4447)
!4543 = !DILocation(line: 2542, column: 49, scope: !4447)
!4544 = !DILocation(line: 2542, column: 3, scope: !4447)
!4545 = distinct !{!4545, !4513, !4546}
!4546 = !DILocation(line: 2566, column: 5, scope: !4448)
!4547 = !DILocation(line: 2569, column: 14, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 2569, column: 3)
!4549 = !DILocation(line: 2569, column: 8, scope: !4548)
!4550 = !DILocation(line: 0, scope: !4548)
!4551 = !DILocation(line: 2569, column: 3, scope: !4548)
!4552 = !DILocation(line: 2572, column: 5, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 2569, column: 3)
!4554 = !DILocation(line: 2571, column: 14, scope: !4553)
!4555 = !DILocation(line: 2569, column: 3, scope: !4553)
!4556 = distinct !{!4556, !4551, !4557}
!4557 = !DILocation(line: 2572, column: 48, scope: !4548)
!4558 = !DILocation(line: 2573, column: 1, scope: !4423)
!4559 = distinct !DISubprogram(name: "insert_updated_phi_nodes_for", scope: !3, file: !3, line: 3009, type: !4560, scopeLine: 3011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4562)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{null, !733, !2053, !1319, !7}
!4562 = !{!4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4579, !4580}
!4563 = !DILocalVariable(name: "var", arg: 1, scope: !4559, file: !3, line: 3009, type: !733)
!4564 = !DILocalVariable(name: "dfs", arg: 2, scope: !4559, file: !3, line: 3009, type: !2053)
!4565 = !DILocalVariable(name: "blocks", arg: 3, scope: !4559, file: !3, line: 3009, type: !1319)
!4566 = !DILocalVariable(name: "update_flags", arg: 4, scope: !4559, file: !3, line: 3010, type: !7)
!4567 = !DILocalVariable(name: "entry", scope: !4559, file: !3, line: 3012, type: !670)
!4568 = !DILocalVariable(name: "db", scope: !4559, file: !3, line: 3013, type: !2125)
!4569 = !DILocalVariable(name: "idf", scope: !4559, file: !3, line: 3014, type: !1319)
!4570 = !DILocalVariable(name: "pruned_idf", scope: !4559, file: !3, line: 3014, type: !1319)
!4571 = !DILocalVariable(name: "bi", scope: !4559, file: !3, line: 3015, type: !2774)
!4572 = !DILocalVariable(name: "i", scope: !4559, file: !3, line: 3016, type: !7)
!4573 = !DILocalVariable(name: "e", scope: !4574, file: !3, line: 3078, type: !688)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 3077, column: 2)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 3076, column: 7)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 3076, column: 7)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 3067, column: 5)
!4578 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 3066, column: 7)
!4579 = !DILocalVariable(name: "ei", scope: !4574, file: !3, line: 3079, type: !2784)
!4580 = !DILocalVariable(name: "bb", scope: !4574, file: !3, line: 3080, type: !670)
!4581 = !DILocation(line: 0, scope: !4559)
!4582 = !DILocation(line: 3015, column: 3, scope: !4559)
!4583 = !DILocation(line: 3016, column: 3, scope: !4559)
!4584 = !DILocation(line: 3026, column: 8, scope: !4559)
!4585 = !DILocation(line: 3029, column: 10, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 3029, column: 7)
!4587 = !DILocation(line: 3029, column: 18, scope: !4586)
!4588 = !DILocation(line: 3029, column: 21, scope: !4586)
!4589 = !DILocation(line: 3029, column: 7, scope: !4559)
!4590 = !DILocation(line: 3033, column: 9, scope: !4559)
!4591 = !DILocation(line: 3034, column: 16, scope: !4559)
!4592 = !DILocation(line: 3036, column: 7, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 3036, column: 7)
!4594 = !DILocation(line: 3036, column: 23, scope: !4593)
!4595 = !DILocation(line: 3036, column: 7, scope: !4559)
!4596 = !DILocation(line: 3038, column: 11, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 3037, column: 5)
!4598 = !DILocation(line: 3044, column: 15, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 3039, column: 2)
!4600 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 3038, column: 11)
!4601 = !DILocation(line: 3043, column: 12, scope: !4599)
!4602 = !DILocation(line: 3045, column: 17, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 3045, column: 8)
!4604 = !DILocation(line: 3045, column: 14, scope: !4603)
!4605 = !DILocation(line: 3045, column: 8, scope: !4599)
!4606 = !DILocation(line: 3046, column: 6, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 3046, column: 6)
!4608 = !DILocation(line: 3046, column: 6, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 3046, column: 6)
!4610 = !DILocation(line: 3047, column: 12, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 3047, column: 12)
!4612 = !DILocation(line: 3047, column: 28, scope: !4611)
!4613 = !DILocation(line: 3048, column: 5, scope: !4611)
!4614 = !DILocation(line: 3048, column: 40, scope: !4611)
!4615 = !DILocation(line: 3048, column: 8, scope: !4611)
!4616 = !DILocation(line: 3047, column: 12, scope: !4609)
!4617 = !DILocation(line: 3049, column: 31, scope: !4611)
!4618 = !DILocation(line: 3049, column: 3, scope: !4611)
!4619 = distinct !{!4619, !4606, !4620}
!4620 = !DILocation(line: 3049, column: 32, scope: !4607)
!4621 = !DILocation(line: 3054, column: 4, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 3052, column: 2)
!4623 = !DILocation(line: 3055, column: 4, scope: !4622)
!4624 = !DILocation(line: 3063, column: 7, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 3059, column: 5)
!4626 = !DILocation(line: 3066, column: 8, scope: !4578)
!4627 = !DILocation(line: 3066, column: 7, scope: !4559)
!4628 = !DILocation(line: 3075, column: 7, scope: !4577)
!4629 = !DILocation(line: 3076, column: 7, scope: !4576)
!4630 = !DILocation(line: 0, scope: !4574)
!4631 = !DILocation(line: 0, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 3082, column: 4)
!4633 = !DILocation(line: 0, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 3082, column: 4)
!4635 = !DILocation(line: 3076, column: 7, scope: !4575)
!4636 = !DILocation(line: 3078, column: 4, scope: !4574)
!4637 = !DILocation(line: 3079, column: 4, scope: !4574)
!4638 = !DILocation(line: 3080, column: 21, scope: !4574)
!4639 = !DILocation(line: 3082, column: 4, scope: !4632)
!4640 = !DILocation(line: 3082, column: 4, scope: !4634)
!4641 = !DILocation(line: 3083, column: 10, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 3083, column: 10)
!4643 = !DILocation(line: 3083, column: 13, scope: !4642)
!4644 = !DILocation(line: 3083, column: 18, scope: !4642)
!4645 = !DILocation(line: 3083, column: 24, scope: !4642)
!4646 = !DILocation(line: 3083, column: 10, scope: !4634)
!4647 = !DILocation(line: 3084, column: 8, scope: !4642)
!4648 = distinct !{!4648, !4639, !4649}
!4649 = !DILocation(line: 3084, column: 45, scope: !4632)
!4650 = !DILocation(line: 3085, column: 2, scope: !4575)
!4651 = distinct !{!4651, !4629, !4652}
!4652 = !DILocation(line: 3085, column: 2, scope: !4576)
!4653 = !DILocation(line: 3087, column: 7, scope: !4577)
!4654 = !DILocation(line: 3088, column: 5, scope: !4577)
!4655 = !DILocation(line: 3090, column: 3, scope: !4559)
!4656 = !DILocation(line: 3091, column: 3, scope: !4559)
!4657 = !DILocation(line: 3092, column: 1, scope: !4559)
!4658 = distinct !DISubprogram(name: "SET_BIT", scope: !2227, file: !2227, line: 63, type: !4659, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4661)
!4659 = !DISubroutineType(types: !4660)
!4660 = !{null, !2226, !7}
!4661 = !{!4662, !4663, !4664}
!4662 = !DILocalVariable(name: "map", arg: 1, scope: !4658, file: !2227, line: 63, type: !2226)
!4663 = !DILocalVariable(name: "bitno", arg: 2, scope: !4658, file: !2227, line: 63, type: !7)
!4664 = !DILocalVariable(name: "oldbit", scope: !4665, file: !2227, line: 67, type: !661)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !2227, line: 66, column: 5)
!4666 = distinct !DILexicalBlock(scope: !4658, file: !2227, line: 65, column: 7)
!4667 = !DILocation(line: 0, scope: !4658)
!4668 = !DILocation(line: 65, column: 12, scope: !4666)
!4669 = !DILocation(line: 65, column: 7, scope: !4666)
!4670 = !DILocation(line: 65, column: 7, scope: !4658)
!4671 = !DILocation(line: 73, column: 40, scope: !4658)
!4672 = !DILocation(line: 73, column: 29, scope: !4658)
!4673 = !DILocation(line: 72, column: 19, scope: !4658)
!4674 = !DILocation(line: 72, column: 3, scope: !4658)
!4675 = !DILocation(line: 68, column: 16, scope: !4665)
!4676 = !DILocation(line: 69, column: 12, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4665, file: !2227, line: 69, column: 11)
!4678 = !DILocation(line: 69, column: 11, scope: !4665)
!4679 = !DILocation(line: 70, column: 2, scope: !4677)
!4680 = !DILocation(line: 70, column: 41, scope: !4677)
!4681 = !DILocation(line: 73, column: 5, scope: !4658)
!4682 = !DILocation(line: 74, column: 1, scope: !4658)
!4683 = distinct !DISubprogram(name: "rewrite_blocks", scope: !3, file: !3, line: 2186, type: !4684, scopeLine: 2187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4686)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{null, !670, !629}
!4686 = !{!4687, !4688, !4689}
!4687 = !DILocalVariable(name: "entry", arg: 1, scope: !4683, file: !3, line: 2186, type: !670)
!4688 = !DILocalVariable(name: "what", arg: 2, scope: !4683, file: !3, line: 2186, type: !629)
!4689 = !DILocalVariable(name: "walk_data", scope: !4683, file: !3, line: 2188, type: !4690)
!4690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dom_walk_data", file: !4691, line: 29, size: 512, elements: !4692)
!4691 = !DIFile(filename: "./domwalk.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4692 = !{!4693, !4694, !4699, !4703, !4704, !4705, !4719, !4720}
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "dom_direction", scope: !4690, file: !4691, line: 35, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_block_local_data", scope: !4690, file: !4691, line: 46, baseType: !4695, size: 64, offset: 64)
!4695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4696 = !DISubroutineType(types: !4697)
!4697 = !{null, !4698, !670, !661}
!4698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "before_dom_children", scope: !4690, file: !4691, line: 50, baseType: !4700, size: 64, offset: 128)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{null, !4698, !670}
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "after_dom_children", scope: !4690, file: !4691, line: 53, baseType: !4700, size: 64, offset: 192)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "global_data", scope: !4690, file: !4691, line: 56, baseType: !666, size: 64, offset: 256)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "block_data_stack", scope: !4690, file: !4691, line: 61, baseType: !4706, size: 64, offset: 320)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4707, size: 64)
!4707 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_void_p_heap", file: !4691, line: 23, baseType: !4708)
!4708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_void_p_heap", file: !4691, line: 23, size: 128, elements: !4709)
!4709 = !{!4710}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4708, file: !4691, line: 23, baseType: !4711, size: 128)
!4711 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_void_p_base", file: !4691, line: 22, baseType: !4712)
!4712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_void_p_base", file: !4691, line: 22, size: 128, elements: !4713)
!4713 = !{!4714, !4715, !4716}
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4712, file: !4691, line: 22, baseType: !7, size: 32)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4712, file: !4691, line: 22, baseType: !7, size: 32, offset: 32)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4712, file: !4691, line: 22, baseType: !4717, size: 64, offset: 64)
!4717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4718, size: 64, elements: !831)
!4718 = !DIDerivedType(tag: DW_TAG_typedef, name: "void_p", file: !4691, line: 21, baseType: !666)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "block_local_data_size", scope: !4690, file: !4691, line: 65, baseType: !1256, size: 64, offset: 384)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "free_block_data", scope: !4690, file: !4691, line: 71, baseType: !4706, size: 64, offset: 448)
!4721 = !DILocation(line: 0, scope: !4683)
!4722 = !DILocation(line: 2188, column: 3, scope: !4683)
!4723 = !DILocation(line: 2191, column: 3, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 2191, column: 3)
!4725 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 2191, column: 3)
!4726 = !DILocation(line: 2191, column: 3, scope: !4725)
!4727 = !DILocation(line: 2194, column: 3, scope: !4683)
!4728 = !DILocation(line: 2196, column: 27, scope: !4683)
!4729 = !DILocation(line: 2198, column: 7, scope: !4683)
!4730 = !DILocation(line: 2200, column: 17, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 2199, column: 5)
!4732 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 2198, column: 7)
!4733 = !DILocation(line: 2200, column: 37, scope: !4731)
!4734 = !DILocation(line: 2201, column: 17, scope: !4731)
!4735 = !DILocation(line: 2201, column: 36, scope: !4731)
!4736 = !DILocation(line: 2202, column: 5, scope: !4731)
!4737 = !DILocation(line: 2205, column: 17, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 2204, column: 5)
!4739 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 2203, column: 12)
!4740 = !DILocation(line: 2205, column: 37, scope: !4738)
!4741 = !DILocation(line: 2206, column: 17, scope: !4738)
!4742 = !DILocation(line: 2206, column: 36, scope: !4738)
!4743 = !DILocation(line: 2207, column: 5, scope: !4738)
!4744 = !DILocation(line: 2209, column: 5, scope: !4739)
!4745 = !DILocation(line: 2211, column: 22, scope: !4683)
!4746 = !DILocation(line: 2211, column: 20, scope: !4683)
!4747 = !DILocation(line: 2214, column: 3, scope: !4683)
!4748 = !DILocation(line: 2218, column: 3, scope: !4683)
!4749 = !DILocation(line: 2221, column: 3, scope: !4683)
!4750 = !DILocation(line: 2224, column: 7, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 2224, column: 7)
!4752 = !DILocation(line: 2224, column: 17, scope: !4751)
!4753 = !DILocation(line: 2224, column: 21, scope: !4751)
!4754 = !DILocation(line: 2224, column: 32, scope: !4751)
!4755 = !DILocation(line: 2224, column: 7, scope: !4683)
!4756 = !DILocation(line: 2226, column: 7, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 2225, column: 5)
!4758 = !DILocation(line: 2227, column: 11, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 2227, column: 11)
!4760 = !DILocation(line: 2227, column: 11, scope: !4757)
!4761 = !DILocation(line: 2228, column: 23, scope: !4759)
!4762 = !DILocation(line: 2228, column: 2, scope: !4759)
!4763 = !DILocation(line: 2231, column: 3, scope: !4683)
!4764 = !DILocation(line: 2233, column: 3, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 2233, column: 3)
!4766 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 2233, column: 3)
!4767 = !DILocation(line: 2233, column: 3, scope: !4766)
!4768 = !DILocation(line: 2234, column: 1, scope: !4683)
!4769 = distinct !DISubprogram(name: "VEC_ssa_name_info_p_base_length", scope: !3, file: !3, line: 194, type: !4770, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4774)
!4770 = !DISubroutineType(types: !4771)
!4771 = !{!7, !4772}
!4772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4773, size: 64)
!4773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2066)
!4774 = !{!4775}
!4775 = !DILocalVariable(name: "vec_", arg: 1, scope: !4769, file: !3, line: 194, type: !4772)
!4776 = !DILocation(line: 0, scope: !4769)
!4777 = !DILocation(line: 194, column: 1, scope: !4769)
!4778 = distinct !DISubprogram(name: "VEC_ssa_name_info_p_heap_reserve", scope: !3, file: !3, line: 195, type: !4779, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4782)
!4779 = !DISubroutineType(types: !4780)
!4780 = !{!662, !4781, !662}
!4781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!4782 = !{!4783, !4784, !4785}
!4783 = !DILocalVariable(name: "vec_", arg: 1, scope: !4778, file: !3, line: 195, type: !4781)
!4784 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4778, file: !3, line: 195, type: !662)
!4785 = !DILocalVariable(name: "extend", scope: !4778, file: !3, line: 195, type: !662)
!4786 = !DILocation(line: 0, scope: !4778)
!4787 = !DILocation(line: 195, column: 1, scope: !4778)
!4788 = !DILocation(line: 195, column: 1, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 195, column: 1)
!4790 = distinct !DISubprogram(name: "VEC_ssa_name_info_p_base_quick_push", scope: !3, file: !3, line: 194, type: !4791, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4795)
!4791 = !DISubroutineType(types: !4792)
!4792 = !{!4793, !4794, !2073}
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!4795 = !{!4796, !4797, !4798}
!4796 = !DILocalVariable(name: "vec_", arg: 1, scope: !4790, file: !3, line: 194, type: !4794)
!4797 = !DILocalVariable(name: "obj_", arg: 2, scope: !4790, file: !3, line: 194, type: !2073)
!4798 = !DILocalVariable(name: "slot_", scope: !4790, file: !3, line: 194, type: !4793)
!4799 = !DILocation(line: 0, scope: !4790)
!4800 = !DILocation(line: 194, column: 1, scope: !4790)
!4801 = distinct !DISubprogram(name: "VEC_ssa_name_info_p_base_index", scope: !3, file: !3, line: 194, type: !4802, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4804)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!2073, !4772, !7}
!4804 = !{!4805, !4806}
!4805 = !DILocalVariable(name: "vec_", arg: 1, scope: !4801, file: !3, line: 194, type: !4772)
!4806 = !DILocalVariable(name: "ix_", arg: 2, scope: !4801, file: !3, line: 194, type: !7)
!4807 = !DILocation(line: 0, scope: !4801)
!4808 = !DILocation(line: 194, column: 1, scope: !4801)
!4809 = distinct !DISubprogram(name: "VEC_ssa_name_info_p_base_space", scope: !3, file: !3, line: 194, type: !4810, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4812)
!4810 = !DISubroutineType(types: !4811)
!4811 = !{!662, !4794, !662}
!4812 = !{!4813, !4814}
!4813 = !DILocalVariable(name: "vec_", arg: 1, scope: !4809, file: !3, line: 194, type: !4794)
!4814 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4809, file: !3, line: 194, type: !662)
!4815 = !DILocation(line: 0, scope: !4809)
!4816 = !DILocation(line: 194, column: 1, scope: !4809)
!4817 = distinct !DISubprogram(name: "ei_end_p", scope: !343, file: !343, line: 721, type: !4818, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4820)
!4818 = !DISubroutineType(types: !4819)
!4819 = !{!661, !2784}
!4820 = !{!4821}
!4821 = !DILocalVariable(name: "i", arg: 1, scope: !4817, file: !343, line: 721, type: !2784)
!4822 = !DILocation(line: 723, column: 22, scope: !4817)
!4823 = !DILocation(line: 723, column: 19, scope: !4817)
!4824 = !DILocation(line: 723, column: 10, scope: !4817)
!4825 = !DILocation(line: 723, column: 3, scope: !4817)
!4826 = distinct !DISubprogram(name: "ei_edge", scope: !343, file: !343, line: 752, type: !4827, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4829)
!4827 = !DISubroutineType(types: !4828)
!4828 = !{!688, !2784}
!4829 = !{!4830}
!4830 = !DILocalVariable(name: "i", arg: 1, scope: !4826, file: !343, line: 752, type: !2784)
!4831 = !DILocation(line: 754, column: 10, scope: !4826)
!4832 = !DILocation(line: 754, column: 3, scope: !4826)
!4833 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !343, file: !343, line: 150, type: !4834, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4838)
!4834 = !DISubroutineType(types: !4835)
!4835 = !{!7, !4836}
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4837, size: 64)
!4837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !681)
!4838 = !{!4839}
!4839 = !DILocalVariable(name: "vec_", arg: 1, scope: !4833, file: !343, line: 150, type: !4836)
!4840 = !DILocation(line: 0, scope: !4833)
!4841 = !DILocation(line: 150, column: 1, scope: !4833)
!4842 = distinct !DISubprogram(name: "ei_container", scope: !343, file: !343, line: 685, type: !4843, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4845)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{!676, !2784}
!4845 = !{!4846}
!4846 = !DILocalVariable(name: "i", arg: 1, scope: !4842, file: !343, line: 685, type: !2784)
!4847 = !DILocation(line: 687, column: 3, scope: !4842)
!4848 = !DILocation(line: 688, column: 10, scope: !4842)
!4849 = !DILocation(line: 688, column: 3, scope: !4842)
!4850 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !343, file: !343, line: 150, type: !4851, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4853)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!688, !4836, !7}
!4853 = !{!4854, !4855}
!4854 = !DILocalVariable(name: "vec_", arg: 1, scope: !4850, file: !343, line: 150, type: !4836)
!4855 = !DILocalVariable(name: "ix_", arg: 2, scope: !4850, file: !343, line: 150, type: !7)
!4856 = !DILocation(line: 0, scope: !4850)
!4857 = !DILocation(line: 150, column: 1, scope: !4850)
!4858 = distinct !DISubprogram(name: "first_htab_element", scope: !2728, file: !2728, line: 58, type: !4859, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4862)
!4859 = !DISubroutineType(types: !4860)
!4860 = !{!666, !4861, !1232}
!4861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!4862 = !{!4863, !4864, !4865}
!4863 = !DILocalVariable(name: "hti", arg: 1, scope: !4858, file: !2728, line: 58, type: !4861)
!4864 = !DILocalVariable(name: "table", arg: 2, scope: !4858, file: !2728, line: 58, type: !1232)
!4865 = !DILocalVariable(name: "x", scope: !4866, file: !2728, line: 65, type: !666)
!4866 = distinct !DILexicalBlock(scope: !4858, file: !2728, line: 64, column: 5)
!4867 = !DILocation(line: 0, scope: !4858)
!4868 = !DILocation(line: 60, column: 8, scope: !4858)
!4869 = !DILocation(line: 60, column: 13, scope: !4858)
!4870 = !DILocation(line: 61, column: 22, scope: !4858)
!4871 = !DILocation(line: 61, column: 8, scope: !4858)
!4872 = !DILocation(line: 61, column: 13, scope: !4858)
!4873 = !DILocation(line: 62, column: 21, scope: !4858)
!4874 = !DILocation(line: 62, column: 28, scope: !4858)
!4875 = !DILocation(line: 62, column: 26, scope: !4858)
!4876 = !DILocation(line: 62, column: 8, scope: !4858)
!4877 = !DILocation(line: 62, column: 14, scope: !4858)
!4878 = !DILocation(line: 65, column: 22, scope: !4866)
!4879 = !DILocation(line: 63, column: 3, scope: !4858)
!4880 = !DILocation(line: 65, column: 15, scope: !4866)
!4881 = !DILocation(line: 66, column: 33, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4866, file: !2728, line: 66, column: 11)
!4883 = !DILocation(line: 68, column: 14, scope: !4858)
!4884 = !DILocation(line: 68, column: 28, scope: !4858)
!4885 = !DILocation(line: 68, column: 5, scope: !4866)
!4886 = distinct !{!4886, !4879, !4887}
!4887 = !DILocation(line: 68, column: 40, scope: !4858)
!4888 = !DILocation(line: 70, column: 12, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4858, file: !2728, line: 70, column: 7)
!4890 = !DILocation(line: 70, column: 17, scope: !4889)
!4891 = !DILocation(line: 70, column: 7, scope: !4858)
!4892 = !DILocation(line: 71, column: 12, scope: !4889)
!4893 = !DILocation(line: 71, column: 5, scope: !4889)
!4894 = !DILocation(line: 73, column: 1, scope: !4858)
!4895 = distinct !DISubprogram(name: "gimple_referenced_vars", scope: !2728, file: !2728, line: 40, type: !4896, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4900)
!4896 = !DISubroutineType(types: !4897)
!4897 = !{!1232, !4898}
!4898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4899, size: 64)
!4899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1190)
!4900 = !{!4901}
!4901 = !DILocalVariable(name: "fun", arg: 1, scope: !4895, file: !2728, line: 40, type: !4898)
!4902 = !DILocation(line: 0, scope: !4895)
!4903 = !DILocation(line: 42, column: 13, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4895, file: !2728, line: 42, column: 7)
!4905 = !DILocation(line: 42, column: 8, scope: !4904)
!4906 = !DILocation(line: 42, column: 7, scope: !4895)
!4907 = !DILocation(line: 44, column: 26, scope: !4895)
!4908 = !DILocation(line: 44, column: 3, scope: !4895)
!4909 = !DILocation(line: 45, column: 1, scope: !4895)
!4910 = distinct !DISubprogram(name: "end_htab_p", scope: !2728, file: !2728, line: 79, type: !4911, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4915)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!661, !4913}
!4913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4914, size: 64)
!4914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3157)
!4915 = !{!4916}
!4916 = !DILocalVariable(name: "hti", arg: 1, scope: !4910, file: !2728, line: 79, type: !4913)
!4917 = !DILocation(line: 0, scope: !4910)
!4918 = !DILocation(line: 81, column: 12, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4910, file: !2728, line: 81, column: 7)
!4920 = !DILocation(line: 81, column: 25, scope: !4919)
!4921 = !DILocation(line: 81, column: 17, scope: !4919)
!4922 = !DILocation(line: 84, column: 1, scope: !4910)
!4923 = distinct !DISubprogram(name: "next_htab_element", scope: !2728, file: !2728, line: 90, type: !4924, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4926)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{!666, !4861}
!4926 = !{!4927, !4928}
!4927 = !DILocalVariable(name: "hti", arg: 1, scope: !4923, file: !2728, line: 90, type: !4861)
!4928 = !DILocalVariable(name: "x", scope: !4929, file: !2728, line: 94, type: !666)
!4929 = distinct !DILexicalBlock(scope: !4923, file: !2728, line: 93, column: 5)
!4930 = !DILocation(line: 0, scope: !4923)
!4931 = !DILocation(line: 94, column: 22, scope: !4929)
!4932 = !DILocation(line: 92, column: 10, scope: !4923)
!4933 = !DILocation(line: 92, column: 31, scope: !4923)
!4934 = !DILocation(line: 92, column: 3, scope: !4923)
!4935 = !DILocation(line: 92, column: 24, scope: !4923)
!4936 = !DILocation(line: 94, column: 15, scope: !4929)
!4937 = !DILocation(line: 0, scope: !4929)
!4938 = !DILocation(line: 95, column: 33, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4929, file: !2728, line: 95, column: 11)
!4940 = distinct !{!4940, !4934, !4941}
!4941 = !DILocation(line: 97, column: 5, scope: !4923)
!4942 = !DILocation(line: 99, column: 1, scope: !4923)
!4943 = distinct !DISubprogram(name: "init_ssa_renamer", scope: !3, file: !3, line: 2302, type: !3227, scopeLine: 2303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4944)
!4944 = !{!4945, !4946}
!4945 = !DILocalVariable(name: "var", scope: !4943, file: !3, line: 2304, type: !733)
!4946 = !DILocalVariable(name: "rvi", scope: !4943, file: !3, line: 2305, type: !3153)
!4947 = !DILocation(line: 2305, column: 3, scope: !4943)
!4948 = !DILocation(line: 2307, column: 3, scope: !4943)
!4949 = !DILocation(line: 2307, column: 9, scope: !4943)
!4950 = !DILocation(line: 2307, column: 20, scope: !4943)
!4951 = !DILocation(line: 2307, column: 29, scope: !4943)
!4952 = !DILocation(line: 2310, column: 3, scope: !4943)
!4953 = !DILocation(line: 2311, column: 29, scope: !4943)
!4954 = !DILocation(line: 2311, column: 16, scope: !4943)
!4955 = !DILocation(line: 2311, column: 14, scope: !4943)
!4956 = !DILocation(line: 0, scope: !4943)
!4957 = !DILocation(line: 2314, column: 3, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 2314, column: 3)
!4959 = !DILocation(line: 0, scope: !4958)
!4960 = !DILocation(line: 2314, column: 3, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 2314, column: 3)
!4962 = !DILocation(line: 2315, column: 5, scope: !4961)
!4963 = distinct !{!4963, !4957, !4964}
!4964 = !DILocation(line: 2315, column: 36, scope: !4958)
!4965 = !DILocation(line: 2316, column: 1, scope: !4943)
!4966 = distinct !DISubprogram(name: "mark_def_site_blocks", scope: !3, file: !3, line: 2264, type: !3227, scopeLine: 2265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4967)
!4967 = !{!4968, !4969}
!4968 = !DILocalVariable(name: "walk_data", scope: !4966, file: !3, line: 2266, type: !4690)
!4969 = !DILocalVariable(name: "mark_def_sites_global_data", scope: !4966, file: !3, line: 2267, type: !2133)
!4970 = !DILocation(line: 2266, column: 3, scope: !4966)
!4971 = !DILocation(line: 2267, column: 3, scope: !4966)
!4972 = !DILocation(line: 2271, column: 27, scope: !4966)
!4973 = !DILocation(line: 2272, column: 13, scope: !4966)
!4974 = !DILocation(line: 2272, column: 41, scope: !4966)
!4975 = !DILocation(line: 2273, column: 13, scope: !4966)
!4976 = !DILocation(line: 2273, column: 33, scope: !4966)
!4977 = !DILocation(line: 2274, column: 13, scope: !4966)
!4978 = !DILocation(line: 2274, column: 32, scope: !4966)
!4979 = !DILocation(line: 2279, column: 38, scope: !4966)
!4980 = !DILocation(line: 2279, column: 30, scope: !4966)
!4981 = !DILocation(line: 2279, column: 36, scope: !4966)
!4982 = !DILocation(line: 2280, column: 13, scope: !4966)
!4983 = !DILocation(line: 2280, column: 25, scope: !4966)
!4984 = !DILocation(line: 2283, column: 13, scope: !4966)
!4985 = !DILocation(line: 2283, column: 35, scope: !4966)
!4986 = !DILocation(line: 0, scope: !4966)
!4987 = !DILocation(line: 2286, column: 3, scope: !4966)
!4988 = !DILocation(line: 2289, column: 36, scope: !4966)
!4989 = !DILocation(line: 2289, column: 3, scope: !4966)
!4990 = !DILocation(line: 2292, column: 3, scope: !4966)
!4991 = !DILocation(line: 2295, column: 3, scope: !4966)
!4992 = !DILocation(line: 2296, column: 1, scope: !4966)
!4993 = distinct !DISubprogram(name: "insert_phi_nodes", scope: !3, file: !3, line: 1155, type: !4994, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4996)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{null, !2053}
!4996 = !{!4997, !4998, !4999, !5000, !5001, !5002, !5003, !5007, !5011, !5012}
!4997 = !DILocalVariable(name: "dfs", arg: 1, scope: !4993, file: !3, line: 1155, type: !2053)
!4998 = !DILocalVariable(name: "rvi", scope: !4993, file: !3, line: 1157, type: !3153)
!4999 = !DILocalVariable(name: "bi", scope: !4993, file: !3, line: 1158, type: !2774)
!5000 = !DILocalVariable(name: "var", scope: !4993, file: !3, line: 1159, type: !733)
!5001 = !DILocalVariable(name: "vars", scope: !4993, file: !3, line: 1160, type: !1319)
!5002 = !DILocalVariable(name: "uid", scope: !4993, file: !3, line: 1161, type: !7)
!5003 = !DILocalVariable(name: "def_map", scope: !5004, file: !3, line: 1171, type: !2125)
!5004 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1170, column: 5)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 1169, column: 3)
!5006 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 1169, column: 3)
!5007 = !DILocalVariable(name: "var", scope: !5008, file: !3, line: 1183, type: !733)
!5008 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 1182, column: 5)
!5009 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 1181, column: 3)
!5010 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 1181, column: 3)
!5011 = !DILocalVariable(name: "def_map", scope: !5008, file: !3, line: 1184, type: !2125)
!5012 = !DILocalVariable(name: "idf", scope: !5008, file: !3, line: 1185, type: !1319)
!5013 = !DILocation(line: 0, scope: !4993)
!5014 = !DILocation(line: 1157, column: 3, scope: !4993)
!5015 = !DILocation(line: 1158, column: 3, scope: !4993)
!5016 = !DILocation(line: 1161, column: 3, scope: !4993)
!5017 = !DILocation(line: 1163, column: 3, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 1163, column: 3)
!5019 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 1163, column: 3)
!5020 = !DILocation(line: 1163, column: 3, scope: !5019)
!5021 = !DILocation(line: 1168, column: 10, scope: !4993)
!5022 = !DILocation(line: 1169, column: 3, scope: !5006)
!5023 = !DILocation(line: 0, scope: !5006)
!5024 = !DILocation(line: 1169, column: 3, scope: !5005)
!5025 = !DILocation(line: 1173, column: 17, scope: !5004)
!5026 = !DILocation(line: 0, scope: !5004)
!5027 = !DILocation(line: 1174, column: 19, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 1174, column: 11)
!5029 = !DILocation(line: 1174, column: 11, scope: !5004)
!5030 = !DILocation(line: 1177, column: 11, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 1177, column: 11)
!5032 = !DILocation(line: 1177, column: 31, scope: !5031)
!5033 = !DILocation(line: 1177, column: 11, scope: !5004)
!5034 = !DILocation(line: 1178, column: 24, scope: !5031)
!5035 = !DILocation(line: 1178, column: 2, scope: !5031)
!5036 = distinct !{!5036, !5022, !5037}
!5037 = !DILocation(line: 1179, column: 5, scope: !5006)
!5038 = !DILocation(line: 1181, column: 3, scope: !5010)
!5039 = !DILocation(line: 1181, column: 3, scope: !5009)
!5040 = !DILocation(line: 1183, column: 18, scope: !5008)
!5041 = !DILocation(line: 0, scope: !5008)
!5042 = !DILocation(line: 1187, column: 17, scope: !5008)
!5043 = !DILocation(line: 1188, column: 35, scope: !5008)
!5044 = !DILocation(line: 1188, column: 13, scope: !5008)
!5045 = !DILocation(line: 1189, column: 7, scope: !5008)
!5046 = !DILocation(line: 1190, column: 7, scope: !5008)
!5047 = distinct !{!5047, !5038, !5048}
!5048 = !DILocation(line: 1191, column: 5, scope: !5010)
!5049 = !DILocation(line: 1193, column: 3, scope: !4993)
!5050 = !DILocation(line: 1195, column: 3, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 1195, column: 3)
!5052 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 1195, column: 3)
!5053 = !DILocation(line: 1195, column: 3, scope: !5052)
!5054 = !DILocation(line: 1196, column: 1, scope: !4993)
!5055 = distinct !DISubprogram(name: "mark_def_sites_block", scope: !3, file: !3, line: 2241, type: !4701, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5056)
!5056 = !{!5057, !5058, !5059, !5060, !5061}
!5057 = !DILocalVariable(name: "walk_data", arg: 1, scope: !5055, file: !3, line: 2241, type: !4698)
!5058 = !DILocalVariable(name: "bb", arg: 2, scope: !5055, file: !3, line: 2241, type: !670)
!5059 = !DILocalVariable(name: "gd", scope: !5055, file: !3, line: 2243, type: !2132)
!5060 = !DILocalVariable(name: "kills", scope: !5055, file: !3, line: 2244, type: !1319)
!5061 = !DILocalVariable(name: "gsi", scope: !5055, file: !3, line: 2245, type: !4431)
!5062 = !DILocation(line: 0, scope: !5055)
!5063 = !DILocation(line: 2245, column: 3, scope: !5055)
!5064 = !DILocation(line: 2247, column: 57, scope: !5055)
!5065 = !DILocation(line: 2248, column: 15, scope: !5055)
!5066 = !DILocation(line: 2250, column: 3, scope: !5055)
!5067 = !DILocation(line: 2251, column: 14, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2251, column: 3)
!5069 = !DILocation(line: 2251, column: 8, scope: !5068)
!5070 = !DILocation(line: 2251, column: 34, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 2251, column: 3)
!5072 = !DILocation(line: 2251, column: 33, scope: !5071)
!5073 = !DILocation(line: 2251, column: 3, scope: !5068)
!5074 = !DILocation(line: 2252, column: 25, scope: !5071)
!5075 = !DILocation(line: 2252, column: 5, scope: !5071)
!5076 = !DILocation(line: 2251, column: 51, scope: !5071)
!5077 = !DILocation(line: 2251, column: 3, scope: !5071)
!5078 = distinct !{!5078, !5073, !5079}
!5079 = !DILocation(line: 2252, column: 46, scope: !5068)
!5080 = !DILocation(line: 2253, column: 1, scope: !5055)
!5081 = distinct !DISubprogram(name: "gsi_start_bb", scope: !581, file: !581, line: 4418, type: !5082, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5084)
!5082 = !DISubroutineType(types: !5083)
!5083 = !{!4431, !670}
!5084 = !{!5085, !5086, !5087}
!5085 = !DILocalVariable(name: "bb", arg: 1, scope: !5081, file: !581, line: 4418, type: !670)
!5086 = !DILocalVariable(name: "i", scope: !5081, file: !581, line: 4420, type: !4431)
!5087 = !DILocalVariable(name: "seq", scope: !5081, file: !581, line: 4421, type: !698)
!5088 = !DILocation(line: 0, scope: !5081)
!5089 = !DILocation(line: 4420, column: 24, scope: !5081)
!5090 = !DILocation(line: 4423, column: 9, scope: !5081)
!5091 = !DILocation(line: 4424, column: 11, scope: !5081)
!5092 = !DILocation(line: 4424, column: 5, scope: !5081)
!5093 = !DILocation(line: 4424, column: 9, scope: !5081)
!5094 = !DILocation(line: 4425, column: 5, scope: !5081)
!5095 = !DILocation(line: 4425, column: 9, scope: !5081)
!5096 = !DILocation(line: 4426, column: 5, scope: !5081)
!5097 = !DILocation(line: 4426, column: 8, scope: !5081)
!5098 = !DILocation(line: 4429, column: 1, scope: !5081)
!5099 = distinct !DISubprogram(name: "gsi_end_p", scope: !581, file: !581, line: 4467, type: !5100, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5102)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{!661, !4431}
!5102 = !{!5103}
!5103 = !DILocalVariable(name: "i", arg: 1, scope: !5099, file: !581, line: 4467, type: !4431)
!5104 = !DILocation(line: 4467, column: 33, scope: !5099)
!5105 = !DILocation(line: 4469, column: 12, scope: !5099)
!5106 = !DILocation(line: 4469, column: 16, scope: !5099)
!5107 = !DILocation(line: 4469, column: 10, scope: !5099)
!5108 = !DILocation(line: 4469, column: 3, scope: !5099)
!5109 = distinct !DISubprogram(name: "mark_def_sites", scope: !3, file: !3, line: 738, type: !5110, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5112)
!5110 = !DISubroutineType(types: !5111)
!5111 = !{null, !670, !708, !1319}
!5112 = !{!5113, !5114, !5115, !5116, !5117, !5118, !5119}
!5113 = !DILocalVariable(name: "bb", arg: 1, scope: !5109, file: !3, line: 738, type: !670)
!5114 = !DILocalVariable(name: "stmt", arg: 2, scope: !5109, file: !3, line: 738, type: !708)
!5115 = !DILocalVariable(name: "kills", arg: 3, scope: !5109, file: !3, line: 738, type: !1319)
!5116 = !DILocalVariable(name: "def", scope: !5109, file: !3, line: 740, type: !733)
!5117 = !DILocalVariable(name: "use_p", scope: !5109, file: !3, line: 741, type: !2136)
!5118 = !DILocalVariable(name: "iter", scope: !5109, file: !3, line: 742, type: !4450)
!5119 = !DILocalVariable(name: "sym", scope: !5120, file: !3, line: 759, type: !733)
!5120 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 758, column: 5)
!5121 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 757, column: 3)
!5122 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 757, column: 3)
!5123 = !DILocation(line: 0, scope: !5109)
!5124 = !DILocation(line: 742, column: 3, scope: !5109)
!5125 = !DILocation(line: 746, column: 3, scope: !5109)
!5126 = !DILocation(line: 748, column: 3, scope: !5109)
!5127 = !DILocation(line: 749, column: 3, scope: !5109)
!5128 = !DILocation(line: 750, column: 3, scope: !5109)
!5129 = !DILocation(line: 752, column: 7, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 752, column: 7)
!5131 = !DILocation(line: 752, column: 7, scope: !5109)
!5132 = !DILocation(line: 757, column: 3, scope: !5122)
!5133 = !DILocation(line: 0, scope: !5122)
!5134 = !DILocation(line: 757, column: 3, scope: !5121)
!5135 = !DILocation(line: 759, column: 18, scope: !5120)
!5136 = !DILocation(line: 0, scope: !5120)
!5137 = !DILocation(line: 760, column: 7, scope: !5120)
!5138 = !DILocation(line: 761, column: 33, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 761, column: 11)
!5140 = !DILocation(line: 761, column: 12, scope: !5139)
!5141 = !DILocation(line: 761, column: 11, scope: !5120)
!5142 = !DILocation(line: 762, column: 2, scope: !5139)
!5143 = !DILocation(line: 763, column: 7, scope: !5120)
!5144 = distinct !{!5144, !5132, !5145}
!5145 = !DILocation(line: 764, column: 5, scope: !5122)
!5146 = !DILocation(line: 768, column: 3, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 768, column: 3)
!5148 = !DILocation(line: 0, scope: !5147)
!5149 = !DILocation(line: 768, column: 3, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 768, column: 3)
!5151 = !DILocation(line: 770, column: 7, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5150, file: !3, line: 769, column: 5)
!5153 = !DILocation(line: 771, column: 7, scope: !5152)
!5154 = !DILocation(line: 772, column: 30, scope: !5152)
!5155 = !DILocation(line: 772, column: 7, scope: !5152)
!5156 = !DILocation(line: 773, column: 7, scope: !5152)
!5157 = distinct !{!5157, !5146, !5158}
!5158 = !DILocation(line: 774, column: 5, scope: !5147)
!5159 = !DILocation(line: 778, column: 7, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 778, column: 7)
!5161 = !DILocation(line: 778, column: 29, scope: !5160)
!5162 = !DILocation(line: 778, column: 32, scope: !5160)
!5163 = !DILocation(line: 778, column: 7, scope: !5109)
!5164 = !DILocation(line: 779, column: 14, scope: !5160)
!5165 = !DILocation(line: 779, column: 38, scope: !5160)
!5166 = !DILocation(line: 779, column: 5, scope: !5160)
!5167 = !DILocation(line: 780, column: 1, scope: !5109)
!5168 = distinct !DISubprogram(name: "gsi_stmt", scope: !581, file: !581, line: 4501, type: !5169, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5171)
!5169 = !DISubroutineType(types: !5170)
!5170 = !{!708, !4431}
!5171 = !{!5172}
!5172 = !DILocalVariable(name: "i", arg: 1, scope: !5168, file: !581, line: 4501, type: !4431)
!5173 = !DILocation(line: 4501, column: 32, scope: !5168)
!5174 = !DILocation(line: 4503, column: 12, scope: !5168)
!5175 = !DILocation(line: 4503, column: 17, scope: !5168)
!5176 = !DILocation(line: 4503, column: 3, scope: !5168)
!5177 = distinct !DISubprogram(name: "gsi_next", scope: !581, file: !581, line: 4485, type: !5178, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5181)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{null, !5180}
!5180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4431, size: 64)
!5181 = !{!5182}
!5182 = !DILocalVariable(name: "i", arg: 1, scope: !5177, file: !581, line: 4485, type: !5180)
!5183 = !DILocation(line: 0, scope: !5177)
!5184 = !DILocation(line: 4487, column: 15, scope: !5177)
!5185 = !DILocation(line: 4487, column: 20, scope: !5177)
!5186 = !DILocation(line: 4487, column: 10, scope: !5177)
!5187 = !DILocation(line: 4488, column: 1, scope: !5177)
!5188 = distinct !DISubprogram(name: "bb_seq", scope: !581, file: !581, line: 237, type: !5189, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5194)
!5189 = !DISubroutineType(types: !5190)
!5190 = !{!698, !5191}
!5191 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !671, line: 112, baseType: !5192)
!5192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5193, size: 64)
!5193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!5194 = !{!5195}
!5195 = !DILocalVariable(name: "bb", arg: 1, scope: !5188, file: !581, line: 237, type: !5191)
!5196 = !DILocation(line: 0, scope: !5188)
!5197 = !DILocation(line: 239, column: 17, scope: !5188)
!5198 = !DILocation(line: 239, column: 23, scope: !5188)
!5199 = !DILocation(line: 239, column: 33, scope: !5188)
!5200 = !DILocation(line: 239, column: 43, scope: !5188)
!5201 = !DILocation(line: 239, column: 36, scope: !5188)
!5202 = !DILocation(line: 239, column: 10, scope: !5188)
!5203 = !DILocation(line: 239, column: 68, scope: !5188)
!5204 = !DILocation(line: 239, column: 3, scope: !5188)
!5205 = distinct !DISubprogram(name: "gimple_seq_first", scope: !581, file: !581, line: 159, type: !5206, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5211)
!5206 = !DISubroutineType(types: !5207)
!5207 = !{!703, !5208}
!5208 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !671, line: 67, baseType: !5209)
!5209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5210, size: 64)
!5210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !700)
!5211 = !{!5212}
!5212 = !DILocalVariable(name: "s", arg: 1, scope: !5205, file: !581, line: 159, type: !5208)
!5213 = !DILocation(line: 0, scope: !5205)
!5214 = !DILocation(line: 161, column: 10, scope: !5205)
!5215 = !DILocation(line: 161, column: 17, scope: !5205)
!5216 = !DILocation(line: 161, column: 3, scope: !5205)
!5217 = distinct !DISubprogram(name: "update_stmt", scope: !581, file: !581, line: 1456, type: !5218, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5220)
!5218 = !DISubroutineType(types: !5219)
!5219 = !{null, !708}
!5220 = !{!5221}
!5221 = !DILocalVariable(name: "s", arg: 1, scope: !5217, file: !581, line: 1456, type: !708)
!5222 = !DILocation(line: 0, scope: !5217)
!5223 = !DILocation(line: 1458, column: 7, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5217, file: !581, line: 1458, column: 7)
!5225 = !DILocation(line: 1458, column: 7, scope: !5217)
!5226 = !DILocation(line: 1460, column: 7, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5224, file: !581, line: 1459, column: 5)
!5228 = !DILocation(line: 1461, column: 7, scope: !5227)
!5229 = !DILocation(line: 1462, column: 5, scope: !5227)
!5230 = !DILocation(line: 1463, column: 1, scope: !5217)
!5231 = distinct !DISubprogram(name: "set_register_defs", scope: !3, file: !3, line: 276, type: !5232, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5234)
!5232 = !DISubroutineType(types: !5233)
!5233 = !{null, !708, !661}
!5234 = !{!5235, !5236}
!5235 = !DILocalVariable(name: "stmt", arg: 1, scope: !5231, file: !3, line: 276, type: !708)
!5236 = !DILocalVariable(name: "register_defs_p", arg: 2, scope: !5231, file: !3, line: 276, type: !661)
!5237 = !DILocation(line: 0, scope: !5231)
!5238 = !DILocation(line: 278, column: 3, scope: !5231)
!5239 = !DILocation(line: 279, column: 1, scope: !5231)
!5240 = distinct !DISubprogram(name: "set_rewrite_uses", scope: !3, file: !3, line: 252, type: !5232, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5241)
!5241 = !{!5242, !5243}
!5242 = !DILocalVariable(name: "stmt", arg: 1, scope: !5240, file: !3, line: 252, type: !708)
!5243 = !DILocalVariable(name: "rewrite_p", arg: 2, scope: !5240, file: !3, line: 252, type: !661)
!5244 = !DILocation(line: 0, scope: !5240)
!5245 = !DILocation(line: 254, column: 3, scope: !5240)
!5246 = !DILocation(line: 255, column: 1, scope: !5240)
!5247 = distinct !DISubprogram(name: "is_gimple_debug", scope: !581, file: !581, line: 3249, type: !5248, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5250)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{!661, !3782}
!5250 = !{!5251}
!5251 = !DILocalVariable(name: "gs", arg: 1, scope: !5247, file: !581, line: 3249, type: !3782)
!5252 = !DILocation(line: 0, scope: !5247)
!5253 = !DILocation(line: 3251, column: 10, scope: !5247)
!5254 = !DILocation(line: 3251, column: 27, scope: !5247)
!5255 = !DILocation(line: 3251, column: 3, scope: !5247)
!5256 = distinct !DISubprogram(name: "op_iter_init_use", scope: !2728, file: !2728, line: 768, type: !5257, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5260)
!5257 = !DISubroutineType(types: !5258)
!5258 = !{!2136, !5259, !708, !662}
!5259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 64)
!5260 = !{!5261, !5262, !5263}
!5261 = !DILocalVariable(name: "ptr", arg: 1, scope: !5256, file: !2728, line: 768, type: !5259)
!5262 = !DILocalVariable(name: "stmt", arg: 2, scope: !5256, file: !2728, line: 768, type: !708)
!5263 = !DILocalVariable(name: "flags", arg: 3, scope: !5256, file: !2728, line: 768, type: !662)
!5264 = !DILocation(line: 0, scope: !5256)
!5265 = !DILocation(line: 770, column: 3, scope: !5256)
!5266 = !DILocation(line: 772, column: 3, scope: !5256)
!5267 = !DILocation(line: 773, column: 8, scope: !5256)
!5268 = !DILocation(line: 773, column: 18, scope: !5256)
!5269 = !DILocation(line: 774, column: 10, scope: !5256)
!5270 = !DILocation(line: 774, column: 3, scope: !5256)
!5271 = distinct !DISubprogram(name: "op_iter_done", scope: !2728, file: !2728, line: 652, type: !5272, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5276)
!5272 = !DISubroutineType(types: !5273)
!5273 = !{!661, !5274}
!5274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5275, size: 64)
!5275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4450)
!5276 = !{!5277}
!5277 = !DILocalVariable(name: "ptr", arg: 1, scope: !5271, file: !2728, line: 652, type: !5274)
!5278 = !DILocation(line: 0, scope: !5271)
!5279 = !DILocation(line: 654, column: 15, scope: !5271)
!5280 = !DILocation(line: 654, column: 3, scope: !5271)
!5281 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !2728, file: !2728, line: 427, type: !5282, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5284)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{!733, !2136}
!5284 = !{!5285}
!5285 = !DILocalVariable(name: "use", arg: 1, scope: !5281, file: !2728, line: 427, type: !2136)
!5286 = !DILocation(line: 0, scope: !5281)
!5287 = !DILocation(line: 429, column: 17, scope: !5281)
!5288 = !DILocation(line: 429, column: 10, scope: !5281)
!5289 = !DILocation(line: 429, column: 3, scope: !5281)
!5290 = distinct !DISubprogram(name: "set_livein_block", scope: !3, file: !3, line: 532, type: !5291, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5293)
!5291 = !DISubroutineType(types: !5292)
!5292 = !{null, !733, !670}
!5293 = !{!5294, !5295, !5296, !5297, !5298}
!5294 = !DILocalVariable(name: "var", arg: 1, scope: !5290, file: !3, line: 532, type: !733)
!5295 = !DILocalVariable(name: "bb", arg: 2, scope: !5290, file: !3, line: 532, type: !670)
!5296 = !DILocalVariable(name: "db_p", scope: !5290, file: !3, line: 534, type: !2125)
!5297 = !DILocalVariable(name: "state", scope: !5290, file: !3, line: 535, type: !585)
!5298 = !DILocalVariable(name: "def_block_index", scope: !5299, file: !3, line: 550, type: !662)
!5299 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 549, column: 5)
!5300 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 548, column: 7)
!5301 = !DILocation(line: 0, scope: !5290)
!5302 = !DILocation(line: 535, column: 31, scope: !5290)
!5303 = !DILocation(line: 537, column: 10, scope: !5290)
!5304 = !DILocation(line: 540, column: 25, scope: !5290)
!5305 = !DILocation(line: 540, column: 44, scope: !5290)
!5306 = !DILocation(line: 540, column: 3, scope: !5290)
!5307 = !DILocation(line: 548, column: 13, scope: !5300)
!5308 = !DILocation(line: 548, column: 7, scope: !5290)
!5309 = !DILocation(line: 550, column: 57, scope: !5299)
!5310 = !DILocation(line: 550, column: 29, scope: !5299)
!5311 = !DILocation(line: 0, scope: !5299)
!5312 = !DILocation(line: 552, column: 27, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 552, column: 11)
!5314 = !DILocation(line: 553, column: 4, scope: !5313)
!5315 = !DILocation(line: 554, column: 25, scope: !5313)
!5316 = !DILocation(line: 553, column: 9, scope: !5313)
!5317 = !DILocation(line: 552, column: 11, scope: !5299)
!5318 = !DILocation(line: 555, column: 2, scope: !5313)
!5319 = !DILocation(line: 558, column: 5, scope: !5300)
!5320 = !DILocation(line: 559, column: 1, scope: !5290)
!5321 = distinct !DISubprogram(name: "op_iter_next_use", scope: !2728, file: !2728, line: 659, type: !5322, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5324)
!5322 = !DISubroutineType(types: !5323)
!5323 = !{!2136, !5259}
!5324 = !{!5325, !5326}
!5325 = !DILocalVariable(name: "ptr", arg: 1, scope: !5321, file: !2728, line: 659, type: !5259)
!5326 = !DILocalVariable(name: "use_p", scope: !5321, file: !2728, line: 661, type: !2136)
!5327 = !DILocation(line: 0, scope: !5321)
!5328 = !DILocation(line: 665, column: 12, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5321, file: !2728, line: 665, column: 7)
!5330 = !DILocation(line: 665, column: 7, scope: !5329)
!5331 = !DILocation(line: 665, column: 7, scope: !5321)
!5332 = !DILocation(line: 667, column: 15, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5329, file: !2728, line: 666, column: 5)
!5334 = !DILocation(line: 668, column: 30, scope: !5333)
!5335 = !DILocation(line: 668, column: 17, scope: !5333)
!5336 = !DILocation(line: 669, column: 7, scope: !5333)
!5337 = !DILocation(line: 671, column: 12, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5321, file: !2728, line: 671, column: 7)
!5339 = !DILocation(line: 671, column: 25, scope: !5338)
!5340 = !DILocation(line: 671, column: 18, scope: !5338)
!5341 = !DILocation(line: 671, column: 7, scope: !5321)
!5342 = !DILocation(line: 673, column: 14, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5338, file: !2728, line: 672, column: 5)
!5344 = !DILocation(line: 673, column: 7, scope: !5343)
!5345 = !DILocation(line: 675, column: 8, scope: !5321)
!5346 = !DILocation(line: 675, column: 13, scope: !5321)
!5347 = !DILocation(line: 676, column: 3, scope: !5321)
!5348 = !DILocation(line: 677, column: 1, scope: !5321)
!5349 = distinct !DISubprogram(name: "op_iter_init_tree", scope: !2728, file: !2728, line: 792, type: !5350, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5352)
!5350 = !DISubroutineType(types: !5351)
!5351 = !{!733, !5259, !708, !662}
!5352 = !{!5353, !5354, !5355}
!5353 = !DILocalVariable(name: "ptr", arg: 1, scope: !5349, file: !2728, line: 792, type: !5259)
!5354 = !DILocalVariable(name: "stmt", arg: 2, scope: !5349, file: !2728, line: 792, type: !708)
!5355 = !DILocalVariable(name: "flags", arg: 3, scope: !5349, file: !2728, line: 792, type: !662)
!5356 = !DILocation(line: 0, scope: !5349)
!5357 = !DILocation(line: 794, column: 3, scope: !5349)
!5358 = !DILocation(line: 795, column: 8, scope: !5349)
!5359 = !DILocation(line: 795, column: 18, scope: !5349)
!5360 = !DILocation(line: 796, column: 10, scope: !5349)
!5361 = !DILocation(line: 796, column: 3, scope: !5349)
!5362 = distinct !DISubprogram(name: "set_def_block", scope: !3, file: !3, line: 497, type: !5363, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5365)
!5363 = !DISubroutineType(types: !5364)
!5364 = !{null, !733, !670, !661}
!5365 = !{!5366, !5367, !5368, !5369, !5370}
!5366 = !DILocalVariable(name: "var", arg: 1, scope: !5362, file: !3, line: 497, type: !733)
!5367 = !DILocalVariable(name: "bb", arg: 2, scope: !5362, file: !3, line: 497, type: !670)
!5368 = !DILocalVariable(name: "phi_p", arg: 3, scope: !5362, file: !3, line: 497, type: !661)
!5369 = !DILocalVariable(name: "db_p", scope: !5362, file: !3, line: 499, type: !2125)
!5370 = !DILocalVariable(name: "state", scope: !5362, file: !3, line: 500, type: !585)
!5371 = !DILocation(line: 0, scope: !5362)
!5372 = !DILocation(line: 502, column: 11, scope: !5362)
!5373 = !DILocation(line: 503, column: 10, scope: !5362)
!5374 = !DILocation(line: 506, column: 25, scope: !5362)
!5375 = !DILocation(line: 506, column: 41, scope: !5362)
!5376 = !DILocation(line: 506, column: 3, scope: !5362)
!5377 = !DILocation(line: 507, column: 7, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 507, column: 7)
!5379 = !DILocation(line: 507, column: 7, scope: !5362)
!5380 = !DILocation(line: 508, column: 27, scope: !5378)
!5381 = !DILocation(line: 508, column: 43, scope: !5378)
!5382 = !DILocation(line: 508, column: 5, scope: !5378)
!5383 = !DILocation(line: 522, column: 13, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 522, column: 7)
!5385 = !DILocation(line: 522, column: 7, scope: !5362)
!5386 = !DILocation(line: 523, column: 5, scope: !5384)
!5387 = !DILocation(line: 525, column: 5, scope: !5384)
!5388 = !DILocation(line: 526, column: 1, scope: !5362)
!5389 = distinct !DISubprogram(name: "op_iter_next_tree", scope: !2728, file: !2728, line: 699, type: !5390, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5392)
!5390 = !DISubroutineType(types: !5391)
!5391 = !{!733, !5259}
!5392 = !{!5393, !5394}
!5393 = !DILocalVariable(name: "ptr", arg: 1, scope: !5389, file: !2728, line: 699, type: !5259)
!5394 = !DILocalVariable(name: "val", scope: !5389, file: !2728, line: 701, type: !733)
!5395 = !DILocation(line: 0, scope: !5389)
!5396 = !DILocation(line: 705, column: 12, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5389, file: !2728, line: 705, column: 7)
!5398 = !DILocation(line: 705, column: 7, scope: !5397)
!5399 = !DILocation(line: 705, column: 7, scope: !5389)
!5400 = !DILocation(line: 707, column: 13, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5397, file: !2728, line: 706, column: 5)
!5402 = !DILocation(line: 708, column: 24, scope: !5401)
!5403 = !DILocation(line: 708, column: 30, scope: !5401)
!5404 = !DILocation(line: 708, column: 17, scope: !5401)
!5405 = !DILocation(line: 709, column: 7, scope: !5401)
!5406 = !DILocation(line: 711, column: 12, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5389, file: !2728, line: 711, column: 7)
!5408 = !DILocation(line: 711, column: 7, scope: !5407)
!5409 = !DILocation(line: 711, column: 7, scope: !5389)
!5410 = !DILocation(line: 713, column: 13, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5407, file: !2728, line: 712, column: 5)
!5412 = !DILocation(line: 714, column: 24, scope: !5411)
!5413 = !DILocation(line: 714, column: 30, scope: !5411)
!5414 = !DILocation(line: 714, column: 17, scope: !5411)
!5415 = !DILocation(line: 715, column: 7, scope: !5411)
!5416 = !DILocation(line: 718, column: 8, scope: !5389)
!5417 = !DILocation(line: 718, column: 13, scope: !5389)
!5418 = !DILocation(line: 719, column: 3, scope: !5389)
!5419 = !DILocation(line: 721, column: 1, scope: !5389)
!5420 = distinct !DISubprogram(name: "rewrite_uses_p", scope: !3, file: !3, line: 243, type: !5421, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5423)
!5421 = !DISubroutineType(types: !5422)
!5422 = !{!661, !708}
!5423 = !{!5424}
!5424 = !DILocalVariable(name: "stmt", arg: 1, scope: !5420, file: !3, line: 243, type: !708)
!5425 = !DILocation(line: 0, scope: !5420)
!5426 = !DILocation(line: 245, column: 10, scope: !5420)
!5427 = !DILocation(line: 245, column: 3, scope: !5420)
!5428 = distinct !DISubprogram(name: "register_defs_p", scope: !3, file: !3, line: 267, type: !5421, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5429)
!5429 = !{!5430}
!5430 = !DILocalVariable(name: "stmt", arg: 1, scope: !5428, file: !3, line: 267, type: !708)
!5431 = !DILocation(line: 0, scope: !5428)
!5432 = !DILocation(line: 269, column: 10, scope: !5428)
!5433 = !DILocation(line: 269, column: 38, scope: !5428)
!5434 = !DILocation(line: 269, column: 3, scope: !5428)
!5435 = distinct !DISubprogram(name: "gimple_has_ops", scope: !581, file: !581, line: 1274, type: !5248, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5436)
!5436 = !{!5437}
!5437 = !DILocalVariable(name: "g", arg: 1, scope: !5435, file: !581, line: 1274, type: !3782)
!5438 = !DILocation(line: 0, scope: !5435)
!5439 = !DILocation(line: 1276, column: 10, scope: !5435)
!5440 = !DILocation(line: 1276, column: 26, scope: !5435)
!5441 = !DILocation(line: 1276, column: 41, scope: !5435)
!5442 = !DILocation(line: 1276, column: 44, scope: !5435)
!5443 = !DILocation(line: 1276, column: 60, scope: !5435)
!5444 = !DILocation(line: 1276, column: 3, scope: !5435)
!5445 = distinct !DISubprogram(name: "gimple_set_plf", scope: !581, file: !581, line: 1235, type: !5446, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5448)
!5446 = !DISubroutineType(types: !5447)
!5447 = !{null, !708, !580, !661}
!5448 = !{!5449, !5450, !5451}
!5449 = !DILocalVariable(name: "stmt", arg: 1, scope: !5445, file: !581, line: 1235, type: !708)
!5450 = !DILocalVariable(name: "plf", arg: 2, scope: !5445, file: !581, line: 1235, type: !580)
!5451 = !DILocalVariable(name: "val_p", arg: 3, scope: !5445, file: !581, line: 1235, type: !661)
!5452 = !DILocation(line: 0, scope: !5445)
!5453 = !DILocation(line: 1237, column: 7, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5445, file: !581, line: 1237, column: 7)
!5455 = !DILocation(line: 1237, column: 7, scope: !5445)
!5456 = !DILocation(line: 1238, column: 18, scope: !5454)
!5457 = !DILocation(line: 1238, column: 22, scope: !5454)
!5458 = !DILocation(line: 1238, column: 5, scope: !5454)
!5459 = !DILocation(line: 1240, column: 18, scope: !5454)
!5460 = !DILocation(line: 1240, column: 22, scope: !5454)
!5461 = !DILocation(line: 1241, column: 1, scope: !5445)
!5462 = distinct !DISubprogram(name: "gimple_set_visited", scope: !581, file: !581, line: 1217, type: !5232, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5463)
!5463 = !{!5464, !5465}
!5464 = !DILocalVariable(name: "stmt", arg: 1, scope: !5462, file: !581, line: 1217, type: !708)
!5465 = !DILocalVariable(name: "visited_p", arg: 2, scope: !5462, file: !581, line: 1217, type: !661)
!5466 = !DILocation(line: 0, scope: !5462)
!5467 = !DILocation(line: 1219, column: 16, scope: !5462)
!5468 = !DILocation(line: 1219, column: 24, scope: !5462)
!5469 = !DILocation(line: 1220, column: 1, scope: !5462)
!5470 = distinct !DISubprogram(name: "op_iter_init", scope: !2728, file: !2728, line: 742, type: !5471, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5473)
!5471 = !DISubroutineType(types: !5472)
!5472 = !{null, !5259, !708, !662}
!5473 = !{!5474, !5475, !5476}
!5474 = !DILocalVariable(name: "ptr", arg: 1, scope: !5470, file: !2728, line: 742, type: !5259)
!5475 = !DILocalVariable(name: "stmt", arg: 2, scope: !5470, file: !2728, line: 742, type: !708)
!5476 = !DILocalVariable(name: "flags", arg: 3, scope: !5470, file: !2728, line: 742, type: !662)
!5477 = !DILocation(line: 0, scope: !5470)
!5478 = !DILocation(line: 746, column: 3, scope: !5470)
!5479 = !DILocation(line: 748, column: 22, scope: !5470)
!5480 = !DILocation(line: 748, column: 15, scope: !5470)
!5481 = !DILocation(line: 748, column: 52, scope: !5470)
!5482 = !DILocation(line: 748, column: 8, scope: !5470)
!5483 = !DILocation(line: 748, column: 13, scope: !5470)
!5484 = !DILocation(line: 749, column: 15, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5470, file: !2728, line: 749, column: 7)
!5486 = !DILocation(line: 750, column: 7, scope: !5485)
!5487 = !DILocation(line: 750, column: 10, scope: !5485)
!5488 = !DILocation(line: 751, column: 7, scope: !5485)
!5489 = !DILocation(line: 751, column: 10, scope: !5485)
!5490 = !DILocation(line: 751, column: 29, scope: !5485)
!5491 = !DILocation(line: 749, column: 7, scope: !5470)
!5492 = !DILocation(line: 752, column: 22, scope: !5485)
!5493 = !DILocation(line: 752, column: 28, scope: !5485)
!5494 = !DILocation(line: 752, column: 15, scope: !5485)
!5495 = !DILocation(line: 752, column: 5, scope: !5485)
!5496 = !DILocation(line: 753, column: 22, scope: !5470)
!5497 = !DILocation(line: 753, column: 15, scope: !5470)
!5498 = !DILocation(line: 753, column: 52, scope: !5470)
!5499 = !DILocation(line: 753, column: 8, scope: !5470)
!5500 = !DILocation(line: 753, column: 13, scope: !5470)
!5501 = !DILocation(line: 754, column: 15, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5470, file: !2728, line: 754, column: 7)
!5503 = !DILocation(line: 755, column: 7, scope: !5502)
!5504 = !DILocation(line: 755, column: 10, scope: !5502)
!5505 = !DILocation(line: 756, column: 7, scope: !5502)
!5506 = !DILocation(line: 756, column: 10, scope: !5502)
!5507 = !DILocation(line: 756, column: 29, scope: !5502)
!5508 = !DILocation(line: 754, column: 7, scope: !5470)
!5509 = !DILocation(line: 757, column: 22, scope: !5502)
!5510 = !DILocation(line: 757, column: 28, scope: !5502)
!5511 = !DILocation(line: 757, column: 15, scope: !5502)
!5512 = !DILocation(line: 757, column: 5, scope: !5502)
!5513 = !DILocation(line: 758, column: 8, scope: !5470)
!5514 = !DILocation(line: 758, column: 13, scope: !5470)
!5515 = !DILocation(line: 760, column: 8, scope: !5470)
!5516 = !DILocation(line: 760, column: 14, scope: !5470)
!5517 = !DILocation(line: 761, column: 8, scope: !5470)
!5518 = !DILocation(line: 761, column: 16, scope: !5470)
!5519 = !DILocation(line: 762, column: 8, scope: !5470)
!5520 = !DILocation(line: 762, column: 17, scope: !5470)
!5521 = !DILocation(line: 763, column: 1, scope: !5470)
!5522 = distinct !DISubprogram(name: "gimple_def_ops", scope: !581, file: !581, line: 1292, type: !5523, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5525)
!5523 = !DISubroutineType(types: !5524)
!5524 = !{!1342, !3782}
!5525 = !{!5526}
!5526 = !DILocalVariable(name: "g", arg: 1, scope: !5522, file: !581, line: 1292, type: !3782)
!5527 = !DILocation(line: 0, scope: !5522)
!5528 = !DILocation(line: 1294, column: 8, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5522, file: !581, line: 1294, column: 7)
!5530 = !DILocation(line: 1294, column: 7, scope: !5522)
!5531 = !DILocation(line: 1296, column: 26, scope: !5522)
!5532 = !DILocation(line: 1296, column: 3, scope: !5522)
!5533 = !DILocation(line: 1297, column: 1, scope: !5522)
!5534 = distinct !DISubprogram(name: "gimple_vdef", scope: !581, file: !581, line: 1375, type: !5535, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5537)
!5535 = !DISubroutineType(types: !5536)
!5536 = !{!733, !3782}
!5537 = !{!5538}
!5538 = !DILocalVariable(name: "g", arg: 1, scope: !5534, file: !581, line: 1375, type: !3782)
!5539 = !DILocation(line: 0, scope: !5534)
!5540 = !DILocation(line: 1377, column: 8, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5534, file: !581, line: 1377, column: 7)
!5542 = !DILocation(line: 1377, column: 7, scope: !5534)
!5543 = !DILocation(line: 1379, column: 23, scope: !5534)
!5544 = !DILocation(line: 1379, column: 3, scope: !5534)
!5545 = !DILocation(line: 1380, column: 1, scope: !5534)
!5546 = distinct !DISubprogram(name: "gimple_use_ops", scope: !581, file: !581, line: 1313, type: !5547, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5549)
!5547 = !DISubroutineType(types: !5548)
!5548 = !{!1349, !3782}
!5549 = !{!5550}
!5550 = !DILocalVariable(name: "g", arg: 1, scope: !5546, file: !581, line: 1313, type: !3782)
!5551 = !DILocation(line: 0, scope: !5546)
!5552 = !DILocation(line: 1315, column: 8, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5546, file: !581, line: 1315, column: 7)
!5554 = !DILocation(line: 1315, column: 7, scope: !5546)
!5555 = !DILocation(line: 1317, column: 26, scope: !5546)
!5556 = !DILocation(line: 1317, column: 3, scope: !5546)
!5557 = !DILocation(line: 1318, column: 1, scope: !5546)
!5558 = distinct !DISubprogram(name: "gimple_vuse", scope: !581, file: !581, line: 1365, type: !5535, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5559)
!5559 = !{!5560}
!5560 = !DILocalVariable(name: "g", arg: 1, scope: !5558, file: !581, line: 1365, type: !3782)
!5561 = !DILocation(line: 0, scope: !5558)
!5562 = !DILocation(line: 1367, column: 8, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5558, file: !581, line: 1367, column: 7)
!5564 = !DILocation(line: 1367, column: 7, scope: !5558)
!5565 = !DILocation(line: 1369, column: 23, scope: !5558)
!5566 = !DILocation(line: 1369, column: 3, scope: !5558)
!5567 = !DILocation(line: 1370, column: 1, scope: !5558)
!5568 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !581, file: !581, line: 1283, type: !5248, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5569)
!5569 = !{!5570}
!5570 = !DILocalVariable(name: "g", arg: 1, scope: !5568, file: !581, line: 1283, type: !3782)
!5571 = !DILocation(line: 0, scope: !5568)
!5572 = !DILocation(line: 1285, column: 10, scope: !5568)
!5573 = !DILocation(line: 1285, column: 26, scope: !5568)
!5574 = !DILocation(line: 1285, column: 43, scope: !5568)
!5575 = !DILocation(line: 1285, column: 46, scope: !5568)
!5576 = !DILocation(line: 1285, column: 62, scope: !5568)
!5577 = !DILocation(line: 1285, column: 3, scope: !5568)
!5578 = distinct !DISubprogram(name: "get_phi_state", scope: !3, file: !3, line: 328, type: !5579, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5581)
!5579 = !DISubroutineType(types: !5580)
!5580 = !{!585, !733}
!5581 = !{!5582}
!5582 = !DILocalVariable(name: "var", arg: 1, scope: !5578, file: !3, line: 328, type: !733)
!5583 = !DILocation(line: 0, scope: !5578)
!5584 = !DILocation(line: 330, column: 7, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 330, column: 7)
!5586 = !DILocation(line: 330, column: 23, scope: !5585)
!5587 = !DILocation(line: 330, column: 7, scope: !5578)
!5588 = !DILocation(line: 331, column: 12, scope: !5585)
!5589 = !DILocation(line: 331, column: 36, scope: !5585)
!5590 = !DILocation(line: 331, column: 5, scope: !5585)
!5591 = !DILocation(line: 333, column: 12, scope: !5585)
!5592 = !DILocation(line: 333, column: 27, scope: !5585)
!5593 = !DILocation(line: 333, column: 5, scope: !5585)
!5594 = !DILocation(line: 0, scope: !5585)
!5595 = !DILocation(line: 334, column: 1, scope: !5578)
!5596 = distinct !DISubprogram(name: "get_def_blocks_for", scope: !3, file: !3, line: 470, type: !5597, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5599)
!5597 = !DISubroutineType(types: !5598)
!5598 = !{!2125, !733}
!5599 = !{!5600, !5601, !5602, !5603}
!5600 = !DILocalVariable(name: "var", arg: 1, scope: !5596, file: !3, line: 470, type: !733)
!5601 = !DILocalVariable(name: "db", scope: !5596, file: !3, line: 472, type: !2126)
!5602 = !DILocalVariable(name: "db_p", scope: !5596, file: !3, line: 472, type: !2125)
!5603 = !DILocalVariable(name: "slot", scope: !5596, file: !3, line: 473, type: !1254)
!5604 = !DILocation(line: 0, scope: !5596)
!5605 = !DILocation(line: 472, column: 3, scope: !5596)
!5606 = !DILocation(line: 475, column: 6, scope: !5596)
!5607 = !DILocation(line: 475, column: 10, scope: !5596)
!5608 = !DILocation(line: 476, column: 26, scope: !5596)
!5609 = !DILocation(line: 476, column: 10, scope: !5596)
!5610 = !DILocation(line: 477, column: 7, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 477, column: 7)
!5612 = !DILocation(line: 477, column: 13, scope: !5611)
!5613 = !DILocation(line: 477, column: 7, scope: !5596)
!5614 = !DILocation(line: 479, column: 14, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 478, column: 5)
!5616 = !DILocation(line: 480, column: 13, scope: !5615)
!5617 = !DILocation(line: 480, column: 17, scope: !5615)
!5618 = !DILocation(line: 481, column: 26, scope: !5615)
!5619 = !DILocation(line: 481, column: 13, scope: !5615)
!5620 = !DILocation(line: 481, column: 24, scope: !5615)
!5621 = !DILocation(line: 482, column: 26, scope: !5615)
!5622 = !DILocation(line: 482, column: 13, scope: !5615)
!5623 = !DILocation(line: 482, column: 24, scope: !5615)
!5624 = !DILocation(line: 483, column: 29, scope: !5615)
!5625 = !DILocation(line: 483, column: 13, scope: !5615)
!5626 = !DILocation(line: 483, column: 27, scope: !5615)
!5627 = !DILocation(line: 484, column: 13, scope: !5615)
!5628 = !DILocation(line: 485, column: 5, scope: !5615)
!5629 = !DILocation(line: 0, scope: !5611)
!5630 = !DILocation(line: 490, column: 1, scope: !5596)
!5631 = !DILocation(line: 489, column: 3, scope: !5596)
!5632 = distinct !DISubprogram(name: "set_phi_state", scope: !3, file: !3, line: 340, type: !5633, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5635)
!5633 = !DISubroutineType(types: !5634)
!5634 = !{null, !733, !585}
!5635 = !{!5636, !5637}
!5636 = !DILocalVariable(name: "var", arg: 1, scope: !5632, file: !3, line: 340, type: !733)
!5637 = !DILocalVariable(name: "state", arg: 2, scope: !5632, file: !3, line: 340, type: !585)
!5638 = !DILocation(line: 0, scope: !5632)
!5639 = !DILocation(line: 342, column: 7, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 342, column: 7)
!5641 = !DILocation(line: 342, column: 23, scope: !5640)
!5642 = !DILocation(line: 342, column: 7, scope: !5632)
!5643 = !DILocation(line: 343, column: 5, scope: !5640)
!5644 = !DILocation(line: 343, column: 29, scope: !5640)
!5645 = !DILocation(line: 343, column: 44, scope: !5640)
!5646 = !DILocation(line: 345, column: 5, scope: !5640)
!5647 = !DILocation(line: 345, column: 20, scope: !5640)
!5648 = !DILocation(line: 345, column: 35, scope: !5640)
!5649 = !DILocation(line: 346, column: 1, scope: !5632)
!5650 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !2728, file: !2728, line: 442, type: !5651, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5653)
!5651 = !DISubroutineType(types: !5652)
!5652 = !{!2136, !708, !662}
!5653 = !{!5654, !5655}
!5654 = !DILocalVariable(name: "gs", arg: 1, scope: !5650, file: !2728, line: 442, type: !708)
!5655 = !DILocalVariable(name: "i", arg: 2, scope: !5650, file: !2728, line: 442, type: !662)
!5656 = !DILocation(line: 0, scope: !5650)
!5657 = !DILocation(line: 444, column: 11, scope: !5650)
!5658 = !DILocation(line: 444, column: 35, scope: !5650)
!5659 = !DILocation(line: 444, column: 3, scope: !5650)
!5660 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !581, file: !581, line: 3100, type: !5661, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5663)
!5661 = !DISubroutineType(types: !5662)
!5662 = !{!2186, !708, !7}
!5663 = !{!5664, !5665}
!5664 = !DILocalVariable(name: "gs", arg: 1, scope: !5660, file: !581, line: 3100, type: !708)
!5665 = !DILocalVariable(name: "index", arg: 2, scope: !5660, file: !581, line: 3100, type: !7)
!5666 = !DILocation(line: 0, scope: !5660)
!5667 = !DILocation(line: 3103, column: 3, scope: !5660)
!5668 = !DILocation(line: 3104, column: 12, scope: !5660)
!5669 = !DILocation(line: 3104, column: 3, scope: !5660)
!5670 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !2728, file: !2728, line: 434, type: !5671, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5673)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{!733, !2187}
!5673 = !{!5674}
!5674 = !DILocalVariable(name: "def", arg: 1, scope: !5670, file: !2728, line: 434, type: !2187)
!5675 = !DILocation(line: 0, scope: !5670)
!5676 = !DILocation(line: 436, column: 10, scope: !5670)
!5677 = !DILocation(line: 436, column: 3, scope: !5670)
!5678 = distinct !DISubprogram(name: "gimple_visited_p", scope: !581, file: !581, line: 1226, type: !5421, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5679)
!5679 = !{!5680}
!5680 = !DILocalVariable(name: "stmt", arg: 1, scope: !5678, file: !581, line: 1226, type: !708)
!5681 = !DILocation(line: 0, scope: !5678)
!5682 = !DILocation(line: 1228, column: 23, scope: !5678)
!5683 = !DILocation(line: 1228, column: 10, scope: !5678)
!5684 = !DILocation(line: 1228, column: 3, scope: !5678)
!5685 = distinct !DISubprogram(name: "gimple_plf", scope: !581, file: !581, line: 1247, type: !5686, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5688)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!7, !708, !580}
!5688 = !{!5689, !5690}
!5689 = !DILocalVariable(name: "stmt", arg: 1, scope: !5685, file: !581, line: 1247, type: !708)
!5690 = !DILocalVariable(name: "plf", arg: 2, scope: !5685, file: !581, line: 1247, type: !580)
!5691 = !DILocation(line: 0, scope: !5685)
!5692 = !DILocation(line: 1249, column: 23, scope: !5685)
!5693 = !DILocation(line: 1249, column: 27, scope: !5685)
!5694 = !DILocation(line: 1249, column: 3, scope: !5685)
!5695 = distinct !DISubprogram(name: "find_def_blocks_for", scope: !3, file: !3, line: 1007, type: !5597, scopeLine: 1008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5696)
!5696 = !{!5697, !5698}
!5697 = !DILocalVariable(name: "var", arg: 1, scope: !5695, file: !3, line: 1007, type: !733)
!5698 = !DILocalVariable(name: "dm", scope: !5695, file: !3, line: 1009, type: !2126)
!5699 = !DILocation(line: 0, scope: !5695)
!5700 = !DILocation(line: 1009, column: 3, scope: !5695)
!5701 = !DILocation(line: 1010, column: 6, scope: !5695)
!5702 = !DILocation(line: 1010, column: 10, scope: !5695)
!5703 = !DILocation(line: 1011, column: 45, scope: !5695)
!5704 = !DILocation(line: 1011, column: 34, scope: !5695)
!5705 = !DILocation(line: 1011, column: 10, scope: !5695)
!5706 = !DILocation(line: 1012, column: 1, scope: !5695)
!5707 = !DILocation(line: 1011, column: 3, scope: !5695)
!5708 = distinct !DISubprogram(name: "insert_phi_nodes_for", scope: !3, file: !3, line: 1072, type: !5709, scopeLine: 1073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5711)
!5709 = !DISubroutineType(types: !5710)
!5710 = !{null, !733, !1319, !661}
!5711 = !{!5712, !5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5727, !5728, !5730, !5733}
!5712 = !DILocalVariable(name: "var", arg: 1, scope: !5708, file: !3, line: 1072, type: !733)
!5713 = !DILocalVariable(name: "phi_insertion_points", arg: 2, scope: !5708, file: !3, line: 1072, type: !1319)
!5714 = !DILocalVariable(name: "update_p", arg: 3, scope: !5708, file: !3, line: 1072, type: !661)
!5715 = !DILocalVariable(name: "bb_index", scope: !5708, file: !3, line: 1074, type: !7)
!5716 = !DILocalVariable(name: "e", scope: !5708, file: !3, line: 1075, type: !688)
!5717 = !DILocalVariable(name: "phi", scope: !5708, file: !3, line: 1076, type: !708)
!5718 = !DILocalVariable(name: "bb", scope: !5708, file: !3, line: 1077, type: !670)
!5719 = !DILocalVariable(name: "bi", scope: !5708, file: !3, line: 1078, type: !2774)
!5720 = !DILocalVariable(name: "def_map", scope: !5708, file: !3, line: 1079, type: !2125)
!5721 = !DILocalVariable(name: "ei", scope: !5722, file: !3, line: 1106, type: !2784)
!5722 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 1101, column: 2)
!5723 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 1100, column: 11)
!5724 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 1093, column: 5)
!5725 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 1092, column: 3)
!5726 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 1092, column: 3)
!5727 = !DILocalVariable(name: "new_lhs", scope: !5722, file: !3, line: 1107, type: !733)
!5728 = !DILocalVariable(name: "tracked_var", scope: !5729, file: !3, line: 1127, type: !733)
!5729 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 1126, column: 2)
!5730 = !DILocalVariable(name: "note", scope: !5731, file: !3, line: 1135, type: !708)
!5731 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 1134, column: 6)
!5732 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1133, column: 8)
!5733 = !DILocalVariable(name: "si", scope: !5731, file: !3, line: 1138, type: !4431)
!5734 = !DILocation(line: 0, scope: !5708)
!5735 = !DILocation(line: 1074, column: 3, scope: !5708)
!5736 = !DILocation(line: 1075, column: 3, scope: !5708)
!5737 = !DILocation(line: 1078, column: 3, scope: !5708)
!5738 = !DILocation(line: 1081, column: 13, scope: !5708)
!5739 = !DILocation(line: 1082, column: 3, scope: !5708)
!5740 = !DILocation(line: 1085, column: 57, scope: !5708)
!5741 = !DILocation(line: 1085, column: 3, scope: !5708)
!5742 = !DILocation(line: 1088, column: 58, scope: !5708)
!5743 = !DILocation(line: 1089, column: 15, scope: !5708)
!5744 = !DILocation(line: 1088, column: 3, scope: !5708)
!5745 = !DILocation(line: 1092, column: 3, scope: !5726)
!5746 = !DILocation(line: 0, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 1095, column: 11)
!5748 = !DILocation(line: 0, scope: !5723)
!5749 = !DILocation(line: 0, scope: !5731)
!5750 = !DILocation(line: 0, scope: !5722)
!5751 = !DILocation(line: 0, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 1122, column: 4)
!5753 = !DILocation(line: 0, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 1122, column: 4)
!5755 = !DILocation(line: 1092, column: 3, scope: !5725)
!5756 = !DILocation(line: 1094, column: 12, scope: !5724)
!5757 = !DILocation(line: 1095, column: 11, scope: !5724)
!5758 = !DILocation(line: 1096, column: 2, scope: !5747)
!5759 = !DILocation(line: 1100, column: 11, scope: !5723)
!5760 = !DILocation(line: 1100, column: 27, scope: !5723)
!5761 = !DILocation(line: 1100, column: 11, scope: !5724)
!5762 = !DILocation(line: 1106, column: 4, scope: !5722)
!5763 = !DILocation(line: 1109, column: 4, scope: !5722)
!5764 = !DILocation(line: 1110, column: 10, scope: !5722)
!5765 = !DILocation(line: 1112, column: 14, scope: !5722)
!5766 = !DILocation(line: 1113, column: 4, scope: !5722)
!5767 = !DILocation(line: 1114, column: 4, scope: !5722)
!5768 = !DILocation(line: 1122, column: 4, scope: !5752)
!5769 = !DILocation(line: 1122, column: 4, scope: !5754)
!5770 = !DILocation(line: 1123, column: 29, scope: !5754)
!5771 = !DILocation(line: 1123, column: 6, scope: !5754)
!5772 = distinct !{!5772, !5768, !5773}
!5773 = !DILocation(line: 1123, column: 48, scope: !5752)
!5774 = !DILocation(line: 1124, column: 2, scope: !5723)
!5775 = !DILocation(line: 1124, column: 2, scope: !5722)
!5776 = !DILocation(line: 1129, column: 4, scope: !5729)
!5777 = !DILocation(line: 1130, column: 10, scope: !5729)
!5778 = !DILocation(line: 1132, column: 18, scope: !5729)
!5779 = !DILocation(line: 0, scope: !5729)
!5780 = !DILocation(line: 1133, column: 8, scope: !5732)
!5781 = !DILocation(line: 1133, column: 8, scope: !5729)
!5782 = !DILocation(line: 1135, column: 22, scope: !5731)
!5783 = !DILocation(line: 1138, column: 8, scope: !5731)
!5784 = !DILocation(line: 1138, column: 34, scope: !5731)
!5785 = !DILocation(line: 1139, column: 8, scope: !5731)
!5786 = !DILocation(line: 1140, column: 6, scope: !5732)
!5787 = !DILocation(line: 1140, column: 6, scope: !5731)
!5788 = !DILocation(line: 1144, column: 7, scope: !5724)
!5789 = !DILocation(line: 1145, column: 7, scope: !5724)
!5790 = distinct !{!5790, !5745, !5791}
!5791 = !DILocation(line: 1146, column: 5, scope: !5726)
!5792 = !DILocation(line: 1147, column: 1, scope: !5708)
!5793 = distinct !DISubprogram(name: "prune_unused_phi_nodes", scope: !3, file: !3, line: 830, type: !5794, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5796)
!5794 = !DISubroutineType(types: !5795)
!5795 = !{null, !1319, !1319, !1319}
!5796 = !{!5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804, !5805, !5806, !5807, !5808, !5809, !5810, !5811, !5812, !5813, !5814, !5815}
!5797 = !DILocalVariable(name: "phis", arg: 1, scope: !5793, file: !3, line: 830, type: !1319)
!5798 = !DILocalVariable(name: "kills", arg: 2, scope: !5793, file: !3, line: 830, type: !1319)
!5799 = !DILocalVariable(name: "uses", arg: 3, scope: !5793, file: !3, line: 830, type: !1319)
!5800 = !DILocalVariable(name: "worklist", scope: !5793, file: !3, line: 832, type: !2146)
!5801 = !DILocalVariable(name: "bi", scope: !5793, file: !3, line: 833, type: !2774)
!5802 = !DILocalVariable(name: "i", scope: !5793, file: !3, line: 834, type: !7)
!5803 = !DILocalVariable(name: "b", scope: !5793, file: !3, line: 834, type: !7)
!5804 = !DILocalVariable(name: "p", scope: !5793, file: !3, line: 834, type: !7)
!5805 = !DILocalVariable(name: "u", scope: !5793, file: !3, line: 834, type: !7)
!5806 = !DILocalVariable(name: "top", scope: !5793, file: !3, line: 834, type: !7)
!5807 = !DILocalVariable(name: "live_phis", scope: !5793, file: !3, line: 835, type: !1319)
!5808 = !DILocalVariable(name: "def_bb", scope: !5793, file: !3, line: 836, type: !670)
!5809 = !DILocalVariable(name: "use_bb", scope: !5793, file: !3, line: 836, type: !670)
!5810 = !DILocalVariable(name: "e", scope: !5793, file: !3, line: 837, type: !688)
!5811 = !DILocalVariable(name: "ei", scope: !5793, file: !3, line: 838, type: !2784)
!5812 = !DILocalVariable(name: "to_remove", scope: !5793, file: !3, line: 839, type: !1319)
!5813 = !DILocalVariable(name: "defs", scope: !5793, file: !3, line: 840, type: !2139)
!5814 = !DILocalVariable(name: "n_defs", scope: !5793, file: !3, line: 841, type: !7)
!5815 = !DILocalVariable(name: "adef", scope: !5793, file: !3, line: 841, type: !7)
!5816 = !DILocation(line: 0, scope: !5793)
!5817 = !DILocation(line: 832, column: 3, scope: !5793)
!5818 = !DILocation(line: 833, column: 3, scope: !5793)
!5819 = !DILocation(line: 834, column: 3, scope: !5793)
!5820 = !DILocation(line: 837, column: 3, scope: !5793)
!5821 = !DILocation(line: 838, column: 3, scope: !5793)
!5822 = !DILocation(line: 843, column: 7, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 843, column: 7)
!5824 = !DILocation(line: 843, column: 7, scope: !5793)
!5825 = !DILocation(line: 845, column: 7, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 844, column: 5)
!5827 = !DILocation(line: 846, column: 7, scope: !5826)
!5828 = !DILocation(line: 851, column: 15, scope: !5793)
!5829 = !DILocation(line: 852, column: 3, scope: !5793)
!5830 = !DILocation(line: 853, column: 3, scope: !5793)
!5831 = !DILocation(line: 854, column: 7, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 854, column: 7)
!5833 = !DILocation(line: 854, column: 7, scope: !5793)
!5834 = !DILocation(line: 856, column: 7, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 855, column: 5)
!5836 = !DILocation(line: 857, column: 7, scope: !5835)
!5837 = !DILocation(line: 878, column: 3, scope: !5793)
!5838 = !DILocation(line: 879, column: 12, scope: !5793)
!5839 = !DILocation(line: 880, column: 10, scope: !5793)
!5840 = !DILocation(line: 881, column: 11, scope: !5793)
!5841 = !DILocation(line: 881, column: 20, scope: !5793)
!5842 = !DILocation(line: 882, column: 11, scope: !5793)
!5843 = !DILocation(line: 882, column: 19, scope: !5793)
!5844 = !DILocation(line: 884, column: 3, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 884, column: 3)
!5846 = !DILocation(line: 884, column: 3, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 884, column: 3)
!5848 = !DILocation(line: 886, column: 16, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 885, column: 5)
!5850 = !DILocation(line: 887, column: 29, scope: !5849)
!5851 = !DILocation(line: 887, column: 7, scope: !5849)
!5852 = !DILocation(line: 887, column: 18, scope: !5849)
!5853 = !DILocation(line: 887, column: 27, scope: !5849)
!5854 = !DILocation(line: 888, column: 28, scope: !5849)
!5855 = !DILocation(line: 888, column: 18, scope: !5849)
!5856 = !DILocation(line: 888, column: 26, scope: !5849)
!5857 = !DILocation(line: 889, column: 33, scope: !5849)
!5858 = !DILocation(line: 889, column: 17, scope: !5849)
!5859 = !DILocation(line: 889, column: 7, scope: !5849)
!5860 = !DILocation(line: 889, column: 22, scope: !5849)
!5861 = !DILocation(line: 889, column: 31, scope: !5849)
!5862 = !DILocation(line: 890, column: 32, scope: !5849)
!5863 = !DILocation(line: 890, column: 22, scope: !5849)
!5864 = !DILocation(line: 890, column: 30, scope: !5849)
!5865 = !DILocation(line: 891, column: 12, scope: !5849)
!5866 = distinct !{!5866, !5844, !5867}
!5867 = !DILocation(line: 892, column: 5, scope: !5845)
!5868 = !DILocation(line: 893, column: 3, scope: !5793)
!5869 = !DILocation(line: 894, column: 3, scope: !5793)
!5870 = !DILocation(line: 896, column: 21, scope: !5793)
!5871 = !DILocation(line: 896, column: 3, scope: !5793)
!5872 = !DILocation(line: 900, column: 3, scope: !5793)
!5873 = !DILocation(line: 908, column: 14, scope: !5793)
!5874 = !DILocation(line: 908, column: 12, scope: !5793)
!5875 = !DILocation(line: 909, column: 3, scope: !5793)
!5876 = !DILocation(line: 912, column: 8, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 912, column: 3)
!5878 = !DILocation(line: 0, scope: !5877)
!5879 = !DILocation(line: 911, column: 10, scope: !5793)
!5880 = !DILocation(line: 912, column: 17, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 912, column: 3)
!5882 = !DILocation(line: 912, column: 3, scope: !5877)
!5883 = !DILocation(line: 914, column: 11, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 913, column: 5)
!5885 = !DILocation(line: 914, column: 19, scope: !5884)
!5886 = !DILocation(line: 915, column: 13, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 915, column: 11)
!5888 = !DILocation(line: 915, column: 11, scope: !5884)
!5889 = !DILocation(line: 919, column: 4, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 916, column: 2)
!5891 = !DILocation(line: 920, column: 10, scope: !5890)
!5892 = !DILocation(line: 921, column: 4, scope: !5890)
!5893 = !DILocation(line: 921, column: 17, scope: !5890)
!5894 = !DILocation(line: 921, column: 26, scope: !5890)
!5895 = !DILocation(line: 922, column: 32, scope: !5890)
!5896 = !DILocation(line: 922, column: 27, scope: !5890)
!5897 = !DILocation(line: 922, column: 35, scope: !5890)
!5898 = !DILocation(line: 922, column: 43, scope: !5890)
!5899 = !DILocation(line: 922, column: 17, scope: !5890)
!5900 = !DILocation(line: 922, column: 25, scope: !5890)
!5901 = !DILocation(line: 923, column: 2, scope: !5890)
!5902 = !DILocation(line: 928, column: 4, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 925, column: 2)
!5904 = !DILocation(line: 928, column: 17, scope: !5903)
!5905 = !DILocation(line: 928, column: 26, scope: !5903)
!5906 = !DILocation(line: 929, column: 32, scope: !5903)
!5907 = !DILocation(line: 929, column: 27, scope: !5903)
!5908 = !DILocation(line: 929, column: 35, scope: !5903)
!5909 = !DILocation(line: 929, column: 17, scope: !5903)
!5910 = !DILocation(line: 929, column: 25, scope: !5903)
!5911 = !DILocation(line: 930, column: 4, scope: !5903)
!5912 = !DILocation(line: 936, column: 24, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 936, column: 11)
!5914 = !DILocation(line: 936, column: 11, scope: !5913)
!5915 = !DILocation(line: 0, scope: !5887)
!5916 = !DILocation(line: 936, column: 47, scope: !5913)
!5917 = !DILocation(line: 936, column: 35, scope: !5913)
!5918 = !DILocation(line: 936, column: 52, scope: !5913)
!5919 = !DILocation(line: 936, column: 32, scope: !5913)
!5920 = !DILocation(line: 936, column: 11, scope: !5884)
!5921 = !DILocation(line: 937, column: 43, scope: !5913)
!5922 = !DILocation(line: 937, column: 19, scope: !5913)
!5923 = !DILocation(line: 937, column: 28, scope: !5913)
!5924 = !DILocation(line: 937, column: 2, scope: !5913)
!5925 = !DILocation(line: 939, column: 8, scope: !5913)
!5926 = !DILocation(line: 912, column: 26, scope: !5881)
!5927 = !DILocation(line: 912, column: 3, scope: !5881)
!5928 = distinct !{!5928, !5882, !5929}
!5929 = !DILocation(line: 940, column: 5, scope: !5877)
!5930 = !DILocation(line: 941, column: 3, scope: !5793)
!5931 = !DILocation(line: 942, column: 3, scope: !5793)
!5932 = !DILocation(line: 945, column: 15, scope: !5793)
!5933 = !DILocation(line: 946, column: 3, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 946, column: 3)
!5935 = !DILocation(line: 946, column: 3, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 946, column: 3)
!5937 = !DILocation(line: 0, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 978, column: 7)
!5939 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 952, column: 5)
!5940 = !DILocation(line: 0, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 978, column: 7)
!5942 = !DILocation(line: 951, column: 3, scope: !5793)
!5943 = !DILocation(line: 948, column: 7, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 947, column: 5)
!5945 = distinct !{!5945, !5933, !5946}
!5946 = !DILocation(line: 949, column: 5, scope: !5934)
!5947 = !DILocation(line: 951, column: 11, scope: !5793)
!5948 = !DILocation(line: 953, column: 11, scope: !5939)
!5949 = !DILocation(line: 954, column: 13, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 954, column: 11)
!5951 = !DILocation(line: 954, column: 11, scope: !5939)
!5952 = distinct !{!5952, !5942, !5953}
!5953 = !DILocation(line: 994, column: 5, scope: !5793)
!5954 = !DILocation(line: 960, column: 11, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 960, column: 11)
!5956 = !DILocation(line: 960, column: 11, scope: !5939)
!5957 = !DILocation(line: 964, column: 54, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 963, column: 2)
!5959 = !DILocation(line: 964, column: 13, scope: !5958)
!5960 = !DILocation(line: 966, column: 9, scope: !5958)
!5961 = !DILocation(line: 965, column: 8, scope: !5958)
!5962 = !DILocation(line: 967, column: 9, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 967, column: 8)
!5964 = !DILocation(line: 967, column: 8, scope: !5958)
!5965 = !DILocation(line: 0, scope: !5955)
!5966 = !DILocation(line: 972, column: 11, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 972, column: 11)
!5968 = !DILocation(line: 972, column: 11, scope: !5939)
!5969 = !DILocation(line: 976, column: 7, scope: !5939)
!5970 = !DILocation(line: 977, column: 16, scope: !5939)
!5971 = !DILocation(line: 978, column: 7, scope: !5938)
!5972 = !DILocation(line: 978, column: 7, scope: !5941)
!5973 = !DILocation(line: 980, column: 8, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 979, column: 2)
!5975 = !DILocation(line: 980, column: 11, scope: !5974)
!5976 = !DILocation(line: 980, column: 16, scope: !5974)
!5977 = !DILocation(line: 981, column: 8, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 981, column: 8)
!5979 = !DILocation(line: 981, column: 8, scope: !5974)
!5980 = !DILocation(line: 988, column: 8, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 988, column: 8)
!5982 = !DILocation(line: 988, column: 8, scope: !5974)
!5983 = !DILocation(line: 991, column: 4, scope: !5974)
!5984 = !DILocation(line: 992, column: 4, scope: !5974)
!5985 = !DILocation(line: 993, column: 2, scope: !5974)
!5986 = distinct !{!5986, !5971, !5987}
!5987 = !DILocation(line: 993, column: 2, scope: !5938)
!5988 = !DILocation(line: 996, column: 3, scope: !5793)
!5989 = !DILocation(line: 997, column: 3, scope: !5793)
!5990 = !DILocation(line: 998, column: 3, scope: !5793)
!5991 = !DILocation(line: 999, column: 3, scope: !5793)
!5992 = !DILocation(line: 1000, column: 1, scope: !5793)
!5993 = distinct !DISubprogram(name: "mark_block_for_update", scope: !3, file: !3, line: 456, type: !5994, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5996)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{null, !670}
!5996 = !{!5997}
!5997 = !DILocalVariable(name: "bb", arg: 1, scope: !5993, file: !3, line: 456, type: !670)
!5998 = !DILocation(line: 0, scope: !5993)
!5999 = !DILocation(line: 458, column: 3, scope: !5993)
!6000 = !DILocation(line: 459, column: 21, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 459, column: 7)
!6002 = !DILocation(line: 459, column: 43, scope: !6001)
!6003 = !DILocation(line: 459, column: 7, scope: !6001)
!6004 = !DILocation(line: 459, column: 7, scope: !5993)
!6005 = !DILocation(line: 461, column: 19, scope: !5993)
!6006 = !DILocation(line: 461, column: 41, scope: !5993)
!6007 = !DILocation(line: 461, column: 3, scope: !5993)
!6008 = !DILocation(line: 462, column: 3, scope: !5993)
!6009 = !DILocation(line: 463, column: 1, scope: !5993)
!6010 = distinct !DISubprogram(name: "gimple_phi_set_result", scope: !581, file: !581, line: 3089, type: !6011, scopeLine: 3090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6013)
!6011 = !DISubroutineType(types: !6012)
!6012 = !{null, !708, !733}
!6013 = !{!6014, !6015}
!6014 = !DILocalVariable(name: "gs", arg: 1, scope: !6010, file: !581, line: 3089, type: !708)
!6015 = !DILocalVariable(name: "result", arg: 2, scope: !6010, file: !581, line: 3089, type: !733)
!6016 = !DILocation(line: 0, scope: !6010)
!6017 = !DILocation(line: 3092, column: 18, scope: !6010)
!6018 = !DILocation(line: 3092, column: 25, scope: !6010)
!6019 = !DILocation(line: 3093, column: 1, scope: !6010)
!6020 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !581, file: !581, line: 3080, type: !6021, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6023)
!6021 = !DISubroutineType(types: !6022)
!6022 = !{!1347, !708}
!6023 = !{!6024}
!6024 = !DILocalVariable(name: "gs", arg: 1, scope: !6020, file: !581, line: 3080, type: !708)
!6025 = !DILocation(line: 0, scope: !6020)
!6026 = !DILocation(line: 3083, column: 26, scope: !6020)
!6027 = !DILocation(line: 3083, column: 3, scope: !6020)
!6028 = distinct !DISubprogram(name: "gsi_after_labels", scope: !581, file: !581, line: 4510, type: !5082, scopeLine: 4511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6029)
!6029 = !{!6030, !6031}
!6030 = !DILocalVariable(name: "bb", arg: 1, scope: !6028, file: !581, line: 4510, type: !670)
!6031 = !DILocalVariable(name: "gsi", scope: !6028, file: !581, line: 4512, type: !4431)
!6032 = !DILocation(line: 0, scope: !6028)
!6033 = !DILocation(line: 4512, column: 24, scope: !6028)
!6034 = !DILocation(line: 4512, column: 30, scope: !6028)
!6035 = !DILocation(line: 4514, column: 3, scope: !6028)
!6036 = !DILocation(line: 4514, column: 11, scope: !6028)
!6037 = !DILocation(line: 4514, column: 27, scope: !6028)
!6038 = !DILocation(line: 4514, column: 43, scope: !6028)
!6039 = !DILocation(line: 4514, column: 30, scope: !6028)
!6040 = !DILocation(line: 4514, column: 59, scope: !6028)
!6041 = !DILocation(line: 4515, column: 5, scope: !6028)
!6042 = distinct !{!6042, !6035, !6043}
!6043 = !DILocation(line: 4515, column: 19, scope: !6028)
!6044 = !DILocation(line: 4517, column: 3, scope: !6028)
!6045 = distinct !DISubprogram(name: "mark_phi_for_rewrite", scope: !3, file: !3, line: 1035, type: !6046, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6048)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{null, !670, !708}
!6048 = !{!6049, !6050, !6051, !6052, !6053}
!6049 = !DILocalVariable(name: "bb", arg: 1, scope: !6045, file: !3, line: 1035, type: !670)
!6050 = !DILocalVariable(name: "phi", arg: 2, scope: !6045, file: !3, line: 1035, type: !708)
!6051 = !DILocalVariable(name: "phis", scope: !6045, file: !3, line: 1037, type: !2171)
!6052 = !DILocalVariable(name: "i", scope: !6045, file: !3, line: 1038, type: !7)
!6053 = !DILocalVariable(name: "idx", scope: !6045, file: !3, line: 1038, type: !7)
!6054 = !DILocation(line: 0, scope: !6045)
!6055 = !DILocation(line: 1037, column: 3, scope: !6045)
!6056 = !DILocation(line: 1038, column: 25, scope: !6045)
!6057 = !DILocation(line: 1040, column: 7, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 1040, column: 7)
!6059 = !DILocation(line: 1040, column: 7, scope: !6045)
!6060 = !DILocation(line: 1043, column: 3, scope: !6045)
!6061 = !DILocation(line: 1045, column: 8, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 1045, column: 7)
!6063 = !DILocation(line: 1045, column: 7, scope: !6045)
!6064 = !DILocation(line: 1048, column: 3, scope: !6045)
!6065 = !DILocation(line: 1049, column: 3, scope: !6045)
!6066 = !DILocation(line: 1050, column: 12, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 1050, column: 3)
!6068 = !DILocation(line: 1050, column: 8, scope: !6067)
!6069 = !DILocation(line: 0, scope: !6067)
!6070 = !DILocation(line: 1050, column: 56, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 1050, column: 3)
!6072 = !DILocation(line: 1050, column: 3, scope: !6067)
!6073 = !DILocation(line: 1051, column: 5, scope: !6071)
!6074 = !DILocation(line: 1050, column: 65, scope: !6071)
!6075 = !DILocation(line: 1050, column: 3, scope: !6071)
!6076 = distinct !{!6076, !6072, !6077}
!6077 = !DILocation(line: 1051, column: 5, scope: !6067)
!6078 = !DILocation(line: 1053, column: 10, scope: !6045)
!6079 = !DILocation(line: 1053, column: 8, scope: !6045)
!6080 = !DILocation(line: 1054, column: 8, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 1054, column: 7)
!6082 = !DILocation(line: 1054, column: 7, scope: !6045)
!6083 = !DILocation(line: 1055, column: 12, scope: !6081)
!6084 = !DILocation(line: 1055, column: 10, scope: !6081)
!6085 = !DILocation(line: 1055, column: 5, scope: !6081)
!6086 = !DILocation(line: 1057, column: 3, scope: !6045)
!6087 = !DILocation(line: 1058, column: 3, scope: !6045)
!6088 = !DILocation(line: 1059, column: 1, scope: !6045)
!6089 = distinct !DISubprogram(name: "cmp_dfsnum", scope: !3, file: !3, line: 798, type: !1246, scopeLine: 799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6090)
!6090 = !{!6091, !6092, !6093, !6095}
!6091 = !DILocalVariable(name: "a", arg: 1, scope: !6089, file: !3, line: 798, type: !1075)
!6092 = !DILocalVariable(name: "b", arg: 2, scope: !6089, file: !3, line: 798, type: !1075)
!6093 = !DILocalVariable(name: "da", scope: !6089, file: !3, line: 800, type: !6094)
!6094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2144)
!6095 = !DILocalVariable(name: "db", scope: !6089, file: !3, line: 801, type: !6094)
!6096 = !DILocation(line: 0, scope: !6089)
!6097 = !DILocation(line: 803, column: 20, scope: !6089)
!6098 = !DILocation(line: 803, column: 40, scope: !6089)
!6099 = !DILocation(line: 803, column: 28, scope: !6089)
!6100 = !DILocation(line: 803, column: 3, scope: !6089)
!6101 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !2148, file: !2148, line: 32, type: !6102, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6104)
!6102 = !DISubroutineType(types: !6103)
!6103 = !{!2146, !662}
!6104 = !{!6105}
!6105 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6101, file: !2148, line: 32, type: !662)
!6106 = !DILocation(line: 0, scope: !6101)
!6107 = !DILocation(line: 32, column: 1, scope: !6101)
!6108 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !2148, file: !2148, line: 31, type: !6109, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6113)
!6109 = !DISubroutineType(types: !6110)
!6110 = !{!6111, !6112, !662}
!6111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!6112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!6113 = !{!6114, !6115, !6116}
!6114 = !DILocalVariable(name: "vec_", arg: 1, scope: !6108, file: !2148, line: 31, type: !6112)
!6115 = !DILocalVariable(name: "obj_", arg: 2, scope: !6108, file: !2148, line: 31, type: !662)
!6116 = !DILocalVariable(name: "slot_", scope: !6108, file: !2148, line: 31, type: !6111)
!6117 = !DILocation(line: 0, scope: !6108)
!6118 = !DILocation(line: 31, column: 1, scope: !6108)
!6119 = distinct !DISubprogram(name: "VEC_int_base_pop", scope: !2148, file: !2148, line: 31, type: !6120, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6122)
!6120 = !DISubroutineType(types: !6121)
!6121 = !{!662, !6112}
!6122 = !{!6123, !6124}
!6123 = !DILocalVariable(name: "vec_", arg: 1, scope: !6119, file: !2148, line: 31, type: !6112)
!6124 = !DILocalVariable(name: "obj_", scope: !6119, file: !2148, line: 31, type: !662)
!6125 = !DILocation(line: 0, scope: !6119)
!6126 = !DILocation(line: 31, column: 1, scope: !6119)
!6127 = distinct !DISubprogram(name: "VEC_int_base_index", scope: !2148, file: !2148, line: 31, type: !6128, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6132)
!6128 = !DISubroutineType(types: !6129)
!6129 = !{!662, !6130, !7}
!6130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6131, size: 64)
!6131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2152)
!6132 = !{!6133, !6134}
!6133 = !DILocalVariable(name: "vec_", arg: 1, scope: !6127, file: !2148, line: 31, type: !6130)
!6134 = !DILocalVariable(name: "ix_", arg: 2, scope: !6127, file: !2148, line: 31, type: !7)
!6135 = !DILocation(line: 0, scope: !6127)
!6136 = !DILocation(line: 31, column: 1, scope: !6127)
!6137 = distinct !DISubprogram(name: "VEC_int_base_length", scope: !2148, file: !2148, line: 31, type: !6138, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6140)
!6138 = !DISubroutineType(types: !6139)
!6139 = !{!7, !6130}
!6140 = !{!6141}
!6141 = !DILocalVariable(name: "vec_", arg: 1, scope: !6137, file: !2148, line: 31, type: !6130)
!6142 = !DILocation(line: 0, scope: !6137)
!6143 = !DILocation(line: 31, column: 1, scope: !6137)
!6144 = distinct !DISubprogram(name: "VEC_int_heap_safe_push", scope: !2148, file: !2148, line: 32, type: !6145, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6149)
!6145 = !DISubroutineType(types: !6146)
!6146 = !{!6111, !6147, !6148}
!6147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!6148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !662)
!6149 = !{!6150, !6151}
!6150 = !DILocalVariable(name: "vec_", arg: 1, scope: !6144, file: !2148, line: 32, type: !6147)
!6151 = !DILocalVariable(name: "obj_", arg: 2, scope: !6144, file: !2148, line: 32, type: !6148)
!6152 = !DILocation(line: 0, scope: !6144)
!6153 = !DILocation(line: 32, column: 1, scope: !6144)
!6154 = distinct !DISubprogram(name: "find_dfsnum_interval", scope: !3, file: !3, line: 810, type: !6155, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6157)
!6155 = !DISubroutineType(types: !6156)
!6156 = !{!7, !2139, !7, !7}
!6157 = !{!6158, !6159, !6160, !6161, !6162, !6163}
!6158 = !DILocalVariable(name: "defs", arg: 1, scope: !6154, file: !3, line: 810, type: !2139)
!6159 = !DILocalVariable(name: "n", arg: 2, scope: !6154, file: !3, line: 810, type: !7)
!6160 = !DILocalVariable(name: "s", arg: 3, scope: !6154, file: !3, line: 810, type: !7)
!6161 = !DILocalVariable(name: "f", scope: !6154, file: !3, line: 812, type: !7)
!6162 = !DILocalVariable(name: "t", scope: !6154, file: !3, line: 812, type: !7)
!6163 = !DILocalVariable(name: "m", scope: !6154, file: !3, line: 812, type: !7)
!6164 = !DILocation(line: 0, scope: !6154)
!6165 = !DILocation(line: 814, column: 3, scope: !6154)
!6166 = !DILocation(line: 812, column: 19, scope: !6154)
!6167 = !DILocation(line: 814, column: 16, scope: !6154)
!6168 = !DILocation(line: 814, column: 12, scope: !6154)
!6169 = !DILocation(line: 816, column: 14, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 815, column: 5)
!6171 = !DILocation(line: 816, column: 19, scope: !6170)
!6172 = !DILocation(line: 817, column: 11, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 817, column: 11)
!6174 = !DILocation(line: 817, column: 19, scope: !6173)
!6175 = !DILocation(line: 817, column: 27, scope: !6173)
!6176 = distinct !{!6176, !6165, !6177}
!6177 = !DILocation(line: 821, column: 5, scope: !6154)
!6178 = !DILocation(line: 823, column: 10, scope: !6154)
!6179 = !DILocation(line: 823, column: 18, scope: !6154)
!6180 = !DILocation(line: 823, column: 3, scope: !6154)
!6181 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !2148, file: !2148, line: 32, type: !6182, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6184)
!6182 = !DISubroutineType(types: !6183)
!6183 = !{null, !6147}
!6184 = !{!6185}
!6185 = !DILocalVariable(name: "vec_", arg: 1, scope: !6181, file: !2148, line: 32, type: !6147)
!6186 = !DILocation(line: 0, scope: !6181)
!6187 = !DILocation(line: 32, column: 1, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6181, file: !2148, line: 32, column: 1)
!6189 = !DILocation(line: 32, column: 1, scope: !6181)
!6190 = distinct !DISubprogram(name: "VEC_int_heap_reserve", scope: !2148, file: !2148, line: 32, type: !6191, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6193)
!6191 = !DISubroutineType(types: !6192)
!6192 = !{!662, !6147, !662}
!6193 = !{!6194, !6195, !6196}
!6194 = !DILocalVariable(name: "vec_", arg: 1, scope: !6190, file: !2148, line: 32, type: !6147)
!6195 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6190, file: !2148, line: 32, type: !662)
!6196 = !DILocalVariable(name: "extend", scope: !6190, file: !2148, line: 32, type: !662)
!6197 = !DILocation(line: 0, scope: !6190)
!6198 = !DILocation(line: 32, column: 1, scope: !6190)
!6199 = !DILocation(line: 32, column: 1, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6190, file: !2148, line: 32, column: 1)
!6201 = distinct !DISubprogram(name: "VEC_int_base_space", scope: !2148, file: !2148, line: 31, type: !6202, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6204)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{!662, !6112, !662}
!6204 = !{!6205, !6206}
!6205 = !DILocalVariable(name: "vec_", arg: 1, scope: !6201, file: !2148, line: 31, type: !6112)
!6206 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6201, file: !2148, line: 31, type: !662)
!6207 = !DILocation(line: 0, scope: !6201)
!6208 = !DILocation(line: 31, column: 1, scope: !6201)
!6209 = distinct !DISubprogram(name: "initialize_flags_in_bb", scope: !3, file: !3, line: 428, type: !5994, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6210)
!6210 = !{!6211, !6212, !6213, !6214}
!6211 = !DILocalVariable(name: "bb", arg: 1, scope: !6209, file: !3, line: 428, type: !670)
!6212 = !DILocalVariable(name: "stmt", scope: !6209, file: !3, line: 430, type: !708)
!6213 = !DILocalVariable(name: "gsi", scope: !6209, file: !3, line: 431, type: !4431)
!6214 = !DILocalVariable(name: "phi", scope: !6215, file: !3, line: 435, type: !708)
!6215 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 434, column: 5)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 433, column: 3)
!6217 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 433, column: 3)
!6218 = !DILocation(line: 0, scope: !6209)
!6219 = !DILocation(line: 431, column: 3, scope: !6209)
!6220 = !DILocation(line: 433, column: 14, scope: !6217)
!6221 = !DILocation(line: 433, column: 8, scope: !6217)
!6222 = !DILocation(line: 433, column: 36, scope: !6216)
!6223 = !DILocation(line: 433, column: 35, scope: !6216)
!6224 = !DILocation(line: 433, column: 3, scope: !6217)
!6225 = !DILocation(line: 435, column: 20, scope: !6215)
!6226 = !DILocation(line: 0, scope: !6215)
!6227 = !DILocation(line: 436, column: 7, scope: !6215)
!6228 = !DILocation(line: 437, column: 7, scope: !6215)
!6229 = !DILocation(line: 433, column: 53, scope: !6216)
!6230 = !DILocation(line: 433, column: 3, scope: !6216)
!6231 = distinct !{!6231, !6224, !6232}
!6232 = !DILocation(line: 438, column: 5, scope: !6217)
!6233 = !DILocation(line: 440, column: 14, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 440, column: 3)
!6235 = !DILocation(line: 440, column: 8, scope: !6234)
!6236 = !DILocation(line: 440, column: 34, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 440, column: 3)
!6238 = !DILocation(line: 440, column: 33, scope: !6237)
!6239 = !DILocation(line: 440, column: 3, scope: !6234)
!6240 = !DILocation(line: 442, column: 14, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 441, column: 5)
!6242 = !DILocation(line: 447, column: 7, scope: !6241)
!6243 = !DILocation(line: 448, column: 7, scope: !6241)
!6244 = !DILocation(line: 449, column: 7, scope: !6241)
!6245 = !DILocation(line: 440, column: 51, scope: !6237)
!6246 = !DILocation(line: 440, column: 3, scope: !6237)
!6247 = distinct !{!6247, !6239, !6248}
!6248 = !DILocation(line: 450, column: 5, scope: !6234)
!6249 = !DILocation(line: 451, column: 1, scope: !6209)
!6250 = distinct !DISubprogram(name: "gimple_modified_p", scope: !581, file: !581, line: 1425, type: !5248, scopeLine: 1426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6251)
!6251 = !{!6252}
!6252 = !DILocalVariable(name: "g", arg: 1, scope: !6250, file: !581, line: 1425, type: !3782)
!6253 = !DILocation(line: 0, scope: !6250)
!6254 = !DILocation(line: 1427, column: 11, scope: !6250)
!6255 = !DILocation(line: 1427, column: 10, scope: !6250)
!6256 = !DILocation(line: 1427, column: 50, scope: !6250)
!6257 = !DILocation(line: 1427, column: 33, scope: !6250)
!6258 = !DILocation(line: 1427, column: 3, scope: !6250)
!6259 = distinct !DISubprogram(name: "VEC_gimple_vec_heap_reserve", scope: !581, file: !581, line: 49, type: !6260, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6263)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!662, !6262, !662}
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!6263 = !{!6264, !6265, !6266}
!6264 = !DILocalVariable(name: "vec_", arg: 1, scope: !6259, file: !581, line: 49, type: !6262)
!6265 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6259, file: !581, line: 49, type: !662)
!6266 = !DILocalVariable(name: "extend", scope: !6259, file: !581, line: 49, type: !662)
!6267 = !DILocation(line: 0, scope: !6259)
!6268 = !DILocation(line: 49, column: 1, scope: !6259)
!6269 = !DILocation(line: 49, column: 1, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6259, file: !581, line: 49, column: 1)
!6271 = distinct !DISubprogram(name: "VEC_gimple_vec_base_length", scope: !581, file: !581, line: 48, type: !6272, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6274)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!7, !3707}
!6274 = !{!6275}
!6275 = !DILocalVariable(name: "vec_", arg: 1, scope: !6271, file: !581, line: 48, type: !3707)
!6276 = !DILocation(line: 0, scope: !6271)
!6277 = !DILocation(line: 48, column: 1, scope: !6271)
!6278 = distinct !DISubprogram(name: "VEC_gimple_vec_base_quick_push", scope: !581, file: !581, line: 48, type: !6279, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6282)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{!6281, !3727, !2171}
!6281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!6282 = !{!6283, !6284, !6285}
!6283 = !DILocalVariable(name: "vec_", arg: 1, scope: !6278, file: !581, line: 48, type: !3727)
!6284 = !DILocalVariable(name: "obj_", arg: 2, scope: !6278, file: !581, line: 48, type: !2171)
!6285 = !DILocalVariable(name: "slot_", scope: !6278, file: !581, line: 48, type: !6281)
!6286 = !DILocation(line: 0, scope: !6278)
!6287 = !DILocation(line: 48, column: 1, scope: !6278)
!6288 = distinct !DISubprogram(name: "VEC_gimple_heap_alloc", scope: !581, file: !581, line: 34, type: !6289, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6291)
!6289 = !DISubroutineType(types: !6290)
!6290 = !{!2172, !662}
!6291 = !{!6292}
!6292 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6288, file: !581, line: 34, type: !662)
!6293 = !DILocation(line: 0, scope: !6288)
!6294 = !DILocation(line: 34, column: 1, scope: !6288)
!6295 = distinct !DISubprogram(name: "VEC_gimple_heap_safe_push", scope: !581, file: !581, line: 34, type: !6296, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6299)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!6298, !3717, !708}
!6298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!6299 = !{!6300, !6301}
!6300 = !DILocalVariable(name: "vec_", arg: 1, scope: !6295, file: !581, line: 34, type: !3717)
!6301 = !DILocalVariable(name: "obj_", arg: 2, scope: !6295, file: !581, line: 34, type: !708)
!6302 = !DILocation(line: 0, scope: !6295)
!6303 = !DILocation(line: 34, column: 1, scope: !6295)
!6304 = distinct !DISubprogram(name: "VEC_gimple_vec_base_space", scope: !581, file: !581, line: 48, type: !6305, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6307)
!6305 = !DISubroutineType(types: !6306)
!6306 = !{!662, !3727, !662}
!6307 = !{!6308, !6309}
!6308 = !DILocalVariable(name: "vec_", arg: 1, scope: !6304, file: !581, line: 48, type: !3727)
!6309 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6304, file: !581, line: 48, type: !662)
!6310 = !DILocation(line: 0, scope: !6304)
!6311 = !DILocation(line: 48, column: 1, scope: !6304)
!6312 = distinct !DISubprogram(name: "VEC_gimple_heap_reserve", scope: !581, file: !581, line: 34, type: !6313, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6315)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{!662, !3717, !662}
!6315 = !{!6316, !6317, !6318}
!6316 = !DILocalVariable(name: "vec_", arg: 1, scope: !6312, file: !581, line: 34, type: !3717)
!6317 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6312, file: !581, line: 34, type: !662)
!6318 = !DILocalVariable(name: "extend", scope: !6312, file: !581, line: 34, type: !662)
!6319 = !DILocation(line: 0, scope: !6312)
!6320 = !DILocation(line: 34, column: 1, scope: !6312)
!6321 = !DILocation(line: 34, column: 1, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6312, file: !581, line: 34, column: 1)
!6323 = distinct !DISubprogram(name: "VEC_gimple_base_quick_push", scope: !581, file: !581, line: 33, type: !6324, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6327)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{!6298, !6326, !708}
!6326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!6327 = !{!6328, !6329, !6330}
!6328 = !DILocalVariable(name: "vec_", arg: 1, scope: !6323, file: !581, line: 33, type: !6326)
!6329 = !DILocalVariable(name: "obj_", arg: 2, scope: !6323, file: !581, line: 33, type: !708)
!6330 = !DILocalVariable(name: "slot_", scope: !6323, file: !581, line: 33, type: !6298)
!6331 = !DILocation(line: 0, scope: !6323)
!6332 = !DILocation(line: 33, column: 1, scope: !6323)
!6333 = distinct !DISubprogram(name: "VEC_gimple_base_space", scope: !581, file: !581, line: 33, type: !6334, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6336)
!6334 = !DISubroutineType(types: !6335)
!6335 = !{!662, !6326, !662}
!6336 = !{!6337, !6338}
!6337 = !DILocalVariable(name: "vec_", arg: 1, scope: !6333, file: !581, line: 33, type: !6326)
!6338 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6333, file: !581, line: 33, type: !662)
!6339 = !DILocation(line: 0, scope: !6333)
!6340 = !DILocation(line: 33, column: 1, scope: !6333)
!6341 = distinct !DISubprogram(name: "repl_map_hash", scope: !3, file: !3, line: 598, type: !1240, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6342)
!6342 = !{!6343}
!6343 = !DILocalVariable(name: "p", arg: 1, scope: !6341, file: !3, line: 598, type: !1075)
!6344 = !DILocation(line: 0, scope: !6341)
!6345 = !DILocation(line: 600, column: 10, scope: !6341)
!6346 = !DILocation(line: 600, column: 75, scope: !6341)
!6347 = !DILocation(line: 600, column: 3, scope: !6341)
!6348 = distinct !DISubprogram(name: "repl_map_eq", scope: !3, file: !3, line: 604, type: !1246, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6349)
!6349 = !{!6350, !6351}
!6350 = !DILocalVariable(name: "p1", arg: 1, scope: !6348, file: !3, line: 604, type: !1075)
!6351 = !DILocalVariable(name: "p2", arg: 2, scope: !6348, file: !3, line: 604, type: !1075)
!6352 = !DILocation(line: 0, scope: !6348)
!6353 = !DILocation(line: 606, column: 43, scope: !6348)
!6354 = !DILocation(line: 607, column: 39, scope: !6348)
!6355 = !DILocation(line: 607, column: 3, scope: !6348)
!6356 = !DILocation(line: 606, column: 3, scope: !6348)
!6357 = distinct !DISubprogram(name: "repl_map_free", scope: !3, file: !3, line: 611, type: !1251, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6358)
!6358 = !{!6359}
!6359 = !DILocalVariable(name: "p", arg: 1, scope: !6357, file: !3, line: 611, type: !666)
!6360 = !DILocation(line: 0, scope: !6357)
!6361 = !DILocation(line: 613, column: 3, scope: !6357)
!6362 = !DILocation(line: 614, column: 3, scope: !6357)
!6363 = !DILocation(line: 615, column: 1, scope: !6357)
!6364 = distinct !DISubprogram(name: "add_to_repl_tbl", scope: !3, file: !3, line: 640, type: !2746, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6365)
!6365 = !{!6366, !6367, !6368, !6369, !6370}
!6366 = !DILocalVariable(name: "new_tree", arg: 1, scope: !6364, file: !3, line: 640, type: !733)
!6367 = !DILocalVariable(name: "old", arg: 2, scope: !6364, file: !3, line: 640, type: !733)
!6368 = !DILocalVariable(name: "m", scope: !6364, file: !3, line: 642, type: !2178)
!6369 = !DILocalVariable(name: "mp", scope: !6364, file: !3, line: 642, type: !2177)
!6370 = !DILocalVariable(name: "slot", scope: !6364, file: !3, line: 643, type: !1254)
!6371 = !DILocation(line: 0, scope: !6364)
!6372 = !DILocation(line: 642, column: 3, scope: !6364)
!6373 = !DILocation(line: 645, column: 5, scope: !6364)
!6374 = !DILocation(line: 645, column: 10, scope: !6364)
!6375 = !DILocation(line: 646, column: 26, scope: !6364)
!6376 = !DILocation(line: 646, column: 10, scope: !6364)
!6377 = !DILocation(line: 647, column: 7, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 647, column: 7)
!6379 = !DILocation(line: 647, column: 13, scope: !6378)
!6380 = !DILocation(line: 647, column: 7, scope: !6364)
!6381 = !DILocation(line: 649, column: 12, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 648, column: 5)
!6383 = !DILocation(line: 650, column: 11, scope: !6382)
!6384 = !DILocation(line: 650, column: 16, scope: !6382)
!6385 = !DILocation(line: 651, column: 17, scope: !6382)
!6386 = !DILocation(line: 651, column: 11, scope: !6382)
!6387 = !DILocation(line: 651, column: 15, scope: !6382)
!6388 = !DILocation(line: 652, column: 13, scope: !6382)
!6389 = !DILocation(line: 653, column: 5, scope: !6382)
!6390 = !DILocation(line: 657, column: 23, scope: !6364)
!6391 = !DILocation(line: 657, column: 28, scope: !6364)
!6392 = !DILocation(line: 657, column: 3, scope: !6364)
!6393 = !DILocation(line: 658, column: 1, scope: !6364)
!6394 = distinct !DISubprogram(name: "RESET_BIT", scope: !2227, file: !2227, line: 82, type: !4659, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6395)
!6395 = !{!6396, !6397, !6398}
!6396 = !DILocalVariable(name: "map", arg: 1, scope: !6394, file: !2227, line: 82, type: !2226)
!6397 = !DILocalVariable(name: "bitno", arg: 2, scope: !6394, file: !2227, line: 82, type: !7)
!6398 = !DILocalVariable(name: "oldbit", scope: !6399, file: !2227, line: 86, type: !661)
!6399 = distinct !DILexicalBlock(scope: !6400, file: !2227, line: 85, column: 5)
!6400 = distinct !DILexicalBlock(scope: !6394, file: !2227, line: 84, column: 7)
!6401 = !DILocation(line: 0, scope: !6394)
!6402 = !DILocation(line: 84, column: 12, scope: !6400)
!6403 = !DILocation(line: 84, column: 7, scope: !6400)
!6404 = !DILocation(line: 84, column: 7, scope: !6394)
!6405 = !DILocation(line: 92, column: 42, scope: !6394)
!6406 = !DILocation(line: 92, column: 31, scope: !6394)
!6407 = !DILocation(line: 91, column: 19, scope: !6394)
!6408 = !DILocation(line: 91, column: 3, scope: !6394)
!6409 = !DILocation(line: 87, column: 16, scope: !6399)
!6410 = !DILocation(line: 88, column: 11, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6399, file: !2227, line: 88, column: 11)
!6412 = !DILocation(line: 88, column: 11, scope: !6399)
!6413 = !DILocation(line: 89, column: 2, scope: !6411)
!6414 = !DILocation(line: 89, column: 41, scope: !6411)
!6415 = !DILocation(line: 92, column: 8, scope: !6394)
!6416 = !DILocation(line: 92, column: 5, scope: !6394)
!6417 = !DILocation(line: 93, column: 1, scope: !6394)
!6418 = distinct !DISubprogram(name: "prepare_def_site_for", scope: !3, file: !3, line: 2612, type: !6419, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6421)
!6419 = !DISubroutineType(types: !6420)
!6420 = !{null, !733, !661}
!6421 = !{!6422, !6423, !6424, !6425}
!6422 = !DILocalVariable(name: "name", arg: 1, scope: !6418, file: !3, line: 2612, type: !733)
!6423 = !DILocalVariable(name: "insert_phi_p", arg: 2, scope: !6418, file: !3, line: 2612, type: !661)
!6424 = !DILocalVariable(name: "stmt", scope: !6418, file: !3, line: 2614, type: !708)
!6425 = !DILocalVariable(name: "bb", scope: !6418, file: !3, line: 2615, type: !670)
!6426 = !DILocation(line: 0, scope: !6418)
!6427 = !DILocation(line: 2617, column: 3, scope: !6418)
!6428 = !DILocation(line: 2620, column: 10, scope: !6418)
!6429 = !DILocation(line: 2621, column: 8, scope: !6418)
!6430 = !DILocation(line: 2622, column: 7, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 2622, column: 7)
!6432 = !DILocation(line: 2622, column: 7, scope: !6418)
!6433 = !DILocation(line: 2624, column: 7, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 2623, column: 5)
!6435 = !DILocation(line: 2625, column: 7, scope: !6434)
!6436 = !DILocation(line: 2626, column: 7, scope: !6434)
!6437 = !DILocation(line: 2627, column: 5, scope: !6434)
!6438 = !DILocation(line: 2628, column: 1, scope: !6418)
!6439 = distinct !DISubprogram(name: "prepare_use_sites_for", scope: !3, file: !3, line: 2581, type: !6419, scopeLine: 2582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6440)
!6440 = !{!6441, !6442, !6443, !6444, !6452, !6456, !6457, !6460}
!6441 = !DILocalVariable(name: "name", arg: 1, scope: !6439, file: !3, line: 2581, type: !733)
!6442 = !DILocalVariable(name: "insert_phi_p", arg: 2, scope: !6439, file: !3, line: 2581, type: !661)
!6443 = !DILocalVariable(name: "use_p", scope: !6439, file: !3, line: 2583, type: !2136)
!6444 = !DILocalVariable(name: "iter", scope: !6439, file: !3, line: 2584, type: !6445)
!6445 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !586, line: 249, baseType: !6446)
!6446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !586, line: 238, size: 448, elements: !6447)
!6447 = !{!6448, !6449, !6450, !6451}
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !6446, file: !586, line: 241, baseType: !2137, size: 64)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !6446, file: !586, line: 243, baseType: !2137, size: 64, offset: 64)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !6446, file: !586, line: 245, baseType: !2138, size: 256, offset: 128)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !6446, file: !586, line: 248, baseType: !2137, size: 64, offset: 384)
!6452 = !DILocalVariable(name: "stmt", scope: !6453, file: !3, line: 2588, type: !708)
!6453 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 2587, column: 5)
!6454 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 2586, column: 3)
!6455 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 2586, column: 3)
!6456 = !DILocalVariable(name: "bb", scope: !6453, file: !3, line: 2589, type: !670)
!6457 = !DILocalVariable(name: "ix", scope: !6458, file: !3, line: 2593, type: !662)
!6458 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 2592, column: 2)
!6459 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 2591, column: 11)
!6460 = !DILocalVariable(name: "e", scope: !6458, file: !3, line: 2594, type: !688)
!6461 = !DILocation(line: 0, scope: !6439)
!6462 = !DILocation(line: 2584, column: 3, scope: !6439)
!6463 = !DILocation(line: 2586, column: 3, scope: !6455)
!6464 = !DILocation(line: 0, scope: !6455)
!6465 = !DILocation(line: 2586, column: 3, scope: !6454)
!6466 = !DILocation(line: 2588, column: 21, scope: !6453)
!6467 = !DILocation(line: 0, scope: !6453)
!6468 = !DILocation(line: 2589, column: 24, scope: !6453)
!6469 = !DILocation(line: 2591, column: 11, scope: !6459)
!6470 = !DILocation(line: 2591, column: 30, scope: !6459)
!6471 = !DILocation(line: 2591, column: 11, scope: !6453)
!6472 = !DILocation(line: 2593, column: 13, scope: !6458)
!6473 = !DILocation(line: 0, scope: !6458)
!6474 = !DILocation(line: 2594, column: 40, scope: !6458)
!6475 = !DILocation(line: 2594, column: 13, scope: !6458)
!6476 = !DILocation(line: 2595, column: 41, scope: !6458)
!6477 = !DILocation(line: 2595, column: 4, scope: !6458)
!6478 = !DILocation(line: 2596, column: 2, scope: !6458)
!6479 = !DILocation(line: 2601, column: 4, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 2598, column: 2)
!6481 = distinct !{!6481, !6463, !6482}
!6482 = !DILocation(line: 2603, column: 5, scope: !6455)
!6483 = !DILocation(line: 2604, column: 1, scope: !6439)
!6484 = distinct !DISubprogram(name: "mark_def_interesting", scope: !3, file: !3, line: 2429, type: !6485, scopeLine: 2430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6487)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{null, !733, !708, !670, !661}
!6487 = !{!6488, !6489, !6490, !6491, !6492, !6495, !6498, !6499}
!6488 = !DILocalVariable(name: "var", arg: 1, scope: !6484, file: !3, line: 2429, type: !733)
!6489 = !DILocalVariable(name: "stmt", arg: 2, scope: !6484, file: !3, line: 2429, type: !708)
!6490 = !DILocalVariable(name: "bb", arg: 3, scope: !6484, file: !3, line: 2429, type: !670)
!6491 = !DILocalVariable(name: "insert_phi_p", arg: 4, scope: !6484, file: !3, line: 2429, type: !661)
!6492 = !DILocalVariable(name: "is_phi_p", scope: !6493, file: !3, line: 2436, type: !661)
!6493 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 2435, column: 5)
!6494 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 2434, column: 7)
!6495 = !DILocalVariable(name: "bi", scope: !6496, file: !3, line: 2444, type: !2774)
!6496 = distinct !DILexicalBlock(scope: !6497, file: !3, line: 2443, column: 2)
!6497 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 2442, column: 11)
!6498 = !DILocalVariable(name: "i", scope: !6496, file: !3, line: 2445, type: !7)
!6499 = !DILocalVariable(name: "set", scope: !6496, file: !3, line: 2446, type: !1319)
!6500 = !DILocation(line: 0, scope: !6484)
!6501 = !DILocation(line: 2431, column: 3, scope: !6484)
!6502 = !DILocation(line: 2432, column: 3, scope: !6484)
!6503 = !DILocation(line: 2434, column: 7, scope: !6494)
!6504 = !DILocation(line: 2434, column: 7, scope: !6484)
!6505 = !DILocation(line: 2436, column: 23, scope: !6493)
!6506 = !DILocation(line: 2436, column: 42, scope: !6493)
!6507 = !DILocation(line: 0, scope: !6493)
!6508 = !DILocation(line: 2438, column: 7, scope: !6493)
!6509 = !DILocation(line: 2442, column: 11, scope: !6497)
!6510 = !DILocation(line: 2442, column: 27, scope: !6497)
!6511 = !DILocation(line: 2442, column: 39, scope: !6497)
!6512 = !DILocation(line: 2442, column: 42, scope: !6497)
!6513 = !DILocation(line: 2442, column: 11, scope: !6493)
!6514 = !DILocation(line: 2444, column: 4, scope: !6496)
!6515 = !DILocation(line: 2445, column: 4, scope: !6496)
!6516 = !DILocation(line: 2446, column: 17, scope: !6496)
!6517 = !DILocation(line: 0, scope: !6496)
!6518 = !DILocation(line: 2447, column: 8, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 2447, column: 8)
!6520 = !DILocation(line: 2447, column: 8, scope: !6496)
!6521 = !DILocation(line: 2448, column: 6, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 2448, column: 6)
!6523 = !DILocation(line: 2448, column: 6, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 2448, column: 6)
!6525 = !DILocation(line: 2449, column: 23, scope: !6524)
!6526 = !DILocation(line: 2449, column: 8, scope: !6524)
!6527 = distinct !{!6527, !6521, !6528}
!6528 = !DILocation(line: 2449, column: 49, scope: !6522)
!6529 = !DILocation(line: 2450, column: 2, scope: !6497)
!6530 = !DILocation(line: 2450, column: 2, scope: !6496)
!6531 = !DILocation(line: 2452, column: 1, scope: !6484)
!6532 = distinct !DISubprogram(name: "first_readonly_imm_use", scope: !2728, file: !2728, line: 292, type: !6533, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6536)
!6533 = !DISubroutineType(types: !6534)
!6534 = !{!2136, !6535, !733}
!6535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6445, size: 64)
!6536 = !{!6537, !6538}
!6537 = !DILocalVariable(name: "imm", arg: 1, scope: !6532, file: !2728, line: 292, type: !6535)
!6538 = !DILocalVariable(name: "var", arg: 2, scope: !6532, file: !2728, line: 292, type: !733)
!6539 = !DILocation(line: 0, scope: !6532)
!6540 = !DILocation(line: 294, column: 18, scope: !6532)
!6541 = !DILocation(line: 294, column: 8, scope: !6532)
!6542 = !DILocation(line: 294, column: 14, scope: !6532)
!6543 = !DILocation(line: 295, column: 30, scope: !6532)
!6544 = !DILocation(line: 295, column: 16, scope: !6532)
!6545 = !DILocation(line: 299, column: 7, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6532, file: !2728, line: 299, column: 7)
!6547 = !DILocation(line: 299, column: 7, scope: !6532)
!6548 = !DILocation(line: 301, column: 15, scope: !6532)
!6549 = !DILocation(line: 301, column: 3, scope: !6532)
!6550 = !DILocation(line: 302, column: 1, scope: !6532)
!6551 = distinct !DISubprogram(name: "end_readonly_imm_use_p", scope: !2728, file: !2728, line: 285, type: !6552, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6556)
!6552 = !DISubroutineType(types: !6553)
!6553 = !{!661, !6554}
!6554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6555, size: 64)
!6555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6445)
!6556 = !{!6557}
!6557 = !DILocalVariable(name: "imm", arg: 1, scope: !6551, file: !2728, line: 285, type: !6554)
!6558 = !DILocation(line: 0, scope: !6551)
!6559 = !DILocation(line: 287, column: 16, scope: !6551)
!6560 = !DILocation(line: 287, column: 32, scope: !6551)
!6561 = !DILocation(line: 287, column: 24, scope: !6551)
!6562 = !DILocation(line: 287, column: 10, scope: !6551)
!6563 = !DILocation(line: 287, column: 3, scope: !6551)
!6564 = distinct !DISubprogram(name: "phi_arg_index_from_use", scope: !2728, file: !2728, line: 533, type: !6565, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6567)
!6565 = !DISubroutineType(types: !6566)
!6566 = !{!662, !2136}
!6567 = !{!6568, !6569, !6570, !6571, !6572}
!6568 = !DILocalVariable(name: "use", arg: 1, scope: !6564, file: !2728, line: 533, type: !2136)
!6569 = !DILocalVariable(name: "element", scope: !6564, file: !2728, line: 535, type: !2186)
!6570 = !DILocalVariable(name: "root", scope: !6564, file: !2728, line: 535, type: !2186)
!6571 = !DILocalVariable(name: "index", scope: !6564, file: !2728, line: 536, type: !1256)
!6572 = !DILocalVariable(name: "phi", scope: !6564, file: !2728, line: 537, type: !708)
!6573 = !DILocation(line: 0, scope: !6564)
!6574 = !DILocation(line: 543, column: 9, scope: !6564)
!6575 = !DILocation(line: 544, column: 3, scope: !6564)
!6576 = !DILocation(line: 547, column: 10, scope: !6564)
!6577 = !DILocation(line: 548, column: 19, scope: !6564)
!6578 = !DILocation(line: 558, column: 9, scope: !6564)
!6579 = !DILocation(line: 558, column: 2, scope: !6564)
!6580 = distinct !DISubprogram(name: "gimple_phi_arg_edge", scope: !2728, file: !2728, line: 467, type: !6581, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6583)
!6581 = !DISubroutineType(types: !6582)
!6582 = !{!688, !708, !1256}
!6583 = !{!6584, !6585}
!6584 = !DILocalVariable(name: "gs", arg: 1, scope: !6580, file: !2728, line: 467, type: !708)
!6585 = !DILocalVariable(name: "i", arg: 2, scope: !6580, file: !2728, line: 467, type: !1256)
!6586 = !DILocation(line: 0, scope: !6580)
!6587 = !DILocation(line: 469, column: 10, scope: !6580)
!6588 = !DILocation(line: 469, column: 3, scope: !6580)
!6589 = distinct !DISubprogram(name: "mark_use_interesting", scope: !3, file: !3, line: 2460, type: !6485, scopeLine: 2461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6590)
!6590 = !{!6591, !6592, !6593, !6594, !6595, !6596}
!6591 = !DILocalVariable(name: "var", arg: 1, scope: !6589, file: !3, line: 2460, type: !733)
!6592 = !DILocalVariable(name: "stmt", arg: 2, scope: !6589, file: !3, line: 2460, type: !708)
!6593 = !DILocalVariable(name: "bb", arg: 3, scope: !6589, file: !3, line: 2460, type: !670)
!6594 = !DILocalVariable(name: "insert_phi_p", arg: 4, scope: !6589, file: !3, line: 2460, type: !661)
!6595 = !DILocalVariable(name: "def_bb", scope: !6589, file: !3, line: 2462, type: !670)
!6596 = !DILocalVariable(name: "db_p", scope: !6597, file: !3, line: 2484, type: !2125)
!6597 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 2483, column: 5)
!6598 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 2482, column: 7)
!6599 = !DILocation(line: 0, scope: !6589)
!6600 = !DILocation(line: 2462, column: 24, scope: !6589)
!6601 = !DILocation(line: 2464, column: 3, scope: !6589)
!6602 = !DILocation(line: 2465, column: 3, scope: !6589)
!6603 = !DILocation(line: 2467, column: 7, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 2467, column: 7)
!6605 = !DILocation(line: 2467, column: 26, scope: !6604)
!6606 = !DILocation(line: 2467, column: 7, scope: !6589)
!6607 = !DILocation(line: 2468, column: 5, scope: !6604)
!6608 = !DILocation(line: 2482, column: 7, scope: !6598)
!6609 = !DILocation(line: 2482, column: 7, scope: !6589)
!6610 = !DILocation(line: 2471, column: 7, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2470, column: 5)
!6612 = !DILocation(line: 2473, column: 11, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 2473, column: 11)
!6614 = !DILocation(line: 2473, column: 11, scope: !6611)
!6615 = !DILocation(line: 2484, column: 35, scope: !6597)
!6616 = !DILocation(line: 0, scope: !6597)
!6617 = !DILocation(line: 2485, column: 32, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 2485, column: 11)
!6619 = !DILocation(line: 2485, column: 48, scope: !6618)
!6620 = !DILocation(line: 2485, column: 12, scope: !6618)
!6621 = !DILocation(line: 2485, column: 11, scope: !6597)
!6622 = !DILocation(line: 2486, column: 2, scope: !6618)
!6623 = !DILocation(line: 2488, column: 1, scope: !6589)
!6624 = distinct !DISubprogram(name: "next_readonly_imm_use", scope: !2728, file: !2728, line: 306, type: !6625, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6627)
!6625 = !DISubroutineType(types: !6626)
!6626 = !{!2136, !6535}
!6627 = !{!6628, !6629}
!6628 = !DILocalVariable(name: "imm", arg: 1, scope: !6624, file: !2728, line: 306, type: !6535)
!6629 = !DILocalVariable(name: "old", scope: !6624, file: !2728, line: 308, type: !2136)
!6630 = !DILocation(line: 0, scope: !6624)
!6631 = !DILocation(line: 308, column: 28, scope: !6624)
!6632 = !DILocation(line: 319, column: 23, scope: !6624)
!6633 = !DILocation(line: 319, column: 16, scope: !6624)
!6634 = !DILocation(line: 320, column: 7, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6624, file: !2728, line: 320, column: 7)
!6636 = !DILocation(line: 320, column: 7, scope: !6624)
!6637 = !DILocation(line: 322, column: 15, scope: !6624)
!6638 = !DILocation(line: 322, column: 3, scope: !6624)
!6639 = !DILocation(line: 323, column: 1, scope: !6624)
!6640 = distinct !DISubprogram(name: "gimple_phi_result", scope: !581, file: !581, line: 3071, type: !5535, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6641)
!6641 = !{!6642}
!6642 = !DILocalVariable(name: "gs", arg: 1, scope: !6640, file: !581, line: 3071, type: !3782)
!6643 = !DILocation(line: 0, scope: !6640)
!6644 = !DILocation(line: 3074, column: 25, scope: !6640)
!6645 = !DILocation(line: 3074, column: 3, scope: !6640)
!6646 = distinct !DISubprogram(name: "symbol_marked_for_renaming", scope: !3, file: !3, line: 565, type: !3941, scopeLine: 566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6647)
!6647 = !{!6648}
!6648 = !DILocalVariable(name: "sym", arg: 1, scope: !6646, file: !3, line: 565, type: !733)
!6649 = !DILocation(line: 0, scope: !6646)
!6650 = !DILocation(line: 567, column: 24, scope: !6646)
!6651 = !DILocation(line: 567, column: 47, scope: !6646)
!6652 = !DILocation(line: 567, column: 10, scope: !6646)
!6653 = !DILocation(line: 567, column: 3, scope: !6646)
!6654 = distinct !DISubprogram(name: "op_iter_init_def", scope: !2728, file: !2728, line: 780, type: !6655, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6657)
!6655 = !DISubroutineType(types: !6656)
!6656 = !{!2187, !5259, !708, !662}
!6657 = !{!6658, !6659, !6660}
!6658 = !DILocalVariable(name: "ptr", arg: 1, scope: !6654, file: !2728, line: 780, type: !5259)
!6659 = !DILocalVariable(name: "stmt", arg: 2, scope: !6654, file: !2728, line: 780, type: !708)
!6660 = !DILocalVariable(name: "flags", arg: 3, scope: !6654, file: !2728, line: 780, type: !662)
!6661 = !DILocation(line: 0, scope: !6654)
!6662 = !DILocation(line: 782, column: 3, scope: !6654)
!6663 = !DILocation(line: 784, column: 3, scope: !6654)
!6664 = !DILocation(line: 785, column: 8, scope: !6654)
!6665 = !DILocation(line: 785, column: 18, scope: !6654)
!6666 = !DILocation(line: 786, column: 10, scope: !6654)
!6667 = !DILocation(line: 786, column: 3, scope: !6654)
!6668 = distinct !DISubprogram(name: "op_iter_next_def", scope: !2728, file: !2728, line: 681, type: !6669, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6671)
!6669 = !DISubroutineType(types: !6670)
!6670 = !{!2187, !5259}
!6671 = !{!6672, !6673}
!6672 = !DILocalVariable(name: "ptr", arg: 1, scope: !6668, file: !2728, line: 681, type: !5259)
!6673 = !DILocalVariable(name: "def_p", scope: !6668, file: !2728, line: 683, type: !2187)
!6674 = !DILocation(line: 0, scope: !6668)
!6675 = !DILocation(line: 687, column: 12, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6668, file: !2728, line: 687, column: 7)
!6677 = !DILocation(line: 687, column: 7, scope: !6676)
!6678 = !DILocation(line: 687, column: 7, scope: !6668)
!6679 = !DILocation(line: 689, column: 15, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6676, file: !2728, line: 688, column: 5)
!6681 = !DILocation(line: 690, column: 30, scope: !6680)
!6682 = !DILocation(line: 690, column: 17, scope: !6680)
!6683 = !DILocation(line: 691, column: 7, scope: !6680)
!6684 = !DILocation(line: 693, column: 8, scope: !6668)
!6685 = !DILocation(line: 693, column: 13, scope: !6668)
!6686 = !DILocation(line: 694, column: 3, scope: !6668)
!6687 = !DILocation(line: 695, column: 1, scope: !6668)
!6688 = distinct !DISubprogram(name: "rewrite_enter_block", scope: !3, file: !3, line: 1383, type: !4701, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6689)
!6689 = !{!6690, !6691, !6692, !6693, !6694}
!6690 = !DILocalVariable(name: "walk_data", arg: 1, scope: !6688, file: !3, line: 1383, type: !4698)
!6691 = !DILocalVariable(name: "bb", arg: 2, scope: !6688, file: !3, line: 1384, type: !670)
!6692 = !DILocalVariable(name: "phi", scope: !6688, file: !3, line: 1386, type: !708)
!6693 = !DILocalVariable(name: "gsi", scope: !6688, file: !3, line: 1387, type: !4431)
!6694 = !DILocalVariable(name: "result", scope: !6695, file: !3, line: 1400, type: !733)
!6695 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 1399, column: 5)
!6696 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 1398, column: 3)
!6697 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 1398, column: 3)
!6698 = !DILocation(line: 0, scope: !6688)
!6699 = !DILocation(line: 1387, column: 3, scope: !6688)
!6700 = !DILocation(line: 1389, column: 7, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 1389, column: 7)
!6702 = !DILocation(line: 1389, column: 17, scope: !6701)
!6703 = !DILocation(line: 1389, column: 21, scope: !6701)
!6704 = !DILocation(line: 1389, column: 32, scope: !6701)
!6705 = !DILocation(line: 1389, column: 7, scope: !6688)
!6706 = !DILocation(line: 1390, column: 59, scope: !6701)
!6707 = !DILocation(line: 1390, column: 5, scope: !6701)
!6708 = !DILocation(line: 1393, column: 3, scope: !6688)
!6709 = !DILocation(line: 1398, column: 14, scope: !6697)
!6710 = !DILocation(line: 1398, column: 8, scope: !6697)
!6711 = !DILocation(line: 1398, column: 36, scope: !6696)
!6712 = !DILocation(line: 1398, column: 35, scope: !6696)
!6713 = !DILocation(line: 1398, column: 3, scope: !6697)
!6714 = !DILocation(line: 1402, column: 13, scope: !6695)
!6715 = !DILocation(line: 1403, column: 16, scope: !6695)
!6716 = !DILocation(line: 0, scope: !6695)
!6717 = !DILocation(line: 1404, column: 7, scope: !6695)
!6718 = !DILocation(line: 1405, column: 33, scope: !6695)
!6719 = !DILocation(line: 1405, column: 7, scope: !6695)
!6720 = !DILocation(line: 1398, column: 53, scope: !6696)
!6721 = !DILocation(line: 1398, column: 3, scope: !6696)
!6722 = distinct !{!6722, !6713, !6723}
!6723 = !DILocation(line: 1406, column: 5, scope: !6697)
!6724 = !DILocation(line: 1411, column: 7, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 1411, column: 7)
!6726 = !DILocation(line: 1411, column: 7, scope: !6688)
!6727 = !DILocation(line: 1412, column: 16, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1412, column: 5)
!6729 = !DILocation(line: 1412, column: 10, scope: !6728)
!6730 = !DILocation(line: 1412, column: 36, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 1412, column: 5)
!6732 = !DILocation(line: 1412, column: 35, scope: !6731)
!6733 = !DILocation(line: 1412, column: 5, scope: !6728)
!6734 = !DILocation(line: 1413, column: 7, scope: !6731)
!6735 = !DILocation(line: 1412, column: 53, scope: !6731)
!6736 = !DILocation(line: 1412, column: 5, scope: !6731)
!6737 = distinct !{!6737, !6733, !6738}
!6738 = !DILocation(line: 1413, column: 24, scope: !6728)
!6739 = !DILocation(line: 1419, column: 3, scope: !6688)
!6740 = !DILocation(line: 1420, column: 1, scope: !6688)
!6741 = distinct !DISubprogram(name: "rewrite_leave_block", scope: !3, file: !3, line: 1428, type: !4701, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6742)
!6742 = !{!6743, !6744, !6745, !6747, !6748}
!6743 = !DILocalVariable(name: "walk_data", arg: 1, scope: !6741, file: !3, line: 1428, type: !4698)
!6744 = !DILocalVariable(name: "bb", arg: 2, scope: !6741, file: !3, line: 1429, type: !670)
!6745 = !DILocalVariable(name: "tmp", scope: !6746, file: !3, line: 1434, type: !733)
!6746 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 1433, column: 5)
!6747 = !DILocalVariable(name: "saved_def", scope: !6746, file: !3, line: 1435, type: !733)
!6748 = !DILocalVariable(name: "var", scope: !6746, file: !3, line: 1435, type: !733)
!6749 = !DILocation(line: 0, scope: !6741)
!6750 = !DILocation(line: 1432, column: 3, scope: !6741)
!6751 = !DILocation(line: 1432, column: 10, scope: !6741)
!6752 = !DILocation(line: 1432, column: 46, scope: !6741)
!6753 = !DILocation(line: 1434, column: 18, scope: !6746)
!6754 = !DILocation(line: 0, scope: !6746)
!6755 = !DILocation(line: 1437, column: 15, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1437, column: 11)
!6757 = !DILocation(line: 1437, column: 11, scope: !6746)
!6758 = !DILocation(line: 1440, column: 11, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1440, column: 11)
!6760 = !DILocation(line: 1440, column: 27, scope: !6759)
!6761 = !DILocation(line: 1440, column: 11, scope: !6746)
!6762 = !DILocation(line: 1450, column: 10, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 1441, column: 2)
!6764 = !DILocation(line: 1451, column: 9, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 1451, column: 8)
!6766 = !DILocation(line: 1451, column: 8, scope: !6763)
!6767 = !DILocation(line: 1452, column: 12, scope: !6765)
!6768 = !DILocation(line: 1452, column: 6, scope: !6765)
!6769 = !DILocation(line: 0, scope: !6759)
!6770 = !DILocation(line: 1463, column: 7, scope: !6746)
!6771 = !DILocation(line: 1464, column: 5, scope: !6741)
!6772 = distinct !{!6772, !6750, !6771}
!6773 = !DILocation(line: 1465, column: 1, scope: !6741)
!6774 = distinct !DISubprogram(name: "rewrite_update_enter_block", scope: !3, file: !3, line: 2069, type: !4701, scopeLine: 2071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6775)
!6775 = !{!6776, !6777, !6778, !6779, !6780, !6781, !6782, !6786, !6787}
!6776 = !DILocalVariable(name: "walk_data", arg: 1, scope: !6774, file: !3, line: 2069, type: !4698)
!6777 = !DILocalVariable(name: "bb", arg: 2, scope: !6774, file: !3, line: 2070, type: !670)
!6778 = !DILocalVariable(name: "e", scope: !6774, file: !3, line: 2072, type: !688)
!6779 = !DILocalVariable(name: "ei", scope: !6774, file: !3, line: 2073, type: !2784)
!6780 = !DILocalVariable(name: "is_abnormal_phi", scope: !6774, file: !3, line: 2074, type: !661)
!6781 = !DILocalVariable(name: "gsi", scope: !6774, file: !3, line: 2075, type: !4431)
!6782 = !DILocalVariable(name: "lhs", scope: !6783, file: !3, line: 2104, type: !733)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 2103, column: 5)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 2102, column: 3)
!6785 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 2102, column: 3)
!6786 = !DILocalVariable(name: "lhs_sym", scope: !6783, file: !3, line: 2104, type: !733)
!6787 = !DILocalVariable(name: "phi", scope: !6783, file: !3, line: 2105, type: !708)
!6788 = !DILocation(line: 0, scope: !6774)
!6789 = !DILocation(line: 2072, column: 3, scope: !6774)
!6790 = !DILocation(line: 2073, column: 3, scope: !6774)
!6791 = !DILocation(line: 2075, column: 3, scope: !6774)
!6792 = !DILocation(line: 2077, column: 7, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 2077, column: 7)
!6794 = !DILocation(line: 2077, column: 17, scope: !6793)
!6795 = !DILocation(line: 2077, column: 21, scope: !6793)
!6796 = !DILocation(line: 2077, column: 32, scope: !6793)
!6797 = !DILocation(line: 2077, column: 7, scope: !6774)
!6798 = !DILocation(line: 2079, column: 11, scope: !6793)
!6799 = !DILocation(line: 2078, column: 5, scope: !6793)
!6800 = !DILocation(line: 2082, column: 3, scope: !6774)
!6801 = !DILocation(line: 2084, column: 22, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 2084, column: 7)
!6803 = !DILocation(line: 2084, column: 44, scope: !6802)
!6804 = !DILocation(line: 2084, column: 8, scope: !6802)
!6805 = !DILocation(line: 2084, column: 7, scope: !6774)
!6806 = !DILocation(line: 2090, column: 3, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 2090, column: 3)
!6808 = !DILocation(line: 0, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 2090, column: 3)
!6810 = !DILocation(line: 2090, column: 3, scope: !6809)
!6811 = !DILocation(line: 2091, column: 9, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 2091, column: 9)
!6813 = !DILocation(line: 2091, column: 12, scope: !6812)
!6814 = !DILocation(line: 2091, column: 18, scope: !6812)
!6815 = !DILocation(line: 2091, column: 9, scope: !6809)
!6816 = distinct !{!6816, !6806, !6817}
!6817 = !DILocation(line: 2095, column: 7, scope: !6807)
!6818 = !DILocation(line: 2102, column: 14, scope: !6785)
!6819 = !DILocation(line: 2102, column: 8, scope: !6785)
!6820 = !DILocation(line: 2102, column: 36, scope: !6784)
!6821 = !DILocation(line: 2102, column: 35, scope: !6784)
!6822 = !DILocation(line: 2102, column: 3, scope: !6785)
!6823 = !DILocation(line: 2105, column: 20, scope: !6783)
!6824 = !DILocation(line: 0, scope: !6783)
!6825 = !DILocation(line: 2107, column: 12, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 2107, column: 11)
!6827 = !DILocation(line: 2107, column: 11, scope: !6783)
!6828 = !DILocation(line: 2110, column: 13, scope: !6783)
!6829 = !DILocation(line: 2111, column: 17, scope: !6783)
!6830 = !DILocation(line: 2113, column: 11, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 2113, column: 11)
!6832 = !DILocation(line: 2113, column: 11, scope: !6783)
!6833 = !DILocation(line: 2114, column: 2, scope: !6831)
!6834 = !DILocation(line: 2120, column: 8, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 2120, column: 8)
!6836 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 2116, column: 2)
!6837 = !DILocation(line: 2120, column: 8, scope: !6836)
!6838 = !DILocation(line: 2121, column: 36, scope: !6835)
!6839 = !DILocation(line: 2121, column: 6, scope: !6835)
!6840 = !DILocation(line: 2125, column: 8, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 2125, column: 8)
!6842 = !DILocation(line: 2125, column: 8, scope: !6836)
!6843 = !DILocation(line: 2126, column: 6, scope: !6841)
!6844 = !DILocation(line: 2129, column: 11, scope: !6783)
!6845 = !DILocation(line: 2102, column: 53, scope: !6784)
!6846 = !DILocation(line: 2102, column: 3, scope: !6784)
!6847 = distinct !{!6847, !6822, !6848}
!6848 = !DILocation(line: 2131, column: 5, scope: !6785)
!6849 = !DILocation(line: 2134, column: 7, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 2134, column: 7)
!6851 = !DILocation(line: 2130, column: 2, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 2129, column: 11)
!6853 = !DILocation(line: 2130, column: 40, scope: !6852)
!6854 = !DILocation(line: 2134, column: 7, scope: !6774)
!6855 = !DILocation(line: 2136, column: 7, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 2135, column: 5)
!6857 = !DILocation(line: 2137, column: 18, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 2137, column: 7)
!6859 = !DILocation(line: 2137, column: 12, scope: !6858)
!6860 = !DILocation(line: 2137, column: 38, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6858, file: !3, line: 2137, column: 7)
!6862 = !DILocation(line: 2137, column: 37, scope: !6861)
!6863 = !DILocation(line: 2137, column: 7, scope: !6858)
!6864 = !DILocation(line: 2138, column: 30, scope: !6861)
!6865 = !DILocation(line: 2138, column: 9, scope: !6861)
!6866 = !DILocation(line: 2137, column: 55, scope: !6861)
!6867 = !DILocation(line: 2137, column: 7, scope: !6861)
!6868 = distinct !{!6868, !6863, !6869}
!6869 = !DILocation(line: 2138, column: 49, scope: !6858)
!6870 = !DILocation(line: 2142, column: 3, scope: !6774)
!6871 = !DILocation(line: 2143, column: 1, scope: !6774)
!6872 = distinct !DISubprogram(name: "rewrite_update_leave_block", scope: !3, file: !3, line: 2152, type: !4701, scopeLine: 2154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6873)
!6873 = !{!6874, !6875, !6876, !6878}
!6874 = !DILocalVariable(name: "walk_data", arg: 1, scope: !6872, file: !3, line: 2152, type: !4698)
!6875 = !DILocalVariable(name: "bb", arg: 2, scope: !6872, file: !3, line: 2153, type: !670)
!6876 = !DILocalVariable(name: "var", scope: !6877, file: !3, line: 2157, type: !733)
!6877 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 2156, column: 5)
!6878 = !DILocalVariable(name: "saved_def", scope: !6877, file: !3, line: 2158, type: !733)
!6879 = !DILocation(line: 0, scope: !6872)
!6880 = !DILocation(line: 2155, column: 3, scope: !6872)
!6881 = !DILocation(line: 2155, column: 10, scope: !6872)
!6882 = !DILocation(line: 2155, column: 46, scope: !6872)
!6883 = !DILocation(line: 2157, column: 18, scope: !6877)
!6884 = !DILocation(line: 0, scope: !6877)
!6885 = !DILocation(line: 2162, column: 15, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 2162, column: 11)
!6887 = !DILocation(line: 2162, column: 11, scope: !6877)
!6888 = !DILocation(line: 2165, column: 19, scope: !6877)
!6889 = !DILocation(line: 2166, column: 7, scope: !6877)
!6890 = !DILocation(line: 2167, column: 5, scope: !6872)
!6891 = distinct !{!6891, !6880, !6890}
!6892 = !DILocation(line: 2168, column: 1, scope: !6872)
!6893 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !135, file: !135, line: 184, type: !6894, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6896)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{!2188, !662}
!6896 = !{!6897}
!6897 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6893, file: !135, line: 184, type: !662)
!6898 = !DILocation(line: 0, scope: !6893)
!6899 = !DILocation(line: 184, column: 1, scope: !6893)
!6900 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !135, file: !135, line: 184, type: !6901, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6904)
!6901 = !DISubroutineType(types: !6902)
!6902 = !{null, !6903}
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!6904 = !{!6905}
!6905 = !DILocalVariable(name: "vec_", arg: 1, scope: !6900, file: !135, line: 184, type: !6903)
!6906 = !DILocation(line: 0, scope: !6900)
!6907 = !DILocation(line: 184, column: 1, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6900, file: !135, line: 184, column: 1)
!6909 = !DILocation(line: 184, column: 1, scope: !6900)
!6910 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !135, file: !135, line: 184, type: !6911, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6913)
!6911 = !DISubroutineType(types: !6912)
!6912 = !{!1347, !6903, !733}
!6913 = !{!6914, !6915}
!6914 = !DILocalVariable(name: "vec_", arg: 1, scope: !6910, file: !135, line: 184, type: !6903)
!6915 = !DILocalVariable(name: "obj_", arg: 2, scope: !6910, file: !135, line: 184, type: !733)
!6916 = !DILocation(line: 0, scope: !6910)
!6917 = !DILocation(line: 184, column: 1, scope: !6910)
!6918 = distinct !DISubprogram(name: "register_new_def", scope: !3, file: !3, line: 1203, type: !2746, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6919)
!6919 = !{!6920, !6921, !6922}
!6920 = !DILocalVariable(name: "def", arg: 1, scope: !6918, file: !3, line: 1203, type: !733)
!6921 = !DILocalVariable(name: "sym", arg: 2, scope: !6918, file: !3, line: 1203, type: !733)
!6922 = !DILocalVariable(name: "currdef", scope: !6918, file: !3, line: 1205, type: !733)
!6923 = !DILocation(line: 0, scope: !6918)
!6924 = !DILocation(line: 1215, column: 7, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 1215, column: 7)
!6926 = !DILocation(line: 1215, column: 27, scope: !6925)
!6927 = !DILocation(line: 1215, column: 7, scope: !6918)
!6928 = !DILocation(line: 1217, column: 7, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 1216, column: 5)
!6930 = !DILocation(line: 1218, column: 7, scope: !6929)
!6931 = !DILocation(line: 1221, column: 13, scope: !6918)
!6932 = !DILocation(line: 1227, column: 15, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 1227, column: 7)
!6934 = !DILocation(line: 1227, column: 19, scope: !6933)
!6935 = !DILocation(line: 1227, column: 7, scope: !6918)
!6936 = !DILocation(line: 1228, column: 5, scope: !6933)
!6937 = !DILocation(line: 1236, column: 3, scope: !6918)
!6938 = !DILocation(line: 1239, column: 3, scope: !6918)
!6939 = !DILocation(line: 1240, column: 1, scope: !6918)
!6940 = distinct !DISubprogram(name: "rewrite_stmt", scope: !3, file: !3, line: 1297, type: !6941, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6943)
!6941 = !DISubroutineType(types: !6942)
!6942 = !{null, !4431}
!6943 = !{!6944, !6945, !6946, !6947, !6948, !6949, !6954, !6959, !6960, !6961}
!6944 = !DILocalVariable(name: "si", arg: 1, scope: !6940, file: !3, line: 1297, type: !4431)
!6945 = !DILocalVariable(name: "use_p", scope: !6940, file: !3, line: 1299, type: !2136)
!6946 = !DILocalVariable(name: "def_p", scope: !6940, file: !3, line: 1300, type: !2187)
!6947 = !DILocalVariable(name: "iter", scope: !6940, file: !3, line: 1301, type: !4450)
!6948 = !DILocalVariable(name: "stmt", scope: !6940, file: !3, line: 1302, type: !708)
!6949 = !DILocalVariable(name: "var", scope: !6950, file: !3, line: 1321, type: !733)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 1320, column: 7)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !3, line: 1319, column: 5)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 1319, column: 5)
!6953 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 1318, column: 7)
!6954 = !DILocalVariable(name: "var", scope: !6955, file: !3, line: 1330, type: !733)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 1329, column: 7)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 1328, column: 5)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !3, line: 1328, column: 5)
!6958 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 1327, column: 7)
!6959 = !DILocalVariable(name: "name", scope: !6955, file: !3, line: 1331, type: !733)
!6960 = !DILocalVariable(name: "tracked_var", scope: !6955, file: !3, line: 1332, type: !733)
!6961 = !DILocalVariable(name: "note", scope: !6962, file: !3, line: 1340, type: !708)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 1339, column: 4)
!6963 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 1338, column: 6)
!6964 = !DILocation(line: 1297, column: 36, scope: !6940)
!6965 = !DILocation(line: 1301, column: 3, scope: !6940)
!6966 = !DILocation(line: 1302, column: 17, scope: !6940)
!6967 = !DILocation(line: 0, scope: !6940)
!6968 = !DILocation(line: 1306, column: 3, scope: !6940)
!6969 = !DILocation(line: 1307, column: 8, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 1307, column: 7)
!6971 = !DILocation(line: 1307, column: 30, scope: !6970)
!6972 = !DILocation(line: 1307, column: 34, scope: !6970)
!6973 = !DILocation(line: 1307, column: 7, scope: !6940)
!6974 = !DILocation(line: 1310, column: 7, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 1310, column: 7)
!6976 = !DILocation(line: 1310, column: 17, scope: !6975)
!6977 = !DILocation(line: 1310, column: 21, scope: !6975)
!6978 = !DILocation(line: 1310, column: 32, scope: !6975)
!6979 = !DILocation(line: 1310, column: 7, scope: !6940)
!6980 = !DILocation(line: 1312, column: 7, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 1311, column: 5)
!6982 = !DILocation(line: 1313, column: 26, scope: !6981)
!6983 = !DILocation(line: 1313, column: 7, scope: !6981)
!6984 = !DILocation(line: 1314, column: 16, scope: !6981)
!6985 = !DILocation(line: 1314, column: 7, scope: !6981)
!6986 = !DILocation(line: 1315, column: 5, scope: !6981)
!6987 = !DILocation(line: 1318, column: 7, scope: !6953)
!6988 = !DILocation(line: 1318, column: 7, scope: !6940)
!6989 = !DILocation(line: 1319, column: 5, scope: !6952)
!6990 = !DILocation(line: 0, scope: !6952)
!6991 = !DILocation(line: 1319, column: 5, scope: !6951)
!6992 = !DILocation(line: 1321, column: 13, scope: !6950)
!6993 = !DILocation(line: 0, scope: !6950)
!6994 = !DILocation(line: 1322, column: 2, scope: !6950)
!6995 = !DILocation(line: 1323, column: 2, scope: !6950)
!6996 = distinct !{!6996, !6989, !6997}
!6997 = !DILocation(line: 1324, column: 7, scope: !6952)
!6998 = !DILocation(line: 1327, column: 7, scope: !6958)
!6999 = !DILocation(line: 1327, column: 7, scope: !6940)
!7000 = !DILocation(line: 1328, column: 5, scope: !6957)
!7001 = !DILocation(line: 0, scope: !6957)
!7002 = !DILocation(line: 1328, column: 5, scope: !6956)
!7003 = !DILocation(line: 1330, column: 13, scope: !6955)
!7004 = !DILocation(line: 0, scope: !6955)
!7005 = !DILocation(line: 1331, column: 14, scope: !6955)
!7006 = !DILocation(line: 1333, column: 2, scope: !6955)
!7007 = !DILocation(line: 1334, column: 2, scope: !6955)
!7008 = !DILocation(line: 1335, column: 20, scope: !6955)
!7009 = !DILocation(line: 1335, column: 2, scope: !6955)
!7010 = !DILocation(line: 1337, column: 16, scope: !6955)
!7011 = !DILocation(line: 1338, column: 6, scope: !6963)
!7012 = !DILocation(line: 1338, column: 6, scope: !6955)
!7013 = !DILocation(line: 1340, column: 20, scope: !6962)
!7014 = !DILocation(line: 0, scope: !6962)
!7015 = !DILocation(line: 1341, column: 6, scope: !6962)
!7016 = !DILocation(line: 1342, column: 4, scope: !6962)
!7017 = distinct !{!7017, !7000, !7018}
!7018 = !DILocation(line: 1343, column: 7, scope: !6957)
!7019 = !DILocation(line: 1344, column: 1, scope: !6940)
!7020 = distinct !DISubprogram(name: "rewrite_add_phi_arguments", scope: !3, file: !3, line: 1353, type: !5994, scopeLine: 1354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7021)
!7021 = !{!7022, !7023, !7024, !7025, !7029, !7030, !7034}
!7022 = !DILocalVariable(name: "bb", arg: 1, scope: !7020, file: !3, line: 1353, type: !670)
!7023 = !DILocalVariable(name: "e", scope: !7020, file: !3, line: 1355, type: !688)
!7024 = !DILocalVariable(name: "ei", scope: !7020, file: !3, line: 1356, type: !2784)
!7025 = !DILocalVariable(name: "phi", scope: !7026, file: !3, line: 1360, type: !708)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !3, line: 1359, column: 5)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 1358, column: 3)
!7028 = distinct !DILexicalBlock(scope: !7020, file: !3, line: 1358, column: 3)
!7029 = !DILocalVariable(name: "gsi", scope: !7026, file: !3, line: 1361, type: !4431)
!7030 = !DILocalVariable(name: "currdef", scope: !7031, file: !3, line: 1366, type: !733)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 1365, column: 2)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1363, column: 7)
!7033 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 1363, column: 7)
!7034 = !DILocalVariable(name: "stmt", scope: !7031, file: !3, line: 1367, type: !708)
!7035 = !DILocation(line: 0, scope: !7020)
!7036 = !DILocation(line: 1355, column: 3, scope: !7020)
!7037 = !DILocation(line: 1356, column: 3, scope: !7020)
!7038 = !DILocation(line: 1358, column: 3, scope: !7028)
!7039 = !DILocation(line: 0, scope: !7027)
!7040 = !DILocation(line: 0, scope: !7026)
!7041 = !DILocation(line: 0, scope: !7033)
!7042 = !DILocation(line: 1358, column: 3, scope: !7027)
!7043 = !DILocation(line: 1361, column: 7, scope: !7026)
!7044 = !DILocation(line: 1363, column: 18, scope: !7033)
!7045 = !DILocation(line: 1363, column: 34, scope: !7033)
!7046 = !DILocation(line: 1363, column: 37, scope: !7033)
!7047 = !DILocation(line: 1363, column: 12, scope: !7033)
!7048 = !DILocation(line: 1363, column: 45, scope: !7032)
!7049 = !DILocation(line: 1363, column: 44, scope: !7032)
!7050 = !DILocation(line: 1363, column: 7, scope: !7033)
!7051 = !DILocation(line: 1369, column: 10, scope: !7031)
!7052 = !DILocation(line: 1370, column: 32, scope: !7031)
!7053 = !DILocation(line: 1370, column: 14, scope: !7031)
!7054 = !DILocation(line: 0, scope: !7031)
!7055 = !DILocation(line: 1371, column: 11, scope: !7031)
!7056 = !DILocation(line: 1372, column: 31, scope: !7031)
!7057 = !DILocation(line: 1372, column: 34, scope: !7031)
!7058 = !DILocation(line: 1372, column: 4, scope: !7031)
!7059 = !DILocation(line: 1364, column: 5, scope: !7032)
!7060 = !DILocation(line: 1363, column: 7, scope: !7032)
!7061 = distinct !{!7061, !7050, !7062}
!7062 = !DILocation(line: 1373, column: 2, scope: !7033)
!7063 = !DILocation(line: 1374, column: 5, scope: !7027)
!7064 = distinct !{!7064, !7038, !7065}
!7065 = !DILocation(line: 1374, column: 5, scope: !7028)
!7066 = !DILocation(line: 1375, column: 1, scope: !7020)
!7067 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !135, file: !135, line: 184, type: !7068, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7070)
!7068 = !DISubroutineType(types: !7069)
!7069 = !{!662, !6903, !662}
!7070 = !{!7071, !7072, !7073}
!7071 = !DILocalVariable(name: "vec_", arg: 1, scope: !7067, file: !135, line: 184, type: !6903)
!7072 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7067, file: !135, line: 184, type: !662)
!7073 = !DILocalVariable(name: "extend", scope: !7067, file: !135, line: 184, type: !662)
!7074 = !DILocation(line: 0, scope: !7067)
!7075 = !DILocation(line: 184, column: 1, scope: !7067)
!7076 = !DILocation(line: 184, column: 1, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7067, file: !135, line: 184, column: 1)
!7078 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !135, file: !135, line: 182, type: !7079, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7082)
!7079 = !DISubroutineType(types: !7080)
!7080 = !{!1347, !7081, !733}
!7081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!7082 = !{!7083, !7084, !7085}
!7083 = !DILocalVariable(name: "vec_", arg: 1, scope: !7078, file: !135, line: 182, type: !7081)
!7084 = !DILocalVariable(name: "obj_", arg: 2, scope: !7078, file: !135, line: 182, type: !733)
!7085 = !DILocalVariable(name: "slot_", scope: !7078, file: !135, line: 182, type: !1347)
!7086 = !DILocation(line: 0, scope: !7078)
!7087 = !DILocation(line: 182, column: 1, scope: !7078)
!7088 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !135, file: !135, line: 182, type: !7089, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7091)
!7089 = !DISubroutineType(types: !7090)
!7090 = !{!662, !7081, !662}
!7091 = !{!7092, !7093}
!7092 = !DILocalVariable(name: "vec_", arg: 1, scope: !7088, file: !135, line: 182, type: !7081)
!7093 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7088, file: !135, line: 182, type: !662)
!7094 = !DILocation(line: 0, scope: !7088)
!7095 = !DILocation(line: 182, column: 1, scope: !7088)
!7096 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !2728, file: !2728, line: 233, type: !7097, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7099)
!7097 = !DISubroutineType(types: !7098)
!7098 = !{null, !2136, !733}
!7099 = !{!7100, !7101}
!7100 = !DILocalVariable(name: "use", arg: 1, scope: !7096, file: !2728, line: 233, type: !2136)
!7101 = !DILocalVariable(name: "val", arg: 2, scope: !7096, file: !2728, line: 233, type: !733)
!7102 = !DILocation(line: 0, scope: !7096)
!7103 = !DILocation(line: 235, column: 3, scope: !7096)
!7104 = !DILocation(line: 236, column: 10, scope: !7096)
!7105 = !DILocation(line: 236, column: 15, scope: !7096)
!7106 = !DILocation(line: 237, column: 3, scope: !7096)
!7107 = !DILocation(line: 238, column: 1, scope: !7096)
!7108 = distinct !DISubprogram(name: "get_reaching_def", scope: !3, file: !3, line: 1270, type: !2664, scopeLine: 1271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7109)
!7109 = !{!7110, !7111, !7112}
!7110 = !DILocalVariable(name: "var", arg: 1, scope: !7108, file: !3, line: 1270, type: !733)
!7111 = !DILocalVariable(name: "currdef", scope: !7108, file: !3, line: 1272, type: !733)
!7112 = !DILocalVariable(name: "sym", scope: !7113, file: !3, line: 1281, type: !733)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 1280, column: 5)
!7114 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 1279, column: 7)
!7115 = !DILocation(line: 0, scope: !7108)
!7116 = !DILocation(line: 1275, column: 13, scope: !7108)
!7117 = !DILocation(line: 1279, column: 15, scope: !7114)
!7118 = !DILocation(line: 1279, column: 7, scope: !7108)
!7119 = !DILocation(line: 1281, column: 18, scope: !7113)
!7120 = !DILocation(line: 1281, column: 39, scope: !7113)
!7121 = !DILocation(line: 0, scope: !7113)
!7122 = !DILocation(line: 1282, column: 17, scope: !7113)
!7123 = !DILocation(line: 1283, column: 7, scope: !7113)
!7124 = !DILocation(line: 1284, column: 5, scope: !7113)
!7125 = !DILocation(line: 1288, column: 3, scope: !7108)
!7126 = distinct !DISubprogram(name: "make_ssa_name", scope: !2728, file: !2728, line: 1245, type: !7127, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7129)
!7127 = !DISubroutineType(types: !7128)
!7128 = !{!733, !733, !708}
!7129 = !{!7130, !7131}
!7130 = !DILocalVariable(name: "var", arg: 1, scope: !7126, file: !2728, line: 1245, type: !733)
!7131 = !DILocalVariable(name: "stmt", arg: 2, scope: !7126, file: !2728, line: 1245, type: !708)
!7132 = !DILocation(line: 0, scope: !7126)
!7133 = !DILocation(line: 1247, column: 28, scope: !7126)
!7134 = !DILocation(line: 1247, column: 10, scope: !7126)
!7135 = !DILocation(line: 1247, column: 3, scope: !7126)
!7136 = distinct !DISubprogram(name: "delink_imm_use", scope: !2728, file: !2728, line: 188, type: !7137, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7139)
!7137 = !DISubroutineType(types: !7138)
!7138 = !{null, !2137}
!7139 = !{!7140}
!7140 = !DILocalVariable(name: "linknode", arg: 1, scope: !7136, file: !2728, line: 188, type: !2137)
!7141 = !DILocation(line: 0, scope: !7136)
!7142 = !DILocation(line: 191, column: 17, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7136, file: !2728, line: 191, column: 7)
!7144 = !DILocation(line: 191, column: 22, scope: !7143)
!7145 = !DILocation(line: 191, column: 7, scope: !7136)
!7146 = !DILocation(line: 194, column: 36, scope: !7136)
!7147 = !DILocation(line: 194, column: 19, scope: !7136)
!7148 = !DILocation(line: 194, column: 24, scope: !7136)
!7149 = !DILocation(line: 195, column: 36, scope: !7136)
!7150 = !DILocation(line: 195, column: 13, scope: !7136)
!7151 = !DILocation(line: 195, column: 24, scope: !7136)
!7152 = !DILocation(line: 196, column: 18, scope: !7136)
!7153 = !DILocation(line: 197, column: 18, scope: !7136)
!7154 = !DILocation(line: 198, column: 1, scope: !7136)
!7155 = distinct !DISubprogram(name: "link_imm_use", scope: !2728, file: !2728, line: 214, type: !7156, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7158)
!7156 = !DISubroutineType(types: !7157)
!7157 = !{null, !2137, !733}
!7158 = !{!7159, !7160, !7161}
!7159 = !DILocalVariable(name: "linknode", arg: 1, scope: !7155, file: !2728, line: 214, type: !2137)
!7160 = !DILocalVariable(name: "def", arg: 2, scope: !7155, file: !2728, line: 214, type: !733)
!7161 = !DILocalVariable(name: "root", scope: !7155, file: !2728, line: 216, type: !2137)
!7162 = !DILocation(line: 0, scope: !7155)
!7163 = !DILocation(line: 218, column: 8, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7155, file: !2728, line: 218, column: 7)
!7165 = !DILocation(line: 218, column: 12, scope: !7164)
!7166 = !DILocation(line: 218, column: 15, scope: !7164)
!7167 = !DILocation(line: 218, column: 31, scope: !7164)
!7168 = !DILocation(line: 218, column: 7, scope: !7155)
!7169 = !DILocation(line: 219, column: 15, scope: !7164)
!7170 = !DILocation(line: 219, column: 20, scope: !7164)
!7171 = !DILocation(line: 219, column: 5, scope: !7164)
!7172 = !DILocation(line: 222, column: 16, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7164, file: !2728, line: 221, column: 5)
!7174 = !DILocation(line: 227, column: 7, scope: !7173)
!7175 = !DILocation(line: 229, column: 1, scope: !7155)
!7176 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !2728, file: !2728, line: 202, type: !7177, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7179)
!7177 = !DISubroutineType(types: !7178)
!7178 = !{null, !2137, !2137}
!7179 = !{!7180, !7181}
!7180 = !DILocalVariable(name: "linknode", arg: 1, scope: !7176, file: !2728, line: 202, type: !2137)
!7181 = !DILocalVariable(name: "list", arg: 2, scope: !7176, file: !2728, line: 202, type: !2137)
!7182 = !DILocation(line: 0, scope: !7176)
!7183 = !DILocation(line: 206, column: 13, scope: !7176)
!7184 = !DILocation(line: 206, column: 18, scope: !7176)
!7185 = !DILocation(line: 207, column: 26, scope: !7176)
!7186 = !DILocation(line: 207, column: 13, scope: !7176)
!7187 = !DILocation(line: 207, column: 18, scope: !7176)
!7188 = !DILocation(line: 208, column: 9, scope: !7176)
!7189 = !DILocation(line: 208, column: 15, scope: !7176)
!7190 = !DILocation(line: 208, column: 20, scope: !7176)
!7191 = !DILocation(line: 209, column: 14, scope: !7176)
!7192 = !DILocation(line: 210, column: 1, scope: !7176)
!7193 = distinct !DISubprogram(name: "get_default_def_for", scope: !3, file: !3, line: 1018, type: !2664, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7194)
!7194 = !{!7195, !7196}
!7195 = !DILocalVariable(name: "sym", arg: 1, scope: !7193, file: !3, line: 1018, type: !733)
!7196 = !DILocalVariable(name: "ddef", scope: !7193, file: !3, line: 1020, type: !733)
!7197 = !DILocation(line: 0, scope: !7193)
!7198 = !DILocation(line: 1020, column: 35, scope: !7193)
!7199 = !DILocation(line: 1020, column: 15, scope: !7193)
!7200 = !DILocation(line: 1022, column: 12, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1022, column: 7)
!7202 = !DILocation(line: 1022, column: 7, scope: !7193)
!7203 = !DILocation(line: 1024, column: 34, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 1023, column: 5)
!7205 = !DILocation(line: 1024, column: 14, scope: !7204)
!7206 = !DILocation(line: 1025, column: 7, scope: !7204)
!7207 = !DILocation(line: 1026, column: 5, scope: !7204)
!7208 = !DILocation(line: 1028, column: 3, scope: !7193)
!7209 = distinct !DISubprogram(name: "gimple_location", scope: !581, file: !581, line: 1139, type: !7210, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7212)
!7210 = !DISubroutineType(types: !7211)
!7211 = !{!726, !3782}
!7212 = !{!7213}
!7213 = !DILocalVariable(name: "g", arg: 1, scope: !7209, file: !581, line: 1139, type: !3782)
!7214 = !DILocation(line: 0, scope: !7209)
!7215 = !DILocation(line: 1141, column: 20, scope: !7209)
!7216 = !DILocation(line: 1141, column: 3, scope: !7209)
!7217 = distinct !DISubprogram(name: "VEC_tree_base_pop", scope: !135, file: !135, line: 182, type: !7218, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7220)
!7218 = !DISubroutineType(types: !7219)
!7219 = !{!733, !7081}
!7220 = !{!7221, !7222}
!7221 = !DILocalVariable(name: "vec_", arg: 1, scope: !7217, file: !135, line: 182, type: !7081)
!7222 = !DILocalVariable(name: "obj_", scope: !7217, file: !135, line: 182, type: !733)
!7223 = !DILocation(line: 0, scope: !7217)
!7224 = !DILocation(line: 182, column: 1, scope: !7217)
!7225 = distinct !DISubprogram(name: "register_new_update_single", scope: !3, file: !3, line: 1750, type: !2746, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7226)
!7226 = !{!7227, !7228, !7229}
!7227 = !DILocalVariable(name: "new_name", arg: 1, scope: !7225, file: !3, line: 1750, type: !733)
!7228 = !DILocalVariable(name: "old_name", arg: 2, scope: !7225, file: !3, line: 1750, type: !733)
!7229 = !DILocalVariable(name: "currdef", scope: !7225, file: !3, line: 1752, type: !733)
!7230 = !DILocation(line: 0, scope: !7225)
!7231 = !DILocation(line: 1752, column: 18, scope: !7225)
!7232 = !DILocation(line: 1759, column: 3, scope: !7225)
!7233 = !DILocation(line: 1760, column: 3, scope: !7225)
!7234 = !DILocation(line: 1761, column: 3, scope: !7225)
!7235 = !DILocation(line: 1765, column: 3, scope: !7225)
!7236 = !DILocation(line: 1766, column: 1, scope: !7225)
!7237 = distinct !DISubprogram(name: "register_new_update_set", scope: !3, file: !3, line: 1774, type: !7238, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7240)
!7238 = !DISubroutineType(types: !7239)
!7239 = !{null, !733, !1319}
!7240 = !{!7241, !7242, !7243, !7244}
!7241 = !DILocalVariable(name: "new_name", arg: 1, scope: !7237, file: !3, line: 1774, type: !733)
!7242 = !DILocalVariable(name: "old_names", arg: 2, scope: !7237, file: !3, line: 1774, type: !1319)
!7243 = !DILocalVariable(name: "bi", scope: !7237, file: !3, line: 1776, type: !2774)
!7244 = !DILocalVariable(name: "i", scope: !7237, file: !3, line: 1777, type: !7)
!7245 = !DILocation(line: 0, scope: !7237)
!7246 = !DILocation(line: 1776, column: 3, scope: !7237)
!7247 = !DILocation(line: 1777, column: 3, scope: !7237)
!7248 = !DILocation(line: 1779, column: 3, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 1779, column: 3)
!7250 = !DILocation(line: 1779, column: 3, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 1779, column: 3)
!7252 = !DILocation(line: 1780, column: 43, scope: !7251)
!7253 = !DILocation(line: 1780, column: 5, scope: !7251)
!7254 = distinct !{!7254, !7248, !7255}
!7255 = !DILocation(line: 1780, column: 55, scope: !7249)
!7256 = !DILocation(line: 1781, column: 1, scope: !7237)
!7257 = distinct !DISubprogram(name: "rewrite_update_stmt", scope: !3, file: !3, line: 1914, type: !7258, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7260)
!7258 = !DISubroutineType(types: !7259)
!7259 = !{null, !708, !4431}
!7260 = !{!7261, !7262, !7263, !7264, !7265, !7266}
!7261 = !DILocalVariable(name: "stmt", arg: 1, scope: !7257, file: !3, line: 1914, type: !708)
!7262 = !DILocalVariable(name: "gsi", arg: 2, scope: !7257, file: !3, line: 1914, type: !4431)
!7263 = !DILocalVariable(name: "use_p", scope: !7257, file: !3, line: 1916, type: !2136)
!7264 = !DILocalVariable(name: "def_p", scope: !7257, file: !3, line: 1917, type: !2187)
!7265 = !DILocalVariable(name: "iter", scope: !7257, file: !3, line: 1918, type: !4450)
!7266 = !DILocalVariable(name: "failed", scope: !7267, file: !3, line: 1937, type: !661)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !3, line: 1936, column: 2)
!7268 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 1935, column: 11)
!7269 = distinct !DILexicalBlock(scope: !7270, file: !3, line: 1934, column: 5)
!7270 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 1933, column: 7)
!7271 = !DILocation(line: 0, scope: !7257)
!7272 = !DILocation(line: 1914, column: 56, scope: !7257)
!7273 = !DILocation(line: 1918, column: 3, scope: !7257)
!7274 = !DILocation(line: 1921, column: 8, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 1921, column: 7)
!7276 = !DILocation(line: 1921, column: 30, scope: !7275)
!7277 = !DILocation(line: 1921, column: 34, scope: !7275)
!7278 = !DILocation(line: 1921, column: 7, scope: !7257)
!7279 = !DILocation(line: 1924, column: 7, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 1924, column: 7)
!7281 = !DILocation(line: 1924, column: 17, scope: !7280)
!7282 = !DILocation(line: 1924, column: 21, scope: !7280)
!7283 = !DILocation(line: 1924, column: 32, scope: !7280)
!7284 = !DILocation(line: 1924, column: 7, scope: !7257)
!7285 = !DILocation(line: 1926, column: 7, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 1925, column: 5)
!7287 = !DILocation(line: 1927, column: 26, scope: !7286)
!7288 = !DILocation(line: 1927, column: 7, scope: !7286)
!7289 = !DILocation(line: 1928, column: 16, scope: !7286)
!7290 = !DILocation(line: 1928, column: 7, scope: !7286)
!7291 = !DILocation(line: 1929, column: 5, scope: !7286)
!7292 = !DILocation(line: 1933, column: 7, scope: !7270)
!7293 = !DILocation(line: 1933, column: 7, scope: !7257)
!7294 = !DILocation(line: 1935, column: 11, scope: !7268)
!7295 = !DILocation(line: 1935, column: 11, scope: !7269)
!7296 = !DILocation(line: 0, scope: !7267)
!7297 = !DILocation(line: 1939, column: 4, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 1939, column: 4)
!7299 = !DILocation(line: 0, scope: !7298)
!7300 = !DILocation(line: 1939, column: 4, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 1939, column: 4)
!7302 = !DILocation(line: 1940, column: 11, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7301, file: !3, line: 1940, column: 10)
!7304 = !DILocation(line: 1940, column: 10, scope: !7301)
!7305 = distinct !{!7305, !7297, !7306}
!7306 = !DILocation(line: 1944, column: 8, scope: !7298)
!7307 = !DILocation(line: 1946, column: 8, scope: !7267)
!7308 = !DILocation(line: 1960, column: 8, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 1947, column: 6)
!7310 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 1946, column: 8)
!7311 = !DILocation(line: 1961, column: 8, scope: !7309)
!7312 = !DILocation(line: 1962, column: 6, scope: !7309)
!7313 = !DILocation(line: 1966, column: 4, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 1966, column: 4)
!7315 = distinct !DILexicalBlock(scope: !7268, file: !3, line: 1965, column: 2)
!7316 = !DILocation(line: 0, scope: !7314)
!7317 = !DILocation(line: 1966, column: 4, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 1966, column: 4)
!7319 = !DILocation(line: 1967, column: 6, scope: !7318)
!7320 = distinct !{!7320, !7313, !7321}
!7321 = !DILocation(line: 1967, column: 30, scope: !7314)
!7322 = !DILocation(line: 1974, column: 7, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 1974, column: 7)
!7324 = !DILocation(line: 1974, column: 7, scope: !7257)
!7325 = !DILocation(line: 1975, column: 5, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 1975, column: 5)
!7327 = !DILocation(line: 0, scope: !7326)
!7328 = !DILocation(line: 1975, column: 5, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 1975, column: 5)
!7330 = !DILocation(line: 1976, column: 7, scope: !7329)
!7331 = distinct !{!7331, !7325, !7332}
!7332 = !DILocation(line: 1976, column: 43, scope: !7326)
!7333 = !DILocation(line: 1977, column: 1, scope: !7257)
!7334 = distinct !DISubprogram(name: "rewrite_update_phi_arguments", scope: !3, file: !3, line: 1986, type: !5994, scopeLine: 1987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7335)
!7335 = !{!7336, !7337, !7338, !7339, !7340, !7344, !7345, !7349, !7350, !7351, !7352, !7355, !7358, !7359}
!7336 = !DILocalVariable(name: "bb", arg: 1, scope: !7334, file: !3, line: 1986, type: !670)
!7337 = !DILocalVariable(name: "e", scope: !7334, file: !3, line: 1988, type: !688)
!7338 = !DILocalVariable(name: "ei", scope: !7334, file: !3, line: 1989, type: !2784)
!7339 = !DILocalVariable(name: "i", scope: !7334, file: !3, line: 1990, type: !7)
!7340 = !DILocalVariable(name: "phi", scope: !7341, file: !3, line: 1994, type: !708)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 1993, column: 5)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 1992, column: 3)
!7343 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1992, column: 3)
!7344 = !DILocalVariable(name: "phis", scope: !7341, file: !3, line: 1995, type: !2171)
!7345 = !DILocalVariable(name: "arg", scope: !7346, file: !3, line: 2003, type: !733)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 2002, column: 2)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 2001, column: 7)
!7348 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 2001, column: 7)
!7349 = !DILocalVariable(name: "lhs_sym", scope: !7346, file: !3, line: 2003, type: !733)
!7350 = !DILocalVariable(name: "reaching_def", scope: !7346, file: !3, line: 2003, type: !733)
!7351 = !DILocalVariable(name: "arg_p", scope: !7346, file: !3, line: 2004, type: !2136)
!7352 = !DILocalVariable(name: "sym", scope: !7353, file: !3, line: 2026, type: !733)
!7353 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 2025, column: 6)
!7354 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 2016, column: 8)
!7355 = !DILocalVariable(name: "stmt", scope: !7356, file: !3, line: 2037, type: !708)
!7356 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 2036, column: 6)
!7357 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 2035, column: 8)
!7358 = !DILocalVariable(name: "locus", scope: !7356, file: !3, line: 2038, type: !728)
!7359 = !DILocalVariable(name: "arg_i", scope: !7356, file: !3, line: 2039, type: !662)
!7360 = !DILocation(line: 0, scope: !7334)
!7361 = !DILocation(line: 1988, column: 3, scope: !7334)
!7362 = !DILocation(line: 1989, column: 3, scope: !7334)
!7363 = !DILocation(line: 1992, column: 3, scope: !7343)
!7364 = !DILocation(line: 0, scope: !7342)
!7365 = !DILocation(line: 0, scope: !7341)
!7366 = !DILocation(line: 1992, column: 3, scope: !7342)
!7367 = !DILocation(line: 1994, column: 7, scope: !7341)
!7368 = !DILocation(line: 1997, column: 26, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 1997, column: 11)
!7370 = !DILocation(line: 1997, column: 55, scope: !7369)
!7371 = !DILocation(line: 1997, column: 58, scope: !7369)
!7372 = !DILocation(line: 1997, column: 64, scope: !7369)
!7373 = !DILocation(line: 1997, column: 12, scope: !7369)
!7374 = !DILocation(line: 1997, column: 11, scope: !7341)
!7375 = !DILocation(line: 2000, column: 14, scope: !7341)
!7376 = !DILocation(line: 0, scope: !7347)
!7377 = !DILocation(line: 2001, column: 12, scope: !7348)
!7378 = !DILocation(line: 0, scope: !7348)
!7379 = !DILocation(line: 2001, column: 19, scope: !7347)
!7380 = !DILocation(line: 2001, column: 7, scope: !7348)
!7381 = !DILocation(line: 0, scope: !7346)
!7382 = !DILocation(line: 2006, column: 6, scope: !7346)
!7383 = !DILocation(line: 2008, column: 12, scope: !7346)
!7384 = !DILocation(line: 2009, column: 10, scope: !7346)
!7385 = !DILocation(line: 2011, column: 8, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 2011, column: 8)
!7387 = !DILocation(line: 2011, column: 12, scope: !7386)
!7388 = !DILocation(line: 2011, column: 16, scope: !7386)
!7389 = !DILocation(line: 2011, column: 29, scope: !7386)
!7390 = !DILocation(line: 2011, column: 48, scope: !7386)
!7391 = !DILocation(line: 2011, column: 8, scope: !7346)
!7392 = !DILocation(line: 2014, column: 14, scope: !7346)
!7393 = !DILocation(line: 2016, column: 8, scope: !7346)
!7394 = !DILocation(line: 2021, column: 23, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 2017, column: 6)
!7396 = !DILocation(line: 2023, column: 6, scope: !7395)
!7397 = !DILocation(line: 2026, column: 19, scope: !7353)
!7398 = !DILocation(line: 2026, column: 40, scope: !7353)
!7399 = !DILocation(line: 0, scope: !7353)
!7400 = !DILocation(line: 2028, column: 12, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7353, file: !3, line: 2028, column: 12)
!7402 = !DILocation(line: 2028, column: 12, scope: !7353)
!7403 = !DILocation(line: 2029, column: 18, scope: !7401)
!7404 = !DILocation(line: 2029, column: 3, scope: !7401)
!7405 = !DILocation(line: 2030, column: 17, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7401, file: !3, line: 2030, column: 17)
!7407 = !DILocation(line: 2030, column: 17, scope: !7401)
!7408 = !DILocation(line: 2031, column: 18, scope: !7406)
!7409 = !DILocation(line: 2031, column: 3, scope: !7406)
!7410 = !DILocation(line: 0, scope: !7354)
!7411 = !DILocation(line: 2035, column: 8, scope: !7357)
!7412 = !DILocation(line: 2035, column: 8, scope: !7346)
!7413 = !DILocation(line: 2039, column: 20, scope: !7356)
!7414 = !DILocation(line: 0, scope: !7356)
!7415 = !DILocation(line: 2041, column: 8, scope: !7356)
!7416 = !DILocation(line: 2042, column: 15, scope: !7356)
!7417 = !DILocation(line: 2046, column: 12, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 2046, column: 12)
!7419 = !DILocation(line: 2046, column: 31, scope: !7418)
!7420 = !DILocation(line: 2046, column: 45, scope: !7418)
!7421 = !DILocation(line: 2047, column: 5, scope: !7418)
!7422 = !DILocation(line: 2047, column: 32, scope: !7418)
!7423 = !DILocation(line: 2046, column: 12, scope: !7356)
!7424 = !DILocation(line: 2048, column: 11, scope: !7418)
!7425 = !DILocation(line: 2048, column: 3, scope: !7418)
!7426 = !DILocation(line: 2050, column: 11, scope: !7418)
!7427 = !DILocation(line: 0, scope: !7418)
!7428 = !DILocation(line: 2052, column: 37, scope: !7356)
!7429 = !DILocation(line: 2052, column: 42, scope: !7356)
!7430 = !DILocation(line: 2052, column: 8, scope: !7356)
!7431 = !DILocation(line: 2053, column: 6, scope: !7356)
!7432 = !DILocation(line: 2056, column: 8, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 2056, column: 8)
!7434 = !DILocation(line: 2056, column: 11, scope: !7433)
!7435 = !DILocation(line: 2056, column: 17, scope: !7433)
!7436 = !DILocation(line: 2056, column: 8, scope: !7346)
!7437 = !DILocation(line: 2057, column: 6, scope: !7433)
!7438 = !DILocation(line: 2057, column: 61, scope: !7433)
!7439 = !DILocation(line: 2001, column: 56, scope: !7347)
!7440 = !DILocation(line: 2001, column: 7, scope: !7347)
!7441 = distinct !{!7441, !7380, !7442}
!7442 = !DILocation(line: 2058, column: 2, scope: !7348)
!7443 = !DILocation(line: 2059, column: 5, scope: !7342)
!7444 = distinct !{!7444, !7363, !7445}
!7445 = !DILocation(line: 2059, column: 5, scope: !7343)
!7446 = !DILocation(line: 2060, column: 1, scope: !7334)
!7447 = distinct !DISubprogram(name: "maybe_replace_use_in_debug_stmt", scope: !3, file: !3, line: 1810, type: !7448, scopeLine: 1811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7450)
!7448 = !DISubroutineType(types: !7449)
!7449 = !{!661, !2136}
!7450 = !{!7451, !7452, !7453, !7454}
!7451 = !DILocalVariable(name: "use_p", arg: 1, scope: !7447, file: !3, line: 1810, type: !2136)
!7452 = !DILocalVariable(name: "rdef", scope: !7447, file: !3, line: 1812, type: !733)
!7453 = !DILocalVariable(name: "use", scope: !7447, file: !3, line: 1813, type: !733)
!7454 = !DILocalVariable(name: "sym", scope: !7447, file: !3, line: 1814, type: !733)
!7455 = !DILocation(line: 0, scope: !7447)
!7456 = !DILocation(line: 1813, column: 14, scope: !7447)
!7457 = !DILocation(line: 1814, column: 14, scope: !7447)
!7458 = !DILocation(line: 1814, column: 35, scope: !7447)
!7459 = !DILocation(line: 1816, column: 7, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 1816, column: 7)
!7461 = !DILocation(line: 1816, column: 7, scope: !7447)
!7462 = !DILocation(line: 1817, column: 12, scope: !7460)
!7463 = !DILocation(line: 1817, column: 5, scope: !7460)
!7464 = !DILocation(line: 1818, column: 12, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7460, file: !3, line: 1818, column: 12)
!7466 = !DILocation(line: 1818, column: 12, scope: !7460)
!7467 = !DILocation(line: 1820, column: 14, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1819, column: 5)
!7469 = !DILocation(line: 1825, column: 12, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 1825, column: 11)
!7471 = !DILocation(line: 1825, column: 17, scope: !7470)
!7472 = !DILocation(line: 1825, column: 20, scope: !7470)
!7473 = !DILocation(line: 1825, column: 11, scope: !7468)
!7474 = !DILocation(line: 0, scope: !7460)
!7475 = !DILocation(line: 1831, column: 7, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 1831, column: 7)
!7477 = !DILocation(line: 1831, column: 20, scope: !7476)
!7478 = !DILocation(line: 1831, column: 12, scope: !7476)
!7479 = !DILocation(line: 1832, column: 5, scope: !7476)
!7480 = !DILocation(line: 1834, column: 10, scope: !7447)
!7481 = !DILocation(line: 1834, column: 3, scope: !7447)
!7482 = distinct !DISubprogram(name: "gimple_debug_bind_reset_value", scope: !581, file: !581, line: 3336, type: !5218, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7483)
!7483 = !{!7484}
!7484 = !DILocalVariable(name: "dbg", arg: 1, scope: !7482, file: !581, line: 3336, type: !708)
!7485 = !DILocation(line: 0, scope: !7482)
!7486 = !DILocation(line: 3342, column: 3, scope: !7482)
!7487 = !DILocation(line: 3343, column: 1, scope: !7482)
!7488 = distinct !DISubprogram(name: "maybe_replace_use", scope: !3, file: !3, line: 1790, type: !7489, scopeLine: 1791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7491)
!7489 = !DISubroutineType(types: !7490)
!7490 = !{null, !2136}
!7491 = !{!7492, !7493, !7494, !7495}
!7492 = !DILocalVariable(name: "use_p", arg: 1, scope: !7488, file: !3, line: 1790, type: !2136)
!7493 = !DILocalVariable(name: "rdef", scope: !7488, file: !3, line: 1792, type: !733)
!7494 = !DILocalVariable(name: "use", scope: !7488, file: !3, line: 1793, type: !733)
!7495 = !DILocalVariable(name: "sym", scope: !7488, file: !3, line: 1794, type: !733)
!7496 = !DILocation(line: 0, scope: !7488)
!7497 = !DILocation(line: 1793, column: 14, scope: !7488)
!7498 = !DILocation(line: 1794, column: 14, scope: !7488)
!7499 = !DILocation(line: 1794, column: 35, scope: !7488)
!7500 = !DILocation(line: 1796, column: 7, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7488, file: !3, line: 1796, column: 7)
!7502 = !DILocation(line: 1796, column: 7, scope: !7488)
!7503 = !DILocation(line: 1797, column: 12, scope: !7501)
!7504 = !DILocation(line: 1797, column: 5, scope: !7501)
!7505 = !DILocation(line: 1798, column: 12, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 1798, column: 12)
!7507 = !DILocation(line: 1798, column: 12, scope: !7501)
!7508 = !DILocation(line: 1799, column: 12, scope: !7506)
!7509 = !DILocation(line: 1799, column: 5, scope: !7506)
!7510 = !DILocation(line: 0, scope: !7501)
!7511 = !DILocation(line: 1801, column: 7, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7488, file: !3, line: 1801, column: 7)
!7513 = !DILocation(line: 1801, column: 20, scope: !7512)
!7514 = !DILocation(line: 1801, column: 12, scope: !7512)
!7515 = !DILocation(line: 1802, column: 5, scope: !7512)
!7516 = !DILocation(line: 1803, column: 1, scope: !7488)
!7517 = distinct !DISubprogram(name: "maybe_register_def", scope: !3, file: !3, line: 1844, type: !7518, scopeLine: 1846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7520)
!7518 = !DISubroutineType(types: !7519)
!7519 = !{null, !2187, !708, !4431}
!7520 = !{!7521, !7522, !7523, !7524, !7525, !7526, !7531, !7534, !7537, !7538, !7539}
!7521 = !DILocalVariable(name: "def_p", arg: 1, scope: !7517, file: !3, line: 1844, type: !2187)
!7522 = !DILocalVariable(name: "stmt", arg: 2, scope: !7517, file: !3, line: 1844, type: !708)
!7523 = !DILocalVariable(name: "gsi", arg: 3, scope: !7517, file: !3, line: 1845, type: !4431)
!7524 = !DILocalVariable(name: "def", scope: !7517, file: !3, line: 1847, type: !733)
!7525 = !DILocalVariable(name: "sym", scope: !7517, file: !3, line: 1848, type: !733)
!7526 = !DILocalVariable(name: "tracked_var", scope: !7527, file: !3, line: 1856, type: !733)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 1855, column: 2)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 1854, column: 11)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 1853, column: 5)
!7530 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 1852, column: 7)
!7531 = !DILocalVariable(name: "note", scope: !7532, file: !3, line: 1864, type: !708)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 1863, column: 6)
!7533 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 1862, column: 8)
!7534 = !DILocalVariable(name: "bb", scope: !7535, file: !3, line: 1869, type: !670)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 1868, column: 3)
!7536 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 1867, column: 12)
!7537 = !DILocalVariable(name: "ei", scope: !7535, file: !3, line: 1870, type: !2784)
!7538 = !DILocalVariable(name: "e", scope: !7535, file: !3, line: 1871, type: !688)
!7539 = !DILocalVariable(name: "ef", scope: !7535, file: !3, line: 1871, type: !688)
!7540 = !DILocation(line: 0, scope: !7517)
!7541 = !DILocation(line: 1845, column: 28, scope: !7517)
!7542 = !DILocation(line: 1847, column: 14, scope: !7517)
!7543 = !DILocation(line: 1848, column: 14, scope: !7517)
!7544 = !DILocation(line: 1848, column: 35, scope: !7517)
!7545 = !DILocation(line: 1852, column: 7, scope: !7530)
!7546 = !DILocation(line: 1852, column: 7, scope: !7517)
!7547 = !DILocation(line: 1854, column: 11, scope: !7528)
!7548 = !DILocation(line: 1854, column: 11, scope: !7529)
!7549 = !DILocation(line: 1858, column: 10, scope: !7527)
!7550 = !DILocation(line: 1859, column: 4, scope: !7527)
!7551 = !DILocation(line: 1861, column: 18, scope: !7527)
!7552 = !DILocation(line: 0, scope: !7527)
!7553 = !DILocation(line: 1862, column: 8, scope: !7533)
!7554 = !DILocation(line: 1862, column: 8, scope: !7527)
!7555 = !DILocation(line: 1864, column: 22, scope: !7532)
!7556 = !DILocation(line: 0, scope: !7532)
!7557 = !DILocation(line: 1867, column: 12, scope: !7536)
!7558 = !DILocation(line: 1867, column: 39, scope: !7536)
!7559 = !DILocation(line: 1867, column: 42, scope: !7536)
!7560 = !DILocation(line: 1867, column: 12, scope: !7532)
!7561 = !DILocation(line: 1869, column: 22, scope: !7535)
!7562 = !DILocation(line: 0, scope: !7535)
!7563 = !DILocation(line: 1870, column: 5, scope: !7535)
!7564 = !DILocation(line: 1871, column: 5, scope: !7535)
!7565 = !DILocation(line: 1872, column: 5, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 1872, column: 5)
!7567 = !DILocation(line: 0, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 1872, column: 5)
!7569 = !DILocation(line: 1871, column: 13, scope: !7535)
!7570 = !DILocation(line: 1872, column: 5, scope: !7568)
!7571 = !DILocation(line: 1873, column: 13, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 1873, column: 11)
!7573 = !DILocation(line: 1873, column: 16, scope: !7572)
!7574 = !DILocation(line: 1873, column: 22, scope: !7572)
!7575 = !DILocation(line: 1873, column: 11, scope: !7568)
!7576 = !DILocation(line: 1875, column: 4, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 1874, column: 9)
!7578 = !DILocation(line: 1876, column: 9, scope: !7577)
!7579 = !DILocation(line: 1877, column: 9, scope: !7577)
!7580 = distinct !{!7580, !7565, !7581}
!7581 = !DILocation(line: 1877, column: 9, scope: !7566)
!7582 = !DILocation(line: 1878, column: 5, scope: !7535)
!7583 = !DILocation(line: 1882, column: 5, scope: !7535)
!7584 = !DILocation(line: 1883, column: 3, scope: !7536)
!7585 = !DILocation(line: 1883, column: 3, scope: !7535)
!7586 = !DILocation(line: 1885, column: 3, scope: !7536)
!7587 = !DILocation(line: 1889, column: 7, scope: !7529)
!7588 = !DILocation(line: 1890, column: 5, scope: !7529)
!7589 = !DILocation(line: 1895, column: 11, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 1895, column: 11)
!7591 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 1892, column: 5)
!7592 = !DILocation(line: 1895, column: 11, scope: !7591)
!7593 = !DILocation(line: 1896, column: 32, scope: !7590)
!7594 = !DILocation(line: 1896, column: 2, scope: !7590)
!7595 = !DILocation(line: 1900, column: 11, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 1900, column: 11)
!7597 = !DILocation(line: 1900, column: 11, scope: !7591)
!7598 = !DILocation(line: 1901, column: 2, scope: !7596)
!7599 = !DILocation(line: 1903, column: 1, scope: !7517)
!7600 = distinct !DISubprogram(name: "gimple_set_op", scope: !581, file: !581, line: 1663, type: !7601, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7603)
!7601 = !DISubroutineType(types: !7602)
!7602 = !{null, !708, !7, !733}
!7603 = !{!7604, !7605, !7606}
!7604 = !DILocalVariable(name: "gs", arg: 1, scope: !7600, file: !581, line: 1663, type: !708)
!7605 = !DILocalVariable(name: "i", arg: 2, scope: !7600, file: !581, line: 1663, type: !7)
!7606 = !DILocalVariable(name: "op", arg: 3, scope: !7600, file: !581, line: 1663, type: !733)
!7607 = !DILocation(line: 0, scope: !7600)
!7608 = !DILocation(line: 1665, column: 3, scope: !7600)
!7609 = !DILocation(line: 1671, column: 3, scope: !7600)
!7610 = !DILocation(line: 1671, column: 22, scope: !7600)
!7611 = !DILocation(line: 1672, column: 1, scope: !7600)
!7612 = distinct !DISubprogram(name: "gimple_num_ops", scope: !581, file: !581, line: 1596, type: !7613, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7615)
!7613 = !DISubroutineType(types: !7614)
!7614 = !{!7, !3782}
!7615 = !{!7616}
!7616 = !DILocalVariable(name: "gs", arg: 1, scope: !7612, file: !581, line: 1596, type: !3782)
!7617 = !DILocation(line: 0, scope: !7612)
!7618 = !DILocation(line: 1598, column: 21, scope: !7612)
!7619 = !DILocation(line: 1598, column: 3, scope: !7612)
!7620 = distinct !DISubprogram(name: "gimple_ops", scope: !581, file: !581, line: 1614, type: !6021, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7621)
!7621 = !{!7622, !7623}
!7622 = !DILocalVariable(name: "gs", arg: 1, scope: !7620, file: !581, line: 1614, type: !708)
!7623 = !DILocalVariable(name: "off", scope: !7620, file: !581, line: 1616, type: !1256)
!7624 = !DILocation(line: 0, scope: !7620)
!7625 = !DILocation(line: 1621, column: 28, scope: !7620)
!7626 = !DILocation(line: 1621, column: 9, scope: !7620)
!7627 = !DILocation(line: 1622, column: 3, scope: !7620)
!7628 = !DILocation(line: 1624, column: 20, scope: !7620)
!7629 = !DILocation(line: 1624, column: 32, scope: !7620)
!7630 = !DILocation(line: 1624, column: 10, scope: !7620)
!7631 = !DILocation(line: 1624, column: 3, scope: !7620)
!7632 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !581, file: !581, line: 1073, type: !7633, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7635)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{!633, !708}
!7635 = !{!7636}
!7636 = !DILocalVariable(name: "gs", arg: 1, scope: !7632, file: !581, line: 1073, type: !708)
!7637 = !DILocation(line: 0, scope: !7632)
!7638 = !DILocation(line: 1075, column: 24, scope: !7632)
!7639 = !DILocation(line: 1075, column: 10, scope: !7632)
!7640 = !DILocation(line: 1075, column: 3, scope: !7632)
!7641 = distinct !DISubprogram(name: "gss_for_code", scope: !581, file: !581, line: 1061, type: !7642, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7644)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{!633, !591}
!7644 = !{!7645}
!7645 = !DILocalVariable(name: "code", arg: 1, scope: !7641, file: !581, line: 1061, type: !591)
!7646 = !DILocation(line: 0, scope: !7641)
!7647 = !DILocation(line: 1066, column: 10, scope: !7641)
!7648 = !DILocation(line: 1066, column: 3, scope: !7641)
!7649 = distinct !DISubprogram(name: "gsi_one_before_end_p", scope: !581, file: !581, line: 4476, type: !5100, scopeLine: 4477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7650)
!7650 = !{!7651}
!7651 = !DILocalVariable(name: "i", arg: 1, scope: !7649, file: !581, line: 4476, type: !4431)
!7652 = !DILocation(line: 4476, column: 44, scope: !7649)
!7653 = !DILocation(line: 4478, column: 12, scope: !7649)
!7654 = !DILocation(line: 4478, column: 16, scope: !7649)
!7655 = !DILocation(line: 4478, column: 24, scope: !7649)
!7656 = !DILocation(line: 4478, column: 34, scope: !7649)
!7657 = !DILocation(line: 4478, column: 39, scope: !7649)
!7658 = !DILocation(line: 4478, column: 3, scope: !7649)
!7659 = distinct !DISubprogram(name: "gsi_bb", scope: !581, file: !581, line: 4588, type: !7660, scopeLine: 4589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7662)
!7660 = !DISubroutineType(types: !7661)
!7661 = !{!670, !4431}
!7662 = !{!7663}
!7663 = !DILocalVariable(name: "i", arg: 1, scope: !7659, file: !581, line: 4588, type: !4431)
!7664 = !DILocation(line: 4588, column: 30, scope: !7659)
!7665 = !DILocation(line: 4590, column: 12, scope: !7659)
!7666 = !DILocation(line: 4590, column: 3, scope: !7659)
!7667 = distinct !DISubprogram(name: "single_pred_p", scope: !343, file: !343, line: 634, type: !7668, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7670)
!7668 = !DISubroutineType(types: !7669)
!7669 = !{!661, !5191}
!7670 = !{!7671}
!7671 = !DILocalVariable(name: "bb", arg: 1, scope: !7667, file: !343, line: 634, type: !5191)
!7672 = !DILocation(line: 0, scope: !7667)
!7673 = !DILocation(line: 636, column: 10, scope: !7667)
!7674 = !DILocation(line: 636, column: 33, scope: !7667)
!7675 = !DILocation(line: 636, column: 3, scope: !7667)
!7676 = distinct !DISubprogram(name: "phi_nodes", scope: !2728, file: !2728, line: 508, type: !5189, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7677)
!7677 = !{!7678}
!7678 = !DILocalVariable(name: "bb", arg: 1, scope: !7676, file: !2728, line: 508, type: !5191)
!7679 = !DILocation(line: 0, scope: !7676)
!7680 = !DILocation(line: 510, column: 3, scope: !7676)
!7681 = !DILocation(line: 511, column: 15, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7676, file: !2728, line: 511, column: 7)
!7683 = !DILocation(line: 511, column: 8, scope: !7682)
!7684 = !DILocation(line: 511, column: 7, scope: !7676)
!7685 = !DILocation(line: 513, column: 25, scope: !7676)
!7686 = !DILocation(line: 513, column: 3, scope: !7676)
!7687 = !DILocation(line: 514, column: 1, scope: !7676)
!7688 = distinct !DISubprogram(name: "VEC_gimple_base_iterate", scope: !581, file: !581, line: 33, type: !7689, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7693)
!7689 = !DISubroutineType(types: !7690)
!7690 = !{!662, !7691, !7, !6298}
!7691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7692, size: 64)
!7692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1287)
!7693 = !{!7694, !7695, !7696}
!7694 = !DILocalVariable(name: "vec_", arg: 1, scope: !7688, file: !581, line: 33, type: !7691)
!7695 = !DILocalVariable(name: "ix_", arg: 2, scope: !7688, file: !581, line: 33, type: !7)
!7696 = !DILocalVariable(name: "ptr", arg: 3, scope: !7688, file: !581, line: 33, type: !6298)
!7697 = !DILocation(line: 0, scope: !7688)
!7698 = !DILocation(line: 33, column: 1, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7688, file: !581, line: 33, column: 1)
!7700 = !DILocation(line: 33, column: 1, scope: !7688)
!7701 = !DILocation(line: 33, column: 1, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7699, file: !581, line: 33, column: 1)
!7703 = !DILocation(line: 33, column: 1, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7699, file: !581, line: 33, column: 1)
!7705 = !DILocation(line: 0, scope: !7699)
!7706 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !581, file: !581, line: 3061, type: !7613, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7707)
!7707 = !{!7708}
!7708 = !DILocalVariable(name: "gs", arg: 1, scope: !7706, file: !581, line: 3061, type: !3782)
!7709 = !DILocation(line: 0, scope: !7706)
!7710 = !DILocation(line: 3064, column: 25, scope: !7706)
!7711 = !DILocation(line: 3064, column: 3, scope: !7706)
!7712 = distinct !DISubprogram(name: "gimple_phi_arg_location", scope: !2728, file: !2728, line: 475, type: !7713, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7715)
!7713 = !DISubroutineType(types: !7714)
!7714 = !{!728, !708, !1256}
!7715 = !{!7716, !7717}
!7716 = !DILocalVariable(name: "gs", arg: 1, scope: !7712, file: !2728, line: 475, type: !708)
!7717 = !DILocalVariable(name: "i", arg: 2, scope: !7712, file: !2728, line: 475, type: !1256)
!7718 = !DILocation(line: 0, scope: !7712)
!7719 = !DILocation(line: 477, column: 10, scope: !7712)
!7720 = !DILocation(line: 477, column: 34, scope: !7712)
!7721 = !DILocation(line: 477, column: 3, scope: !7712)
!7722 = distinct !DISubprogram(name: "gimple_phi_arg_set_location", scope: !2728, file: !2728, line: 491, type: !7723, scopeLine: 492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7725)
!7723 = !DISubroutineType(types: !7724)
!7724 = !{null, !708, !1256, !728}
!7725 = !{!7726, !7727, !7728}
!7726 = !DILocalVariable(name: "gs", arg: 1, scope: !7722, file: !2728, line: 491, type: !708)
!7727 = !DILocalVariable(name: "i", arg: 2, scope: !7722, file: !2728, line: 491, type: !1256)
!7728 = !DILocalVariable(name: "loc", arg: 3, scope: !7722, file: !2728, line: 491, type: !728)
!7729 = !DILocation(line: 0, scope: !7722)
!7730 = !DILocation(line: 493, column: 23, scope: !7722)
!7731 = !DILocation(line: 493, column: 3, scope: !7722)
!7732 = !DILocation(line: 493, column: 27, scope: !7722)
!7733 = !DILocation(line: 493, column: 33, scope: !7722)
!7734 = !DILocation(line: 494, column: 1, scope: !7722)
