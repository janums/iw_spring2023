; ModuleID = 'tree-predcom.bc'
source_filename = "tree-predcom.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.dref_d = type { %struct.data_reference*, %union.gimple_statement_d*, %union.tree_node*, i32, %struct.double_int, i32, i8 }
%struct.data_reference = type { %union.gimple_statement_d*, %union.tree_node*, i8*, i8, %struct.innermost_loop_behavior, %struct.indices, %struct.dr_alias, %struct.access_matrix* }
%struct.innermost_loop_behavior = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.indices = type { %union.tree_node*, %struct.VEC_tree_heap* }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.dr_alias = type { %struct.ptr_info_def*, %struct.bitmap_head_def* }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.access_matrix = type { %struct.VEC_loop_p_heap*, i32, %struct.VEC_tree_heap*, %struct.VEC_lambda_vector_gc* }
%struct.VEC_loop_p_heap = type { %struct.VEC_loop_p_base }
%struct.VEC_lambda_vector_gc = type { %struct.VEC_lambda_vector_base }
%struct.VEC_lambda_vector_base = type { i32, i32, [1 x i32*] }
%struct.chain = type { i32, i32, %union.tree_node*, %struct.chain*, %struct.chain*, %struct.VEC_dref_heap*, i32, %struct.VEC_tree_heap*, %struct.VEC_tree_heap*, i8 }
%struct.VEC_dref_heap = type { %struct.VEC_dref_base }
%struct.VEC_dref_base = type { i32, i32, [1 x %struct.dref_d*] }
%struct.VEC_chain_p_heap = type { %struct.VEC_chain_p_base }
%struct.VEC_chain_p_base = type { i32, i32, [1 x %struct.chain*] }
%struct.component = type { %struct.VEC_dref_heap*, i32, %struct.component* }
%struct.loop_iterator = type { %struct.VEC_int_heap*, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.VEC_data_reference_p_heap = type { %struct.VEC_data_reference_p_base }
%struct.VEC_data_reference_p_base = type { i32, i32, [1 x %struct.data_reference*] }
%struct.VEC_ddr_p_heap = type { %struct.VEC_ddr_p_base }
%struct.VEC_ddr_p_base = type { i32, i32, [1 x %struct.data_dependence_relation*] }
%struct.data_dependence_relation = type { %struct.data_reference*, %struct.data_reference*, %union.tree_node*, %struct.VEC_subscript_p_heap*, %struct.VEC_loop_p_heap*, %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap*, i32, i8, i8, i8 }
%struct.VEC_subscript_p_heap = type { %struct.VEC_subscript_p_base }
%struct.VEC_subscript_p_base = type { i32, i32, [1 x %struct.subscript*] }
%struct.subscript = type { %struct.conflict_function*, %struct.conflict_function*, %union.tree_node*, %union.tree_node* }
%struct.conflict_function = type { i32, [2 x %struct.VEC_tree_heap*] }
%struct.VEC_lambda_vector_heap = type { %struct.VEC_lambda_vector_base }
%struct.tree_niter_desc = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.double_int, %struct.affine_iv, %union.tree_node*, i32 }
%struct.affine_iv = type { %union.tree_node*, %union.tree_node*, i8 }
%struct.epcc_data = type { %struct.VEC_chain_p_heap*, %struct.bitmap_head_def* }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.VEC_edge_heap = type { %struct.VEC_edge_base }
%struct.affine_tree_combination = type { %union.tree_node*, %struct.double_int, i32, [8 x %struct.aff_comb_elt], %union.tree_node* }
%struct.aff_comb_elt = type { %union.tree_node*, %struct.double_int }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }
%struct.tree_ssa_name = type { %struct.tree_common, %union.tree_node*, %union.gimple_statement_d*, i32, %struct.ptr_info_def*, %struct.ssa_use_operand_d }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c" (id %u%s)\0A\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [8 x i8] c", write\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"      offset \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"      distance %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"    looparound ref\0A\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"    combination ref\0A\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"      in statement \00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"Load motion\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"Loads-only\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"Store-loads\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"Combination\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"tree-predcom.c\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"%s chain %p%s\0A\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c" (combined)\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"  max distance %u%s\0A\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c", may reuse first\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"  equal to %p %s %p in type \00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"  vars\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"  inits\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"  references:\0A\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"Component%s:\0A\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c" (invariant)\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.27 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.28 = private unnamed_addr constant [20 x i8] c"Processing loop %d\0A\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"Initial state:\0A\0A\00", align 1
@looparound_phis = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !0
@.str.30 = private unnamed_addr constant [49 x i8] c"Predictive commoning failed: no suitable chains\0A\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"Before commoning:\0A\0A\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"Unrolling %u times.\0A\00", align 1
@.str.33 = private unnamed_addr constant [51 x i8] c"Executing predictive commoning without unrolling.\0A\00", align 1
@name_expansions = internal global %struct.pointer_map_t* null, align 8, !dbg !2058
@chrec_known = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@target_avail_regs = external dso_local local_unnamed_addr global i32, align 4
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.34 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@flag_unsafe_math_optimizations = external dso_local local_unnamed_addr global i32, align 4
@.str.35 = private unnamed_addr constant [12 x i8] c"predreastmp\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2064 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2077, metadata !DIExpression()), !dbg !2079
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2078, metadata !DIExpression()), !dbg !2079
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2080
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2081
  ret i32 %call, !dbg !2082
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2083 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2087
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2088
  ret i32 %call, !dbg !2089
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2090 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2145, metadata !DIExpression()), !dbg !2146
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2147
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2147
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2147
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2147
  %cmp = icmp uge i8* %0, %1, !dbg !2147
  %conv1 = zext i1 %cmp to i64, !dbg !2147
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2147
  %tobool = icmp eq i64 %expval, 0, !dbg !2147
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2147

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2147
  br label %cond.end, !dbg !2147

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2147
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2147
  %2 = load i8, i8* %0, align 1, !dbg !2147
  %conv3 = zext i8 %2 to i32, !dbg !2147
  br label %cond.end, !dbg !2147

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2147
  ret i32 %cond, !dbg !2148
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2149 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2151, metadata !DIExpression()), !dbg !2152
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2153
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2153
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2153
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2153
  %cmp = icmp uge i8* %0, %1, !dbg !2153
  %conv1 = zext i1 %cmp to i64, !dbg !2153
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2153
  %tobool = icmp eq i64 %expval, 0, !dbg !2153
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2153

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2153
  br label %cond.end, !dbg !2153

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2153
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2153
  %2 = load i8, i8* %0, align 1, !dbg !2153
  %conv3 = zext i8 %2 to i32, !dbg !2153
  br label %cond.end, !dbg !2153

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2153
  ret i32 %cond, !dbg !2154
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2155 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2156
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2156
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2156
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2156
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2156
  %cmp = icmp uge i8* %1, %2, !dbg !2156
  %conv1 = zext i1 %cmp to i64, !dbg !2156
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2156
  %tobool = icmp eq i64 %expval, 0, !dbg !2156
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2156

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2156
  br label %cond.end, !dbg !2156

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2156
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2156
  %3 = load i8, i8* %1, align 1, !dbg !2156
  %conv3 = zext i8 %3 to i32, !dbg !2156
  br label %cond.end, !dbg !2156

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2156
  ret i32 %cond, !dbg !2157
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2158 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2162, metadata !DIExpression()), !dbg !2163
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2164
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2165
  ret i32 %call, !dbg !2166
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2167 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2171, metadata !DIExpression()), !dbg !2173
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2172, metadata !DIExpression()), !dbg !2173
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2174
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2174
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2174
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2174
  %cmp = icmp uge i8* %0, %1, !dbg !2174
  %conv1 = zext i1 %cmp to i64, !dbg !2174
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2174
  %tobool = icmp eq i64 %expval, 0, !dbg !2174
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2174

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2174
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2174
  br label %cond.end, !dbg !2174

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2174
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2174
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2174
  store i8 %conv2, i8* %0, align 1, !dbg !2174
  %conv6 = and i32 %__c, 255, !dbg !2174
  br label %cond.end, !dbg !2174

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2174
  ret i32 %cond, !dbg !2175
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2176 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2178, metadata !DIExpression()), !dbg !2180
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2179, metadata !DIExpression()), !dbg !2180
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2181
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2181
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2181
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2181
  %cmp = icmp uge i8* %0, %1, !dbg !2181
  %conv1 = zext i1 %cmp to i64, !dbg !2181
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2181
  %tobool = icmp eq i64 %expval, 0, !dbg !2181
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2181

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2181
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2181
  br label %cond.end, !dbg !2181

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2181
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2181
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2181
  store i8 %conv2, i8* %0, align 1, !dbg !2181
  %conv6 = and i32 %__c, 255, !dbg !2181
  br label %cond.end, !dbg !2181

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2181
  ret i32 %cond, !dbg !2182
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2183 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2185, metadata !DIExpression()), !dbg !2186
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2187
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2187
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2187
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2187
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2187
  %cmp = icmp uge i8* %1, %2, !dbg !2187
  %conv1 = zext i1 %cmp to i64, !dbg !2187
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2187
  %tobool = icmp eq i64 %expval, 0, !dbg !2187
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2187

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2187
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2187
  br label %cond.end, !dbg !2187

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2187
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2187
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2187
  store i8 %conv4, i8* %1, align 1, !dbg !2187
  %conv6 = and i32 %__c, 255, !dbg !2187
  br label %cond.end, !dbg !2187

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2187
  ret i32 %cond, !dbg !2188
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2189 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2195, metadata !DIExpression()), !dbg !2198
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2196, metadata !DIExpression()), !dbg !2198
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2197, metadata !DIExpression()), !dbg !2198
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2199
  ret i64 %call, !dbg !2200
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2201 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2203, metadata !DIExpression()), !dbg !2204
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2205
  %0 = load i32, i32* %_flags, align 8, !dbg !2205
  %and = lshr i32 %0, 4, !dbg !2205
  %and.lobit = and i32 %and, 1, !dbg !2205
  ret i32 %and.lobit, !dbg !2206
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2207 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2209, metadata !DIExpression()), !dbg !2210
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2211
  %0 = load i32, i32* %_flags, align 8, !dbg !2211
  %and = lshr i32 %0, 5, !dbg !2211
  %and.lobit = and i32 %and, 1, !dbg !2211
  ret i32 %and.lobit, !dbg !2212
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2213 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2216, metadata !DIExpression()), !dbg !2217
  %__c.off = add i32 %__c, 128, !dbg !2218
  %0 = icmp ult i32 %__c.off, 384, !dbg !2218
  br i1 %0, label %cond.true, label %cond.end, !dbg !2218

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2219
  %1 = load i32*, i32** %call, align 8, !dbg !2220
  %idxprom = sext i32 %__c to i64, !dbg !2221
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2221
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2221
  br label %cond.end, !dbg !2222

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2222
  ret i32 %cond, !dbg !2223
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2224 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2226, metadata !DIExpression()), !dbg !2227
  %__c.off = add i32 %__c, 128, !dbg !2228
  %0 = icmp ult i32 %__c.off, 384, !dbg !2228
  br i1 %0, label %cond.true, label %cond.end, !dbg !2228

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2229
  %1 = load i32*, i32** %call, align 8, !dbg !2230
  %idxprom = sext i32 %__c to i64, !dbg !2231
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2231
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2231
  br label %cond.end, !dbg !2232

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2232
  ret i32 %cond, !dbg !2233
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2234 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2239, metadata !DIExpression()), !dbg !2240
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2241
  %conv = trunc i64 %call to i32, !dbg !2242
  ret i32 %conv, !dbg !2243
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2244 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2248, metadata !DIExpression()), !dbg !2249
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2250
  ret i64 %call, !dbg !2251
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2252 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2257, metadata !DIExpression()), !dbg !2258
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2259
  ret i64 %call, !dbg !2260
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2261 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2267, metadata !DIExpression()), !dbg !2277
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2268, metadata !DIExpression()), !dbg !2277
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2269, metadata !DIExpression()), !dbg !2277
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2270, metadata !DIExpression()), !dbg !2277
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2271, metadata !DIExpression()), !dbg !2277
  call void @llvm.dbg.value(metadata i64 0, metadata !2272, metadata !DIExpression()), !dbg !2277
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2273, metadata !DIExpression()), !dbg !2277
  br label %while.cond, !dbg !2278

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2279
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2277
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2273, metadata !DIExpression()), !dbg !2277
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2272, metadata !DIExpression()), !dbg !2277
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2280
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2278

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2281
  %div = lshr i64 %add, 1, !dbg !2283
  call void @llvm.dbg.value(metadata i64 %div, metadata !2274, metadata !DIExpression()), !dbg !2277
  %mul = mul i64 %div, %__size, !dbg !2284
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2285
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2275, metadata !DIExpression()), !dbg !2277
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2286
  call void @llvm.dbg.value(metadata i32 %call, metadata !2276, metadata !DIExpression()), !dbg !2277
  %cmp1 = icmp slt i32 %call, 0, !dbg !2287
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2289

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2290
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2292

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2293
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2272, metadata !DIExpression()), !dbg !2277
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2277
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2277
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2273, metadata !DIExpression()), !dbg !2277
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2272, metadata !DIExpression()), !dbg !2277
  br label %while.cond, !dbg !2278, !llvm.loop !2294

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2277
  ret i8* %retval.0, !dbg !2296
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2297 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2303, metadata !DIExpression()), !dbg !2304
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2305
  ret double %call, !dbg !2306
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2307 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2316, metadata !DIExpression()), !dbg !2319
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2317, metadata !DIExpression()), !dbg !2319
  call void @llvm.dbg.value(metadata i32 %base, metadata !2318, metadata !DIExpression()), !dbg !2319
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2320
  ret i64 %call, !dbg !2321
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2322 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2328, metadata !DIExpression()), !dbg !2331
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2329, metadata !DIExpression()), !dbg !2331
  call void @llvm.dbg.value(metadata i32 %base, metadata !2330, metadata !DIExpression()), !dbg !2331
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2332
  ret i64 %call, !dbg !2333
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2334 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2345, metadata !DIExpression()), !dbg !2348
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2346, metadata !DIExpression()), !dbg !2348
  call void @llvm.dbg.value(metadata i32 %base, metadata !2347, metadata !DIExpression()), !dbg !2348
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2349
  ret i64 %call, !dbg !2350
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2351 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2355, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2356, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i32 %base, metadata !2357, metadata !DIExpression()), !dbg !2358
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2359
  ret i64 %call, !dbg !2360
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2361 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2401, metadata !DIExpression()), !dbg !2403
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2402, metadata !DIExpression()), !dbg !2403
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2404
  ret i32 %call, !dbg !2405
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2406 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2408, metadata !DIExpression()), !dbg !2410
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2409, metadata !DIExpression()), !dbg !2410
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2411
  ret i32 %call, !dbg !2412
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2413 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2417, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2418, metadata !DIExpression()), !dbg !2419
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2420
  ret i32 %call, !dbg !2421
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2422 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2426, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2427, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2428, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2429, metadata !DIExpression()), !dbg !2430
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2431
  ret i32 %call, !dbg !2432
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2433 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2437, metadata !DIExpression()), !dbg !2440
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2438, metadata !DIExpression()), !dbg !2440
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2439, metadata !DIExpression()), !dbg !2440
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2439, metadata !DIExpression(DW_OP_deref)), !dbg !2440
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2441
  ret i32 %call, !dbg !2442
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2443 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2447, metadata !DIExpression()), !dbg !2451
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2448, metadata !DIExpression()), !dbg !2451
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2449, metadata !DIExpression()), !dbg !2451
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2450, metadata !DIExpression()), !dbg !2451
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2450, metadata !DIExpression(DW_OP_deref)), !dbg !2451
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2452
  ret i32 %call, !dbg !2453
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2454 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2478, metadata !DIExpression()), !dbg !2480
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2479, metadata !DIExpression()), !dbg !2480
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2481
  ret i32 %call, !dbg !2482
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2483 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2485, metadata !DIExpression()), !dbg !2487
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2486, metadata !DIExpression()), !dbg !2487
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2488
  ret i32 %call, !dbg !2489
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2490 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2494, metadata !DIExpression()), !dbg !2496
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2495, metadata !DIExpression()), !dbg !2496
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2497
  ret i32 %call, !dbg !2498
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2499 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2503, metadata !DIExpression()), !dbg !2507
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2504, metadata !DIExpression()), !dbg !2507
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2505, metadata !DIExpression()), !dbg !2507
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2506, metadata !DIExpression()), !dbg !2507
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2508
  ret i32 %call, !dbg !2509
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dump_dref(%struct._IO_FILE* %file, %struct.dref_d* %ref) local_unnamed_addr #5 !dbg !2510 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2514, metadata !DIExpression()), !dbg !2516
  call void @llvm.dbg.value(metadata %struct.dref_d* %ref, metadata !2515, metadata !DIExpression()), !dbg !2516
  %ref1 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 0, !dbg !2517
  %0 = load %struct.data_reference*, %struct.data_reference** %ref1, align 8, !dbg !2517
  %tobool = icmp eq %struct.data_reference* %0, null, !dbg !2519
  br i1 %tobool, label %if.else, label %if.then, !dbg !2520

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #6, !dbg !2521
  %1 = load %struct.data_reference*, %struct.data_reference** %ref1, align 8, !dbg !2523
  %ref3 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %1, i64 0, i32 1, !dbg !2523
  %2 = load %union.tree_node*, %union.tree_node** %ref3, align 8, !dbg !2523
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %2, i32 2) #6, !dbg !2524
  %pos = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 5, !dbg !2525
  %3 = load i32, i32* %pos, align 8, !dbg !2525
  %4 = load %struct.data_reference*, %struct.data_reference** %ref1, align 8, !dbg !2526
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %4, i64 0, i32 3, !dbg !2526
  %5 = load i8, i8* %is_read, align 8, !dbg !2526
  %tobool5 = icmp eq i8 %5, 0, !dbg !2526
  %cond = select i1 %tobool5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), !dbg !2526
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32 %3, i8* %cond) #6, !dbg !2527
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2528
  %6 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 4, i32 0, !dbg !2529
  %7 = load i64, i64* %6, align 8, !dbg !2529
  %8 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 4, i32 1, !dbg !2529
  %9 = load i64, i64* %8, align 8, !dbg !2529
  tail call void @dump_double_int(%struct._IO_FILE* %file, i64 %7, i64 %9, i8 zeroext 0) #6, !dbg !2529
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2530
  %distance = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 3, !dbg !2531
  %10 = load i32, i32* %distance, align 8, !dbg !2531
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i32 %10) #6, !dbg !2532
  br label %if.end21, !dbg !2533

if.else:                                          ; preds = %entry
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 1, !dbg !2534
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !2534
  %call10 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %11) #7, !dbg !2537
  %cmp = icmp eq i32 %call10, 16, !dbg !2538
  br i1 %cmp, label %if.then12, label %if.else14, !dbg !2539

if.then12:                                        ; preds = %if.else
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !2540
  br label %if.end, !dbg !2540

if.else14:                                        ; preds = %if.else
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2541
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then12
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2542
  %12 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !2543
  tail call void @print_gimple_stmt(%struct._IO_FILE* %file, %union.gimple_statement_d* %12, i32 0, i32 2) #6, !dbg !2544
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2545
  %distance19 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 3, !dbg !2546
  %13 = load i32, i32* %distance19, align 8, !dbg !2546
  %call20 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i32 %13) #6, !dbg !2547
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then
  ret void, !dbg !2548
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @dump_double_int(%struct._IO_FILE*, i64, i64, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2549 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2554, metadata !DIExpression()), !dbg !2555
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !2556
  %bf.load = load i32, i32* %0, align 8, !dbg !2556
  %bf.clear = and i32 %bf.load, 255, !dbg !2556
  ret i32 %bf.clear, !dbg !2557
}

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dump_chain(%struct._IO_FILE* %file, %struct.chain* %chain) local_unnamed_addr #5 !dbg !2558 {
entry:
  %a = alloca %struct.dref_d*, align 8
  %var = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2562, metadata !DIExpression()), !dbg !2568
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !2563, metadata !DIExpression()), !dbg !2568
  %0 = bitcast %struct.dref_d** %a to i8*, !dbg !2569
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2569
  %1 = bitcast %union.tree_node** %var to i8*, !dbg !2570
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2570
  %type = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 0, !dbg !2571
  %2 = load i32, i32* %type, align 8, !dbg !2571
  switch i32 %2, label %sw.default [
    i32 0, label %sw.epilog
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !2572

sw.bb1:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), metadata !2565, metadata !DIExpression()), !dbg !2568
  br label %sw.epilog, !dbg !2573

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), metadata !2565, metadata !DIExpression()), !dbg !2568
  br label %sw.epilog, !dbg !2575

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i64 0, i64 0), metadata !2565, metadata !DIExpression()), !dbg !2568
  br label %sw.epilog, !dbg !2576

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 401, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !2577
  br label %sw.epilog, !dbg !2578

sw.epilog:                                        ; preds = %entry, %sw.default, %sw.bb3, %sw.bb2, %sw.bb1
  %chain_type.0 = phi i8* [ undef, %sw.default ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i64 0, i64 0), %sw.bb3 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), %sw.bb2 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), %sw.bb1 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), %entry ]
  call void @llvm.dbg.value(metadata i8* %chain_type.0, metadata !2565, metadata !DIExpression()), !dbg !2568
  %combined = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 9, !dbg !2579
  %bf.load = load i8, i8* %combined, align 8, !dbg !2579
  %bf.clear = and i8 %bf.load, 4, !dbg !2579
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !2580
  %cond = select i1 %tobool, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), !dbg !2580
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0), i8* %chain_type.0, %struct.chain* %chain, i8* %cond) #6, !dbg !2581
  %3 = load i32, i32* %type, align 8, !dbg !2582
  %cmp = icmp eq i32 %3, 0, !dbg !2584
  br i1 %cmp, label %if.end, label %if.then, !dbg !2585

if.then:                                          ; preds = %sw.epilog
  %length = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 6, !dbg !2586
  %4 = load i32, i32* %length, align 8, !dbg !2586
  %bf.load5 = load i8, i8* %combined, align 8, !dbg !2587
  %bf.clear6 = and i8 %bf.load5, 1, !dbg !2587
  %tobool8 = icmp eq i8 %bf.clear6, 0, !dbg !2588
  %cond9 = select i1 %tobool8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), !dbg !2588
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i32 %4, i8* %cond9) #6, !dbg !2589
  %.pre = load i32, i32* %type, align 8, !dbg !2590
  %phitmp = icmp eq i32 %.pre, 3, !dbg !2589
  br label %if.end, !dbg !2589

if.end:                                           ; preds = %sw.epilog, %if.then
  %5 = phi i1 [ false, %sw.epilog ], [ %phitmp, %if.then ]
  br i1 %5, label %if.then13, label %if.end17, !dbg !2592

if.then13:                                        ; preds = %if.end
  %ch1 = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 3, !dbg !2593
  %6 = bitcast %struct.chain** %ch1 to i8**, !dbg !2593
  %7 = load i8*, i8** %6, align 8, !dbg !2593
  %op = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 1, !dbg !2595
  %8 = load i32, i32* %op, align 4, !dbg !2595
  %call14 = tail call i8* @op_symbol_code(i32 %8) #6, !dbg !2596
  %ch2 = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 4, !dbg !2597
  %9 = bitcast %struct.chain** %ch2 to i8**, !dbg !2597
  %10 = load i8*, i8** %9, align 8, !dbg !2597
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i8* %7, i8* %call14, i8* %10) #6, !dbg !2598
  %rslt_type = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 2, !dbg !2599
  %11 = load %union.tree_node*, %union.tree_node** %rslt_type, align 8, !dbg !2599
  tail call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %11, i32 2) #6, !dbg !2600
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2601
  br label %if.end17, !dbg !2602

if.end17:                                         ; preds = %if.then13, %if.end
  %vars = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 7, !dbg !2603
  %12 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !2603
  %tobool18 = icmp eq %struct.VEC_tree_heap* %12, null, !dbg !2605
  br i1 %tobool18, label %if.end29, label %if.then19, !dbg !2606

if.then19:                                        ; preds = %if.end17
  %call20 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !2607
  call void @llvm.dbg.value(metadata i32 0, metadata !2566, metadata !DIExpression()), !dbg !2568
  br label %for.cond, !dbg !2609

for.cond:                                         ; preds = %for.body, %if.then19
  %i.0 = phi i32 [ 0, %if.then19 ], [ %inc, %for.body ], !dbg !2611
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2566, metadata !DIExpression()), !dbg !2568
  %13 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !2612
  %tobool22 = icmp eq %struct.VEC_tree_heap* %13, null, !dbg !2612
  br i1 %tobool22, label %cond.end, label %cond.true, !dbg !2612

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %13, i64 0, i32 0, !dbg !2612
  br label %cond.end, !dbg !2612

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond24 = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !2612
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !2567, metadata !DIExpression(DW_OP_deref)), !dbg !2568
  %call25 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond24, i32 %i.0, %union.tree_node** nonnull %var) #7, !dbg !2612
  %tobool26 = icmp eq i32 %call25, 0, !dbg !2614
  br i1 %tobool26, label %for.end, label %for.body, !dbg !2614

for.body:                                         ; preds = %cond.end
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !2615
  %14 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !2617
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !2567, metadata !DIExpression()), !dbg !2568
  call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %14, i32 2) #6, !dbg !2618
  %inc = add i32 %i.0, 1, !dbg !2619
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2566, metadata !DIExpression()), !dbg !2568
  br label %for.cond, !dbg !2620, !llvm.loop !2621

for.end:                                          ; preds = %cond.end
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2623
  br label %if.end29, !dbg !2624

if.end29:                                         ; preds = %if.end17, %for.end
  %inits = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 8, !dbg !2625
  %15 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %inits, align 8, !dbg !2625
  %tobool30 = icmp eq %struct.VEC_tree_heap* %15, null, !dbg !2627
  br i1 %tobool30, label %if.end50, label %if.then31, !dbg !2628

if.then31:                                        ; preds = %if.end29
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !2629
  call void @llvm.dbg.value(metadata i32 0, metadata !2566, metadata !DIExpression()), !dbg !2568
  br label %for.cond33, !dbg !2631

for.cond33:                                       ; preds = %for.body44, %if.then31
  %i.1 = phi i32 [ 0, %if.then31 ], [ %inc47, %for.body44 ], !dbg !2633
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !2566, metadata !DIExpression()), !dbg !2568
  %16 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %inits, align 8, !dbg !2634
  %tobool35 = icmp eq %struct.VEC_tree_heap* %16, null, !dbg !2634
  br i1 %tobool35, label %cond.end40, label %cond.true36, !dbg !2634

cond.true36:                                      ; preds = %for.cond33
  %base38 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %16, i64 0, i32 0, !dbg !2634
  br label %cond.end40, !dbg !2634

cond.end40:                                       ; preds = %for.cond33, %cond.true36
  %cond41 = phi %struct.VEC_tree_base* [ %base38, %cond.true36 ], [ null, %for.cond33 ], !dbg !2634
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !2567, metadata !DIExpression(DW_OP_deref)), !dbg !2568
  %call42 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond41, i32 %i.1, %union.tree_node** nonnull %var) #7, !dbg !2634
  %tobool43 = icmp eq i32 %call42, 0, !dbg !2636
  br i1 %tobool43, label %for.end48, label %for.body44, !dbg !2636

for.body44:                                       ; preds = %cond.end40
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !2637
  %17 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !2639
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !2567, metadata !DIExpression()), !dbg !2568
  call void @print_generic_expr(%struct._IO_FILE* %file, %union.tree_node* %17, i32 2) #6, !dbg !2640
  %inc47 = add i32 %i.1, 1, !dbg !2641
  call void @llvm.dbg.value(metadata i32 %inc47, metadata !2566, metadata !DIExpression()), !dbg !2568
  br label %for.cond33, !dbg !2642, !llvm.loop !2643

for.end48:                                        ; preds = %cond.end40
  %call49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2645
  br label %if.end50, !dbg !2646

if.end50:                                         ; preds = %if.end29, %for.end48
  %call51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !2647
  call void @llvm.dbg.value(metadata i32 0, metadata !2566, metadata !DIExpression()), !dbg !2568
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 5, !dbg !2648
  br label %for.cond52, !dbg !2651

for.cond52:                                       ; preds = %for.body62, %if.end50
  %i.2 = phi i32 [ 0, %if.end50 ], [ %inc64, %for.body62 ], !dbg !2652
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !2566, metadata !DIExpression()), !dbg !2568
  %18 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !2653
  %tobool53 = icmp eq %struct.VEC_dref_heap* %18, null, !dbg !2653
  br i1 %tobool53, label %cond.end58, label %cond.true54, !dbg !2653

cond.true54:                                      ; preds = %for.cond52
  %base56 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %18, i64 0, i32 0, !dbg !2653
  br label %cond.end58, !dbg !2653

cond.end58:                                       ; preds = %for.cond52, %cond.true54
  %cond59 = phi %struct.VEC_dref_base* [ %base56, %cond.true54 ], [ null, %for.cond52 ], !dbg !2653
  call void @llvm.dbg.value(metadata %struct.dref_d** %a, metadata !2564, metadata !DIExpression(DW_OP_deref)), !dbg !2568
  %call60 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond59, i32 %i.2, %struct.dref_d** nonnull %a) #7, !dbg !2653
  %tobool61 = icmp eq i32 %call60, 0, !dbg !2654
  br i1 %tobool61, label %for.end65, label %for.body62, !dbg !2654

for.body62:                                       ; preds = %cond.end58
  %19 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !2655
  call void @llvm.dbg.value(metadata %struct.dref_d* %19, metadata !2564, metadata !DIExpression()), !dbg !2568
  call void @dump_dref(%struct._IO_FILE* %file, %struct.dref_d* %19) #7, !dbg !2656
  %inc64 = add i32 %i.2, 1, !dbg !2657
  call void @llvm.dbg.value(metadata i32 %inc64, metadata !2566, metadata !DIExpression()), !dbg !2568
  br label %for.cond52, !dbg !2658, !llvm.loop !2659

for.end65:                                        ; preds = %cond.end58
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2661
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2662
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2662
  ret void, !dbg !2662
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local i8* @op_symbol_code(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !2663 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !2669, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2670, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !2671, metadata !DIExpression()), !dbg !2672
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !2673
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2673

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !2673
  %0 = load i32, i32* %num, align 8, !dbg !2673
  %cmp = icmp ugt i32 %0, %ix_, !dbg !2673
  br i1 %cmp, label %if.then, label %if.else, !dbg !2675

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !2676
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2676
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !2676
  br label %return, !dbg !2676

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !2678

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !2680
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !2680
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !2680
  ret i32 %retval.0, !dbg !2675
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %vec_, i32 %ix_, %struct.dref_d** %ptr) unnamed_addr #0 !dbg !2681 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dref_base* %vec_, metadata !2688, metadata !DIExpression()), !dbg !2691
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2689, metadata !DIExpression()), !dbg !2691
  call void @llvm.dbg.value(metadata %struct.dref_d** %ptr, metadata !2690, metadata !DIExpression()), !dbg !2691
  %tobool = icmp eq %struct.VEC_dref_base* %vec_, null, !dbg !2692
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2692

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_dref_base, %struct.VEC_dref_base* %vec_, i64 0, i32 0, !dbg !2692
  %0 = load i32, i32* %num, align 8, !dbg !2692
  %cmp = icmp ugt i32 %0, %ix_, !dbg !2692
  br i1 %cmp, label %if.then, label %if.else, !dbg !2694

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !2695
  %arrayidx = getelementptr inbounds %struct.VEC_dref_base, %struct.VEC_dref_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2695
  %1 = load %struct.dref_d*, %struct.dref_d** %arrayidx, align 8, !dbg !2695
  br label %return, !dbg !2695

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !2697

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.dref_d* [ null, %if.else ], [ %1, %if.then ], !dbg !2699
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !2699
  store %struct.dref_d* %storemerge, %struct.dref_d** %ptr, align 8, !dbg !2699
  ret i32 %retval.0, !dbg !2694
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_chains(%struct._IO_FILE* %file, %struct.VEC_chain_p_heap* %chains) local_unnamed_addr #5 !dbg !2700 {
entry:
  %chain = alloca %struct.chain*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2704, metadata !DIExpression()), !dbg !2708
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %chains, metadata !2705, metadata !DIExpression()), !dbg !2708
  %0 = bitcast %struct.chain** %chain to i8*, !dbg !2709
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2709
  call void @llvm.dbg.value(metadata i32 0, metadata !2707, metadata !DIExpression()), !dbg !2708
  %base = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %chains, i64 0, i32 0, !dbg !2710
  br label %for.cond, !dbg !2713

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2714
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2707, metadata !DIExpression()), !dbg !2708
  call void @llvm.dbg.value(metadata %struct.chain** %chain, metadata !2706, metadata !DIExpression(DW_OP_deref)), !dbg !2708
  %call = call fastcc i32 @VEC_chain_p_base_iterate(%struct.VEC_chain_p_base* %base, i32 %i.0, %struct.chain** nonnull %chain) #7, !dbg !2715
  %tobool1 = icmp eq i32 %call, 0, !dbg !2716
  br i1 %tobool1, label %for.end, label %for.body, !dbg !2716

for.body:                                         ; preds = %for.cond
  %1 = load %struct.chain*, %struct.chain** %chain, align 8, !dbg !2717
  call void @llvm.dbg.value(metadata %struct.chain* %1, metadata !2706, metadata !DIExpression()), !dbg !2708
  call void @dump_chain(%struct._IO_FILE* %file, %struct.chain* %1) #7, !dbg !2718
  %inc = add i32 %i.0, 1, !dbg !2719
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2707, metadata !DIExpression()), !dbg !2708
  br label %for.cond, !dbg !2720, !llvm.loop !2721

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2723
  ret void, !dbg !2723
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_chain_p_base_iterate(%struct.VEC_chain_p_base* %vec_, i32 %ix_, %struct.chain** %ptr) unnamed_addr #0 !dbg !2724 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_base* %vec_, metadata !2731, metadata !DIExpression()), !dbg !2734
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2732, metadata !DIExpression()), !dbg !2734
  call void @llvm.dbg.value(metadata %struct.chain** %ptr, metadata !2733, metadata !DIExpression()), !dbg !2734
  %tobool = icmp eq %struct.VEC_chain_p_base* %vec_, null, !dbg !2735
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2735

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 0, !dbg !2735
  %0 = load i32, i32* %num, align 8, !dbg !2735
  %cmp = icmp ugt i32 %0, %ix_, !dbg !2735
  br i1 %cmp, label %if.then, label %if.else, !dbg !2737

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !2738
  %arrayidx = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2738
  %1 = load %struct.chain*, %struct.chain** %arrayidx, align 8, !dbg !2738
  br label %return, !dbg !2738

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !2740

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.chain* [ null, %if.else ], [ %1, %if.then ], !dbg !2742
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !2742
  store %struct.chain* %storemerge, %struct.chain** %ptr, align 8, !dbg !2742
  ret i32 %retval.0, !dbg !2737
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_component(%struct._IO_FILE* %file, %struct.component* %comp) local_unnamed_addr #5 !dbg !2743 {
entry:
  %a = alloca %struct.dref_d*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2747, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.value(metadata %struct.component* %comp, metadata !2748, metadata !DIExpression()), !dbg !2751
  %0 = bitcast %struct.dref_d** %a to i8*, !dbg !2752
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2752
  %comp_step = getelementptr inbounds %struct.component, %struct.component* %comp, i64 0, i32 1, !dbg !2753
  %1 = load i32, i32* %comp_step, align 8, !dbg !2753
  %cmp = icmp eq i32 %1, 0, !dbg !2754
  %cond = select i1 %cmp, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), !dbg !2755
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0), i8* %cond) #6, !dbg !2756
  call void @llvm.dbg.value(metadata i32 0, metadata !2750, metadata !DIExpression()), !dbg !2751
  %refs = getelementptr inbounds %struct.component, %struct.component* %comp, i64 0, i32 0, !dbg !2757
  br label %for.cond, !dbg !2760

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2761
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2750, metadata !DIExpression()), !dbg !2751
  %2 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !2762
  %tobool = icmp eq %struct.VEC_dref_heap* %2, null, !dbg !2762
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2762

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %2, i64 0, i32 0, !dbg !2762
  br label %cond.end, !dbg !2762

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond2 = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !2762
  call void @llvm.dbg.value(metadata %struct.dref_d** %a, metadata !2749, metadata !DIExpression(DW_OP_deref)), !dbg !2751
  %call3 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond2, i32 %i.0, %struct.dref_d** nonnull %a) #7, !dbg !2762
  %tobool4 = icmp eq i32 %call3, 0, !dbg !2763
  br i1 %tobool4, label %for.end, label %for.body, !dbg !2763

for.body:                                         ; preds = %cond.end
  %3 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !2764
  call void @llvm.dbg.value(metadata %struct.dref_d* %3, metadata !2749, metadata !DIExpression()), !dbg !2751
  call void @dump_dref(%struct._IO_FILE* %file, %struct.dref_d* %3) #7, !dbg !2765
  %inc = add i32 %i.0, 1, !dbg !2766
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2750, metadata !DIExpression()), !dbg !2751
  br label %for.cond, !dbg !2767, !llvm.loop !2768

for.end:                                          ; preds = %cond.end
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2770
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2771
  ret void, !dbg !2771
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_components(%struct._IO_FILE* %file, %struct.component* %comps) local_unnamed_addr #5 !dbg !2772 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2774, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.value(metadata %struct.component* %comps, metadata !2775, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.value(metadata %struct.component* %comps, metadata !2776, metadata !DIExpression()), !dbg !2777
  br label %for.cond, !dbg !2778

for.cond:                                         ; preds = %for.body, %entry
  %comp.0 = phi %struct.component* [ %comps, %entry ], [ %0, %for.body ], !dbg !2780
  call void @llvm.dbg.value(metadata %struct.component* %comp.0, metadata !2776, metadata !DIExpression()), !dbg !2777
  %tobool = icmp eq %struct.component* %comp.0, null, !dbg !2781
  br i1 %tobool, label %for.end, label %for.body, !dbg !2781

for.body:                                         ; preds = %for.cond
  tail call void @dump_component(%struct._IO_FILE* %file, %struct.component* nonnull %comp.0) #7, !dbg !2782
  %next = getelementptr inbounds %struct.component, %struct.component* %comp.0, i64 0, i32 2, !dbg !2784
  %0 = load %struct.component*, %struct.component** %next, align 8, !dbg !2784
  call void @llvm.dbg.value(metadata %struct.component* %0, metadata !2776, metadata !DIExpression()), !dbg !2777
  br label %for.cond, !dbg !2785, !llvm.loop !2786

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2788
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !2789 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2793, metadata !DIExpression()), !dbg !2795
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !2796
  %cmp = icmp eq i32 %call, 16, !dbg !2798
  br i1 %cmp, label %if.then, label %if.end9, !dbg !2799

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !2800
  %call2 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call1) #7, !dbg !2800
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !2794, metadata !DIExpression()), !dbg !2795
  %call3 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call2) #6, !dbg !2802
  %tobool = icmp eq i8 %call3, 0, !dbg !2802
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !2804

if.end:                                           ; preds = %if.then
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2805
  %bf.load = load i64, i64* %0, align 8, !dbg !2805
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2807
  %cmp5 = icmp eq i64 %bf.cast1, 141, !dbg !2807
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !2808

if.then6:                                         ; preds = %if.end
  %var7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2809
  %1 = bitcast i32* %var7 to %union.tree_node**, !dbg !2809
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !2809
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !2794, metadata !DIExpression()), !dbg !2795
  br label %if.end8, !dbg !2810

if.end8:                                          ; preds = %if.then6, %if.end
  %var.0 = phi %union.tree_node* [ %2, %if.then6 ], [ %call2, %if.end ], !dbg !2811
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !2794, metadata !DIExpression()), !dbg !2795
  tail call void @mark_sym_for_renaming(%union.tree_node* %var.0) #6, !dbg !2812
  br label %cleanup.cont, !dbg !2813

if.end9:                                          ; preds = %entry
  tail call fastcc void @update_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !2814
  %call10 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !2815
  %tobool11 = icmp eq %union.tree_node* %call10, null, !dbg !2815
  br i1 %tobool11, label %cleanup.cont, label %if.then12, !dbg !2817

if.then12:                                        ; preds = %if.end9
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2818
  %call13 = tail call fastcc %union.tree_node* @gimple_vop(%struct.function* %3) #7, !dbg !2819
  tail call void @mark_sym_for_renaming(%union.tree_node* %call13) #6, !dbg !2820
  br label %cleanup.cont, !dbg !2820

cleanup.cont:                                     ; preds = %if.then, %if.end9, %if.end8, %if.then12
  ret void, !dbg !2821
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !2822 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !2828, metadata !DIExpression()), !dbg !2829
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !2830
  ret %union.tree_node* %0, !dbg !2831
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2832 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2836, metadata !DIExpression()), !dbg !2837
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !2838
  ret %union.tree_node** %result, !dbg !2839
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @mark_sym_for_renaming(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !2840 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !2842, metadata !DIExpression()), !dbg !2843
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !2844
  %tobool = icmp eq i8 %call, 0, !dbg !2844
  br i1 %tobool, label %if.end, label %if.then, !dbg !2846

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !2847
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !2849
  br label %if.end, !dbg !2850

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !2851
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2852 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2856, metadata !DIExpression()), !dbg !2857
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !2858
  %tobool = icmp eq i8 %call, 0, !dbg !2858
  br i1 %tobool, label %return, label %if.end, !dbg !2860

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !2861
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !2861
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !2861
  br label %return, !dbg !2862

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !2857
  ret %union.tree_node* %retval.0, !dbg !2863
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vop(%struct.function* %fun) unnamed_addr #0 !dbg !2864 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !2870, metadata !DIExpression()), !dbg !2871
  %tobool = icmp eq %struct.function* %fun, null, !dbg !2872
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !2872

land.lhs.true:                                    ; preds = %entry
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !2872
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !2872
  %tobool1 = icmp eq %struct.gimple_df* %0, null, !dbg !2872
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !2872

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !2872
  %gimple_df2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !2871
  %.pre = load %struct.gimple_df*, %struct.gimple_df** %gimple_df2.phi.trans.insert, align 8, !dbg !2873
  br label %cond.end, !dbg !2872

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %1 = phi %struct.gimple_df* [ %0, %land.lhs.true ], [ %.pre, %cond.true ], !dbg !2873
  %vop = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 3, !dbg !2874
  %2 = load %union.tree_node*, %union.tree_node** %vop, align 8, !dbg !2874
  ret %union.tree_node* %2, !dbg !2875
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tree_predictive_commoning() local_unnamed_addr #5 !dbg !2876 {
entry:
  %loop = alloca %struct.loop*, align 8
  %li = alloca %struct.loop_iterator, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !2880, metadata !DIExpression()), !dbg !2889
  %0 = bitcast %struct.loop** %loop to i8*, !dbg !2890
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2890
  %1 = bitcast %struct.loop_iterator* %li to i8*, !dbg !2891
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2891
  call void @llvm.dbg.value(metadata i32 0, metadata !2888, metadata !DIExpression()), !dbg !2889
  tail call void @initialize_original_copy_tables() #6, !dbg !2892
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2881, metadata !DIExpression(DW_OP_deref)), !dbg !2889
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2882, metadata !DIExpression(DW_OP_deref)), !dbg !2889
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 4) #7, !dbg !2893
  br label %for.cond, !dbg !2893

for.cond:                                         ; preds = %for.inc, %entry
  %unrolled.0 = phi i8 [ 0, %entry ], [ %unrolled.1, %for.inc ], !dbg !2889
  call void @llvm.dbg.value(metadata i8 %unrolled.0, metadata !2880, metadata !DIExpression()), !dbg !2889
  %2 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2895
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !2881, metadata !DIExpression()), !dbg !2889
  %tobool = icmp eq %struct.loop* %2, null, !dbg !2893
  br i1 %tobool, label %for.end, label %for.body, !dbg !2893

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !2881, metadata !DIExpression()), !dbg !2889
  %call = call zeroext i8 @optimize_loop_for_speed_p(%struct.loop* nonnull %2) #6, !dbg !2897
  %tobool1 = icmp eq i8 %call, 0, !dbg !2897
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !2899

if.then:                                          ; preds = %for.body
  %3 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2900
  call void @llvm.dbg.value(metadata %struct.loop* %3, metadata !2881, metadata !DIExpression()), !dbg !2889
  %call2 = call fastcc zeroext i8 @tree_predictive_commoning_loop(%struct.loop* %3) #7, !dbg !2902
  %or1 = or i8 %unrolled.0, %call2, !dbg !2903
  call void @llvm.dbg.value(metadata i8 %or1, metadata !2880, metadata !DIExpression()), !dbg !2889
  br label %for.inc, !dbg !2904

for.inc:                                          ; preds = %for.body, %if.then
  %unrolled.1 = phi i8 [ %or1, %if.then ], [ %unrolled.0, %for.body ], !dbg !2889
  call void @llvm.dbg.value(metadata i8 %unrolled.1, metadata !2880, metadata !DIExpression()), !dbg !2889
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2881, metadata !DIExpression(DW_OP_deref)), !dbg !2889
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2882, metadata !DIExpression(DW_OP_deref)), !dbg !2889
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !2895
  br label %for.cond, !dbg !2895, !llvm.loop !2905

for.end:                                          ; preds = %for.cond
  %unrolled.0.lcssa = phi i8 [ %unrolled.0, %for.cond ], !dbg !2889
  call void @llvm.dbg.value(metadata i8 %unrolled.0.lcssa, metadata !2880, metadata !DIExpression()), !dbg !2889
  call void @llvm.dbg.value(metadata i8 %unrolled.0.lcssa, metadata !2880, metadata !DIExpression()), !dbg !2889
  call void @llvm.dbg.value(metadata i8 %unrolled.0.lcssa, metadata !2880, metadata !DIExpression()), !dbg !2889
  %tobool5 = icmp eq i8 %unrolled.0.lcssa, 0, !dbg !2907
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !2909

if.then6:                                         ; preds = %for.end
  call void @scev_reset() #6, !dbg !2910
  call void @llvm.dbg.value(metadata i32 32, metadata !2888, metadata !DIExpression()), !dbg !2889
  br label %if.end7, !dbg !2912

if.end7:                                          ; preds = %for.end, %if.then6
  %ret.0 = phi i32 [ 32, %if.then6 ], [ 0, %for.end ], !dbg !2889
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !2888, metadata !DIExpression()), !dbg !2889
  call void @free_original_copy_tables() #6, !dbg !2913
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2914
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2914
  ret i32 %ret.0, !dbg !2915
}

declare dso_local void @initialize_original_copy_tables() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_init(%struct.loop_iterator* %li, %struct.loop** %loop, i32 %flags) unnamed_addr #0 !dbg !2916 {
entry:
  %aloop = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2922, metadata !DIExpression()), !dbg !2928
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2923, metadata !DIExpression()), !dbg !2928
  call void @llvm.dbg.value(metadata i32 4, metadata !2924, metadata !DIExpression()), !dbg !2928
  %0 = bitcast %struct.loop** %aloop to i8*, !dbg !2929
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2929
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !2930
  store i32 0, i32* %idx, align 8, !dbg !2931
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2932
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 4, !dbg !2932
  %2 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !2932
  %tobool = icmp eq %struct.loops* %2, null, !dbg !2932
  br i1 %tobool, label %if.then, label %if.end, !dbg !2934

if.then:                                          ; preds = %entry
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !2935
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %to_visit, align 8, !dbg !2937
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !2938
  br label %cleanup, !dbg !2939

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @number_of_loops() #7, !dbg !2940
  %call1 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %call) #7, !dbg !2940
  %to_visit2 = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !2941
  store %struct.VEC_int_heap* %call1, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !2942
  call void @llvm.dbg.value(metadata i32 1, metadata !2927, metadata !DIExpression()), !dbg !2928
  br label %for.cond, !dbg !2943

for.cond:                                         ; preds = %if.end, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %if.end ], !dbg !2947
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2926, metadata !DIExpression()), !dbg !2928
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2948
  %x_current_loops8 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 4, !dbg !2948
  %4 = load %struct.loops*, %struct.loops** %x_current_loops8, align 8, !dbg !2948
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %4, i64 0, i32 1, !dbg !2948
  %5 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !2948
  %tobool9 = icmp eq %struct.VEC_loop_p_gc* %5, null, !dbg !2948
  br i1 %tobool9, label %cond.end, label %cond.true, !dbg !2948

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %5, i64 0, i32 0, !dbg !2948
  br label %cond.end, !dbg !2948

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond13 = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !2948
  call void @llvm.dbg.value(metadata %struct.loop** %aloop, metadata !2925, metadata !DIExpression(DW_OP_deref)), !dbg !2928
  %call14 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %cond13, i32 %i.0, %struct.loop** nonnull %aloop) #7, !dbg !2948
  %tobool15 = icmp eq i32 %call14, 0, !dbg !2943
  br i1 %tobool15, label %if.end114.loopexit2, label %for.body, !dbg !2943

for.body:                                         ; preds = %cond.end
  %6 = load %struct.loop*, %struct.loop** %aloop, align 8, !dbg !2950
  call void @llvm.dbg.value(metadata %struct.loop* %6, metadata !2925, metadata !DIExpression()), !dbg !2928
  %cmp = icmp eq %struct.loop* %6, null, !dbg !2952
  br i1 %cmp, label %for.inc, label %land.lhs.true, !dbg !2953

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.loop* %6, metadata !2925, metadata !DIExpression()), !dbg !2928
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %6, i64 0, i32 8, !dbg !2954
  %7 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !2954
  %cmp16 = icmp eq %struct.loop* %7, null, !dbg !2955
  br i1 %cmp16, label %land.lhs.true17, label %for.inc, !dbg !2956

land.lhs.true17:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.loop* %6, metadata !2925, metadata !DIExpression()), !dbg !2928
  %num = getelementptr inbounds %struct.loop, %struct.loop* %6, i64 0, i32 0, !dbg !2957
  %8 = load i32, i32* %num, align 8, !dbg !2957
  %cmp18 = icmp slt i32 %8, 1, !dbg !2958
  br i1 %cmp18, label %for.inc, label %if.then19, !dbg !2959

if.then19:                                        ; preds = %land.lhs.true17
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !2960
  %tobool21 = icmp eq %struct.VEC_int_heap* %9, null, !dbg !2960
  br i1 %tobool21, label %cond.end26, label %cond.true22, !dbg !2960

cond.true22:                                      ; preds = %if.then19
  %base24 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i64 0, i32 0, !dbg !2960
  br label %cond.end26, !dbg !2960

cond.end26:                                       ; preds = %if.then19, %cond.true22
  %cond27 = phi %struct.VEC_int_base* [ %base24, %cond.true22 ], [ null, %if.then19 ], !dbg !2960
  call void @llvm.dbg.value(metadata %struct.loop* %6, metadata !2925, metadata !DIExpression()), !dbg !2928
  %call29 = call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond27, i32 %8) #7, !dbg !2960
  br label %for.inc, !dbg !2960

for.inc:                                          ; preds = %land.lhs.true17, %for.body, %land.lhs.true, %cond.end26
  %inc = add i32 %i.0, 1, !dbg !2961
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2926, metadata !DIExpression()), !dbg !2928
  br label %for.cond, !dbg !2962, !llvm.loop !2963

if.end114.loopexit2:                              ; preds = %cond.end
  call fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) #7, !dbg !2965
  br label %cleanup, !dbg !2966

cleanup:                                          ; preds = %if.end114.loopexit2, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2966
  ret void, !dbg !2966
}

declare dso_local zeroext i8 @optimize_loop_for_speed_p(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @tree_predictive_commoning_loop(%struct.loop* %loop) unnamed_addr #5 !dbg !2967 {
entry:
  %datarefs = alloca %struct.VEC_data_reference_p_heap*, align 8
  %dependences = alloca %struct.VEC_ddr_p_heap*, align 8
  %chains = alloca %struct.VEC_chain_p_heap*, align 8
  %desc = alloca %struct.tree_niter_desc, align 8
  %dta = alloca %struct.epcc_data, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2971, metadata !DIExpression()), !dbg !3000
  %0 = bitcast %struct.VEC_data_reference_p_heap** %datarefs to i8*, !dbg !3001
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3001
  %1 = bitcast %struct.VEC_ddr_p_heap** %dependences to i8*, !dbg !3002
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3002
  %2 = bitcast %struct.VEC_chain_p_heap** %chains to i8*, !dbg !3003
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3003
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* null, metadata !2975, metadata !DIExpression()), !dbg !3000
  store %struct.VEC_chain_p_heap* null, %struct.VEC_chain_p_heap** %chains, align 8, !dbg !3004
  %3 = bitcast %struct.tree_niter_desc* %desc to i8*, !dbg !3005
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %3) #8, !dbg !3005
  call void @llvm.dbg.value(metadata i8 0, metadata !2993, metadata !DIExpression()), !dbg !3000
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3006
  %tobool = icmp eq %struct._IO_FILE* %4, null, !dbg !3006
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3008

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* @dump_flags, align 4, !dbg !3009
  %and = and i32 %5, 8, !dbg !3010
  %tobool1 = icmp eq i32 %and, 0, !dbg !3010
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3011

if.then:                                          ; preds = %land.lhs.true
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !3012
  %6 = load i32, i32* %num, align 8, !dbg !3012
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.28, i64 0, i64 0), i32 %6) #6, !dbg !3013
  br label %if.end, !dbg !3013

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call2 = tail call fastcc %struct.VEC_data_reference_p_heap* @VEC_data_reference_p_heap_alloc(i32 10) #7, !dbg !3014
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %call2, metadata !2972, metadata !DIExpression()), !dbg !3000
  store %struct.VEC_data_reference_p_heap* %call2, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !3015
  %call3 = tail call fastcc %struct.VEC_ddr_p_heap* @VEC_ddr_p_heap_alloc(i32 10) #7, !dbg !3016
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %call3, metadata !2973, metadata !DIExpression()), !dbg !3000
  store %struct.VEC_ddr_p_heap* %call3, %struct.VEC_ddr_p_heap** %dependences, align 8, !dbg !3017
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %datarefs, metadata !2972, metadata !DIExpression(DW_OP_deref)), !dbg !3000
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap** %dependences, metadata !2973, metadata !DIExpression(DW_OP_deref)), !dbg !3000
  %call4 = call zeroext i8 @compute_data_dependences_for_loop(%struct.loop* %loop, i8 zeroext 1, %struct.VEC_data_reference_p_heap** nonnull %datarefs, %struct.VEC_ddr_p_heap** nonnull %dependences) #6, !dbg !3018
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3019
  %tobool5 = icmp eq %struct._IO_FILE* %7, null, !dbg !3019
  br i1 %tobool5, label %if.end10, label %land.lhs.true6, !dbg !3021

land.lhs.true6:                                   ; preds = %if.end
  %8 = load i32, i32* @dump_flags, align 4, !dbg !3022
  %and7 = and i32 %8, 8, !dbg !3023
  %tobool8 = icmp eq i32 %and7, 0, !dbg !3023
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !3024

if.then9:                                         ; preds = %land.lhs.true6
  %9 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependences, align 8, !dbg !3025
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %9, metadata !2973, metadata !DIExpression()), !dbg !3000
  call void @dump_data_dependence_relations(%struct._IO_FILE* nonnull %7, %struct.VEC_ddr_p_heap* %9) #6, !dbg !3026
  br label %if.end10, !dbg !3026

if.end10:                                         ; preds = %land.lhs.true6, %if.end, %if.then9
  %10 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !3027
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %10, metadata !2972, metadata !DIExpression()), !dbg !3000
  %11 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependences, align 8, !dbg !3028
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %11, metadata !2973, metadata !DIExpression()), !dbg !3000
  %call11 = call fastcc %struct.component* @split_data_refs_to_components(%struct.loop* %loop, %struct.VEC_data_reference_p_heap* %10, %struct.VEC_ddr_p_heap* %11) #7, !dbg !3029
  call void @llvm.dbg.value(metadata %struct.component* %call11, metadata !2974, metadata !DIExpression()), !dbg !3000
  %12 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependences, align 8, !dbg !3030
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %12, metadata !2973, metadata !DIExpression()), !dbg !3000
  call void @free_dependence_relations(%struct.VEC_ddr_p_heap* %12) #6, !dbg !3031
  %tobool12 = icmp eq %struct.component* %call11, null, !dbg !3032
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !3034

if.then13:                                        ; preds = %if.end10
  %13 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !3035
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %13, metadata !2972, metadata !DIExpression()), !dbg !3000
  call void @free_data_refs(%struct.VEC_data_reference_p_heap* %13) #6, !dbg !3037
  br label %cleanup, !dbg !3038

if.end14:                                         ; preds = %if.end10
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3039
  %tobool15 = icmp eq %struct._IO_FILE* %14, null, !dbg !3039
  br i1 %tobool15, label %if.end21, label %land.lhs.true16, !dbg !3041

land.lhs.true16:                                  ; preds = %if.end14
  %15 = load i32, i32* @dump_flags, align 4, !dbg !3042
  %and17 = and i32 %15, 8, !dbg !3043
  %tobool18 = icmp eq i32 %and17, 0, !dbg !3043
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !3044

if.then19:                                        ; preds = %land.lhs.true16
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !3045
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3047
  call void @dump_components(%struct._IO_FILE* %16, %struct.component* nonnull %call11) #7, !dbg !3048
  br label %if.end21, !dbg !3049

if.end21:                                         ; preds = %land.lhs.true16, %if.end14, %if.then19
  %call22 = call fastcc %struct.component* @filter_suitable_components(%struct.loop* %loop, %struct.component* nonnull %call11) #7, !dbg !3050
  call void @llvm.dbg.value(metadata %struct.component* %call22, metadata !2974, metadata !DIExpression()), !dbg !3000
  %call23 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3051
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call23, metadata !2995, metadata !DIExpression()), !dbg !3000
  %call24 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3052
  store %struct.bitmap_head_def* %call24, %struct.bitmap_head_def** @looparound_phis, align 8, !dbg !3053
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap** %chains, metadata !2975, metadata !DIExpression(DW_OP_deref)), !dbg !3000
  call fastcc void @determine_roots(%struct.loop* %loop, %struct.component* %call22, %struct.VEC_chain_p_heap** nonnull %chains) #7, !dbg !3054
  call fastcc void @release_components(%struct.component* %call22) #7, !dbg !3055
  %17 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %chains, align 8, !dbg !3056
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %17, metadata !2975, metadata !DIExpression()), !dbg !3000
  %tobool25 = icmp eq %struct.VEC_chain_p_heap* %17, null, !dbg !3056
  br i1 %tobool25, label %if.then26, label %if.end34, !dbg !3058

if.then26:                                        ; preds = %if.end21
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3059
  %tobool27 = icmp eq %struct._IO_FILE* %18, null, !dbg !3059
  br i1 %tobool27, label %end, label %land.lhs.true28, !dbg !3062

land.lhs.true28:                                  ; preds = %if.then26
  %19 = load i32, i32* @dump_flags, align 4, !dbg !3063
  %and29 = and i32 %19, 8, !dbg !3064
  %tobool30 = icmp eq i32 %and29, 0, !dbg !3064
  br i1 %tobool30, label %end, label %if.then31, !dbg !3065

if.then31:                                        ; preds = %land.lhs.true28
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %18, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !3066
  br label %end, !dbg !3066

if.end34:                                         ; preds = %if.end21
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %17, metadata !2975, metadata !DIExpression()), !dbg !3000
  call fastcc void @prepare_initializers(%struct.loop* %loop, %struct.VEC_chain_p_heap* nonnull %17) #7, !dbg !3067
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap** %chains, metadata !2975, metadata !DIExpression(DW_OP_deref)), !dbg !3000
  call fastcc void @try_combine_chains(%struct.VEC_chain_p_heap** nonnull %chains) #7, !dbg !3068
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3069
  %tobool35 = icmp eq %struct._IO_FILE* %20, null, !dbg !3069
  br i1 %tobool35, label %if.end41, label %land.lhs.true36, !dbg !3071

land.lhs.true36:                                  ; preds = %if.end34
  %21 = load i32, i32* @dump_flags, align 4, !dbg !3072
  %and37 = and i32 %21, 8, !dbg !3073
  %tobool38 = icmp eq i32 %and37, 0, !dbg !3073
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !3074

if.then39:                                        ; preds = %land.lhs.true36
  %call40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %20, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !3075
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3077
  %23 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %chains, align 8, !dbg !3078
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %23, metadata !2975, metadata !DIExpression()), !dbg !3000
  call void @dump_chains(%struct._IO_FILE* %22, %struct.VEC_chain_p_heap* %23) #7, !dbg !3079
  br label %if.end41, !dbg !3080

if.end41:                                         ; preds = %land.lhs.true36, %if.end34, %if.then39
  %24 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %chains, align 8, !dbg !3081
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %24, metadata !2975, metadata !DIExpression()), !dbg !3000
  %call42 = call fastcc i32 @determine_unroll_factor(%struct.VEC_chain_p_heap* %24) #7, !dbg !3082
  call void @llvm.dbg.value(metadata i32 %call42, metadata !2976, metadata !DIExpression()), !dbg !3000
  call void @scev_reset() #6, !dbg !3083
  %cmp = icmp ugt i32 %call42, 1, !dbg !3084
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3085

land.rhs:                                         ; preds = %if.end41
  call void @llvm.dbg.value(metadata %struct.tree_niter_desc* %desc, metadata !2977, metadata !DIExpression(DW_OP_deref)), !dbg !3000
  %call43 = call zeroext i8 @can_unroll_loop_p(%struct.loop* %loop, i32 %call42, %struct.tree_niter_desc* nonnull %desc) #6, !dbg !3086
  %tobool44 = icmp ne i8 %call43, 0, !dbg !3085
  %phitmp = zext i1 %tobool44 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end41
  %25 = phi i8 [ 0, %if.end41 ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %25, metadata !2993, metadata !DIExpression()), !dbg !3000
  %call46 = call %struct.edge_def* @single_dom_exit(%struct.loop* %loop) #6, !dbg !3087
  call void @llvm.dbg.value(metadata %struct.edge_def* %call46, metadata !2994, metadata !DIExpression()), !dbg !3000
  %tobool47 = icmp eq i8 %25, 0, !dbg !3088
  br i1 %tobool47, label %if.else, label %if.then48, !dbg !3089

if.then48:                                        ; preds = %land.end
  %26 = bitcast %struct.epcc_data* %dta to i8*, !dbg !3090
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8, !dbg !3090
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3091
  %tobool49 = icmp eq %struct._IO_FILE* %27, null, !dbg !3091
  br i1 %tobool49, label %if.end55, label %land.lhs.true50, !dbg !3093

land.lhs.true50:                                  ; preds = %if.then48
  %28 = load i32, i32* @dump_flags, align 4, !dbg !3094
  %and51 = and i32 %28, 8, !dbg !3095
  %tobool52 = icmp eq i32 %and51, 0, !dbg !3095
  br i1 %tobool52, label %if.end55, label %if.then53, !dbg !3096

if.then53:                                        ; preds = %land.lhs.true50
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %27, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i64 0, i64 0), i32 %call42) #6, !dbg !3097
  br label %if.end55, !dbg !3097

if.end55:                                         ; preds = %land.lhs.true50, %if.then48, %if.then53
  %29 = bitcast %struct.VEC_chain_p_heap** %chains to i64*, !dbg !3098
  %30 = load i64, i64* %29, align 8, !dbg !3098
  %31 = bitcast %struct.epcc_data* %dta to i64*, !dbg !3099
  store i64 %30, i64* %31, align 8, !dbg !3099
  %tmp_vars57 = getelementptr inbounds %struct.epcc_data, %struct.epcc_data* %dta, i64 0, i32 1, !dbg !3100
  store %struct.bitmap_head_def* %call23, %struct.bitmap_head_def** %tmp_vars57, align 8, !dbg !3101
  call void @update_ssa(i32 16384) #6, !dbg !3102
  %32 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %chains, align 8, !dbg !3103
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %32, metadata !2975, metadata !DIExpression()), !dbg !3000
  call fastcc void @replace_phis_by_defined_names(%struct.VEC_chain_p_heap* %32) #7, !dbg !3104
  call void @llvm.dbg.value(metadata %struct.tree_niter_desc* %desc, metadata !2977, metadata !DIExpression(DW_OP_deref)), !dbg !3000
  call void @tree_transform_and_unroll_loop(%struct.loop* %loop, i32 %call42, %struct.edge_def* %call46, %struct.tree_niter_desc* nonnull %desc, void (%struct.loop*, i8*)* nonnull @execute_pred_commoning_cbck, i8* nonnull %26) #6, !dbg !3105
  call fastcc void @eliminate_temp_copies(%struct.loop* %loop, %struct.bitmap_head_def* %call23) #7, !dbg !3106
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8, !dbg !3107
  br label %end, !dbg !3108

if.else:                                          ; preds = %land.end
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3109
  %tobool58 = icmp eq %struct._IO_FILE* %33, null, !dbg !3109
  br i1 %tobool58, label %if.end64, label %land.lhs.true59, !dbg !3112

land.lhs.true59:                                  ; preds = %if.else
  %34 = load i32, i32* @dump_flags, align 4, !dbg !3113
  %and60 = and i32 %34, 8, !dbg !3114
  %tobool61 = icmp eq i32 %and60, 0, !dbg !3114
  br i1 %tobool61, label %if.end64, label %if.then62, !dbg !3115

if.then62:                                        ; preds = %land.lhs.true59
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %33, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !3116
  br label %if.end64, !dbg !3116

if.end64:                                         ; preds = %land.lhs.true59, %if.else, %if.then62
  %35 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %chains, align 8, !dbg !3117
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %35, metadata !2975, metadata !DIExpression()), !dbg !3000
  call fastcc void @execute_pred_commoning(%struct.loop* %loop, %struct.VEC_chain_p_heap* %35, %struct.bitmap_head_def* %call23) #7, !dbg !3118
  br label %end

end:                                              ; preds = %land.lhs.true28, %if.then26, %if.end55, %if.end64, %if.then31
  %unroll.0 = phi i8 [ 0, %if.then31 ], [ 0, %land.lhs.true28 ], [ 0, %if.then26 ], [ 0, %if.end64 ], [ %25, %if.end55 ], !dbg !3000
  call void @llvm.dbg.value(metadata i8 %unroll.0, metadata !2993, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.label(metadata !2999), !dbg !3119
  %36 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %chains, align 8, !dbg !3120
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %36, metadata !2975, metadata !DIExpression()), !dbg !3000
  call fastcc void @release_chains(%struct.VEC_chain_p_heap* %36) #7, !dbg !3121
  %37 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !3122
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %37, metadata !2972, metadata !DIExpression()), !dbg !3000
  call void @free_data_refs(%struct.VEC_data_reference_p_heap* %37) #6, !dbg !3123
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call23) #6, !dbg !3124
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2995, metadata !DIExpression()), !dbg !3000
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @looparound_phis, align 8, !dbg !3125
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %38) #6, !dbg !3125
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @looparound_phis, align 8, !dbg !3125
  call void @free_affine_expand_cache(%struct.pointer_map_t** nonnull @name_expansions) #6, !dbg !3126
  br label %cleanup, !dbg !3127

cleanup:                                          ; preds = %end, %if.then13
  %retval.0 = phi i8 [ %unroll.0, %end ], [ 0, %if.then13 ], !dbg !3000
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %3) #8, !dbg !3128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3128
  ret i8 %retval.0, !dbg !3128
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) unnamed_addr #0 !dbg !3129 {
entry:
  %anum = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3133, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3134, metadata !DIExpression()), !dbg !3136
  %0 = bitcast i32* %anum to i8*, !dbg !3137
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3137
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3136
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !3136
  br label %while.cond, !dbg !3138

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit, align 8, !dbg !3139
  %tobool = icmp eq %struct.VEC_int_heap* %1, null, !dbg !3139
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3139

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !3139
  br label %cond.end, !dbg !3139

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !3139
  %2 = load i32, i32* %idx, align 8, !dbg !3139
  call void @llvm.dbg.value(metadata i32* %anum, metadata !3135, metadata !DIExpression(DW_OP_deref)), !dbg !3136
  %call = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %cond, i32 %2, i32* nonnull %anum) #7, !dbg !3139
  %tobool2 = icmp eq i32 %call, 0, !dbg !3138
  br i1 %tobool2, label %while.end, label %while.body, !dbg !3138

while.body:                                       ; preds = %cond.end
  %3 = load i32, i32* %idx, align 8, !dbg !3140
  %inc = add i32 %3, 1, !dbg !3140
  store i32 %inc, i32* %idx, align 8, !dbg !3140
  %4 = load i32, i32* %anum, align 4, !dbg !3142
  call void @llvm.dbg.value(metadata i32 %4, metadata !3135, metadata !DIExpression()), !dbg !3136
  %call4 = call fastcc %struct.loop* @get_loop(i32 %4) #7, !dbg !3143
  store %struct.loop* %call4, %struct.loop** %loop, align 8, !dbg !3144
  %tobool5 = icmp eq %struct.loop* %call4, null, !dbg !3145
  br i1 %tobool5, label %while.cond, label %cleanup.loopexit, !dbg !3147, !llvm.loop !3148

while.end:                                        ; preds = %cond.end
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %to_visit) #7, !dbg !3150
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !3151
  br label %cleanup, !dbg !3152

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !3152

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3152
  ret void, !dbg !3152
}

declare dso_local void @scev_reset() local_unnamed_addr #2

declare dso_local void @free_original_copy_tables() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3153 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3157, metadata !DIExpression()), !dbg !3158
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3159
  %cmp = icmp eq i32 %call, 0, !dbg !3160
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !3161

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3162
  %cmp2 = icmp ult i32 %call1, 10, !dbg !3163
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !3164
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3165 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3167, metadata !DIExpression()), !dbg !3168
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3169
  %cmp = icmp ugt i32 %call, 5, !dbg !3170
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3171

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3172
  %cmp2 = icmp ult i32 %call1, 10, !dbg !3173
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !3174
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3175 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3179, metadata !DIExpression()), !dbg !3180
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #6, !dbg !3181
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !3181
  ret %struct.VEC_int_heap* %0, !dbg !3181
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @number_of_loops() unnamed_addr #0 !dbg !3182 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3183
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !3183
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3183
  %tobool = icmp eq %struct.loops* %1, null, !dbg !3183
  br i1 %tobool, label %return, label %if.end, !dbg !3185

if.end:                                           ; preds = %entry
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !3186
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !3186
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !3186
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3186

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !3186
  br label %cond.end, !dbg !3186

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3186
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !3186
  br label %return, !dbg !3187

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ %call, %cond.end ], [ 0, %entry ], !dbg !3188
  ret i32 %retval.0, !dbg !3189
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !3190 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !3196, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3197, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.value(metadata %struct.loop** %ptr, metadata !3198, metadata !DIExpression()), !dbg !3199
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !3200
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3200

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !3200
  %0 = load i32, i32* %num, align 8, !dbg !3200
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3200
  br i1 %cmp, label %if.then, label %if.else, !dbg !3202

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3203
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3203
  %1 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !3203
  br label %return, !dbg !3203

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3205

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.loop* [ null, %if.else ], [ %1, %if.then ], !dbg !3207
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3207
  store %struct.loop* %storemerge, %struct.loop** %ptr, align 8, !dbg !3207
  ret i32 %retval.0, !dbg !3202
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !3208 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !3213, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !3214, metadata !DIExpression()), !dbg !3216
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !3217
  %0 = load i32, i32* %num1, align 4, !dbg !3217
  %inc = add i32 %0, 1, !dbg !3217
  store i32 %inc, i32* %num1, align 4, !dbg !3217
  %idxprom = zext i32 %0 to i64, !dbg !3217
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3217
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !3215, metadata !DIExpression()), !dbg !3216
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !3217
  ret i32* %arrayidx, !dbg !3217
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !3218 {
entry:
  unreachable, !dbg !3226
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !3227 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !3231, metadata !DIExpression()), !dbg !3232
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !3233
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3233

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !3233
  %0 = load i32, i32* %num, align 8, !dbg !3233
  br label %cond.end, !dbg !3233

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3233
  ret i32 %cond, !dbg !3233
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3234 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !3238, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3239, metadata !DIExpression()), !dbg !3240
  br label %land.end, !dbg !3241

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3241
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3241
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !3241
  ret %struct.loop* %0, !dbg !3241
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_data_reference_p_heap* @VEC_data_reference_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3242 {
entry:
  call void @llvm.dbg.value(metadata i32 10, metadata !3246, metadata !DIExpression()), !dbg !3247
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 10) #6, !dbg !3248
  %0 = bitcast i8* %call to %struct.VEC_data_reference_p_heap*, !dbg !3248
  ret %struct.VEC_data_reference_p_heap* %0, !dbg !3248
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_ddr_p_heap* @VEC_ddr_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3249 {
entry:
  call void @llvm.dbg.value(metadata i32 10, metadata !3253, metadata !DIExpression()), !dbg !3254
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 10) #6, !dbg !3255
  %0 = bitcast i8* %call to %struct.VEC_ddr_p_heap*, !dbg !3255
  ret %struct.VEC_ddr_p_heap* %0, !dbg !3255
}

declare dso_local zeroext i8 @compute_data_dependences_for_loop(%struct.loop*, i8 zeroext, %struct.VEC_data_reference_p_heap**, %struct.VEC_ddr_p_heap**) local_unnamed_addr #2

declare dso_local void @dump_data_dependence_relations(%struct._IO_FILE*, %struct.VEC_ddr_p_heap*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.component* @split_data_refs_to_components(%struct.loop* %loop, %struct.VEC_data_reference_p_heap* %datarefs, %struct.VEC_ddr_p_heap* %depends) unnamed_addr #5 !dbg !3256 {
entry:
  %dr = alloca %struct.data_reference*, align 8
  %ddr = alloca %struct.data_dependence_relation*, align 8
  %dummy = alloca i32, align 4
  %dummy_off = alloca %struct.double_int, align 8
  %tmp = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3260, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %datarefs, metadata !3261, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %depends, metadata !3262, metadata !DIExpression()), !dbg !3289
  %base = getelementptr inbounds %struct.VEC_data_reference_p_heap, %struct.VEC_data_reference_p_heap* %datarefs, i64 0, i32 0, !dbg !3290
  %call = tail call fastcc i32 @VEC_data_reference_p_base_length(%struct.VEC_data_reference_p_base* %base) #7, !dbg !3290
  call void @llvm.dbg.value(metadata i32 %call, metadata !3264, metadata !DIExpression()), !dbg !3289
  %add = add i32 %call, 1, !dbg !3291
  %conv = zext i32 %add to i64, !dbg !3291
  %mul = shl nuw nsw i64 %conv, 2, !dbg !3291
  %call1 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !3291
  %0 = bitcast i8* %call1 to i32*, !dbg !3291
  call void @llvm.dbg.value(metadata i32* %0, metadata !3269, metadata !DIExpression()), !dbg !3289
  %call5 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !3292
  %1 = bitcast i8* %call5 to i32*, !dbg !3292
  call void @llvm.dbg.value(metadata i32* %1, metadata !3270, metadata !DIExpression()), !dbg !3289
  %2 = bitcast %struct.data_reference** %dr to i8*, !dbg !3293
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3293
  %3 = bitcast %struct.data_dependence_relation** %ddr to i8*, !dbg !3294
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !3294
  call void @llvm.dbg.value(metadata %struct.component* null, metadata !3276, metadata !DIExpression()), !dbg !3289
  %call6 = tail call fastcc %struct.basic_block_def* @last_always_executed_block(%struct.loop* %loop) #7, !dbg !3295
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call6, metadata !3279, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i32 0, metadata !3263, metadata !DIExpression()), !dbg !3289
  br label %for.cond, !dbg !3296

for.cond:                                         ; preds = %if.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %if.end ], !dbg !3298
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3263, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata %struct.data_reference** %dr, metadata !3272, metadata !DIExpression(DW_OP_deref)), !dbg !3289
  %call13 = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %i.0, %struct.data_reference** nonnull %dr) #7, !dbg !3299
  %tobool14 = icmp eq i32 %call13, 0, !dbg !3301
  br i1 %tobool14, label %for.end, label %for.body, !dbg !3301

for.body:                                         ; preds = %for.cond
  %4 = load %struct.data_reference*, %struct.data_reference** %dr, align 8, !dbg !3302
  call void @llvm.dbg.value(metadata %struct.data_reference* %4, metadata !3272, metadata !DIExpression()), !dbg !3289
  %ref = getelementptr inbounds %struct.data_reference, %struct.data_reference* %4, i64 0, i32 1, !dbg !3302
  %5 = load %union.tree_node*, %union.tree_node** %ref, align 8, !dbg !3302
  %tobool15 = icmp eq %union.tree_node* %5, null, !dbg !3302
  br i1 %tobool15, label %end.loopexit, label %if.end, !dbg !3305

if.end:                                           ; preds = %for.body
  %conv16 = zext i32 %i.0 to i64, !dbg !3306
  %6 = inttoptr i64 %conv16 to i8*, !dbg !3307
  call void @llvm.dbg.value(metadata %struct.data_reference* %4, metadata !3272, metadata !DIExpression()), !dbg !3289
  %aux = getelementptr inbounds %struct.data_reference, %struct.data_reference* %4, i64 0, i32 2, !dbg !3308
  store i8* %6, i8** %aux, align 8, !dbg !3309
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %conv16, !dbg !3310
  store i32 %i.0, i32* %arrayidx, align 4, !dbg !3311
  %arrayidx18 = getelementptr inbounds i32, i32* %1, i64 %conv16, !dbg !3312
  store i32 1, i32* %arrayidx18, align 4, !dbg !3313
  %inc = add i32 %i.0, 1, !dbg !3314
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3263, metadata !DIExpression()), !dbg !3289
  br label %for.cond, !dbg !3315, !llvm.loop !3316

for.end:                                          ; preds = %for.cond
  %idxprom19 = zext i32 %call to i64, !dbg !3318
  %arrayidx20 = getelementptr inbounds i32, i32* %0, i64 %idxprom19, !dbg !3318
  store i32 %call, i32* %arrayidx20, align 4, !dbg !3319
  %arrayidx22 = getelementptr inbounds i32, i32* %1, i64 %idxprom19, !dbg !3320
  store i32 1, i32* %arrayidx22, align 4, !dbg !3321
  call void @llvm.dbg.value(metadata i32 0, metadata !3263, metadata !DIExpression()), !dbg !3289
  %7 = bitcast i32* %dummy to i8*, !dbg !3322
  br label %for.cond23, !dbg !3323

for.cond23:                                       ; preds = %if.end38, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc40, %if.end38 ], !dbg !3324
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3263, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata %struct.data_reference** %dr, metadata !3272, metadata !DIExpression(DW_OP_deref)), !dbg !3289
  %call30 = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %i.1, %struct.data_reference** nonnull %dr) #7, !dbg !3325
  %tobool31 = icmp eq i32 %call30, 0, !dbg !3326
  br i1 %tobool31, label %for.cond42.preheader, label %for.body32, !dbg !3326

for.cond42.preheader:                             ; preds = %for.cond23
  %base45 = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %depends, i64 0, i32 0, !dbg !3327
  %8 = bitcast %struct.double_int* %dummy_off to i8*, !dbg !3328
  br label %for.cond42, !dbg !3329

for.body32:                                       ; preds = %for.cond23
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8, !dbg !3330
  %9 = load %struct.data_reference*, %struct.data_reference** %dr, align 8, !dbg !3331
  call void @llvm.dbg.value(metadata %struct.data_reference* %9, metadata !3272, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i32* %dummy, metadata !3280, metadata !DIExpression(DW_OP_deref)), !dbg !3322
  %call33 = call fastcc zeroext i8 @suitable_reference_p(%struct.data_reference* %9, i32* nonnull %dummy) #7, !dbg !3333
  %tobool34 = icmp eq i8 %call33, 0, !dbg !3333
  br i1 %tobool34, label %if.then35, label %if.end38, !dbg !3334

if.then35:                                        ; preds = %for.body32
  %10 = load %struct.data_reference*, %struct.data_reference** %dr, align 8, !dbg !3335
  call void @llvm.dbg.value(metadata %struct.data_reference* %10, metadata !3272, metadata !DIExpression()), !dbg !3289
  %aux36 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %10, i64 0, i32 2, !dbg !3337
  %11 = bitcast i8** %aux36 to i64*, !dbg !3337
  %12 = load i64, i64* %11, align 8, !dbg !3337
  %conv37 = trunc i64 %12 to i32, !dbg !3338
  call void @llvm.dbg.value(metadata i32 %conv37, metadata !3266, metadata !DIExpression()), !dbg !3289
  call fastcc void @merge_comps(i32* %0, i32* %1, i32 %call, i32 %conv37) #7, !dbg !3339
  br label %if.end38, !dbg !3340

if.end38:                                         ; preds = %for.body32, %if.then35
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8, !dbg !3341
  %inc40 = add i32 %i.1, 1, !dbg !3342
  call void @llvm.dbg.value(metadata i32 %inc40, metadata !3263, metadata !DIExpression()), !dbg !3289
  br label %for.cond23, !dbg !3343, !llvm.loop !3344

for.cond42:                                       ; preds = %for.cond42.preheader, %cleanup
  %i.2 = phi i32 [ %inc82, %cleanup ], [ 0, %for.cond42.preheader ], !dbg !3346
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !3263, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ddr, metadata !3275, metadata !DIExpression(DW_OP_deref)), !dbg !3289
  %call49 = call fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %base45, i32 %i.2, %struct.data_dependence_relation** nonnull %ddr) #7, !dbg !3347
  %tobool50 = icmp eq i32 %call49, 0, !dbg !3329
  br i1 %tobool50, label %for.end83, label %for.body51, !dbg !3329

for.body51:                                       ; preds = %for.cond42
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !3348
  %13 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !3349
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %13, metadata !3275, metadata !DIExpression()), !dbg !3289
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %13, i64 0, i32 2, !dbg !3349
  %14 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !3349
  %15 = load %union.tree_node*, %union.tree_node** @chrec_known, align 8, !dbg !3351
  %cmp = icmp eq %union.tree_node* %14, %15, !dbg !3352
  br i1 %cmp, label %cleanup, label %if.end54, !dbg !3353

if.end54:                                         ; preds = %for.body51
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %13, metadata !3275, metadata !DIExpression()), !dbg !3289
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %13, i64 0, i32 0, !dbg !3354
  %16 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !3354
  call void @llvm.dbg.value(metadata %struct.data_reference* %16, metadata !3273, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %13, metadata !3275, metadata !DIExpression()), !dbg !3289
  %b = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %13, i64 0, i32 1, !dbg !3355
  %17 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !3355
  call void @llvm.dbg.value(metadata %struct.data_reference* %17, metadata !3274, metadata !DIExpression()), !dbg !3289
  %aux55 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %16, i64 0, i32 2, !dbg !3356
  %18 = bitcast i8** %aux55 to i64*, !dbg !3356
  %19 = load i64, i64* %18, align 8, !dbg !3356
  %conv56 = trunc i64 %19 to i32, !dbg !3357
  %call57 = call fastcc i32 @component_of(i32* %0, i32 %conv56) #7, !dbg !3358
  call void @llvm.dbg.value(metadata i32 %call57, metadata !3266, metadata !DIExpression()), !dbg !3289
  %aux58 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %17, i64 0, i32 2, !dbg !3359
  %20 = bitcast i8** %aux58 to i64*, !dbg !3359
  %21 = load i64, i64* %20, align 8, !dbg !3359
  %conv59 = trunc i64 %21 to i32, !dbg !3360
  %call60 = call fastcc i32 @component_of(i32* %0, i32 %conv59) #7, !dbg !3361
  call void @llvm.dbg.value(metadata i32 %call60, metadata !3267, metadata !DIExpression()), !dbg !3289
  %cmp61 = icmp eq i32 %call57, %call60, !dbg !3362
  br i1 %cmp61, label %cleanup, label %if.end64, !dbg !3364

if.end64:                                         ; preds = %if.end54
  %call65 = call fastcc i32 @component_of(i32* %0, i32 %call) #7, !dbg !3365
  call void @llvm.dbg.value(metadata i32 %call65, metadata !3268, metadata !DIExpression()), !dbg !3289
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %16, i64 0, i32 3, !dbg !3366
  %22 = load i8, i8* %is_read, align 8, !dbg !3366
  %tobool67 = icmp eq i8 %22, 0, !dbg !3366
  br i1 %tobool67, label %if.end80, label %land.lhs.true, !dbg !3368

land.lhs.true:                                    ; preds = %if.end64
  %is_read68 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %17, i64 0, i32 3, !dbg !3369
  %23 = load i8, i8* %is_read68, align 8, !dbg !3369
  %tobool70 = icmp eq i8 %23, 0, !dbg !3369
  br i1 %tobool70, label %if.end80, label %land.lhs.true71, !dbg !3370

land.lhs.true71:                                  ; preds = %land.lhs.true
  %cmp72 = icmp eq i32 %call57, %call65, !dbg !3371
  %cmp74 = icmp eq i32 %call60, %call65, !dbg !3372
  %or.cond = or i1 %cmp72, %cmp74, !dbg !3373
  br i1 %or.cond, label %cleanup, label %lor.lhs.false76, !dbg !3373

lor.lhs.false76:                                  ; preds = %land.lhs.true71
  call void @llvm.dbg.value(metadata %struct.double_int* %dummy_off, metadata !3284, metadata !DIExpression(DW_OP_deref)), !dbg !3328
  %call77 = call fastcc zeroext i8 @determine_offset(%struct.data_reference* %16, %struct.data_reference* %17, %struct.double_int* nonnull %dummy_off) #7, !dbg !3374
  %tobool78 = icmp eq i8 %call77, 0, !dbg !3374
  br i1 %tobool78, label %cleanup, label %if.end80, !dbg !3375

if.end80:                                         ; preds = %lor.lhs.false76, %land.lhs.true, %if.end64
  call fastcc void @merge_comps(i32* %0, i32* %1, i32 %call57, i32 %call60) #7, !dbg !3376
  br label %cleanup, !dbg !3377

cleanup:                                          ; preds = %lor.lhs.false76, %land.lhs.true71, %if.end54, %for.body51, %if.end80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !3377
  %inc82 = add i32 %i.2, 1, !dbg !3378
  call void @llvm.dbg.value(metadata i32 %inc82, metadata !3263, metadata !DIExpression()), !dbg !3289
  br label %for.cond42, !dbg !3379, !llvm.loop !3380

for.end83:                                        ; preds = %for.cond42
  %call85 = call i8* @xcalloc(i64 %idxprom19, i64 8) #6, !dbg !3382
  %24 = bitcast i8* %call85 to %struct.component**, !dbg !3382
  call void @llvm.dbg.value(metadata %struct.component** %24, metadata !3271, metadata !DIExpression()), !dbg !3289
  %call86 = call fastcc i32 @component_of(i32* %0, i32 %call) #7, !dbg !3383
  call void @llvm.dbg.value(metadata i32 %call86, metadata !3268, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i32 0, metadata !3263, metadata !DIExpression()), !dbg !3289
  %25 = bitcast %struct.data_reference** %dr to i64*, !dbg !3384
  %26 = bitcast %struct.data_reference** %dr to i64**, !dbg !3384
  %27 = bitcast %struct.double_int* %tmp to i8*, !dbg !3384
  %28 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 0, !dbg !3384
  %29 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 1, !dbg !3384
  br label %for.cond87, !dbg !3388

for.cond87:                                       ; preds = %for.inc141, %for.end83
  %i.3 = phi i32 [ 0, %for.end83 ], [ %inc142, %for.inc141 ], !dbg !3389
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !3263, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata %struct.data_reference** %dr, metadata !3272, metadata !DIExpression(DW_OP_deref)), !dbg !3289
  %call94 = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %i.3, %struct.data_reference** nonnull %dr) #7, !dbg !3390
  %tobool95 = icmp eq i32 %call94, 0, !dbg !3391
  br i1 %tobool95, label %for.cond144.preheader, label %for.body96, !dbg !3391

for.cond144.preheader:                            ; preds = %for.cond87
  %wide.trip.count = zext i32 %call to i64, !dbg !3392
  br label %for.cond144, !dbg !3395

for.body96:                                       ; preds = %for.cond87
  %30 = load %struct.data_reference*, %struct.data_reference** %dr, align 8, !dbg !3396
  call void @llvm.dbg.value(metadata %struct.data_reference* %30, metadata !3272, metadata !DIExpression()), !dbg !3289
  %aux97 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %30, i64 0, i32 2, !dbg !3397
  %31 = bitcast i8** %aux97 to i64*, !dbg !3397
  %32 = load i64, i64* %31, align 8, !dbg !3397
  %conv98 = trunc i64 %32 to i32, !dbg !3398
  call void @llvm.dbg.value(metadata i32 %conv98, metadata !3266, metadata !DIExpression()), !dbg !3289
  %call99 = call fastcc i32 @component_of(i32* %0, i32 %conv98) #7, !dbg !3399
  call void @llvm.dbg.value(metadata i32 %call99, metadata !3265, metadata !DIExpression()), !dbg !3289
  %cmp100 = icmp eq i32 %call99, %call86, !dbg !3400
  br i1 %cmp100, label %for.inc141, label %if.end103, !dbg !3402

if.end103:                                        ; preds = %for.body96
  %idxprom104 = zext i32 %call99 to i64, !dbg !3403
  %arrayidx105 = getelementptr inbounds %struct.component*, %struct.component** %24, i64 %idxprom104, !dbg !3403
  %33 = load %struct.component*, %struct.component** %arrayidx105, align 8, !dbg !3403
  call void @llvm.dbg.value(metadata %struct.component* %33, metadata !3277, metadata !DIExpression()), !dbg !3289
  %tobool106 = icmp eq %struct.component* %33, null, !dbg !3404
  br i1 %tobool106, label %if.then107, label %if.end114, !dbg !3406

if.then107:                                       ; preds = %if.end103
  %call108 = call i8* @xcalloc(i64 1, i64 24) #6, !dbg !3407
  %34 = bitcast i8* %call108 to %struct.component*, !dbg !3407
  call void @llvm.dbg.value(metadata %struct.component* %34, metadata !3277, metadata !DIExpression()), !dbg !3289
  %arrayidx110 = getelementptr inbounds i32, i32* %1, i64 %idxprom104, !dbg !3409
  %35 = load i32, i32* %arrayidx110, align 4, !dbg !3409
  %call111 = call fastcc %struct.VEC_dref_heap* @VEC_dref_heap_alloc(i32 %35) #7, !dbg !3409
  %refs = bitcast i8* %call108 to %struct.VEC_dref_heap**, !dbg !3410
  store %struct.VEC_dref_heap* %call111, %struct.VEC_dref_heap** %refs, align 8, !dbg !3411
  %36 = bitcast %struct.component** %arrayidx105 to i8**, !dbg !3412
  store i8* %call108, i8** %36, align 8, !dbg !3412
  br label %if.end114, !dbg !3413

if.end114:                                        ; preds = %if.end103, %if.then107
  %comp.0 = phi %struct.component* [ %33, %if.end103 ], [ %34, %if.then107 ], !dbg !3384
  call void @llvm.dbg.value(metadata %struct.component* %comp.0, metadata !3277, metadata !DIExpression()), !dbg !3289
  %call115 = call i8* @xcalloc(i64 1, i64 56) #6, !dbg !3414
  %37 = bitcast i8* %call115 to %struct.dref_d*, !dbg !3414
  call void @llvm.dbg.value(metadata %struct.dref_d* %37, metadata !3278, metadata !DIExpression()), !dbg !3289
  %38 = load i64, i64* %25, align 8, !dbg !3415
  %39 = bitcast i8* %call115 to i64*, !dbg !3416
  store i64 %38, i64* %39, align 8, !dbg !3416
  %40 = load i64*, i64** %26, align 8, !dbg !3417
  %41 = load i64, i64* %40, align 8, !dbg !3417
  %stmt117 = getelementptr inbounds i8, i8* %call115, i64 8, !dbg !3418
  %42 = bitcast i8* %stmt117 to i64*, !dbg !3419
  store i64 %41, i64* %42, align 8, !dbg !3419
  %offset = getelementptr inbounds i8, i8* %call115, i64 32, !dbg !3420
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8, !dbg !3421
  %call118 = call fastcc { i64, i64 } @shwi_to_double_int(i64 0) #7, !dbg !3421
  %43 = extractvalue { i64, i64 } %call118, 0, !dbg !3421
  store i64 %43, i64* %28, align 8, !dbg !3421
  %44 = extractvalue { i64, i64 } %call118, 1, !dbg !3421
  store i64 %44, i64* %29, align 8, !dbg !3421
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %offset, i8* nonnull align 8 %27, i64 16, i1 false), !dbg !3421
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8, !dbg !3421
  %distance = getelementptr inbounds i8, i8* %call115, i64 24, !dbg !3422
  %45 = bitcast i8* %distance to i32*, !dbg !3422
  store i32 0, i32* %45, align 8, !dbg !3423
  %46 = bitcast i8* %stmt117 to %union.gimple_statement_d**, !dbg !3424
  %47 = load %union.gimple_statement_d*, %union.gimple_statement_d** %46, align 8, !dbg !3424
  %call120 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %47) #7, !dbg !3425
  %call121 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call6, %struct.basic_block_def* %call120) #6, !dbg !3426
  %48 = getelementptr inbounds i8, i8* %call115, i64 52, !dbg !3427
  %bf.load = load i8, i8* %48, align 4, !dbg !3428
  %bf.value = and i8 %call121, 1, !dbg !3428
  %bf.clear = and i8 %bf.load, -2, !dbg !3428
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !3428
  store i8 %bf.set, i8* %48, align 4, !dbg !3428
  %refs123 = getelementptr inbounds %struct.component, %struct.component* %comp.0, i64 0, i32 0, !dbg !3429
  %49 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs123, align 8, !dbg !3429
  %tobool124 = icmp eq %struct.VEC_dref_heap* %49, null, !dbg !3429
  br i1 %tobool124, label %cond.end129, label %cond.true125, !dbg !3429

cond.true125:                                     ; preds = %if.end114
  %base127 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %49, i64 0, i32 0, !dbg !3429
  br label %cond.end129, !dbg !3429

cond.end129:                                      ; preds = %if.end114, %cond.true125
  %cond130 = phi %struct.VEC_dref_base* [ %base127, %cond.true125 ], [ null, %if.end114 ], !dbg !3429
  %call131 = call fastcc i32 @VEC_dref_base_length(%struct.VEC_dref_base* %cond130) #7, !dbg !3429
  %pos = getelementptr inbounds i8, i8* %call115, i64 48, !dbg !3430
  %50 = bitcast i8* %pos to i32*, !dbg !3430
  store i32 %call131, i32* %50, align 8, !dbg !3431
  %51 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs123, align 8, !dbg !3432
  %tobool133 = icmp eq %struct.VEC_dref_heap* %51, null, !dbg !3432
  br i1 %tobool133, label %cond.end138, label %cond.true134, !dbg !3432

cond.true134:                                     ; preds = %cond.end129
  %base136 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %51, i64 0, i32 0, !dbg !3432
  br label %cond.end138, !dbg !3432

cond.end138:                                      ; preds = %cond.end129, %cond.true134
  %cond139 = phi %struct.VEC_dref_base* [ %base136, %cond.true134 ], [ null, %cond.end129 ], !dbg !3432
  %call140 = call fastcc %struct.dref_d** @VEC_dref_base_quick_push(%struct.VEC_dref_base* %cond139, %struct.dref_d* %37) #7, !dbg !3432
  br label %for.inc141, !dbg !3433

for.inc141:                                       ; preds = %for.body96, %cond.end138
  %inc142 = add i32 %i.3, 1, !dbg !3434
  call void @llvm.dbg.value(metadata i32 %inc142, metadata !3263, metadata !DIExpression()), !dbg !3289
  br label %for.cond87, !dbg !3435, !llvm.loop !3436

for.cond144:                                      ; preds = %for.cond144.preheader, %for.inc153
  %indvars.iv = phi i64 [ 0, %for.cond144.preheader ], [ %indvars.iv.next, %for.inc153 ], !dbg !3438
  %comp_list.0 = phi %struct.component* [ null, %for.cond144.preheader ], [ %comp_list.1, %for.inc153 ], !dbg !3289
  call void @llvm.dbg.value(metadata %struct.component* %comp_list.0, metadata !3276, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3263, metadata !DIExpression()), !dbg !3289
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !3392
  br i1 %exitcond, label %for.end155, label %for.body147, !dbg !3395

for.body147:                                      ; preds = %for.cond144
  %arrayidx149 = getelementptr inbounds %struct.component*, %struct.component** %24, i64 %indvars.iv, !dbg !3439
  %52 = load %struct.component*, %struct.component** %arrayidx149, align 8, !dbg !3439
  call void @llvm.dbg.value(metadata %struct.component* %52, metadata !3277, metadata !DIExpression()), !dbg !3289
  %tobool150 = icmp eq %struct.component* %52, null, !dbg !3441
  br i1 %tobool150, label %for.inc153, label %if.then151, !dbg !3443

if.then151:                                       ; preds = %for.body147
  %next = getelementptr inbounds %struct.component, %struct.component* %52, i64 0, i32 2, !dbg !3444
  store %struct.component* %comp_list.0, %struct.component** %next, align 8, !dbg !3446
  call void @llvm.dbg.value(metadata %struct.component* %52, metadata !3276, metadata !DIExpression()), !dbg !3289
  br label %for.inc153, !dbg !3447

for.inc153:                                       ; preds = %for.body147, %if.then151
  %comp_list.1 = phi %struct.component* [ %52, %if.then151 ], [ %comp_list.0, %for.body147 ], !dbg !3289
  call void @llvm.dbg.value(metadata %struct.component* %comp_list.1, metadata !3276, metadata !DIExpression()), !dbg !3289
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3448
  br label %for.cond144, !dbg !3449, !llvm.loop !3450

for.end155:                                       ; preds = %for.cond144
  %comp_list.0.lcssa = phi %struct.component* [ %comp_list.0, %for.cond144 ], !dbg !3289
  call void @llvm.dbg.value(metadata %struct.component* %comp_list.0.lcssa, metadata !3276, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata %struct.component* %comp_list.0.lcssa, metadata !3276, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata %struct.component* %comp_list.0.lcssa, metadata !3276, metadata !DIExpression()), !dbg !3289
  call void @free(i8* %call85) #6, !dbg !3452
  br label %end, !dbg !3452

end.loopexit:                                     ; preds = %for.body
  br label %end, !dbg !3453

end:                                              ; preds = %end.loopexit, %for.end155
  %comp_list.2 = phi %struct.component* [ %comp_list.0.lcssa, %for.end155 ], [ null, %end.loopexit ], !dbg !3454
  call void @llvm.dbg.value(metadata %struct.component* %comp_list.2, metadata !3276, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.label(metadata !3288), !dbg !3455
  call void @free(i8* %call1) #6, !dbg !3453
  call void @free(i8* %call5) #6, !dbg !3456
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !3457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3457
  ret %struct.component* %comp_list.2, !dbg !3458
}

declare dso_local void @free_dependence_relations(%struct.VEC_ddr_p_heap*) local_unnamed_addr #2

declare dso_local void @free_data_refs(%struct.VEC_data_reference_p_heap*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.component* @filter_suitable_components(%struct.loop* %loop, %struct.component* %comps) unnamed_addr #5 !dbg !3459 {
entry:
  %comps.addr = alloca %struct.component*, align 8
  %ref = alloca %struct.dref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3463, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata %struct.component* %comps, metadata !3464, metadata !DIExpression()), !dbg !3474
  store %struct.component* %comps, %struct.component** %comps.addr, align 8
  call void @llvm.dbg.value(metadata %struct.component** %comps.addr, metadata !3465, metadata !DIExpression()), !dbg !3474
  %0 = bitcast %struct.dref_d** %ref to i8*, !dbg !3475
  %1 = bitcast %struct.dref_d** %ref to i8**, !dbg !3476
  br label %for.cond, !dbg !3479

for.cond:                                         ; preds = %if.end, %entry
  %2 = phi %struct.component* [ %comps, %entry ], [ %.pre, %if.end ], !dbg !3480
  %comp.0 = phi %struct.component** [ %comps.addr, %entry ], [ %comp.1, %if.end ], !dbg !3481
  call void @llvm.dbg.value(metadata %struct.component** %comp.0, metadata !3465, metadata !DIExpression()), !dbg !3474
  %tobool = icmp eq %struct.component* %2, null, !dbg !3482
  br i1 %tobool, label %for.end9, label %for.body, !dbg !3482

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.component* %2, metadata !3466, metadata !DIExpression()), !dbg !3474
  %call = call fastcc zeroext i8 @suitable_component_p(%struct.loop* %loop, %struct.component* nonnull %2) #7, !dbg !3483
  %tobool1 = icmp eq i8 %call, 0, !dbg !3483
  br i1 %tobool1, label %if.else, label %if.then, !dbg !3484

if.then:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.component, %struct.component* %2, i64 0, i32 2, !dbg !3485
  call void @llvm.dbg.value(metadata %struct.component** %next, metadata !3465, metadata !DIExpression()), !dbg !3474
  br label %if.end, !dbg !3486

if.else:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3487
  %next2 = getelementptr inbounds %struct.component, %struct.component* %2, i64 0, i32 2, !dbg !3488
  %3 = bitcast %struct.component** %next2 to i64*, !dbg !3488
  %4 = load i64, i64* %3, align 8, !dbg !3488
  %5 = bitcast %struct.component** %comp.0 to i64*, !dbg !3489
  store i64 %4, i64* %5, align 8, !dbg !3489
  call void @llvm.dbg.value(metadata i32 0, metadata !3473, metadata !DIExpression()), !dbg !3475
  %refs = getelementptr inbounds %struct.component, %struct.component* %2, i64 0, i32 0, !dbg !3476
  br label %for.cond3, !dbg !3490

for.cond3:                                        ; preds = %for.body8, %if.else
  %i.0 = phi i32 [ 0, %if.else ], [ %inc, %for.body8 ], !dbg !3491
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3473, metadata !DIExpression()), !dbg !3475
  %6 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !3492
  %tobool4 = icmp eq %struct.VEC_dref_heap* %6, null, !dbg !3492
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !3492

cond.true:                                        ; preds = %for.cond3
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %6, i64 0, i32 0, !dbg !3492
  br label %cond.end, !dbg !3492

cond.end:                                         ; preds = %for.cond3, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %for.cond3 ], !dbg !3492
  call void @llvm.dbg.value(metadata %struct.dref_d** %ref, metadata !3467, metadata !DIExpression(DW_OP_deref)), !dbg !3475
  %call6 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond, i32 %i.0, %struct.dref_d** nonnull %ref) #7, !dbg !3492
  %tobool7 = icmp eq i32 %call6, 0, !dbg !3493
  br i1 %tobool7, label %for.end, label %for.body8, !dbg !3493

for.body8:                                        ; preds = %cond.end
  %7 = load i8*, i8** %1, align 8, !dbg !3494
  call void @free(i8* %7) #6, !dbg !3495
  %inc = add i32 %i.0, 1, !dbg !3496
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3473, metadata !DIExpression()), !dbg !3475
  br label %for.cond3, !dbg !3497, !llvm.loop !3498

for.end:                                          ; preds = %cond.end
  call fastcc void @release_component(%struct.component* nonnull %2) #7, !dbg !3500
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3501
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %comp.1 = phi %struct.component** [ %next, %if.then ], [ %comp.0, %for.end ], !dbg !3481
  call void @llvm.dbg.value(metadata %struct.component** %comp.1, metadata !3465, metadata !DIExpression()), !dbg !3474
  %.pre = load %struct.component*, %struct.component** %comp.1, align 8, !dbg !3480
  br label %for.cond, !dbg !3502, !llvm.loop !3503

for.end9:                                         ; preds = %for.cond
  %8 = load %struct.component*, %struct.component** %comps.addr, align 8, !dbg !3505
  call void @llvm.dbg.value(metadata %struct.component* %8, metadata !3464, metadata !DIExpression()), !dbg !3474
  ret %struct.component* %8, !dbg !3506
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @determine_roots(%struct.loop* %loop, %struct.component* %comps, %struct.VEC_chain_p_heap** %chains) unnamed_addr #5 !dbg !3507 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3512, metadata !DIExpression()), !dbg !3516
  call void @llvm.dbg.value(metadata %struct.component* %comps, metadata !3513, metadata !DIExpression()), !dbg !3516
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap** %chains, metadata !3514, metadata !DIExpression()), !dbg !3516
  call void @llvm.dbg.value(metadata %struct.component* %comps, metadata !3515, metadata !DIExpression()), !dbg !3516
  br label %for.cond, !dbg !3517

for.cond:                                         ; preds = %for.body, %entry
  %comp.0 = phi %struct.component* [ %comps, %entry ], [ %0, %for.body ], !dbg !3519
  call void @llvm.dbg.value(metadata %struct.component* %comp.0, metadata !3515, metadata !DIExpression()), !dbg !3516
  %tobool = icmp eq %struct.component* %comp.0, null, !dbg !3520
  br i1 %tobool, label %for.end, label %for.body, !dbg !3520

for.body:                                         ; preds = %for.cond
  tail call fastcc void @determine_roots_comp(%struct.loop* %loop, %struct.component* nonnull %comp.0, %struct.VEC_chain_p_heap** %chains) #7, !dbg !3521
  %next = getelementptr inbounds %struct.component, %struct.component* %comp.0, i64 0, i32 2, !dbg !3523
  %0 = load %struct.component*, %struct.component** %next, align 8, !dbg !3523
  call void @llvm.dbg.value(metadata %struct.component* %0, metadata !3515, metadata !DIExpression()), !dbg !3516
  br label %for.cond, !dbg !3524, !llvm.loop !3525

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3527
}

; Function Attrs: nounwind uwtable
define internal fastcc void @release_components(%struct.component* %comps) unnamed_addr #5 !dbg !3528 {
entry:
  call void @llvm.dbg.value(metadata %struct.component* %comps, metadata !3532, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata %struct.component* %comps, metadata !3533, metadata !DIExpression()), !dbg !3535
  br label %for.cond, !dbg !3536

for.cond:                                         ; preds = %for.body, %entry
  %act.0 = phi %struct.component* [ %comps, %entry ], [ %0, %for.body ], !dbg !3538
  call void @llvm.dbg.value(metadata %struct.component* %act.0, metadata !3533, metadata !DIExpression()), !dbg !3535
  %tobool = icmp eq %struct.component* %act.0, null, !dbg !3539
  br i1 %tobool, label %for.end, label %for.body, !dbg !3539

for.body:                                         ; preds = %for.cond
  %next1 = getelementptr inbounds %struct.component, %struct.component* %act.0, i64 0, i32 2, !dbg !3540
  %0 = load %struct.component*, %struct.component** %next1, align 8, !dbg !3540
  call void @llvm.dbg.value(metadata %struct.component* %0, metadata !3534, metadata !DIExpression()), !dbg !3535
  tail call fastcc void @release_component(%struct.component* nonnull %act.0) #7, !dbg !3543
  call void @llvm.dbg.value(metadata %struct.component* %0, metadata !3533, metadata !DIExpression()), !dbg !3535
  br label %for.cond, !dbg !3544, !llvm.loop !3545

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3547
}

; Function Attrs: nounwind uwtable
define internal fastcc void @prepare_initializers(%struct.loop* %loop, %struct.VEC_chain_p_heap* %chains) unnamed_addr #5 !dbg !3548 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3552, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %chains, metadata !3553, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.value(metadata i32 0, metadata !3555, metadata !DIExpression()), !dbg !3556
  %base = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %chains, i64 0, i32 0, !dbg !3557
  br label %for.cond, !dbg !3560

for.cond:                                         ; preds = %if.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %i.1, %if.end ], !dbg !3561
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3555, metadata !DIExpression()), !dbg !3556
  %call = tail call fastcc i32 @VEC_chain_p_base_length(%struct.VEC_chain_p_base* %base) #7, !dbg !3562
  %cmp = icmp ult i32 %i.0, %call, !dbg !3563
  br i1 %cmp, label %for.body, label %for.end, !dbg !3564

for.body:                                         ; preds = %for.cond
  %call7 = tail call fastcc %struct.chain* @VEC_chain_p_base_index(%struct.VEC_chain_p_base* %base, i32 %i.0) #7, !dbg !3565
  call void @llvm.dbg.value(metadata %struct.chain* %call7, metadata !3554, metadata !DIExpression()), !dbg !3556
  %call8 = tail call fastcc zeroext i8 @prepare_initializers_chain(%struct.loop* %loop, %struct.chain* %call7) #7, !dbg !3567
  %tobool9 = icmp eq i8 %call8, 0, !dbg !3567
  br i1 %tobool9, label %if.else, label %if.then, !dbg !3569

if.then:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !3570
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3555, metadata !DIExpression()), !dbg !3556
  br label %if.end, !dbg !3571

if.else:                                          ; preds = %for.body
  tail call fastcc void @release_chain(%struct.chain* %call7) #7, !dbg !3572
  %call16 = tail call fastcc %struct.chain* @VEC_chain_p_base_unordered_remove(%struct.VEC_chain_p_base* %base, i32 %i.0) #7, !dbg !3574
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %i.1 = phi i32 [ %inc, %if.then ], [ %i.0, %if.else ], !dbg !3561
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3555, metadata !DIExpression()), !dbg !3556
  br label %for.cond, !dbg !3575, !llvm.loop !3576

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3578
}

; Function Attrs: nounwind uwtable
define internal fastcc void @try_combine_chains(%struct.VEC_chain_p_heap** %chains) unnamed_addr #5 !dbg !3579 {
entry:
  %ch1 = alloca %struct.chain*, align 8
  %ch2 = alloca %struct.chain*, align 8
  %worklist = alloca %struct.VEC_chain_p_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap** %chains, metadata !3583, metadata !DIExpression()), !dbg !3590
  %0 = bitcast %struct.chain** %ch1 to i8*, !dbg !3591
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3591
  %1 = bitcast %struct.chain** %ch2 to i8*, !dbg !3591
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3591
  %2 = bitcast %struct.VEC_chain_p_heap** %worklist to i8*, !dbg !3592
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3592
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* null, metadata !3589, metadata !DIExpression()), !dbg !3590
  store %struct.VEC_chain_p_heap* null, %struct.VEC_chain_p_heap** %worklist, align 8, !dbg !3593
  call void @llvm.dbg.value(metadata i32 0, metadata !3584, metadata !DIExpression()), !dbg !3590
  br label %for.cond, !dbg !3594

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !3596
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3584, metadata !DIExpression()), !dbg !3590
  %3 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %chains, align 8, !dbg !3597
  %tobool = icmp eq %struct.VEC_chain_p_heap* %3, null, !dbg !3597
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3597

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %3, i64 0, i32 0, !dbg !3597
  br label %cond.end, !dbg !3597

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_chain_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3597
  call void @llvm.dbg.value(metadata %struct.chain** %ch1, metadata !3586, metadata !DIExpression(DW_OP_deref)), !dbg !3590
  %call = call fastcc i32 @VEC_chain_p_base_iterate(%struct.VEC_chain_p_base* %cond, i32 %i.0, %struct.chain** nonnull %ch1) #7, !dbg !3597
  %tobool1 = icmp eq i32 %call, 0, !dbg !3599
  br i1 %tobool1, label %while.cond.preheader, label %for.body, !dbg !3599

while.cond.preheader:                             ; preds = %cond.end
  br label %while.cond, !dbg !3600

for.body:                                         ; preds = %cond.end
  %4 = load %struct.chain*, %struct.chain** %ch1, align 8, !dbg !3601
  call void @llvm.dbg.value(metadata %struct.chain* %4, metadata !3586, metadata !DIExpression()), !dbg !3590
  %call2 = call fastcc zeroext i8 @chain_can_be_combined_p(%struct.chain* %4) #7, !dbg !3603
  %tobool3 = icmp eq i8 %call2, 0, !dbg !3603
  br i1 %tobool3, label %for.inc, label %if.then, !dbg !3604

if.then:                                          ; preds = %for.body
  %5 = load %struct.chain*, %struct.chain** %ch1, align 8, !dbg !3605
  call void @llvm.dbg.value(metadata %struct.chain* %5, metadata !3586, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap** %worklist, metadata !3589, metadata !DIExpression(DW_OP_deref)), !dbg !3590
  %call4 = call fastcc %struct.chain** @VEC_chain_p_heap_safe_push(%struct.VEC_chain_p_heap** nonnull %worklist, %struct.chain* %5) #7, !dbg !3605
  br label %for.inc, !dbg !3605

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add i32 %i.0, 1, !dbg !3606
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3584, metadata !DIExpression()), !dbg !3590
  br label %for.cond, !dbg !3607, !llvm.loop !3608

while.cond:                                       ; preds = %while.cond.backedge, %while.cond.preheader
  %6 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %worklist, align 8, !dbg !3610
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %6, metadata !3589, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %6, metadata !3589, metadata !DIExpression()), !dbg !3590
  %base7 = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %6, i64 0, i32 0, !dbg !3610
  %call11 = call fastcc i32 @VEC_chain_p_base_length(%struct.VEC_chain_p_base* %base7) #7, !dbg !3610
  %cmp = icmp eq i32 %call11, 0, !dbg !3610
  br i1 %cmp, label %while.end, label %while.body, !dbg !3600

while.body:                                       ; preds = %while.cond
  %7 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %worklist, align 8, !dbg !3611
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %7, metadata !3589, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %7, metadata !3589, metadata !DIExpression()), !dbg !3590
  %base14 = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %7, i64 0, i32 0, !dbg !3611
  %call18 = call fastcc %struct.chain* @VEC_chain_p_base_pop(%struct.VEC_chain_p_base* %base14) #7, !dbg !3611
  call void @llvm.dbg.value(metadata %struct.chain* %call18, metadata !3586, metadata !DIExpression()), !dbg !3590
  store %struct.chain* %call18, %struct.chain** %ch1, align 8, !dbg !3613
  call void @llvm.dbg.value(metadata %struct.chain* %call18, metadata !3586, metadata !DIExpression()), !dbg !3590
  %call19 = call fastcc zeroext i8 @chain_can_be_combined_p(%struct.chain* %call18) #7, !dbg !3614
  %tobool20 = icmp eq i8 %call19, 0, !dbg !3614
  br i1 %tobool20, label %while.cond.backedge, label %for.cond23.preheader, !dbg !3616

for.cond23.preheader:                             ; preds = %while.body
  br label %for.cond23, !dbg !3617

for.cond23:                                       ; preds = %for.cond23.preheader, %for.inc43
  %j.0 = phi i32 [ %inc44, %for.inc43 ], [ 0, %for.cond23.preheader ], !dbg !3619
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3585, metadata !DIExpression()), !dbg !3590
  %8 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %chains, align 8, !dbg !3620
  %tobool24 = icmp eq %struct.VEC_chain_p_heap* %8, null, !dbg !3620
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !3620

cond.true25:                                      ; preds = %for.cond23
  %base26 = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %8, i64 0, i32 0, !dbg !3620
  br label %cond.end28, !dbg !3620

cond.end28:                                       ; preds = %for.cond23, %cond.true25
  %cond29 = phi %struct.VEC_chain_p_base* [ %base26, %cond.true25 ], [ null, %for.cond23 ], !dbg !3620
  call void @llvm.dbg.value(metadata %struct.chain** %ch2, metadata !3587, metadata !DIExpression(DW_OP_deref)), !dbg !3590
  %call30 = call fastcc i32 @VEC_chain_p_base_iterate(%struct.VEC_chain_p_base* %cond29, i32 %j.0, %struct.chain** nonnull %ch2) #7, !dbg !3620
  %tobool31 = icmp eq i32 %call30, 0, !dbg !3617
  br i1 %tobool31, label %for.end45.loopexit, label %for.body32, !dbg !3617

for.body32:                                       ; preds = %cond.end28
  %9 = load %struct.chain*, %struct.chain** %ch2, align 8, !dbg !3622
  call void @llvm.dbg.value(metadata %struct.chain* %9, metadata !3587, metadata !DIExpression()), !dbg !3590
  %call33 = call fastcc zeroext i8 @chain_can_be_combined_p(%struct.chain* %9) #7, !dbg !3625
  %tobool34 = icmp eq i8 %call33, 0, !dbg !3625
  br i1 %tobool34, label %for.inc43, label %if.end36, !dbg !3626

if.end36:                                         ; preds = %for.body32
  %10 = load %struct.chain*, %struct.chain** %ch1, align 8, !dbg !3627
  call void @llvm.dbg.value(metadata %struct.chain* %10, metadata !3586, metadata !DIExpression()), !dbg !3590
  %11 = load %struct.chain*, %struct.chain** %ch2, align 8, !dbg !3628
  call void @llvm.dbg.value(metadata %struct.chain* %11, metadata !3587, metadata !DIExpression()), !dbg !3590
  %call37 = call fastcc %struct.chain* @combine_chains(%struct.chain* %10, %struct.chain* %11) #7, !dbg !3629
  call void @llvm.dbg.value(metadata %struct.chain* %call37, metadata !3588, metadata !DIExpression()), !dbg !3590
  %tobool38 = icmp eq %struct.chain* %call37, null, !dbg !3630
  br i1 %tobool38, label %for.inc43, label %if.then39, !dbg !3632

if.then39:                                        ; preds = %if.end36
  %call37.lcssa = phi %struct.chain* [ %call37, %if.end36 ], !dbg !3629
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap** %worklist, metadata !3589, metadata !DIExpression(DW_OP_deref)), !dbg !3590
  %call40 = call fastcc %struct.chain** @VEC_chain_p_heap_safe_push(%struct.VEC_chain_p_heap** nonnull %worklist, %struct.chain* nonnull %call37.lcssa) #7, !dbg !3633
  %call41 = call fastcc %struct.chain** @VEC_chain_p_heap_safe_push(%struct.VEC_chain_p_heap** %chains, %struct.chain* nonnull %call37.lcssa) #7, !dbg !3635
  br label %for.end45, !dbg !3636

for.inc43:                                        ; preds = %if.end36, %for.body32
  %inc44 = add i32 %j.0, 1, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %inc44, metadata !3585, metadata !DIExpression()), !dbg !3590
  br label %for.cond23, !dbg !3638, !llvm.loop !3639

for.end45.loopexit:                               ; preds = %cond.end28
  br label %for.end45, !dbg !3600

for.end45:                                        ; preds = %for.end45.loopexit, %if.then39
  br label %while.cond.backedge, !dbg !3600

while.cond.backedge:                              ; preds = %for.end45, %while.body
  br label %while.cond, !dbg !3610, !llvm.loop !3641

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3643
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3643
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3643
  ret void, !dbg !3643
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @determine_unroll_factor(%struct.VEC_chain_p_heap* %chains) unnamed_addr #5 !dbg !3644 {
entry:
  %chain = alloca %struct.chain*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %chains, metadata !3648, metadata !DIExpression()), !dbg !3655
  %0 = bitcast %struct.chain** %chain to i8*, !dbg !3656
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3656
  call void @llvm.dbg.value(metadata i32 1, metadata !3650, metadata !DIExpression()), !dbg !3655
  %1 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3657
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %1, i64 28, i32 1, !dbg !3657
  %2 = load i32, i32* %value, align 8, !dbg !3657
  call void @llvm.dbg.value(metadata i32 %2, metadata !3654, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 0, metadata !3653, metadata !DIExpression()), !dbg !3655
  %base = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %chains, i64 0, i32 0, !dbg !3658
  br label %for.cond, !dbg !3661

for.cond:                                         ; preds = %for.inc, %entry
  %factor.0 = phi i32 [ 1, %entry ], [ %factor.2, %for.inc ], !dbg !3662
  %i.0 = phi i32 [ 0, %entry ], [ %inc13, %for.inc ], !dbg !3663
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3653, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 %factor.0, metadata !3650, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata %struct.chain** %chain, metadata !3649, metadata !DIExpression(DW_OP_deref)), !dbg !3655
  %call = call fastcc i32 @VEC_chain_p_base_iterate(%struct.VEC_chain_p_base* %base, i32 %i.0, %struct.chain** nonnull %chain) #7, !dbg !3664
  %tobool1 = icmp eq i32 %call, 0, !dbg !3665
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3665

for.body:                                         ; preds = %for.cond
  %3 = load %struct.chain*, %struct.chain** %chain, align 8, !dbg !3666
  call void @llvm.dbg.value(metadata %struct.chain* %3, metadata !3649, metadata !DIExpression()), !dbg !3655
  %type = getelementptr inbounds %struct.chain, %struct.chain* %3, i64 0, i32 0, !dbg !3669
  %4 = load i32, i32* %type, align 8, !dbg !3669
  %cmp = icmp eq i32 %4, 0, !dbg !3670
  br i1 %cmp, label %for.inc, label %lor.lhs.false, !dbg !3671

lor.lhs.false:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.chain* %3, metadata !3649, metadata !DIExpression()), !dbg !3655
  %combined = getelementptr inbounds %struct.chain, %struct.chain* %3, i64 0, i32 9, !dbg !3672
  %bf.load = load i8, i8* %combined, align 8, !dbg !3672
  %bf.clear = and i8 %bf.load, 4, !dbg !3672
  %tobool2 = icmp eq i8 %bf.clear, 0, !dbg !3673
  br i1 %tobool2, label %if.end, label %for.inc, !dbg !3674

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.chain* %3, metadata !3649, metadata !DIExpression()), !dbg !3655
  %length = getelementptr inbounds %struct.chain, %struct.chain* %3, i64 0, i32 6, !dbg !3675
  %5 = load i32, i32* %length, align 8, !dbg !3675
  call void @llvm.dbg.value(metadata i32 %5, metadata !3651, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata %struct.chain* %3, metadata !3649, metadata !DIExpression()), !dbg !3655
  %bf.clear4 = and i8 %bf.load, 1, !dbg !3676
  %6 = zext i8 %bf.clear4 to i32, !dbg !3678
  %spec.select = add i32 %5, %6, !dbg !3678
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3651, metadata !DIExpression()), !dbg !3655
  %mul = mul i32 %factor.0, %spec.select, !dbg !3679
  %call9 = call fastcc i32 @gcd(i32 %factor.0, i32 %spec.select) #7, !dbg !3680
  %div = udiv i32 %mul, %call9, !dbg !3681
  call void @llvm.dbg.value(metadata i32 %div, metadata !3652, metadata !DIExpression()), !dbg !3655
  %cmp10 = icmp ugt i32 %div, %2, !dbg !3682
  %factor.1 = select i1 %cmp10, i32 %factor.0, i32 %div, !dbg !3684
  br label %for.inc, !dbg !3684

for.inc:                                          ; preds = %lor.lhs.false, %if.end, %for.body
  %factor.2 = phi i32 [ %factor.0, %lor.lhs.false ], [ %factor.0, %for.body ], [ %factor.1, %if.end ], !dbg !3655
  call void @llvm.dbg.value(metadata i32 %factor.2, metadata !3650, metadata !DIExpression()), !dbg !3655
  %inc13 = add i32 %i.0, 1, !dbg !3685
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !3653, metadata !DIExpression()), !dbg !3655
  br label %for.cond, !dbg !3686, !llvm.loop !3687

for.end:                                          ; preds = %for.cond
  %factor.0.lcssa = phi i32 [ %factor.0, %for.cond ], !dbg !3662
  call void @llvm.dbg.value(metadata i32 %factor.0.lcssa, metadata !3650, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 %factor.0.lcssa, metadata !3650, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 %factor.0.lcssa, metadata !3650, metadata !DIExpression()), !dbg !3655
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3689
  ret i32 %factor.0.lcssa, !dbg !3690
}

declare dso_local zeroext i8 @can_unroll_loop_p(%struct.loop*, i32, %struct.tree_niter_desc*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @single_dom_exit(%struct.loop*) local_unnamed_addr #2

declare dso_local void @update_ssa(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_phis_by_defined_names(%struct.VEC_chain_p_heap* %chains) unnamed_addr #5 !dbg !3691 {
entry:
  %chain = alloca %struct.chain*, align 8
  %a = alloca %struct.dref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %chains, metadata !3695, metadata !DIExpression()), !dbg !3700
  %0 = bitcast %struct.chain** %chain to i8*, !dbg !3701
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3701
  %1 = bitcast %struct.dref_d** %a to i8*, !dbg !3702
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3702
  call void @llvm.dbg.value(metadata i32 0, metadata !3698, metadata !DIExpression()), !dbg !3700
  %base = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %chains, i64 0, i32 0, !dbg !3703
  br label %for.cond, !dbg !3706

for.cond:                                         ; preds = %for.inc18, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc19, %for.inc18 ], !dbg !3707
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3698, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.value(metadata %struct.chain** %chain, metadata !3696, metadata !DIExpression(DW_OP_deref)), !dbg !3700
  %call = call fastcc i32 @VEC_chain_p_base_iterate(%struct.VEC_chain_p_base* %base, i32 %i.0, %struct.chain** nonnull %chain) #7, !dbg !3708
  %tobool1 = icmp eq i32 %call, 0, !dbg !3709
  br i1 %tobool1, label %for.end20, label %for.cond2.preheader, !dbg !3709

for.cond2.preheader:                              ; preds = %for.cond
  br label %for.cond2, !dbg !3710

for.cond2:                                        ; preds = %for.cond2.preheader, %for.inc
  %j.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond2.preheader ], !dbg !3712
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3699, metadata !DIExpression()), !dbg !3700
  %2 = load %struct.chain*, %struct.chain** %chain, align 8, !dbg !3713
  call void @llvm.dbg.value(metadata %struct.chain* %2, metadata !3696, metadata !DIExpression()), !dbg !3700
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %2, i64 0, i32 5, !dbg !3713
  %3 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !3713
  %tobool3 = icmp eq %struct.VEC_dref_heap* %3, null, !dbg !3713
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !3713

cond.true4:                                       ; preds = %for.cond2
  call void @llvm.dbg.value(metadata %struct.chain* %2, metadata !3696, metadata !DIExpression()), !dbg !3700
  %base6 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %3, i64 0, i32 0, !dbg !3713
  br label %cond.end8, !dbg !3713

cond.end8:                                        ; preds = %for.cond2, %cond.true4
  %cond9 = phi %struct.VEC_dref_base* [ %base6, %cond.true4 ], [ null, %for.cond2 ], !dbg !3713
  call void @llvm.dbg.value(metadata %struct.dref_d** %a, metadata !3697, metadata !DIExpression(DW_OP_deref)), !dbg !3700
  %call10 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond9, i32 %j.0, %struct.dref_d** nonnull %a) #7, !dbg !3713
  %tobool11 = icmp eq i32 %call10, 0, !dbg !3710
  br i1 %tobool11, label %for.inc18, label %for.body12, !dbg !3710

for.body12:                                       ; preds = %cond.end8
  %4 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !3715
  call void @llvm.dbg.value(metadata %struct.dref_d* %4, metadata !3697, metadata !DIExpression()), !dbg !3700
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %4, i64 0, i32 1, !dbg !3718
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3718
  %call13 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %5) #7, !dbg !3719
  %cmp = icmp eq i32 %call13, 16, !dbg !3720
  br i1 %cmp, label %if.then, label %for.inc, !dbg !3721

if.then:                                          ; preds = %for.body12
  %6 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !3722
  call void @llvm.dbg.value(metadata %struct.dref_d* %6, metadata !3697, metadata !DIExpression()), !dbg !3700
  %stmt14 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %6, i64 0, i32 1, !dbg !3722
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt14, align 8, !dbg !3722
  %call15 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %7) #7, !dbg !3722
  %call16 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call15) #7, !dbg !3722
  %8 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !3724
  call void @llvm.dbg.value(metadata %struct.dref_d* %8, metadata !3697, metadata !DIExpression()), !dbg !3700
  %name_defined_by_phi = getelementptr inbounds %struct.dref_d, %struct.dref_d* %8, i64 0, i32 2, !dbg !3725
  store %union.tree_node* %call16, %union.tree_node** %name_defined_by_phi, align 8, !dbg !3726
  call void @llvm.dbg.value(metadata %struct.dref_d* %8, metadata !3697, metadata !DIExpression()), !dbg !3700
  %stmt17 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %8, i64 0, i32 1, !dbg !3727
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt17, align 8, !dbg !3728
  br label %for.inc, !dbg !3729

for.inc:                                          ; preds = %for.body12, %if.then
  %inc = add i32 %j.0, 1, !dbg !3730
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3699, metadata !DIExpression()), !dbg !3700
  br label %for.cond2, !dbg !3731, !llvm.loop !3732

for.inc18:                                        ; preds = %cond.end8
  %inc19 = add i32 %i.0, 1, !dbg !3734
  call void @llvm.dbg.value(metadata i32 %inc19, metadata !3698, metadata !DIExpression()), !dbg !3700
  br label %for.cond, !dbg !3735, !llvm.loop !3736

for.end20:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3738
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3738
  ret void, !dbg !3738
}

declare dso_local void @tree_transform_and_unroll_loop(%struct.loop*, i32, %struct.edge_def*, %struct.tree_niter_desc*, void (%struct.loop*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @execute_pred_commoning_cbck(%struct.loop* %loop, i8* %data) #5 !dbg !3739 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3743, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i8* %data, metadata !3744, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i8* %data, metadata !3745, metadata !DIExpression()), !dbg !3747
  %chains = bitcast i8* %data to %struct.VEC_chain_p_heap**, !dbg !3748
  %0 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %chains, align 8, !dbg !3748
  tail call fastcc void @replace_names_by_phis(%struct.VEC_chain_p_heap* %0) #7, !dbg !3749
  %1 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %chains, align 8, !dbg !3750
  %tmp_vars = getelementptr inbounds i8, i8* %data, i64 8, !dbg !3751
  %2 = bitcast i8* %tmp_vars to %struct.bitmap_head_def**, !dbg !3751
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %2, align 8, !dbg !3751
  tail call fastcc void @execute_pred_commoning(%struct.loop* %loop, %struct.VEC_chain_p_heap* %1, %struct.bitmap_head_def* %3) #7, !dbg !3752
  ret void, !dbg !3753
}

; Function Attrs: nounwind uwtable
define internal fastcc void @eliminate_temp_copies(%struct.loop* %loop, %struct.bitmap_head_def* %tmp_vars) unnamed_addr #5 !dbg !3754 {
entry:
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3758, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_vars, metadata !3759, metadata !DIExpression()), !dbg !3773
  %0 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !3774
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3774
  %call = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* %loop) #6, !dbg !3775
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !3760, metadata !DIExpression()), !dbg !3773
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3776
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3776
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3778
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3778
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %2) #6, !dbg !3776
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !3776
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3776
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 6, !dbg !3779
  br label %for.cond, !dbg !3782

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3766, metadata !DIExpression(DW_OP_deref)), !dbg !3773
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !3783
  %tobool = icmp eq i8 %call1, 0, !dbg !3784
  br i1 %tobool, label %for.body, label %for.end, !dbg !3785

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3766, metadata !DIExpression(DW_OP_deref)), !dbg !3773
  %call2 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !3786
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !3761, metadata !DIExpression()), !dbg !3773
  %call3 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call2) #7, !dbg !3787
  %call4 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call3) #7, !dbg !3787
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !3763, metadata !DIExpression()), !dbg !3773
  %var5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3788
  %3 = bitcast i32* %var5 to %union.tree_node**, !dbg !3788
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !3788
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3765, metadata !DIExpression()), !dbg !3773
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3789
  %5 = load i32, i32* %uid, align 4, !dbg !3789
  %call6 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %tmp_vars, i32 %5) #6, !dbg !3791
  %tobool7 = icmp eq i32 %call6, 0, !dbg !3791
  br i1 %tobool7, label %for.inc, label %if.end, !dbg !3792

if.end:                                           ; preds = %for.body
  %6 = load i32, i32* %dest_idx, align 4, !dbg !3793
  %call8 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call2, i32 %6) #7, !dbg !3793
  %call9 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call8) #7, !dbg !3793
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !3764, metadata !DIExpression()), !dbg !3773
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3794
  %bf.load = load i64, i64* %7, align 8, !dbg !3794
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3794
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !3794
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3794

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1943, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !3794
  br label %cond.end, !dbg !3794

cond.end:                                         ; preds = %if.end, %cond.true
  br label %while.cond, !dbg !3795

while.cond:                                       ; preds = %cond.end21, %cond.end
  %call9.pn = phi %union.tree_node* [ %call9, %cond.end ], [ %call24, %cond.end21 ]
  %use.0 = phi %union.tree_node* [ %call9, %cond.end ], [ %call24, %cond.end21 ], !dbg !3779
  %stmt.0.in.in = getelementptr inbounds %union.tree_node, %union.tree_node* %call9.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3779
  %stmt.0.in = bitcast %union.tree_node** %stmt.0.in.in to %union.gimple_statement_d**, !dbg !3779
  %stmt.0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt.0.in, align 8, !dbg !3779
  call void @llvm.dbg.value(metadata %union.tree_node* %use.0, metadata !3764, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !3762, metadata !DIExpression()), !dbg !3773
  %call11 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.0) #7, !dbg !3796
  %cmp12 = icmp eq i32 %call11, 16, !dbg !3797
  br i1 %cmp12, label %land.rhs, label %while.end, !dbg !3798

land.rhs:                                         ; preds = %while.cond
  %call13 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt.0) #7, !dbg !3799
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3800
  %cmp15 = icmp eq %struct.basic_block_def* %call13, %8, !dbg !3801
  br i1 %cmp15, label %while.end, label %while.body, !dbg !3795

while.body:                                       ; preds = %land.rhs
  %call16 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt.0) #7, !dbg !3802
  %call17 = call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %call16) #7, !dbg !3802
  %tobool18 = icmp eq i8 %call17, 0, !dbg !3802
  br i1 %tobool18, label %cond.true19, label %cond.end21, !dbg !3802

cond.true19:                                      ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1955, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !3802
  br label %cond.end21, !dbg !3802

cond.end21:                                       ; preds = %while.body, %cond.true19
  %call23 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %stmt.0, i32 0) #7, !dbg !3804
  %call24 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call23) #7, !dbg !3804
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !3764, metadata !DIExpression()), !dbg !3773
  br label %while.cond, !dbg !3795, !llvm.loop !3805

while.end:                                        ; preds = %land.rhs, %while.cond
  %use.0.lcssa = phi %union.tree_node* [ %use.0, %land.rhs ], [ %use.0, %while.cond ], !dbg !3779
  call void @llvm.dbg.value(metadata %union.tree_node* %use.0.lcssa, metadata !3764, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata %union.tree_node* %use.0.lcssa, metadata !3764, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata %union.tree_node* %use.0.lcssa, metadata !3764, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata %union.tree_node* %use.0.lcssa, metadata !3764, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata %union.tree_node* %use.0.lcssa, metadata !3764, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata %union.tree_node* %use.0.lcssa, metadata !3764, metadata !DIExpression()), !dbg !3773
  call fastcc void @base_names_in_chain_on(%struct.loop* %loop, %union.tree_node* %use.0.lcssa, %union.tree_node* %4) #7, !dbg !3807
  br label %for.inc, !dbg !3808

for.inc:                                          ; preds = %for.body, %while.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !3766, metadata !DIExpression(DW_OP_deref)), !dbg !3773
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !3809
  br label %for.cond, !dbg !3810, !llvm.loop !3811

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3813
  ret void, !dbg !3813
}

; Function Attrs: nounwind uwtable
define internal fastcc void @execute_pred_commoning(%struct.loop* %loop, %struct.VEC_chain_p_heap* %chains, %struct.bitmap_head_def* %tmp_vars) unnamed_addr #5 !dbg !3814 {
entry:
  %chain = alloca %struct.chain*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3818, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %chains, metadata !3819, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_vars, metadata !3820, metadata !DIExpression()), !dbg !3823
  %0 = bitcast %struct.chain** %chain to i8*, !dbg !3824
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3824
  call void @llvm.dbg.value(metadata i32 0, metadata !3822, metadata !DIExpression()), !dbg !3823
  %base = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %chains, i64 0, i32 0, !dbg !3825
  br label %for.cond, !dbg !3828

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !3829
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3822, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata %struct.chain** %chain, metadata !3821, metadata !DIExpression(DW_OP_deref)), !dbg !3823
  %call = call fastcc i32 @VEC_chain_p_base_iterate(%struct.VEC_chain_p_base* %base, i32 %i.0, %struct.chain** nonnull %chain) #7, !dbg !3830
  %tobool1 = icmp eq i32 %call, 0, !dbg !3831
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3831

for.body:                                         ; preds = %for.cond
  %1 = load %struct.chain*, %struct.chain** %chain, align 8, !dbg !3832
  call void @llvm.dbg.value(metadata %struct.chain* %1, metadata !3821, metadata !DIExpression()), !dbg !3823
  %type = getelementptr inbounds %struct.chain, %struct.chain* %1, i64 0, i32 0, !dbg !3835
  %2 = load i32, i32* %type, align 8, !dbg !3835
  %cmp = icmp eq i32 %2, 0, !dbg !3836
  call void @llvm.dbg.value(metadata %struct.chain* %1, metadata !3821, metadata !DIExpression()), !dbg !3823
  br i1 %cmp, label %if.then, label %if.else, !dbg !3837

if.then:                                          ; preds = %for.body
  call fastcc void @execute_load_motion(%struct.loop* %loop, %struct.chain* %1, %struct.bitmap_head_def* %tmp_vars) #7, !dbg !3838
  br label %for.inc, !dbg !3838

if.else:                                          ; preds = %for.body
  call fastcc void @execute_pred_commoning_chain(%struct.loop* %loop, %struct.chain* %1, %struct.bitmap_head_def* %tmp_vars) #7, !dbg !3839
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %inc = add i32 %i.0, 1, !dbg !3840
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3822, metadata !DIExpression()), !dbg !3823
  br label %for.cond, !dbg !3841, !llvm.loop !3842

for.end:                                          ; preds = %for.cond
  call void @update_ssa(i32 16384) #6, !dbg !3844
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3845
  ret void, !dbg !3845
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @release_chains(%struct.VEC_chain_p_heap* %chains) unnamed_addr #5 !dbg !3846 {
entry:
  %chains.addr = alloca %struct.VEC_chain_p_heap*, align 8
  %chain = alloca %struct.chain*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %chains, metadata !3848, metadata !DIExpression()), !dbg !3851
  store %struct.VEC_chain_p_heap* %chains, %struct.VEC_chain_p_heap** %chains.addr, align 8
  %0 = bitcast %struct.chain** %chain to i8*, !dbg !3852
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3852
  call void @llvm.dbg.value(metadata i32 0, metadata !3849, metadata !DIExpression()), !dbg !3851
  br label %for.cond, !dbg !3853

for.cond:                                         ; preds = %for.body, %entry
  %1 = phi %struct.VEC_chain_p_heap* [ %chains, %entry ], [ %.pre, %for.body ], !dbg !3855
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3857
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3849, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %1, metadata !3848, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %1, metadata !3848, metadata !DIExpression()), !dbg !3851
  %base = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %1, i64 0, i32 0, !dbg !3855
  call void @llvm.dbg.value(metadata %struct.chain** %chain, metadata !3850, metadata !DIExpression(DW_OP_deref)), !dbg !3851
  %call = call fastcc i32 @VEC_chain_p_base_iterate(%struct.VEC_chain_p_base* %base, i32 %i.0, %struct.chain** nonnull %chain) #7, !dbg !3855
  %tobool1 = icmp eq i32 %call, 0, !dbg !3858
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3858

for.body:                                         ; preds = %for.cond
  %2 = load %struct.chain*, %struct.chain** %chain, align 8, !dbg !3859
  call void @llvm.dbg.value(metadata %struct.chain* %2, metadata !3850, metadata !DIExpression()), !dbg !3851
  call fastcc void @release_chain(%struct.chain* %2) #7, !dbg !3860
  %inc = add i32 %i.0, 1, !dbg !3861
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3849, metadata !DIExpression()), !dbg !3851
  %.pre = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %chains.addr, align 8, !dbg !3855
  br label %for.cond, !dbg !3862, !llvm.loop !3863

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap** %chains.addr, metadata !3848, metadata !DIExpression(DW_OP_deref)), !dbg !3851
  call fastcc void @VEC_chain_p_heap_free(%struct.VEC_chain_p_heap** nonnull %chains.addr) #7, !dbg !3865
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3866
  ret void, !dbg !3866
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @free_affine_expand_cache(%struct.pointer_map_t**) local_unnamed_addr #2

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_data_reference_p_base_length(%struct.VEC_data_reference_p_base* %vec_) unnamed_addr #0 !dbg !3867 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_base* %vec_, metadata !3873, metadata !DIExpression()), !dbg !3874
  %tobool = icmp eq %struct.VEC_data_reference_p_base* %vec_, null, !dbg !3875
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3875

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 0, !dbg !3875
  %0 = load i32, i32* %num, align 8, !dbg !3875
  br label %cond.end, !dbg !3875

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3875
  ret i32 %cond, !dbg !3875
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @last_always_executed_block(%struct.loop* %loop) unnamed_addr #5 !dbg !3876 {
entry:
  %exits = alloca %struct.VEC_edge_heap*, align 8
  %ex = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3880, metadata !DIExpression()), !dbg !3890
  %0 = bitcast %struct.VEC_edge_heap** %exits to i8*, !dbg !3891
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3891
  %call = tail call %struct.VEC_edge_heap* @get_loop_exit_edges(%struct.loop* %loop) #6, !dbg !3892
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call, metadata !3882, metadata !DIExpression()), !dbg !3890
  store %struct.VEC_edge_heap* %call, %struct.VEC_edge_heap** %exits, align 8, !dbg !3893
  %1 = bitcast %struct.edge_def** %ex to i8*, !dbg !3894
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3894
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !3895
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3895
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !3889, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.value(metadata i32 0, metadata !3881, metadata !DIExpression()), !dbg !3890
  br label %for.cond, !dbg !3896

for.cond:                                         ; preds = %for.body, %entry
  %3 = phi %struct.VEC_edge_heap* [ %call, %entry ], [ %.pre, %for.body ], !dbg !3898
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3900
  %last.0 = phi %struct.basic_block_def* [ %2, %entry ], [ %call3, %for.body ], !dbg !3890
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.0, metadata !3889, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3881, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %3, metadata !3882, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %3, metadata !3882, metadata !DIExpression()), !dbg !3890
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %3, i64 0, i32 0, !dbg !3898
  call void @llvm.dbg.value(metadata %struct.edge_def** %ex, metadata !3888, metadata !DIExpression(DW_OP_deref)), !dbg !3890
  %call1 = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base, i32 %i.0, %struct.edge_def** nonnull %ex) #7, !dbg !3898
  %tobool2 = icmp eq i32 %call1, 0, !dbg !3901
  br i1 %tobool2, label %for.end, label %for.body, !dbg !3901

for.body:                                         ; preds = %for.cond
  %4 = load %struct.edge_def*, %struct.edge_def** %ex, align 8, !dbg !3902
  call void @llvm.dbg.value(metadata %struct.edge_def* %4, metadata !3888, metadata !DIExpression()), !dbg !3890
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %4, i64 0, i32 0, !dbg !3903
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3903
  %call3 = call %struct.basic_block_def* @nearest_common_dominator(i32 1, %struct.basic_block_def* %last.0, %struct.basic_block_def* %5) #6, !dbg !3904
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !3889, metadata !DIExpression()), !dbg !3890
  %inc = add i32 %i.0, 1, !dbg !3905
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3881, metadata !DIExpression()), !dbg !3890
  %.pre = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %exits, align 8, !dbg !3898
  br label %for.cond, !dbg !3906, !llvm.loop !3907

for.end:                                          ; preds = %for.cond
  %last.0.lcssa = phi %struct.basic_block_def* [ %last.0, %for.cond ], !dbg !3890
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.0.lcssa, metadata !3889, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.0.lcssa, metadata !3889, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.0.lcssa, metadata !3889, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %exits, metadata !3882, metadata !DIExpression(DW_OP_deref)), !dbg !3890
  call fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** nonnull %exits) #7, !dbg !3909
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3910
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3910
  ret %struct.basic_block_def* %last.0.lcssa, !dbg !3911
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %vec_, i32 %ix_, %struct.data_reference** %ptr) unnamed_addr #0 !dbg !3912 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_base* %vec_, metadata !3917, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3918, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata %struct.data_reference** %ptr, metadata !3919, metadata !DIExpression()), !dbg !3920
  %tobool = icmp eq %struct.VEC_data_reference_p_base* %vec_, null, !dbg !3921
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3921

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 0, !dbg !3921
  %0 = load i32, i32* %num, align 8, !dbg !3921
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3921
  br i1 %cmp, label %if.then, label %if.else, !dbg !3923

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3924
  %arrayidx = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3924
  %1 = load %struct.data_reference*, %struct.data_reference** %arrayidx, align 8, !dbg !3924
  br label %return, !dbg !3924

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3926

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.data_reference* [ null, %if.else ], [ %1, %if.then ], !dbg !3928
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3928
  store %struct.data_reference* %storemerge, %struct.data_reference** %ptr, align 8, !dbg !3928
  ret i32 %retval.0, !dbg !3923
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @suitable_reference_p(%struct.data_reference* %a, i32* %ref_step) unnamed_addr #5 !dbg !3929 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_reference* %a, metadata !3934, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i32* %ref_step, metadata !3935, metadata !DIExpression()), !dbg !3938
  %ref1 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 1, !dbg !3939
  %0 = load %union.tree_node*, %union.tree_node** %ref1, align 8, !dbg !3939
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3936, metadata !DIExpression()), !dbg !3938
  %step2 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 4, i32 3, !dbg !3940
  %1 = load %union.tree_node*, %union.tree_node** %step2, align 8, !dbg !3940
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3937, metadata !DIExpression()), !dbg !3938
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !3941
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !3943

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3944
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3944
  %call = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %2) #6, !dbg !3945
  %tobool3 = icmp eq i8 %call, 0, !dbg !3945
  br i1 %tobool3, label %cleanup, label %lor.lhs.false4, !dbg !3946

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %call5 = tail call zeroext i8 @tree_could_throw_p(%union.tree_node* %0) #6, !dbg !3947
  %tobool6 = icmp eq i8 %call5, 0, !dbg !3947
  br i1 %tobool6, label %if.end, label %cleanup, !dbg !3948

if.end:                                           ; preds = %lor.lhs.false4
  %call7 = tail call i32 @integer_zerop(%union.tree_node* nonnull %1) #6, !dbg !3949
  %tobool8 = icmp eq i32 %call7, 0, !dbg !3949
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !3951

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %ref_step, align 4, !dbg !3952
  br label %cleanup, !dbg !3953

if.else:                                          ; preds = %if.end
  %call10 = tail call i32 @integer_nonzerop(%union.tree_node* nonnull %1) #6, !dbg !3954
  %tobool11 = icmp eq i32 %call10, 0, !dbg !3954
  br i1 %tobool11, label %if.else13, label %if.then12, !dbg !3956

if.then12:                                        ; preds = %if.else
  store i32 1, i32* %ref_step, align 4, !dbg !3957
  br label %cleanup, !dbg !3958

if.else13:                                        ; preds = %if.else
  store i32 2, i32* %ref_step, align 4, !dbg !3959
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry, %if.then9, %if.else13, %if.then12
  %retval.0 = phi i8 [ 0, %lor.lhs.false4 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 1, %if.then12 ], [ 1, %if.else13 ], [ 1, %if.then9 ], !dbg !3938
  ret i8 %retval.0, !dbg !3960
}

; Function Attrs: nounwind uwtable
define internal fastcc void @merge_comps(i32* %fathers, i32* %sizes, i32 %a, i32 %b) unnamed_addr #5 !dbg !3961 {
entry:
  call void @llvm.dbg.value(metadata i32* %fathers, metadata !3965, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata i32* %sizes, metadata !3966, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata i32 %a, metadata !3967, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata i32 %b, metadata !3968, metadata !DIExpression()), !dbg !3971
  %call = tail call fastcc i32 @component_of(i32* %fathers, i32 %a) #7, !dbg !3972
  call void @llvm.dbg.value(metadata i32 %call, metadata !3969, metadata !DIExpression()), !dbg !3971
  %call1 = tail call fastcc i32 @component_of(i32* %fathers, i32 %b) #7, !dbg !3973
  call void @llvm.dbg.value(metadata i32 %call1, metadata !3970, metadata !DIExpression()), !dbg !3971
  %cmp = icmp eq i32 %call, %call1, !dbg !3974
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !3976

if.end:                                           ; preds = %entry
  %idxprom = zext i32 %call to i64, !dbg !3977
  %arrayidx = getelementptr inbounds i32, i32* %sizes, i64 %idxprom, !dbg !3977
  %0 = load i32, i32* %arrayidx, align 4, !dbg !3977
  %idxprom2 = zext i32 %call1 to i64, !dbg !3979
  %arrayidx3 = getelementptr inbounds i32, i32* %sizes, i64 %idxprom2, !dbg !3979
  %1 = load i32, i32* %arrayidx3, align 4, !dbg !3979
  %cmp4 = icmp ult i32 %0, %1, !dbg !3980
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !3981

if.then5:                                         ; preds = %if.end
  %add = add i32 %1, %0, !dbg !3982
  store i32 %add, i32* %arrayidx3, align 4, !dbg !3982
  %arrayidx11 = getelementptr inbounds i32, i32* %fathers, i64 %idxprom, !dbg !3984
  store i32 %call1, i32* %arrayidx11, align 4, !dbg !3985
  br label %cleanup.cont, !dbg !3986

if.else:                                          ; preds = %if.end
  %add16 = add i32 %0, %1, !dbg !3987
  store i32 %add16, i32* %arrayidx, align 4, !dbg !3987
  %arrayidx18 = getelementptr inbounds i32, i32* %fathers, i64 %idxprom2, !dbg !3989
  store i32 %call, i32* %arrayidx18, align 4, !dbg !3990
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %entry, %if.else, %if.then5
  ret void, !dbg !3991
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %vec_, i32 %ix_, %struct.data_dependence_relation** %ptr) unnamed_addr #0 !dbg !3992 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_base* %vec_, metadata !3999, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4000, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ptr, metadata !4001, metadata !DIExpression()), !dbg !4002
  %tobool = icmp eq %struct.VEC_ddr_p_base* %vec_, null, !dbg !4003
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4003

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 0, !dbg !4003
  %0 = load i32, i32* %num, align 8, !dbg !4003
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4003
  br i1 %cmp, label %if.then, label %if.else, !dbg !4005

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4006
  %arrayidx = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4006
  %1 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %arrayidx, align 8, !dbg !4006
  br label %return, !dbg !4006

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4008

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.data_dependence_relation* [ null, %if.else ], [ %1, %if.then ], !dbg !4010
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4010
  store %struct.data_dependence_relation* %storemerge, %struct.data_dependence_relation** %ptr, align 8, !dbg !4010
  ret i32 %retval.0, !dbg !4005
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @component_of(i32* %fathers, i32 %a) unnamed_addr #5 !dbg !4011 {
entry:
  call void @llvm.dbg.value(metadata i32* %fathers, metadata !4015, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %a, metadata !4016, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %a, metadata !4017, metadata !DIExpression()), !dbg !4019
  br label %for.cond, !dbg !4020

for.cond:                                         ; preds = %for.inc, %entry
  %root.0 = phi i32 [ %a, %entry ], [ %0, %for.inc ], !dbg !4022
  call void @llvm.dbg.value(metadata i32 %root.0, metadata !4017, metadata !DIExpression()), !dbg !4019
  %idxprom = zext i32 %root.0 to i64, !dbg !4023
  %arrayidx = getelementptr inbounds i32, i32* %fathers, i64 %idxprom, !dbg !4023
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4023
  %cmp = icmp eq i32 %root.0, %0, !dbg !4025
  br i1 %cmp, label %for.cond3.preheader, label %for.inc, !dbg !4026

for.cond3.preheader:                              ; preds = %for.cond
  %root.0.lcssa = phi i32 [ %root.0, %for.cond ], !dbg !4022
  call void @llvm.dbg.value(metadata i32 %root.0.lcssa, metadata !4017, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %root.0.lcssa, metadata !4017, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %root.0.lcssa, metadata !4017, metadata !DIExpression()), !dbg !4019
  br label %for.cond3, !dbg !4027

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 %0, metadata !4017, metadata !DIExpression()), !dbg !4019
  br label %for.cond, !dbg !4029, !llvm.loop !4030

for.cond3:                                        ; preds = %for.cond3.preheader, %for.body5
  %a.addr.0 = phi i32 [ %1, %for.body5 ], [ %a, %for.cond3.preheader ]
  call void @llvm.dbg.value(metadata i32 %a.addr.0, metadata !4016, metadata !DIExpression()), !dbg !4019
  %cmp4 = icmp eq i32 %a.addr.0, %root.0.lcssa, !dbg !4032
  br i1 %cmp4, label %for.end11, label %for.body5, !dbg !4027

for.body5:                                        ; preds = %for.cond3
  %idxprom6 = zext i32 %a.addr.0 to i64, !dbg !4034
  %arrayidx7 = getelementptr inbounds i32, i32* %fathers, i64 %idxprom6, !dbg !4034
  %1 = load i32, i32* %arrayidx7, align 4, !dbg !4034
  call void @llvm.dbg.value(metadata i32 %1, metadata !4018, metadata !DIExpression()), !dbg !4019
  store i32 %root.0.lcssa, i32* %arrayidx7, align 4, !dbg !4036
  call void @llvm.dbg.value(metadata i32 %1, metadata !4016, metadata !DIExpression()), !dbg !4019
  br label %for.cond3, !dbg !4037, !llvm.loop !4038

for.end11:                                        ; preds = %for.cond3
  ret i32 %root.0.lcssa, !dbg !4040
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @determine_offset(%struct.data_reference* %a, %struct.data_reference* %b, %struct.double_int* %off) unnamed_addr #5 !dbg !4041 {
entry:
  %diff = alloca %struct.affine_tree_combination, align 8
  %baseb = alloca %struct.affine_tree_combination, align 8
  %step = alloca %struct.affine_tree_combination, align 8
  %tmp = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %struct.data_reference* %a, metadata !4046, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.data_reference* %b, metadata !4047, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.double_int* %off, metadata !4048, metadata !DIExpression()), !dbg !4070
  %0 = bitcast %struct.affine_tree_combination* %diff to i8*, !dbg !4071
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %0) #8, !dbg !4071
  %1 = bitcast %struct.affine_tree_combination* %baseb to i8*, !dbg !4071
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %1) #8, !dbg !4071
  %2 = bitcast %struct.affine_tree_combination* %step to i8*, !dbg !4071
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %2) #8, !dbg !4071
  %ref = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 1, !dbg !4072
  %3 = bitcast %union.tree_node** %ref to %struct.tree_common**, !dbg !4072
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !4072
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !4072
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4072
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4068, metadata !DIExpression()), !dbg !4070
  %ref1 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 1, !dbg !4073
  %6 = bitcast %union.tree_node** %ref1 to %struct.tree_common**, !dbg !4073
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !4073
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !4073
  %8 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !4073
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4069, metadata !DIExpression()), !dbg !4070
  %call = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %8, %union.tree_node* %5) #6, !dbg !4074
  %tobool = icmp eq i8 %call, 0, !dbg !4074
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4076

if.end:                                           ; preds = %entry
  %step4 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 4, i32 3, !dbg !4077
  %9 = load %union.tree_node*, %union.tree_node** %step4, align 8, !dbg !4077
  %step6 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 4, i32 3, !dbg !4079
  %10 = load %union.tree_node*, %union.tree_node** %step6, align 8, !dbg !4079
  %call7 = tail call i32 @operand_equal_p(%union.tree_node* %9, %union.tree_node* %10, i32 0) #6, !dbg !4080
  %tobool8 = icmp eq i32 %call7, 0, !dbg !4080
  br i1 %tobool8, label %cleanup, label %lor.lhs.false, !dbg !4081

lor.lhs.false:                                    ; preds = %if.end
  %base_address = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 4, i32 0, !dbg !4082
  %11 = load %union.tree_node*, %union.tree_node** %base_address, align 8, !dbg !4082
  %base_address11 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 4, i32 0, !dbg !4083
  %12 = load %union.tree_node*, %union.tree_node** %base_address11, align 8, !dbg !4083
  %call12 = tail call i32 @operand_equal_p(%union.tree_node* %11, %union.tree_node* %12, i32 0) #6, !dbg !4084
  %tobool13 = icmp eq i32 %call12, 0, !dbg !4084
  br i1 %tobool13, label %cleanup, label %if.end15, !dbg !4085

if.end15:                                         ; preds = %lor.lhs.false
  %13 = load %union.tree_node*, %union.tree_node** %step4, align 8, !dbg !4086
  %call18 = tail call i32 @integer_zerop(%union.tree_node* %13) #6, !dbg !4088
  %tobool19 = icmp eq i32 %call18, 0, !dbg !4088
  br i1 %tobool19, label %if.end32, label %if.then20, !dbg !4089

if.then20:                                        ; preds = %if.end15
  %14 = bitcast %struct.double_int* %tmp to i8*, !dbg !4090
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8, !dbg !4090
  %call21 = tail call fastcc { i64, i64 } @shwi_to_double_int(i64 0) #7, !dbg !4090
  %15 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 0, !dbg !4090
  %16 = extractvalue { i64, i64 } %call21, 0, !dbg !4090
  store i64 %16, i64* %15, align 8, !dbg !4090
  %17 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 1, !dbg !4090
  %18 = extractvalue { i64, i64 } %call21, 1, !dbg !4090
  store i64 %18, i64* %17, align 8, !dbg !4090
  %19 = bitcast %struct.double_int* %off to i8*, !dbg !4090
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %14, i64 16, i1 false), !dbg !4090
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8, !dbg !4090
  %offset = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 4, i32 1, !dbg !4092
  %20 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !4092
  %offset24 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 4, i32 1, !dbg !4093
  %21 = load %union.tree_node*, %union.tree_node** %offset24, align 8, !dbg !4093
  %call25 = tail call i32 @operand_equal_p(%union.tree_node* %20, %union.tree_node* %21, i32 0) #6, !dbg !4094
  %tobool26 = icmp eq i32 %call25, 0, !dbg !4094
  br i1 %tobool26, label %land.end, label %land.rhs, !dbg !4095

land.rhs:                                         ; preds = %if.then20
  %init = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 4, i32 2, !dbg !4096
  %22 = load %union.tree_node*, %union.tree_node** %init, align 8, !dbg !4096
  %init29 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 4, i32 2, !dbg !4097
  %23 = load %union.tree_node*, %union.tree_node** %init29, align 8, !dbg !4097
  %call30 = tail call i32 @operand_equal_p(%union.tree_node* %22, %union.tree_node* %23, i32 0) #6, !dbg !4098
  %tobool31 = icmp ne i32 %call30, 0, !dbg !4095
  %phitmp = zext i1 %tobool31 to i8
  br label %land.end

land.end:                                         ; preds = %if.then20, %land.rhs
  %24 = phi i8 [ 0, %if.then20 ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !4099

if.end32:                                         ; preds = %if.end15
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %diff, metadata !4049, metadata !DIExpression(DW_OP_deref)), !dbg !4070
  call fastcc void @aff_combination_dr_offset(%struct.data_reference* %a, %struct.affine_tree_combination* nonnull %diff) #7, !dbg !4100
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %baseb, metadata !4066, metadata !DIExpression(DW_OP_deref)), !dbg !4070
  call fastcc void @aff_combination_dr_offset(%struct.data_reference* %b, %struct.affine_tree_combination* nonnull %baseb) #7, !dbg !4101
  %call33 = call fastcc { i64, i64 } @shwi_to_double_int(i64 -1) #7, !dbg !4102
  %25 = extractvalue { i64, i64 } %call33, 0, !dbg !4102
  %26 = extractvalue { i64, i64 } %call33, 1, !dbg !4102
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %baseb, metadata !4066, metadata !DIExpression(DW_OP_deref)), !dbg !4070
  call void @aff_combination_scale(%struct.affine_tree_combination* nonnull %baseb, i64 %25, i64 %26) #6, !dbg !4103
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %diff, metadata !4049, metadata !DIExpression(DW_OP_deref)), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %baseb, metadata !4066, metadata !DIExpression(DW_OP_deref)), !dbg !4070
  call void @aff_combination_add(%struct.affine_tree_combination* nonnull %diff, %struct.affine_tree_combination* nonnull %baseb) #6, !dbg !4104
  %27 = load %union.tree_node*, %union.tree_node** %step4, align 8, !dbg !4105
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4106
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %step, metadata !4067, metadata !DIExpression(DW_OP_deref)), !dbg !4070
  call void @tree_to_aff_combination_expand(%union.tree_node* %27, %union.tree_node* %28, %struct.affine_tree_combination* nonnull %step, %struct.pointer_map_t** nonnull @name_expansions) #6, !dbg !4107
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %diff, metadata !4049, metadata !DIExpression(DW_OP_deref)), !dbg !4070
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %step, metadata !4067, metadata !DIExpression(DW_OP_deref)), !dbg !4070
  %call36 = call zeroext i8 @aff_combination_constant_multiple_p(%struct.affine_tree_combination* nonnull %diff, %struct.affine_tree_combination* nonnull %step, %struct.double_int* %off) #6, !dbg !4108
  br label %cleanup, !dbg !4109

cleanup:                                          ; preds = %lor.lhs.false, %if.end, %entry, %if.end32, %land.end
  %retval.0 = phi i8 [ %24, %land.end ], [ %call36, %if.end32 ], [ 0, %entry ], [ 0, %lor.lhs.false ], [ 0, %if.end ], !dbg !4070
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %2) #8, !dbg !4110
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %1) #8, !dbg !4110
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %0) #8, !dbg !4110
  ret i8 %retval.0, !dbg !4110
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_dref_heap* @VEC_dref_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4111 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4115, metadata !DIExpression()), !dbg !4116
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !4117
  %0 = bitcast i8* %call to %struct.VEC_dref_heap*, !dbg !4117
  ret %struct.VEC_dref_heap* %0, !dbg !4117
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i64, i64 } @shwi_to_double_int(i64 %cst) unnamed_addr #0 !dbg !4118 {
entry:
  call void @llvm.dbg.value(metadata i64 %cst, metadata !4122, metadata !DIExpression()), !dbg !4124
  %cst.lobit = ashr i64 %cst, 63, !dbg !4125
  %0 = insertvalue { i64, i64 } undef, i64 %cst, 0, !dbg !4126
  %1 = insertvalue { i64, i64 } %0, i64 %cst.lobit, 1, !dbg !4126
  ret { i64, i64 } %1, !dbg !4126
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4127 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4131, metadata !DIExpression()), !dbg !4132
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !4133
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4133
  ret %struct.basic_block_def* %0, !dbg !4134
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_dref_base_length(%struct.VEC_dref_base* %vec_) unnamed_addr #0 !dbg !4135 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dref_base* %vec_, metadata !4139, metadata !DIExpression()), !dbg !4140
  %tobool = icmp eq %struct.VEC_dref_base* %vec_, null, !dbg !4141
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4141

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_dref_base, %struct.VEC_dref_base* %vec_, i64 0, i32 0, !dbg !4141
  %0 = load i32, i32* %num, align 8, !dbg !4141
  br label %cond.end, !dbg !4141

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4141
  ret i32 %cond, !dbg !4141
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.dref_d** @VEC_dref_base_quick_push(%struct.VEC_dref_base* %vec_, %struct.dref_d* %obj_) unnamed_addr #0 !dbg !4142 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dref_base* %vec_, metadata !4147, metadata !DIExpression()), !dbg !4150
  call void @llvm.dbg.value(metadata %struct.dref_d* %obj_, metadata !4148, metadata !DIExpression()), !dbg !4150
  %num1 = getelementptr inbounds %struct.VEC_dref_base, %struct.VEC_dref_base* %vec_, i64 0, i32 0, !dbg !4151
  %0 = load i32, i32* %num1, align 8, !dbg !4151
  %inc = add i32 %0, 1, !dbg !4151
  store i32 %inc, i32* %num1, align 8, !dbg !4151
  %idxprom = zext i32 %0 to i64, !dbg !4151
  %arrayidx = getelementptr inbounds %struct.VEC_dref_base, %struct.VEC_dref_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4151
  call void @llvm.dbg.value(metadata %struct.dref_d** %arrayidx, metadata !4149, metadata !DIExpression()), !dbg !4150
  store %struct.dref_d* %obj_, %struct.dref_d** %arrayidx, align 8, !dbg !4151
  ret %struct.dref_d** %arrayidx, !dbg !4151
}

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local %struct.VEC_edge_heap* @get_loop_exit_edges(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %vec_, i32 %ix_, %struct.edge_def** %ptr) unnamed_addr #0 !dbg !4152 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4159, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4160, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata %struct.edge_def** %ptr, metadata !4161, metadata !DIExpression()), !dbg !4162
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4163
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4163

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4163
  %0 = load i32, i32* %num, align 8, !dbg !4163
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4163
  br i1 %cmp, label %if.then, label %if.else, !dbg !4165

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4166
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4166
  %1 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4166
  br label %return, !dbg !4166

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4168

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ null, %if.else ], [ %1, %if.then ], !dbg !4170
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4170
  store %struct.edge_def* %storemerge, %struct.edge_def** %ptr, align 8, !dbg !4170
  ret i32 %retval.0, !dbg !4165
}

declare dso_local %struct.basic_block_def* @nearest_common_dominator(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** %vec_) unnamed_addr #0 !dbg !4171 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %vec_, metadata !4176, metadata !DIExpression()), !dbg !4177
  %0 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %vec_, align 8, !dbg !4178
  %tobool = icmp eq %struct.VEC_edge_heap* %0, null, !dbg !4178
  br i1 %tobool, label %if.end, label %if.then, !dbg !4180

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_edge_heap* %0 to i8*, !dbg !4180
  tail call void @free(i8* nonnull %1) #6, !dbg !4178
  br label %if.end, !dbg !4178

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %vec_, align 8, !dbg !4180
  ret void, !dbg !4180
}

declare dso_local zeroext i8 @is_gimple_reg_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @tree_could_throw_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_nonzerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @aff_combination_dr_offset(%struct.data_reference* %dr, %struct.affine_tree_combination* %offset) unnamed_addr #5 !dbg !4181 {
entry:
  %delta = alloca %struct.affine_tree_combination, align 8
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr, metadata !4186, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %offset, metadata !4187, metadata !DIExpression()), !dbg !4189
  %0 = bitcast %struct.affine_tree_combination* %delta to i8*, !dbg !4190
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %0) #8, !dbg !4190
  %offset1 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 4, i32 1, !dbg !4191
  %1 = load %union.tree_node*, %union.tree_node** %offset1, align 8, !dbg !4191
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4192
  tail call void @tree_to_aff_combination_expand(%union.tree_node* %1, %union.tree_node* %2, %struct.affine_tree_combination* %offset, %struct.pointer_map_t** nonnull @name_expansions) #6, !dbg !4193
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4194
  %init = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 4, i32 2, !dbg !4195
  %4 = load %union.tree_node*, %union.tree_node** %init, align 8, !dbg !4195
  %call = tail call { i64, i64 } @tree_to_double_int(%union.tree_node* %4) #6, !dbg !4196
  %5 = extractvalue { i64, i64 } %call, 0, !dbg !4196
  %6 = extractvalue { i64, i64 } %call, 1, !dbg !4196
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %delta, metadata !4188, metadata !DIExpression(DW_OP_deref)), !dbg !4189
  call void @aff_combination_const(%struct.affine_tree_combination* nonnull %delta, %union.tree_node* %3, i64 %5, i64 %6) #6, !dbg !4197
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %delta, metadata !4188, metadata !DIExpression(DW_OP_deref)), !dbg !4189
  call void @aff_combination_add(%struct.affine_tree_combination* %offset, %struct.affine_tree_combination* nonnull %delta) #6, !dbg !4198
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %0) #8, !dbg !4199
  ret void, !dbg !4199
}

declare dso_local void @aff_combination_scale(%struct.affine_tree_combination*, i64, i64) local_unnamed_addr #2

declare dso_local void @aff_combination_add(%struct.affine_tree_combination*, %struct.affine_tree_combination*) local_unnamed_addr #2

declare dso_local void @tree_to_aff_combination_expand(%union.tree_node*, %union.tree_node*, %struct.affine_tree_combination*, %struct.pointer_map_t**) local_unnamed_addr #2

declare dso_local zeroext i8 @aff_combination_constant_multiple_p(%struct.affine_tree_combination*, %struct.affine_tree_combination*, %struct.double_int*) local_unnamed_addr #2

declare dso_local void @aff_combination_const(%struct.affine_tree_combination*, %union.tree_node*, i64, i64) local_unnamed_addr #2

declare dso_local { i64, i64 } @tree_to_double_int(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @suitable_component_p(%struct.loop* %loop, %struct.component* %comp) unnamed_addr #5 !dbg !4200 {
entry:
  %a = alloca %struct.dref_d*, align 8
  %tmp = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4204, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata %struct.component* %comp, metadata !4205, metadata !DIExpression()), !dbg !4213
  %0 = bitcast %struct.dref_d** %a to i8*, !dbg !4214
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4214
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !4215
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4215
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !4210, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata i8 0, metadata !4212, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata i32 0, metadata !4206, metadata !DIExpression()), !dbg !4213
  %refs = getelementptr inbounds %struct.component, %struct.component* %comp, i64 0, i32 0, !dbg !4216
  br label %for.cond, !dbg !4219

for.cond:                                         ; preds = %cond.end10, %entry
  %bp.0 = phi %struct.basic_block_def* [ %1, %entry ], [ %call3, %cond.end10 ], !dbg !4213
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cond.end10 ], !dbg !4220
  %has_write.0 = phi i8 [ 0, %entry ], [ %spec.select, %cond.end10 ], !dbg !4221
  call void @llvm.dbg.value(metadata i8 %has_write.0, metadata !4212, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4206, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bp.0, metadata !4210, metadata !DIExpression()), !dbg !4213
  %2 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4222
  %tobool = icmp eq %struct.VEC_dref_heap* %2, null, !dbg !4222
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4222

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %2, i64 0, i32 0, !dbg !4222
  br label %cond.end, !dbg !4222

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !4222
  call void @llvm.dbg.value(metadata %struct.dref_d** %a, metadata !4207, metadata !DIExpression(DW_OP_deref)), !dbg !4213
  %call = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond, i32 %i.0, %struct.dref_d** nonnull %a) #7, !dbg !4222
  %tobool2 = icmp eq i32 %call, 0, !dbg !4223
  br i1 %tobool2, label %for.end, label %for.body, !dbg !4223

for.body:                                         ; preds = %cond.end
  %3 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !4224
  call void @llvm.dbg.value(metadata %struct.dref_d* %3, metadata !4207, metadata !DIExpression()), !dbg !4213
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %3, i64 0, i32 1, !dbg !4226
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4226
  %call3 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %4) #7, !dbg !4227
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !4209, metadata !DIExpression()), !dbg !4213
  %call4 = call zeroext i8 @just_once_each_iteration_p(%struct.loop* %loop, %struct.basic_block_def* %call3) #6, !dbg !4228
  %tobool5 = icmp eq i8 %call4, 0, !dbg !4228
  br i1 %tobool5, label %cleanup.loopexit1, label %if.end, !dbg !4230

if.end:                                           ; preds = %for.body
  %call6 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %call3, %struct.basic_block_def* %bp.0) #6, !dbg !4231
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4231
  br i1 %tobool7, label %cond.true8, label %cond.end10, !dbg !4231

cond.true8:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 828, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4231
  br label %cond.end10, !dbg !4231

cond.end10:                                       ; preds = %if.end, %cond.true8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !4210, metadata !DIExpression()), !dbg !4213
  %5 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !4232
  call void @llvm.dbg.value(metadata %struct.dref_d* %5, metadata !4207, metadata !DIExpression()), !dbg !4213
  %ref = getelementptr inbounds %struct.dref_d, %struct.dref_d* %5, i64 0, i32 0, !dbg !4232
  %6 = load %struct.data_reference*, %struct.data_reference** %ref, align 8, !dbg !4232
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %6, i64 0, i32 3, !dbg !4232
  %7 = load i8, i8* %is_read, align 8, !dbg !4232
  %tobool12 = icmp eq i8 %7, 0, !dbg !4232
  %spec.select = select i1 %tobool12, i8 1, i8 %has_write.0, !dbg !4234
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !4212, metadata !DIExpression()), !dbg !4213
  %inc = add i32 %i.0, 1, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4206, metadata !DIExpression()), !dbg !4213
  br label %for.cond, !dbg !4236, !llvm.loop !4237

for.end:                                          ; preds = %cond.end
  %has_write.0.lcssa = phi i8 [ %has_write.0, %cond.end ], !dbg !4221
  call void @llvm.dbg.value(metadata i8 %has_write.0.lcssa, metadata !4212, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata i8 %has_write.0.lcssa, metadata !4212, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata i8 %has_write.0.lcssa, metadata !4212, metadata !DIExpression()), !dbg !4213
  %8 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4239
  %tobool16 = icmp eq %struct.VEC_dref_heap* %8, null, !dbg !4239
  br i1 %tobool16, label %cond.end21, label %cond.true17, !dbg !4239

cond.true17:                                      ; preds = %for.end
  %base19 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %8, i64 0, i32 0, !dbg !4239
  br label %cond.end21, !dbg !4239

cond.end21:                                       ; preds = %for.end, %cond.true17
  %cond22 = phi %struct.VEC_dref_base* [ %base19, %cond.true17 ], [ null, %for.end ], !dbg !4239
  %call23 = call fastcc %struct.dref_d* @VEC_dref_base_index(%struct.VEC_dref_base* %cond22, i32 0) #7, !dbg !4239
  call void @llvm.dbg.value(metadata %struct.dref_d* %call23, metadata !4208, metadata !DIExpression()), !dbg !4213
  %ref24 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %call23, i64 0, i32 0, !dbg !4240
  %9 = load %struct.data_reference*, %struct.data_reference** %ref24, align 8, !dbg !4240
  %comp_step = getelementptr inbounds %struct.component, %struct.component* %comp, i64 0, i32 1, !dbg !4241
  %call25 = call fastcc zeroext i8 @suitable_reference_p(%struct.data_reference* %9, i32* nonnull %comp_step) #7, !dbg !4242
  call void @llvm.dbg.value(metadata i8 %call25, metadata !4211, metadata !DIExpression()), !dbg !4213
  %tobool26 = icmp eq i8 %call25, 0, !dbg !4243
  br i1 %tobool26, label %cond.true27, label %cond.end29, !dbg !4243

cond.true27:                                      ; preds = %cond.end21
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 837, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4243
  br label %cond.end29, !dbg !4243

cond.end29:                                       ; preds = %cond.end21, %cond.true27
  %offset = getelementptr inbounds %struct.dref_d, %struct.dref_d* %call23, i64 0, i32 4, !dbg !4244
  %10 = bitcast %struct.double_int* %tmp to i8*, !dbg !4245
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8, !dbg !4245
  %call31 = call fastcc { i64, i64 } @shwi_to_double_int(i64 0) #7, !dbg !4245
  %11 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 0, !dbg !4245
  %12 = extractvalue { i64, i64 } %call31, 0, !dbg !4245
  store i64 %12, i64* %11, align 8, !dbg !4245
  %13 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 1, !dbg !4245
  %14 = extractvalue { i64, i64 } %call31, 1, !dbg !4245
  store i64 %14, i64* %13, align 8, !dbg !4245
  %15 = bitcast %struct.double_int* %offset to i8*, !dbg !4245
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %10, i64 16, i1 false), !dbg !4245
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8, !dbg !4245
  call void @llvm.dbg.value(metadata i32 1, metadata !4206, metadata !DIExpression()), !dbg !4213
  br label %for.cond32, !dbg !4246

for.cond32:                                       ; preds = %for.inc51, %cond.end29
  %i.1 = phi i32 [ 1, %cond.end29 ], [ %inc52, %for.inc51 ], !dbg !4248
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4206, metadata !DIExpression()), !dbg !4213
  %16 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4249
  %tobool34 = icmp eq %struct.VEC_dref_heap* %16, null, !dbg !4249
  br i1 %tobool34, label %cond.end39, label %cond.true35, !dbg !4249

cond.true35:                                      ; preds = %for.cond32
  %base37 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %16, i64 0, i32 0, !dbg !4249
  br label %cond.end39, !dbg !4249

cond.end39:                                       ; preds = %for.cond32, %cond.true35
  %cond40 = phi %struct.VEC_dref_base* [ %base37, %cond.true35 ], [ null, %for.cond32 ], !dbg !4249
  call void @llvm.dbg.value(metadata %struct.dref_d** %a, metadata !4207, metadata !DIExpression(DW_OP_deref)), !dbg !4213
  %call41 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond40, i32 %i.1, %struct.dref_d** nonnull %a) #7, !dbg !4249
  %tobool42 = icmp eq i32 %call41, 0, !dbg !4251
  br i1 %tobool42, label %for.end53, label %for.body43, !dbg !4251

for.body43:                                       ; preds = %cond.end39
  %17 = load %struct.data_reference*, %struct.data_reference** %ref24, align 8, !dbg !4252
  %18 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !4255
  call void @llvm.dbg.value(metadata %struct.dref_d* %18, metadata !4207, metadata !DIExpression()), !dbg !4213
  %ref45 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %18, i64 0, i32 0, !dbg !4256
  %19 = load %struct.data_reference*, %struct.data_reference** %ref45, align 8, !dbg !4256
  call void @llvm.dbg.value(metadata %struct.dref_d* %18, metadata !4207, metadata !DIExpression()), !dbg !4213
  %offset46 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %18, i64 0, i32 4, !dbg !4257
  %call47 = call fastcc zeroext i8 @determine_offset(%struct.data_reference* %17, %struct.data_reference* %19, %struct.double_int* nonnull %offset46) #7, !dbg !4258
  %tobool48 = icmp eq i8 %call47, 0, !dbg !4258
  br i1 %tobool48, label %cleanup.loopexit, label %for.inc51, !dbg !4259

for.inc51:                                        ; preds = %for.body43
  %inc52 = add i32 %i.1, 1, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %inc52, metadata !4206, metadata !DIExpression()), !dbg !4213
  br label %for.cond32, !dbg !4261, !llvm.loop !4262

for.end53:                                        ; preds = %cond.end39
  %tobool54 = icmp eq i8 %has_write.0.lcssa, 0, !dbg !4264
  br i1 %tobool54, label %if.end58, label %land.lhs.true, !dbg !4266

land.lhs.true:                                    ; preds = %for.end53
  %20 = load i32, i32* %comp_step, align 8, !dbg !4267
  %cmp = icmp eq i32 %20, 2, !dbg !4268
  br i1 %cmp, label %cleanup, label %if.end58, !dbg !4269

if.end58:                                         ; preds = %for.end53, %land.lhs.true
  br label %cleanup, !dbg !4270

cleanup.loopexit:                                 ; preds = %for.body43
  br label %cleanup, !dbg !4271

cleanup.loopexit1:                                ; preds = %for.body
  br label %cleanup, !dbg !4271

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %land.lhs.true, %if.end58
  %retval.0 = phi i8 [ 1, %if.end58 ], [ 0, %land.lhs.true ], [ 0, %cleanup.loopexit ], [ 0, %cleanup.loopexit1 ], !dbg !4213
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4271
  ret i8 %retval.0, !dbg !4271
}

; Function Attrs: nounwind uwtable
define internal fastcc void @release_component(%struct.component* %comp) unnamed_addr #5 !dbg !4272 {
entry:
  call void @llvm.dbg.value(metadata %struct.component* %comp, metadata !4274, metadata !DIExpression()), !dbg !4275
  %refs = getelementptr inbounds %struct.component, %struct.component* %comp, i64 0, i32 0, !dbg !4276
  tail call fastcc void @VEC_dref_heap_free(%struct.VEC_dref_heap** %refs) #7, !dbg !4276
  %0 = bitcast %struct.component* %comp to i8*, !dbg !4277
  tail call void @free(i8* %0) #6, !dbg !4278
  ret void, !dbg !4279
}

declare dso_local zeroext i8 @just_once_each_iteration_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.dref_d* @VEC_dref_base_index(%struct.VEC_dref_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4280 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dref_base* %vec_, metadata !4284, metadata !DIExpression()), !dbg !4286
  call void @llvm.dbg.value(metadata i32 0, metadata !4285, metadata !DIExpression()), !dbg !4286
  br label %land.end, !dbg !4287

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %arrayidx = getelementptr inbounds %struct.VEC_dref_base, %struct.VEC_dref_base* %vec_, i64 0, i32 2, i64 0, !dbg !4287
  %0 = load %struct.dref_d*, %struct.dref_d** %arrayidx, align 8, !dbg !4287
  ret %struct.dref_d* %0, !dbg !4287
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_dref_heap_free(%struct.VEC_dref_heap** %vec_) unnamed_addr #0 !dbg !4288 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dref_heap** %vec_, metadata !4293, metadata !DIExpression()), !dbg !4294
  %0 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %vec_, align 8, !dbg !4295
  %tobool = icmp eq %struct.VEC_dref_heap* %0, null, !dbg !4295
  br i1 %tobool, label %if.end, label %if.then, !dbg !4297

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_dref_heap* %0 to i8*, !dbg !4297
  tail call void @free(i8* nonnull %1) #6, !dbg !4295
  br label %if.end, !dbg !4295

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_dref_heap* null, %struct.VEC_dref_heap** %vec_, align 8, !dbg !4297
  ret void, !dbg !4297
}

; Function Attrs: nounwind uwtable
define internal fastcc void @determine_roots_comp(%struct.loop* %loop, %struct.component* %comp, %struct.VEC_chain_p_heap** %chains) unnamed_addr #5 !dbg !4298 {
entry:
  %a = alloca %struct.dref_d*, align 8
  %last_ofs = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4300, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata %struct.component* %comp, metadata !4301, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap** %chains, metadata !4302, metadata !DIExpression()), !dbg !4307
  %0 = bitcast %struct.dref_d** %a to i8*, !dbg !4308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4308
  call void @llvm.dbg.value(metadata %struct.chain* null, metadata !4305, metadata !DIExpression()), !dbg !4307
  %1 = bitcast %struct.double_int* %last_ofs to i8*, !dbg !4309
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4309
  %call = tail call fastcc { i64, i64 } @shwi_to_double_int(i64 0) #7, !dbg !4310
  %2 = getelementptr inbounds %struct.double_int, %struct.double_int* %last_ofs, i64 0, i32 0, !dbg !4310
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !4310
  store i64 %3, i64* %2, align 8, !dbg !4310
  %4 = getelementptr inbounds %struct.double_int, %struct.double_int* %last_ofs, i64 0, i32 1, !dbg !4310
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !4310
  store i64 %5, i64* %4, align 8, !dbg !4310
  %comp_step = getelementptr inbounds %struct.component, %struct.component* %comp, i64 0, i32 1, !dbg !4311
  %6 = load i32, i32* %comp_step, align 8, !dbg !4311
  %cmp = icmp eq i32 %6, 0, !dbg !4313
  br i1 %cmp, label %if.then, label %if.end, !dbg !4314

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.chain* @make_invariant_chain(%struct.component* %comp) #7, !dbg !4315
  call void @llvm.dbg.value(metadata %struct.chain* %call1, metadata !4305, metadata !DIExpression()), !dbg !4307
  %call2 = tail call fastcc %struct.chain** @VEC_chain_p_heap_safe_push(%struct.VEC_chain_p_heap** %chains, %struct.chain* %call1) #7, !dbg !4317
  br label %cleanup, !dbg !4318

if.end:                                           ; preds = %entry
  %refs = getelementptr inbounds %struct.component, %struct.component* %comp, i64 0, i32 0, !dbg !4319
  %7 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4319
  %tobool = icmp eq %struct.VEC_dref_heap* %7, null, !dbg !4319
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4319

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %7, i64 0, i32 0, !dbg !4319
  br label %cond.end, !dbg !4319

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !4319
  %call4 = tail call fastcc %struct.dref_d** @VEC_dref_base_address(%struct.VEC_dref_base* %cond) #7, !dbg !4319
  %8 = bitcast %struct.dref_d** %call4 to i8*, !dbg !4319
  %9 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4320
  %tobool6 = icmp eq %struct.VEC_dref_heap* %9, null, !dbg !4320
  br i1 %tobool6, label %cond.end11, label %cond.true7, !dbg !4320

cond.true7:                                       ; preds = %cond.end
  %base9 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %9, i64 0, i32 0, !dbg !4320
  br label %cond.end11, !dbg !4320

cond.end11:                                       ; preds = %cond.end, %cond.true7
  %cond12 = phi %struct.VEC_dref_base* [ %base9, %cond.true7 ], [ null, %cond.end ], !dbg !4320
  %call13 = tail call fastcc i32 @VEC_dref_base_length(%struct.VEC_dref_base* %cond12) #7, !dbg !4320
  %conv = zext i32 %call13 to i64, !dbg !4320
  tail call void @spec_qsort(i8* %8, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @order_drefs) #6, !dbg !4321
  call void @llvm.dbg.value(metadata i32 0, metadata !4303, metadata !DIExpression()), !dbg !4307
  br label %for.cond, !dbg !4322

for.cond:                                         ; preds = %for.inc, %cond.end11
  %i.0 = phi i32 [ 0, %cond.end11 ], [ %inc, %for.inc ], !dbg !4324
  %chain.0 = phi %struct.chain* [ null, %cond.end11 ], [ %chain.1, %for.inc ], !dbg !4307
  call void @llvm.dbg.value(metadata %struct.chain* %chain.0, metadata !4305, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4303, metadata !DIExpression()), !dbg !4307
  %10 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4325
  %tobool15 = icmp eq %struct.VEC_dref_heap* %10, null, !dbg !4325
  br i1 %tobool15, label %cond.end20, label %cond.true16, !dbg !4325

cond.true16:                                      ; preds = %for.cond
  %base18 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %10, i64 0, i32 0, !dbg !4325
  br label %cond.end20, !dbg !4325

cond.end20:                                       ; preds = %for.cond, %cond.true16
  %cond21 = phi %struct.VEC_dref_base* [ %base18, %cond.true16 ], [ null, %for.cond ], !dbg !4325
  call void @llvm.dbg.value(metadata %struct.dref_d** %a, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4307
  %call22 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond21, i32 %i.0, %struct.dref_d** nonnull %a) #7, !dbg !4325
  %tobool23 = icmp eq i32 %call22, 0, !dbg !4327
  br i1 %tobool23, label %for.end, label %for.body, !dbg !4327

for.body:                                         ; preds = %cond.end20
  %tobool24 = icmp eq %struct.chain* %chain.0, null, !dbg !4328
  br i1 %tobool24, label %if.then39, label %lor.lhs.false, !dbg !4331

lor.lhs.false:                                    ; preds = %for.body
  %11 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !4332
  call void @llvm.dbg.value(metadata %struct.dref_d* %11, metadata !4304, metadata !DIExpression()), !dbg !4307
  %ref = getelementptr inbounds %struct.dref_d, %struct.dref_d* %11, i64 0, i32 0, !dbg !4332
  %12 = load %struct.data_reference*, %struct.data_reference** %ref, align 8, !dbg !4332
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %12, i64 0, i32 3, !dbg !4332
  %13 = load i8, i8* %is_read, align 8, !dbg !4332
  %tobool25 = icmp eq i8 %13, 0, !dbg !4332
  br i1 %tobool25, label %if.then39, label %lor.lhs.false26, !dbg !4333

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %14 = load i32, i32* @target_avail_regs, align 4, !dbg !4334
  %cmp27 = icmp ult i32 %14, 16, !dbg !4334
  %cond29 = select i1 %cmp27, i64 4, i64 8, !dbg !4334
  %call31 = call fastcc { i64, i64 } @uhwi_to_double_int(i64 %cond29) #7, !dbg !4335
  %15 = extractvalue { i64, i64 } %call31, 0, !dbg !4335
  %16 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !4336
  call void @llvm.dbg.value(metadata %struct.dref_d* %16, metadata !4304, metadata !DIExpression()), !dbg !4307
  %17 = load i64, i64* %2, align 8, !dbg !4337
  %18 = load i64, i64* %4, align 8, !dbg !4337
  %call34 = call { i64, i64 } @double_int_neg(i64 %17, i64 %18) #6, !dbg !4337
  %19 = extractvalue { i64, i64 } %call34, 0, !dbg !4337
  %20 = extractvalue { i64, i64 } %call34, 1, !dbg !4337
  %21 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %16, i64 0, i32 4, i32 0, !dbg !4338
  %22 = load i64, i64* %21, align 8, !dbg !4338
  %23 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %16, i64 0, i32 4, i32 1, !dbg !4338
  %24 = load i64, i64* %23, align 8, !dbg !4338
  %call35 = call { i64, i64 } @double_int_add(i64 %22, i64 %24, i64 %19, i64 %20) #6, !dbg !4338
  %25 = extractvalue { i64, i64 } %call35, 0, !dbg !4338
  %26 = extractvalue { i64, i64 } %call35, 1, !dbg !4338
  %call36 = call i32 @double_int_ucmp(i64 %15, i64 0, i64 %25, i64 %26) #6, !dbg !4339
  %cmp37 = icmp slt i32 %call36, 1, !dbg !4340
  br i1 %cmp37, label %if.then39, label %if.end47, !dbg !4341

if.then39:                                        ; preds = %lor.lhs.false, %for.body, %lor.lhs.false26
  %call40 = call fastcc zeroext i8 @nontrivial_chain_p(%struct.chain* %chain.0) #7, !dbg !4342
  %tobool41 = icmp eq i8 %call40, 0, !dbg !4342
  br i1 %tobool41, label %if.else, label %if.then42, !dbg !4345

if.then42:                                        ; preds = %if.then39
  call fastcc void @add_looparound_copies(%struct.loop* %loop, %struct.chain* %chain.0) #7, !dbg !4346
  %call43 = call fastcc %struct.chain** @VEC_chain_p_heap_safe_push(%struct.VEC_chain_p_heap** %chains, %struct.chain* %chain.0) #7, !dbg !4348
  br label %if.end44, !dbg !4349

if.else:                                          ; preds = %if.then39
  call fastcc void @release_chain(%struct.chain* %chain.0) #7, !dbg !4350
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then42
  %27 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !4351
  call void @llvm.dbg.value(metadata %struct.dref_d* %27, metadata !4304, metadata !DIExpression()), !dbg !4307
  %call45 = call fastcc %struct.chain* @make_rooted_chain(%struct.dref_d* %27) #7, !dbg !4352
  call void @llvm.dbg.value(metadata %struct.chain* %call45, metadata !4305, metadata !DIExpression()), !dbg !4307
  %28 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !4353
  call void @llvm.dbg.value(metadata %struct.dref_d* %28, metadata !4304, metadata !DIExpression()), !dbg !4307
  %offset46 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %28, i64 0, i32 4, !dbg !4354
  %29 = bitcast %struct.double_int* %offset46 to i8*, !dbg !4354
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %29, i64 16, i1 false), !dbg !4354
  br label %for.inc, !dbg !4355

if.end47:                                         ; preds = %lor.lhs.false26
  %30 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !4356
  call void @llvm.dbg.value(metadata %struct.dref_d* %30, metadata !4304, metadata !DIExpression()), !dbg !4307
  call fastcc void @add_ref_to_chain(%struct.chain* nonnull %chain.0, %struct.dref_d* %30) #7, !dbg !4357
  br label %for.inc, !dbg !4358

for.inc:                                          ; preds = %if.end47, %if.end44
  %chain.1 = phi %struct.chain* [ %call45, %if.end44 ], [ %chain.0, %if.end47 ], !dbg !4307
  call void @llvm.dbg.value(metadata %struct.chain* %chain.1, metadata !4305, metadata !DIExpression()), !dbg !4307
  %inc = add i32 %i.0, 1, !dbg !4359
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4303, metadata !DIExpression()), !dbg !4307
  br label %for.cond, !dbg !4360, !llvm.loop !4361

for.end:                                          ; preds = %cond.end20
  %chain.0.lcssa = phi %struct.chain* [ %chain.0, %cond.end20 ], !dbg !4307
  call void @llvm.dbg.value(metadata %struct.chain* %chain.0.lcssa, metadata !4305, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata %struct.chain* %chain.0.lcssa, metadata !4305, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata %struct.chain* %chain.0.lcssa, metadata !4305, metadata !DIExpression()), !dbg !4307
  %call48 = call fastcc zeroext i8 @nontrivial_chain_p(%struct.chain* %chain.0.lcssa) #7, !dbg !4363
  %tobool49 = icmp eq i8 %call48, 0, !dbg !4363
  br i1 %tobool49, label %if.else52, label %if.then50, !dbg !4365

if.then50:                                        ; preds = %for.end
  call fastcc void @add_looparound_copies(%struct.loop* %loop, %struct.chain* %chain.0.lcssa) #7, !dbg !4366
  %call51 = call fastcc %struct.chain** @VEC_chain_p_heap_safe_push(%struct.VEC_chain_p_heap** %chains, %struct.chain* %chain.0.lcssa) #7, !dbg !4368
  br label %cleanup, !dbg !4369

if.else52:                                        ; preds = %for.end
  call fastcc void @release_chain(%struct.chain* %chain.0.lcssa) #7, !dbg !4370
  br label %cleanup

cleanup:                                          ; preds = %if.then50, %if.else52, %if.then
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4371
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4371
  ret void, !dbg !4371
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.chain* @make_invariant_chain(%struct.component* %comp) unnamed_addr #5 !dbg !4372 {
entry:
  %ref = alloca %struct.dref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.component* %comp, metadata !4376, metadata !DIExpression()), !dbg !4380
  %call = tail call i8* @xcalloc(i64 1, i64 72) #6, !dbg !4381
  call void @llvm.dbg.value(metadata %struct.chain* %6, metadata !4377, metadata !DIExpression()), !dbg !4380
  %0 = bitcast %struct.dref_d** %ref to i8*, !dbg !4382
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4382
  %type = bitcast i8* %call to i32*, !dbg !4383
  store i32 0, i32* %type, align 8, !dbg !4384
  %1 = getelementptr inbounds i8, i8* %call, i64 64, !dbg !4385
  %bf.load = load i8, i8* %1, align 8, !dbg !4386
  %bf.set = or i8 %bf.load, 2, !dbg !4386
  store i8 %bf.set, i8* %1, align 8, !dbg !4386
  call void @llvm.dbg.value(metadata i32 0, metadata !4378, metadata !DIExpression()), !dbg !4380
  %refs = getelementptr inbounds %struct.component, %struct.component* %comp, i64 0, i32 0, !dbg !4387
  %refs4 = getelementptr inbounds i8, i8* %call, i64 32, !dbg !4390
  %2 = bitcast i8* %refs4 to %struct.VEC_dref_heap**, !dbg !4390
  br label %for.cond, !dbg !4392

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !4393
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4378, metadata !DIExpression()), !dbg !4380
  %3 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4394
  %tobool = icmp eq %struct.VEC_dref_heap* %3, null, !dbg !4394
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4394

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %3, i64 0, i32 0, !dbg !4394
  br label %cond.end, !dbg !4394

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !4394
  call void @llvm.dbg.value(metadata %struct.dref_d** %ref, metadata !4379, metadata !DIExpression(DW_OP_deref)), !dbg !4380
  %call2 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond, i32 %i.0, %struct.dref_d** nonnull %ref) #7, !dbg !4394
  %tobool3 = icmp eq i32 %call2, 0, !dbg !4395
  br i1 %tobool3, label %for.end, label %for.body, !dbg !4395

for.body:                                         ; preds = %cond.end
  %4 = load %struct.dref_d*, %struct.dref_d** %ref, align 8, !dbg !4396
  call void @llvm.dbg.value(metadata %struct.dref_d* %4, metadata !4379, metadata !DIExpression()), !dbg !4380
  %call5 = call fastcc %struct.dref_d** @VEC_dref_heap_safe_push(%struct.VEC_dref_heap** nonnull %2, %struct.dref_d* %4) #7, !dbg !4396
  %5 = load %struct.dref_d*, %struct.dref_d** %ref, align 8, !dbg !4397
  call void @llvm.dbg.value(metadata %struct.dref_d* %5, metadata !4379, metadata !DIExpression()), !dbg !4380
  %always_accessed = getelementptr inbounds %struct.dref_d, %struct.dref_d* %5, i64 0, i32 6, !dbg !4398
  %bf.load6 = load i8, i8* %always_accessed, align 4, !dbg !4398
  %bf.load9 = load i8, i8* %1, align 8, !dbg !4399
  %bf.clear7 = shl i8 %bf.load6, 1, !dbg !4399
  %bf.lshr34 = or i8 %bf.clear7, -3, !dbg !4399
  %bf.set14 = and i8 %bf.load9, %bf.lshr34, !dbg !4399
  store i8 %bf.set14, i8* %1, align 8, !dbg !4399
  %inc = add i32 %i.0, 1, !dbg !4400
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4378, metadata !DIExpression()), !dbg !4380
  br label %for.cond, !dbg !4401, !llvm.loop !4402

for.end:                                          ; preds = %cond.end
  %6 = bitcast i8* %call to %struct.chain*, !dbg !4381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4404
  ret %struct.chain* %6, !dbg !4405
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.chain** @VEC_chain_p_heap_safe_push(%struct.VEC_chain_p_heap** %vec_, %struct.chain* %obj_) unnamed_addr #0 !dbg !4406 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap** %vec_, metadata !4410, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata %struct.chain* %obj_, metadata !4411, metadata !DIExpression()), !dbg !4412
  %call = tail call fastcc i32 @VEC_chain_p_heap_reserve(%struct.VEC_chain_p_heap** %vec_, i32 1) #7, !dbg !4413
  %0 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %vec_, align 8, !dbg !4413
  %tobool = icmp eq %struct.VEC_chain_p_heap* %0, null, !dbg !4413
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4413

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %0, i64 0, i32 0, !dbg !4413
  br label %cond.end, !dbg !4413

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_chain_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4413
  %call1 = tail call fastcc %struct.chain** @VEC_chain_p_base_quick_push(%struct.VEC_chain_p_base* %cond, %struct.chain* %obj_) #7, !dbg !4413
  ret %struct.chain** %call1, !dbg !4413
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.dref_d** @VEC_dref_base_address(%struct.VEC_dref_base* %vec_) unnamed_addr #0 !dbg !4414 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dref_base* %vec_, metadata !4418, metadata !DIExpression()), !dbg !4419
  %tobool = icmp eq %struct.VEC_dref_base* %vec_, null, !dbg !4420
  %arraydecay = getelementptr inbounds %struct.VEC_dref_base, %struct.VEC_dref_base* %vec_, i64 0, i32 2, i64 0, !dbg !4420
  %cond = select i1 %tobool, %struct.dref_d** null, %struct.dref_d** %arraydecay, !dbg !4420
  ret %struct.dref_d** %cond, !dbg !4420
}

; Function Attrs: nounwind uwtable
define internal i32 @order_drefs(i8* %a, i8* %b) #5 !dbg !4421 {
entry:
  call void @llvm.dbg.value(metadata i8* %a, metadata !4423, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata i8* %b, metadata !4424, metadata !DIExpression()), !dbg !4429
  %0 = bitcast i8* %a to %struct.dref_d**, !dbg !4430
  call void @llvm.dbg.value(metadata %struct.dref_d** %0, metadata !4425, metadata !DIExpression()), !dbg !4429
  %1 = bitcast i8* %b to %struct.dref_d**, !dbg !4431
  call void @llvm.dbg.value(metadata %struct.dref_d** %1, metadata !4427, metadata !DIExpression()), !dbg !4429
  %2 = load %struct.dref_d*, %struct.dref_d** %0, align 8, !dbg !4432
  %3 = load %struct.dref_d*, %struct.dref_d** %1, align 8, !dbg !4433
  %4 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %2, i64 0, i32 4, i32 0, !dbg !4434
  %5 = load i64, i64* %4, align 8, !dbg !4434
  %6 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %2, i64 0, i32 4, i32 1, !dbg !4434
  %7 = load i64, i64* %6, align 8, !dbg !4434
  %8 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %3, i64 0, i32 4, i32 0, !dbg !4434
  %9 = load i64, i64* %8, align 8, !dbg !4434
  %10 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %3, i64 0, i32 4, i32 1, !dbg !4434
  %11 = load i64, i64* %10, align 8, !dbg !4434
  %call = tail call i32 @double_int_scmp(i64 %5, i64 %7, i64 %9, i64 %11) #6, !dbg !4434
  call void @llvm.dbg.value(metadata i32 %call, metadata !4428, metadata !DIExpression()), !dbg !4429
  %cmp = icmp eq i32 %call, 0, !dbg !4435
  br i1 %cmp, label %if.end, label %cleanup, !dbg !4437

if.end:                                           ; preds = %entry
  %12 = load %struct.dref_d*, %struct.dref_d** %0, align 8, !dbg !4438
  %pos = getelementptr inbounds %struct.dref_d, %struct.dref_d* %12, i64 0, i32 5, !dbg !4439
  %13 = load i32, i32* %pos, align 8, !dbg !4439
  %14 = load %struct.dref_d*, %struct.dref_d** %1, align 8, !dbg !4440
  %pos2 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %14, i64 0, i32 5, !dbg !4441
  %15 = load i32, i32* %pos2, align 8, !dbg !4441
  %sub = sub i32 %13, %15, !dbg !4442
  br label %cleanup, !dbg !4443

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %sub, %if.end ], [ %call, %entry ], !dbg !4429
  ret i32 %retval.0, !dbg !4444
}

declare dso_local i32 @double_int_ucmp(i64, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i64, i64 } @uhwi_to_double_int(i64 %cst) unnamed_addr #0 !dbg !4445 {
entry:
  call void @llvm.dbg.value(metadata i64 %cst, metadata !4449, metadata !DIExpression()), !dbg !4451
  %0 = insertvalue { i64, i64 } undef, i64 %cst, 0, !dbg !4452
  %1 = insertvalue { i64, i64 } %0, i64 0, 1, !dbg !4452
  ret { i64, i64 } %1, !dbg !4452
}

declare dso_local { i64, i64 } @double_int_add(i64, i64, i64, i64) local_unnamed_addr #2

declare dso_local { i64, i64 } @double_int_neg(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @nontrivial_chain_p(%struct.chain* %chain) unnamed_addr #5 !dbg !4453 {
entry:
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !4457, metadata !DIExpression()), !dbg !4458
  %cmp = icmp eq %struct.chain* %chain, null, !dbg !4459
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !4460

land.rhs:                                         ; preds = %entry
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 5, !dbg !4461
  %0 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4461
  %tobool = icmp eq %struct.VEC_dref_heap* %0, null, !dbg !4461
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4461

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %0, i64 0, i32 0, !dbg !4461
  br label %cond.end, !dbg !4461

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !4461
  %call = tail call fastcc i32 @VEC_dref_base_length(%struct.VEC_dref_base* %cond) #7, !dbg !4461
  %cmp2 = icmp ugt i32 %call, 1, !dbg !4462
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %cond.end
  %1 = phi i8 [ 0, %entry ], [ %phitmp, %cond.end ]
  ret i8 %1, !dbg !4463
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_looparound_copies(%struct.loop* %loop, %struct.chain* %chain) unnamed_addr #5 !dbg !4464 {
entry:
  %ref = alloca %struct.dref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4468, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !4469, metadata !DIExpression()), !dbg !4474
  %0 = bitcast %struct.dref_d** %ref to i8*, !dbg !4475
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4475
  %call = tail call fastcc %struct.dref_d* @get_chain_root(%struct.chain* %chain) #7, !dbg !4476
  call void @llvm.dbg.value(metadata %struct.dref_d* %call, metadata !4472, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i32 0, metadata !4470, metadata !DIExpression()), !dbg !4474
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 5, !dbg !4477
  br label %for.cond, !dbg !4480

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !4481
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4470, metadata !DIExpression()), !dbg !4474
  %1 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4482
  %tobool = icmp eq %struct.VEC_dref_heap* %1, null, !dbg !4482
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4482

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %1, i64 0, i32 0, !dbg !4482
  br label %cond.end, !dbg !4482

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !4482
  call void @llvm.dbg.value(metadata %struct.dref_d** %ref, metadata !4471, metadata !DIExpression(DW_OP_deref)), !dbg !4474
  %call2 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond, i32 %i.0, %struct.dref_d** nonnull %ref) #7, !dbg !4482
  %tobool3 = icmp eq i32 %call2, 0, !dbg !4483
  br i1 %tobool3, label %for.end, label %for.body, !dbg !4483

for.body:                                         ; preds = %cond.end
  %2 = load %struct.dref_d*, %struct.dref_d** %ref, align 8, !dbg !4484
  call void @llvm.dbg.value(metadata %struct.dref_d* %2, metadata !4471, metadata !DIExpression()), !dbg !4474
  %call4 = call fastcc %union.gimple_statement_d* @find_looparound_phi(%struct.loop* %loop, %struct.dref_d* %2, %struct.dref_d* %call) #7, !dbg !4486
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call4, metadata !4473, metadata !DIExpression()), !dbg !4474
  %tobool5 = icmp eq %union.gimple_statement_d* %call4, null, !dbg !4487
  br i1 %tobool5, label %for.inc, label %if.end, !dbg !4489

if.end:                                           ; preds = %for.body
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @looparound_phis, align 8, !dbg !4490
  %call6 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* nonnull %call4) #7, !dbg !4491
  %call7 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call6) #7, !dbg !4491
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4491
  %4 = bitcast %union.tree_node** %version to i32*, !dbg !4491
  %5 = load i32, i32* %4, align 8, !dbg !4491
  %call8 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %5) #6, !dbg !4492
  %6 = load %struct.dref_d*, %struct.dref_d** %ref, align 8, !dbg !4493
  call void @llvm.dbg.value(metadata %struct.dref_d* %6, metadata !4471, metadata !DIExpression()), !dbg !4474
  call fastcc void @insert_looparound_copy(%struct.chain* %chain, %struct.dref_d* %6, %union.gimple_statement_d* nonnull %call4) #7, !dbg !4494
  br label %for.inc, !dbg !4495

for.inc:                                          ; preds = %for.body, %if.end
  %inc = add i32 %i.0, 1, !dbg !4496
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4470, metadata !DIExpression()), !dbg !4474
  br label %for.cond, !dbg !4497, !llvm.loop !4498

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4500
  ret void, !dbg !4500
}

; Function Attrs: nounwind uwtable
define internal fastcc void @release_chain(%struct.chain* %chain) unnamed_addr #5 !dbg !4501 {
entry:
  %ref = alloca %struct.dref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !4505, metadata !DIExpression()), !dbg !4508
  %0 = bitcast %struct.dref_d** %ref to i8*, !dbg !4509
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4509
  %cmp = icmp eq %struct.chain* %chain, null, !dbg !4510
  br i1 %cmp, label %cleanup, label %for.cond.preheader, !dbg !4512

for.cond.preheader:                               ; preds = %entry
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 5, !dbg !4513
  %1 = bitcast %struct.dref_d** %ref to i8**, !dbg !4513
  br label %for.cond, !dbg !4516

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %i.0 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ], !dbg !4517
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4507, metadata !DIExpression()), !dbg !4508
  %2 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4518
  %tobool = icmp eq %struct.VEC_dref_heap* %2, null, !dbg !4518
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4518

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %2, i64 0, i32 0, !dbg !4518
  br label %cond.end, !dbg !4518

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !4518
  call void @llvm.dbg.value(metadata %struct.dref_d** %ref, metadata !4506, metadata !DIExpression(DW_OP_deref)), !dbg !4508
  %call = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond, i32 %i.0, %struct.dref_d** nonnull %ref) #7, !dbg !4518
  %tobool2 = icmp eq i32 %call, 0, !dbg !4516
  br i1 %tobool2, label %for.end, label %for.body, !dbg !4516

for.body:                                         ; preds = %cond.end
  %3 = load i8*, i8** %1, align 8, !dbg !4519
  call void @free(i8* %3) #6, !dbg !4520
  %inc = add i32 %i.0, 1, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4507, metadata !DIExpression()), !dbg !4508
  br label %for.cond, !dbg !4522, !llvm.loop !4523

for.end:                                          ; preds = %cond.end
  call fastcc void @VEC_dref_heap_free(%struct.VEC_dref_heap** nonnull %refs) #7, !dbg !4525
  %vars = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 7, !dbg !4526
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vars) #7, !dbg !4526
  %inits = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 8, !dbg !4527
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %inits) #7, !dbg !4527
  %4 = bitcast %struct.chain* %chain to i8*, !dbg !4528
  call void @free(i8* nonnull %4) #6, !dbg !4529
  br label %cleanup, !dbg !4530

cleanup:                                          ; preds = %entry, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4530
  ret void, !dbg !4530
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.chain* @make_rooted_chain(%struct.dref_d* %ref) unnamed_addr #5 !dbg !4531 {
entry:
  call void @llvm.dbg.value(metadata %struct.dref_d* %ref, metadata !4535, metadata !DIExpression()), !dbg !4537
  %call = tail call i8* @xcalloc(i64 1, i64 72) #6, !dbg !4538
  %0 = bitcast i8* %call to %struct.chain*, !dbg !4538
  call void @llvm.dbg.value(metadata %struct.chain* %0, metadata !4536, metadata !DIExpression()), !dbg !4537
  %ref1 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 0, !dbg !4539
  %1 = load %struct.data_reference*, %struct.data_reference** %ref1, align 8, !dbg !4539
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %1, i64 0, i32 3, !dbg !4539
  %2 = load i8, i8* %is_read, align 8, !dbg !4539
  %tobool = icmp eq i8 %2, 0, !dbg !4539
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !4539
  %type = bitcast i8* %call to i32*, !dbg !4540
  store i32 %cond, i32* %type, align 8, !dbg !4541
  %refs = getelementptr inbounds i8, i8* %call, i64 32, !dbg !4542
  %3 = bitcast i8* %refs to %struct.VEC_dref_heap**, !dbg !4542
  %call2 = tail call fastcc %struct.dref_d** @VEC_dref_heap_safe_push(%struct.VEC_dref_heap** nonnull %3, %struct.dref_d* %ref) #7, !dbg !4542
  %always_accessed = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 6, !dbg !4543
  %bf.load = load i8, i8* %always_accessed, align 4, !dbg !4543
  %4 = getelementptr inbounds i8, i8* %call, i64 64, !dbg !4544
  %bf.load3 = load i8, i8* %4, align 8, !dbg !4545
  %bf.clear = shl i8 %bf.load, 1, !dbg !4545
  %bf.shl = and i8 %bf.clear, 2, !dbg !4545
  %bf.clear4 = and i8 %bf.load3, -3, !dbg !4545
  %bf.set = or i8 %bf.clear4, %bf.shl, !dbg !4545
  store i8 %bf.set, i8* %4, align 8, !dbg !4545
  %distance = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 3, !dbg !4546
  store i32 0, i32* %distance, align 8, !dbg !4547
  ret %struct.chain* %0, !dbg !4548
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_ref_to_chain(%struct.chain* %chain, %struct.dref_d* %ref) unnamed_addr #5 !dbg !4549 {
entry:
  %dist = alloca %struct.double_int, align 8
  %tmp = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !4553, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata %struct.dref_d* %ref, metadata !4554, metadata !DIExpression()), !dbg !4557
  %call = tail call fastcc %struct.dref_d* @get_chain_root(%struct.chain* %chain) #7, !dbg !4558
  call void @llvm.dbg.value(metadata %struct.dref_d* %call, metadata !4555, metadata !DIExpression()), !dbg !4557
  %0 = bitcast %struct.double_int* %dist to i8*, !dbg !4559
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !4559
  %1 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %call, i64 0, i32 4, i32 0, !dbg !4560
  %2 = load i64, i64* %1, align 8, !dbg !4560
  %3 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %call, i64 0, i32 4, i32 1, !dbg !4560
  %4 = load i64, i64* %3, align 8, !dbg !4560
  %5 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 4, i32 0, !dbg !4560
  %6 = load i64, i64* %5, align 8, !dbg !4560
  %7 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 4, i32 1, !dbg !4560
  %8 = load i64, i64* %7, align 8, !dbg !4560
  %call2 = tail call i32 @double_int_scmp(i64 %2, i64 %4, i64 %6, i64 %8) #6, !dbg !4560
  %cmp = icmp slt i32 %call2, 1, !dbg !4560
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4560

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 926, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4560
  br label %cond.end, !dbg !4560

cond.end:                                         ; preds = %entry, %cond.true
  %9 = bitcast %struct.double_int* %tmp to i8*, !dbg !4561
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8, !dbg !4561
  %10 = load i64, i64* %1, align 8, !dbg !4562
  %11 = load i64, i64* %3, align 8, !dbg !4562
  %call5 = tail call { i64, i64 } @double_int_neg(i64 %10, i64 %11) #6, !dbg !4562
  %12 = extractvalue { i64, i64 } %call5, 0, !dbg !4562
  %13 = extractvalue { i64, i64 } %call5, 1, !dbg !4562
  %14 = load i64, i64* %5, align 8, !dbg !4561
  %15 = load i64, i64* %7, align 8, !dbg !4561
  %call6 = tail call { i64, i64 } @double_int_add(i64 %14, i64 %15, i64 %12, i64 %13) #6, !dbg !4561
  %16 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 0, !dbg !4561
  %17 = extractvalue { i64, i64 } %call6, 0, !dbg !4561
  store i64 %17, i64* %16, align 8, !dbg !4561
  %18 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 1, !dbg !4561
  %19 = extractvalue { i64, i64 } %call6, 1, !dbg !4561
  store i64 %19, i64* %18, align 8, !dbg !4561
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %9, i64 16, i1 false), !dbg !4561
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8, !dbg !4561
  %20 = load i32, i32* @target_avail_regs, align 4, !dbg !4563
  %cmp8 = icmp ult i32 %20, 16, !dbg !4563
  %cond9 = select i1 %cmp8, i64 4, i64 8, !dbg !4563
  %call10 = tail call fastcc { i64, i64 } @uhwi_to_double_int(i64 %cond9) #7, !dbg !4565
  %21 = extractvalue { i64, i64 } %call10, 0, !dbg !4565
  %22 = getelementptr inbounds %struct.double_int, %struct.double_int* %dist, i64 0, i32 0, !dbg !4566
  %23 = load i64, i64* %22, align 8, !dbg !4566
  %24 = getelementptr inbounds %struct.double_int, %struct.double_int* %dist, i64 0, i32 1, !dbg !4566
  %25 = load i64, i64* %24, align 8, !dbg !4566
  %call11 = tail call i32 @double_int_ucmp(i64 %21, i64 0, i64 %23, i64 %25) #6, !dbg !4566
  %cmp12 = icmp slt i32 %call11, 1, !dbg !4567
  br i1 %cmp12, label %if.then, label %if.end, !dbg !4568

if.then:                                          ; preds = %cond.end
  %26 = bitcast %struct.dref_d* %ref to i8*, !dbg !4569
  tail call void @free(i8* %26) #6, !dbg !4571
  br label %cleanup, !dbg !4572

if.end:                                           ; preds = %cond.end
  %call14 = tail call zeroext i8 @double_int_fits_in_uhwi_p(i64 %23, i64 %25) #6, !dbg !4573
  %tobool = icmp eq i8 %call14, 0, !dbg !4573
  br i1 %tobool, label %cond.true15, label %cond.end17, !dbg !4573

cond.true15:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 933, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4573
  br label %cond.end17, !dbg !4573

cond.end17:                                       ; preds = %if.end, %cond.true15
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 5, !dbg !4574
  %call19 = tail call fastcc %struct.dref_d** @VEC_dref_heap_safe_push(%struct.VEC_dref_heap** nonnull %refs, %struct.dref_d* %ref) #7, !dbg !4574
  %call20 = tail call i64 @double_int_to_uhwi(i64 %23, i64 %25) #6, !dbg !4575
  %conv21 = trunc i64 %call20 to i32, !dbg !4575
  %distance = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 3, !dbg !4576
  store i32 %conv21, i32* %distance, align 8, !dbg !4577
  %length = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 6, !dbg !4578
  %27 = load i32, i32* %length, align 8, !dbg !4578
  %cmp23 = icmp ugt i32 %27, %conv21, !dbg !4580
  br i1 %cmp23, label %if.end28, label %if.then25, !dbg !4581

if.then25:                                        ; preds = %cond.end17
  store i32 %conv21, i32* %length, align 8, !dbg !4582
  %has_max_use_after = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 9, !dbg !4584
  %bf.load = load i8, i8* %has_max_use_after, align 8, !dbg !4585
  %bf.clear = and i8 %bf.load, -2, !dbg !4585
  store i8 %bf.clear, i8* %has_max_use_after, align 8, !dbg !4585
  %.pre = load i32, i32* %distance, align 8, !dbg !4586
  br label %if.end28, !dbg !4588

if.end28:                                         ; preds = %cond.end17, %if.then25
  %28 = phi i32 [ %27, %cond.end17 ], [ %conv21, %if.then25 ], !dbg !4589
  %29 = phi i32 [ %conv21, %cond.end17 ], [ %.pre, %if.then25 ], !dbg !4586
  %cmp31 = icmp eq i32 %29, %28, !dbg !4590
  br i1 %cmp31, label %land.lhs.true, label %if.end40, !dbg !4591

land.lhs.true:                                    ; preds = %if.end28
  %pos = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 5, !dbg !4592
  %30 = load i32, i32* %pos, align 8, !dbg !4592
  %pos33 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %call, i64 0, i32 5, !dbg !4593
  %31 = load i32, i32* %pos33, align 8, !dbg !4593
  %cmp34 = icmp ugt i32 %30, %31, !dbg !4594
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !4595

if.then36:                                        ; preds = %land.lhs.true
  %has_max_use_after37 = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 9, !dbg !4596
  %bf.load38 = load i8, i8* %has_max_use_after37, align 8, !dbg !4597
  %bf.set = or i8 %bf.load38, 1, !dbg !4597
  store i8 %bf.set, i8* %has_max_use_after37, align 8, !dbg !4597
  br label %if.end40, !dbg !4598

if.end40:                                         ; preds = %if.then36, %land.lhs.true, %if.end28
  %always_accessed = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 6, !dbg !4599
  %bf.load41 = load i8, i8* %always_accessed, align 4, !dbg !4599
  %all_always_accessed = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 9, !dbg !4600
  %bf.load43 = load i8, i8* %all_always_accessed, align 8, !dbg !4601
  %bf.clear42 = shl i8 %bf.load41, 1, !dbg !4601
  %bf.lshr34 = or i8 %bf.clear42, -3, !dbg !4601
  %bf.set48 = and i8 %bf.load43, %bf.lshr34, !dbg !4601
  store i8 %bf.set48, i8* %all_always_accessed, align 8, !dbg !4601
  br label %cleanup, !dbg !4602

cleanup:                                          ; preds = %if.end40, %if.then
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !4602
  ret void, !dbg !4602
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.dref_d** @VEC_dref_heap_safe_push(%struct.VEC_dref_heap** %vec_, %struct.dref_d* %obj_) unnamed_addr #0 !dbg !4603 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dref_heap** %vec_, metadata !4607, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.dref_d* %obj_, metadata !4608, metadata !DIExpression()), !dbg !4609
  %call = tail call fastcc i32 @VEC_dref_heap_reserve(%struct.VEC_dref_heap** %vec_, i32 1) #7, !dbg !4610
  %0 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %vec_, align 8, !dbg !4610
  %tobool = icmp eq %struct.VEC_dref_heap* %0, null, !dbg !4610
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4610

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %0, i64 0, i32 0, !dbg !4610
  br label %cond.end, !dbg !4610

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4610
  %call1 = tail call fastcc %struct.dref_d** @VEC_dref_base_quick_push(%struct.VEC_dref_base* %cond, %struct.dref_d* %obj_) #7, !dbg !4610
  ret %struct.dref_d** %call1, !dbg !4610
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_dref_heap_reserve(%struct.VEC_dref_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4611 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dref_heap** %vec_, metadata !4615, metadata !DIExpression()), !dbg !4618
  call void @llvm.dbg.value(metadata i32 1, metadata !4616, metadata !DIExpression()), !dbg !4618
  %0 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %vec_, align 8, !dbg !4619
  %tobool = icmp eq %struct.VEC_dref_heap* %0, null, !dbg !4619
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4619

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %0, i64 0, i32 0, !dbg !4619
  br label %cond.end, !dbg !4619

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4619
  %call = tail call fastcc i32 @VEC_dref_base_space(%struct.VEC_dref_base* %cond, i32 1) #7, !dbg !4619
  %tobool1 = icmp eq i32 %call, 0, !dbg !4619
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4617, metadata !DIExpression()), !dbg !4618
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4619

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_dref_heap** %vec_ to i8**, !dbg !4620
  %2 = load i8*, i8** %1, align 8, !dbg !4620
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !4620
  store i8* %call3, i8** %1, align 8, !dbg !4620
  br label %if.end, !dbg !4620

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4619
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_dref_base_space(%struct.VEC_dref_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4622 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dref_base* %vec_, metadata !4626, metadata !DIExpression()), !dbg !4628
  call void @llvm.dbg.value(metadata i32 1, metadata !4627, metadata !DIExpression()), !dbg !4628
  %tobool = icmp eq %struct.VEC_dref_base* %vec_, null, !dbg !4629
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4629

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_dref_base, %struct.VEC_dref_base* %vec_, i64 0, i32 1, !dbg !4629
  %0 = load i32, i32* %alloc, align 4, !dbg !4629
  %num = getelementptr inbounds %struct.VEC_dref_base, %struct.VEC_dref_base* %vec_, i64 0, i32 0, !dbg !4629
  %1 = load i32, i32* %num, align 8, !dbg !4629
  %cmp1 = icmp ne i32 %0, %1, !dbg !4629
  %phitmp = zext i1 %cmp1 to i32, !dbg !4629
  br label %cond.end, !dbg !4629

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4629

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !4629
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_chain_p_heap_reserve(%struct.VEC_chain_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4630 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap** %vec_, metadata !4634, metadata !DIExpression()), !dbg !4637
  call void @llvm.dbg.value(metadata i32 1, metadata !4635, metadata !DIExpression()), !dbg !4637
  %0 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %vec_, align 8, !dbg !4638
  %tobool = icmp eq %struct.VEC_chain_p_heap* %0, null, !dbg !4638
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4638

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %0, i64 0, i32 0, !dbg !4638
  br label %cond.end, !dbg !4638

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_chain_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4638
  %call = tail call fastcc i32 @VEC_chain_p_base_space(%struct.VEC_chain_p_base* %cond, i32 1) #7, !dbg !4638
  %tobool1 = icmp eq i32 %call, 0, !dbg !4638
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4636, metadata !DIExpression()), !dbg !4637
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4638

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_chain_p_heap** %vec_ to i8**, !dbg !4639
  %2 = load i8*, i8** %1, align 8, !dbg !4639
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !4639
  store i8* %call3, i8** %1, align 8, !dbg !4639
  br label %if.end, !dbg !4639

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4638
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.chain** @VEC_chain_p_base_quick_push(%struct.VEC_chain_p_base* %vec_, %struct.chain* %obj_) unnamed_addr #0 !dbg !4641 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_base* %vec_, metadata !4646, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata %struct.chain* %obj_, metadata !4647, metadata !DIExpression()), !dbg !4649
  %num1 = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 0, !dbg !4650
  %0 = load i32, i32* %num1, align 8, !dbg !4650
  %inc = add i32 %0, 1, !dbg !4650
  store i32 %inc, i32* %num1, align 8, !dbg !4650
  %idxprom = zext i32 %0 to i64, !dbg !4650
  %arrayidx = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4650
  call void @llvm.dbg.value(metadata %struct.chain** %arrayidx, metadata !4648, metadata !DIExpression()), !dbg !4649
  store %struct.chain* %obj_, %struct.chain** %arrayidx, align 8, !dbg !4650
  ret %struct.chain** %arrayidx, !dbg !4650
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_chain_p_base_space(%struct.VEC_chain_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4651 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_base* %vec_, metadata !4655, metadata !DIExpression()), !dbg !4657
  call void @llvm.dbg.value(metadata i32 1, metadata !4656, metadata !DIExpression()), !dbg !4657
  %tobool = icmp eq %struct.VEC_chain_p_base* %vec_, null, !dbg !4658
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4658

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 1, !dbg !4658
  %0 = load i32, i32* %alloc, align 4, !dbg !4658
  %num = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 0, !dbg !4658
  %1 = load i32, i32* %num, align 8, !dbg !4658
  %cmp1 = icmp ne i32 %0, %1, !dbg !4658
  %phitmp = zext i1 %cmp1 to i32, !dbg !4658
  br label %cond.end, !dbg !4658

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4658

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !4658
}

declare dso_local i32 @double_int_scmp(i64, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.dref_d* @get_chain_root(%struct.chain* %chain) unnamed_addr #0 !dbg !4659 {
entry:
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !4663, metadata !DIExpression()), !dbg !4664
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 5, !dbg !4665
  %0 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4665
  %tobool = icmp eq %struct.VEC_dref_heap* %0, null, !dbg !4665
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4665

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %0, i64 0, i32 0, !dbg !4665
  br label %cond.end, !dbg !4665

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4665
  %call = tail call fastcc %struct.dref_d* @VEC_dref_base_index(%struct.VEC_dref_base* %cond, i32 0) #7, !dbg !4665
  ret %struct.dref_d* %call, !dbg !4666
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @find_looparound_phi(%struct.loop* %loop, %struct.dref_d* %ref, %struct.dref_d* %root) unnamed_addr #5 !dbg !4667 {
entry:
  %init_dr = alloca %struct.data_reference, align 8
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4671, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata %struct.dref_d* %ref, metadata !4672, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata %struct.dref_d* %root, metadata !4673, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !4677, metadata !DIExpression()), !dbg !4682
  %call = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* %loop) #6, !dbg !4683
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !4679, metadata !DIExpression()), !dbg !4682
  %0 = bitcast %struct.data_reference* %init_dr to i8*, !dbg !4684
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %0) #8, !dbg !4684
  %1 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !4685
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4685
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 1, !dbg !4686
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4686
  %call1 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %2) #7, !dbg !4688
  %tobool = icmp eq i8 %call1, 0, !dbg !4688
  br i1 %tobool, label %if.else9, label %if.then, !dbg !4689

if.then:                                          ; preds = %entry
  %ref2 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 0, !dbg !4690
  %3 = load %struct.data_reference*, %struct.data_reference** %ref2, align 8, !dbg !4690
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %3, i64 0, i32 3, !dbg !4690
  %4 = load i8, i8* %is_read, align 8, !dbg !4690
  %tobool3 = icmp eq i8 %4, 0, !dbg !4690
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4693
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !4694

if.then4:                                         ; preds = %if.then
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %5) #7, !dbg !4695
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !4674, metadata !DIExpression()), !dbg !4682
  br label %if.end13, !dbg !4696

if.else:                                          ; preds = %if.then
  %call8 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %5) #7, !dbg !4697
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !4674, metadata !DIExpression()), !dbg !4682
  br label %if.end13

if.else9:                                         ; preds = %entry
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4698
  %call11 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %6) #7, !dbg !4698
  %call12 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call11) #7, !dbg !4698
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !4674, metadata !DIExpression()), !dbg !4682
  br label %if.end13

if.end13:                                         ; preds = %if.then4, %if.else, %if.else9
  %name.1 = phi %union.tree_node* [ %call12, %if.else9 ], [ %call6, %if.then4 ], [ %call8, %if.else ], !dbg !4699
  call void @llvm.dbg.value(metadata %union.tree_node* %name.1, metadata !4674, metadata !DIExpression()), !dbg !4682
  %tobool14 = icmp eq %union.tree_node* %name.1, null, !dbg !4700
  br i1 %tobool14, label %cleanup, label %if.end16, !dbg !4702

if.end16:                                         ; preds = %if.end13
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4703
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !4703
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !4705
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4705
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %8) #6, !dbg !4703
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !4703
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !4703
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 6, !dbg !4706
  br label %for.cond, !dbg !4710

for.cond:                                         ; preds = %for.inc, %if.end16
  %phi.0 = phi %union.gimple_statement_d* [ null, %if.end16 ], [ %call19, %for.inc ], !dbg !4682
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.0, metadata !4677, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4681, metadata !DIExpression(DW_OP_deref)), !dbg !4682
  %call17 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !4711
  %tobool18 = icmp eq i8 %call17, 0, !dbg !4712
  br i1 %tobool18, label %for.body, label %for.end, !dbg !4713

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4681, metadata !DIExpression(DW_OP_deref)), !dbg !4682
  %call19 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !4714
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !4677, metadata !DIExpression()), !dbg !4682
  %9 = load i32, i32* %dest_idx, align 4, !dbg !4715
  %call20 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call19, i32 %9) #7, !dbg !4715
  %call21 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call20) #7, !dbg !4715
  %cmp = icmp eq %union.tree_node* %call21, %name.1, !dbg !4716
  br i1 %cmp, label %for.end, label %for.inc, !dbg !4717

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4681, metadata !DIExpression(DW_OP_deref)), !dbg !4682
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !4718
  br label %for.cond, !dbg !4719, !llvm.loop !4720

for.end:                                          ; preds = %for.body, %for.cond
  %phi.1 = phi %union.gimple_statement_d* [ %phi.0, %for.cond ], [ %call19, %for.body ], !dbg !4682
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.1, metadata !4677, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !4681, metadata !DIExpression(DW_OP_deref)), !dbg !4682
  %call24 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !4722
  %tobool25 = icmp eq i8 %call24, 0, !dbg !4722
  br i1 %tobool25, label %if.end27, label %cleanup, !dbg !4724

if.end27:                                         ; preds = %for.end
  %call28 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !4725
  %dest_idx29 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call28, i64 0, i32 6, !dbg !4725
  %10 = load i32, i32* %dest_idx29, align 4, !dbg !4725
  %call30 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %phi.1, i32 %10) #7, !dbg !4725
  %call31 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call30) #7, !dbg !4725
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !4675, metadata !DIExpression()), !dbg !4682
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4726
  %bf.load = load i64, i64* %11, align 8, !dbg !4726
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4728
  %cmp32 = icmp eq i64 %bf.cast1, 141, !dbg !4728
  br i1 %cmp32, label %if.end34, label %cleanup, !dbg !4729

if.end34:                                         ; preds = %if.end27
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4730
  %12 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4730
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %12, align 8, !dbg !4730
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %13, metadata !4678, metadata !DIExpression()), !dbg !4682
  %call35 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %13) #7, !dbg !4731
  %cmp36 = icmp eq i32 %call35, 6, !dbg !4733
  br i1 %cmp36, label %if.end38, label %cleanup, !dbg !4734

if.end38:                                         ; preds = %if.end34
  %call39 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %13) #7, !dbg !4735
  %cmp40 = icmp eq %union.tree_node* %call39, %call31, !dbg !4735
  br i1 %cmp40, label %cond.end, label %cond.true, !dbg !4735

cond.true:                                        ; preds = %if.end38
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1104, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4735
  br label %cond.end, !dbg !4735

cond.end:                                         ; preds = %if.end38, %cond.true
  %call41 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %13) #7, !dbg !4736
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !4676, metadata !DIExpression()), !dbg !4682
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4737
  %bf.load43 = load i64, i64* %14, align 8, !dbg !4737
  %bf.cast45 = and i64 %bf.load43, 65535, !dbg !4737
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast45, !dbg !4737
  %15 = load i32, i32* %arrayidx, align 4, !dbg !4737
  %cmp46 = icmp eq i32 %15, 4, !dbg !4737
  br i1 %cmp46, label %if.end55, label %land.lhs.true, !dbg !4739

land.lhs.true:                                    ; preds = %cond.end
  %cmp53 = icmp eq i32 %15, 3, !dbg !4740
  br i1 %cmp53, label %if.end55, label %cleanup, !dbg !4741

if.end55:                                         ; preds = %land.lhs.true, %cond.end
  %call56 = call i8* @memset(i8* nonnull %0, i32 0, i64 112) #6, !dbg !4742
  %ref57 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %init_dr, i64 0, i32 1, !dbg !4743
  store %union.tree_node* %call41, %union.tree_node** %ref57, align 8, !dbg !4744
  %stmt58 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %init_dr, i64 0, i32 0, !dbg !4745
  store %union.gimple_statement_d* %phi.1, %union.gimple_statement_d** %stmt58, align 8, !dbg !4746
  call void @llvm.dbg.value(metadata %struct.data_reference* %init_dr, metadata !4680, metadata !DIExpression(DW_OP_deref)), !dbg !4682
  %call59 = call zeroext i8 @dr_analyze_innermost(%struct.data_reference* nonnull %init_dr) #6, !dbg !4747
  %tobool60 = icmp eq i8 %call59, 0, !dbg !4747
  br i1 %tobool60, label %cleanup, label %if.end62, !dbg !4749

if.end62:                                         ; preds = %if.end55
  %distance = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 3, !dbg !4750
  %16 = load i32, i32* %distance, align 8, !dbg !4750
  %add = add i32 %16, 1, !dbg !4752
  %ref63 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %root, i64 0, i32 0, !dbg !4753
  %17 = load %struct.data_reference*, %struct.data_reference** %ref63, align 8, !dbg !4753
  call void @llvm.dbg.value(metadata %struct.data_reference* %init_dr, metadata !4680, metadata !DIExpression(DW_OP_deref)), !dbg !4682
  %call64 = call fastcc zeroext i8 @valid_initializer_p(%struct.data_reference* nonnull %init_dr, i32 %add, %struct.data_reference* %17) #7, !dbg !4754
  %tobool65 = icmp eq i8 %call64, 0, !dbg !4754
  %phi.1. = select i1 %tobool65, %union.gimple_statement_d* null, %union.gimple_statement_d* %phi.1, !dbg !4682
  br label %cleanup, !dbg !4682

cleanup:                                          ; preds = %if.end55, %if.end34, %if.end27, %for.end, %if.end13, %if.end62, %land.lhs.true
  %retval.0 = phi %union.gimple_statement_d* [ null, %if.end13 ], [ null, %for.end ], [ null, %if.end27 ], [ null, %if.end34 ], [ null, %land.lhs.true ], [ null, %if.end55 ], [ %phi.1., %if.end62 ], !dbg !4682
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4755
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %0) #8, !dbg !4755
  ret %union.gimple_statement_d* %retval.0, !dbg !4755
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_looparound_copy(%struct.chain* %chain, %struct.dref_d* %ref, %union.gimple_statement_d* %phi) unnamed_addr #5 !dbg !4756 {
entry:
  %aref = alloca %struct.dref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !4760, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata %struct.dref_d* %ref, metadata !4761, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !4762, metadata !DIExpression()), !dbg !4766
  %call = tail call i8* @xcalloc(i64 1, i64 56) #6, !dbg !4767
  %0 = bitcast i8* %call to %struct.dref_d*, !dbg !4767
  call void @llvm.dbg.value(metadata %struct.dref_d* %0, metadata !4763, metadata !DIExpression()), !dbg !4766
  %1 = bitcast %struct.dref_d** %aref to i8*, !dbg !4768
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4768
  %stmt = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4769
  %2 = bitcast i8* %stmt to %union.gimple_statement_d**, !dbg !4769
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %2, align 8, !dbg !4770
  %distance = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 3, !dbg !4771
  %3 = load i32, i32* %distance, align 8, !dbg !4771
  %add = add i32 %3, 1, !dbg !4772
  %distance1 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !4773
  %4 = bitcast i8* %distance1 to i32*, !dbg !4773
  store i32 %add, i32* %4, align 8, !dbg !4774
  %5 = getelementptr inbounds i8, i8* %call, i64 52, !dbg !4775
  %bf.load = load i8, i8* %5, align 4, !dbg !4776
  %bf.set = or i8 %bf.load, 1, !dbg !4776
  store i8 %bf.set, i8* %5, align 4, !dbg !4776
  call void @llvm.dbg.value(metadata i32 0, metadata !4765, metadata !DIExpression()), !dbg !4766
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 5, !dbg !4777
  br label %for.cond, !dbg !4780

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !4781
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4765, metadata !DIExpression()), !dbg !4766
  %6 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !4782
  %tobool = icmp eq %struct.VEC_dref_heap* %6, null, !dbg !4782
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4782

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %6, i64 0, i32 0, !dbg !4782
  br label %cond.end, !dbg !4782

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !4782
  call void @llvm.dbg.value(metadata %struct.dref_d** %aref, metadata !4764, metadata !DIExpression(DW_OP_deref)), !dbg !4766
  %call3 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond, i32 %i.0, %struct.dref_d** nonnull %aref) #7, !dbg !4782
  %tobool4 = icmp eq i32 %call3, 0, !dbg !4783
  br i1 %tobool4, label %for.end, label %for.body, !dbg !4783

for.body:                                         ; preds = %cond.end
  %7 = load %struct.dref_d*, %struct.dref_d** %aref, align 8, !dbg !4784
  call void @llvm.dbg.value(metadata %struct.dref_d* %7, metadata !4764, metadata !DIExpression()), !dbg !4766
  %distance5 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %7, i64 0, i32 3, !dbg !4786
  %8 = load i32, i32* %distance5, align 8, !dbg !4786
  %9 = load i32, i32* %4, align 8, !dbg !4787
  %cmp = icmp ult i32 %8, %9, !dbg !4788
  br i1 %cmp, label %for.inc, label %for.end, !dbg !4789

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4765, metadata !DIExpression()), !dbg !4766
  br label %for.cond, !dbg !4791, !llvm.loop !4792

for.end:                                          ; preds = %for.body, %cond.end
  %i.0.lcssa = phi i32 [ %i.0, %for.body ], [ %i.0, %cond.end ], !dbg !4781
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4765, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4765, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4765, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4765, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4765, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !4765, metadata !DIExpression()), !dbg !4766
  %call8 = call fastcc %struct.dref_d** @VEC_dref_heap_safe_insert(%struct.VEC_dref_heap** nonnull %refs, i32 %i.0.lcssa, %struct.dref_d* %0) #7, !dbg !4794
  %10 = load i32, i32* %4, align 8, !dbg !4795
  %length = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 6, !dbg !4797
  %11 = load i32, i32* %length, align 8, !dbg !4797
  %cmp10 = icmp ugt i32 %10, %11, !dbg !4798
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !4799

if.then11:                                        ; preds = %for.end
  store i32 %10, i32* %length, align 8, !dbg !4800
  %has_max_use_after = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 9, !dbg !4802
  %bf.load14 = load i8, i8* %has_max_use_after, align 8, !dbg !4803
  %bf.clear15 = and i8 %bf.load14, -2, !dbg !4803
  store i8 %bf.clear15, i8* %has_max_use_after, align 8, !dbg !4803
  br label %if.end16, !dbg !4804

if.end16:                                         ; preds = %if.then11, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4805
  ret void, !dbg !4805
}

declare dso_local %struct.edge_def* @loop_latch_edge(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4806 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4808, metadata !DIExpression()), !dbg !4809
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4810
  %cmp = icmp eq i32 %call, 6, !dbg !4811
  %conv1 = zext i1 %cmp to i8, !dbg !4810
  ret i8 %conv1, !dbg !4812
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4813 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4815, metadata !DIExpression()), !dbg !4816
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4817
  ret %union.tree_node* %call, !dbg !4818
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4819 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4821, metadata !DIExpression()), !dbg !4822
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !4823
  ret %union.tree_node* %call, !dbg !4824
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4825 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4829, metadata !DIExpression()), !dbg !4830
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4831
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4831
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !4832
  %conv1 = zext i1 %cmp to i8, !dbg !4833
  ret i8 %conv1, !dbg !4834
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4835 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4839, metadata !DIExpression()), !dbg !4840
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4841
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4841
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !4842
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4842
  ret %union.gimple_statement_d* %1, !dbg !4843
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !4844 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !4848, metadata !DIExpression()), !dbg !4849
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !4850
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !4850
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4851
  ret %union.tree_node* %1, !dbg !4852
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4853 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4857, metadata !DIExpression()), !dbg !4859
  call void @llvm.dbg.value(metadata i32 %i, metadata !4858, metadata !DIExpression()), !dbg !4859
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !4860
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !4861
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !4862
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !4863 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4868, metadata !DIExpression()), !dbg !4869
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4870
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4870
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !4871
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !4871
  %2 = load i64, i64* %1, align 8, !dbg !4871
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !4872
  store i64 %2, i64* %3, align 8, !dbg !4872
  ret void, !dbg !4873
}

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local zeroext i8 @dr_analyze_innermost(%struct.data_reference*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @valid_initializer_p(%struct.data_reference* %ref, i32 %distance, %struct.data_reference* %root) unnamed_addr #5 !dbg !4874 {
entry:
  %diff = alloca %struct.affine_tree_combination, align 8
  %base = alloca %struct.affine_tree_combination, align 8
  %step = alloca %struct.affine_tree_combination, align 8
  %off = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %struct.data_reference* %ref, metadata !4878, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata i32 %distance, metadata !4879, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata %struct.data_reference* %root, metadata !4880, metadata !DIExpression()), !dbg !4885
  %0 = bitcast %struct.affine_tree_combination* %diff to i8*, !dbg !4886
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %0) #8, !dbg !4886
  %1 = bitcast %struct.affine_tree_combination* %base to i8*, !dbg !4886
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %1) #8, !dbg !4886
  %2 = bitcast %struct.affine_tree_combination* %step to i8*, !dbg !4886
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %2) #8, !dbg !4886
  %3 = bitcast %struct.double_int* %off to i8*, !dbg !4887
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !4887
  %base_address = getelementptr inbounds %struct.data_reference, %struct.data_reference* %ref, i64 0, i32 4, i32 0, !dbg !4888
  %4 = load %union.tree_node*, %union.tree_node** %base_address, align 8, !dbg !4888
  %base_address2 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %root, i64 0, i32 4, i32 0, !dbg !4890
  %5 = load %union.tree_node*, %union.tree_node** %base_address2, align 8, !dbg !4890
  %call = tail call i32 @operand_equal_p(%union.tree_node* %4, %union.tree_node* %5, i32 0) #6, !dbg !4891
  %tobool = icmp eq i32 %call, 0, !dbg !4891
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4892

if.end:                                           ; preds = %entry
  %step4 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %ref, i64 0, i32 4, i32 3, !dbg !4893
  %6 = load %union.tree_node*, %union.tree_node** %step4, align 8, !dbg !4893
  %call5 = tail call i32 @integer_zerop(%union.tree_node* %6) #6, !dbg !4893
  %tobool6 = icmp eq i32 %call5, 0, !dbg !4893
  br i1 %tobool6, label %cond.true, label %cond.end, !dbg !4893

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1036, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4893
  br label %cond.end, !dbg !4893

cond.end:                                         ; preds = %if.end, %cond.true
  %step8 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %root, i64 0, i32 4, i32 3, !dbg !4894
  %7 = load %union.tree_node*, %union.tree_node** %step8, align 8, !dbg !4894
  %call9 = tail call i32 @integer_zerop(%union.tree_node* %7) #6, !dbg !4896
  %tobool10 = icmp eq i32 %call9, 0, !dbg !4896
  br i1 %tobool10, label %if.end22, label %if.then11, !dbg !4897

if.then11:                                        ; preds = %cond.end
  %offset = getelementptr inbounds %struct.data_reference, %struct.data_reference* %ref, i64 0, i32 4, i32 1, !dbg !4898
  %8 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !4898
  %offset14 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %root, i64 0, i32 4, i32 1, !dbg !4899
  %9 = load %union.tree_node*, %union.tree_node** %offset14, align 8, !dbg !4899
  %call15 = tail call i32 @operand_equal_p(%union.tree_node* %8, %union.tree_node* %9, i32 0) #6, !dbg !4900
  %tobool16 = icmp eq i32 %call15, 0, !dbg !4900
  br i1 %tobool16, label %land.end, label %land.rhs, !dbg !4901

land.rhs:                                         ; preds = %if.then11
  %init = getelementptr inbounds %struct.data_reference, %struct.data_reference* %ref, i64 0, i32 4, i32 2, !dbg !4902
  %10 = load %union.tree_node*, %union.tree_node** %init, align 8, !dbg !4902
  %init19 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %root, i64 0, i32 4, i32 2, !dbg !4903
  %11 = load %union.tree_node*, %union.tree_node** %init19, align 8, !dbg !4903
  %call20 = tail call i32 @operand_equal_p(%union.tree_node* %10, %union.tree_node* %11, i32 0) #6, !dbg !4904
  %tobool21 = icmp ne i32 %call20, 0, !dbg !4901
  %phitmp = zext i1 %tobool21 to i8
  br label %land.end

land.end:                                         ; preds = %if.then11, %land.rhs
  %12 = phi i8 [ 0, %if.then11 ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !4905

if.end22:                                         ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %diff, metadata !4881, metadata !DIExpression(DW_OP_deref)), !dbg !4885
  call fastcc void @aff_combination_dr_offset(%struct.data_reference* %root, %struct.affine_tree_combination* nonnull %diff) #7, !dbg !4906
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %base, metadata !4882, metadata !DIExpression(DW_OP_deref)), !dbg !4885
  call fastcc void @aff_combination_dr_offset(%struct.data_reference* %ref, %struct.affine_tree_combination* nonnull %base) #7, !dbg !4907
  %call23 = call fastcc { i64, i64 } @shwi_to_double_int(i64 -1) #7, !dbg !4908
  %13 = extractvalue { i64, i64 } %call23, 0, !dbg !4908
  %14 = extractvalue { i64, i64 } %call23, 1, !dbg !4908
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %base, metadata !4882, metadata !DIExpression(DW_OP_deref)), !dbg !4885
  call void @aff_combination_scale(%struct.affine_tree_combination* nonnull %base, i64 %13, i64 %14) #6, !dbg !4909
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %diff, metadata !4881, metadata !DIExpression(DW_OP_deref)), !dbg !4885
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %base, metadata !4882, metadata !DIExpression(DW_OP_deref)), !dbg !4885
  call void @aff_combination_add(%struct.affine_tree_combination* nonnull %diff, %struct.affine_tree_combination* nonnull %base) #6, !dbg !4910
  %15 = load %union.tree_node*, %union.tree_node** %step8, align 8, !dbg !4911
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !4912
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %step, metadata !4883, metadata !DIExpression(DW_OP_deref)), !dbg !4885
  call void @tree_to_aff_combination_expand(%union.tree_node* %15, %union.tree_node* %16, %struct.affine_tree_combination* nonnull %step, %struct.pointer_map_t** nonnull @name_expansions) #6, !dbg !4913
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %diff, metadata !4881, metadata !DIExpression(DW_OP_deref)), !dbg !4885
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %step, metadata !4883, metadata !DIExpression(DW_OP_deref)), !dbg !4885
  call void @llvm.dbg.value(metadata %struct.double_int* %off, metadata !4884, metadata !DIExpression(DW_OP_deref)), !dbg !4885
  %call26 = call zeroext i8 @aff_combination_constant_multiple_p(%struct.affine_tree_combination* nonnull %diff, %struct.affine_tree_combination* nonnull %step, %struct.double_int* nonnull %off) #6, !dbg !4914
  %tobool27 = icmp eq i8 %call26, 0, !dbg !4914
  br i1 %tobool27, label %cleanup, label %if.end29, !dbg !4916

if.end29:                                         ; preds = %if.end22
  %conv31 = zext i32 %distance to i64, !dbg !4917
  %call32 = call fastcc { i64, i64 } @uhwi_to_double_int(i64 %conv31) #7, !dbg !4919
  %17 = extractvalue { i64, i64 } %call32, 0, !dbg !4919
  %18 = getelementptr inbounds %struct.double_int, %struct.double_int* %off, i64 0, i32 0, !dbg !4920
  %19 = load i64, i64* %18, align 8, !dbg !4920
  %20 = getelementptr inbounds %struct.double_int, %struct.double_int* %off, i64 0, i32 1, !dbg !4920
  %21 = load i64, i64* %20, align 8, !dbg !4920
  %call33 = call fastcc zeroext i8 @double_int_equal_p(i64 %19, i64 %21, i64 %17, i64 0) #7, !dbg !4920
  %tobool34 = icmp ne i8 %call33, 0, !dbg !4920
  %. = zext i1 %tobool34 to i8, !dbg !4885
  br label %cleanup, !dbg !4885

cleanup:                                          ; preds = %if.end22, %entry, %if.end29, %land.end
  %retval.0 = phi i8 [ %12, %land.end ], [ 0, %entry ], [ 0, %if.end22 ], [ %., %if.end29 ], !dbg !4885
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !4921
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %2) #8, !dbg !4921
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %1) #8, !dbg !4921
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %0) #8, !dbg !4921
  ret i8 %retval.0, !dbg !4921
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4922 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4926, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i32 %i, metadata !4927, metadata !DIExpression()), !dbg !4928
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4929
  %tobool = icmp eq i8 %call, 0, !dbg !4929
  br i1 %tobool, label %return, label %if.then, !dbg !4931

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4932
  %idxprom = zext i32 %i to i64, !dbg !4932
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !4932
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4932
  br label %return, !dbg !4934

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !4935
  ret %union.tree_node* %retval.0, !dbg !4936
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4937 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4939, metadata !DIExpression()), !dbg !4941
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !4942
  %idxprom = zext i32 %call to i64, !dbg !4943
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !4943
  %0 = load i64, i64* %arrayidx, align 8, !dbg !4943
  call void @llvm.dbg.value(metadata i64 %0, metadata !4940, metadata !DIExpression()), !dbg !4941
  %cmp = icmp eq i64 %0, 0, !dbg !4944
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4944

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4944
  br label %cond.end, !dbg !4944

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !4945
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !4946
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !4947
  ret %union.tree_node** %2, !dbg !4948
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4949 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4953, metadata !DIExpression()), !dbg !4954
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4955
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !4956
  ret i32 %call1, !dbg !4957
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !4958 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4962, metadata !DIExpression()), !dbg !4963
  %idxprom = zext i32 %code to i64, !dbg !4964
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !4964
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4964
  ret i32 %0, !dbg !4965
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !4966 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4971, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.value(metadata i32 %index, metadata !4972, metadata !DIExpression()), !dbg !4973
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !4974
  %0 = load i32, i32* %capacity, align 8, !dbg !4974
  %cmp = icmp ult i32 %0, %index, !dbg !4974
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4974

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4974
  br label %cond.end, !dbg !4974

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !4975
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !4975
  ret %struct.phi_arg_d* %arrayidx, !dbg !4976
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @double_int_equal_p(i64 %cst1.coerce0, i64 %cst1.coerce1, i64 %cst2.coerce0, i64 %cst2.coerce1) unnamed_addr #0 !dbg !4977 {
entry:
  %cmp = icmp eq i64 %cst1.coerce0, %cst2.coerce0, !dbg !4983
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4984

land.rhs:                                         ; preds = %entry
  %cmp3 = icmp eq i64 %cst1.coerce1, %cst2.coerce1, !dbg !4985
  %phitmp = zext i1 %cmp3 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4986
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.dref_d** @VEC_dref_heap_safe_insert(%struct.VEC_dref_heap** %vec_, i32 %ix_, %struct.dref_d* %obj_) unnamed_addr #0 !dbg !4987 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dref_heap** %vec_, metadata !4991, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata %struct.dref_d* %obj_, metadata !4993, metadata !DIExpression()), !dbg !4994
  %call = tail call fastcc i32 @VEC_dref_heap_reserve(%struct.VEC_dref_heap** %vec_, i32 1) #7, !dbg !4995
  %0 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %vec_, align 8, !dbg !4995
  %tobool = icmp eq %struct.VEC_dref_heap* %0, null, !dbg !4995
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4995

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %0, i64 0, i32 0, !dbg !4995
  br label %cond.end, !dbg !4995

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4995
  %call1 = tail call fastcc %struct.dref_d** @VEC_dref_base_quick_insert(%struct.VEC_dref_base* %cond, i32 %ix_, %struct.dref_d* %obj_) #7, !dbg !4995
  ret %struct.dref_d** %call1, !dbg !4995
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.dref_d** @VEC_dref_base_quick_insert(%struct.VEC_dref_base* %vec_, i32 %ix_, %struct.dref_d* %obj_) unnamed_addr #0 !dbg !4996 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dref_base* %vec_, metadata !5000, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5001, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata %struct.dref_d* %obj_, metadata !5002, metadata !DIExpression()), !dbg !5004
  %idxprom = zext i32 %ix_ to i64, !dbg !5005
  %arrayidx = getelementptr inbounds %struct.VEC_dref_base, %struct.VEC_dref_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5005
  call void @llvm.dbg.value(metadata %struct.dref_d** %arrayidx, metadata !5003, metadata !DIExpression()), !dbg !5004
  %add.ptr = getelementptr inbounds %struct.dref_d*, %struct.dref_d** %arrayidx, i64 1, !dbg !5005
  %0 = bitcast %struct.dref_d** %add.ptr to i8*, !dbg !5005
  %1 = bitcast %struct.dref_d** %arrayidx to i8*, !dbg !5005
  %num4 = getelementptr inbounds %struct.VEC_dref_base, %struct.VEC_dref_base* %vec_, i64 0, i32 0, !dbg !5005
  %2 = load i32, i32* %num4, align 8, !dbg !5005
  %inc = add i32 %2, 1, !dbg !5005
  store i32 %inc, i32* %num4, align 8, !dbg !5005
  %sub = sub i32 %2, %ix_, !dbg !5005
  %conv5 = zext i32 %sub to i64, !dbg !5005
  %mul = shl nuw nsw i64 %conv5, 3, !dbg !5005
  %call = tail call i8* @memmove(i8* nonnull %0, i8* nonnull %1, i64 %mul) #6, !dbg !5005
  store %struct.dref_d* %obj_, %struct.dref_d** %arrayidx, align 8, !dbg !5005
  ret %struct.dref_d** %arrayidx, !dbg !5005
}

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !5006 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !5011, metadata !DIExpression()), !dbg !5012
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !5013
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !5013
  br i1 %tobool, label %if.end, label %if.then, !dbg !5015

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !5015
  tail call void @free(i8* nonnull %1) #6, !dbg !5013
  br label %if.end, !dbg !5013

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !5015
  ret void, !dbg !5015
}

declare dso_local zeroext i8 @double_int_fits_in_uhwi_p(i64, i64) local_unnamed_addr #2

declare dso_local i64 @double_int_to_uhwi(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_chain_p_base_length(%struct.VEC_chain_p_base* %vec_) unnamed_addr #0 !dbg !5016 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_base* %vec_, metadata !5020, metadata !DIExpression()), !dbg !5021
  %tobool = icmp eq %struct.VEC_chain_p_base* %vec_, null, !dbg !5022
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5022

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 0, !dbg !5022
  %0 = load i32, i32* %num, align 8, !dbg !5022
  br label %cond.end, !dbg !5022

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5022
  ret i32 %cond, !dbg !5022
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.chain* @VEC_chain_p_base_index(%struct.VEC_chain_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5023 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_base* %vec_, metadata !5027, metadata !DIExpression()), !dbg !5029
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5028, metadata !DIExpression()), !dbg !5029
  br label %land.end, !dbg !5030

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5030
  %arrayidx = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5030
  %0 = load %struct.chain*, %struct.chain** %arrayidx, align 8, !dbg !5030
  ret %struct.chain* %0, !dbg !5030
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @prepare_initializers_chain(%struct.loop* %loop, %struct.chain* %chain) unnamed_addr #5 !dbg !5031 {
entry:
  %stmts = alloca %struct.gimple_seq_d*, align 8
  %laref = alloca %struct.dref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5035, metadata !DIExpression()), !dbg !5044
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !5036, metadata !DIExpression()), !dbg !5044
  %type = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 0, !dbg !5045
  %0 = load i32, i32* %type, align 8, !dbg !5045
  %cmp = icmp eq i32 %0, 0, !dbg !5046
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !5047

cond.false:                                       ; preds = %entry
  %length = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 6, !dbg !5048
  %1 = load i32, i32* %length, align 8, !dbg !5048
  br label %cond.end, !dbg !5047

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %1, %cond.false ], [ 1, %entry ], !dbg !5047
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5038, metadata !DIExpression()), !dbg !5044
  %call = tail call fastcc %struct.dref_d* @get_chain_root(%struct.chain* %chain) #7, !dbg !5049
  %ref = getelementptr inbounds %struct.dref_d, %struct.dref_d* %call, i64 0, i32 0, !dbg !5050
  %2 = load %struct.data_reference*, %struct.data_reference** %ref, align 8, !dbg !5050
  call void @llvm.dbg.value(metadata %struct.data_reference* %2, metadata !5039, metadata !DIExpression()), !dbg !5044
  %3 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !5051
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5051
  %4 = bitcast %struct.dref_d** %laref to i8*, !dbg !5052
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5052
  %call2 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !5053
  call void @llvm.dbg.value(metadata %struct.edge_def* %call2, metadata !5043, metadata !DIExpression()), !dbg !5044
  %call3 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %cond) #7, !dbg !5054
  %inits = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 8, !dbg !5055
  store %struct.VEC_tree_heap* %call3, %struct.VEC_tree_heap** %inits, align 8, !dbg !5056
  call void @llvm.dbg.value(metadata i32 0, metadata !5037, metadata !DIExpression()), !dbg !5044
  br label %for.cond, !dbg !5057

for.cond:                                         ; preds = %cond.end9, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %cond.end9 ], !dbg !5059
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5037, metadata !DIExpression()), !dbg !5044
  %exitcond1 = icmp eq i32 %i.0, %cond, !dbg !5060
  br i1 %exitcond1, label %for.cond12.preheader, label %for.body, !dbg !5062

for.cond12.preheader:                             ; preds = %for.cond
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 5, !dbg !5063
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call2, i64 0, i32 6, !dbg !5066
  br label %for.cond12, !dbg !5068

for.body:                                         ; preds = %for.cond
  %5 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %inits, align 8, !dbg !5069
  %tobool = icmp eq %struct.VEC_tree_heap* %5, null, !dbg !5069
  br i1 %tobool, label %cond.end9, label %cond.true6, !dbg !5069

cond.true6:                                       ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %5, i64 0, i32 0, !dbg !5069
  br label %cond.end9, !dbg !5069

cond.end9:                                        ; preds = %for.body, %cond.true6
  %cond10 = phi %struct.VEC_tree_base* [ %base, %cond.true6 ], [ null, %for.body ], !dbg !5069
  %call11 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond10, %union.tree_node* null) #7, !dbg !5069
  %inc = add i32 %i.0, 1, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5037, metadata !DIExpression()), !dbg !5044
  br label %for.cond, !dbg !5071, !llvm.loop !5072

for.cond12:                                       ; preds = %for.cond12.preheader, %for.inc43
  %i.1 = phi i32 [ %inc44, %for.inc43 ], [ 0, %for.cond12.preheader ], !dbg !5074
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5037, metadata !DIExpression()), !dbg !5044
  %6 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !5075
  %tobool13 = icmp eq %struct.VEC_dref_heap* %6, null, !dbg !5075
  br i1 %tobool13, label %cond.end18, label %cond.true14, !dbg !5075

cond.true14:                                      ; preds = %for.cond12
  %base16 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %6, i64 0, i32 0, !dbg !5075
  br label %cond.end18, !dbg !5075

cond.end18:                                       ; preds = %for.cond12, %cond.true14
  %cond19 = phi %struct.VEC_dref_base* [ %base16, %cond.true14 ], [ null, %for.cond12 ], !dbg !5075
  call void @llvm.dbg.value(metadata %struct.dref_d** %laref, metadata !5042, metadata !DIExpression(DW_OP_deref)), !dbg !5044
  %call20 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond19, i32 %i.1, %struct.dref_d** nonnull %laref) #7, !dbg !5075
  %tobool21 = icmp eq i32 %call20, 0, !dbg !5068
  br i1 %tobool21, label %for.cond46.preheader, label %for.body22, !dbg !5068

for.cond46.preheader:                             ; preds = %cond.end18
  %ref61 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %2, i64 0, i32 1, !dbg !5076
  %all_always_accessed = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 9, !dbg !5080
  br label %for.cond46, !dbg !5082

for.body22:                                       ; preds = %cond.end18
  %7 = load %struct.dref_d*, %struct.dref_d** %laref, align 8, !dbg !5083
  call void @llvm.dbg.value(metadata %struct.dref_d* %7, metadata !5042, metadata !DIExpression()), !dbg !5044
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %7, i64 0, i32 1, !dbg !5085
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5085
  %call23 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %8) #7, !dbg !5086
  %cmp24 = icmp eq i32 %call23, 16, !dbg !5087
  br i1 %cmp24, label %if.end, label %for.inc43, !dbg !5088

if.end:                                           ; preds = %for.body22
  %9 = load %struct.dref_d*, %struct.dref_d** %laref, align 8, !dbg !5089
  call void @llvm.dbg.value(metadata %struct.dref_d* %9, metadata !5042, metadata !DIExpression()), !dbg !5044
  %distance = getelementptr inbounds %struct.dref_d, %struct.dref_d* %9, i64 0, i32 3, !dbg !5089
  %10 = load i32, i32* %distance, align 8, !dbg !5089
  %cmp25 = icmp eq i32 %10, 0, !dbg !5089
  br i1 %cmp25, label %cond.true26, label %cond.end28, !dbg !5089

cond.true26:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 2406, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5089
  br label %cond.end28, !dbg !5089

cond.end28:                                       ; preds = %if.end, %cond.true26
  %11 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %inits, align 8, !dbg !5090
  %tobool31 = icmp eq %struct.VEC_tree_heap* %11, null, !dbg !5090
  br i1 %tobool31, label %cond.end36, label %cond.true32, !dbg !5090

cond.true32:                                      ; preds = %cond.end28
  %base34 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %11, i64 0, i32 0, !dbg !5090
  br label %cond.end36, !dbg !5090

cond.end36:                                       ; preds = %cond.end28, %cond.true32
  %cond37 = phi %struct.VEC_tree_base* [ %base34, %cond.true32 ], [ null, %cond.end28 ], !dbg !5090
  %12 = load %struct.dref_d*, %struct.dref_d** %laref, align 8, !dbg !5090
  call void @llvm.dbg.value(metadata %struct.dref_d* %12, metadata !5042, metadata !DIExpression()), !dbg !5044
  %distance38 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %12, i64 0, i32 3, !dbg !5090
  %13 = load i32, i32* %distance38, align 8, !dbg !5090
  %sub = sub i32 %cond, %13, !dbg !5090
  call void @llvm.dbg.value(metadata %struct.dref_d* %12, metadata !5042, metadata !DIExpression()), !dbg !5044
  %stmt39 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %12, i64 0, i32 1, !dbg !5090
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt39, align 8, !dbg !5090
  %15 = load i32, i32* %dest_idx, align 4, !dbg !5090
  %call40 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %14, i32 %15) #7, !dbg !5090
  %call41 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call40) #7, !dbg !5090
  %call42 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %cond37, i32 %sub, %union.tree_node* %call41) #7, !dbg !5090
  br label %for.inc43, !dbg !5091

for.inc43:                                        ; preds = %for.body22, %cond.end36
  %inc44 = add i32 %i.1, 1, !dbg !5092
  call void @llvm.dbg.value(metadata i32 %inc44, metadata !5037, metadata !DIExpression()), !dbg !5044
  br label %for.cond12, !dbg !5093, !llvm.loop !5094

for.cond46:                                       ; preds = %for.cond46.preheader, %for.inc86
  %i.2 = phi i32 [ %inc87, %for.inc86 ], [ 0, %for.cond46.preheader ], !dbg !5096
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !5037, metadata !DIExpression()), !dbg !5044
  %exitcond = icmp eq i32 %i.2, %cond, !dbg !5097
  br i1 %exitcond, label %cleanup, label %for.body48, !dbg !5082

for.body48:                                       ; preds = %for.cond46
  %16 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %inits, align 8, !dbg !5098
  %tobool50 = icmp eq %struct.VEC_tree_heap* %16, null, !dbg !5098
  br i1 %tobool50, label %cond.end55, label %cond.true51, !dbg !5098

cond.true51:                                      ; preds = %for.body48
  %base53 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %16, i64 0, i32 0, !dbg !5098
  br label %cond.end55, !dbg !5098

cond.end55:                                       ; preds = %for.body48, %cond.true51
  %cond56 = phi %struct.VEC_tree_base* [ %base53, %cond.true51 ], [ null, %for.body48 ], !dbg !5098
  %call57 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond56, i32 %i.2) #7, !dbg !5098
  %cmp58 = icmp eq %union.tree_node* %call57, null, !dbg !5100
  br i1 %cmp58, label %if.end60, label %for.inc86, !dbg !5101

if.end60:                                         ; preds = %cond.end55
  %17 = load %union.tree_node*, %union.tree_node** %ref61, align 8, !dbg !5076
  %sub62 = sub i32 %i.2, %cond, !dbg !5102
  %call63 = call fastcc %union.tree_node* @ref_at_iteration(%struct.loop* %loop, %union.tree_node* %17, i32 %sub62) #7, !dbg !5103
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !5040, metadata !DIExpression()), !dbg !5044
  %tobool64 = icmp eq %union.tree_node* %call63, null, !dbg !5104
  br i1 %tobool64, label %cleanup, label %if.end66, !dbg !5106

if.end66:                                         ; preds = %if.end60
  %bf.load = load i8, i8* %all_always_accessed, align 8, !dbg !5107
  %bf.clear = and i8 %bf.load, 2, !dbg !5107
  %tobool67 = icmp eq i8 %bf.clear, 0, !dbg !5108
  br i1 %tobool67, label %land.lhs.true, label %if.end71, !dbg !5109

land.lhs.true:                                    ; preds = %if.end66
  %call68 = call zeroext i8 @tree_could_trap_p(%union.tree_node* nonnull %call63) #6, !dbg !5110
  %tobool69 = icmp eq i8 %call68, 0, !dbg !5110
  br i1 %tobool69, label %if.end71, label %cleanup, !dbg !5111

if.end71:                                         ; preds = %land.lhs.true, %if.end66
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !5041, metadata !DIExpression(DW_OP_deref)), !dbg !5044
  %call72 = call %union.tree_node* @force_gimple_operand(%union.tree_node* nonnull %call63, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 0, %union.tree_node* null) #6, !dbg !5112
  call void @llvm.dbg.value(metadata %union.tree_node* %call72, metadata !5040, metadata !DIExpression()), !dbg !5044
  %18 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !5113
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %18, metadata !5041, metadata !DIExpression()), !dbg !5044
  %tobool73 = icmp eq %struct.gimple_seq_d* %18, null, !dbg !5113
  br i1 %tobool73, label %if.end76, label %if.then74, !dbg !5115

if.then74:                                        ; preds = %if.end71
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %18, metadata !5041, metadata !DIExpression()), !dbg !5044
  %call75 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call2, %struct.gimple_seq_d* nonnull %18) #6, !dbg !5116
  br label %if.end76, !dbg !5116

if.end76:                                         ; preds = %if.end71, %if.then74
  %19 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %inits, align 8, !dbg !5117
  %tobool78 = icmp eq %struct.VEC_tree_heap* %19, null, !dbg !5117
  br i1 %tobool78, label %cond.end83, label %cond.true79, !dbg !5117

cond.true79:                                      ; preds = %if.end76
  %base81 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %19, i64 0, i32 0, !dbg !5117
  br label %cond.end83, !dbg !5117

cond.end83:                                       ; preds = %if.end76, %cond.true79
  %cond84 = phi %struct.VEC_tree_base* [ %base81, %cond.true79 ], [ null, %if.end76 ], !dbg !5117
  %call85 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %cond84, i32 %i.2, %union.tree_node* %call72) #7, !dbg !5117
  br label %for.inc86, !dbg !5118

for.inc86:                                        ; preds = %cond.end55, %cond.end83
  %inc87 = add i32 %i.2, 1, !dbg !5119
  call void @llvm.dbg.value(metadata i32 %inc87, metadata !5037, metadata !DIExpression()), !dbg !5044
  br label %for.cond46, !dbg !5120, !llvm.loop !5121

cleanup:                                          ; preds = %for.cond46, %land.lhs.true, %if.end60
  %retval.0 = phi i8 [ 0, %if.end60 ], [ 0, %land.lhs.true ], [ 1, %for.cond46 ], !dbg !5044
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5123
  ret i8 %retval.0, !dbg !5123
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.chain* @VEC_chain_p_base_unordered_remove(%struct.VEC_chain_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5124 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_base* %vec_, metadata !5128, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5129, metadata !DIExpression()), !dbg !5132
  %idxprom = zext i32 %ix_ to i64, !dbg !5133
  %arrayidx = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5133
  call void @llvm.dbg.value(metadata %struct.chain** %arrayidx, metadata !5130, metadata !DIExpression()), !dbg !5132
  %0 = load %struct.chain*, %struct.chain** %arrayidx, align 8, !dbg !5133
  call void @llvm.dbg.value(metadata %struct.chain* %0, metadata !5131, metadata !DIExpression()), !dbg !5132
  %num2 = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 0, !dbg !5133
  %1 = load i32, i32* %num2, align 8, !dbg !5133
  %dec = add i32 %1, -1, !dbg !5133
  store i32 %dec, i32* %num2, align 8, !dbg !5133
  %idxprom3 = zext i32 %dec to i64, !dbg !5133
  %arrayidx4 = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 2, i64 %idxprom3, !dbg !5133
  %2 = bitcast %struct.chain** %arrayidx4 to i64*, !dbg !5133
  %3 = load i64, i64* %2, align 8, !dbg !5133
  %4 = bitcast %struct.chain** %arrayidx to i64*, !dbg !5133
  store i64 %3, i64* %4, align 8, !dbg !5133
  ret %struct.chain* %0, !dbg !5133
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5134 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5138, metadata !DIExpression()), !dbg !5139
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !5140
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !5140
  ret %struct.VEC_tree_heap* %0, !dbg !5140
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5141 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5146, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5147, metadata !DIExpression()), !dbg !5149
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5150
  %0 = load i32, i32* %num1, align 8, !dbg !5150
  %inc = add i32 %0, 1, !dbg !5150
  store i32 %inc, i32* %num1, align 8, !dbg !5150
  %idxprom = zext i32 %0 to i64, !dbg !5150
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5150
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !5148, metadata !DIExpression()), !dbg !5149
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !5150
  ret %union.tree_node** %arrayidx, !dbg !5150
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5151 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5155, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5156, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5157, metadata !DIExpression()), !dbg !5159
  %idxprom = zext i32 %ix_ to i64, !dbg !5160
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5160
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5160
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5158, metadata !DIExpression()), !dbg !5159
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !5160
  ret %union.tree_node* %0, !dbg !5160
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5161 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5165, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5166, metadata !DIExpression()), !dbg !5167
  br label %land.end, !dbg !5168

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5168
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5168
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5168
  ret %union.tree_node* %0, !dbg !5168
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @ref_at_iteration(%struct.loop* %loop, %union.tree_node* %ref, i32 %iter) unnamed_addr #5 !dbg !5169 {
entry:
  %iv = alloca %struct.affine_iv, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5173, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !5174, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i32 %iter, metadata !5175, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5180, metadata !DIExpression()), !dbg !5184
  %0 = bitcast %struct.affine_iv* %iv to i8*, !dbg !5185
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5185
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %ref) #7, !dbg !5186
  %tobool = icmp eq i8 %call, 0, !dbg !5186
  br i1 %tobool, label %if.else, label %if.then, !dbg !5188

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5189
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5189
  %call1 = tail call fastcc %union.tree_node* @ref_at_iteration(%struct.loop* %loop, %union.tree_node* %1, i32 %iter) #7, !dbg !5191
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5180, metadata !DIExpression()), !dbg !5184
  %tobool2 = icmp eq %union.tree_node* %call1, null, !dbg !5192
  br i1 %tobool2, label %cleanup, label %if.then.if.end18_crit_edge, !dbg !5194

if.then.if.end18_crit_edge:                       ; preds = %if.then
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5195
  %bf.load20.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !5197
  br label %if.end18, !dbg !5194

if.else:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5198
  %bf.load = load i64, i64* %2, align 8, !dbg !5198
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5198
  %cmp = icmp eq i64 %bf.cast1, 47, !dbg !5198
  br i1 %cmp, label %if.end18, label %lor.lhs.false, !dbg !5198

lor.lhs.false:                                    ; preds = %if.else
  %cmp8 = icmp eq i64 %bf.cast1, 48, !dbg !5198
  br i1 %cmp8, label %if.end18, label %lor.lhs.false9, !dbg !5198

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %cmp14 = icmp eq i64 %bf.cast1, 49, !dbg !5198
  br i1 %cmp14, label %if.end18, label %if.then15, !dbg !5200

if.then15:                                        ; preds = %lor.lhs.false9
  %call16 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %ref) #6, !dbg !5201
  br label %cleanup, !dbg !5202

if.end18:                                         ; preds = %if.then.if.end18_crit_edge, %if.else, %lor.lhs.false, %lor.lhs.false9
  %bf.load74 = phi i64 [ %bf.load20.pre, %if.then.if.end18_crit_edge ], [ %bf.load, %lor.lhs.false9 ], [ %bf.load, %lor.lhs.false ], [ %bf.load, %if.else ], !dbg !5197
  %op0.0 = phi %union.tree_node* [ %call1, %if.then.if.end18_crit_edge ], [ null, %lor.lhs.false9 ], [ null, %lor.lhs.false ], [ null, %if.else ], !dbg !5184
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !5180, metadata !DIExpression()), !dbg !5184
  %bf.cast224 = and i64 %bf.load74, 65535, !dbg !5197
  %cmp23 = icmp eq i64 %bf.cast224, 47, !dbg !5197
  br i1 %cmp23, label %if.then36, label %lor.lhs.false24, !dbg !5197

lor.lhs.false24:                                  ; preds = %if.end18
  %cmp29 = icmp eq i64 %bf.cast224, 48, !dbg !5197
  br i1 %cmp29, label %if.then36, label %lor.lhs.false30, !dbg !5197

lor.lhs.false30:                                  ; preds = %lor.lhs.false24
  %cmp35 = icmp eq i64 %bf.cast224, 49, !dbg !5197
  br i1 %cmp35, label %if.then36, label %if.else44, !dbg !5203

if.then36:                                        ; preds = %lor.lhs.false30, %lor.lhs.false24, %if.end18
  %call37 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %ref) #6, !dbg !5204
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !5181, metadata !DIExpression()), !dbg !5184
  %operands39 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5206
  %operands42 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5207
  call void @llvm.dbg.value(metadata %union.tree_node** %operands42, metadata !5177, metadata !DIExpression()), !dbg !5184
  br label %if.end123, !dbg !5208

if.else44:                                        ; preds = %lor.lhs.false30
  %cmp49 = icmp eq i64 %bf.cast224, 41, !dbg !5209
  br i1 %cmp49, label %if.then50, label %if.else72, !dbg !5211

if.then50:                                        ; preds = %if.else44
  %operands52 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5212
  %arrayidx53 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands52, i64 2, !dbg !5212
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx53, align 8, !dbg !5212
  %tobool54 = icmp eq %union.tree_node* %3, null, !dbg !5212
  br i1 %tobool54, label %if.end61, label %land.lhs.true, !dbg !5215

land.lhs.true:                                    ; preds = %if.then50
  %call58 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %loop, %union.tree_node* nonnull %3) #6, !dbg !5216
  %tobool59 = icmp eq i8 %call58, 0, !dbg !5216
  br i1 %tobool59, label %cleanup, label %if.end61, !dbg !5217

if.end61:                                         ; preds = %land.lhs.true, %if.then50
  %type62 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5218
  %4 = load %union.tree_node*, %union.tree_node** %type62, align 8, !dbg !5218
  %arrayidx65 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands52, i64 1, !dbg !5218
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx65, align 8, !dbg !5218
  %call66 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %5) #6, !dbg !5218
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx53, align 8, !dbg !5218
  %call70 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %6) #6, !dbg !5218
  %call71 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %4, %union.tree_node* %op0.0, %union.tree_node* %call66, %union.tree_node* %call70) #6, !dbg !5218
  br label %cleanup, !dbg !5219

if.else72:                                        ; preds = %if.else44
  %cmp77 = icmp eq i64 %bf.cast224, 45, !dbg !5220
  br i1 %cmp77, label %if.then78, label %cleanup, !dbg !5222

if.then78:                                        ; preds = %if.else72
  %operands80 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5223
  %arrayidx81 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands80, i64 2, !dbg !5223
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx81, align 8, !dbg !5223
  %tobool82 = icmp eq %union.tree_node* %7, null, !dbg !5223
  br i1 %tobool82, label %if.end90, label %land.lhs.true83, !dbg !5226

land.lhs.true83:                                  ; preds = %if.then78
  %call87 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %loop, %union.tree_node* nonnull %7) #6, !dbg !5227
  %tobool88 = icmp eq i8 %call87, 0, !dbg !5227
  br i1 %tobool88, label %cleanup, label %if.end90, !dbg !5228

if.end90:                                         ; preds = %land.lhs.true83, %if.then78
  %arrayidx93 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands80, i64 3, !dbg !5229
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx93, align 8, !dbg !5229
  %tobool94 = icmp eq %union.tree_node* %8, null, !dbg !5229
  br i1 %tobool94, label %if.end102, label %land.lhs.true95, !dbg !5231

land.lhs.true95:                                  ; preds = %if.end90
  %call99 = tail call zeroext i8 @expr_invariant_in_loop_p(%struct.loop* %loop, %union.tree_node* nonnull %8) #6, !dbg !5232
  %tobool100 = icmp eq i8 %call99, 0, !dbg !5232
  br i1 %tobool100, label %cleanup, label %if.end102, !dbg !5233

if.end102:                                        ; preds = %land.lhs.true95, %if.end90
  %type104 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5234
  %9 = load %union.tree_node*, %union.tree_node** %type104, align 8, !dbg !5234
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx81, align 8, !dbg !5234
  %call108 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %10) #6, !dbg !5234
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx93, align 8, !dbg !5234
  %call112 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %11) #6, !dbg !5234
  %call113 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %9, %union.tree_node* %op0.0, %union.tree_node* null, %union.tree_node* %call108, %union.tree_node* %call112) #6, !dbg !5234
  call void @llvm.dbg.value(metadata %union.tree_node* %call113, metadata !5181, metadata !DIExpression()), !dbg !5184
  %arrayidx116 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands80, i64 1, !dbg !5235
  %operands118 = getelementptr inbounds %union.tree_node, %union.tree_node* %call113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5236
  %arrayidx119 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands118, i64 1, !dbg !5236
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx119, metadata !5177, metadata !DIExpression()), !dbg !5184
  br label %if.end123

if.end123:                                        ; preds = %if.end102, %if.then36
  %idx_p.0 = phi %union.tree_node** [ %operands42, %if.then36 ], [ %arrayidx119, %if.end102 ], !dbg !5195
  %idx.0.in = phi %union.tree_node** [ %operands39, %if.then36 ], [ %arrayidx116, %if.end102 ]
  %ret.0 = phi %union.tree_node* [ %call37, %if.then36 ], [ %call113, %if.end102 ], !dbg !5195
  %idx.0 = load %union.tree_node*, %union.tree_node** %idx.0.in, align 8, !dbg !5195
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !5181, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata %union.tree_node* %idx.0, metadata !5176, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata %union.tree_node** %idx_p.0, metadata !5177, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata %struct.affine_iv* %iv, metadata !5182, metadata !DIExpression(DW_OP_deref)), !dbg !5184
  %call124 = call zeroext i8 @simple_iv(%struct.loop* %loop, %struct.loop* %loop, %union.tree_node* %idx.0, %struct.affine_iv* nonnull %iv, i8 zeroext 1) #6, !dbg !5237
  call void @llvm.dbg.value(metadata i8 %call124, metadata !5183, metadata !DIExpression()), !dbg !5184
  %tobool125 = icmp eq i8 %call124, 0, !dbg !5238
  br i1 %tobool125, label %cleanup, label %if.end127, !dbg !5240

if.end127:                                        ; preds = %if.end123
  %base128 = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %iv, i64 0, i32 0, !dbg !5241
  %12 = load %union.tree_node*, %union.tree_node** %base128, align 8, !dbg !5241
  %call129 = call %union.tree_node* @expand_simple_operations(%union.tree_node* %12) #6, !dbg !5242
  store %union.tree_node* %call129, %union.tree_node** %base128, align 8, !dbg !5243
  %step = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %iv, i64 0, i32 1, !dbg !5244
  %13 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !5244
  %call131 = call i32 @integer_zerop(%union.tree_node* %13) #6, !dbg !5246
  %tobool132 = icmp eq i32 %call131, 0, !dbg !5246
  %14 = load %union.tree_node*, %union.tree_node** %base128, align 8, !dbg !5247
  br i1 %tobool132, label %if.else136, label %if.then133, !dbg !5248

if.then133:                                       ; preds = %if.end127
  %call135 = call %union.tree_node* @unshare_expr(%union.tree_node* %14) #6, !dbg !5249
  store %union.tree_node* %call135, %union.tree_node** %idx_p.0, align 8, !dbg !5250
  br label %cleanup, !dbg !5251

if.else136:                                       ; preds = %if.end127
  %type139 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5252
  %15 = load %union.tree_node*, %union.tree_node** %type139, align 8, !dbg !5252
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !5178, metadata !DIExpression()), !dbg !5184
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5254
  %bf.load141 = load i64, i64* %16, align 8, !dbg !5254
  %bf.cast1439 = and i64 %bf.load141, 65535, !dbg !5254
  %cmp144 = icmp eq i64 %bf.cast1439, 10, !dbg !5254
  br i1 %cmp144, label %if.then151, label %lor.lhs.false145, !dbg !5254

lor.lhs.false145:                                 ; preds = %if.else136
  %cmp150 = icmp eq i64 %bf.cast1439, 12, !dbg !5254
  br i1 %cmp150, label %if.then151, label %if.else157, !dbg !5256

if.then151:                                       ; preds = %lor.lhs.false145, %if.else136
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !5257
  %18 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !5257
  %conv = sext i32 %iter to i64, !dbg !5257
  %call153 = call %union.tree_node* @size_int_kind(i64 %conv, i32 0) #6, !dbg !5257
  %call154 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %17, %union.tree_node* %18, %union.tree_node* %call153) #6, !dbg !5257
  call void @llvm.dbg.value(metadata %union.tree_node* %call154, metadata !5179, metadata !DIExpression()), !dbg !5184
  %19 = load %union.tree_node*, %union.tree_node** %base128, align 8, !dbg !5259
  %call156 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 66, %union.tree_node* %15, %union.tree_node* %19, %union.tree_node* %call154) #6, !dbg !5259
  call void @llvm.dbg.value(metadata %union.tree_node* %call156, metadata !5179, metadata !DIExpression()), !dbg !5184
  br label %if.end164, !dbg !5260

if.else157:                                       ; preds = %lor.lhs.false145
  %20 = load %union.tree_node*, %union.tree_node** %step, align 8, !dbg !5261
  %conv159 = sext i32 %iter to i64, !dbg !5261
  %call160 = call %union.tree_node* @build_int_cst_type(%union.tree_node* %15, i64 %conv159) #6, !dbg !5261
  %call161 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %15, %union.tree_node* %20, %union.tree_node* %call160) #6, !dbg !5261
  call void @llvm.dbg.value(metadata %union.tree_node* %call161, metadata !5179, metadata !DIExpression()), !dbg !5184
  %21 = load %union.tree_node*, %union.tree_node** %base128, align 8, !dbg !5263
  %call163 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %15, %union.tree_node* %21, %union.tree_node* %call161) #6, !dbg !5263
  call void @llvm.dbg.value(metadata %union.tree_node* %call163, metadata !5179, metadata !DIExpression()), !dbg !5184
  br label %if.end164

if.end164:                                        ; preds = %if.else157, %if.then151
  %val.0 = phi %union.tree_node* [ %call156, %if.then151 ], [ %call163, %if.else157 ], !dbg !5264
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !5179, metadata !DIExpression()), !dbg !5184
  %call165 = call %union.tree_node* @unshare_expr(%union.tree_node* %val.0) #6, !dbg !5265
  store %union.tree_node* %call165, %union.tree_node** %idx_p.0, align 8, !dbg !5266
  br label %cleanup

cleanup:                                          ; preds = %if.then, %land.lhs.true, %land.lhs.true83, %land.lhs.true95, %if.end123, %if.then133, %if.end164, %if.else72, %if.end61, %if.then15
  %retval.0 = phi %union.tree_node* [ %call71, %if.end61 ], [ %call16, %if.then15 ], [ null, %if.then ], [ null, %land.lhs.true ], [ null, %land.lhs.true83 ], [ null, %land.lhs.true95 ], [ null, %if.else72 ], [ null, %if.end123 ], [ %ret.0, %if.end164 ], [ %ret.0, %if.then133 ], !dbg !5184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5267
  ret %union.tree_node* %retval.0, !dbg !5267
}

declare dso_local zeroext i8 @tree_could_trap_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand(%union.tree_node*, %struct.gimple_seq_d**, i8 zeroext, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def*, %struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !5268 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5275, metadata !DIExpression()), !dbg !5276
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5277
  %bf.load = load i64, i64* %0, align 8, !dbg !5277
  %1 = trunc i64 %bf.load to i16, !dbg !5277
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !5278

sw.default:                                       ; preds = %entry
  br label %return, !dbg !5279

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !5281
  ret i8 %retval.0, !dbg !5282
}

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @expr_invariant_in_loop_p(%struct.loop*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build4_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @simple_iv(%struct.loop*, %struct.loop*, %union.tree_node*, %struct.affine_iv*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @expand_simple_operations(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst_type(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @chain_can_be_combined_p(%struct.chain* %chain) unnamed_addr #5 !dbg !5283 {
entry:
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !5285, metadata !DIExpression()), !dbg !5286
  %combined = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 9, !dbg !5287
  %bf.load = load i8, i8* %combined, align 8, !dbg !5287
  %bf.clear = and i8 %bf.load, 4, !dbg !5287
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !5288
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5289

land.rhs:                                         ; preds = %entry
  %type = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 0, !dbg !5290
  %0 = load i32, i32* %type, align 8, !dbg !5290
  %cmp = icmp eq i32 %0, 1, !dbg !5291
  br i1 %cmp, label %land.end, label %lor.rhs, !dbg !5292

lor.rhs:                                          ; preds = %land.rhs
  %cmp2 = icmp eq i32 %0, 3, !dbg !5293
  %phitmp = zext i1 %cmp2 to i8, !dbg !5292
  br label %land.end, !dbg !5292

land.end:                                         ; preds = %entry, %land.rhs, %lor.rhs
  %1 = phi i8 [ 0, %entry ], [ 1, %land.rhs ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !5294
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.chain* @VEC_chain_p_base_pop(%struct.VEC_chain_p_base* %vec_) unnamed_addr #0 !dbg !5295 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_base* %vec_, metadata !5299, metadata !DIExpression()), !dbg !5301
  %num1 = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 0, !dbg !5302
  %0 = load i32, i32* %num1, align 8, !dbg !5302
  %dec = add i32 %0, -1, !dbg !5302
  store i32 %dec, i32* %num1, align 8, !dbg !5302
  %idxprom = zext i32 %dec to i64, !dbg !5302
  %arrayidx = getelementptr inbounds %struct.VEC_chain_p_base, %struct.VEC_chain_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5302
  %1 = load %struct.chain*, %struct.chain** %arrayidx, align 8, !dbg !5302
  call void @llvm.dbg.value(metadata %struct.chain* %1, metadata !5300, metadata !DIExpression()), !dbg !5301
  ret %struct.chain* %1, !dbg !5302
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.chain* @combine_chains(%struct.chain* %ch1, %struct.chain* %ch2) unnamed_addr #5 !dbg !5303 {
entry:
  %r1 = alloca %struct.dref_d*, align 8
  %r2 = alloca %struct.dref_d*, align 8
  %nw = alloca %struct.dref_d*, align 8
  %op = alloca i32, align 4
  %swap = alloca i8, align 1
  %rslt_type = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.chain* %ch1, metadata !5307, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata %struct.chain* %ch2, metadata !5308, metadata !DIExpression()), !dbg !5321
  %0 = bitcast %struct.dref_d** %r1 to i8*, !dbg !5322
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5322
  %1 = bitcast %struct.dref_d** %r2 to i8*, !dbg !5322
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5322
  %2 = bitcast %struct.dref_d** %nw to i8*, !dbg !5322
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5322
  %3 = bitcast i32* %op to i8*, !dbg !5323
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !5323
  call void @llvm.dbg.value(metadata i32 0, metadata !5312, metadata !DIExpression()), !dbg !5321
  store i32 0, i32* %op, align 4, !dbg !5324
  call void @llvm.dbg.value(metadata i8* %swap, metadata !5313, metadata !DIExpression(DW_OP_deref)), !dbg !5321
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %swap) #8, !dbg !5325
  call void @llvm.dbg.value(metadata i8 0, metadata !5313, metadata !DIExpression()), !dbg !5321
  store i8 0, i8* %swap, align 1, !dbg !5326
  %4 = bitcast %union.tree_node** %rslt_type to i8*, !dbg !5327
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5327
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5317, metadata !DIExpression()), !dbg !5321
  store %union.tree_node* null, %union.tree_node** %rslt_type, align 8, !dbg !5328
  %cmp = icmp eq %struct.chain* %ch1, %ch2, !dbg !5329
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5331

if.end:                                           ; preds = %entry
  %length = getelementptr inbounds %struct.chain, %struct.chain* %ch1, i64 0, i32 6, !dbg !5332
  %5 = load i32, i32* %length, align 8, !dbg !5332
  %length1 = getelementptr inbounds %struct.chain, %struct.chain* %ch2, i64 0, i32 6, !dbg !5334
  %6 = load i32, i32* %length1, align 8, !dbg !5334
  %cmp2 = icmp eq i32 %5, %6, !dbg !5335
  br i1 %cmp2, label %if.end4, label %cleanup, !dbg !5336

if.end4:                                          ; preds = %if.end
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %ch1, i64 0, i32 5, !dbg !5337
  %7 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !5337
  %tobool = icmp eq %struct.VEC_dref_heap* %7, null, !dbg !5337
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5337

cond.true:                                        ; preds = %if.end4
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %7, i64 0, i32 0, !dbg !5337
  br label %cond.end, !dbg !5337

cond.end:                                         ; preds = %if.end4, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %if.end4 ], !dbg !5337
  %call = tail call fastcc i32 @VEC_dref_base_length(%struct.VEC_dref_base* %cond) #7, !dbg !5337
  %refs6 = getelementptr inbounds %struct.chain, %struct.chain* %ch2, i64 0, i32 5, !dbg !5339
  %8 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs6, align 8, !dbg !5339
  %tobool7 = icmp eq %struct.VEC_dref_heap* %8, null, !dbg !5339
  br i1 %tobool7, label %cond.end12, label %cond.true8, !dbg !5339

cond.true8:                                       ; preds = %cond.end
  %base10 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %8, i64 0, i32 0, !dbg !5339
  br label %cond.end12, !dbg !5339

cond.end12:                                       ; preds = %cond.end, %cond.true8
  %cond13 = phi %struct.VEC_dref_base* [ %base10, %cond.true8 ], [ null, %cond.end ], !dbg !5339
  %call14 = tail call fastcc i32 @VEC_dref_base_length(%struct.VEC_dref_base* %cond13) #7, !dbg !5339
  %cmp15 = icmp eq i32 %call, %call14, !dbg !5340
  br i1 %cmp15, label %for.cond.preheader, label %cleanup, !dbg !5341

for.cond.preheader:                               ; preds = %cond.end12
  br label %for.cond, !dbg !5342

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5344
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5315, metadata !DIExpression()), !dbg !5321
  %9 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !5345
  %tobool19 = icmp eq %struct.VEC_dref_heap* %9, null, !dbg !5345
  br i1 %tobool19, label %cond.end24, label %cond.true20, !dbg !5345

cond.true20:                                      ; preds = %for.cond
  %base22 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %9, i64 0, i32 0, !dbg !5345
  br label %cond.end24, !dbg !5345

cond.end24:                                       ; preds = %for.cond, %cond.true20
  %cond25 = phi %struct.VEC_dref_base* [ %base22, %cond.true20 ], [ null, %for.cond ], !dbg !5345
  call void @llvm.dbg.value(metadata %struct.dref_d** %r1, metadata !5309, metadata !DIExpression(DW_OP_deref)), !dbg !5321
  %call26 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond25, i32 %i.0, %struct.dref_d** nonnull %r1) #7, !dbg !5345
  %tobool27 = icmp eq i32 %call26, 0, !dbg !5345
  br i1 %tobool27, label %for.end, label %land.rhs, !dbg !5347

land.rhs:                                         ; preds = %cond.end24
  %10 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs6, align 8, !dbg !5348
  %tobool29 = icmp eq %struct.VEC_dref_heap* %10, null, !dbg !5348
  br i1 %tobool29, label %cond.end34, label %cond.true30, !dbg !5348

cond.true30:                                      ; preds = %land.rhs
  %base32 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %10, i64 0, i32 0, !dbg !5348
  br label %cond.end34, !dbg !5348

cond.end34:                                       ; preds = %land.rhs, %cond.true30
  %cond35 = phi %struct.VEC_dref_base* [ %base32, %cond.true30 ], [ null, %land.rhs ], !dbg !5348
  call void @llvm.dbg.value(metadata %struct.dref_d** %r2, metadata !5310, metadata !DIExpression(DW_OP_deref)), !dbg !5321
  %call36 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond35, i32 %i.0, %struct.dref_d** nonnull %r2) #7, !dbg !5348
  %tobool37 = icmp eq i32 %call36, 0, !dbg !5347
  br i1 %tobool37, label %for.end, label %for.body, !dbg !5342

for.body:                                         ; preds = %cond.end34
  %11 = load %struct.dref_d*, %struct.dref_d** %r1, align 8, !dbg !5349
  call void @llvm.dbg.value(metadata %struct.dref_d* %11, metadata !5309, metadata !DIExpression()), !dbg !5321
  %distance = getelementptr inbounds %struct.dref_d, %struct.dref_d* %11, i64 0, i32 3, !dbg !5352
  %12 = load i32, i32* %distance, align 8, !dbg !5352
  %13 = load %struct.dref_d*, %struct.dref_d** %r2, align 8, !dbg !5353
  call void @llvm.dbg.value(metadata %struct.dref_d* %13, metadata !5310, metadata !DIExpression()), !dbg !5321
  %distance38 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %13, i64 0, i32 3, !dbg !5354
  %14 = load i32, i32* %distance38, align 8, !dbg !5354
  %cmp39 = icmp eq i32 %12, %14, !dbg !5355
  br i1 %cmp39, label %if.end41, label %cleanup.loopexit, !dbg !5356

if.end41:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.dref_d* %11, metadata !5309, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata %struct.dref_d* %13, metadata !5310, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i32* %op, metadata !5312, metadata !DIExpression(DW_OP_deref)), !dbg !5321
  call void @llvm.dbg.value(metadata i8* %swap, metadata !5313, metadata !DIExpression(DW_OP_deref)), !dbg !5321
  call void @llvm.dbg.value(metadata %union.tree_node** %rslt_type, metadata !5317, metadata !DIExpression(DW_OP_deref)), !dbg !5321
  %call42 = call fastcc zeroext i8 @combinable_refs_p(%struct.dref_d* %11, %struct.dref_d* %13, i32* nonnull %op, i8* nonnull %swap, %union.tree_node** nonnull %rslt_type) #7, !dbg !5357
  %tobool43 = icmp eq i8 %call42, 0, !dbg !5357
  br i1 %tobool43, label %cleanup.loopexit, label %for.inc, !dbg !5359

for.inc:                                          ; preds = %if.end41
  %inc = add i32 %i.0, 1, !dbg !5360
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5315, metadata !DIExpression()), !dbg !5321
  br label %for.cond, !dbg !5361, !llvm.loop !5362

for.end:                                          ; preds = %cond.end34, %cond.end24
  %15 = load i8, i8* %swap, align 1, !dbg !5364
  call void @llvm.dbg.value(metadata i8 %15, metadata !5313, metadata !DIExpression()), !dbg !5321
  %tobool46 = icmp ne i8 %15, 0, !dbg !5364
  %spec.select = select i1 %tobool46, %struct.chain* %ch1, %struct.chain* %ch2, !dbg !5365
  %spec.select1 = select i1 %tobool46, %struct.chain* %ch2, %struct.chain* %ch1, !dbg !5365
  call void @llvm.dbg.value(metadata %struct.chain* %spec.select1, metadata !5307, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata %struct.chain* %spec.select, metadata !5308, metadata !DIExpression()), !dbg !5321
  %call49 = call i8* @xcalloc(i64 1, i64 72) #6, !dbg !5366
  %16 = bitcast i8* %call49 to %struct.chain*, !dbg !5366
  call void @llvm.dbg.value(metadata %struct.chain* %16, metadata !5314, metadata !DIExpression()), !dbg !5321
  %type = bitcast i8* %call49 to i32*, !dbg !5367
  store i32 3, i32* %type, align 8, !dbg !5368
  %17 = load i32, i32* %op, align 4, !dbg !5369
  call void @llvm.dbg.value(metadata i32 %17, metadata !5312, metadata !DIExpression()), !dbg !5321
  %op50 = getelementptr inbounds i8, i8* %call49, i64 4, !dbg !5370
  %18 = bitcast i8* %op50 to i32*, !dbg !5370
  store i32 %17, i32* %18, align 4, !dbg !5371
  %ch151 = getelementptr inbounds i8, i8* %call49, i64 16, !dbg !5372
  %19 = bitcast i8* %ch151 to %struct.chain**, !dbg !5372
  store %struct.chain* %spec.select1, %struct.chain** %19, align 8, !dbg !5373
  %ch252 = getelementptr inbounds i8, i8* %call49, i64 24, !dbg !5374
  %20 = bitcast i8* %ch252 to %struct.chain**, !dbg !5374
  store %struct.chain* %spec.select, %struct.chain** %20, align 8, !dbg !5375
  %21 = bitcast %union.tree_node** %rslt_type to i64*, !dbg !5376
  %22 = load i64, i64* %21, align 8, !dbg !5376
  %rslt_type53 = getelementptr inbounds i8, i8* %call49, i64 8, !dbg !5377
  %23 = bitcast i8* %rslt_type53 to i64*, !dbg !5378
  store i64 %22, i64* %23, align 8, !dbg !5378
  %length54 = getelementptr inbounds %struct.chain, %struct.chain* %spec.select1, i64 0, i32 6, !dbg !5379
  %24 = load i32, i32* %length54, align 8, !dbg !5379
  %length55 = getelementptr inbounds i8, i8* %call49, i64 40, !dbg !5380
  %25 = bitcast i8* %length55 to i32*, !dbg !5380
  store i32 %24, i32* %25, align 8, !dbg !5381
  call void @llvm.dbg.value(metadata i32 0, metadata !5315, metadata !DIExpression()), !dbg !5321
  %refs57 = getelementptr inbounds %struct.chain, %struct.chain* %spec.select1, i64 0, i32 5, !dbg !5382
  %refs68 = getelementptr inbounds %struct.chain, %struct.chain* %spec.select, i64 0, i32 5, !dbg !5382
  %26 = bitcast %struct.dref_d** %nw to i8**, !dbg !5385
  %refs84 = getelementptr inbounds i8, i8* %call49, i64 32, !dbg !5385
  %27 = bitcast i8* %refs84 to %struct.VEC_dref_heap**, !dbg !5385
  br label %for.cond56, !dbg !5387

for.cond56:                                       ; preds = %for.body79, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc87, %for.body79 ], !dbg !5388
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5315, metadata !DIExpression()), !dbg !5321
  %28 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs57, align 8, !dbg !5389
  %tobool58 = icmp eq %struct.VEC_dref_heap* %28, null, !dbg !5389
  br i1 %tobool58, label %cond.end63, label %cond.true59, !dbg !5389

cond.true59:                                      ; preds = %for.cond56
  %base61 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %28, i64 0, i32 0, !dbg !5389
  br label %cond.end63, !dbg !5389

cond.end63:                                       ; preds = %for.cond56, %cond.true59
  %cond64 = phi %struct.VEC_dref_base* [ %base61, %cond.true59 ], [ null, %for.cond56 ], !dbg !5389
  call void @llvm.dbg.value(metadata %struct.dref_d** %r1, metadata !5309, metadata !DIExpression(DW_OP_deref)), !dbg !5321
  %call65 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond64, i32 %i.1, %struct.dref_d** nonnull %r1) #7, !dbg !5389
  %tobool66 = icmp eq i32 %call65, 0, !dbg !5389
  br i1 %tobool66, label %for.end88, label %land.rhs67, !dbg !5390

land.rhs67:                                       ; preds = %cond.end63
  %29 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs68, align 8, !dbg !5391
  %tobool69 = icmp eq %struct.VEC_dref_heap* %29, null, !dbg !5391
  br i1 %tobool69, label %cond.end74, label %cond.true70, !dbg !5391

cond.true70:                                      ; preds = %land.rhs67
  %base72 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %29, i64 0, i32 0, !dbg !5391
  br label %cond.end74, !dbg !5391

cond.end74:                                       ; preds = %land.rhs67, %cond.true70
  %cond75 = phi %struct.VEC_dref_base* [ %base72, %cond.true70 ], [ null, %land.rhs67 ], !dbg !5391
  call void @llvm.dbg.value(metadata %struct.dref_d** %r2, metadata !5310, metadata !DIExpression(DW_OP_deref)), !dbg !5321
  %call76 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond75, i32 %i.1, %struct.dref_d** nonnull %r2) #7, !dbg !5391
  %tobool77 = icmp eq i32 %call76, 0, !dbg !5390
  br i1 %tobool77, label %for.end88, label %for.body79, !dbg !5392

for.body79:                                       ; preds = %cond.end74
  %call80 = call i8* @xcalloc(i64 1, i64 56) #6, !dbg !5393
  call void @llvm.dbg.value(metadata i8* %call80, metadata !5311, metadata !DIExpression()), !dbg !5321
  store i8* %call80, i8** %26, align 8, !dbg !5394
  %30 = load %struct.dref_d*, %struct.dref_d** %r1, align 8, !dbg !5395
  call void @llvm.dbg.value(metadata %struct.dref_d* %30, metadata !5309, metadata !DIExpression()), !dbg !5321
  %31 = load %struct.dref_d*, %struct.dref_d** %r2, align 8, !dbg !5396
  call void @llvm.dbg.value(metadata %struct.dref_d* %31, metadata !5310, metadata !DIExpression()), !dbg !5321
  %call81 = call fastcc %union.gimple_statement_d* @stmt_combining_refs(%struct.dref_d* %30, %struct.dref_d* %31) #7, !dbg !5397
  %32 = load %struct.dref_d*, %struct.dref_d** %nw, align 8, !dbg !5398
  call void @llvm.dbg.value(metadata %struct.dref_d* %32, metadata !5311, metadata !DIExpression()), !dbg !5321
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %32, i64 0, i32 1, !dbg !5399
  store %union.gimple_statement_d* %call81, %union.gimple_statement_d** %stmt, align 8, !dbg !5400
  %33 = load %struct.dref_d*, %struct.dref_d** %r1, align 8, !dbg !5401
  call void @llvm.dbg.value(metadata %struct.dref_d* %33, metadata !5309, metadata !DIExpression()), !dbg !5321
  %distance82 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %33, i64 0, i32 3, !dbg !5402
  %34 = load i32, i32* %distance82, align 8, !dbg !5402
  call void @llvm.dbg.value(metadata %struct.dref_d* %32, metadata !5311, metadata !DIExpression()), !dbg !5321
  %distance83 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %32, i64 0, i32 3, !dbg !5403
  store i32 %34, i32* %distance83, align 8, !dbg !5404
  call void @llvm.dbg.value(metadata %struct.dref_d* %32, metadata !5311, metadata !DIExpression()), !dbg !5321
  %call85 = call fastcc %struct.dref_d** @VEC_dref_heap_safe_push(%struct.VEC_dref_heap** nonnull %27, %struct.dref_d* %32) #7, !dbg !5405
  %inc87 = add i32 %i.1, 1, !dbg !5406
  call void @llvm.dbg.value(metadata i32 %inc87, metadata !5315, metadata !DIExpression()), !dbg !5321
  br label %for.cond56, !dbg !5407, !llvm.loop !5408

for.end88:                                        ; preds = %cond.end74, %cond.end63
  %35 = getelementptr inbounds i8, i8* %call49, i64 64, !dbg !5410
  %bf.load = load i8, i8* %35, align 8, !dbg !5411
  %bf.clear = and i8 %bf.load, -2, !dbg !5411
  store i8 %bf.clear, i8* %35, align 8, !dbg !5411
  %call89 = call fastcc %struct.dref_d* @get_chain_root(%struct.chain* %16) #7, !dbg !5412
  %stmt90 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %call89, i64 0, i32 1, !dbg !5413
  %36 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt90, align 8, !dbg !5413
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %36, metadata !5316, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i32 1, metadata !5315, metadata !DIExpression()), !dbg !5321
  br label %for.cond91, !dbg !5414

for.cond91:                                       ; preds = %for.inc114, %for.end88
  %i.2 = phi i32 [ 1, %for.end88 ], [ %inc115, %for.inc114 ], !dbg !5416
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !5315, metadata !DIExpression()), !dbg !5321
  %37 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %27, align 8, !dbg !5417
  %tobool93 = icmp eq %struct.VEC_dref_heap* %37, null, !dbg !5417
  br i1 %tobool93, label %cond.end98, label %cond.true94, !dbg !5417

cond.true94:                                      ; preds = %for.cond91
  %base96 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %37, i64 0, i32 0, !dbg !5417
  br label %cond.end98, !dbg !5417

cond.end98:                                       ; preds = %for.cond91, %cond.true94
  %cond99 = phi %struct.VEC_dref_base* [ %base96, %cond.true94 ], [ null, %for.cond91 ], !dbg !5417
  call void @llvm.dbg.value(metadata %struct.dref_d** %nw, metadata !5311, metadata !DIExpression(DW_OP_deref)), !dbg !5321
  %call100 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond99, i32 %i.2, %struct.dref_d** nonnull %nw) #7, !dbg !5417
  %tobool101 = icmp eq i32 %call100, 0, !dbg !5419
  br i1 %tobool101, label %for.end116.loopexit, label %for.body102, !dbg !5419

for.body102:                                      ; preds = %cond.end98
  %38 = load %struct.dref_d*, %struct.dref_d** %nw, align 8, !dbg !5420
  call void @llvm.dbg.value(metadata %struct.dref_d* %38, metadata !5311, metadata !DIExpression()), !dbg !5321
  %distance103 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %38, i64 0, i32 3, !dbg !5423
  %39 = load i32, i32* %distance103, align 8, !dbg !5423
  %40 = load i32, i32* %25, align 8, !dbg !5424
  %cmp105 = icmp eq i32 %39, %40, !dbg !5425
  br i1 %cmp105, label %land.lhs.true, label %for.inc114, !dbg !5426

land.lhs.true:                                    ; preds = %for.body102
  call void @llvm.dbg.value(metadata %struct.dref_d* %38, metadata !5311, metadata !DIExpression()), !dbg !5321
  %stmt106 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %38, i64 0, i32 1, !dbg !5427
  %41 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt106, align 8, !dbg !5427
  %call107 = call zeroext i8 @stmt_dominates_stmt_p(%union.gimple_statement_d* %41, %union.gimple_statement_d* %36) #6, !dbg !5428
  %tobool108 = icmp eq i8 %call107, 0, !dbg !5428
  br i1 %tobool108, label %if.then109, label %for.inc114, !dbg !5429

if.then109:                                       ; preds = %land.lhs.true
  %bf.load111 = load i8, i8* %35, align 8, !dbg !5430
  %bf.set = or i8 %bf.load111, 1, !dbg !5430
  store i8 %bf.set, i8* %35, align 8, !dbg !5430
  br label %for.end116, !dbg !5432

for.inc114:                                       ; preds = %land.lhs.true, %for.body102
  %inc115 = add i32 %i.2, 1, !dbg !5433
  call void @llvm.dbg.value(metadata i32 %inc115, metadata !5315, metadata !DIExpression()), !dbg !5321
  br label %for.cond91, !dbg !5434, !llvm.loop !5435

for.end116.loopexit:                              ; preds = %cond.end98
  br label %for.end116, !dbg !5437

for.end116:                                       ; preds = %for.end116.loopexit, %if.then109
  %combined = getelementptr inbounds %struct.chain, %struct.chain* %spec.select1, i64 0, i32 9, !dbg !5437
  %bf.load117 = load i8, i8* %combined, align 8, !dbg !5438
  %bf.set119 = or i8 %bf.load117, 4, !dbg !5438
  store i8 %bf.set119, i8* %combined, align 8, !dbg !5438
  %combined120 = getelementptr inbounds %struct.chain, %struct.chain* %spec.select, i64 0, i32 9, !dbg !5439
  %bf.load121 = load i8, i8* %combined120, align 8, !dbg !5440
  %bf.set123 = or i8 %bf.load121, 4, !dbg !5440
  store i8 %bf.set123, i8* %combined120, align 8, !dbg !5440
  br label %cleanup, !dbg !5441

cleanup.loopexit:                                 ; preds = %for.body, %if.end41
  br label %cleanup, !dbg !5442

cleanup:                                          ; preds = %cleanup.loopexit, %cond.end12, %if.end, %entry, %for.end116
  %retval.0 = phi %struct.chain* [ %16, %for.end116 ], [ null, %entry ], [ null, %if.end ], [ null, %cond.end12 ], [ null, %cleanup.loopexit ], !dbg !5321
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5442
  call void @llvm.dbg.value(metadata i8* %swap, metadata !5313, metadata !DIExpression(DW_OP_deref)), !dbg !5321
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %swap) #8, !dbg !5442
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !5442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5442
  ret %struct.chain* %retval.0, !dbg !5442
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @combinable_refs_p(%struct.dref_d* %r1, %struct.dref_d* %r2, i32* %code, i8* %swap, %union.tree_node** %rslt_type) unnamed_addr #5 !dbg !5443 {
entry:
  %name1 = alloca %union.tree_node*, align 8
  %name2 = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.dref_d* %r1, metadata !5448, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata %struct.dref_d* %r2, metadata !5449, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata i32* %code, metadata !5450, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata i8* %swap, metadata !5451, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata %union.tree_node** %rslt_type, metadata !5452, metadata !DIExpression()), !dbg !5459
  %0 = bitcast %union.tree_node** %name1 to i8*, !dbg !5460
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5460
  %1 = bitcast %union.tree_node** %name2 to i8*, !dbg !5460
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5460
  %call = tail call fastcc %union.tree_node* @name_for_ref(%struct.dref_d* %r1) #7, !dbg !5461
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5456, metadata !DIExpression()), !dbg !5459
  store %union.tree_node* %call, %union.tree_node** %name1, align 8, !dbg !5462
  %call1 = tail call fastcc %union.tree_node* @name_for_ref(%struct.dref_d* %r2) #7, !dbg !5463
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5457, metadata !DIExpression()), !dbg !5459
  store %union.tree_node* %call1, %union.tree_node** %name2, align 8, !dbg !5464
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5456, metadata !DIExpression()), !dbg !5459
  %cmp = icmp ne %union.tree_node* %call, null, !dbg !5465
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5457, metadata !DIExpression()), !dbg !5459
  %cmp2 = icmp ne %union.tree_node* %call1, null, !dbg !5465
  %or.cond = and i1 %cmp, %cmp2, !dbg !5465
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !5465

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 2109, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5465
  br label %cond.end, !dbg !5465

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata %union.tree_node** %name1, metadata !5456, metadata !DIExpression(DW_OP_deref)), !dbg !5459
  call void @llvm.dbg.value(metadata %union.tree_node** %name2, metadata !5457, metadata !DIExpression(DW_OP_deref)), !dbg !5459
  %call3 = call fastcc %union.gimple_statement_d* @find_common_use_stmt(%union.tree_node** nonnull %name1, %union.tree_node** nonnull %name2) #7, !dbg !5466
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !5458, metadata !DIExpression()), !dbg !5459
  %tobool = icmp eq %union.gimple_statement_d* %call3, null, !dbg !5467
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5469

if.end:                                           ; preds = %cond.end
  %call4 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* nonnull %call3) #7, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %call4, metadata !5453, metadata !DIExpression()), !dbg !5459
  %call5 = call zeroext i8 @commutative_tree_code(i32 %call4) #6, !dbg !5471
  %tobool6 = icmp eq i8 %call5, 0, !dbg !5471
  br i1 %tobool6, label %land.rhs, label %land.end, !dbg !5472

land.rhs:                                         ; preds = %if.end
  %call7 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call3) #7, !dbg !5473
  %2 = load %union.tree_node*, %union.tree_node** %name1, align 8, !dbg !5474
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5456, metadata !DIExpression()), !dbg !5459
  %cmp8 = icmp ne %union.tree_node* %call7, %2, !dbg !5475
  %phitmp = zext i1 %cmp8 to i8
  br label %land.end

land.end:                                         ; preds = %if.end, %land.rhs
  %3 = phi i8 [ 0, %if.end ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %3, metadata !5454, metadata !DIExpression()), !dbg !5459
  %call9 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* nonnull %call3) #7, !dbg !5476
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5476
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5476
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5455, metadata !DIExpression()), !dbg !5459
  %5 = load i32, i32* %code, align 4, !dbg !5477
  %cmp10 = icmp eq i32 %5, 0, !dbg !5479
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !5480

if.then12:                                        ; preds = %land.end
  store i32 %call4, i32* %code, align 4, !dbg !5481
  store i8 %3, i8* %swap, align 1, !dbg !5483
  store %union.tree_node* %4, %union.tree_node** %rslt_type, align 8, !dbg !5484
  br label %cleanup, !dbg !5485

if.end13:                                         ; preds = %land.end
  %cmp14 = icmp eq i32 %5, %call4, !dbg !5486
  br i1 %cmp14, label %land.lhs.true16, label %land.end24, !dbg !5487

land.lhs.true16:                                  ; preds = %if.end13
  %6 = load i8, i8* %swap, align 1, !dbg !5488
  %cmp19 = icmp eq i8 %6, %3, !dbg !5489
  br i1 %cmp19, label %land.rhs21, label %land.end24, !dbg !5490

land.rhs21:                                       ; preds = %land.lhs.true16
  %7 = load %union.tree_node*, %union.tree_node** %rslt_type, align 8, !dbg !5491
  %cmp22 = icmp eq %union.tree_node* %7, %4, !dbg !5492
  %phitmp1 = zext i1 %cmp22 to i8
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %land.lhs.true16, %if.end13
  %8 = phi i8 [ 0, %land.lhs.true16 ], [ 0, %if.end13 ], [ %phitmp1, %land.rhs21 ]
  br label %cleanup, !dbg !5493

cleanup:                                          ; preds = %cond.end, %land.end24, %if.then12
  %retval.0 = phi i8 [ 1, %if.then12 ], [ %8, %land.end24 ], [ 0, %cond.end ], !dbg !5459
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5494
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5494
  ret i8 %retval.0, !dbg !5494
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @stmt_combining_refs(%struct.dref_d* %r1, %struct.dref_d* %r2) unnamed_addr #5 !dbg !5495 {
entry:
  %name1 = alloca %union.tree_node*, align 8
  %name2 = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.dref_d* %r1, metadata !5499, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.value(metadata %struct.dref_d* %r2, metadata !5500, metadata !DIExpression()), !dbg !5505
  %0 = bitcast %union.tree_node** %name1 to i8*, !dbg !5506
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5506
  %call = tail call fastcc %union.tree_node* @name_for_ref(%struct.dref_d* %r1) #7, !dbg !5507
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5503, metadata !DIExpression()), !dbg !5505
  store %union.tree_node* %call, %union.tree_node** %name1, align 8, !dbg !5508
  %1 = bitcast %union.tree_node** %name2 to i8*, !dbg !5509
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5509
  %call1 = tail call fastcc %union.tree_node* @name_for_ref(%struct.dref_d* %r2) #7, !dbg !5510
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5504, metadata !DIExpression()), !dbg !5505
  store %union.tree_node* %call1, %union.tree_node** %name2, align 8, !dbg !5511
  call void @llvm.dbg.value(metadata %union.tree_node** %name1, metadata !5503, metadata !DIExpression(DW_OP_deref)), !dbg !5505
  %call2 = call fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** nonnull %name1) #7, !dbg !5512
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !5501, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.value(metadata %union.tree_node** %name2, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5505
  %call3 = call fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** nonnull %name2) #7, !dbg !5513
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !5502, metadata !DIExpression()), !dbg !5505
  %cmp = icmp eq %union.gimple_statement_d* %call2, %call3, !dbg !5514
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5516

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %name1, align 8, !dbg !5517
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5503, metadata !DIExpression()), !dbg !5505
  %3 = load %union.tree_node*, %union.tree_node** %name2, align 8, !dbg !5518
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5504, metadata !DIExpression()), !dbg !5505
  %call4 = call fastcc %union.gimple_statement_d* @reassociate_to_the_same_stmt(%union.tree_node* %2, %union.tree_node* %3) #7, !dbg !5519
  br label %cleanup, !dbg !5520

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.gimple_statement_d* [ %call4, %if.end ], [ %call2, %entry ], !dbg !5505
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5521
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5521
  ret %union.gimple_statement_d* %retval.0, !dbg !5521
}

declare dso_local zeroext i8 @stmt_dominates_stmt_p(%union.gimple_statement_d*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @name_for_ref(%struct.dref_d* %ref) unnamed_addr #5 !dbg !5522 {
entry:
  call void @llvm.dbg.value(metadata %struct.dref_d* %ref, metadata !5526, metadata !DIExpression()), !dbg !5528
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 1, !dbg !5529
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5529
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %0) #7, !dbg !5531
  %tobool = icmp eq i8 %call, 0, !dbg !5531
  br i1 %tobool, label %if.else10, label %if.then, !dbg !5532

if.then:                                          ; preds = %entry
  %ref1 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %ref, i64 0, i32 0, !dbg !5533
  %1 = load %struct.data_reference*, %struct.data_reference** %ref1, align 8, !dbg !5533
  %tobool2 = icmp eq %struct.data_reference* %1, null, !dbg !5536
  br i1 %tobool2, label %if.then5, label %lor.lhs.false, !dbg !5537

lor.lhs.false:                                    ; preds = %if.then
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %1, i64 0, i32 3, !dbg !5538
  %2 = load i8, i8* %is_read, align 8, !dbg !5538
  %tobool4 = icmp eq i8 %2, 0, !dbg !5538
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !5539

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5540
  %call7 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %3) #7, !dbg !5541
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5527, metadata !DIExpression()), !dbg !5528
  br label %if.end14, !dbg !5542

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5543
  %call9 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %4) #7, !dbg !5544
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5527, metadata !DIExpression()), !dbg !5528
  br label %if.end14

if.else10:                                        ; preds = %entry
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5545
  %call12 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %5) #7, !dbg !5545
  %call13 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call12) #7, !dbg !5545
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !5527, metadata !DIExpression()), !dbg !5528
  br label %if.end14

if.end14:                                         ; preds = %if.then5, %if.else, %if.else10
  %name.1 = phi %union.tree_node* [ %call13, %if.else10 ], [ %call7, %if.then5 ], [ %call9, %if.else ], !dbg !5546
  call void @llvm.dbg.value(metadata %union.tree_node* %name.1, metadata !5527, metadata !DIExpression()), !dbg !5528
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %name.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5547
  %bf.load = load i64, i64* %6, align 8, !dbg !5547
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5548
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5548
  %name.1. = select i1 %cmp, %union.tree_node* %name.1, %union.tree_node* null, !dbg !5547
  ret %union.tree_node* %name.1., !dbg !5549
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @find_common_use_stmt(%union.tree_node** %name1, %union.tree_node** %name2) unnamed_addr #5 !dbg !5550 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %name1, metadata !5554, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.value(metadata %union.tree_node** %name2, metadata !5555, metadata !DIExpression()), !dbg !5558
  %call = tail call fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** %name1) #7, !dbg !5559
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5556, metadata !DIExpression()), !dbg !5558
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !5560
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5562

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** %name2) #7, !dbg !5563
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !5557, metadata !DIExpression()), !dbg !5558
  %tobool2 = icmp eq %union.gimple_statement_d* %call1, null, !dbg !5564
  br i1 %tobool2, label %cleanup, label %if.end4, !dbg !5566

if.end4:                                          ; preds = %if.end
  %cmp = icmp eq %union.gimple_statement_d* %call, %call1, !dbg !5567
  br i1 %cmp, label %cleanup, label %if.end6, !dbg !5569

if.end6:                                          ; preds = %if.end4
  %call7 = tail call fastcc %union.gimple_statement_d* @find_associative_operation_root(%union.gimple_statement_d* nonnull %call, i32* null) #7, !dbg !5570
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !5556, metadata !DIExpression()), !dbg !5558
  %tobool8 = icmp eq %union.gimple_statement_d* %call7, null, !dbg !5571
  br i1 %tobool8, label %cleanup, label %if.end10, !dbg !5573

if.end10:                                         ; preds = %if.end6
  %call11 = tail call fastcc %union.gimple_statement_d* @find_associative_operation_root(%union.gimple_statement_d* nonnull %call1, i32* null) #7, !dbg !5574
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11, metadata !5557, metadata !DIExpression()), !dbg !5558
  %tobool12 = icmp eq %union.gimple_statement_d* %call11, null, !dbg !5575
  br i1 %tobool12, label %cleanup, label %if.end14, !dbg !5577

if.end14:                                         ; preds = %if.end10
  %cmp15 = icmp eq %union.gimple_statement_d* %call7, %call11, !dbg !5578
  %call7. = select i1 %cmp15, %union.gimple_statement_d* %call7, %union.gimple_statement_d* null, !dbg !5579
  br label %cleanup, !dbg !5580

cleanup:                                          ; preds = %if.end10, %if.end6, %if.end, %entry, %if.end4, %if.end14
  %retval.0 = phi %union.gimple_statement_d* [ %call7., %if.end14 ], [ null, %entry ], [ null, %if.end ], [ %call, %if.end4 ], [ null, %if.end6 ], [ null, %if.end10 ], !dbg !5558
  ret %union.gimple_statement_d* %retval.0, !dbg !5581
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5582 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5586, metadata !DIExpression()), !dbg !5588
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !5589
  call void @llvm.dbg.value(metadata i32 %call, metadata !5587, metadata !DIExpression()), !dbg !5588
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !5590
  %cmp = icmp eq i32 %call1, 3, !dbg !5592
  br i1 %cmp, label %if.then, label %if.end, !dbg !5593

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !5594
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5594
  %bf.load = load i64, i64* %0, align 8, !dbg !5594
  %1 = trunc i64 %bf.load to i32, !dbg !5594
  %bf.cast = and i32 %1, 65535, !dbg !5594
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5587, metadata !DIExpression()), !dbg !5588
  br label %if.end, !dbg !5595

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !5588
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !5587, metadata !DIExpression()), !dbg !5588
  ret i32 %code.0, !dbg !5596
}

declare dso_local zeroext i8 @commutative_tree_code(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** %name) unnamed_addr #5 !dbg !5597 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %name, metadata !5601, metadata !DIExpression()), !dbg !5605
  %.pre = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !5606
  br label %while.cond, !dbg !5608

while.cond:                                       ; preds = %if.end14, %entry
  %0 = phi %union.tree_node* [ %call4, %if.end14 ], [ %.pre, %entry ], !dbg !5606
  %call = tail call fastcc %union.gimple_statement_d* @single_nonlooparound_use(%union.tree_node* %0) #7, !dbg !5609
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5602, metadata !DIExpression()), !dbg !5605
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !5610
  br i1 %tobool, label %cleanup.loopexit, label %if.end, !dbg !5612

if.end:                                           ; preds = %while.cond
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call) #7, !dbg !5613
  %cmp = icmp eq i32 %call1, 6, !dbg !5615
  br i1 %cmp, label %if.end3, label %cleanup.loopexit, !dbg !5616

if.end3:                                          ; preds = %if.end
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* nonnull %call) #7, !dbg !5617
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5604, metadata !DIExpression()), !dbg !5605
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5618
  %bf.load = load i64, i64* %1, align 8, !dbg !5618
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5620
  %cmp5 = icmp eq i64 %bf.cast1, 141, !dbg !5620
  br i1 %cmp5, label %if.end7, label %cleanup.loopexit, !dbg !5621

if.end7:                                          ; preds = %if.end3
  %call8 = tail call zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d* nonnull %call) #6, !dbg !5622
  %tobool9 = icmp eq i8 %call8, 0, !dbg !5622
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !5624

if.then10:                                        ; preds = %if.end7
  %call11 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call) #7, !dbg !5625
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5603, metadata !DIExpression()), !dbg !5605
  %2 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !5627
  %cmp12 = icmp eq %union.tree_node* %call11, %2, !dbg !5629
  br i1 %cmp12, label %if.end14, label %cleanup.loopexit, !dbg !5630

if.end14:                                         ; preds = %if.then10
  store %union.tree_node* %call4, %union.tree_node** %name, align 8, !dbg !5631
  br label %while.cond, !dbg !5608, !llvm.loop !5632

if.else:                                          ; preds = %if.end7
  %call.lcssa4 = phi %union.gimple_statement_d* [ %call, %if.end7 ], !dbg !5609
  %call15 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* nonnull %call.lcssa4) #7, !dbg !5634
  %call16 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call15) #7, !dbg !5636
  %cmp17 = icmp eq i32 %call16, 1, !dbg !5637
  %call. = select i1 %cmp17, %union.gimple_statement_d* %call.lcssa4, %union.gimple_statement_d* null, !dbg !5638
  br label %cleanup, !dbg !5638

cleanup.loopexit:                                 ; preds = %while.cond, %if.end, %if.end3, %if.then10
  br label %cleanup, !dbg !5639

cleanup:                                          ; preds = %cleanup.loopexit, %if.else
  %retval.0 = phi %union.gimple_statement_d* [ %call., %if.else ], [ null, %cleanup.loopexit ], !dbg !5640
  ret %union.gimple_statement_d* %retval.0, !dbg !5639
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @find_associative_operation_root(%union.gimple_statement_d* %stmt, i32* %distance) unnamed_addr #5 !dbg !5641 {
entry:
  %lhs = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5645, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata i32* %distance, metadata !5646, metadata !DIExpression()), !dbg !5652
  %0 = bitcast %union.tree_node** %lhs to i8*, !dbg !5653
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5653
  %call = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5654
  call void @llvm.dbg.value(metadata i32 %call, metadata !5649, metadata !DIExpression()), !dbg !5652
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !5655
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5655
  %1 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !5655
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5650, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata i32 0, metadata !5651, metadata !DIExpression()), !dbg !5652
  %call3 = tail call fastcc zeroext i8 @may_reassociate_p(%union.tree_node* %1, i32 %call) #7, !dbg !5656
  %tobool = icmp eq i8 %call3, 0, !dbg !5656
  br i1 %tobool, label %cleanup, label %while.cond.preheader, !dbg !5658

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !5659

while.cond:                                       ; preds = %while.cond.preheader, %if.end10
  %dist.0 = phi i32 [ %inc, %if.end10 ], [ 0, %while.cond.preheader ], !dbg !5652
  %stmt.addr.0 = phi %union.gimple_statement_d* [ %call5, %if.end10 ], [ %stmt, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.addr.0, metadata !5645, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata i32 %dist.0, metadata !5651, metadata !DIExpression()), !dbg !5652
  %call4 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt.addr.0) #7, !dbg !5660
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5647, metadata !DIExpression()), !dbg !5652
  store %union.tree_node* %call4, %union.tree_node** %lhs, align 8, !dbg !5662
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5663
  %bf.load = load i64, i64* %.cast, align 8, !dbg !5663
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5663
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5663
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5663

cond.true:                                        ; preds = %while.cond
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 2045, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5663
  br label %cond.end, !dbg !5663

cond.end:                                         ; preds = %while.cond, %cond.true
  call void @llvm.dbg.value(metadata %union.tree_node** %lhs, metadata !5647, metadata !DIExpression(DW_OP_deref)), !dbg !5652
  %call5 = call fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** nonnull %lhs) #7, !dbg !5664
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !5648, metadata !DIExpression()), !dbg !5652
  %tobool6 = icmp eq %union.gimple_statement_d* %call5, null, !dbg !5665
  br i1 %tobool6, label %while.end, label %lor.lhs.false, !dbg !5667

lor.lhs.false:                                    ; preds = %cond.end
  %call7 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* nonnull %call5) #7, !dbg !5668
  %cmp8 = icmp eq i32 %call7, %call, !dbg !5669
  br i1 %cmp8, label %if.end10, label %while.end, !dbg !5670

if.end10:                                         ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !5645, metadata !DIExpression()), !dbg !5652
  %inc = add i32 %dist.0, 1, !dbg !5671
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5651, metadata !DIExpression()), !dbg !5652
  br label %while.cond, !dbg !5659, !llvm.loop !5672

while.end:                                        ; preds = %lor.lhs.false, %cond.end
  %dist.0.lcssa = phi i32 [ %dist.0, %lor.lhs.false ], [ %dist.0, %cond.end ], !dbg !5652
  %stmt.addr.0.lcssa = phi %union.gimple_statement_d* [ %stmt.addr.0, %lor.lhs.false ], [ %stmt.addr.0, %cond.end ]
  call void @llvm.dbg.value(metadata i32 %dist.0.lcssa, metadata !5651, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata i32 %dist.0.lcssa, metadata !5651, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.addr.0.lcssa, metadata !5645, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.addr.0.lcssa, metadata !5645, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata i32 %dist.0.lcssa, metadata !5651, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata i32 %dist.0.lcssa, metadata !5651, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.addr.0.lcssa, metadata !5645, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.addr.0.lcssa, metadata !5645, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata i32 %dist.0.lcssa, metadata !5651, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata i32 %dist.0.lcssa, metadata !5651, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.addr.0.lcssa, metadata !5645, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.addr.0.lcssa, metadata !5645, metadata !DIExpression()), !dbg !5652
  %tobool11 = icmp eq i32* %distance, null, !dbg !5674
  br i1 %tobool11, label %cleanup, label %if.then12, !dbg !5676

if.then12:                                        ; preds = %while.end
  store i32 %dist.0.lcssa, i32* %distance, align 4, !dbg !5677
  br label %cleanup, !dbg !5678

cleanup:                                          ; preds = %while.end, %entry, %if.then12
  %retval.0 = phi %union.gimple_statement_d* [ null, %entry ], [ %stmt.addr.0.lcssa, %if.then12 ], [ %stmt.addr.0.lcssa, %while.end ], !dbg !5652
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5679
  ret %union.gimple_statement_d* %retval.0, !dbg !5679
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @single_nonlooparound_use(%union.tree_node* %name) unnamed_addr #5 !dbg !5680 {
entry:
  %it = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5684, metadata !DIExpression()), !dbg !5696
  %0 = bitcast %struct.immediate_use_iterator_d* %it to i8*, !dbg !5697
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !5697
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !5695, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %it, metadata !5686, metadata !DIExpression(DW_OP_deref)), !dbg !5696
  %call = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %it, %union.tree_node* %name) #7, !dbg !5698
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call, metadata !5685, metadata !DIExpression()), !dbg !5696
  br label %for.cond, !dbg !5698

for.cond:                                         ; preds = %for.inc, %entry
  %ret.0 = phi %union.gimple_statement_d* [ null, %entry ], [ %ret.1, %for.inc ], !dbg !5700
  %use.0 = phi %struct.ssa_use_operand_d* [ %call, %entry ], [ %call14, %for.inc ], !dbg !5701
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use.0, metadata !5685, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %ret.0, metadata !5695, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %it, metadata !5686, metadata !DIExpression(DW_OP_deref)), !dbg !5696
  %call1 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %it) #7, !dbg !5702
  %tobool = icmp eq i8 %call1, 0, !dbg !5702
  br i1 %tobool, label %for.body, label %cleanup, !dbg !5698

for.body:                                         ; preds = %for.cond
  %stmt2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use.0, i64 0, i32 2, i32 0, !dbg !5704
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt2, align 8, !dbg !5704
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !5694, metadata !DIExpression()), !dbg !5696
  %call3 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %1) #7, !dbg !5706
  %cmp = icmp eq i32 %call3, 16, !dbg !5708
  br i1 %cmp, label %if.then, label %if.else, !dbg !5709

if.then:                                          ; preds = %for.body
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @looparound_phis, align 8, !dbg !5710
  %call4 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %1) #7, !dbg !5713
  %call5 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call4) #7, !dbg !5713
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5713
  %3 = bitcast %union.tree_node** %version to i32*, !dbg !5713
  %4 = load i32, i32* %3, align 8, !dbg !5713
  %call6 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %4) #6, !dbg !5714
  %tobool7 = icmp eq i32 %call6, 0, !dbg !5714
  br i1 %tobool7, label %cleanup, label %for.inc, !dbg !5715

if.else:                                          ; preds = %for.body
  %cmp9 = icmp eq %union.gimple_statement_d* %ret.0, null, !dbg !5716
  br i1 %cmp9, label %for.inc, label %cleanup, !dbg !5718

for.inc:                                          ; preds = %if.then, %if.else
  %ret.1 = phi %union.gimple_statement_d* [ %ret.0, %if.then ], [ %1, %if.else ], !dbg !5696
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %ret.1, metadata !5695, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %it, metadata !5686, metadata !DIExpression(DW_OP_deref)), !dbg !5696
  %call14 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %it) #7, !dbg !5702
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call14, metadata !5685, metadata !DIExpression()), !dbg !5696
  br label %for.cond, !dbg !5702, !llvm.loop !5719

cleanup:                                          ; preds = %if.then, %if.else, %for.cond
  %retval.0 = phi %union.gimple_statement_d* [ null, %if.then ], [ null, %if.else ], [ %ret.0, %for.cond ], !dbg !5696
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !5721
  ret %union.gimple_statement_d* %retval.0, !dbg !5721
}

declare dso_local zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !5722 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5726, metadata !DIExpression()), !dbg !5727
  %idxprom = sext i32 %code to i64, !dbg !5728
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !5728
  %0 = load i8, i8* %arrayidx, align 1, !dbg !5728
  %conv = zext i8 %0 to i32, !dbg !5729
  ret i32 %conv, !dbg !5730
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !5731 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5736, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5737, metadata !DIExpression()), !dbg !5738
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5739
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !5740
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !5741
  store i40* %imm_uses, i40** %0, align 8, !dbg !5741
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !5742
  %1 = bitcast i40* %next to i64*, !dbg !5742
  %2 = load i64, i64* %1, align 8, !dbg !5742
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !5743
  store i64 %2, i64* %3, align 8, !dbg !5743
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !5744
  %tobool = icmp eq i8 %call, 0, !dbg !5744
  br i1 %tobool, label %if.end, label %return, !dbg !5746

if.end:                                           ; preds = %entry
  %imm_use2 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5747
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use2, align 8, !dbg !5747
  br label %return, !dbg !5748

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !5738
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5749
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5750 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5756, metadata !DIExpression()), !dbg !5757
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5758
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5758
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !5759
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !5759
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !5760
  %conv1 = zext i1 %cmp to i8, !dbg !5761
  ret i8 %conv1, !dbg !5762
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5763 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5767, metadata !DIExpression()), !dbg !5769
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5770
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5770
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !5768, metadata !DIExpression()), !dbg !5769
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !5771
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5771
  %2 = load i64, i64* %1, align 8, !dbg !5771
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !5772
  store i64 %2, i64* %3, align 8, !dbg !5772
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !5773
  %tobool = icmp eq i8 %call, 0, !dbg !5773
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5775

if.end:                                           ; preds = %entry
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5776
  br label %cleanup, !dbg !5777

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !5769
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5778
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @may_reassociate_p(%union.tree_node* %type, i32 %code) unnamed_addr #5 !dbg !5779 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5783, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i32 %code, metadata !5784, metadata !DIExpression()), !dbg !5785
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5786
  %bf.load = load i64, i64* %0, align 8, !dbg !5786
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5786
  %cmp = icmp eq i64 %bf.cast1, 9, !dbg !5786
  br i1 %cmp, label %land.lhs.true18, label %lor.lhs.false, !dbg !5786

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 13, !dbg !5786
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !5786

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 14, !dbg !5786
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !5786

land.lhs.true:                                    ; preds = %lor.lhs.false6, %lor.lhs.false
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5786
  %1 = bitcast %union.tree_node** %type12 to i64**, !dbg !5786
  %2 = load i64*, i64** %1, align 8, !dbg !5786
  %bf.load14 = load i64, i64* %2, align 8, !dbg !5786
  %bf.cast164 = and i64 %bf.load14, 65535, !dbg !5786
  %cmp17 = icmp eq i64 %bf.cast164, 9, !dbg !5786
  br i1 %cmp17, label %land.lhs.true18, label %if.end, !dbg !5788

land.lhs.true18:                                  ; preds = %land.lhs.true, %entry
  %3 = load i32, i32* @flag_unsafe_math_optimizations, align 4, !dbg !5789
  %tobool = icmp eq i32 %3, 0, !dbg !5789
  br i1 %tobool, label %return, label %if.end, !dbg !5790

if.end:                                           ; preds = %land.lhs.true18, %land.lhs.true, %lor.lhs.false6
  %call = tail call zeroext i8 @commutative_tree_code(i32 %code) #6, !dbg !5791
  %tobool19 = icmp eq i8 %call, 0, !dbg !5791
  br i1 %tobool19, label %land.end, label %land.rhs, !dbg !5792

land.rhs:                                         ; preds = %if.end
  %call20 = tail call zeroext i8 @associative_tree_code(i32 %code) #6, !dbg !5793
  %tobool22 = icmp ne i8 %call20, 0, !dbg !5792
  %phitmp = zext i1 %tobool22 to i8
  br label %land.end

land.end:                                         ; preds = %if.end, %land.rhs
  %4 = phi i8 [ 0, %if.end ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !5794

return:                                           ; preds = %land.lhs.true18, %land.end
  %retval.0 = phi i8 [ %4, %land.end ], [ 0, %land.lhs.true18 ], !dbg !5785
  ret i8 %retval.0, !dbg !5795
}

declare dso_local zeroext i8 @associative_tree_code(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5796 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5798, metadata !DIExpression()), !dbg !5800
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5801
  call void @llvm.dbg.value(metadata i32 %call, metadata !5799, metadata !DIExpression()), !dbg !5800
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !5802

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5804
  %bf.load = load i32, i32* %0, align 8, !dbg !5804
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5804
  br label %cleanup, !dbg !5805

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5806
  br label %cleanup, !dbg !5808

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !5800
  ret i32 %retval.0, !dbg !5809
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @reassociate_to_the_same_stmt(%union.tree_node* %name1, %union.tree_node* %name2) unnamed_addr #5 !dbg !5810 {
entry:
  %name1.addr = alloca %union.tree_node*, align 8
  %name2.addr = alloca %union.tree_node*, align 8
  %r1 = alloca %union.tree_node*, align 8
  %r2 = alloca %union.tree_node*, align 8
  %dist1 = alloca i32, align 4
  %dist2 = alloca i32, align 4
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name1, metadata !5814, metadata !DIExpression()), !dbg !5834
  store %union.tree_node* %name1, %union.tree_node** %name1.addr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name2, metadata !5815, metadata !DIExpression()), !dbg !5834
  store %union.tree_node* %name2, %union.tree_node** %name2.addr, align 8
  %0 = bitcast %union.tree_node** %r1 to i8*, !dbg !5835
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5835
  %1 = bitcast %union.tree_node** %r2 to i8*, !dbg !5835
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5835
  %2 = bitcast i32* %dist1 to i8*, !dbg !5836
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !5836
  %3 = bitcast i32* %dist2 to i8*, !dbg !5836
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !5836
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %name1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5837
  %4 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !5837
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5832, metadata !DIExpression()), !dbg !5834
  %5 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !5838
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5838
  call void @llvm.dbg.value(metadata %union.tree_node** %name1.addr, metadata !5814, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  %call = call fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** nonnull %name1.addr) #7, !dbg !5839
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5816, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %union.tree_node** %name2.addr, metadata !5815, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  %call2 = call fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** nonnull %name2.addr) #7, !dbg !5840
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !5817, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32* %dist1, metadata !5829, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  %call3 = call fastcc %union.gimple_statement_d* @find_associative_operation_root(%union.gimple_statement_d* %call, i32* nonnull %dist1) #7, !dbg !5841
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !5818, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32* %dist2, metadata !5830, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  %call4 = call fastcc %union.gimple_statement_d* @find_associative_operation_root(%union.gimple_statement_d* %call2, i32* nonnull %dist2) #7, !dbg !5842
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call4, metadata !5819, metadata !DIExpression()), !dbg !5834
  %call5 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %call) #7, !dbg !5843
  call void @llvm.dbg.value(metadata i32 %call5, metadata !5831, metadata !DIExpression()), !dbg !5834
  %tobool = icmp ne %union.gimple_statement_d* %call3, null, !dbg !5844
  %tobool6 = icmp ne %union.gimple_statement_d* %call4, null, !dbg !5844
  %or.cond = and i1 %tobool, %tobool6, !dbg !5844
  %cmp = icmp eq %union.gimple_statement_d* %call3, %call4, !dbg !5844
  %or.cond1 = and i1 %or.cond, %cmp, !dbg !5844
  br i1 %or.cond1, label %land.lhs.true8, label %cond.true, !dbg !5844

land.lhs.true8:                                   ; preds = %entry
  %call9 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %call2) #7, !dbg !5844
  %cmp10 = icmp eq i32 %call5, %call9, !dbg !5844
  br i1 %cmp10, label %cond.end, label %cond.true, !dbg !5844

cond.true:                                        ; preds = %land.lhs.true8, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 2180, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5844
  br label %cond.end, !dbg !5844

cond.end:                                         ; preds = %land.lhs.true8, %cond.true
  %6 = bitcast %union.tree_node** %name1.addr to i64*, !dbg !5845
  %7 = load i64, i64* %6, align 8, !dbg !5845
  %8 = bitcast %union.tree_node** %r1 to i64*, !dbg !5846
  store i64 %7, i64* %8, align 8, !dbg !5846
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5820, metadata !DIExpression()), !dbg !5834
  %9 = bitcast %union.tree_node** %name2.addr to i64*, !dbg !5847
  %10 = load i64, i64* %9, align 8, !dbg !5847
  %11 = bitcast %union.tree_node** %r2 to i64*, !dbg !5848
  store i64 %10, i64* %11, align 8, !dbg !5848
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !5821, metadata !DIExpression()), !dbg !5834
  %.pre = load i32, i32* %dist1, align 4, !dbg !5849
  br label %while.cond, !dbg !5850

while.cond:                                       ; preds = %while.body, %cond.end
  %12 = phi i32 [ %.pre, %cond.end ], [ %dec, %while.body ], !dbg !5849
  %s1.0 = phi %union.gimple_statement_d* [ %call, %cond.end ], [ %call12, %while.body ], !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s1.0, metadata !5820, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32 %12, metadata !5829, metadata !DIExpression()), !dbg !5834
  %13 = load i32, i32* %dist2, align 4, !dbg !5851
  call void @llvm.dbg.value(metadata i32 %13, metadata !5830, metadata !DIExpression()), !dbg !5834
  %cmp11 = icmp ugt i32 %12, %13, !dbg !5852
  br i1 %cmp11, label %while.body, label %while.cond14.preheader, !dbg !5850

while.cond14.preheader:                           ; preds = %while.cond
  %.lcssa8 = phi i32 [ %12, %while.cond ], !dbg !5849
  %s1.0.lcssa = phi %union.gimple_statement_d* [ %s1.0, %while.cond ], !dbg !5834
  %.lcssa = phi i32 [ %13, %while.cond ], !dbg !5851
  call void @llvm.dbg.value(metadata i32 %.lcssa8, metadata !5829, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s1.0.lcssa, metadata !5820, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32 %.lcssa8, metadata !5829, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s1.0.lcssa, metadata !5820, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s1.0.lcssa, metadata !5820, metadata !DIExpression()), !dbg !5834
  br label %while.cond14, !dbg !5853

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.tree_node** %r1, metadata !5827, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  %call12 = call fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** nonnull %r1) #7, !dbg !5854
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !5820, metadata !DIExpression()), !dbg !5834
  %call13 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call12) #7, !dbg !5856
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !5827, metadata !DIExpression()), !dbg !5834
  store %union.tree_node* %call13, %union.tree_node** %r1, align 8, !dbg !5857
  %14 = load i32, i32* %dist1, align 4, !dbg !5858
  call void @llvm.dbg.value(metadata i32 %14, metadata !5829, metadata !DIExpression()), !dbg !5834
  %dec = add i32 %14, -1, !dbg !5858
  call void @llvm.dbg.value(metadata i32 %dec, metadata !5829, metadata !DIExpression()), !dbg !5834
  store i32 %dec, i32* %dist1, align 4, !dbg !5858
  br label %while.cond, !dbg !5850, !llvm.loop !5859

while.cond14:                                     ; preds = %while.cond14.preheader, %while.body16
  %15 = phi i32 [ %.pre6, %while.body16 ], [ %.lcssa8, %while.cond14.preheader ], !dbg !5861
  %16 = phi i32 [ %dec19, %while.body16 ], [ %.lcssa, %while.cond14.preheader ], !dbg !5862
  %s2.0 = phi %union.gimple_statement_d* [ %call17, %while.body16 ], [ %call2, %while.cond14.preheader ], !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s2.0, metadata !5821, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32 %16, metadata !5830, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32 %15, metadata !5829, metadata !DIExpression()), !dbg !5834
  %cmp15 = icmp ugt i32 %16, %15, !dbg !5863
  br i1 %cmp15, label %while.body16, label %while.cond21.preheader, !dbg !5853

while.cond21.preheader:                           ; preds = %while.cond14
  %s2.0.lcssa = phi %union.gimple_statement_d* [ %s2.0, %while.cond14 ], !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s2.0.lcssa, metadata !5821, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s2.0.lcssa, metadata !5821, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s2.0.lcssa, metadata !5821, metadata !DIExpression()), !dbg !5834
  br label %while.cond21, !dbg !5864

while.body16:                                     ; preds = %while.cond14
  call void @llvm.dbg.value(metadata %union.tree_node** %r2, metadata !5828, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  %call17 = call fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** nonnull %r2) #7, !dbg !5865
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call17, metadata !5821, metadata !DIExpression()), !dbg !5834
  %call18 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call17) #7, !dbg !5867
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !5828, metadata !DIExpression()), !dbg !5834
  store %union.tree_node* %call18, %union.tree_node** %r2, align 8, !dbg !5868
  %17 = load i32, i32* %dist2, align 4, !dbg !5869
  call void @llvm.dbg.value(metadata i32 %17, metadata !5830, metadata !DIExpression()), !dbg !5834
  %dec19 = add i32 %17, -1, !dbg !5869
  call void @llvm.dbg.value(metadata i32 %dec19, metadata !5830, metadata !DIExpression()), !dbg !5834
  store i32 %dec19, i32* %dist2, align 4, !dbg !5869
  %.pre6 = load i32, i32* %dist1, align 4, !dbg !5861
  br label %while.cond14, !dbg !5853, !llvm.loop !5870

while.cond21:                                     ; preds = %while.cond21.preheader, %while.body23
  %s1.1 = phi %union.gimple_statement_d* [ %call24, %while.body23 ], [ %s1.0.lcssa, %while.cond21.preheader ], !dbg !5834
  %s2.1 = phi %union.gimple_statement_d* [ %call26, %while.body23 ], [ %s2.0.lcssa, %while.cond21.preheader ], !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s2.1, metadata !5821, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s1.1, metadata !5820, metadata !DIExpression()), !dbg !5834
  %cmp22 = icmp eq %union.gimple_statement_d* %s1.1, %s2.1, !dbg !5872
  br i1 %cmp22, label %while.end28, label %while.body23, !dbg !5864

while.body23:                                     ; preds = %while.cond21
  call void @llvm.dbg.value(metadata %union.tree_node** %r1, metadata !5827, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  %call24 = call fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** nonnull %r1) #7, !dbg !5873
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call24, metadata !5820, metadata !DIExpression()), !dbg !5834
  %call25 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call24) #7, !dbg !5875
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !5827, metadata !DIExpression()), !dbg !5834
  store %union.tree_node* %call25, %union.tree_node** %r1, align 8, !dbg !5876
  call void @llvm.dbg.value(metadata %union.tree_node** %r2, metadata !5828, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  %call26 = call fastcc %union.gimple_statement_d* @find_use_stmt(%union.tree_node** nonnull %r2) #7, !dbg !5877
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call26, metadata !5821, metadata !DIExpression()), !dbg !5834
  %call27 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call26) #7, !dbg !5878
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !5828, metadata !DIExpression()), !dbg !5834
  store %union.tree_node* %call27, %union.tree_node** %r2, align 8, !dbg !5879
  br label %while.cond21, !dbg !5864, !llvm.loop !5880

while.end28:                                      ; preds = %while.cond21
  %s1.1.lcssa = phi %union.gimple_statement_d* [ %s1.1, %while.cond21 ], !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s1.1.lcssa, metadata !5820, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s1.1.lcssa, metadata !5820, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s1.1.lcssa, metadata !5820, metadata !DIExpression()), !dbg !5834
  %18 = load %union.tree_node*, %union.tree_node** %name1.addr, align 8, !dbg !5882
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !5814, metadata !DIExpression()), !dbg !5834
  call fastcc void @remove_name_from_operation(%union.gimple_statement_d* %call, %union.tree_node* %18) #7, !dbg !5883
  %19 = load %union.tree_node*, %union.tree_node** %name2.addr, align 8, !dbg !5884
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !5815, metadata !DIExpression()), !dbg !5834
  call fastcc void @remove_name_from_operation(%union.gimple_statement_d* %call2, %union.tree_node* %19) #7, !dbg !5885
  %call29 = call %union.tree_node* @create_tmp_var(%union.tree_node* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !5886
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !5826, metadata !DIExpression()), !dbg !5834
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5887
  %bf.load = load i64, i64* %20, align 8, !dbg !5887
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5889
  %cmp30 = icmp eq i64 %bf.cast2, 13, !dbg !5889
  br i1 %cmp30, label %if.then, label %lor.lhs.false, !dbg !5890

lor.lhs.false:                                    ; preds = %while.end28
  %cmp35 = icmp eq i64 %bf.cast2, 14, !dbg !5891
  br i1 %cmp35, label %if.then, label %if.end, !dbg !5892

if.then:                                          ; preds = %lor.lhs.false, %while.end28
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5893
  %21 = bitcast i40* %gimple_reg_flag to i64*, !dbg !5893
  %bf.load36 = load i64, i64* %21, align 8, !dbg !5894
  %bf.set = or i64 %bf.load36, 134217728, !dbg !5894
  store i64 %bf.set, i64* %21, align 8, !dbg !5894
  br label %if.end, !dbg !5893

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call38 = call zeroext i8 @add_referenced_var(%union.tree_node* %call29) #6, !dbg !5895
  %call39 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call29, %union.gimple_statement_d* null) #7, !dbg !5896
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !5824, metadata !DIExpression()), !dbg !5834
  %22 = load %union.tree_node*, %union.tree_node** %name1.addr, align 8, !dbg !5897
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !5814, metadata !DIExpression()), !dbg !5834
  %23 = load %union.tree_node*, %union.tree_node** %name2.addr, align 8, !dbg !5897
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !5815, metadata !DIExpression()), !dbg !5834
  %call40 = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 %call5, %union.tree_node* %call39, %union.tree_node* %22, %union.tree_node* %23) #6, !dbg !5897
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call40, metadata !5822, metadata !DIExpression()), !dbg !5834
  %call41 = call %union.tree_node* @create_tmp_var(%union.tree_node* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !5898
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !5826, metadata !DIExpression()), !dbg !5834
  %bf.load43 = load i64, i64* %20, align 8, !dbg !5899
  %bf.cast454 = and i64 %bf.load43, 65535, !dbg !5901
  %cmp46 = icmp eq i64 %bf.cast454, 13, !dbg !5901
  br i1 %cmp46, label %if.then53, label %lor.lhs.false47, !dbg !5902

lor.lhs.false47:                                  ; preds = %if.end
  %cmp52 = icmp eq i64 %bf.cast454, 14, !dbg !5903
  br i1 %cmp52, label %if.then53, label %if.end59, !dbg !5904

if.then53:                                        ; preds = %lor.lhs.false47, %if.end
  %gimple_reg_flag55 = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5905
  %24 = bitcast i40* %gimple_reg_flag55 to i64*, !dbg !5905
  %bf.load56 = load i64, i64* %24, align 8, !dbg !5906
  %bf.set58 = or i64 %bf.load56, 134217728, !dbg !5906
  store i64 %bf.set58, i64* %24, align 8, !dbg !5906
  br label %if.end59, !dbg !5905

if.end59:                                         ; preds = %if.then53, %lor.lhs.false47
  %call60 = call zeroext i8 @add_referenced_var(%union.tree_node* %call41) #6, !dbg !5907
  %call61 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call41, %union.gimple_statement_d* null) #7, !dbg !5908
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !5825, metadata !DIExpression()), !dbg !5834
  %call62 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %s1.1.lcssa) #7, !dbg !5909
  %call63 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %s1.1.lcssa) #7, !dbg !5909
  %call64 = call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %s1.1.lcssa) #7, !dbg !5909
  %call65 = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 %call62, %union.tree_node* %call61, %union.tree_node* %call63, %union.tree_node* %call64) #6, !dbg !5909
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call65, metadata !5823, metadata !DIExpression()), !dbg !5834
  %25 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5910
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #8, !dbg !5910
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* %s1.1.lcssa) #6, !dbg !5910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %25, i64 24, i1 false), !dbg !5910
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #8, !dbg !5910
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5833, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  call void @gimple_assign_set_rhs_with_ops(%struct.gimple_stmt_iterator* nonnull %bsi, i32 %call5, %union.tree_node* %call39, %union.tree_node* %call61) #6, !dbg !5911
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5833, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  %call66 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !5912
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call66, metadata !5820, metadata !DIExpression()), !dbg !5834
  call fastcc void @update_stmt(%union.gimple_statement_d* %call66) #7, !dbg !5913
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5833, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* %call40, i32 1) #6, !dbg !5914
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5833, metadata !DIExpression(DW_OP_deref)), !dbg !5834
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* %call65, i32 1) #6, !dbg !5915
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5916
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !5916
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !5916
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5916
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5916
  ret %union.gimple_statement_d* %call40, !dbg !5917
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_name_from_operation(%union.gimple_statement_d* %stmt, %union.tree_node* %op) unnamed_addr #5 !dbg !5918 {
entry:
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5922, metadata !DIExpression()), !dbg !5926
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5923, metadata !DIExpression()), !dbg !5926
  %0 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !5927
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5927
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !5928
  %tobool = icmp eq i8 %call, 0, !dbg !5928
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5928

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 2143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5928
  br label %cond.end, !dbg !5928

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5929
  %cmp = icmp eq %union.tree_node* %call1, %op, !dbg !5931
  br i1 %cmp, label %if.then, label %if.else, !dbg !5932

if.then:                                          ; preds = %cond.end
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !5933
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !5924, metadata !DIExpression()), !dbg !5926
  br label %if.end, !dbg !5934

if.else:                                          ; preds = %cond.end
  %call3 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5935
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5924, metadata !DIExpression()), !dbg !5926
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %other_op.0 = phi %union.tree_node* [ %call2, %if.then ], [ %call3, %if.else ], !dbg !5936
  call void @llvm.dbg.value(metadata %union.tree_node* %other_op.0, metadata !5924, metadata !DIExpression()), !dbg !5926
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5937
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5937
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* %stmt) #6, !dbg !5937
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !5937
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5937
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !5925, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call void @gimple_assign_set_rhs_from_tree(%struct.gimple_stmt_iterator* nonnull %si, %union.tree_node* %other_op.0) #6, !dbg !5938
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !5925, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  %call4 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !5939
  %cmp5 = icmp eq %union.gimple_statement_d* %call4, %stmt, !dbg !5939
  br i1 %cmp5, label %cond.end8, label %cond.true6, !dbg !5939

cond.true6:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 2154, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5939
  br label %cond.end8, !dbg !5939

cond.end8:                                        ; preds = %if.end, %cond.true6
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !5940
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5941
  ret void, !dbg !5941
}

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5942 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5946, metadata !DIExpression()), !dbg !5948
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !5947, metadata !DIExpression()), !dbg !5948
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5949
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* null) #6, !dbg !5950
  ret %union.tree_node* %call, !dbg !5951
}

declare dso_local %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5952 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5954, metadata !DIExpression()), !dbg !5955
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5956
  %cmp = icmp ugt i32 %call, 2, !dbg !5958
  br i1 %cmp, label %if.then, label %return, !dbg !5959

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !5960
  br label %return, !dbg !5961

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !5962
  ret %union.tree_node* %retval.0, !dbg !5963
}

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gimple_assign_set_rhs_with_ops(%struct.gimple_stmt_iterator*, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local void @gimple_assign_set_rhs_from_tree(%struct.gimple_stmt_iterator*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5964 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5968, metadata !DIExpression()), !dbg !5969
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !5970
  %0 = load i32, i32* %num_ops, align 4, !dbg !5970
  ret i32 %0, !dbg !5971
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gcd(i32 %a, i32 %b) unnamed_addr #0 !dbg !5972 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, metadata !5976, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 %b, metadata !5977, metadata !DIExpression()), !dbg !5981
  %call = tail call i32 @abs(i32 %a) #6, !dbg !5982
  call void @llvm.dbg.value(metadata i32 %call, metadata !5978, metadata !DIExpression()), !dbg !5981
  %call1 = tail call i32 @abs(i32 %b) #6, !dbg !5983
  call void @llvm.dbg.value(metadata i32 %call1, metadata !5979, metadata !DIExpression()), !dbg !5981
  br label %while.cond, !dbg !5984

while.cond:                                       ; preds = %while.body, %entry
  %x.0 = phi i32 [ %call, %entry ], [ %rem, %while.body ], !dbg !5981
  %y.0 = phi i32 [ %call1, %entry ], [ %x.0, %while.body ], !dbg !5981
  call void @llvm.dbg.value(metadata i32 %y.0, metadata !5979, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 %x.0, metadata !5978, metadata !DIExpression()), !dbg !5981
  %cmp = icmp sgt i32 %x.0, 0, !dbg !5985
  br i1 %cmp, label %while.body, label %while.end, !dbg !5984

while.body:                                       ; preds = %while.cond
  %rem = srem i32 %y.0, %x.0, !dbg !5986
  call void @llvm.dbg.value(metadata i32 %rem, metadata !5980, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 %x.0, metadata !5979, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 %rem, metadata !5978, metadata !DIExpression()), !dbg !5981
  br label %while.cond, !dbg !5984, !llvm.loop !5988

while.end:                                        ; preds = %while.cond
  %y.0.lcssa = phi i32 [ %y.0, %while.cond ], !dbg !5981
  call void @llvm.dbg.value(metadata i32 %y.0.lcssa, metadata !5979, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 %y.0.lcssa, metadata !5979, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 %y.0.lcssa, metadata !5979, metadata !DIExpression()), !dbg !5981
  ret i32 %y.0.lcssa, !dbg !5990
}

declare dso_local i32 @abs(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_names_by_phis(%struct.VEC_chain_p_heap* %chains) unnamed_addr #5 !dbg !5991 {
entry:
  %chain = alloca %struct.chain*, align 8
  %a = alloca %struct.dref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap* %chains, metadata !5993, metadata !DIExpression()), !dbg !5998
  %0 = bitcast %struct.chain** %chain to i8*, !dbg !5999
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5999
  %1 = bitcast %struct.dref_d** %a to i8*, !dbg !6000
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6000
  call void @llvm.dbg.value(metadata i32 0, metadata !5996, metadata !DIExpression()), !dbg !5998
  %base = getelementptr inbounds %struct.VEC_chain_p_heap, %struct.VEC_chain_p_heap* %chains, i64 0, i32 0, !dbg !6001
  br label %for.cond, !dbg !6004

for.cond:                                         ; preds = %for.inc22, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc23, %for.inc22 ], !dbg !6005
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5996, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata %struct.chain** %chain, metadata !5994, metadata !DIExpression(DW_OP_deref)), !dbg !5998
  %call = call fastcc i32 @VEC_chain_p_base_iterate(%struct.VEC_chain_p_base* %base, i32 %i.0, %struct.chain** nonnull %chain) #7, !dbg !6006
  %tobool1 = icmp eq i32 %call, 0, !dbg !6007
  br i1 %tobool1, label %for.end24, label %for.cond2.preheader, !dbg !6007

for.cond2.preheader:                              ; preds = %for.cond
  br label %for.cond2, !dbg !6008

for.cond2:                                        ; preds = %for.cond2.preheader, %for.inc
  %j.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond2.preheader ], !dbg !6010
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !5997, metadata !DIExpression()), !dbg !5998
  %2 = load %struct.chain*, %struct.chain** %chain, align 8, !dbg !6011
  call void @llvm.dbg.value(metadata %struct.chain* %2, metadata !5994, metadata !DIExpression()), !dbg !5998
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %2, i64 0, i32 5, !dbg !6011
  %3 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !6011
  %tobool3 = icmp eq %struct.VEC_dref_heap* %3, null, !dbg !6011
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !6011

cond.true4:                                       ; preds = %for.cond2
  call void @llvm.dbg.value(metadata %struct.chain* %2, metadata !5994, metadata !DIExpression()), !dbg !5998
  %base6 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %3, i64 0, i32 0, !dbg !6011
  br label %cond.end8, !dbg !6011

cond.end8:                                        ; preds = %for.cond2, %cond.true4
  %cond9 = phi %struct.VEC_dref_base* [ %base6, %cond.true4 ], [ null, %for.cond2 ], !dbg !6011
  call void @llvm.dbg.value(metadata %struct.dref_d** %a, metadata !5995, metadata !DIExpression(DW_OP_deref)), !dbg !5998
  %call10 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond9, i32 %j.0, %struct.dref_d** nonnull %a) #7, !dbg !6011
  %tobool11 = icmp eq i32 %call10, 0, !dbg !6008
  br i1 %tobool11, label %for.inc22, label %for.body12, !dbg !6008

for.body12:                                       ; preds = %cond.end8
  %4 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !6013
  call void @llvm.dbg.value(metadata %struct.dref_d* %4, metadata !5995, metadata !DIExpression()), !dbg !5998
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %4, i64 0, i32 1, !dbg !6015
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6015
  %cmp = icmp eq %union.gimple_statement_d* %5, null, !dbg !6016
  br i1 %cmp, label %if.then, label %for.inc, !dbg !6017

if.then:                                          ; preds = %for.body12
  call void @llvm.dbg.value(metadata %struct.dref_d* %4, metadata !5995, metadata !DIExpression()), !dbg !5998
  %name_defined_by_phi = getelementptr inbounds %struct.dref_d, %struct.dref_d* %4, i64 0, i32 2, !dbg !6018
  %6 = bitcast %union.tree_node** %name_defined_by_phi to %struct.tree_ssa_name**, !dbg !6018
  %7 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %6, align 8, !dbg !6018
  %def_stmt = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %7, i64 0, i32 2, !dbg !6018
  %8 = bitcast %union.gimple_statement_d** %def_stmt to i64*, !dbg !6018
  %9 = load i64, i64* %8, align 8, !dbg !6018
  call void @llvm.dbg.value(metadata %struct.dref_d* %4, metadata !5995, metadata !DIExpression()), !dbg !5998
  %10 = bitcast %union.gimple_statement_d** %stmt to i64*, !dbg !6020
  store i64 %9, i64* %10, align 8, !dbg !6020
  call void @llvm.dbg.value(metadata %struct.dref_d* %4, metadata !5995, metadata !DIExpression()), !dbg !5998
  %.cast = inttoptr i64 %9 to %union.gimple_statement_d*, !dbg !6021
  %call15 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %.cast) #7, !dbg !6021
  %cmp16 = icmp eq i32 %call15, 16, !dbg !6021
  br i1 %cmp16, label %cond.end19, label %cond.true17, !dbg !6021

cond.true17:                                      ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1863, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6021
  br label %cond.end19, !dbg !6021

cond.end19:                                       ; preds = %if.then, %cond.true17
  %11 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !6022
  call void @llvm.dbg.value(metadata %struct.dref_d* %11, metadata !5995, metadata !DIExpression()), !dbg !5998
  %name_defined_by_phi21 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %11, i64 0, i32 2, !dbg !6023
  store %union.tree_node* null, %union.tree_node** %name_defined_by_phi21, align 8, !dbg !6024
  br label %for.inc, !dbg !6025

for.inc:                                          ; preds = %for.body12, %cond.end19
  %inc = add i32 %j.0, 1, !dbg !6026
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5997, metadata !DIExpression()), !dbg !5998
  br label %for.cond2, !dbg !6027, !llvm.loop !6028

for.inc22:                                        ; preds = %cond.end8
  %inc23 = add i32 %i.0, 1, !dbg !6030
  call void @llvm.dbg.value(metadata i32 %inc23, metadata !5996, metadata !DIExpression()), !dbg !5998
  br label %for.cond, !dbg !6031, !llvm.loop !6032

for.end24:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6034
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6034
  ret void, !dbg !6034
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6035 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6042, metadata !DIExpression()), !dbg !6043
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !6044
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6044
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6044
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6044

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6044
  br label %cond.end, !dbg !6044

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6044
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6044
  %cmp = icmp eq i32 %call, 1, !dbg !6045
  %conv2 = zext i1 %cmp to i8, !dbg !6044
  ret i8 %conv2, !dbg !6046
}

; Function Attrs: nounwind uwtable
define internal fastcc void @base_names_in_chain_on(%struct.loop* %loop, %union.tree_node* %name, %union.tree_node* %var) unnamed_addr #5 !dbg !6047 {
entry:
  %iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6051, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !6052, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6053, metadata !DIExpression()), !dbg !6057
  %0 = bitcast %struct.immediate_use_iterator_d* %iter to i8*, !dbg !6058
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !6058
  %var1 = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6059
  %1 = bitcast i32* %var1 to %union.tree_node**, !dbg !6059
  store %union.tree_node* %var, %union.tree_node** %1, align 8, !dbg !6060
  br label %while.cond, !dbg !6061

while.cond:                                       ; preds = %if.end10, %entry
  %name.addr.0 = phi %union.tree_node* [ %name, %entry ], [ %call12, %if.end10 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %name.addr.0, metadata !6052, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !6055, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6056, metadata !DIExpression(DW_OP_deref)), !dbg !6057
  %call = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %iter, %union.tree_node* %name.addr.0) #7, !dbg !6062
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !6054, metadata !DIExpression()), !dbg !6057
  br label %for.cond, !dbg !6062

for.cond:                                         ; preds = %for.inc, %while.cond
  %stmt.0 = phi %union.gimple_statement_d* [ %call, %while.cond ], [ %call7, %for.inc ], !dbg !6065
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !6054, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6056, metadata !DIExpression(DW_OP_deref)), !dbg !6057
  %call2 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !6066
  %tobool = icmp eq i8 %call2, 0, !dbg !6066
  br i1 %tobool, label %for.body, label %for.end.loopexit, !dbg !6062

for.body:                                         ; preds = %for.cond
  %call3 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt.0) #7, !dbg !6068
  %cmp = icmp eq i32 %call3, 16, !dbg !6071
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !6072

land.lhs.true:                                    ; preds = %for.body
  %call4 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt.0) #7, !dbg !6073
  %call5 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %loop, %struct.basic_block_def* %call4) #6, !dbg !6074
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6074
  br i1 %tobool6, label %for.inc, label %if.then, !dbg !6075

if.then:                                          ; preds = %land.lhs.true
  %stmt.0.lcssa3 = phi %union.gimple_statement_d* [ %stmt.0, %land.lhs.true ], !dbg !6065
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0.lcssa3, metadata !6054, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0.lcssa3, metadata !6054, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0.lcssa3, metadata !6054, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0.lcssa3, metadata !6055, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6056, metadata !DIExpression(DW_OP_deref)), !dbg !6057
  call fastcc void @end_imm_use_stmt_traverse(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !6076
  br label %for.end, !dbg !6076

for.inc:                                          ; preds = %land.lhs.true, %for.body
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !6056, metadata !DIExpression(DW_OP_deref)), !dbg !6057
  %call7 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !6066
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !6054, metadata !DIExpression()), !dbg !6057
  br label %for.cond, !dbg !6066, !llvm.loop !6079

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !6081

for.end:                                          ; preds = %for.end.loopexit, %if.then
  %phi.0 = phi %union.gimple_statement_d* [ %stmt.0.lcssa3, %if.then ], [ null, %for.end.loopexit ], !dbg !6083
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.0, metadata !6055, metadata !DIExpression()), !dbg !6057
  %tobool8 = icmp eq %union.gimple_statement_d* %phi.0, null, !dbg !6081
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6084

if.then9:                                         ; preds = %for.end
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !6085
  ret void, !dbg !6085

if.end10:                                         ; preds = %for.end
  %call11 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* nonnull %phi.0) #7, !dbg !6086
  %call12 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call11) #7, !dbg !6086
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !6052, metadata !DIExpression()), !dbg !6057
  %var14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6087
  %2 = bitcast i32* %var14 to %union.tree_node**, !dbg !6087
  store %union.tree_node* %var, %union.tree_node** %2, align 8, !dbg !6088
  br label %while.cond, !dbg !6061, !llvm.loop !6089
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6091 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6095, metadata !DIExpression()), !dbg !6096
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6097
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6097

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6097
  %0 = load i32, i32* %num, align 8, !dbg !6097
  br label %cond.end, !dbg !6097

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6097
  ret i32 %cond, !dbg !6097
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !6098 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6102, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6103, metadata !DIExpression()), !dbg !6104
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6105
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6106
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !6107
  store i40* %imm_uses, i40** %0, align 8, !dbg !6107
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !6108
  %1 = bitcast i40* %next to i64*, !dbg !6108
  %2 = load i64, i64* %1, align 8, !dbg !6108
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6109
  store i64 %2, i64* %3, align 8, !dbg !6109
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !6110
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next_imm_name, align 8, !dbg !6111
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !6112
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6113
  %next3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !6114
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next3, align 8, !dbg !6115
  %stmt = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 2, i32 0, !dbg !6116
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !6117
  %use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 3, !dbg !6118
  store %union.tree_node** null, %union.tree_node*** %use, align 8, !dbg !6119
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6120
  %tobool = icmp eq i8 %call, 0, !dbg !6120
  br i1 %tobool, label %if.end, label %return, !dbg !6122

if.end:                                           ; preds = %entry
  %imm_use6 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6123
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !6123
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !6124
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !6125
  %stmt9 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !6125
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !6125
  br label %return, !dbg !6126

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end ], [ null, %entry ], !dbg !6104
  ret %union.gimple_statement_d* %retval.0, !dbg !6127
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6128 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6130, metadata !DIExpression()), !dbg !6131
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6132
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6132
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6133
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !6133
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !6134
  %conv1 = zext i1 %cmp to i8, !dbg !6135
  ret i8 %conv1, !dbg !6136
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @end_imm_use_stmt_traverse(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6137 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6141, metadata !DIExpression()), !dbg !6142
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6143
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node) #7, !dbg !6144
  ret void, !dbg !6145
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6146 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6150, metadata !DIExpression()), !dbg !6151
  %next = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !6152
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6152
  %1 = load i64, i64* %0, align 8, !dbg !6152
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6153
  store i64 %1, i64* %2, align 8, !dbg !6153
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !6154
  %tobool = icmp eq i8 %call, 0, !dbg !6154
  br i1 %tobool, label %if.end4, label %if.then, !dbg !6156

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !6157
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6157
  %cmp = icmp eq %struct.ssa_use_operand_d* %3, null, !dbg !6160
  br i1 %cmp, label %return, label %if.then2, !dbg !6161

if.then2:                                         ; preds = %if.then
  %iter_node3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6162
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node3) #7, !dbg !6163
  br label %return, !dbg !6163

if.end4:                                          ; preds = %entry
  %imm_use5 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6164
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !6164
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !6165
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !6166
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !6166
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6166
  br label %return, !dbg !6167

return:                                           ; preds = %if.then, %if.then2, %if.end4
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end4 ], [ null, %if.then2 ], [ null, %if.then ], !dbg !6151
  ret %union.gimple_statement_d* %retval.0, !dbg !6168
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %head, %struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6169 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !6173, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6174, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !6176, metadata !DIExpression()), !dbg !6193
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head, i64 0, i32 2, i32 0, !dbg !6194
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6194
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !6177, metadata !DIExpression()), !dbg !6193
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %head) #7, !dbg !6195
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6178, metadata !DIExpression()), !dbg !6193
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !6196
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #8, !dbg !6196
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !6197
  %tobool = icmp eq i8 %call1, 0, !dbg !6197
  %cond = select i1 %tobool, i32 4, i32 1, !dbg !6197
  call void @llvm.dbg.value(metadata i32 %cond, metadata !6192, metadata !DIExpression()), !dbg !6193
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #7, !dbg !6198
  %cmp = icmp eq i32 %call2, 16, !dbg !6200
  br i1 %cmp, label %if.then, label %if.else, !dbg !6201

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6179, metadata !DIExpression(DW_OP_deref)), !dbg !6193
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !6202
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !6175, metadata !DIExpression()), !dbg !6193
  br label %for.cond, !dbg !6202

for.cond:                                         ; preds = %for.inc, %if.then
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.then ], [ %call12, %for.inc ], !dbg !6205
  %last_p.0 = phi %struct.ssa_use_operand_d* [ %head, %if.then ], [ %last_p.1, %for.inc ], !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0, metadata !6176, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !6175, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6179, metadata !DIExpression(DW_OP_deref)), !dbg !6193
  %call5 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6206
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6206
  br i1 %tobool6, label %for.body, label %if.end44.loopexit, !dbg !6202

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !6208
  %cmp8 = icmp eq %union.tree_node* %call7, %call, !dbg !6210
  br i1 %cmp8, label %if.then10, label %for.inc, !dbg !6211

if.then10:                                        ; preds = %for.body
  %call11 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.0, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.0) #7, !dbg !6212
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call11, metadata !6176, metadata !DIExpression()), !dbg !6193
  br label %for.inc, !dbg !6213

for.inc:                                          ; preds = %for.body, %if.then10
  %last_p.1 = phi %struct.ssa_use_operand_d* [ %call11, %if.then10 ], [ %last_p.0, %for.body ], !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.1, metadata !6176, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6179, metadata !DIExpression(DW_OP_deref)), !dbg !6193
  %call12 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6206
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call12, metadata !6175, metadata !DIExpression()), !dbg !6193
  br label %for.cond, !dbg !6206, !llvm.loop !6214

if.else:                                          ; preds = %entry
  br i1 %tobool, label %if.else31, label %if.then15, !dbg !6216

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6179, metadata !DIExpression(DW_OP_deref)), !dbg !6193
  %call16 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !6218
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !6175, metadata !DIExpression()), !dbg !6193
  br label %for.cond17, !dbg !6218

for.cond17:                                       ; preds = %for.inc28, %if.then15
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call16, %if.then15 ], [ %call29, %for.inc28 ], !dbg !6222
  %last_p.2 = phi %struct.ssa_use_operand_d* [ %head, %if.then15 ], [ %last_p.3, %for.inc28 ], !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2, metadata !6176, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !6175, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6179, metadata !DIExpression(DW_OP_deref)), !dbg !6193
  %call18 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6223
  %tobool19 = icmp eq i8 %call18, 0, !dbg !6223
  br i1 %tobool19, label %for.body21, label %if.end44.loopexit1, !dbg !6218

for.body21:                                       ; preds = %for.cond17
  %call22 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1) #7, !dbg !6225
  %cmp23 = icmp eq %union.tree_node* %call22, %call, !dbg !6227
  br i1 %cmp23, label %if.then25, label %for.inc28, !dbg !6228

if.then25:                                        ; preds = %for.body21
  %call26 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.1, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.2) #7, !dbg !6229
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call26, metadata !6176, metadata !DIExpression()), !dbg !6193
  br label %for.inc28, !dbg !6230

for.inc28:                                        ; preds = %for.body21, %if.then25
  %last_p.3 = phi %struct.ssa_use_operand_d* [ %call26, %if.then25 ], [ %last_p.2, %for.body21 ], !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.3, metadata !6176, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !6179, metadata !DIExpression(DW_OP_deref)), !dbg !6193
  %call29 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !6223
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call29, metadata !6175, metadata !DIExpression()), !dbg !6193
  br label %for.cond17, !dbg !6223, !llvm.loop !6231

if.else31:                                        ; preds = %if.else
  %call32 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %0) #7, !dbg !6233
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call32, metadata !6175, metadata !DIExpression()), !dbg !6193
  %cmp33 = icmp eq %struct.ssa_use_operand_d* %call32, null, !dbg !6235
  br i1 %cmp33, label %if.end44, label %if.then35, !dbg !6236

if.then35:                                        ; preds = %if.else31
  %call36 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %call32) #7, !dbg !6237
  %cmp37 = icmp eq %union.tree_node* %call36, %call, !dbg !6240
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !6241

if.then39:                                        ; preds = %if.then35
  %call40 = tail call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* nonnull %call32, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %head) #7, !dbg !6242
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call40, metadata !6176, metadata !DIExpression()), !dbg !6193
  br label %if.end44, !dbg !6243

if.end44.loopexit:                                ; preds = %for.cond
  %last_p.0.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.0, %for.cond ], !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !6176, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !6176, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !6176, metadata !DIExpression()), !dbg !6193
  br label %if.end44, !dbg !6244

if.end44.loopexit1:                               ; preds = %for.cond17
  %last_p.2.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.2, %for.cond17 ], !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !6176, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !6176, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !6176, metadata !DIExpression()), !dbg !6193
  br label %if.end44, !dbg !6244

if.end44:                                         ; preds = %if.end44.loopexit1, %if.end44.loopexit, %if.else31, %if.then35, %if.then39
  %last_p.7 = phi %struct.ssa_use_operand_d* [ %head, %if.else31 ], [ %call40, %if.then39 ], [ %head, %if.then35 ], [ %last_p.0.lcssa, %if.end44.loopexit ], [ %last_p.2.lcssa, %if.end44.loopexit1 ], !dbg !6246
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.7, metadata !6176, metadata !DIExpression()), !dbg !6193
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !6244
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6244
  %cmp45 = icmp eq %struct.ssa_use_operand_d* %2, null, !dbg !6247
  br i1 %cmp45, label %if.end49, label %if.then47, !dbg !6248

if.then47:                                        ; preds = %if.end44
  %iter_node48 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6249
  call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node48) #7, !dbg !6250
  br label %if.end49, !dbg !6250

if.end49:                                         ; preds = %if.end44, %if.then47
  %iter_node50 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !6251
  call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* nonnull %iter_node50, %struct.ssa_use_operand_d* %last_p.7) #7, !dbg !6252
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #8, !dbg !6253
  ret void, !dbg !6253
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !6254 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6259, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !6260, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6261, metadata !DIExpression()), !dbg !6264
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !6265
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6262, metadata !DIExpression()), !dbg !6264
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6266
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6267
  store i8 0, i8* %done, align 8, !dbg !6268
  %and = and i32 %flags, 5, !dbg !6269
  %cmp = icmp eq i32 %and, 0, !dbg !6269
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6269

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6269
  br label %cond.end, !dbg !6269

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !6270
  %tobool = icmp eq i8 %call1, 0, !dbg !6270
  %cond2 = select i1 %tobool, i32 4, i32 1, !dbg !6270
  call void @llvm.dbg.value(metadata i32 %cond2, metadata !6263, metadata !DIExpression()), !dbg !6264
  %and3 = and i32 %cond2, %flags, !dbg !6271
  %cmp4 = icmp eq i32 %and3, 0, !dbg !6273
  br i1 %cmp4, label %if.then, label %if.end, !dbg !6274

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %done, align 8, !dbg !6275
  br label %cleanup, !dbg !6277

if.end:                                           ; preds = %cond.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6278
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6279
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !6280
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6281
  store i32 %call7, i32* %num_phi, align 4, !dbg !6282
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6283
  store i32 2, i32* %iter_type, align 4, !dbg !6284
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6285
  br label %cleanup, !dbg !6286

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !6264
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6287
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6288 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6294, metadata !DIExpression()), !dbg !6295
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6296
  %0 = load i8, i8* %done, align 8, !dbg !6296
  ret i8 %0, !dbg !6297
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p) unnamed_addr #0 !dbg !6298 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !6302, metadata !DIExpression()), !dbg !6305
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !6303, metadata !DIExpression()), !dbg !6305
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p, metadata !6304, metadata !DIExpression()), !dbg !6305
  %cmp = icmp eq %struct.ssa_use_operand_d* %use_p, %head, !dbg !6306
  br i1 %cmp, label %if.end3, label %if.then, !dbg !6308

if.then:                                          ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %last_p, i64 0, i32 1, !dbg !6309
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !6309
  %cmp1 = icmp eq %struct.ssa_use_operand_d* %0, %use_p, !dbg !6312
  br i1 %cmp1, label %if.end3, label %if.else, !dbg !6313

if.else:                                          ; preds = %if.then
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use_p) #7, !dbg !6314
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %last_p) #7, !dbg !6316
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !6304, metadata !DIExpression()), !dbg !6305
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.else, %if.then
  %last_p.addr.1 = phi %struct.ssa_use_operand_d* [ %last_p, %entry ], [ %use_p, %if.then ], [ %use_p, %if.else ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.addr.1, metadata !6304, metadata !DIExpression()), !dbg !6305
  ret %struct.ssa_use_operand_d* %last_p.addr.1, !dbg !6317
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6318 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6322, metadata !DIExpression()), !dbg !6324
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6325
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !6325
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !6327
  br i1 %tobool, label %if.end, label %if.then, !dbg !6328

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !6329
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !6323, metadata !DIExpression()), !dbg !6324
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !6331
  %2 = load i64, i64* %1, align 8, !dbg !6331
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !6332
  store i64 %2, i64* %3, align 8, !dbg !6332
  br label %cleanup, !dbg !6333

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6334
  %4 = load i32, i32* %phi_i, align 8, !dbg !6334
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6336
  %5 = load i32, i32* %num_phi, align 4, !dbg !6336
  %cmp = icmp slt i32 %4, %5, !dbg !6337
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !6338

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6339
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6339
  %inc = add nsw i32 %4, 1, !dbg !6339
  store i32 %inc, i32* %phi_i, align 8, !dbg !6339
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #7, !dbg !6339
  br label %cleanup, !dbg !6341

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6342
  store i8 1, i8* %done, align 8, !dbg !6343
  br label %cleanup, !dbg !6344

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !6324
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6345
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6346 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6348, metadata !DIExpression()), !dbg !6351
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6349, metadata !DIExpression()), !dbg !6351
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6350, metadata !DIExpression()), !dbg !6351
  %0 = and i32 %flags, 11, !dbg !6352
  %1 = icmp eq i32 %0, 1, !dbg !6352
  br i1 %1, label %cond.end, label %cond.true, !dbg !6352

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6352
  br label %cond.end, !dbg !6352

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !6353
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6354
  store i32 2, i32* %iter_type, align 4, !dbg !6355
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !6356
  ret %struct.ssa_use_operand_d* %call, !dbg !6357
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6358 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6362, metadata !DIExpression()), !dbg !6364
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6365
  %tobool = icmp eq i8 %call, 0, !dbg !6365
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6367

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !6368
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !6368
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !6368
  call void @llvm.dbg.value(metadata %struct.use_optype_d* %1, metadata !6363, metadata !DIExpression()), !dbg !6364
  %tobool1 = icmp eq %struct.use_optype_d* %1, null, !dbg !6369
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !6371

land.lhs.true:                                    ; preds = %if.end
  %use = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, i32 3, !dbg !6372
  %2 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !6372
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !6373
  %3 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !6373
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !6374
  %use_ptr3 = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, !dbg !6375
  %spec.select = select i1 %cmp, %struct.ssa_use_operand_d* %use_ptr3, %struct.ssa_use_operand_d* null, !dbg !6376
  ret %struct.ssa_use_operand_d* %spec.select, !dbg !6376

cleanup:                                          ; preds = %if.end, %entry
  ret %struct.ssa_use_operand_d* null, !dbg !6377
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !6378 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !6382, metadata !DIExpression()), !dbg !6383
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !6384
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6384
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !6386
  br i1 %cmp, label %return, label %if.end, !dbg !6387

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !6388
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6388
  %2 = load i64, i64* %1, align 8, !dbg !6388
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !6389
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !6390
  store i64 %2, i64* %3, align 8, !dbg !6390
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !6391
  %5 = load i64, i64* %4, align 8, !dbg !6391
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !6392
  %7 = load i64*, i64** %6, align 8, !dbg !6392
  store i64 %5, i64* %7, align 8, !dbg !6393
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6394
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !6395
  br label %return, !dbg !6396

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !6396
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !6397 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !6401, metadata !DIExpression()), !dbg !6403
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !6402, metadata !DIExpression()), !dbg !6403
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !6404
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !6405
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !6406
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6406
  %1 = load i64, i64* %0, align 8, !dbg !6406
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !6407
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !6408
  store i64 %1, i64* %2, align 8, !dbg !6408
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !6409
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !6410
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !6411
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !6412
  ret void, !dbg !6413
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6414 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6416, metadata !DIExpression()), !dbg !6417
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !6418
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !6418
  ret %union.tree_node* %0, !dbg !6419
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6420 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6424, metadata !DIExpression()), !dbg !6425
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6426
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !6427
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6428
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !6429
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6430
  store i32 0, i32* %iter_type, align 4, !dbg !6431
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6432
  store i32 0, i32* %phi_i, align 8, !dbg !6433
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6434
  store i32 0, i32* %num_phi, align 4, !dbg !6435
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6436
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6437
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6438
  store i8 1, i8* %done, align 8, !dbg !6439
  ret void, !dbg !6440
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6441 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6443, metadata !DIExpression()), !dbg !6444
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !6445
  %0 = load i32, i32* %nargs, align 4, !dbg !6445
  ret i32 %0, !dbg !6446
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6447 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6451, metadata !DIExpression()), !dbg !6454
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6452, metadata !DIExpression()), !dbg !6454
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6453, metadata !DIExpression()), !dbg !6454
  %0 = and i32 %flags, 10, !dbg !6455
  %1 = icmp eq i32 %0, 8, !dbg !6455
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !6455

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !6455
  %3 = icmp eq i32 %2, 4, !dbg !6455
  br i1 %3, label %cond.true, label %cond.end, !dbg !6455

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6455
  br label %cond.end, !dbg !6455

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !6456
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !6457

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6458
  br label %cond.end12, !dbg !6457

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !6457
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6459
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !6460
  %and14 = and i32 %flags, 8, !dbg !6461
  %tobool15 = icmp eq i32 %and14, 0, !dbg !6461
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !6463

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !6464
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !6465

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !6466
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !6467
  br i1 %cmp, label %if.end, label %if.then, !dbg !6468

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !6469
  %6 = load i64*, i64** %5, align 8, !dbg !6469
  %7 = load i64, i64* %6, align 8, !dbg !6470
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !6471
  store i64 %7, i64* %8, align 8, !dbg !6471
  br label %if.end, !dbg !6472

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !6473
  %tobool24 = icmp eq i32 %and23, 0, !dbg !6473
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !6474

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6475
  br label %cond.end28, !dbg !6474

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !6474
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !6476
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !6477
  %and30 = and i32 %flags, 4, !dbg !6478
  %tobool31 = icmp eq i32 %and30, 0, !dbg !6478
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !6480

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !6481
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !6482

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !6483
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !6484
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !6485

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !6486
  %11 = load i64*, i64** %10, align 8, !dbg !6486
  %12 = load i64, i64* %11, align 8, !dbg !6487
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !6488
  store i64 %12, i64* %13, align 8, !dbg !6488
  br label %if.end42, !dbg !6489

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6490
  store i8 0, i8* %done, align 8, !dbg !6491
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !6492
  store i32 0, i32* %phi_i, align 8, !dbg !6493
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !6494
  store i32 0, i32* %num_phi, align 4, !dbg !6495
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !6496
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !6497
  ret void, !dbg !6498
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6499 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6503, metadata !DIExpression()), !dbg !6504
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !6505
  %tobool = icmp eq i8 %call, 0, !dbg !6505
  br i1 %tobool, label %return, label %if.end, !dbg !6507

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !6508
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !6508
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !6508
  br label %return, !dbg !6509

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !6504
  ret %struct.def_optype_d* %retval.0, !dbg !6510
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6511 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6513, metadata !DIExpression()), !dbg !6514
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !6515
  %tobool = icmp eq i8 %call, 0, !dbg !6515
  br i1 %tobool, label %return, label %if.end, !dbg !6517

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !6518
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !6518
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6518
  br label %return, !dbg !6519

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !6514
  ret %union.tree_node* %retval.0, !dbg !6520
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6521 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6525, metadata !DIExpression()), !dbg !6526
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !6527
  %tobool = icmp eq i8 %call, 0, !dbg !6527
  br i1 %tobool, label %return, label %if.end, !dbg !6529

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !6530
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !6530
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !6530
  br label %return, !dbg !6531

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !6526
  ret %struct.use_optype_d* %retval.0, !dbg !6532
}

; Function Attrs: nounwind uwtable
define internal fastcc void @execute_load_motion(%struct.loop* %loop, %struct.chain* %chain, %struct.bitmap_head_def* %tmp_vars) unnamed_addr #5 !dbg !6533 {
entry:
  %vars = alloca %struct.VEC_tree_heap*, align 8
  %a = alloca %struct.dref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6537, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !6538, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_vars, metadata !6539, metadata !DIExpression()), !dbg !6550
  %0 = bitcast %struct.VEC_tree_heap** %vars to i8*, !dbg !6551
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6551
  %1 = bitcast %struct.dref_d** %a to i8*, !dbg !6552
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6552
  call void @llvm.dbg.value(metadata i32 0, metadata !6542, metadata !DIExpression()), !dbg !6550
  %type = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 0, !dbg !6553
  %2 = load i32, i32* %type, align 8, !dbg !6553
  %cmp = icmp eq i32 %2, 0, !dbg !6553
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6553

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1618, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6553
  br label %cond.end, !dbg !6553

cond.end:                                         ; preds = %entry, %cond.true
  %combined = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 9, !dbg !6554
  %bf.load = load i8, i8* %combined, align 8, !dbg !6554
  %bf.clear = and i8 %bf.load, 4, !dbg !6554
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !6554
  br i1 %tobool, label %cond.end3, label %cond.true1, !dbg !6554

cond.true1:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1619, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6554
  br label %cond.end3, !dbg !6554

cond.end3:                                        ; preds = %cond.end, %cond.true1
  call void @llvm.dbg.value(metadata i32 0, metadata !6544, metadata !DIExpression()), !dbg !6550
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 5, !dbg !6555
  br label %for.cond, !dbg !6558

for.cond:                                         ; preds = %for.body, %cond.end3
  %n_writes.0 = phi i32 [ 0, %cond.end3 ], [ %spec.select, %for.body ], !dbg !6559
  %i.0 = phi i32 [ 0, %cond.end3 ], [ %inc13, %for.body ], !dbg !6560
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6544, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata i32 %n_writes.0, metadata !6542, metadata !DIExpression()), !dbg !6550
  %3 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !6561
  %tobool5 = icmp eq %struct.VEC_dref_heap* %3, null, !dbg !6561
  br i1 %tobool5, label %cond.end9, label %cond.true6, !dbg !6561

cond.true6:                                       ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %3, i64 0, i32 0, !dbg !6561
  br label %cond.end9, !dbg !6561

cond.end9:                                        ; preds = %for.cond, %cond.true6
  %cond10 = phi %struct.VEC_dref_base* [ %base, %cond.true6 ], [ null, %for.cond ], !dbg !6561
  call void @llvm.dbg.value(metadata %struct.dref_d** %a, metadata !6541, metadata !DIExpression(DW_OP_deref)), !dbg !6550
  %call = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond10, i32 %i.0, %struct.dref_d** nonnull %a) #7, !dbg !6561
  %tobool11 = icmp eq i32 %call, 0, !dbg !6562
  br i1 %tobool11, label %for.end, label %for.body, !dbg !6562

for.body:                                         ; preds = %cond.end9
  %4 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !6563
  call void @llvm.dbg.value(metadata %struct.dref_d* %4, metadata !6541, metadata !DIExpression()), !dbg !6550
  %ref = getelementptr inbounds %struct.dref_d, %struct.dref_d* %4, i64 0, i32 0, !dbg !6563
  %5 = load %struct.data_reference*, %struct.data_reference** %ref, align 8, !dbg !6563
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %5, i64 0, i32 3, !dbg !6563
  %6 = load i8, i8* %is_read, align 8, !dbg !6563
  %tobool12 = icmp eq i8 %6, 0, !dbg !6563
  %inc = zext i1 %tobool12 to i32, !dbg !6565
  %spec.select = add i32 %n_writes.0, %inc, !dbg !6565
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6542, metadata !DIExpression()), !dbg !6550
  %inc13 = add i32 %i.0, 1, !dbg !6566
  call void @llvm.dbg.value(metadata i32 %inc13, metadata !6544, metadata !DIExpression()), !dbg !6550
  br label %for.cond, !dbg !6567, !llvm.loop !6568

for.end:                                          ; preds = %cond.end9
  %n_writes.0.lcssa = phi i32 [ %n_writes.0, %cond.end9 ], !dbg !6559
  call void @llvm.dbg.value(metadata i32 %n_writes.0.lcssa, metadata !6542, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata i32 %n_writes.0.lcssa, metadata !6542, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata i32 %n_writes.0.lcssa, metadata !6542, metadata !DIExpression()), !dbg !6550
  %7 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !6570
  %tobool15 = icmp eq %struct.VEC_dref_heap* %7, null, !dbg !6570
  br i1 %tobool15, label %cond.end20, label %cond.true16, !dbg !6570

cond.true16:                                      ; preds = %for.end
  %base18 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %7, i64 0, i32 0, !dbg !6570
  br label %cond.end20, !dbg !6570

cond.end20:                                       ; preds = %for.end, %cond.true16
  %cond21 = phi %struct.VEC_dref_base* [ %base18, %cond.true16 ], [ null, %for.end ], !dbg !6570
  %call22 = call fastcc i32 @VEC_dref_base_length(%struct.VEC_dref_base* %cond21) #7, !dbg !6570
  %cmp23 = icmp eq i32 %n_writes.0.lcssa, %call22, !dbg !6572
  br i1 %cmp23, label %cleanup, label %if.end25, !dbg !6573

if.end25:                                         ; preds = %cond.end20
  %call26 = call fastcc %struct.dref_d* @get_chain_root(%struct.chain* %chain) #7, !dbg !6574
  %cmp27 = icmp ne i32 %n_writes.0.lcssa, 0, !dbg !6575
  %conv28 = zext i1 %cmp27 to i8, !dbg !6576
  %inits = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 8, !dbg !6577
  %8 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %inits, align 8, !dbg !6577
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vars, metadata !6540, metadata !DIExpression(DW_OP_deref)), !dbg !6550
  call fastcc void @initialize_root_vars_lm(%struct.loop* %loop, %struct.dref_d* %call26, i8 zeroext %conv28, %struct.VEC_tree_heap** nonnull %vars, %struct.VEC_tree_heap* %8, %struct.bitmap_head_def* %tmp_vars) #7, !dbg !6578
  call void @llvm.dbg.value(metadata i32 0, metadata !6543, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata i32 0, metadata !6544, metadata !DIExpression()), !dbg !6550
  br label %for.cond29, !dbg !6579

for.cond29:                                       ; preds = %if.end67, %if.end25
  %ridx.0 = phi i32 [ 0, %if.end25 ], [ %ridx.2, %if.end67 ], !dbg !6580
  %n_writes.2 = phi i32 [ %n_writes.0.lcssa, %if.end25 ], [ %n_writes.3, %if.end67 ], !dbg !6559
  %i.1 = phi i32 [ 0, %if.end25 ], [ %inc83, %if.end67 ], !dbg !6581
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6544, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata i32 %n_writes.2, metadata !6542, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata i32 %ridx.0, metadata !6543, metadata !DIExpression()), !dbg !6550
  %9 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !6582
  %tobool31 = icmp eq %struct.VEC_dref_heap* %9, null, !dbg !6582
  br i1 %tobool31, label %cond.end36, label %cond.true32, !dbg !6582

cond.true32:                                      ; preds = %for.cond29
  %base34 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %9, i64 0, i32 0, !dbg !6582
  br label %cond.end36, !dbg !6582

cond.end36:                                       ; preds = %for.cond29, %cond.true32
  %cond37 = phi %struct.VEC_dref_base* [ %base34, %cond.true32 ], [ null, %for.cond29 ], !dbg !6582
  call void @llvm.dbg.value(metadata %struct.dref_d** %a, metadata !6541, metadata !DIExpression(DW_OP_deref)), !dbg !6550
  %call38 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond37, i32 %i.1, %struct.dref_d** nonnull %a) #7, !dbg !6582
  %tobool39 = icmp eq i32 %call38, 0, !dbg !6583
  br i1 %tobool39, label %for.end84, label %for.body40, !dbg !6583

for.body40:                                       ; preds = %cond.end36
  %10 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !6584
  call void @llvm.dbg.value(metadata %struct.dref_d* %10, metadata !6541, metadata !DIExpression()), !dbg !6550
  %ref42 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %10, i64 0, i32 0, !dbg !6584
  %11 = load %struct.data_reference*, %struct.data_reference** %ref42, align 8, !dbg !6584
  %is_read43 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %11, i64 0, i32 3, !dbg !6584
  %12 = load i8, i8* %is_read43, align 8, !dbg !6584
  call void @llvm.dbg.value(metadata i8 %12, metadata !6546, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata %struct.dref_d* %10, metadata !6541, metadata !DIExpression()), !dbg !6550
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %10, i64 0, i32 1, !dbg !6586
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6586
  call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %13) #7, !dbg !6587
  %14 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !6588
  call void @llvm.dbg.value(metadata %struct.dref_d* %14, metadata !6541, metadata !DIExpression()), !dbg !6550
  %ref44 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %14, i64 0, i32 0, !dbg !6588
  %15 = load %struct.data_reference*, %struct.data_reference** %ref44, align 8, !dbg !6588
  %is_read45 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %15, i64 0, i32 3, !dbg !6588
  %16 = load i8, i8* %is_read45, align 8, !dbg !6588
  %tobool46 = icmp eq i8 %16, 0, !dbg !6588
  br i1 %tobool46, label %if.then47, label %if.end67, !dbg !6590

if.then47:                                        ; preds = %for.body40
  %dec = add i32 %n_writes.2, -1, !dbg !6591
  call void @llvm.dbg.value(metadata i32 %dec, metadata !6542, metadata !DIExpression()), !dbg !6550
  %tobool48 = icmp eq i32 %dec, 0, !dbg !6593
  br i1 %tobool48, label %if.end67, label %if.then49, !dbg !6595

if.then49:                                        ; preds = %if.then47
  %17 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6596
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %17, metadata !6540, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %17, metadata !6540, metadata !DIExpression()), !dbg !6550
  %base52 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %17, i64 0, i32 0, !dbg !6596
  %call56 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base52, i32 0) #7, !dbg !6596
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !6545, metadata !DIExpression()), !dbg !6550
  %var57 = getelementptr inbounds %union.tree_node, %union.tree_node* %call56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6598
  %18 = bitcast i32* %var57 to %union.tree_node**, !dbg !6598
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !6598
  %call58 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %19, %union.gimple_statement_d* null) #7, !dbg !6599
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !6545, metadata !DIExpression()), !dbg !6550
  %20 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6600
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %20, metadata !6540, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %20, metadata !6540, metadata !DIExpression()), !dbg !6550
  %base61 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %20, i64 0, i32 0, !dbg !6600
  %call65 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %base61, i32 0, %union.tree_node* %call58) #7, !dbg !6600
  %.pre = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !6601
  br label %if.end67, !dbg !6602

if.end67:                                         ; preds = %if.then47, %for.body40, %if.then49
  %21 = phi %struct.dref_d* [ %14, %for.body40 ], [ %.pre, %if.then49 ], [ %14, %if.then47 ], !dbg !6601
  %ridx.2 = phi i32 [ %ridx.0, %for.body40 ], [ %ridx.0, %if.then49 ], [ 1, %if.then47 ], !dbg !6580
  %n_writes.3 = phi i32 [ %n_writes.2, %for.body40 ], [ %dec, %if.then49 ], [ 0, %if.then47 ], !dbg !6550
  call void @llvm.dbg.value(metadata i32 %n_writes.3, metadata !6542, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata i32 %ridx.2, metadata !6543, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata %struct.dref_d* %21, metadata !6541, metadata !DIExpression()), !dbg !6550
  %stmt68 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %21, i64 0, i32 1, !dbg !6603
  %22 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt68, align 8, !dbg !6603
  %23 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6604
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %23, metadata !6540, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %23, metadata !6540, metadata !DIExpression()), !dbg !6550
  %base71 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %23, i64 0, i32 0, !dbg !6604
  %call75 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base71, i32 %ridx.2) #7, !dbg !6604
  %tobool76 = icmp eq i8 %12, 0, !dbg !6605
  %conv77 = zext i1 %tobool76 to i8, !dbg !6605
  call fastcc void @replace_ref_with(%union.gimple_statement_d* %22, %union.tree_node* %call75, i8 zeroext %conv77, i8 zeroext %conv77) #7, !dbg !6606
  %inc83 = add i32 %i.1, 1, !dbg !6607
  call void @llvm.dbg.value(metadata i32 %inc83, metadata !6544, metadata !DIExpression()), !dbg !6550
  br label %for.cond29, !dbg !6608, !llvm.loop !6609

for.end84:                                        ; preds = %cond.end36
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vars, metadata !6540, metadata !DIExpression(DW_OP_deref)), !dbg !6550
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vars) #7, !dbg !6611
  br label %cleanup, !dbg !6612

cleanup:                                          ; preds = %cond.end20, %for.end84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6612
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6612
  ret void, !dbg !6612
}

; Function Attrs: nounwind uwtable
define internal fastcc void @execute_pred_commoning_chain(%struct.loop* %loop, %struct.chain* %chain, %struct.bitmap_head_def* %tmp_vars) unnamed_addr #5 !dbg !6613 {
entry:
  %a = alloca %struct.dref_d*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6615, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !6616, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_vars, metadata !6617, metadata !DIExpression()), !dbg !6622
  %0 = bitcast %struct.dref_d** %a to i8*, !dbg !6623
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6623
  %combined = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 9, !dbg !6624
  %bf.load = load i8, i8* %combined, align 8, !dbg !6624
  %bf.clear = and i8 %bf.load, 4, !dbg !6624
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !6626
  br i1 %tobool, label %if.else, label %for.cond.preheader, !dbg !6627

for.cond.preheader:                               ; preds = %entry
  %refs = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 5, !dbg !6628
  br label %for.cond, !dbg !6632

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %i.0 = phi i32 [ %inc, %for.body ], [ 1, %for.cond.preheader ], !dbg !6633
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6618, metadata !DIExpression()), !dbg !6622
  %1 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs, align 8, !dbg !6634
  %tobool1 = icmp eq %struct.VEC_dref_heap* %1, null, !dbg !6634
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !6634

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %1, i64 0, i32 0, !dbg !6634
  br label %cond.end, !dbg !6634

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_dref_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !6634
  call void @llvm.dbg.value(metadata %struct.dref_d** %a, metadata !6619, metadata !DIExpression(DW_OP_deref)), !dbg !6622
  %call = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond, i32 %i.0, %struct.dref_d** nonnull %a) #7, !dbg !6634
  %tobool3 = icmp eq i32 %call, 0, !dbg !6632
  br i1 %tobool3, label %if.end.loopexit1, label %for.body, !dbg !6632

for.body:                                         ; preds = %cond.end
  %2 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !6635
  call void @llvm.dbg.value(metadata %struct.dref_d* %2, metadata !6619, metadata !DIExpression()), !dbg !6622
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %2, i64 0, i32 1, !dbg !6636
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6636
  call fastcc void @remove_stmt(%union.gimple_statement_d* %3) #7, !dbg !6637
  %inc = add i32 %i.0, 1, !dbg !6638
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6618, metadata !DIExpression()), !dbg !6622
  br label %for.cond, !dbg !6639, !llvm.loop !6640

if.else:                                          ; preds = %entry
  %call4 = tail call fastcc %struct.dref_d* @get_chain_root(%struct.chain* %chain) #7, !dbg !6642
  call void @llvm.dbg.value(metadata %struct.dref_d* %call4, metadata !6620, metadata !DIExpression()), !dbg !6622
  %stmt5 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %call4, i64 0, i32 1, !dbg !6644
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt5, align 8, !dbg !6644
  tail call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %4) #7, !dbg !6645
  tail call fastcc void @initialize_root(%struct.loop* %loop, %struct.chain* %chain, %struct.bitmap_head_def* %tmp_vars) #7, !dbg !6646
  call void @llvm.dbg.value(metadata i32 1, metadata !6618, metadata !DIExpression()), !dbg !6622
  %refs7 = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 5, !dbg !6647
  %vars = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 7, !dbg !6650
  %length = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 6, !dbg !6650
  br label %for.cond6, !dbg !6652

for.cond6:                                        ; preds = %cond.end24, %if.else
  %i.1 = phi i32 [ 1, %if.else ], [ %inc29, %cond.end24 ], !dbg !6653
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6618, metadata !DIExpression()), !dbg !6622
  %5 = load %struct.VEC_dref_heap*, %struct.VEC_dref_heap** %refs7, align 8, !dbg !6654
  %tobool8 = icmp eq %struct.VEC_dref_heap* %5, null, !dbg !6654
  br i1 %tobool8, label %cond.end13, label %cond.true9, !dbg !6654

cond.true9:                                       ; preds = %for.cond6
  %base11 = getelementptr inbounds %struct.VEC_dref_heap, %struct.VEC_dref_heap* %5, i64 0, i32 0, !dbg !6654
  br label %cond.end13, !dbg !6654

cond.end13:                                       ; preds = %for.cond6, %cond.true9
  %cond14 = phi %struct.VEC_dref_base* [ %base11, %cond.true9 ], [ null, %for.cond6 ], !dbg !6654
  call void @llvm.dbg.value(metadata %struct.dref_d** %a, metadata !6619, metadata !DIExpression(DW_OP_deref)), !dbg !6622
  %call15 = call fastcc i32 @VEC_dref_base_iterate(%struct.VEC_dref_base* %cond14, i32 %i.1, %struct.dref_d** nonnull %a) #7, !dbg !6654
  %tobool16 = icmp eq i32 %call15, 0, !dbg !6655
  br i1 %tobool16, label %if.end.loopexit, label %for.body17, !dbg !6655

for.body17:                                       ; preds = %cond.end13
  %6 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !6656
  call void @llvm.dbg.value(metadata %struct.dref_d* %6, metadata !6619, metadata !DIExpression()), !dbg !6622
  %stmt18 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %6, i64 0, i32 1, !dbg !6657
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt18, align 8, !dbg !6657
  call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %7) #7, !dbg !6658
  %8 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6659
  %tobool19 = icmp eq %struct.VEC_tree_heap* %8, null, !dbg !6659
  br i1 %tobool19, label %cond.end24, label %cond.true20, !dbg !6659

cond.true20:                                      ; preds = %for.body17
  %base22 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !6659
  br label %cond.end24, !dbg !6659

cond.end24:                                       ; preds = %for.body17, %cond.true20
  %cond25 = phi %struct.VEC_tree_base* [ %base22, %cond.true20 ], [ null, %for.body17 ], !dbg !6659
  %9 = load i32, i32* %length, align 8, !dbg !6659
  %10 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !6659
  call void @llvm.dbg.value(metadata %struct.dref_d* %10, metadata !6619, metadata !DIExpression()), !dbg !6622
  %distance = getelementptr inbounds %struct.dref_d, %struct.dref_d* %10, i64 0, i32 3, !dbg !6659
  %11 = load i32, i32* %distance, align 8, !dbg !6659
  %sub = sub i32 %9, %11, !dbg !6659
  %call26 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond25, i32 %sub) #7, !dbg !6659
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !6621, metadata !DIExpression()), !dbg !6622
  %12 = load %struct.dref_d*, %struct.dref_d** %a, align 8, !dbg !6660
  call void @llvm.dbg.value(metadata %struct.dref_d* %12, metadata !6619, metadata !DIExpression()), !dbg !6622
  %stmt27 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %12, i64 0, i32 1, !dbg !6661
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt27, align 8, !dbg !6661
  call fastcc void @replace_ref_with(%union.gimple_statement_d* %13, %union.tree_node* %call26, i8 zeroext 0, i8 zeroext 0) #7, !dbg !6662
  %inc29 = add i32 %i.1, 1, !dbg !6663
  call void @llvm.dbg.value(metadata i32 %inc29, metadata !6618, metadata !DIExpression()), !dbg !6622
  br label %for.cond6, !dbg !6664, !llvm.loop !6665

if.end.loopexit:                                  ; preds = %cond.end13
  br label %if.end, !dbg !6667

if.end.loopexit1:                                 ; preds = %cond.end
  br label %if.end, !dbg !6667

if.end:                                           ; preds = %if.end.loopexit1, %if.end.loopexit
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6667
  ret void, !dbg !6667
}

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_root_vars_lm(%struct.loop* %loop, %struct.dref_d* %root, i8 zeroext %written, %struct.VEC_tree_heap** %vars, %struct.VEC_tree_heap* %inits, %struct.bitmap_head_def* %tmp_vars) unnamed_addr #5 !dbg !6668 {
entry:
  %var = alloca %union.tree_node*, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6672, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata %struct.dref_d* %root, metadata !6673, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata i8 %written, metadata !6674, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vars, metadata !6675, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %inits, metadata !6676, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_vars, metadata !6677, metadata !DIExpression()), !dbg !6690
  %ref1 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %root, i64 0, i32 0, !dbg !6691
  %0 = load %struct.data_reference*, %struct.data_reference** %ref1, align 8, !dbg !6691
  %ref2 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %0, i64 0, i32 1, !dbg !6691
  %1 = load %union.tree_node*, %union.tree_node** %ref2, align 8, !dbg !6691
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6679, metadata !DIExpression()), !dbg !6690
  %2 = bitcast %union.tree_node** %var to i8*, !dbg !6692
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6692
  %3 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !6693
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6693
  %call = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !6694
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !6685, metadata !DIExpression()), !dbg !6690
  %call4 = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* %loop) #6, !dbg !6695
  call void @llvm.dbg.value(metadata %struct.edge_def* %call4, metadata !6686, metadata !DIExpression()), !dbg !6690
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %inits, i64 0, i32 0, !dbg !6696
  %call5 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 0) #7, !dbg !6696
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !6680, metadata !DIExpression()), !dbg !6690
  %tobool6 = icmp eq i8 %written, 0, !dbg !6697
  %cond7 = select i1 %tobool6, i32 1, i32 2, !dbg !6697
  %call8 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %cond7) #7, !dbg !6697
  store %struct.VEC_tree_heap* %call8, %struct.VEC_tree_heap** %vars, align 8, !dbg !6698
  %call9 = tail call fastcc %union.tree_node* @predcom_tmp_var(%union.tree_node* %1, i32 0, %struct.bitmap_head_def* %tmp_vars) #7, !dbg !6699
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !6681, metadata !DIExpression()), !dbg !6690
  store %union.tree_node* %call9, %union.tree_node** %var, align 8, !dbg !6700
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6701
  %tobool10 = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !6701
  br i1 %tobool10, label %cond.end14, label %cond.true11, !dbg !6701

cond.true11:                                      ; preds = %entry
  %base12 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !6701
  br label %cond.end14, !dbg !6701

cond.end14:                                       ; preds = %entry, %cond.true11
  %cond15 = phi %struct.VEC_tree_base* [ %base12, %cond.true11 ], [ null, %entry ], !dbg !6701
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !6681, metadata !DIExpression()), !dbg !6690
  %call16 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond15, %union.tree_node* %call9) #7, !dbg !6701
  br i1 %tobool6, label %if.end, label %if.then, !dbg !6702

if.then:                                          ; preds = %cond.end14
  %5 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6703
  %tobool18 = icmp eq %struct.VEC_tree_heap* %5, null, !dbg !6703
  br i1 %tobool18, label %cond.end22, label %cond.true19, !dbg !6703

cond.true19:                                      ; preds = %if.then
  %base20 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %5, i64 0, i32 0, !dbg !6703
  br label %cond.end22, !dbg !6703

cond.end22:                                       ; preds = %if.then, %cond.true19
  %cond23 = phi %struct.VEC_tree_base* [ %base20, %cond.true19 ], [ null, %if.then ], !dbg !6703
  br i1 %tobool18, label %cond.end28, label %cond.true25, !dbg !6703

cond.true25:                                      ; preds = %cond.end22
  %base26 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %5, i64 0, i32 0, !dbg !6703
  br label %cond.end28, !dbg !6703

cond.end28:                                       ; preds = %cond.end22, %cond.true25
  %cond29 = phi %struct.VEC_tree_base* [ %base26, %cond.true25 ], [ null, %cond.end22 ], !dbg !6703
  %call30 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond29, i32 0) #7, !dbg !6703
  %call31 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond23, %union.tree_node* %call30) #7, !dbg !6703
  br label %if.end, !dbg !6703

if.end:                                           ; preds = %cond.end14, %cond.end28
  call void @llvm.dbg.value(metadata i32 0, metadata !6678, metadata !DIExpression()), !dbg !6690
  br label %for.cond, !dbg !6705

for.cond:                                         ; preds = %cond.end44, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %cond.end44 ], !dbg !6707
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6678, metadata !DIExpression()), !dbg !6690
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6708
  %tobool32 = icmp eq %struct.VEC_tree_heap* %6, null, !dbg !6708
  br i1 %tobool32, label %cond.end36, label %cond.true33, !dbg !6708

cond.true33:                                      ; preds = %for.cond
  %base34 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %6, i64 0, i32 0, !dbg !6708
  br label %cond.end36, !dbg !6708

cond.end36:                                       ; preds = %for.cond, %cond.true33
  %cond37 = phi %struct.VEC_tree_base* [ %base34, %cond.true33 ], [ null, %for.cond ], !dbg !6708
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !6681, metadata !DIExpression(DW_OP_deref)), !dbg !6690
  %call38 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond37, i32 %i.0, %union.tree_node** nonnull %var) #7, !dbg !6708
  %tobool39 = icmp eq i32 %call38, 0, !dbg !6710
  %7 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6690
  %tobool40 = icmp ne %struct.VEC_tree_heap* %7, null, !dbg !6690
  br i1 %tobool39, label %for.end, label %for.body, !dbg !6710

for.body:                                         ; preds = %cond.end36
  br i1 %tobool40, label %cond.true41, label %cond.end44, !dbg !6711

cond.true41:                                      ; preds = %for.body
  %base42 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %7, i64 0, i32 0, !dbg !6711
  br label %cond.end44, !dbg !6711

cond.end44:                                       ; preds = %for.body, %cond.true41
  %cond45 = phi %struct.VEC_tree_base* [ %base42, %cond.true41 ], [ null, %for.body ], !dbg !6711
  %8 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !6711
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6681, metadata !DIExpression()), !dbg !6690
  %call46 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %8, %union.gimple_statement_d* null) #7, !dbg !6711
  %call47 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %cond45, i32 %i.0, %union.tree_node* %call46) #7, !dbg !6711
  %inc = add i32 %i.0, 1, !dbg !6712
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6678, metadata !DIExpression()), !dbg !6690
  br label %for.cond, !dbg !6713, !llvm.loop !6714

for.end:                                          ; preds = %cond.end36
  %.lcssa = phi %struct.VEC_tree_heap* [ %7, %cond.end36 ], !dbg !6690
  %tobool40.lcssa = phi i1 [ %tobool40, %cond.end36 ], !dbg !6690
  br i1 %tobool40.lcssa, label %cond.true49, label %cond.end52, !dbg !6716

cond.true49:                                      ; preds = %for.end
  %base50 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %.lcssa, i64 0, i32 0, !dbg !6716
  br label %cond.end52, !dbg !6716

cond.end52:                                       ; preds = %for.end, %cond.true49
  %cond53 = phi %struct.VEC_tree_base* [ %base50, %cond.true49 ], [ null, %for.end ], !dbg !6716
  %call54 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond53, i32 0) #7, !dbg !6716
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !6681, metadata !DIExpression()), !dbg !6690
  store %union.tree_node* %call54, %union.tree_node** %var, align 8, !dbg !6717
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !6683, metadata !DIExpression(DW_OP_deref)), !dbg !6690
  %call55 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call5, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext %written, %union.tree_node* null) #6, !dbg !6718
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !6680, metadata !DIExpression()), !dbg !6690
  %9 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !6719
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %9, metadata !6683, metadata !DIExpression()), !dbg !6690
  %tobool56 = icmp eq %struct.gimple_seq_d* %9, null, !dbg !6719
  br i1 %tobool56, label %if.end59, label %if.then57, !dbg !6721

if.then57:                                        ; preds = %cond.end52
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %9, metadata !6683, metadata !DIExpression()), !dbg !6690
  %call58 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call, %struct.gimple_seq_d* nonnull %9) #6, !dbg !6722
  br label %if.end59, !dbg !6722

if.end59:                                         ; preds = %cond.end52, %if.then57
  br i1 %tobool6, label %if.else, label %if.then61, !dbg !6723

if.then61:                                        ; preds = %if.end59
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6724
  %tobool62 = icmp eq %struct.VEC_tree_heap* %10, null, !dbg !6724
  br i1 %tobool62, label %cond.end66, label %cond.true63, !dbg !6724

cond.true63:                                      ; preds = %if.then61
  %base64 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !6724
  br label %cond.end66, !dbg !6724

cond.end66:                                       ; preds = %if.then61, %cond.true63
  %cond67 = phi %struct.VEC_tree_base* [ %base64, %cond.true63 ], [ null, %if.then61 ], !dbg !6724
  %call68 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond67, i32 1) #7, !dbg !6724
  call void @llvm.dbg.value(metadata %union.tree_node* %call68, metadata !6682, metadata !DIExpression()), !dbg !6690
  %11 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !6726
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !6681, metadata !DIExpression()), !dbg !6690
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !6727
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !6727
  %call69 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %11, %struct.basic_block_def* %12) #6, !dbg !6728
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call69, metadata !6684, metadata !DIExpression()), !dbg !6690
  %13 = bitcast %union.tree_node** %var to %struct.tree_ssa_name**, !dbg !6729
  %14 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %13, align 8, !dbg !6729
  %def_stmt = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %14, i64 0, i32 2, !dbg !6729
  store %union.gimple_statement_d* %call69, %union.gimple_statement_d** %def_stmt, align 8, !dbg !6730
  call void @add_phi_arg(%union.gimple_statement_d* %call69, %union.tree_node* %call55, %struct.edge_def* %call, i32 0) #6, !dbg !6731
  call void @add_phi_arg(%union.gimple_statement_d* %call69, %union.tree_node* %call68, %struct.edge_def* %call4, i32 0) #6, !dbg !6732
  br label %if.end72, !dbg !6733

if.else:                                          ; preds = %if.end59
  %15 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !6734
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !6681, metadata !DIExpression()), !dbg !6690
  %call70 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %15, %union.tree_node* %call55) #6, !dbg !6734
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call70, metadata !6687, metadata !DIExpression()), !dbg !6735
  call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %call70) #7, !dbg !6736
  %call71 = call %struct.basic_block_def* @gsi_insert_on_edge_immediate(%struct.edge_def* %call, %union.gimple_statement_d* %call70) #6, !dbg !6737
  br label %if.end72

if.end72:                                         ; preds = %if.else, %cond.end66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6738
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6738
  ret void, !dbg !6738
}

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_ref_with(%union.gimple_statement_d* %stmt, %union.tree_node* %new_tree, i8 zeroext %set, i8 zeroext %in_lhs) unnamed_addr #5 !dbg !6739 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp5 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp13 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6743, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tree, metadata !6744, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.value(metadata i8 %set, metadata !6745, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.value(metadata i8 %in_lhs, metadata !6746, metadata !DIExpression()), !dbg !6751
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !6752
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6752
  %1 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !6752
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6752
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6753
  %cmp = icmp eq i32 %call, 16, !dbg !6755
  br i1 %cmp, label %if.then, label %if.end, !dbg !6756

if.then:                                          ; preds = %entry
  %2 = or i8 %in_lhs, %set, !dbg !6757
  %3 = icmp eq i8 %2, 0, !dbg !6757
  br i1 %3, label %cond.end, label %cond.true, !dbg !6757

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1260, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6757
  br label %cond.end, !dbg !6757

cond.end:                                         ; preds = %if.then, %cond.true
  %call2 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !6759
  %call3 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call2) #7, !dbg !6759
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !6747, metadata !DIExpression()), !dbg !6751
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6760
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !6760
  %call4 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !6761
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %call4) #7, !dbg !6760
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !6760
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !6760
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp5 to i8*, !dbg !6762
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !6762
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp5, %union.gimple_statement_d* %stmt) #6, !dbg !6762
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !6762
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !6762
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !6750, metadata !DIExpression(DW_OP_deref)), !dbg !6751
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %psi, i8 zeroext 0) #6, !dbg !6763
  %call6 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call3, %union.tree_node* %new_tree) #6, !dbg !6764
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !6748, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !6749, metadata !DIExpression(DW_OP_deref)), !dbg !6751
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* %call6, i32 0) #6, !dbg !6765
  br label %cleanup, !dbg !6766

if.end:                                           ; preds = %entry
  %call7 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !6767
  %tobool8 = icmp eq i8 %call7, 0, !dbg !6767
  br i1 %tobool8, label %cond.true9, label %cond.end11, !dbg !6767

cond.true9:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1275, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6767
  br label %cond.end11, !dbg !6767

cond.end11:                                       ; preds = %if.end, %cond.true9
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp13 to i8*, !dbg !6768
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !6768
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp13, %union.gimple_statement_d* %stmt) #6, !dbg !6768
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !6768
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !6768
  %tobool14 = icmp eq i8 %set, 0, !dbg !6769
  %tobool23 = icmp ne i8 %in_lhs, 0, !dbg !6751
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !6771

if.then15:                                        ; preds = %cond.end11
  br i1 %tobool23, label %cond.true17, label %cond.end19, !dbg !6772

cond.true17:                                      ; preds = %if.then15
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1282, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6772
  br label %cond.end19, !dbg !6772

cond.end19:                                       ; preds = %if.then15, %cond.true17
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !6749, metadata !DIExpression(DW_OP_deref)), !dbg !6751
  call void @gimple_assign_set_rhs_from_tree(%struct.gimple_stmt_iterator* nonnull %bsi, %union.tree_node* %new_tree) #6, !dbg !6774
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !6749, metadata !DIExpression(DW_OP_deref)), !dbg !6751
  %call21 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !6775
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call21, metadata !6743, metadata !DIExpression()), !dbg !6751
  call fastcc void @update_stmt(%union.gimple_statement_d* %call21) #7, !dbg !6776
  br label %cleanup, !dbg !6777

if.end22:                                         ; preds = %cond.end11
  %call25 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !6778
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !6747, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !6747, metadata !DIExpression()), !dbg !6751
  br i1 %tobool23, label %if.then24, label %if.end37, !dbg !6780

if.then24:                                        ; preds = %if.end22
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6781
  %bf.load = load i64, i64* %7, align 8, !dbg !6781
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6784
  %cmp26 = icmp eq i64 %bf.cast1, 141, !dbg !6784
  br i1 %cmp26, label %if.end37, label %if.then27, !dbg !6785

if.then27:                                        ; preds = %if.then24
  %call28 = call zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d* %stmt) #6, !dbg !6786
  %tobool29 = icmp eq i8 %call28, 0, !dbg !6786
  br i1 %tobool29, label %cond.true30, label %cond.end32, !dbg !6786

cond.true30:                                      ; preds = %if.then27
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1313, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6786
  br label %cond.end32, !dbg !6786

cond.end32:                                       ; preds = %if.then27, %cond.true30
  %call34 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !6788
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !6747, metadata !DIExpression()), !dbg !6751
  br label %if.end37, !dbg !6789

if.end37:                                         ; preds = %if.then24, %if.end22, %cond.end32
  %val.1 = phi %union.tree_node* [ %call34, %cond.end32 ], [ %call25, %if.then24 ], [ %call25, %if.end22 ], !dbg !6778
  call void @llvm.dbg.value(metadata %union.tree_node* %val.1, metadata !6747, metadata !DIExpression()), !dbg !6751
  %call38 = call %union.tree_node* @unshare_expr(%union.tree_node* %val.1) #6, !dbg !6790
  %call39 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %new_tree, %union.tree_node* %call38) #6, !dbg !6790
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call39, metadata !6748, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !6749, metadata !DIExpression(DW_OP_deref)), !dbg !6751
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* %call39, i32 0) #6, !dbg !6791
  br label %cleanup, !dbg !6792

cleanup:                                          ; preds = %if.end37, %cond.end19, %cond.end
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6792
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6792
  ret void, !dbg !6792
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @predcom_tmp_var(%union.tree_node* %ref, i32 %i, %struct.bitmap_head_def* %tmp_vars) unnamed_addr #5 !dbg !6793 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !6797, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.value(metadata i32 %i, metadata !6798, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_vars, metadata !6799, metadata !DIExpression()), !dbg !6802
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6803
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !6803
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6800, metadata !DIExpression()), !dbg !6802
  %call = tail call i8* @get_lsm_tmp_name(%union.tree_node* %ref, i32 %i) #6, !dbg !6804
  %call2 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %0, i8* %call) #6, !dbg !6805
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6801, metadata !DIExpression()), !dbg !6802
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6806
  %bf.load = load i64, i64* %1, align 8, !dbg !6806
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6808
  %cmp = icmp eq i64 %bf.cast1, 13, !dbg !6808
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6809

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i64 %bf.cast1, 14, !dbg !6810
  br i1 %cmp7, label %if.then, label %if.end, !dbg !6811

if.then:                                          ; preds = %lor.lhs.false, %entry
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6812
  %2 = bitcast i40* %gimple_reg_flag to i64*, !dbg !6812
  %bf.load8 = load i64, i64* %2, align 8, !dbg !6813
  %bf.set = or i64 %bf.load8, 134217728, !dbg !6813
  store i64 %bf.set, i64* %2, align 8, !dbg !6813
  br label %if.end, !dbg !6812

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call10 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call2) #6, !dbg !6814
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6815
  %3 = load i32, i32* %uid, align 4, !dbg !6815
  %call11 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %tmp_vars, i32 %3) #6, !dbg !6816
  ret %union.tree_node* %call2, !dbg !6817
}

declare dso_local %union.gimple_statement_d* @create_phi_node(%union.tree_node*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @gsi_insert_on_edge_immediate(%struct.edge_def*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local i8* @get_lsm_tmp_name(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6818 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6822, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !6823, metadata !DIExpression()), !dbg !6825
  tail call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* sret %agg.result, %struct.basic_block_def* %bb) #7, !dbg !6826
  br label %while.cond, !dbg !6827

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !6828
  %tobool = icmp eq i8 %call, 0, !dbg !6828
  br i1 %tobool, label %land.rhs, label %while.end, !dbg !6829

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !6830
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !6831
  %cmp = icmp eq i32 %call2, 4, !dbg !6832
  br i1 %cmp, label %while.body, label %while.end, !dbg !6827

while.body:                                       ; preds = %land.rhs
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %agg.result) #7, !dbg !6833
  br label %while.cond, !dbg !6827, !llvm.loop !6834

while.end:                                        ; preds = %while.cond, %land.rhs
  ret void, !dbg !6836
}

declare dso_local void @remove_phi_node(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6837 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6839, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !6840, metadata !DIExpression()), !dbg !6843
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !6844
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !6841, metadata !DIExpression()), !dbg !6842
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !6845
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !6846
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !6847
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !6848
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !6849
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !6850
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !6851
  ret void, !dbg !6852
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6853 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6857, metadata !DIExpression()), !dbg !6858
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !6859
  %0 = load i32, i32* %flags, align 8, !dbg !6859
  %and = and i32 %0, 512, !dbg !6860
  %tobool = icmp eq i32 %and, 0, !dbg !6860
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !6861

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !6862
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !6862
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !6863
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !6864

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !6865
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !6865
  br label %cond.end, !dbg !6864

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !6864
  ret %struct.gimple_seq_d* %cond, !dbg !6866
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6867 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6874, metadata !DIExpression()), !dbg !6875
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !6876
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6876

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !6877
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !6877
  br label %cond.end, !dbg !6876

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6876
  ret %struct.gimple_seq_node_d* %cond, !dbg !6878
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !6879 {
entry:
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp11 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6881, metadata !DIExpression()), !dbg !6887
  %0 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !6888
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6888
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6889
  %cmp = icmp eq i32 %call, 16, !dbg !6891
  br i1 %cmp, label %if.then, label %if.end10, !dbg !6892

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !6893
  %call2 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call1) #7, !dbg !6893
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6882, metadata !DIExpression()), !dbg !6887
  %call3 = tail call fastcc %union.gimple_statement_d* @single_nonlooparound_use(%union.tree_node* %call2) #7, !dbg !6895
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !6883, metadata !DIExpression()), !dbg !6887
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6896
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6896
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* %stmt) #6, !dbg !6896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !6896
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6896
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !6884, metadata !DIExpression(DW_OP_deref)), !dbg !6887
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %psi, i8 zeroext 1) #6, !dbg !6897
  %tobool = icmp eq %union.gimple_statement_d* %call3, null, !dbg !6898
  br i1 %tobool, label %cleanup24, label %lor.lhs.false, !dbg !6900

lor.lhs.false:                                    ; preds = %if.then
  %call4 = call zeroext i8 @gimple_assign_ssa_name_copy_p(%union.gimple_statement_d* nonnull %call3) #6, !dbg !6901
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6901
  br i1 %tobool5, label %cleanup24, label %lor.lhs.false6, !dbg !6902

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %call7 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call3) #7, !dbg !6903
  %cmp8 = icmp eq %union.tree_node* %call7, %call2, !dbg !6904
  br i1 %cmp8, label %if.end10, label %cleanup24, !dbg !6905

if.end10:                                         ; preds = %lor.lhs.false6, %entry
  %stmt.addr.0 = phi %union.gimple_statement_d* [ %stmt, %entry ], [ %call3, %lor.lhs.false6 ]
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.addr.0, metadata !6881, metadata !DIExpression()), !dbg !6887
  %2 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !6906
  %3 = bitcast %struct.gimple_stmt_iterator* %tmp11 to i8*, !dbg !6906
  br label %while.cond, !dbg !6907

while.cond:                                       ; preds = %cleanup, %if.end10
  %stmt.addr.1 = phi %union.gimple_statement_d* [ %stmt.addr.0, %if.end10 ], [ %stmt.addr.2, %cleanup ], !dbg !6908
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.addr.1, metadata !6881, metadata !DIExpression()), !dbg !6887
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6909
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !6910
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp11, %union.gimple_statement_d* %stmt.addr.1) #6, !dbg !6910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !6910
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !6910
  %call12 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt.addr.1) #7, !dbg !6911
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !6882, metadata !DIExpression()), !dbg !6887
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6912
  %bf.load = load i64, i64* %4, align 8, !dbg !6912
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !6912
  %cmp13 = icmp eq i64 %bf.cast3, 141, !dbg !6912
  br i1 %cmp13, label %cond.end, label %cond.true, !dbg !6912

cond.true:                                        ; preds = %while.cond
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1723, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6912
  br label %cond.end, !dbg !6912

cond.end:                                         ; preds = %while.cond, %cond.true
  %call14 = call fastcc %union.gimple_statement_d* @single_nonlooparound_use(%union.tree_node* %call12) #7, !dbg !6913
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call14, metadata !6883, metadata !DIExpression()), !dbg !6887
  call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %stmt.addr.1) #7, !dbg !6914
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !6885, metadata !DIExpression(DW_OP_deref)), !dbg !6906
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %bsi, i8 zeroext 1) #6, !dbg !6915
  call void @release_defs(%union.gimple_statement_d* %stmt.addr.1) #6, !dbg !6916
  %tobool15 = icmp eq %union.gimple_statement_d* %call14, null, !dbg !6917
  br i1 %tobool15, label %cleanup, label %lor.lhs.false16, !dbg !6919

lor.lhs.false16:                                  ; preds = %cond.end
  %call17 = call zeroext i8 @gimple_assign_ssa_name_copy_p(%union.gimple_statement_d* nonnull %call14) #6, !dbg !6920
  %tobool18 = icmp eq i8 %call17, 0, !dbg !6920
  br i1 %tobool18, label %cleanup, label %lor.lhs.false19, !dbg !6921

lor.lhs.false19:                                  ; preds = %lor.lhs.false16
  %call20 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %call14) #7, !dbg !6922
  %cmp21 = icmp ne %union.tree_node* %call20, %call12, !dbg !6923
  %spec.select = zext i1 %cmp21 to i32, !dbg !6924
  %spec.select2 = select i1 %cmp21, %union.gimple_statement_d* %stmt.addr.1, %union.gimple_statement_d* %call14, !dbg !6924
  br label %cleanup, !dbg !6924

cleanup:                                          ; preds = %lor.lhs.false16, %cond.end, %lor.lhs.false19
  %cleanup.dest.slot.0 = phi i32 [ 1, %lor.lhs.false16 ], [ 1, %cond.end ], [ %spec.select, %lor.lhs.false19 ]
  %stmt.addr.2 = phi %union.gimple_statement_d* [ %stmt.addr.1, %lor.lhs.false16 ], [ %stmt.addr.1, %cond.end ], [ %spec.select2, %lor.lhs.false19 ], !dbg !6887
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.addr.2, metadata !6881, metadata !DIExpression()), !dbg !6887
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6925
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %while.cond, label %cleanup24.loopexit, !llvm.loop !6926

cleanup24.loopexit:                               ; preds = %cleanup
  br label %cleanup24, !dbg !6927

cleanup24:                                        ; preds = %cleanup24.loopexit, %lor.lhs.false6, %lor.lhs.false, %if.then
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6927
  ret void, !dbg !6927
}

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_root(%struct.loop* %loop, %struct.chain* %chain, %struct.bitmap_head_def* %tmp_vars) unnamed_addr #5 !dbg !6928 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6930, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !6931, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_vars, metadata !6932, metadata !DIExpression()), !dbg !6935
  %call = tail call fastcc %struct.dref_d* @get_chain_root(%struct.chain* %chain) #7, !dbg !6936
  call void @llvm.dbg.value(metadata %struct.dref_d* %call, metadata !6933, metadata !DIExpression()), !dbg !6935
  %type = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 0, !dbg !6937
  %0 = load i32, i32* %type, align 8, !dbg !6937
  %cmp = icmp eq i32 %0, 2, !dbg !6938
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6939

lor.rhs:                                          ; preds = %entry
  %cmp2 = icmp eq i32 %0, 3, !dbg !6940
  %phitmp = zext i1 %cmp2 to i8, !dbg !6939
  br label %lor.end, !dbg !6939

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  call void @llvm.dbg.value(metadata i8 %1, metadata !6934, metadata !DIExpression()), !dbg !6935
  tail call fastcc void @initialize_root_vars(%struct.loop* %loop, %struct.chain* %chain, %struct.bitmap_head_def* %tmp_vars) #7, !dbg !6941
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %call, i64 0, i32 1, !dbg !6942
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6942
  %vars = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 7, !dbg !6943
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6943
  %tobool = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !6943
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6943

cond.true:                                        ; preds = %lor.end
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !6943
  br label %cond.end, !dbg !6943

cond.end:                                         ; preds = %lor.end, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %lor.end ], !dbg !6943
  %length = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 6, !dbg !6943
  %4 = load i32, i32* %length, align 8, !dbg !6943
  %call4 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %4) #7, !dbg !6943
  tail call fastcc void @replace_ref_with(%union.gimple_statement_d* %2, %union.tree_node* %call4, i8 zeroext 1, i8 zeroext %1) #7, !dbg !6944
  ret void, !dbg !6945
}

declare dso_local zeroext i8 @gimple_assign_ssa_name_copy_p(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @release_defs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_root_vars(%struct.loop* %loop, %struct.chain* %chain, %struct.bitmap_head_def* %tmp_vars) unnamed_addr #5 !dbg !6946 {
entry:
  %var = alloca %union.tree_node*, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6948, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !6949, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %tmp_vars, metadata !6950, metadata !DIExpression()), !dbg !6963
  %length = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 6, !dbg !6964
  %0 = load i32, i32* %length, align 8, !dbg !6964
  call void @llvm.dbg.value(metadata i32 %0, metadata !6952, metadata !DIExpression()), !dbg !6963
  %call = tail call fastcc %struct.dref_d* @get_chain_root(%struct.chain* %chain) #7, !dbg !6965
  call void @llvm.dbg.value(metadata %struct.dref_d* %call, metadata !6953, metadata !DIExpression()), !dbg !6963
  %has_max_use_after = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 9, !dbg !6966
  %bf.load = load i8, i8* %has_max_use_after, align 8, !dbg !6966
  %bf.clear = and i8 %bf.load, 1, !dbg !6966
  %1 = xor i8 %bf.clear, 1, !dbg !6967
  call void @llvm.dbg.value(metadata i8 %1, metadata !6954, metadata !DIExpression()), !dbg !6963
  %2 = bitcast %union.tree_node** %var to i8*, !dbg !6968
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6968
  %3 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !6969
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6969
  %call2 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !6970
  call void @llvm.dbg.value(metadata %struct.edge_def* %call2, metadata !6961, metadata !DIExpression()), !dbg !6963
  %call3 = tail call %struct.edge_def* @loop_latch_edge(%struct.loop* %loop) #6, !dbg !6971
  call void @llvm.dbg.value(metadata %struct.edge_def* %call3, metadata !6962, metadata !DIExpression()), !dbg !6963
  %cmp = icmp eq i32 %0, 0, !dbg !6972
  %tobool5 = icmp ne i8 %1, 0, !dbg !6972
  %or.cond = and i1 %cmp, %tobool5, !dbg !6972
  br i1 %or.cond, label %cond.true, label %cond.end, !dbg !6972

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 1499, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6972
  br label %cond.end, !dbg !6972

cond.end:                                         ; preds = %entry, %cond.true
  %add = add i32 %0, 1, !dbg !6973
  %call6 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %add) #7, !dbg !6973
  %vars = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 7, !dbg !6974
  store %struct.VEC_tree_heap* %call6, %struct.VEC_tree_heap** %vars, align 8, !dbg !6975
  %type = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 0, !dbg !6976
  %4 = load i32, i32* %type, align 8, !dbg !6976
  %cmp7 = icmp eq i32 %4, 3, !dbg !6978
  br i1 %cmp7, label %if.then, label %if.else, !dbg !6979

if.then:                                          ; preds = %cond.end
  %stmt = getelementptr inbounds %struct.dref_d, %struct.dref_d* %call, i64 0, i32 1, !dbg !6980
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6980
  %call9 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %5) #7, !dbg !6981
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !6955, metadata !DIExpression()), !dbg !6963
  br label %if.end, !dbg !6982

if.else:                                          ; preds = %cond.end
  %ref10 = getelementptr inbounds %struct.dref_d, %struct.dref_d* %call, i64 0, i32 0, !dbg !6983
  %6 = load %struct.data_reference*, %struct.data_reference** %ref10, align 8, !dbg !6983
  %ref11 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %6, i64 0, i32 1, !dbg !6983
  %7 = load %union.tree_node*, %union.tree_node** %ref11, align 8, !dbg !6983
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !6955, metadata !DIExpression()), !dbg !6963
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ref.0 = phi %union.tree_node* [ %call9, %if.then ], [ %7, %if.else ], !dbg !6984
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.0, metadata !6955, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata i32 0, metadata !6951, metadata !DIExpression()), !dbg !6963
  %8 = zext i8 %bf.clear to i32, !dbg !6985
  %add15 = add i32 %0, %8, !dbg !6985
  br label %for.cond, !dbg !6988

for.cond:                                         ; preds = %cond.end24, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %cond.end24 ], !dbg !6989
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6951, metadata !DIExpression()), !dbg !6963
  %exitcond1 = icmp eq i32 %i.0, %add15, !dbg !6990
  br i1 %exitcond1, label %for.end, label %for.body, !dbg !6991

for.body:                                         ; preds = %for.cond
  %call18 = tail call fastcc %union.tree_node* @predcom_tmp_var(%union.tree_node* %ref.0, i32 %i.0, %struct.bitmap_head_def* %tmp_vars) #7, !dbg !6992
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !6957, metadata !DIExpression()), !dbg !6963
  store %union.tree_node* %call18, %union.tree_node** %var, align 8, !dbg !6994
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6995
  %tobool20 = icmp eq %struct.VEC_tree_heap* %9, null, !dbg !6995
  br i1 %tobool20, label %cond.end24, label %cond.true21, !dbg !6995

cond.true21:                                      ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !6995
  br label %cond.end24, !dbg !6995

cond.end24:                                       ; preds = %for.body, %cond.true21
  %cond25 = phi %struct.VEC_tree_base* [ %base, %cond.true21 ], [ null, %for.body ], !dbg !6995
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !6957, metadata !DIExpression()), !dbg !6963
  %call26 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond25, %union.tree_node* %call18) #7, !dbg !6995
  %inc = add i32 %i.0, 1, !dbg !6996
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6951, metadata !DIExpression()), !dbg !6963
  br label %for.cond, !dbg !6997, !llvm.loop !6998

for.end:                                          ; preds = %for.cond
  %tobool27 = icmp eq i8 %1, 0, !dbg !7000
  br i1 %tobool27, label %if.end47, label %if.then28, !dbg !7002

if.then28:                                        ; preds = %for.end
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !7003
  %tobool30 = icmp eq %struct.VEC_tree_heap* %10, null, !dbg !7003
  br i1 %tobool30, label %cond.end35, label %cond.true31, !dbg !7003

cond.true31:                                      ; preds = %if.then28
  %base33 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !7003
  br label %cond.end35, !dbg !7003

cond.end35:                                       ; preds = %if.then28, %cond.true31
  %cond36 = phi %struct.VEC_tree_base* [ %base33, %cond.true31 ], [ null, %if.then28 ], !dbg !7003
  br i1 %tobool30, label %cond.end43, label %cond.true39, !dbg !7003

cond.true39:                                      ; preds = %cond.end35
  %base41 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !7003
  br label %cond.end43, !dbg !7003

cond.end43:                                       ; preds = %cond.end35, %cond.true39
  %cond44 = phi %struct.VEC_tree_base* [ %base41, %cond.true39 ], [ null, %cond.end35 ], !dbg !7003
  %call45 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond44, i32 0) #7, !dbg !7003
  %call46 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond36, %union.tree_node* %call45) #7, !dbg !7003
  br label %if.end47, !dbg !7003

if.end47:                                         ; preds = %for.end, %cond.end43
  call void @llvm.dbg.value(metadata i32 0, metadata !6951, metadata !DIExpression()), !dbg !6963
  br label %for.cond48, !dbg !7004

for.cond48:                                       ; preds = %cond.end66, %if.end47
  %i.1 = phi i32 [ 0, %if.end47 ], [ %inc71, %cond.end66 ], !dbg !7006
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6951, metadata !DIExpression()), !dbg !6963
  %11 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !7007
  %tobool50 = icmp eq %struct.VEC_tree_heap* %11, null, !dbg !7007
  br i1 %tobool50, label %cond.end55, label %cond.true51, !dbg !7007

cond.true51:                                      ; preds = %for.cond48
  %base53 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %11, i64 0, i32 0, !dbg !7007
  br label %cond.end55, !dbg !7007

cond.end55:                                       ; preds = %for.cond48, %cond.true51
  %cond56 = phi %struct.VEC_tree_base* [ %base53, %cond.true51 ], [ null, %for.cond48 ], !dbg !7007
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !6957, metadata !DIExpression(DW_OP_deref)), !dbg !6963
  %call57 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond56, i32 %i.1, %union.tree_node** nonnull %var) #7, !dbg !7007
  %tobool58 = icmp eq i32 %call57, 0, !dbg !7009
  br i1 %tobool58, label %for.cond73.preheader, label %for.body59, !dbg !7009

for.cond73.preheader:                             ; preds = %cond.end55
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !7010
  %12 = bitcast %union.tree_node** %var to %struct.tree_ssa_name**, !dbg !7010
  br label %for.cond73, !dbg !7014

for.body59:                                       ; preds = %cond.end55
  %13 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !7015
  %tobool61 = icmp eq %struct.VEC_tree_heap* %13, null, !dbg !7015
  br i1 %tobool61, label %cond.end66, label %cond.true62, !dbg !7015

cond.true62:                                      ; preds = %for.body59
  %base64 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %13, i64 0, i32 0, !dbg !7015
  br label %cond.end66, !dbg !7015

cond.end66:                                       ; preds = %for.body59, %cond.true62
  %cond67 = phi %struct.VEC_tree_base* [ %base64, %cond.true62 ], [ null, %for.body59 ], !dbg !7015
  %14 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !7015
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !6957, metadata !DIExpression()), !dbg !6963
  %call68 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %14, %union.gimple_statement_d* null) #7, !dbg !7015
  %call69 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %cond67, i32 %i.1, %union.tree_node* %call68) #7, !dbg !7015
  %inc71 = add i32 %i.1, 1, !dbg !7016
  call void @llvm.dbg.value(metadata i32 %inc71, metadata !6951, metadata !DIExpression()), !dbg !6963
  br label %for.cond48, !dbg !7017, !llvm.loop !7018

for.cond73:                                       ; preds = %for.cond73.preheader, %if.end101
  %i.2 = phi i32 [ %add94, %if.end101 ], [ 0, %for.cond73.preheader ], !dbg !7020
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !6951, metadata !DIExpression()), !dbg !6963
  %exitcond = icmp eq i32 %i.2, %0, !dbg !7021
  br i1 %exitcond, label %for.end105, label %for.body76, !dbg !7014

for.body76:                                       ; preds = %for.cond73
  %15 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !7022
  %tobool78 = icmp eq %struct.VEC_tree_heap* %15, null, !dbg !7022
  br i1 %tobool78, label %cond.end83, label %cond.true79, !dbg !7022

cond.true79:                                      ; preds = %for.body76
  %base81 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %15, i64 0, i32 0, !dbg !7022
  br label %cond.end83, !dbg !7022

cond.end83:                                       ; preds = %for.body76, %cond.true79
  %cond84 = phi %struct.VEC_tree_base* [ %base81, %cond.true79 ], [ null, %for.body76 ], !dbg !7022
  %call85 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond84, i32 %i.2) #7, !dbg !7022
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !6957, metadata !DIExpression()), !dbg !6963
  store %union.tree_node* %call85, %union.tree_node** %var, align 8, !dbg !7023
  %16 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !7024
  %tobool87 = icmp eq %struct.VEC_tree_heap* %16, null, !dbg !7024
  br i1 %tobool87, label %cond.end92, label %cond.true88, !dbg !7024

cond.true88:                                      ; preds = %cond.end83
  %base90 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %16, i64 0, i32 0, !dbg !7024
  br label %cond.end92, !dbg !7024

cond.end92:                                       ; preds = %cond.end83, %cond.true88
  %cond93 = phi %struct.VEC_tree_base* [ %base90, %cond.true88 ], [ null, %cond.end83 ], !dbg !7024
  %add94 = add i32 %i.2, 1, !dbg !7024
  %call95 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond93, i32 %add94) #7, !dbg !7024
  call void @llvm.dbg.value(metadata %union.tree_node* %call95, metadata !6958, metadata !DIExpression()), !dbg !6963
  %call96 = call fastcc %union.tree_node* @get_init_expr(%struct.chain* %chain, i32 %i.2) #7, !dbg !7025
  call void @llvm.dbg.value(metadata %union.tree_node* %call96, metadata !6956, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !6960, metadata !DIExpression(DW_OP_deref)), !dbg !6963
  %call97 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call96, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* null) #6, !dbg !7026
  call void @llvm.dbg.value(metadata %union.tree_node* %call97, metadata !6956, metadata !DIExpression()), !dbg !6963
  %17 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !7027
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %17, metadata !6960, metadata !DIExpression()), !dbg !6963
  %tobool98 = icmp eq %struct.gimple_seq_d* %17, null, !dbg !7027
  br i1 %tobool98, label %if.end101, label %if.then99, !dbg !7029

if.then99:                                        ; preds = %cond.end92
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %17, metadata !6960, metadata !DIExpression()), !dbg !6963
  %call100 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call2, %struct.gimple_seq_d* nonnull %17) #6, !dbg !7030
  br label %if.end101, !dbg !7030

if.end101:                                        ; preds = %cond.end92, %if.then99
  %18 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !7031
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !6957, metadata !DIExpression()), !dbg !6963
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !7032
  %call102 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %18, %struct.basic_block_def* %19) #6, !dbg !7033
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call102, metadata !6959, metadata !DIExpression()), !dbg !6963
  %20 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %12, align 8, !dbg !7034
  %def_stmt = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %20, i64 0, i32 2, !dbg !7034
  store %union.gimple_statement_d* %call102, %union.gimple_statement_d** %def_stmt, align 8, !dbg !7035
  call void @add_phi_arg(%union.gimple_statement_d* %call102, %union.tree_node* %call97, %struct.edge_def* %call2, i32 0) #6, !dbg !7036
  call void @add_phi_arg(%union.gimple_statement_d* %call102, %union.tree_node* %call95, %struct.edge_def* %call3, i32 0) #6, !dbg !7037
  call void @llvm.dbg.value(metadata i32 %add94, metadata !6951, metadata !DIExpression()), !dbg !6963
  br label %for.cond73, !dbg !7038, !llvm.loop !7039

for.end105:                                       ; preds = %for.cond73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !7041
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7041
  ret void, !dbg !7041
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_init_expr(%struct.chain* %chain, i32 %index) unnamed_addr #5 !dbg !7042 {
entry:
  call void @llvm.dbg.value(metadata %struct.chain* %chain, metadata !7046, metadata !DIExpression()), !dbg !7052
  call void @llvm.dbg.value(metadata i32 %index, metadata !7047, metadata !DIExpression()), !dbg !7052
  %type = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 0, !dbg !7053
  %0 = load i32, i32* %type, align 8, !dbg !7053
  %cmp = icmp eq i32 %0, 3, !dbg !7054
  br i1 %cmp, label %if.then, label %if.else, !dbg !7055

if.then:                                          ; preds = %entry
  %ch1 = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 3, !dbg !7056
  %1 = load %struct.chain*, %struct.chain** %ch1, align 8, !dbg !7056
  %call = tail call fastcc %union.tree_node* @get_init_expr(%struct.chain* %1, i32 %index) #7, !dbg !7057
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7048, metadata !DIExpression()), !dbg !7058
  %ch2 = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 4, !dbg !7059
  %2 = load %struct.chain*, %struct.chain** %ch2, align 8, !dbg !7059
  %call1 = tail call fastcc %union.tree_node* @get_init_expr(%struct.chain* %2, i32 %index) #7, !dbg !7060
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7051, metadata !DIExpression()), !dbg !7058
  %op = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 1, !dbg !7061
  %3 = load i32, i32* %op, align 4, !dbg !7061
  %rslt_type = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 2, !dbg !7061
  %4 = load %union.tree_node*, %union.tree_node** %rslt_type, align 8, !dbg !7061
  %call2 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %3, %union.tree_node* %4, %union.tree_node* %call, %union.tree_node* %call1) #6, !dbg !7061
  ret %union.tree_node* %call2, !dbg !7062

if.else:                                          ; preds = %entry
  %inits = getelementptr inbounds %struct.chain, %struct.chain* %chain, i64 0, i32 8, !dbg !7063
  %5 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %inits, align 8, !dbg !7063
  %tobool = icmp eq %struct.VEC_tree_heap* %5, null, !dbg !7063
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7063

cond.true:                                        ; preds = %if.else
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %5, i64 0, i32 0, !dbg !7063
  br label %cond.end, !dbg !7063

cond.end:                                         ; preds = %if.else, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %if.else ], !dbg !7063
  %call4 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %index) #7, !dbg !7063
  ret %union.tree_node* %call4, !dbg !7062
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_chain_p_heap_free(%struct.VEC_chain_p_heap** %vec_) unnamed_addr #0 !dbg !7064 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_chain_p_heap** %vec_, metadata !7066, metadata !DIExpression()), !dbg !7067
  %0 = load %struct.VEC_chain_p_heap*, %struct.VEC_chain_p_heap** %vec_, align 8, !dbg !7068
  %tobool = icmp eq %struct.VEC_chain_p_heap* %0, null, !dbg !7068
  br i1 %tobool, label %if.end, label %if.then, !dbg !7070

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_chain_p_heap* %0 to i8*, !dbg !7070
  tail call void @free(i8* nonnull %1) #6, !dbg !7068
  br label %if.end, !dbg !7068

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_chain_p_heap* null, %struct.VEC_chain_p_heap** %vec_, align 8, !dbg !7070
  ret void, !dbg !7070
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !7071 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !7077, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7078, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !7079, metadata !DIExpression()), !dbg !7080
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !7081
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !7081

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !7081
  %0 = load i32, i32* %num, align 4, !dbg !7081
  %cmp = icmp ugt i32 %0, %ix_, !dbg !7081
  br i1 %cmp, label %if.then, label %if.else, !dbg !7083

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !7084
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7084
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7084
  br label %return, !dbg !7084

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !7086

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !7088
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !7088
  store i32 %storemerge, i32* %ptr, align 4, !dbg !7088
  ret i32 %retval.0, !dbg !7083
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_loop(i32 %num) unnamed_addr #0 !dbg !7089 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !7093, metadata !DIExpression()), !dbg !7094
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7095
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !7095
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !7095
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !7095
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !7095
  %tobool = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !7095
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7095

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !7095
  br label %cond.end, !dbg !7095

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7095
  %call = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 %num) #7, !dbg !7095
  ret %struct.loop* %call, !dbg !7096
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !7097 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !7102, metadata !DIExpression()), !dbg !7103
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !7104
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !7104
  br i1 %tobool, label %if.end, label %if.then, !dbg !7106

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !7106
  tail call void @free(i8* nonnull %1) #6, !dbg !7104
  br label %if.end, !dbg !7104

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !7106
  ret void, !dbg !7106
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2060, !2061, !2062}
!llvm.ident = !{!2063}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "looparound_phis", scope: !2, file: !3, line: 332, type: !1383, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !479, globals: !2057, nameTableKind: None)
!3 = !DIFile(filename: "tree-predcom.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !154, !158, !163, !182, !189, !196, !390, !396, !401, !440, !466, !472}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !146, line: 31, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149, !150, !151, !152, !153}
!148 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!152 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!153 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !146, line: 91, baseType: !7, size: 32, elements: !155)
!155 = !{!156, !157}
!156 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!158 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !159, line: 474, baseType: !7, size: 32, elements: !160)
!159 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!160 = !{!161, !162}
!161 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!162 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !164, line: 280, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181}
!166 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !164, line: 1817, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188}
!184 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !164, line: 1805, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !164, line: 39, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389}
!198 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!203 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!204 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!205 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!206 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!207 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!208 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!209 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!210 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!213 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!214 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!215 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!216 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!217 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!218 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!219 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!220 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!221 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!222 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!223 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!224 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!225 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!226 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!227 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!228 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!229 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!230 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!231 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!232 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!233 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!234 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!235 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!236 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!237 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!238 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!239 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!240 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!241 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!242 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!243 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!244 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!245 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!246 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!247 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!248 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!249 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!250 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!251 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!252 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!253 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!254 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!255 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!256 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!257 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!258 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!259 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!260 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!261 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!262 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!263 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!264 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!265 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!266 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!267 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!268 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!269 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!270 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!271 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!272 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!273 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!274 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!275 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!276 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!277 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!278 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!279 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!280 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!281 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!282 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!283 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!284 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!285 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!286 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!287 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!288 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!289 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!290 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!291 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!292 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!293 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!294 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!295 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!296 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!297 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!298 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!299 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!300 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!301 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!302 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!303 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!304 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!305 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!306 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!307 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!308 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!309 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!310 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!311 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!312 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!313 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!314 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!315 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!316 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!317 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!318 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!320 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!321 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!322 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!323 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!324 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!325 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!326 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!327 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!328 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!329 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!330 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!331 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!332 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!333 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!334 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!335 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!336 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!337 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!338 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!339 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!340 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!341 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!342 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!343 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!344 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!345 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!346 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!347 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!348 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!349 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!350 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!362 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!363 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!364 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!365 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!366 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!367 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!383 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!384 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!385 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!386 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!387 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!388 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!389 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chain_type", file: !3, line: 247, baseType: !7, size: 32, elements: !391)
!391 = !{!392, !393, !394, !395}
!392 = !DIEnumerator(name: "CT_INVARIANT", value: 0, isUnsigned: true)
!393 = !DIEnumerator(name: "CT_LOAD", value: 1, isUnsigned: true)
!394 = !DIEnumerator(name: "CT_STORE_LOAD", value: 2, isUnsigned: true)
!395 = !DIEnumerator(name: "CT_COMBINATION", value: 3, isUnsigned: true)
!396 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ref_step_type", file: !3, line: 304, baseType: !7, size: 32, elements: !397)
!397 = !{!398, !399, !400}
!398 = !DIEnumerator(name: "RS_INVARIANT", value: 0, isUnsigned: true)
!399 = !DIEnumerator(name: "RS_NONZERO", value: 1, isUnsigned: true)
!400 = !DIEnumerator(name: "RS_ANY", value: 2, isUnsigned: true)
!401 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !402, line: 51, baseType: !7, size: 32, elements: !403)
!402 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!403 = !{!404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439}
!404 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!405 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!406 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!407 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!408 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!409 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!410 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!411 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!412 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!413 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!414 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!415 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!416 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!417 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!418 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!419 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!420 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!421 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!422 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!423 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!424 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!425 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!426 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!427 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!428 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!429 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!430 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!431 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!432 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!433 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!434 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!435 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!436 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!437 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!438 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!439 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!440 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !402, line: 727, baseType: !7, size: 32, elements: !441)
!441 = !{!442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465}
!442 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!443 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!444 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!445 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!446 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!447 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!448 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!449 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!450 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!451 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!452 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!453 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!454 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!455 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!456 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!457 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!458 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!459 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!460 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!461 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!462 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!463 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!464 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!465 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!466 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !402, line: 80, baseType: !7, size: 32, elements: !467)
!467 = !{!468, !469, !470, !471}
!468 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!469 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!470 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!471 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!472 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !473, line: 119, baseType: !7, size: 32, elements: !474)
!473 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!474 = !{!475, !476, !477, !478}
!475 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!476 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!477 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!478 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!479 = !{!480, !481, !482, !483, !486, !487, !196, !489, !1841, !1911, !1939, !1055, !1383, !1952, !1965, !2025, !958, !7, !2026, !2027, !1842, !793, !1964, !1977, !1921, !543, !1912, !2033, !2045, !814, !2047, !847, !484, !1867, !616, !2049, !466, !2052}
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!482 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !490, line: 56, baseType: !491)
!490 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !164, line: 3371, size: 1792, elements: !493)
!493 = !{!494, !527, !533, !546, !565, !576, !581, !590, !596, !609, !621, !659, !1169, !1197, !1214, !1215, !1220, !1229, !1235, !1240, !1244, !1248, !1492, !1539, !1545, !1551, !1558, !1571, !1585, !1602, !1614, !1636, !1651, !1823}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !492, file: !164, line: 3372, baseType: !495, size: 64)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !164, line: 360, size: 64, elements: !496)
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !495, file: !164, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !495, file: !164, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !495, file: !164, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !495, file: !164, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !495, file: !164, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !495, file: !164, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !495, file: !164, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !495, file: !164, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !495, file: !164, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !495, file: !164, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !495, file: !164, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !495, file: !164, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !495, file: !164, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !495, file: !164, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !495, file: !164, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !495, file: !164, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !495, file: !164, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !495, file: !164, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !495, file: !164, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !495, file: !164, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !495, file: !164, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !495, file: !164, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !495, file: !164, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !495, file: !164, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !495, file: !164, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !495, file: !164, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !495, file: !164, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !495, file: !164, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !495, file: !164, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !495, file: !164, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !492, file: !164, line: 3373, baseType: !528, size: 192)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !164, line: 402, size: 192, elements: !529)
!529 = !{!530, !531, !532}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !528, file: !164, line: 403, baseType: !495, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !528, file: !164, line: 404, baseType: !489, size: 64, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !528, file: !164, line: 405, baseType: !489, size: 64, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !492, file: !164, line: 3374, baseType: !534, size: 320)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !164, line: 1384, size: 320, elements: !535)
!535 = !{!536, !537}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !534, file: !164, line: 1385, baseType: !528, size: 192)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !534, file: !164, line: 1386, baseType: !538, size: 128, offset: 192)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !539, line: 58, baseType: !540)
!539 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !539, line: 54, size: 128, elements: !541)
!541 = !{!542, !544}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !540, file: !539, line: 56, baseType: !543, size: 64)
!543 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !540, file: !539, line: 57, baseType: !545, size: 64, offset: 64)
!545 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !492, file: !164, line: 3375, baseType: !547, size: 256)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !164, line: 1397, size: 256, elements: !548)
!548 = !{!549, !550}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !547, file: !164, line: 1398, baseType: !528, size: 192)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !547, file: !164, line: 1399, baseType: !551, size: 64, offset: 192)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !553, line: 52, size: 256, elements: !554)
!553 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!554 = !{!555, !556, !557, !558, !559, !560, !561}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !552, file: !553, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !552, file: !553, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !552, file: !553, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !552, file: !553, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !552, file: !553, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !552, file: !553, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !552, file: !553, line: 62, baseType: !562, size: 192, offset: 64)
!562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !543, size: 192, elements: !563)
!563 = !{!564}
!564 = !DISubrange(count: 3)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !492, file: !164, line: 3376, baseType: !566, size: 256)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !164, line: 1408, size: 256, elements: !567)
!567 = !{!568, !569}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !566, file: !164, line: 1409, baseType: !528, size: 192)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !566, file: !164, line: 1410, baseType: !570, size: 64, offset: 192)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !572, line: 27, size: 192, elements: !573)
!572 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!573 = !{!574, !575}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !571, file: !572, line: 29, baseType: !538, size: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !571, file: !572, line: 30, baseType: !5, size: 32, offset: 128)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !492, file: !164, line: 3377, baseType: !577, size: 256)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !164, line: 1437, size: 256, elements: !578)
!578 = !{!579, !580}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !577, file: !164, line: 1438, baseType: !528, size: 192)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !577, file: !164, line: 1439, baseType: !489, size: 64, offset: 192)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !492, file: !164, line: 3378, baseType: !582, size: 256)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !164, line: 1418, size: 256, elements: !583)
!583 = !{!584, !585, !586}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !582, file: !164, line: 1419, baseType: !528, size: 192)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !582, file: !164, line: 1420, baseType: !482, size: 32, offset: 192)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !582, file: !164, line: 1421, baseType: !587, size: 8, offset: 224)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 8, elements: !588)
!588 = !{!589}
!589 = !DISubrange(count: 1)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !492, file: !164, line: 3379, baseType: !591, size: 320)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !164, line: 1428, size: 320, elements: !592)
!592 = !{!593, !594, !595}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !591, file: !164, line: 1429, baseType: !528, size: 192)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !591, file: !164, line: 1430, baseType: !489, size: 64, offset: 192)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !591, file: !164, line: 1431, baseType: !489, size: 64, offset: 256)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !492, file: !164, line: 3380, baseType: !597, size: 320)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !164, line: 1460, size: 320, elements: !598)
!598 = !{!599, !600}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !597, file: !164, line: 1461, baseType: !528, size: 192)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !597, file: !164, line: 1462, baseType: !601, size: 128, offset: 192)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !602, line: 31, size: 128, elements: !603)
!602 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!603 = !{!604, !607, !608}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !601, file: !602, line: 32, baseType: !605, size: 64)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !481)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !601, file: !602, line: 33, baseType: !7, size: 32, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !601, file: !602, line: 34, baseType: !7, size: 32, offset: 96)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !492, file: !164, line: 3381, baseType: !610, size: 384)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !164, line: 2507, size: 384, elements: !611)
!611 = !{!612, !613, !618, !619, !620}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !610, file: !164, line: 2508, baseType: !528, size: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !610, file: !164, line: 2509, baseType: !614, size: 32, offset: 192)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !615, line: 58, baseType: !616)
!615 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !617, line: 44, baseType: !7)
!617 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!618 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !610, file: !164, line: 2510, baseType: !7, size: 32, offset: 224)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !610, file: !164, line: 2511, baseType: !489, size: 64, offset: 256)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !610, file: !164, line: 2512, baseType: !489, size: 64, offset: 320)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !492, file: !164, line: 3382, baseType: !622, size: 896)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !164, line: 2652, size: 896, elements: !623)
!623 = !{!624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !622, file: !164, line: 2653, baseType: !610, size: 384)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !622, file: !164, line: 2654, baseType: !489, size: 64, offset: 384)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !622, file: !164, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !622, file: !164, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !622, file: !164, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !622, file: !164, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !622, file: !164, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !622, file: !164, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !622, file: !164, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !622, file: !164, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !622, file: !164, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !622, file: !164, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !622, file: !164, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !622, file: !164, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !622, file: !164, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !622, file: !164, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !622, file: !164, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !622, file: !164, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !622, file: !164, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !622, file: !164, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !622, file: !164, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !622, file: !164, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !622, file: !164, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !622, file: !164, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !622, file: !164, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !622, file: !164, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !622, file: !164, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !622, file: !164, line: 2703, baseType: !7, size: 32, offset: 512)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !622, file: !164, line: 2705, baseType: !489, size: 64, offset: 576)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !622, file: !164, line: 2706, baseType: !489, size: 64, offset: 640)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !622, file: !164, line: 2707, baseType: !489, size: 64, offset: 704)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !622, file: !164, line: 2708, baseType: !489, size: 64, offset: 768)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !622, file: !164, line: 2711, baseType: !657, size: 64, offset: 832)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !164, line: 2711, flags: DIFlagFwdDecl)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !492, file: !164, line: 3383, baseType: !660, size: 960)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !164, line: 2756, size: 960, elements: !661)
!661 = !{!662, !663}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !660, file: !164, line: 2757, baseType: !622, size: 896)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !660, file: !164, line: 2758, baseType: !664, size: 64, offset: 896)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !490, line: 50, baseType: !665)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !667, line: 240, size: 384, elements: !668)
!667 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!668 = !{!669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !666, file: !667, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !666, file: !667, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !666, file: !667, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !666, file: !667, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !666, file: !667, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !666, file: !667, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !666, file: !667, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !666, file: !667, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !666, file: !667, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !666, file: !667, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !666, file: !667, line: 321, baseType: !680, size: 320, offset: 64)
!680 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !667, line: 315, size: 320, elements: !681)
!681 = !{!682, !1136, !1138, !1167, !1168}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !680, file: !667, line: 316, baseType: !683, size: 64)
!683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 64, elements: !588)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !667, line: 183, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !667, line: 166, size: 64, elements: !686)
!686 = !{!687, !688, !689, !690, !691, !699, !700, !712, !715, !775, !776, !1113, !1126, !1133}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !685, file: !667, line: 168, baseType: !482, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !685, file: !667, line: 169, baseType: !7, size: 32)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !685, file: !667, line: 170, baseType: !487, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !685, file: !667, line: 171, baseType: !664, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !685, file: !667, line: 172, baseType: !692, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !490, line: 53, baseType: !693)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !667, line: 359, size: 128, elements: !695)
!695 = !{!696, !697}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !694, file: !667, line: 360, baseType: !482, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !694, file: !667, line: 361, baseType: !698, size: 64, offset: 64)
!698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !664, size: 64, elements: !588)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !685, file: !667, line: 173, baseType: !5, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !685, file: !667, line: 174, baseType: !701, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !667, line: 133, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !667, line: 115, size: 32, elements: !703)
!703 = !{!704, !705, !706, !707, !708, !709, !710, !711}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !702, file: !667, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !702, file: !667, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !702, file: !667, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !702, file: !667, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !702, file: !667, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !702, file: !667, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !702, file: !667, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !702, file: !667, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !685, file: !667, line: 175, baseType: !713, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !667, line: 175, flags: DIFlagFwdDecl)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !685, file: !667, line: 176, baseType: !716, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !718, line: 75, size: 256, elements: !719)
!718 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!719 = !{!720, !734, !735, !736}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !717, file: !718, line: 76, baseType: !721, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !718, line: 68, baseType: !723)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !718, line: 63, size: 320, elements: !724)
!724 = !{!725, !727, !728, !729}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !723, file: !718, line: 64, baseType: !726, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !723, file: !718, line: 65, baseType: !726, size: 64, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !723, file: !718, line: 66, baseType: !7, size: 32, offset: 128)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !723, file: !718, line: 67, baseType: !730, size: 128, offset: 192)
!730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 128, elements: !732)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !718, line: 29, baseType: !543)
!732 = !{!733}
!733 = !DISubrange(count: 2)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !717, file: !718, line: 77, baseType: !721, size: 64, offset: 64)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !717, file: !718, line: 78, baseType: !7, size: 32, offset: 128)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !717, file: !718, line: 79, baseType: !737, size: 64, offset: 192)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !718, line: 49, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !718, line: 45, size: 832, elements: !740)
!740 = !{!741, !742, !743}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !739, file: !718, line: 46, baseType: !726, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !739, file: !718, line: 47, baseType: !716, size: 64, offset: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !739, file: !718, line: 48, baseType: !744, size: 704, offset: 128)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !745, line: 164, size: 704, elements: !746)
!745 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!746 = !{!747, !748, !758, !759, !760, !761, !762, !763, !767, !771, !772, !773, !774}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !744, file: !745, line: 166, baseType: !545, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !744, file: !745, line: 167, baseType: !749, size: 64, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !745, line: 157, size: 192, elements: !751)
!751 = !{!752, !753, !754}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !750, file: !745, line: 159, baseType: !484, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !750, file: !745, line: 160, baseType: !749, size: 64, offset: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !750, file: !745, line: 161, baseType: !755, size: 32, offset: 128)
!755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 32, elements: !756)
!756 = !{!757}
!757 = !DISubrange(count: 4)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !744, file: !745, line: 168, baseType: !484, size: 64, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !744, file: !745, line: 169, baseType: !484, size: 64, offset: 192)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !744, file: !745, line: 170, baseType: !484, size: 64, offset: 256)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !744, file: !745, line: 171, baseType: !545, size: 64, offset: 320)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !744, file: !745, line: 172, baseType: !482, size: 32, offset: 384)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !744, file: !745, line: 176, baseType: !764, size: 64, offset: 448)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DISubroutineType(types: !766)
!766 = !{!749, !486, !545}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !744, file: !745, line: 177, baseType: !768, size: 64, offset: 512)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{null, !486, !749}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !744, file: !745, line: 178, baseType: !486, size: 64, offset: 576)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !744, file: !745, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !744, file: !745, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !744, file: !745, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !685, file: !667, line: 177, baseType: !489, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !685, file: !667, line: 178, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !779)
!779 = !{!780, !1025, !1026, !1027, !1083, !1087, !1088, !1089, !1107, !1108, !1109, !1110, !1111, !1112}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !778, file: !135, line: 219, baseType: !781, size: 64)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !783)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !784)
!784 = !{!785}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !783, file: !135, line: 151, baseType: !786, size: 128)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !787)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !788)
!788 = !{!789, !790, !791}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !787, file: !135, line: 150, baseType: !7, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !787, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !787, file: !135, line: 150, baseType: !792, size: 64, offset: 64)
!792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !793, size: 64, elements: !588)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !490, line: 108, baseType: !794)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !796)
!796 = !{!797, !798, !799, !1017, !1018, !1019, !1020, !1021, !1022, !1023}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !795, file: !135, line: 124, baseType: !777, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !795, file: !135, line: 125, baseType: !777, size: 64, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !795, file: !135, line: 131, baseType: !800, size: 64, offset: 128)
!800 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !801)
!801 = !{!802, !1016}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !800, file: !135, line: 129, baseType: !803, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !490, line: 66, baseType: !804)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !402, line: 143, size: 192, elements: !806)
!806 = !{!807, !1014, !1015}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !805, file: !402, line: 145, baseType: !808, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !490, line: 69, baseType: !809)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !402, line: 136, size: 192, elements: !811)
!811 = !{!812, !1012, !1013}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !810, file: !402, line: 137, baseType: !813, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !490, line: 58, baseType: !814)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !402, line: 737, size: 768, elements: !816)
!816 = !{!817, !834, !867, !873, !878, !883, !890, !896, !902, !907, !921, !926, !932, !937, !947, !952, !970, !977, !984, !990, !995, !1001, !1007}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !815, file: !402, line: 738, baseType: !818, size: 256)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !402, line: 271, size: 256, elements: !819)
!819 = !{!820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !818, file: !402, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !818, file: !402, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !818, file: !402, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !818, file: !402, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !818, file: !402, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !818, file: !402, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !818, file: !402, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !818, file: !402, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !818, file: !402, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !818, file: !402, line: 312, baseType: !7, size: 32, offset: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !818, file: !402, line: 316, baseType: !614, size: 32, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !818, file: !402, line: 319, baseType: !7, size: 32, offset: 96)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !818, file: !402, line: 323, baseType: !777, size: 64, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !818, file: !402, line: 327, baseType: !489, size: 64, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !815, file: !402, line: 739, baseType: !835, size: 448)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !402, line: 350, size: 448, elements: !836)
!836 = !{!837, !865}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !835, file: !402, line: 353, baseType: !838, size: 384)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !402, line: 333, size: 384, elements: !839)
!839 = !{!840, !841, !848}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !838, file: !402, line: 336, baseType: !818, size: 256)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !838, file: !402, line: 343, baseType: !842, size: 64, offset: 256)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !473, line: 37, size: 128, elements: !844)
!844 = !{!845, !846}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !843, file: !473, line: 39, baseType: !842, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !843, file: !473, line: 40, baseType: !847, size: 64, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !838, file: !402, line: 344, baseType: !849, size: 64, offset: 320)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !473, line: 45, size: 320, elements: !851)
!851 = !{!852, !853}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !850, file: !473, line: 47, baseType: !849, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !850, file: !473, line: 48, baseType: !854, size: 256, offset: 64)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !164, line: 1883, size: 256, elements: !855)
!855 = !{!856, !858, !859, !864}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !854, file: !164, line: 1884, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !854, file: !164, line: 1885, baseType: !857, size: 64, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !854, file: !164, line: 1891, baseType: !860, size: 64, offset: 128)
!860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !854, file: !164, line: 1891, size: 64, elements: !861)
!861 = !{!862, !863}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !860, file: !164, line: 1891, baseType: !813, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !860, file: !164, line: 1891, baseType: !489, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !854, file: !164, line: 1892, baseType: !847, size: 64, offset: 192)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !835, file: !402, line: 359, baseType: !866, size: 64, offset: 384)
!866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 64, elements: !588)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !815, file: !402, line: 740, baseType: !868, size: 512)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !402, line: 365, size: 512, elements: !869)
!869 = !{!870, !871, !872}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !868, file: !402, line: 368, baseType: !838, size: 384)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !868, file: !402, line: 373, baseType: !489, size: 64, offset: 384)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !868, file: !402, line: 374, baseType: !489, size: 64, offset: 448)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !815, file: !402, line: 741, baseType: !874, size: 576)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !402, line: 380, size: 576, elements: !875)
!875 = !{!876, !877}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !874, file: !402, line: 383, baseType: !868, size: 512)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !874, file: !402, line: 389, baseType: !866, size: 64, offset: 512)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !815, file: !402, line: 742, baseType: !879, size: 320)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !402, line: 395, size: 320, elements: !880)
!880 = !{!881, !882}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !879, file: !402, line: 397, baseType: !818, size: 256)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !879, file: !402, line: 400, baseType: !803, size: 64, offset: 256)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !815, file: !402, line: 743, baseType: !884, size: 448)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !402, line: 406, size: 448, elements: !885)
!885 = !{!886, !887, !888, !889}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !884, file: !402, line: 408, baseType: !818, size: 256)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !884, file: !402, line: 412, baseType: !489, size: 64, offset: 256)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !884, file: !402, line: 420, baseType: !489, size: 64, offset: 320)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !884, file: !402, line: 423, baseType: !803, size: 64, offset: 384)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !815, file: !402, line: 744, baseType: !891, size: 384)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !402, line: 429, size: 384, elements: !892)
!892 = !{!893, !894, !895}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !891, file: !402, line: 431, baseType: !818, size: 256)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !891, file: !402, line: 434, baseType: !489, size: 64, offset: 256)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !891, file: !402, line: 437, baseType: !803, size: 64, offset: 320)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !815, file: !402, line: 745, baseType: !897, size: 384)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !402, line: 443, size: 384, elements: !898)
!898 = !{!899, !900, !901}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !897, file: !402, line: 445, baseType: !818, size: 256)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !897, file: !402, line: 449, baseType: !489, size: 64, offset: 256)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !897, file: !402, line: 453, baseType: !803, size: 64, offset: 320)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !815, file: !402, line: 746, baseType: !903, size: 320)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !402, line: 459, size: 320, elements: !904)
!904 = !{!905, !906}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !903, file: !402, line: 461, baseType: !818, size: 256)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !903, file: !402, line: 464, baseType: !489, size: 64, offset: 256)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !815, file: !402, line: 747, baseType: !908, size: 768)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !402, line: 469, size: 768, elements: !909)
!909 = !{!910, !911, !912, !913, !914}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !908, file: !402, line: 471, baseType: !818, size: 256)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !908, file: !402, line: 474, baseType: !7, size: 32, offset: 256)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !908, file: !402, line: 475, baseType: !7, size: 32, offset: 288)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !908, file: !402, line: 478, baseType: !489, size: 64, offset: 320)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !908, file: !402, line: 481, baseType: !915, size: 384, offset: 384)
!915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 384, elements: !588)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !164, line: 1917, size: 384, elements: !917)
!917 = !{!918, !919, !920}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !916, file: !164, line: 1920, baseType: !854, size: 256)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !916, file: !164, line: 1921, baseType: !489, size: 64, offset: 256)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !916, file: !164, line: 1922, baseType: !614, size: 32, offset: 320)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !815, file: !402, line: 748, baseType: !922, size: 320)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !402, line: 487, size: 320, elements: !923)
!923 = !{!924, !925}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !922, file: !402, line: 490, baseType: !818, size: 256)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !922, file: !402, line: 494, baseType: !482, size: 32, offset: 256)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !815, file: !402, line: 749, baseType: !927, size: 384)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !402, line: 500, size: 384, elements: !928)
!928 = !{!929, !930, !931}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !927, file: !402, line: 502, baseType: !818, size: 256)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !927, file: !402, line: 506, baseType: !803, size: 64, offset: 256)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !927, file: !402, line: 510, baseType: !803, size: 64, offset: 320)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !815, file: !402, line: 750, baseType: !933, size: 320)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !402, line: 529, size: 320, elements: !934)
!934 = !{!935, !936}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !933, file: !402, line: 531, baseType: !818, size: 256)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !933, file: !402, line: 540, baseType: !803, size: 64, offset: 256)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !815, file: !402, line: 751, baseType: !938, size: 704)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !402, line: 546, size: 704, elements: !939)
!939 = !{!940, !941, !942, !943, !944, !945, !946}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !938, file: !402, line: 549, baseType: !868, size: 512)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !938, file: !402, line: 553, baseType: !487, size: 64, offset: 512)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !938, file: !402, line: 557, baseType: !481, size: 8, offset: 576)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !938, file: !402, line: 558, baseType: !481, size: 8, offset: 584)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !938, file: !402, line: 559, baseType: !481, size: 8, offset: 592)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !938, file: !402, line: 560, baseType: !481, size: 8, offset: 600)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !938, file: !402, line: 566, baseType: !866, size: 64, offset: 640)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !815, file: !402, line: 752, baseType: !948, size: 384)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !402, line: 571, size: 384, elements: !949)
!949 = !{!950, !951}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !948, file: !402, line: 573, baseType: !879, size: 320)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !948, file: !402, line: 577, baseType: !489, size: 64, offset: 320)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !815, file: !402, line: 753, baseType: !953, size: 576)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !402, line: 600, size: 576, elements: !954)
!954 = !{!955, !956, !957, !960, !969}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !953, file: !402, line: 602, baseType: !879, size: 320)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !953, file: !402, line: 605, baseType: !489, size: 64, offset: 320)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !953, file: !402, line: 609, baseType: !958, size: 64, offset: 384)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !959, line: 46, baseType: !543)
!959 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!960 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !953, file: !402, line: 612, baseType: !961, size: 64, offset: 448)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !402, line: 581, size: 320, elements: !963)
!963 = !{!964, !965, !966, !967, !968}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !962, file: !402, line: 583, baseType: !196, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !962, file: !402, line: 586, baseType: !489, size: 64, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !962, file: !402, line: 589, baseType: !489, size: 64, offset: 128)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !962, file: !402, line: 592, baseType: !489, size: 64, offset: 192)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !962, file: !402, line: 595, baseType: !489, size: 64, offset: 256)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !953, file: !402, line: 616, baseType: !803, size: 64, offset: 512)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !815, file: !402, line: 754, baseType: !971, size: 512)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !402, line: 622, size: 512, elements: !972)
!972 = !{!973, !974, !975, !976}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !971, file: !402, line: 624, baseType: !879, size: 320)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !971, file: !402, line: 628, baseType: !489, size: 64, offset: 320)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !971, file: !402, line: 632, baseType: !489, size: 64, offset: 384)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !971, file: !402, line: 636, baseType: !489, size: 64, offset: 448)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !815, file: !402, line: 755, baseType: !978, size: 704)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !402, line: 642, size: 704, elements: !979)
!979 = !{!980, !981, !982, !983}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !978, file: !402, line: 644, baseType: !971, size: 512)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !978, file: !402, line: 648, baseType: !489, size: 64, offset: 512)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !978, file: !402, line: 652, baseType: !489, size: 64, offset: 576)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !978, file: !402, line: 653, baseType: !489, size: 64, offset: 640)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !815, file: !402, line: 756, baseType: !985, size: 448)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !402, line: 663, size: 448, elements: !986)
!986 = !{!987, !988, !989}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !985, file: !402, line: 665, baseType: !879, size: 320)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !985, file: !402, line: 668, baseType: !489, size: 64, offset: 320)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !985, file: !402, line: 673, baseType: !489, size: 64, offset: 384)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !815, file: !402, line: 757, baseType: !991, size: 384)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !402, line: 694, size: 384, elements: !992)
!992 = !{!993, !994}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !991, file: !402, line: 696, baseType: !879, size: 320)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !991, file: !402, line: 699, baseType: !489, size: 64, offset: 320)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !815, file: !402, line: 758, baseType: !996, size: 384)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !402, line: 681, size: 384, elements: !997)
!997 = !{!998, !999, !1000}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !996, file: !402, line: 683, baseType: !818, size: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !996, file: !402, line: 686, baseType: !489, size: 64, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !996, file: !402, line: 689, baseType: !489, size: 64, offset: 320)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !815, file: !402, line: 759, baseType: !1002, size: 384)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !402, line: 707, size: 384, elements: !1003)
!1003 = !{!1004, !1005, !1006}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1002, file: !402, line: 709, baseType: !818, size: 256)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1002, file: !402, line: 712, baseType: !489, size: 64, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1002, file: !402, line: 712, baseType: !489, size: 64, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !815, file: !402, line: 760, baseType: !1008, size: 320)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !402, line: 718, size: 320, elements: !1009)
!1009 = !{!1010, !1011}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1008, file: !402, line: 720, baseType: !818, size: 256)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1008, file: !402, line: 723, baseType: !489, size: 64, offset: 256)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !810, file: !402, line: 138, baseType: !809, size: 64, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !810, file: !402, line: 139, baseType: !809, size: 64, offset: 128)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !805, file: !402, line: 146, baseType: !808, size: 64, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !805, file: !402, line: 152, baseType: !803, size: 64, offset: 128)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !800, file: !135, line: 130, baseType: !664, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !795, file: !135, line: 134, baseType: !486, size: 64, offset: 192)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !795, file: !135, line: 137, baseType: !489, size: 64, offset: 256)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !795, file: !135, line: 138, baseType: !614, size: 32, offset: 320)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !795, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !795, file: !135, line: 144, baseType: !482, size: 32, offset: 384)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !795, file: !135, line: 145, baseType: !482, size: 32, offset: 416)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !795, file: !135, line: 146, baseType: !1024, size: 64, offset: 448)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !545)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !778, file: !135, line: 220, baseType: !781, size: 64, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !778, file: !135, line: 223, baseType: !486, size: 64, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !778, file: !135, line: 226, baseType: !1028, size: 64, offset: 192)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !146, line: 100, size: 1216, elements: !1030)
!1030 = !{!1031, !1032, !1033, !1034, !1035, !1040, !1041, !1042, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1073, !1081, !1082}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1029, file: !146, line: 102, baseType: !482, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1029, file: !146, line: 105, baseType: !7, size: 32, offset: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1029, file: !146, line: 108, baseType: !777, size: 64, offset: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1029, file: !146, line: 111, baseType: !777, size: 64, offset: 128)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1029, file: !146, line: 114, baseType: !1036, size: 64, offset: 192)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !146, line: 41, size: 64, elements: !1037)
!1037 = !{!1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1036, file: !146, line: 42, baseType: !145, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1036, file: !146, line: 43, baseType: !7, size: 32, offset: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1029, file: !146, line: 117, baseType: !7, size: 32, offset: 256)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1029, file: !146, line: 120, baseType: !7, size: 32, offset: 288)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1029, file: !146, line: 123, baseType: !1043, size: 64, offset: 320)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !146, line: 87, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !146, line: 87, size: 128, elements: !1046)
!1046 = !{!1047}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1045, file: !146, line: 87, baseType: !1048, size: 128)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !146, line: 85, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !146, line: 85, size: 128, elements: !1050)
!1050 = !{!1051, !1052, !1053}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1049, file: !146, line: 85, baseType: !7, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1049, file: !146, line: 85, baseType: !7, size: 32, offset: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1049, file: !146, line: 85, baseType: !1054, size: 64, offset: 64)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1055, size: 64, elements: !588)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !146, line: 84, baseType: !1028)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1029, file: !146, line: 126, baseType: !1028, size: 64, offset: 384)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1029, file: !146, line: 129, baseType: !1028, size: 64, offset: 448)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1029, file: !146, line: 132, baseType: !486, size: 64, offset: 512)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1029, file: !146, line: 139, baseType: !489, size: 64, offset: 576)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1029, file: !146, line: 143, baseType: !538, size: 128, offset: 640)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1029, file: !146, line: 146, baseType: !538, size: 128, offset: 768)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1029, file: !146, line: 148, baseType: !481, size: 8, offset: 896)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1029, file: !146, line: 149, baseType: !481, size: 8, offset: 904)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1029, file: !146, line: 153, baseType: !154, size: 32, offset: 928)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1029, file: !146, line: 156, baseType: !1066, size: 64, offset: 960)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !146, line: 48, size: 320, elements: !1068)
!1068 = !{!1069, !1070, !1071, !1072}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1067, file: !146, line: 50, baseType: !813, size: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1067, file: !146, line: 59, baseType: !538, size: 128, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1067, file: !146, line: 64, baseType: !481, size: 8, offset: 192)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1067, file: !146, line: 67, baseType: !1066, size: 64, offset: 256)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1029, file: !146, line: 159, baseType: !1074, size: 64, offset: 1024)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !146, line: 72, size: 256, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1080}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1075, file: !146, line: 74, baseType: !794, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1075, file: !146, line: 77, baseType: !1074, size: 64, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1075, file: !146, line: 78, baseType: !1074, size: 64, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1075, file: !146, line: 81, baseType: !1074, size: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1029, file: !146, line: 162, baseType: !481, size: 8, offset: 1088)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1029, file: !146, line: 166, baseType: !489, size: 64, offset: 1152)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !778, file: !135, line: 229, baseType: !1084, size: 128, offset: 256)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1085, size: 128, elements: !732)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !778, file: !135, line: 232, baseType: !777, size: 64, offset: 384)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !778, file: !135, line: 233, baseType: !777, size: 64, offset: 448)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !778, file: !135, line: 238, baseType: !1090, size: 64, offset: 512)
!1090 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1091)
!1091 = !{!1092, !1098}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1090, file: !135, line: 236, baseType: !1093, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1095)
!1095 = !{!1096, !1097}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1094, file: !135, line: 275, baseType: !803, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1094, file: !135, line: 278, baseType: !803, size: 64, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1090, file: !135, line: 237, baseType: !1099, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1101)
!1101 = !{!1102, !1103, !1104, !1105, !1106}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1100, file: !135, line: 261, baseType: !664, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1100, file: !135, line: 262, baseType: !664, size: 64, offset: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1100, file: !135, line: 266, baseType: !664, size: 64, offset: 128)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1100, file: !135, line: 267, baseType: !664, size: 64, offset: 192)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1100, file: !135, line: 270, baseType: !482, size: 32, offset: 256)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !778, file: !135, line: 241, baseType: !1024, size: 64, offset: 576)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !778, file: !135, line: 244, baseType: !482, size: 32, offset: 640)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !778, file: !135, line: 247, baseType: !482, size: 32, offset: 672)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !778, file: !135, line: 250, baseType: !482, size: 32, offset: 704)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !778, file: !135, line: 253, baseType: !482, size: 32, offset: 736)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !778, file: !135, line: 256, baseType: !482, size: 32, offset: 768)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !685, file: !667, line: 179, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !667, line: 150, baseType: !1116)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !667, line: 142, size: 320, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1124, !1125}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1116, file: !667, line: 144, baseType: !489, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1116, file: !667, line: 145, baseType: !664, size: 64, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1116, file: !667, line: 146, baseType: !664, size: 64, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1116, file: !667, line: 147, baseType: !1122, size: 32, offset: 192)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1123, line: 31, baseType: !482)
!1123 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1116, file: !667, line: 148, baseType: !7, size: 32, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1116, file: !667, line: 149, baseType: !481, size: 8, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !685, file: !667, line: 180, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !667, line: 162, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !667, line: 159, size: 128, elements: !1130)
!1130 = !{!1131, !1132}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1129, file: !667, line: 160, baseType: !489, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1129, file: !667, line: 161, baseType: !545, size: 64, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !685, file: !667, line: 181, baseType: !1134, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !667, line: 181, flags: DIFlagFwdDecl)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !680, file: !667, line: 317, baseType: !1137, size: 64)
!1137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !545, size: 64, elements: !588)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !680, file: !667, line: 318, baseType: !1139, size: 320)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !667, line: 188, size: 320, elements: !1140)
!1140 = !{!1141, !1143, !1166}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1139, file: !667, line: 190, baseType: !1142, size: 192)
!1142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 192, elements: !563)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1139, file: !667, line: 193, baseType: !1144, size: 64, offset: 192)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !667, line: 206, size: 320, elements: !1146)
!1146 = !{!1147, !1151, !1152, !1153, !1165}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1145, file: !667, line: 208, baseType: !1148, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !490, line: 62, baseType: !1150)
!1150 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !490, line: 61, flags: DIFlagFwdDecl)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1145, file: !667, line: 211, baseType: !7, size: 32, offset: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1145, file: !667, line: 214, baseType: !545, size: 64, offset: 128)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1145, file: !667, line: 224, baseType: !1154, size: 64, offset: 192)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !667, line: 202, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !667, line: 202, size: 128, elements: !1157)
!1157 = !{!1158}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1156, file: !667, line: 202, baseType: !1159, size: 128)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !667, line: 200, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !667, line: 200, size: 128, elements: !1161)
!1161 = !{!1162, !1163, !1164}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1160, file: !667, line: 200, baseType: !7, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1160, file: !667, line: 200, baseType: !7, size: 32, offset: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1160, file: !667, line: 200, baseType: !698, size: 64, offset: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1145, file: !667, line: 234, baseType: !1154, size: 64, offset: 256)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1139, file: !667, line: 197, baseType: !545, size: 64, offset: 256)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !680, file: !667, line: 319, baseType: !552, size: 256)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !680, file: !667, line: 320, baseType: !571, size: 192)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !492, file: !164, line: 3384, baseType: !1170, size: 1472)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !164, line: 3114, size: 1472, elements: !1171)
!1171 = !{!1172, !1193, !1194, !1195, !1196}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1170, file: !164, line: 3115, baseType: !1173, size: 1216)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !164, line: 2984, size: 1216, elements: !1174)
!1174 = !{!1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1173, file: !164, line: 2985, baseType: !660, size: 960)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1173, file: !164, line: 2986, baseType: !489, size: 64, offset: 960)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1173, file: !164, line: 2987, baseType: !489, size: 64, offset: 1024)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1173, file: !164, line: 2988, baseType: !489, size: 64, offset: 1088)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1173, file: !164, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1173, file: !164, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1173, file: !164, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1173, file: !164, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1173, file: !164, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1173, file: !164, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1173, file: !164, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1173, file: !164, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1173, file: !164, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1173, file: !164, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1173, file: !164, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1173, file: !164, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1173, file: !164, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1173, file: !164, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1170, file: !164, line: 3117, baseType: !489, size: 64, offset: 1216)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1170, file: !164, line: 3119, baseType: !489, size: 64, offset: 1280)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1170, file: !164, line: 3121, baseType: !489, size: 64, offset: 1344)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1170, file: !164, line: 3123, baseType: !489, size: 64, offset: 1408)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !492, file: !164, line: 3385, baseType: !1198, size: 1088)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !164, line: 2874, size: 1088, elements: !1199)
!1199 = !{!1200, !1201, !1202}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1198, file: !164, line: 2875, baseType: !660, size: 960)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1198, file: !164, line: 2876, baseType: !664, size: 64, offset: 960)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1198, file: !164, line: 2877, baseType: !1203, size: 64, offset: 1024)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1205, line: 172, size: 128, elements: !1206)
!1205 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1206 = !{!1207, !1208, !1209, !1210, !1211, !1212, !1213}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1204, file: !1205, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1204, file: !1205, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1204, file: !1205, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1204, file: !1205, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1204, file: !1205, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1204, file: !1205, line: 195, baseType: !7, size: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1204, file: !1205, line: 199, baseType: !489, size: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !492, file: !164, line: 3386, baseType: !1173, size: 1216)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !492, file: !164, line: 3387, baseType: !1216, size: 1280)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !164, line: 3093, size: 1280, elements: !1217)
!1217 = !{!1218, !1219}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1216, file: !164, line: 3094, baseType: !1173, size: 1216)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1216, file: !164, line: 3095, baseType: !1203, size: 64, offset: 1216)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !492, file: !164, line: 3388, baseType: !1221, size: 1216)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !164, line: 2824, size: 1216, elements: !1222)
!1222 = !{!1223, !1224, !1225, !1226, !1227, !1228}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1221, file: !164, line: 2825, baseType: !622, size: 896)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1221, file: !164, line: 2827, baseType: !489, size: 64, offset: 896)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1221, file: !164, line: 2828, baseType: !489, size: 64, offset: 960)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1221, file: !164, line: 2829, baseType: !489, size: 64, offset: 1024)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1221, file: !164, line: 2830, baseType: !489, size: 64, offset: 1088)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1221, file: !164, line: 2831, baseType: !489, size: 64, offset: 1152)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !492, file: !164, line: 3389, baseType: !1230, size: 1024)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !164, line: 2850, size: 1024, elements: !1231)
!1231 = !{!1232, !1233, !1234}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1230, file: !164, line: 2851, baseType: !660, size: 960)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1230, file: !164, line: 2852, baseType: !482, size: 32, offset: 960)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1230, file: !164, line: 2853, baseType: !482, size: 32, offset: 992)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !492, file: !164, line: 3390, baseType: !1236, size: 1024)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !164, line: 2857, size: 1024, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1236, file: !164, line: 2858, baseType: !660, size: 960)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1236, file: !164, line: 2859, baseType: !1203, size: 64, offset: 960)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !492, file: !164, line: 3391, baseType: !1241, size: 960)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !164, line: 2862, size: 960, elements: !1242)
!1242 = !{!1243}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1241, file: !164, line: 2863, baseType: !660, size: 960)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !492, file: !164, line: 3392, baseType: !1245, size: 1472)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !164, line: 3304, size: 1472, elements: !1246)
!1246 = !{!1247}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1245, file: !164, line: 3305, baseType: !1170, size: 1472)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !492, file: !164, line: 3393, baseType: !1249, size: 1792)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !164, line: 3248, size: 1792, elements: !1250)
!1250 = !{!1251, !1252, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1249, file: !164, line: 3249, baseType: !1170, size: 1472)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1249, file: !164, line: 3251, baseType: !1253, size: 64, offset: 1472)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1255, line: 463, size: 1152, elements: !1256)
!1255 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1256 = !{!1257, !1260, !1291, !1292, !1407, !1415, !1416, !1417, !1418, !1419, !1420, !1444, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1254, file: !1255, line: 464, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1255, line: 464, flags: DIFlagFwdDecl)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1254, file: !1255, line: 467, baseType: !1261, size: 64, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1263)
!1263 = !{!1264, !1266, !1267, !1280, !1281, !1282, !1283, !1284, !1285, !1287, !1289, !1290}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1262, file: !135, line: 377, baseType: !1265, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !490, line: 111, baseType: !777)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1262, file: !135, line: 378, baseType: !1265, size: 64, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1262, file: !135, line: 381, baseType: !1268, size: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1271)
!1271 = !{!1272}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1270, file: !135, line: 282, baseType: !1273, size: 128)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1274)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1275)
!1275 = !{!1276, !1277, !1278}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1274, file: !135, line: 281, baseType: !7, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1274, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1274, file: !135, line: 281, baseType: !1279, size: 64, offset: 64)
!1279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 64, elements: !588)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1262, file: !135, line: 384, baseType: !482, size: 32, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1262, file: !135, line: 387, baseType: !482, size: 32, offset: 224)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1262, file: !135, line: 390, baseType: !482, size: 32, offset: 256)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1262, file: !135, line: 394, baseType: !1268, size: 64, offset: 320)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1262, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1262, file: !135, line: 399, baseType: !1286, size: 64, offset: 416)
!1286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !732)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1262, file: !135, line: 402, baseType: !1288, size: 64, offset: 480)
!1288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !732)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1262, file: !135, line: 406, baseType: !482, size: 32, offset: 544)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1262, file: !135, line: 409, baseType: !482, size: 32, offset: 576)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1254, file: !1255, line: 470, baseType: !804, size: 64, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1254, file: !1255, line: 473, baseType: !1293, size: 64, offset: 192)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1205, line: 39, size: 1152, elements: !1295)
!1295 = !{!1296, !1346, !1359, !1371, !1372, !1384, !1385, !1389, !1390, !1391, !1392, !1393}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1294, file: !1205, line: 41, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1298, line: 144, baseType: !1299)
!1298 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1298, line: 100, size: 896, elements: !1301)
!1301 = !{!1302, !1310, !1315, !1320, !1322, !1323, !1324, !1325, !1326, !1327, !1332, !1334, !1335, !1340, !1345}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1300, file: !1298, line: 102, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1298, line: 52, baseType: !1304)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!1307, !1308}
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1298, line: 47, baseType: !7)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1300, file: !1298, line: 105, baseType: !1311, size: 64, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1298, line: 59, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!482, !1308, !1308}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1300, file: !1298, line: 108, baseType: !1316, size: 64, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1298, line: 63, baseType: !1317)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{null, !486}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1300, file: !1298, line: 111, baseType: !1321, size: 64, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1300, file: !1298, line: 114, baseType: !958, size: 64, offset: 256)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1300, file: !1298, line: 117, baseType: !958, size: 64, offset: 320)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1300, file: !1298, line: 120, baseType: !958, size: 64, offset: 384)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1300, file: !1298, line: 124, baseType: !7, size: 32, offset: 448)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1300, file: !1298, line: 128, baseType: !7, size: 32, offset: 480)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1300, file: !1298, line: 131, baseType: !1328, size: 64, offset: 512)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1298, line: 75, baseType: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!486, !958, !958}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1300, file: !1298, line: 132, baseType: !1333, size: 64, offset: 576)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1298, line: 78, baseType: !1317)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1300, file: !1298, line: 135, baseType: !486, size: 64, offset: 640)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1300, file: !1298, line: 136, baseType: !1336, size: 64, offset: 704)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1298, line: 82, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!486, !486, !958, !958}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1300, file: !1298, line: 137, baseType: !1341, size: 64, offset: 768)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1298, line: 83, baseType: !1342)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{null, !486, !486}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1300, file: !1298, line: 141, baseType: !7, size: 32, offset: 832)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1294, file: !1205, line: 48, baseType: !1347, size: 64, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !402, line: 35, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !402, line: 35, size: 128, elements: !1350)
!1350 = !{!1351}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1349, file: !402, line: 35, baseType: !1352, size: 128)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !402, line: 33, baseType: !1353)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !402, line: 33, size: 128, elements: !1354)
!1354 = !{!1355, !1356, !1357}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1353, file: !402, line: 33, baseType: !7, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1353, file: !402, line: 33, baseType: !7, size: 32, offset: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1353, file: !402, line: 33, baseType: !1358, size: 64, offset: 64)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !813, size: 64, elements: !588)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1294, file: !1205, line: 51, baseType: !1360, size: 64, offset: 128)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !164, line: 183, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !164, line: 183, size: 128, elements: !1363)
!1363 = !{!1364}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1362, file: !164, line: 183, baseType: !1365, size: 128)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !164, line: 182, baseType: !1366)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !164, line: 182, size: 128, elements: !1367)
!1367 = !{!1368, !1369, !1370}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1366, file: !164, line: 182, baseType: !7, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1366, file: !164, line: 182, baseType: !7, size: 32, offset: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1366, file: !164, line: 182, baseType: !866, size: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1294, file: !1205, line: 54, baseType: !489, size: 64, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1294, file: !1205, line: 57, baseType: !1373, size: 128, offset: 256)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1374, line: 31, size: 128, elements: !1375)
!1374 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1375 = !{!1376, !1377, !1378, !1379, !1380, !1381, !1382}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1373, file: !1374, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1373, file: !1374, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1373, file: !1374, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1373, file: !1374, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1373, file: !1374, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1373, file: !1374, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1373, file: !1374, line: 56, baseType: !1383, size: 64, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !490, line: 47, baseType: !716)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1294, file: !1205, line: 60, baseType: !1373, size: 128, offset: 384)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1294, file: !1205, line: 64, baseType: !1386, size: 64, offset: 512)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1388, line: 33, flags: DIFlagFwdDecl)
!1388 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1294, file: !1205, line: 67, baseType: !489, size: 64, offset: 576)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1294, file: !1205, line: 73, baseType: !1297, size: 64, offset: 640)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1294, file: !1205, line: 77, baseType: !1383, size: 64, offset: 704)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1294, file: !1205, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1294, file: !1205, line: 82, baseType: !1394, size: 320, offset: 832)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !473, line: 62, size: 320, elements: !1395)
!1395 = !{!1396, !1402, !1403, !1404, !1405, !1406}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1394, file: !473, line: 63, baseType: !1397, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !473, line: 56, size: 128, elements: !1399)
!1399 = !{!1400, !1401}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1398, file: !473, line: 57, baseType: !1397, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1398, file: !473, line: 58, baseType: !587, size: 8, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1394, file: !473, line: 64, baseType: !7, size: 32, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1394, file: !473, line: 66, baseType: !7, size: 32, offset: 96)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1394, file: !473, line: 68, baseType: !481, size: 8, offset: 128)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1394, file: !473, line: 70, baseType: !842, size: 64, offset: 192)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1394, file: !473, line: 71, baseType: !849, size: 64, offset: 256)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1254, file: !1255, line: 476, baseType: !1408, size: 64, offset: 256)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !146, line: 187, size: 256, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1414}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1409, file: !146, line: 189, baseType: !482, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1409, file: !146, line: 192, baseType: !1043, size: 64, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1409, file: !146, line: 197, baseType: !1297, size: 64, offset: 128)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1409, file: !146, line: 200, baseType: !1028, size: 64, offset: 192)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1254, file: !1255, line: 479, baseType: !1297, size: 64, offset: 320)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1254, file: !1255, line: 484, baseType: !489, size: 64, offset: 384)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1254, file: !1255, line: 488, baseType: !489, size: 64, offset: 448)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1254, file: !1255, line: 493, baseType: !489, size: 64, offset: 512)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1254, file: !1255, line: 496, baseType: !489, size: 64, offset: 576)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1254, file: !1255, line: 501, baseType: !1421, size: 64, offset: 640)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !159, line: 2355, size: 576, elements: !1423)
!1423 = !{!1424, !1427, !1428, !1429, !1430, !1432, !1433, !1438, !1439, !1440, !1441, !1442, !1443}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1422, file: !159, line: 2356, baseType: !1425, size: 64)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !159, line: 2356, flags: DIFlagFwdDecl)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1422, file: !159, line: 2357, baseType: !487, size: 64, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1422, file: !159, line: 2358, baseType: !482, size: 32, offset: 128)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1422, file: !159, line: 2359, baseType: !482, size: 32, offset: 160)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1422, file: !159, line: 2360, baseType: !1431, size: 128, offset: 192)
!1431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 128, elements: !756)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1422, file: !159, line: 2364, baseType: !482, size: 32, offset: 320)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1422, file: !159, line: 2367, baseType: !1434, size: 128, offset: 384)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !159, line: 2349, size: 128, elements: !1435)
!1435 = !{!1436, !1437}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1434, file: !159, line: 2351, baseType: !664, size: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1434, file: !159, line: 2352, baseType: !545, size: 64, offset: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1422, file: !159, line: 2371, baseType: !158, size: 32, offset: 512)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1422, file: !159, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1422, file: !159, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1422, file: !159, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1422, file: !159, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1422, file: !159, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1254, file: !1255, line: 504, baseType: !1445, size: 64, offset: 704)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1255, line: 504, flags: DIFlagFwdDecl)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1254, file: !1255, line: 507, baseType: !1297, size: 64, offset: 768)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1254, file: !1255, line: 510, baseType: !482, size: 32, offset: 832)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1254, file: !1255, line: 513, baseType: !482, size: 32, offset: 864)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1254, file: !1255, line: 516, baseType: !614, size: 32, offset: 896)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1254, file: !1255, line: 519, baseType: !614, size: 32, offset: 928)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1254, file: !1255, line: 522, baseType: !7, size: 32, offset: 960)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1254, file: !1255, line: 523, baseType: !7, size: 32, offset: 992)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1254, file: !1255, line: 528, baseType: !487, size: 64, offset: 1024)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1254, file: !1255, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1254, file: !1255, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1254, file: !1255, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1254, file: !1255, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1254, file: !1255, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1254, file: !1255, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1254, file: !1255, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1254, file: !1255, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1254, file: !1255, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1254, file: !1255, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1254, file: !1255, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1254, file: !1255, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1254, file: !1255, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1254, file: !1255, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1254, file: !1255, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1254, file: !1255, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1249, file: !164, line: 3254, baseType: !489, size: 64, offset: 1536)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1249, file: !164, line: 3257, baseType: !489, size: 64, offset: 1600)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1249, file: !164, line: 3258, baseType: !489, size: 64, offset: 1664)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1249, file: !164, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1249, file: !164, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1249, file: !164, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1249, file: !164, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1249, file: !164, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1249, file: !164, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1249, file: !164, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1249, file: !164, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1249, file: !164, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1249, file: !164, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1249, file: !164, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1249, file: !164, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1249, file: !164, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1249, file: !164, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1249, file: !164, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1249, file: !164, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1249, file: !164, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1249, file: !164, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !492, file: !164, line: 3394, baseType: !1493, size: 1344)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !164, line: 2279, size: 1344, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1493, file: !164, line: 2280, baseType: !528, size: 192)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1493, file: !164, line: 2281, baseType: !489, size: 64, offset: 192)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1493, file: !164, line: 2282, baseType: !489, size: 64, offset: 256)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1493, file: !164, line: 2283, baseType: !489, size: 64, offset: 320)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1493, file: !164, line: 2284, baseType: !489, size: 64, offset: 384)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1493, file: !164, line: 2285, baseType: !7, size: 32, offset: 448)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1493, file: !164, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1493, file: !164, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1493, file: !164, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1493, file: !164, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1493, file: !164, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1493, file: !164, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1493, file: !164, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1493, file: !164, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1493, file: !164, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1493, file: !164, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1493, file: !164, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1493, file: !164, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1493, file: !164, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1493, file: !164, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1493, file: !164, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1493, file: !164, line: 2305, baseType: !7, size: 32, offset: 512)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1493, file: !164, line: 2306, baseType: !1122, size: 32, offset: 544)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1493, file: !164, line: 2307, baseType: !489, size: 64, offset: 576)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1493, file: !164, line: 2308, baseType: !489, size: 64, offset: 640)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1493, file: !164, line: 2314, baseType: !1521, size: 64, offset: 704)
!1521 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !164, line: 2309, size: 64, elements: !1522)
!1522 = !{!1523, !1524, !1525}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1521, file: !164, line: 2310, baseType: !482, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1521, file: !164, line: 2311, baseType: !487, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1521, file: !164, line: 2312, baseType: !1526, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !164, line: 2277, flags: DIFlagFwdDecl)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1493, file: !164, line: 2315, baseType: !489, size: 64, offset: 768)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1493, file: !164, line: 2316, baseType: !489, size: 64, offset: 832)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1493, file: !164, line: 2317, baseType: !489, size: 64, offset: 896)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1493, file: !164, line: 2318, baseType: !489, size: 64, offset: 960)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1493, file: !164, line: 2319, baseType: !489, size: 64, offset: 1024)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1493, file: !164, line: 2320, baseType: !489, size: 64, offset: 1088)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1493, file: !164, line: 2321, baseType: !489, size: 64, offset: 1152)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1493, file: !164, line: 2322, baseType: !489, size: 64, offset: 1216)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1493, file: !164, line: 2324, baseType: !1537, size: 64, offset: 1280)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !164, line: 2324, flags: DIFlagFwdDecl)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !492, file: !164, line: 3395, baseType: !1540, size: 320)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !164, line: 1469, size: 320, elements: !1541)
!1541 = !{!1542, !1543, !1544}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1540, file: !164, line: 1470, baseType: !528, size: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1540, file: !164, line: 1471, baseType: !489, size: 64, offset: 192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1540, file: !164, line: 1472, baseType: !489, size: 64, offset: 256)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !492, file: !164, line: 3396, baseType: !1546, size: 320)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !164, line: 1482, size: 320, elements: !1547)
!1547 = !{!1548, !1549, !1550}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1546, file: !164, line: 1483, baseType: !528, size: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1546, file: !164, line: 1484, baseType: !482, size: 32, offset: 192)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1546, file: !164, line: 1485, baseType: !866, size: 64, offset: 256)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !492, file: !164, line: 3397, baseType: !1552, size: 384)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !164, line: 1829, size: 384, elements: !1553)
!1553 = !{!1554, !1555, !1556, !1557}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1552, file: !164, line: 1830, baseType: !528, size: 192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1552, file: !164, line: 1831, baseType: !614, size: 32, offset: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1552, file: !164, line: 1832, baseType: !489, size: 64, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1552, file: !164, line: 1835, baseType: !866, size: 64, offset: 320)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !492, file: !164, line: 3398, baseType: !1559, size: 704)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !164, line: 1898, size: 704, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1564, !1565, !1570}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1559, file: !164, line: 1899, baseType: !528, size: 192)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1559, file: !164, line: 1902, baseType: !489, size: 64, offset: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1559, file: !164, line: 1905, baseType: !813, size: 64, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1559, file: !164, line: 1908, baseType: !7, size: 32, offset: 320)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1559, file: !164, line: 1911, baseType: !1566, size: 64, offset: 384)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1205, line: 117, size: 128, elements: !1568)
!1568 = !{!1569}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1567, file: !1205, line: 120, baseType: !1373, size: 128)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1559, file: !164, line: 1914, baseType: !854, size: 256, offset: 448)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !492, file: !164, line: 3399, baseType: !1572, size: 704)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !164, line: 2008, size: 704, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1572, file: !164, line: 2009, baseType: !528, size: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1572, file: !164, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1572, file: !164, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1572, file: !164, line: 2014, baseType: !614, size: 32, offset: 224)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1572, file: !164, line: 2016, baseType: !489, size: 64, offset: 256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1572, file: !164, line: 2017, baseType: !1360, size: 64, offset: 320)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1572, file: !164, line: 2019, baseType: !489, size: 64, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1572, file: !164, line: 2020, baseType: !489, size: 64, offset: 448)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1572, file: !164, line: 2021, baseType: !489, size: 64, offset: 512)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1572, file: !164, line: 2022, baseType: !489, size: 64, offset: 576)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1572, file: !164, line: 2023, baseType: !489, size: 64, offset: 640)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !492, file: !164, line: 3400, baseType: !1586, size: 832)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !164, line: 2430, size: 832, elements: !1587)
!1587 = !{!1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1586, file: !164, line: 2431, baseType: !528, size: 192)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1586, file: !164, line: 2433, baseType: !489, size: 64, offset: 192)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1586, file: !164, line: 2434, baseType: !489, size: 64, offset: 256)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1586, file: !164, line: 2435, baseType: !489, size: 64, offset: 320)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1586, file: !164, line: 2436, baseType: !489, size: 64, offset: 384)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1586, file: !164, line: 2437, baseType: !1360, size: 64, offset: 448)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1586, file: !164, line: 2438, baseType: !489, size: 64, offset: 512)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1586, file: !164, line: 2440, baseType: !489, size: 64, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1586, file: !164, line: 2441, baseType: !489, size: 64, offset: 640)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1586, file: !164, line: 2443, baseType: !1598, size: 128, offset: 704)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !164, line: 182, baseType: !1599)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !164, line: 182, size: 128, elements: !1600)
!1600 = !{!1601}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1599, file: !164, line: 182, baseType: !1365, size: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !492, file: !164, line: 3401, baseType: !1603, size: 320)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !164, line: 3327, size: 320, elements: !1604)
!1604 = !{!1605, !1606, !1613}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1603, file: !164, line: 3329, baseType: !528, size: 192)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1603, file: !164, line: 3330, baseType: !1607, size: 64, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !164, line: 3320, size: 192, elements: !1609)
!1609 = !{!1610, !1611, !1612}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1608, file: !164, line: 3322, baseType: !1607, size: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1608, file: !164, line: 3323, baseType: !1607, size: 64, offset: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1608, file: !164, line: 3324, baseType: !489, size: 64, offset: 128)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1603, file: !164, line: 3331, baseType: !1607, size: 64, offset: 256)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !492, file: !164, line: 3402, baseType: !1615, size: 256)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !164, line: 1540, size: 256, elements: !1616)
!1616 = !{!1617, !1618}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1615, file: !164, line: 1541, baseType: !528, size: 192)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1615, file: !164, line: 1542, baseType: !1619, size: 64, offset: 192)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !164, line: 1538, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !164, line: 1538, size: 192, elements: !1622)
!1622 = !{!1623}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1621, file: !164, line: 1538, baseType: !1624, size: 192)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !164, line: 1537, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !164, line: 1537, size: 192, elements: !1626)
!1626 = !{!1627, !1628, !1629}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1625, file: !164, line: 1537, baseType: !7, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1625, file: !164, line: 1537, baseType: !7, size: 32, offset: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1625, file: !164, line: 1537, baseType: !1630, size: 128, offset: 64)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1631, size: 128, elements: !588)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !164, line: 1535, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !164, line: 1532, size: 128, elements: !1633)
!1633 = !{!1634, !1635}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1632, file: !164, line: 1533, baseType: !489, size: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1632, file: !164, line: 1534, baseType: !489, size: 64, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !492, file: !164, line: 3403, baseType: !1637, size: 512)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !164, line: 1938, size: 512, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642, !1648, !1649, !1650}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1637, file: !164, line: 1939, baseType: !528, size: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1637, file: !164, line: 1940, baseType: !614, size: 32, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1637, file: !164, line: 1941, baseType: !163, size: 32, offset: 224)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1637, file: !164, line: 1946, baseType: !1643, size: 32, offset: 256)
!1643 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !164, line: 1942, size: 32, elements: !1644)
!1644 = !{!1645, !1646, !1647}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1643, file: !164, line: 1943, baseType: !182, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1643, file: !164, line: 1944, baseType: !189, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1643, file: !164, line: 1945, baseType: !196, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1637, file: !164, line: 1950, baseType: !803, size: 64, offset: 320)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1637, file: !164, line: 1951, baseType: !803, size: 64, offset: 384)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1637, file: !164, line: 1953, baseType: !866, size: 64, offset: 448)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !492, file: !164, line: 3404, baseType: !1652, size: 1664)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !164, line: 3337, size: 1664, elements: !1653)
!1653 = !{!1654, !1655}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1652, file: !164, line: 3338, baseType: !528, size: 192)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1652, file: !164, line: 3341, baseType: !1656, size: 1472, offset: 192)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1657, line: 410, size: 1472, elements: !1658)
!1657 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1658 = !{!1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1656, file: !1657, line: 412, baseType: !482, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1656, file: !1657, line: 413, baseType: !482, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1656, file: !1657, line: 414, baseType: !482, size: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1656, file: !1657, line: 415, baseType: !482, size: 32, offset: 96)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1656, file: !1657, line: 416, baseType: !482, size: 32, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1656, file: !1657, line: 417, baseType: !482, size: 32, offset: 160)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1656, file: !1657, line: 418, baseType: !481, size: 8, offset: 192)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1656, file: !1657, line: 419, baseType: !481, size: 8, offset: 200)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1656, file: !1657, line: 420, baseType: !1668, size: 8, offset: 208)
!1668 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1656, file: !1657, line: 421, baseType: !1668, size: 8, offset: 216)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1656, file: !1657, line: 422, baseType: !1668, size: 8, offset: 224)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1656, file: !1657, line: 423, baseType: !1668, size: 8, offset: 232)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1656, file: !1657, line: 424, baseType: !1668, size: 8, offset: 240)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1656, file: !1657, line: 425, baseType: !1668, size: 8, offset: 248)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1656, file: !1657, line: 426, baseType: !1668, size: 8, offset: 256)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1656, file: !1657, line: 427, baseType: !1668, size: 8, offset: 264)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1656, file: !1657, line: 428, baseType: !1668, size: 8, offset: 272)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1656, file: !1657, line: 429, baseType: !1668, size: 8, offset: 280)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1656, file: !1657, line: 430, baseType: !1668, size: 8, offset: 288)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1656, file: !1657, line: 431, baseType: !1668, size: 8, offset: 296)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1656, file: !1657, line: 432, baseType: !1668, size: 8, offset: 304)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1656, file: !1657, line: 433, baseType: !1668, size: 8, offset: 312)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1656, file: !1657, line: 434, baseType: !1668, size: 8, offset: 320)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1656, file: !1657, line: 435, baseType: !1668, size: 8, offset: 328)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1656, file: !1657, line: 436, baseType: !1668, size: 8, offset: 336)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1656, file: !1657, line: 437, baseType: !1668, size: 8, offset: 344)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1656, file: !1657, line: 438, baseType: !1668, size: 8, offset: 352)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1656, file: !1657, line: 439, baseType: !1668, size: 8, offset: 360)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1656, file: !1657, line: 440, baseType: !1668, size: 8, offset: 368)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1656, file: !1657, line: 441, baseType: !1668, size: 8, offset: 376)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1656, file: !1657, line: 442, baseType: !1668, size: 8, offset: 384)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1656, file: !1657, line: 443, baseType: !1668, size: 8, offset: 392)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1656, file: !1657, line: 444, baseType: !1668, size: 8, offset: 400)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1656, file: !1657, line: 445, baseType: !1668, size: 8, offset: 408)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1656, file: !1657, line: 446, baseType: !1668, size: 8, offset: 416)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1656, file: !1657, line: 447, baseType: !1668, size: 8, offset: 424)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1656, file: !1657, line: 448, baseType: !1668, size: 8, offset: 432)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1656, file: !1657, line: 449, baseType: !1668, size: 8, offset: 440)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1656, file: !1657, line: 450, baseType: !1668, size: 8, offset: 448)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1656, file: !1657, line: 451, baseType: !1668, size: 8, offset: 456)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1656, file: !1657, line: 452, baseType: !1668, size: 8, offset: 464)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1656, file: !1657, line: 453, baseType: !1668, size: 8, offset: 472)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1656, file: !1657, line: 454, baseType: !1668, size: 8, offset: 480)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1656, file: !1657, line: 455, baseType: !1668, size: 8, offset: 488)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1656, file: !1657, line: 456, baseType: !1668, size: 8, offset: 496)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1656, file: !1657, line: 457, baseType: !1668, size: 8, offset: 504)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1656, file: !1657, line: 458, baseType: !1668, size: 8, offset: 512)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1656, file: !1657, line: 459, baseType: !1668, size: 8, offset: 520)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1656, file: !1657, line: 460, baseType: !1668, size: 8, offset: 528)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1656, file: !1657, line: 461, baseType: !1668, size: 8, offset: 536)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1656, file: !1657, line: 462, baseType: !1668, size: 8, offset: 544)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1656, file: !1657, line: 463, baseType: !1668, size: 8, offset: 552)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1656, file: !1657, line: 464, baseType: !1668, size: 8, offset: 560)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1656, file: !1657, line: 465, baseType: !1668, size: 8, offset: 568)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1656, file: !1657, line: 466, baseType: !1668, size: 8, offset: 576)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1656, file: !1657, line: 467, baseType: !1668, size: 8, offset: 584)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1656, file: !1657, line: 468, baseType: !1668, size: 8, offset: 592)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1656, file: !1657, line: 469, baseType: !1668, size: 8, offset: 600)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1656, file: !1657, line: 470, baseType: !1668, size: 8, offset: 608)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1656, file: !1657, line: 471, baseType: !1668, size: 8, offset: 616)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1656, file: !1657, line: 472, baseType: !1668, size: 8, offset: 624)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1656, file: !1657, line: 473, baseType: !1668, size: 8, offset: 632)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1656, file: !1657, line: 474, baseType: !1668, size: 8, offset: 640)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1656, file: !1657, line: 475, baseType: !1668, size: 8, offset: 648)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1656, file: !1657, line: 476, baseType: !1668, size: 8, offset: 656)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1656, file: !1657, line: 477, baseType: !1668, size: 8, offset: 664)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1656, file: !1657, line: 478, baseType: !1668, size: 8, offset: 672)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1656, file: !1657, line: 479, baseType: !1668, size: 8, offset: 680)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1656, file: !1657, line: 480, baseType: !1668, size: 8, offset: 688)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1656, file: !1657, line: 481, baseType: !1668, size: 8, offset: 696)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1656, file: !1657, line: 482, baseType: !1668, size: 8, offset: 704)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1656, file: !1657, line: 483, baseType: !1668, size: 8, offset: 712)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1656, file: !1657, line: 484, baseType: !1668, size: 8, offset: 720)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1656, file: !1657, line: 485, baseType: !1668, size: 8, offset: 728)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1656, file: !1657, line: 486, baseType: !1668, size: 8, offset: 736)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1656, file: !1657, line: 487, baseType: !1668, size: 8, offset: 744)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1656, file: !1657, line: 488, baseType: !1668, size: 8, offset: 752)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1656, file: !1657, line: 489, baseType: !1668, size: 8, offset: 760)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1656, file: !1657, line: 490, baseType: !1668, size: 8, offset: 768)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1656, file: !1657, line: 491, baseType: !1668, size: 8, offset: 776)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1656, file: !1657, line: 492, baseType: !1668, size: 8, offset: 784)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1656, file: !1657, line: 493, baseType: !1668, size: 8, offset: 792)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1656, file: !1657, line: 494, baseType: !1668, size: 8, offset: 800)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1656, file: !1657, line: 495, baseType: !1668, size: 8, offset: 808)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1656, file: !1657, line: 496, baseType: !1668, size: 8, offset: 816)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1656, file: !1657, line: 497, baseType: !1668, size: 8, offset: 824)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1656, file: !1657, line: 498, baseType: !1668, size: 8, offset: 832)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1656, file: !1657, line: 499, baseType: !1668, size: 8, offset: 840)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1656, file: !1657, line: 500, baseType: !1668, size: 8, offset: 848)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1656, file: !1657, line: 501, baseType: !1668, size: 8, offset: 856)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1656, file: !1657, line: 502, baseType: !1668, size: 8, offset: 864)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1656, file: !1657, line: 503, baseType: !1668, size: 8, offset: 872)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1656, file: !1657, line: 504, baseType: !1668, size: 8, offset: 880)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1656, file: !1657, line: 505, baseType: !1668, size: 8, offset: 888)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1656, file: !1657, line: 506, baseType: !1668, size: 8, offset: 896)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1656, file: !1657, line: 507, baseType: !1668, size: 8, offset: 904)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1656, file: !1657, line: 508, baseType: !1668, size: 8, offset: 912)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1656, file: !1657, line: 509, baseType: !1668, size: 8, offset: 920)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1656, file: !1657, line: 510, baseType: !1668, size: 8, offset: 928)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1656, file: !1657, line: 511, baseType: !1668, size: 8, offset: 936)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1656, file: !1657, line: 512, baseType: !1668, size: 8, offset: 944)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1656, file: !1657, line: 513, baseType: !1668, size: 8, offset: 952)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1656, file: !1657, line: 514, baseType: !1668, size: 8, offset: 960)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1656, file: !1657, line: 515, baseType: !1668, size: 8, offset: 968)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1656, file: !1657, line: 516, baseType: !1668, size: 8, offset: 976)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1656, file: !1657, line: 517, baseType: !1668, size: 8, offset: 984)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1656, file: !1657, line: 518, baseType: !1668, size: 8, offset: 992)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1656, file: !1657, line: 519, baseType: !1668, size: 8, offset: 1000)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1656, file: !1657, line: 520, baseType: !1668, size: 8, offset: 1008)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1656, file: !1657, line: 521, baseType: !1668, size: 8, offset: 1016)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1656, file: !1657, line: 522, baseType: !1668, size: 8, offset: 1024)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1656, file: !1657, line: 523, baseType: !1668, size: 8, offset: 1032)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1656, file: !1657, line: 524, baseType: !1668, size: 8, offset: 1040)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1656, file: !1657, line: 525, baseType: !1668, size: 8, offset: 1048)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1656, file: !1657, line: 526, baseType: !1668, size: 8, offset: 1056)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1656, file: !1657, line: 527, baseType: !1668, size: 8, offset: 1064)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1656, file: !1657, line: 528, baseType: !1668, size: 8, offset: 1072)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1656, file: !1657, line: 529, baseType: !1668, size: 8, offset: 1080)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1656, file: !1657, line: 530, baseType: !1668, size: 8, offset: 1088)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1656, file: !1657, line: 531, baseType: !1668, size: 8, offset: 1096)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1656, file: !1657, line: 532, baseType: !1668, size: 8, offset: 1104)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1656, file: !1657, line: 533, baseType: !1668, size: 8, offset: 1112)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1656, file: !1657, line: 534, baseType: !1668, size: 8, offset: 1120)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1656, file: !1657, line: 535, baseType: !1668, size: 8, offset: 1128)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1656, file: !1657, line: 536, baseType: !1668, size: 8, offset: 1136)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1656, file: !1657, line: 537, baseType: !1668, size: 8, offset: 1144)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1656, file: !1657, line: 538, baseType: !1668, size: 8, offset: 1152)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1656, file: !1657, line: 539, baseType: !1668, size: 8, offset: 1160)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1656, file: !1657, line: 540, baseType: !1668, size: 8, offset: 1168)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1656, file: !1657, line: 541, baseType: !1668, size: 8, offset: 1176)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1656, file: !1657, line: 542, baseType: !1668, size: 8, offset: 1184)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1656, file: !1657, line: 543, baseType: !1668, size: 8, offset: 1192)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1656, file: !1657, line: 544, baseType: !1668, size: 8, offset: 1200)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1656, file: !1657, line: 545, baseType: !1668, size: 8, offset: 1208)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1656, file: !1657, line: 546, baseType: !1668, size: 8, offset: 1216)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1656, file: !1657, line: 547, baseType: !1668, size: 8, offset: 1224)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1656, file: !1657, line: 548, baseType: !1668, size: 8, offset: 1232)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1656, file: !1657, line: 549, baseType: !1668, size: 8, offset: 1240)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1656, file: !1657, line: 550, baseType: !1668, size: 8, offset: 1248)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1656, file: !1657, line: 551, baseType: !1668, size: 8, offset: 1256)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1656, file: !1657, line: 552, baseType: !1668, size: 8, offset: 1264)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1656, file: !1657, line: 553, baseType: !1668, size: 8, offset: 1272)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1656, file: !1657, line: 554, baseType: !1668, size: 8, offset: 1280)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1656, file: !1657, line: 555, baseType: !1668, size: 8, offset: 1288)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1656, file: !1657, line: 556, baseType: !1668, size: 8, offset: 1296)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1656, file: !1657, line: 557, baseType: !1668, size: 8, offset: 1304)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1656, file: !1657, line: 558, baseType: !1668, size: 8, offset: 1312)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1656, file: !1657, line: 559, baseType: !1668, size: 8, offset: 1320)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1656, file: !1657, line: 560, baseType: !1668, size: 8, offset: 1328)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1656, file: !1657, line: 561, baseType: !1668, size: 8, offset: 1336)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1656, file: !1657, line: 562, baseType: !1668, size: 8, offset: 1344)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1656, file: !1657, line: 563, baseType: !1668, size: 8, offset: 1352)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1656, file: !1657, line: 564, baseType: !1668, size: 8, offset: 1360)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1656, file: !1657, line: 565, baseType: !1668, size: 8, offset: 1368)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1656, file: !1657, line: 566, baseType: !1668, size: 8, offset: 1376)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1656, file: !1657, line: 567, baseType: !1668, size: 8, offset: 1384)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1656, file: !1657, line: 568, baseType: !1668, size: 8, offset: 1392)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1656, file: !1657, line: 569, baseType: !1668, size: 8, offset: 1400)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1656, file: !1657, line: 570, baseType: !1668, size: 8, offset: 1408)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1656, file: !1657, line: 571, baseType: !1668, size: 8, offset: 1416)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1656, file: !1657, line: 572, baseType: !1668, size: 8, offset: 1424)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1656, file: !1657, line: 573, baseType: !1668, size: 8, offset: 1432)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1656, file: !1657, line: 574, baseType: !1668, size: 8, offset: 1440)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !492, file: !164, line: 3405, baseType: !1824, size: 384)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !164, line: 3352, size: 384, elements: !1825)
!1825 = !{!1826, !1827}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1824, file: !164, line: 3353, baseType: !528, size: 192)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1824, file: !164, line: 3356, baseType: !1828, size: 192, offset: 192)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1657, line: 578, size: 192, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1828, file: !1657, line: 580, baseType: !482, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1828, file: !1657, line: 581, baseType: !482, size: 32, offset: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1828, file: !1657, line: 582, baseType: !482, size: 32, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1828, file: !1657, line: 583, baseType: !482, size: 32, offset: 96)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1828, file: !1657, line: 584, baseType: !481, size: 8, offset: 128)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1828, file: !1657, line: 585, baseType: !481, size: 8, offset: 136)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1828, file: !1657, line: 586, baseType: !481, size: 8, offset: 144)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1828, file: !1657, line: 587, baseType: !481, size: 8, offset: 152)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1828, file: !1657, line: 588, baseType: !481, size: 8, offset: 160)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1828, file: !1657, line: 589, baseType: !481, size: 8, offset: 168)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1828, file: !1657, line: 590, baseType: !481, size: 8, offset: 176)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "dref", file: !3, line: 240, baseType: !1842)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dref_d", file: !3, line: 214, size: 448, elements: !1844)
!1844 = !{!1845, !1905, !1906, !1907, !1908, !1909, !1910}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1843, file: !3, line: 217, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_reference", file: !1848, line: 165, size: 896, elements: !1849)
!1848 = !DIFile(filename: "./tree-data-ref.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1849 = !{!1850, !1851, !1852, !1853, !1854, !1862, !1872, !1877}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1847, file: !1848, line: 168, baseType: !813, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1847, file: !1848, line: 171, baseType: !489, size: 64, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1847, file: !1848, line: 174, baseType: !486, size: 64, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "is_read", scope: !1847, file: !1848, line: 177, baseType: !481, size: 8, offset: 192)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "innermost", scope: !1847, file: !1848, line: 180, baseType: !1855, size: 320, offset: 256)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "innermost_loop_behavior", file: !1848, line: 51, size: 320, elements: !1856)
!1856 = !{!1857, !1858, !1859, !1860, !1861}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !1855, file: !1848, line: 53, baseType: !489, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1855, file: !1848, line: 54, baseType: !489, size: 64, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1855, file: !1848, line: 55, baseType: !489, size: 64, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1855, file: !1848, line: 56, baseType: !489, size: 64, offset: 192)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "aligned_to", scope: !1855, file: !1848, line: 60, baseType: !489, size: 64, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !1847, file: !1848, line: 183, baseType: !1863, size: 128, offset: 576)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "indices", file: !1848, line: 78, size: 128, elements: !1864)
!1864 = !{!1865, !1866}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "base_object", scope: !1863, file: !1848, line: 81, baseType: !489, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "access_fns", scope: !1863, file: !1848, line: 84, baseType: !1867, size: 64, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !164, line: 184, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !164, line: 184, size: 128, elements: !1870)
!1870 = !{!1871}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1869, file: !164, line: 184, baseType: !1365, size: 128)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1847, file: !1848, line: 186, baseType: !1873, size: 128, offset: 704)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dr_alias", file: !1848, line: 87, size: 128, elements: !1874)
!1874 = !{!1875, !1876}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1873, file: !1848, line: 91, baseType: !1566, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "vops", scope: !1873, file: !1848, line: 96, baseType: !1383, size: 64, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "access_matrix", scope: !1847, file: !1848, line: 189, baseType: !1878, size: 64, offset: 832)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "access_matrix", file: !1848, line: 127, size: 256, elements: !1880)
!1880 = !{!1881, !1887, !1888, !1889}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1879, file: !1848, line: 129, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_heap", file: !146, line: 86, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_heap", file: !146, line: 86, size: 128, elements: !1885)
!1885 = !{!1886}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1884, file: !146, line: 86, baseType: !1048, size: 128)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "nb_induction_vars", scope: !1879, file: !1848, line: 130, baseType: !482, size: 32, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1879, file: !1848, line: 131, baseType: !1867, size: 64, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !1879, file: !1848, line: 132, baseType: !1890, size: 64, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_gc", file: !1892, line: 34, baseType: !1893)
!1892 = !DIFile(filename: "./lambda.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_gc", file: !1892, line: 34, size: 128, elements: !1894)
!1894 = !{!1895}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1893, file: !1892, line: 34, baseType: !1896, size: 128)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_base", file: !1892, line: 32, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_base", file: !1892, line: 32, size: 128, elements: !1898)
!1898 = !{!1899, !1900, !1901}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1897, file: !1892, line: 32, baseType: !7, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1897, file: !1892, line: 32, baseType: !7, size: 32, offset: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1897, file: !1892, line: 32, baseType: !1902, size: 64, offset: 64)
!1902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1903, size: 64, elements: !588)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_vector", file: !1892, line: 31, baseType: !1904)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1843, file: !3, line: 220, baseType: !813, size: 64, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "name_defined_by_phi", scope: !1843, file: !3, line: 225, baseType: !489, size: 64, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1843, file: !3, line: 229, baseType: !7, size: 32, offset: 192)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1843, file: !3, line: 232, baseType: !538, size: 128, offset: 256)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1843, file: !3, line: 235, baseType: !7, size: 32, offset: 384)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "always_accessed", scope: !1843, file: !3, line: 239, baseType: !7, size: 1, offset: 416, flags: DIFlagBitField, extraData: i64 416)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "chain_p", file: !3, line: 296, baseType: !1912)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chain", file: !3, line: 264, size: 576, elements: !1914)
!1914 = !{!1915, !1916, !1917, !1918, !1919, !1920, !1933, !1934, !1935, !1936, !1937, !1938}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1913, file: !3, line: 267, baseType: !390, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1913, file: !3, line: 271, baseType: !196, size: 32, offset: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "rslt_type", scope: !1913, file: !3, line: 272, baseType: !489, size: 64, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ch1", scope: !1913, file: !3, line: 273, baseType: !1912, size: 64, offset: 128)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ch2", scope: !1913, file: !3, line: 273, baseType: !1912, size: 64, offset: 192)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1913, file: !3, line: 276, baseType: !1921, size: 64, offset: 256)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_dref_heap", file: !3, line: 243, baseType: !1923)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_dref_heap", file: !3, line: 243, size: 128, elements: !1924)
!1924 = !{!1925}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1923, file: !3, line: 243, baseType: !1926, size: 128)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_dref_base", file: !3, line: 242, baseType: !1927)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_dref_base", file: !3, line: 242, size: 128, elements: !1928)
!1928 = !{!1929, !1930, !1931}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1927, file: !3, line: 242, baseType: !7, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1927, file: !3, line: 242, baseType: !7, size: 32, offset: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1927, file: !3, line: 242, baseType: !1932, size: 64, offset: 64)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 64, elements: !588)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1913, file: !3, line: 279, baseType: !7, size: 32, offset: 320)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1913, file: !3, line: 282, baseType: !1867, size: 64, offset: 384)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "inits", scope: !1913, file: !3, line: 285, baseType: !1867, size: 64, offset: 448)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "has_max_use_after", scope: !1913, file: !3, line: 289, baseType: !7, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "all_always_accessed", scope: !1913, file: !3, line: 292, baseType: !7, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "combined", scope: !1913, file: !3, line: 295, baseType: !7, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1941, line: 32, baseType: !1942)
!1941 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1941, line: 32, size: 96, elements: !1943)
!1943 = !{!1944}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1942, file: !1941, line: 32, baseType: !1945, size: 96)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1941, line: 31, baseType: !1946)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1941, line: 31, size: 96, elements: !1947)
!1947 = !{!1948, !1949, !1950}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1946, file: !1941, line: 31, baseType: !7, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1946, file: !1941, line: 31, baseType: !7, size: 32, offset: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1946, file: !1941, line: 31, baseType: !1951, size: 32, offset: 64)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 32, elements: !588)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_heap", file: !1848, line: 209, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_heap", file: !1848, line: 209, size: 128, elements: !1955)
!1955 = !{!1956}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1954, file: !1848, line: 209, baseType: !1957, size: 128)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_base", file: !1848, line: 208, baseType: !1958)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_base", file: !1848, line: 208, size: 128, elements: !1959)
!1959 = !{!1960, !1961, !1962}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1958, file: !1848, line: 208, baseType: !7, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1958, file: !1848, line: 208, baseType: !7, size: 32, offset: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1958, file: !1848, line: 208, baseType: !1963, size: 64, offset: 64)
!1963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1964, size: 64, elements: !588)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "data_reference_p", file: !1848, line: 207, baseType: !1846)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_heap", file: !1848, line: 333, baseType: !1967)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_heap", file: !1848, line: 333, size: 128, elements: !1968)
!1968 = !{!1969}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1967, file: !1848, line: 333, baseType: !1970, size: 128)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_base", file: !1848, line: 332, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_base", file: !1848, line: 332, size: 128, elements: !1972)
!1972 = !{!1973, !1974, !1975}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1971, file: !1848, line: 332, baseType: !7, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1971, file: !1848, line: 332, baseType: !7, size: 32, offset: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1971, file: !1848, line: 332, baseType: !1976, size: 64, offset: 64)
!1976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1977, size: 64, elements: !588)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "ddr_p", file: !1848, line: 331, baseType: !1978)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_dependence_relation", file: !1848, line: 282, size: 512, elements: !1980)
!1980 = !{!1981, !1982, !1983, !1984, !2013, !2014, !2020, !2021, !2022, !2023, !2024}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1979, file: !1848, line: 285, baseType: !1846, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1979, file: !1848, line: 286, baseType: !1846, size: 64, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "are_dependent", scope: !1979, file: !1848, line: 299, baseType: !489, size: 64, offset: 128)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "subscripts", scope: !1979, file: !1848, line: 304, baseType: !1985, size: 64, offset: 192)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_heap", file: !1848, line: 272, baseType: !1987)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_heap", file: !1848, line: 272, size: 128, elements: !1988)
!1988 = !{!1989}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1987, file: !1848, line: 272, baseType: !1990, size: 128)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_base", file: !1848, line: 271, baseType: !1991)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_base", file: !1848, line: 271, size: 128, elements: !1992)
!1992 = !{!1993, !1994, !1995}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1991, file: !1848, line: 271, baseType: !7, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1991, file: !1848, line: 271, baseType: !7, size: 32, offset: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1991, file: !1848, line: 271, baseType: !1996, size: 64, offset: 64)
!1996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1997, size: 64, elements: !588)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "subscript_p", file: !1848, line: 270, baseType: !1998)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subscript", file: !1848, line: 252, size: 256, elements: !2000)
!2000 = !{!2001, !2010, !2011, !2012}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_a", scope: !1999, file: !1848, line: 256, baseType: !2002, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "conflict_function", file: !1848, line: 243, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1848, line: 239, size: 192, elements: !2005)
!2005 = !{!2006, !2007}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2004, file: !1848, line: 241, baseType: !7, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "fns", scope: !2004, file: !1848, line: 242, baseType: !2008, size: 128, offset: 64)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2009, size: 128, elements: !732)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_fn", file: !1848, line: 237, baseType: !1867)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_b", scope: !1999, file: !1848, line: 257, baseType: !2002, size: 64, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "last_conflict", scope: !1999, file: !1848, line: 261, baseType: !489, size: 64, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1999, file: !1848, line: 267, baseType: !489, size: 64, offset: 192)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1979, file: !1848, line: 307, baseType: !1882, size: 64, offset: 256)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "dir_vects", scope: !1979, file: !1848, line: 310, baseType: !2015, size: 64, offset: 320)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_heap", file: !1892, line: 33, baseType: !2017)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_heap", file: !1892, line: 33, size: 128, elements: !2018)
!2018 = !{!2019}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2017, file: !1892, line: 33, baseType: !1896, size: 128)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "dist_vects", scope: !1979, file: !1848, line: 313, baseType: !2015, size: 64, offset: 384)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "inner_loop", scope: !1979, file: !1848, line: 317, baseType: !7, size: 32, offset: 448)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "reversed_p", scope: !1979, file: !1848, line: 320, baseType: !481, size: 8, offset: 480)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "affine_p", scope: !1979, file: !1848, line: 324, baseType: !481, size: 8, offset: 488)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "self_reference_p", scope: !1979, file: !1848, line: 328, baseType: !481, size: 8, offset: 496)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "component", file: !3, line: 318, size: 192, elements: !2029)
!2029 = !{!2030, !2031, !2032}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !2028, file: !3, line: 321, baseType: !1921, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "comp_step", scope: !2028, file: !3, line: 324, baseType: !396, size: 32, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2028, file: !3, line: 327, baseType: !2027, size: 64, offset: 128)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_chain_p_heap", file: !3, line: 299, baseType: !2035)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_chain_p_heap", file: !3, line: 299, size: 128, elements: !2036)
!2036 = !{!2037}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2035, file: !3, line: 299, baseType: !2038, size: 128)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_chain_p_base", file: !3, line: 298, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_chain_p_base", file: !3, line: 298, size: 128, elements: !2040)
!2040 = !{!2041, !2042, !2043}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2039, file: !3, line: 298, baseType: !7, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2039, file: !3, line: 298, baseType: !7, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2039, file: !3, line: 298, baseType: !2044, size: 64, offset: 64)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 64, elements: !588)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1841)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !815)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !473, line: 30, baseType: !2050)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !164, line: 1893, baseType: !854)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "epcc_data", file: !3, line: 1871, size: 128, elements: !2054)
!2054 = !{!2055, !2056}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "chains", scope: !2053, file: !3, line: 1873, baseType: !2033, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_vars", scope: !2053, file: !3, line: 1874, baseType: !1383, size: 64, offset: 64)
!2057 = !{!0, !2058}
!2058 = !DIGlobalVariableExpression(var: !2059, expr: !DIExpression())
!2059 = distinct !DIGlobalVariable(name: "name_expansions", scope: !2, file: !3, line: 336, type: !1386, isLocal: true, isDefinition: true)
!2060 = !{i32 2, !"Dwarf Version", i32 4}
!2061 = !{i32 2, !"Debug Info Version", i32 3}
!2062 = !{i32 1, !"wchar_size", i32 4}
!2063 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2064 = distinct !DISubprogram(name: "vprintf", scope: !2065, file: !2065, line: 39, type: !2066, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2076)
!2065 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2066 = !DISubroutineType(types: !2067)
!2067 = !{!482, !2068, !2069}
!2068 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !487)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2071)
!2071 = !{!2072, !2073, !2074, !2075}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2070, file: !3, baseType: !7, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2070, file: !3, baseType: !7, size: 32, offset: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2070, file: !3, baseType: !486, size: 64, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2070, file: !3, baseType: !486, size: 64, offset: 128)
!2076 = !{!2077, !2078}
!2077 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2064, file: !2065, line: 39, type: !2068)
!2078 = !DILocalVariable(name: "__arg", arg: 2, scope: !2064, file: !2065, line: 39, type: !2069)
!2079 = !DILocation(line: 0, scope: !2064)
!2080 = !DILocation(line: 41, column: 20, scope: !2064)
!2081 = !DILocation(line: 41, column: 10, scope: !2064)
!2082 = !DILocation(line: 41, column: 3, scope: !2064)
!2083 = distinct !DISubprogram(name: "getchar", scope: !2065, file: !2065, line: 47, type: !2084, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2086)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{!482}
!2086 = !{}
!2087 = !DILocation(line: 49, column: 16, scope: !2083)
!2088 = !DILocation(line: 49, column: 10, scope: !2083)
!2089 = !DILocation(line: 49, column: 3, scope: !2083)
!2090 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2065, file: !2065, line: 56, type: !2091, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2144)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!482, !2093}
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2095, line: 7, baseType: !2096)
!2095 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2097, line: 49, size: 1728, elements: !2098)
!2097 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2098 = !{!2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2114, !2116, !2117, !2118, !2121, !2123, !2124, !2125, !2128, !2130, !2133, !2136, !2137, !2138, !2139, !2140}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2096, file: !2097, line: 51, baseType: !482, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2096, file: !2097, line: 54, baseType: !484, size: 64, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2096, file: !2097, line: 55, baseType: !484, size: 64, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2096, file: !2097, line: 56, baseType: !484, size: 64, offset: 192)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2096, file: !2097, line: 57, baseType: !484, size: 64, offset: 256)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2096, file: !2097, line: 58, baseType: !484, size: 64, offset: 320)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2096, file: !2097, line: 59, baseType: !484, size: 64, offset: 384)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2096, file: !2097, line: 60, baseType: !484, size: 64, offset: 448)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2096, file: !2097, line: 61, baseType: !484, size: 64, offset: 512)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2096, file: !2097, line: 64, baseType: !484, size: 64, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2096, file: !2097, line: 65, baseType: !484, size: 64, offset: 640)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2096, file: !2097, line: 66, baseType: !484, size: 64, offset: 704)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2096, file: !2097, line: 68, baseType: !2112, size: 64, offset: 768)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2097, line: 36, flags: DIFlagFwdDecl)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2096, file: !2097, line: 70, baseType: !2115, size: 64, offset: 832)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2096, file: !2097, line: 72, baseType: !482, size: 32, offset: 896)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2096, file: !2097, line: 73, baseType: !482, size: 32, offset: 928)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2096, file: !2097, line: 74, baseType: !2119, size: 64, offset: 960)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2120, line: 152, baseType: !545)
!2120 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2096, file: !2097, line: 77, baseType: !2122, size: 16, offset: 1024)
!2122 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2096, file: !2097, line: 78, baseType: !1668, size: 8, offset: 1040)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2096, file: !2097, line: 79, baseType: !587, size: 8, offset: 1048)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2096, file: !2097, line: 81, baseType: !2126, size: 64, offset: 1088)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2097, line: 43, baseType: null)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2096, file: !2097, line: 89, baseType: !2129, size: 64, offset: 1152)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2120, line: 153, baseType: !545)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2096, file: !2097, line: 91, baseType: !2131, size: 64, offset: 1216)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2097, line: 37, flags: DIFlagFwdDecl)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2096, file: !2097, line: 92, baseType: !2134, size: 64, offset: 1280)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!2135 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2097, line: 38, flags: DIFlagFwdDecl)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2096, file: !2097, line: 93, baseType: !2115, size: 64, offset: 1344)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2096, file: !2097, line: 94, baseType: !486, size: 64, offset: 1408)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2096, file: !2097, line: 95, baseType: !958, size: 64, offset: 1472)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2096, file: !2097, line: 96, baseType: !482, size: 32, offset: 1536)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2096, file: !2097, line: 98, baseType: !2141, size: 160, offset: 1568)
!2141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 160, elements: !2142)
!2142 = !{!2143}
!2143 = !DISubrange(count: 20)
!2144 = !{!2145}
!2145 = !DILocalVariable(name: "__fp", arg: 1, scope: !2090, file: !2065, line: 56, type: !2093)
!2146 = !DILocation(line: 0, scope: !2090)
!2147 = !DILocation(line: 58, column: 10, scope: !2090)
!2148 = !DILocation(line: 58, column: 3, scope: !2090)
!2149 = distinct !DISubprogram(name: "getc_unlocked", scope: !2065, file: !2065, line: 66, type: !2091, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2150)
!2150 = !{!2151}
!2151 = !DILocalVariable(name: "__fp", arg: 1, scope: !2149, file: !2065, line: 66, type: !2093)
!2152 = !DILocation(line: 0, scope: !2149)
!2153 = !DILocation(line: 68, column: 10, scope: !2149)
!2154 = !DILocation(line: 68, column: 3, scope: !2149)
!2155 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2065, file: !2065, line: 73, type: !2084, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2086)
!2156 = !DILocation(line: 75, column: 10, scope: !2155)
!2157 = !DILocation(line: 75, column: 3, scope: !2155)
!2158 = distinct !DISubprogram(name: "putchar", scope: !2065, file: !2065, line: 82, type: !2159, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2161)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{!482, !482}
!2161 = !{!2162}
!2162 = !DILocalVariable(name: "__c", arg: 1, scope: !2158, file: !2065, line: 82, type: !482)
!2163 = !DILocation(line: 0, scope: !2158)
!2164 = !DILocation(line: 84, column: 21, scope: !2158)
!2165 = !DILocation(line: 84, column: 10, scope: !2158)
!2166 = !DILocation(line: 84, column: 3, scope: !2158)
!2167 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2065, file: !2065, line: 91, type: !2168, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2170)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!482, !482, !2093}
!2170 = !{!2171, !2172}
!2171 = !DILocalVariable(name: "__c", arg: 1, scope: !2167, file: !2065, line: 91, type: !482)
!2172 = !DILocalVariable(name: "__stream", arg: 2, scope: !2167, file: !2065, line: 91, type: !2093)
!2173 = !DILocation(line: 0, scope: !2167)
!2174 = !DILocation(line: 93, column: 10, scope: !2167)
!2175 = !DILocation(line: 93, column: 3, scope: !2167)
!2176 = distinct !DISubprogram(name: "putc_unlocked", scope: !2065, file: !2065, line: 101, type: !2168, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2177)
!2177 = !{!2178, !2179}
!2178 = !DILocalVariable(name: "__c", arg: 1, scope: !2176, file: !2065, line: 101, type: !482)
!2179 = !DILocalVariable(name: "__stream", arg: 2, scope: !2176, file: !2065, line: 101, type: !2093)
!2180 = !DILocation(line: 0, scope: !2176)
!2181 = !DILocation(line: 103, column: 10, scope: !2176)
!2182 = !DILocation(line: 103, column: 3, scope: !2176)
!2183 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2065, file: !2065, line: 108, type: !2159, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2184)
!2184 = !{!2185}
!2185 = !DILocalVariable(name: "__c", arg: 1, scope: !2183, file: !2065, line: 108, type: !482)
!2186 = !DILocation(line: 0, scope: !2183)
!2187 = !DILocation(line: 110, column: 10, scope: !2183)
!2188 = !DILocation(line: 110, column: 3, scope: !2183)
!2189 = distinct !DISubprogram(name: "getline", scope: !2065, file: !2065, line: 118, type: !2190, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2194)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!2192, !483, !2193, !2093}
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2120, line: 193, baseType: !545)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!2194 = !{!2195, !2196, !2197}
!2195 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2189, file: !2065, line: 118, type: !483)
!2196 = !DILocalVariable(name: "__n", arg: 2, scope: !2189, file: !2065, line: 118, type: !2193)
!2197 = !DILocalVariable(name: "__stream", arg: 3, scope: !2189, file: !2065, line: 118, type: !2093)
!2198 = !DILocation(line: 0, scope: !2189)
!2199 = !DILocation(line: 120, column: 10, scope: !2189)
!2200 = !DILocation(line: 120, column: 3, scope: !2189)
!2201 = distinct !DISubprogram(name: "feof_unlocked", scope: !2065, file: !2065, line: 128, type: !2091, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!2202 = !{!2203}
!2203 = !DILocalVariable(name: "__stream", arg: 1, scope: !2201, file: !2065, line: 128, type: !2093)
!2204 = !DILocation(line: 0, scope: !2201)
!2205 = !DILocation(line: 130, column: 10, scope: !2201)
!2206 = !DILocation(line: 130, column: 3, scope: !2201)
!2207 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2065, file: !2065, line: 135, type: !2091, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2208)
!2208 = !{!2209}
!2209 = !DILocalVariable(name: "__stream", arg: 1, scope: !2207, file: !2065, line: 135, type: !2093)
!2210 = !DILocation(line: 0, scope: !2207)
!2211 = !DILocation(line: 137, column: 10, scope: !2207)
!2212 = !DILocation(line: 137, column: 3, scope: !2207)
!2213 = distinct !DISubprogram(name: "tolower", scope: !2214, file: !2214, line: 207, type: !2159, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2215)
!2214 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2215 = !{!2216}
!2216 = !DILocalVariable(name: "__c", arg: 1, scope: !2213, file: !2214, line: 207, type: !482)
!2217 = !DILocation(line: 0, scope: !2213)
!2218 = !DILocation(line: 209, column: 22, scope: !2213)
!2219 = !DILocation(line: 209, column: 39, scope: !2213)
!2220 = !DILocation(line: 209, column: 38, scope: !2213)
!2221 = !DILocation(line: 209, column: 37, scope: !2213)
!2222 = !DILocation(line: 209, column: 10, scope: !2213)
!2223 = !DILocation(line: 209, column: 3, scope: !2213)
!2224 = distinct !DISubprogram(name: "toupper", scope: !2214, file: !2214, line: 213, type: !2159, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2225)
!2225 = !{!2226}
!2226 = !DILocalVariable(name: "__c", arg: 1, scope: !2224, file: !2214, line: 213, type: !482)
!2227 = !DILocation(line: 0, scope: !2224)
!2228 = !DILocation(line: 215, column: 22, scope: !2224)
!2229 = !DILocation(line: 215, column: 39, scope: !2224)
!2230 = !DILocation(line: 215, column: 38, scope: !2224)
!2231 = !DILocation(line: 215, column: 37, scope: !2224)
!2232 = !DILocation(line: 215, column: 10, scope: !2224)
!2233 = !DILocation(line: 215, column: 3, scope: !2224)
!2234 = distinct !DISubprogram(name: "atoi", scope: !2235, file: !2235, line: 361, type: !2236, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2238)
!2235 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2236 = !DISubroutineType(types: !2237)
!2237 = !{!482, !487}
!2238 = !{!2239}
!2239 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2234, file: !2235, line: 361, type: !487)
!2240 = !DILocation(line: 0, scope: !2234)
!2241 = !DILocation(line: 363, column: 16, scope: !2234)
!2242 = !DILocation(line: 363, column: 10, scope: !2234)
!2243 = !DILocation(line: 363, column: 3, scope: !2234)
!2244 = distinct !DISubprogram(name: "atol", scope: !2235, file: !2235, line: 366, type: !2245, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2247)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{!545, !487}
!2247 = !{!2248}
!2248 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2244, file: !2235, line: 366, type: !487)
!2249 = !DILocation(line: 0, scope: !2244)
!2250 = !DILocation(line: 368, column: 10, scope: !2244)
!2251 = !DILocation(line: 368, column: 3, scope: !2244)
!2252 = distinct !DISubprogram(name: "atoll", scope: !2235, file: !2235, line: 373, type: !2253, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2256)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{!2255, !487}
!2255 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2256 = !{!2257}
!2257 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2252, file: !2235, line: 373, type: !487)
!2258 = !DILocation(line: 0, scope: !2252)
!2259 = !DILocation(line: 375, column: 10, scope: !2252)
!2260 = !DILocation(line: 375, column: 3, scope: !2252)
!2261 = distinct !DISubprogram(name: "bsearch", scope: !2262, file: !2262, line: 20, type: !2263, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2266)
!2262 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!486, !1308, !1308, !958, !958, !2265}
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2235, line: 808, baseType: !1312)
!2266 = !{!2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276}
!2267 = !DILocalVariable(name: "__key", arg: 1, scope: !2261, file: !2262, line: 20, type: !1308)
!2268 = !DILocalVariable(name: "__base", arg: 2, scope: !2261, file: !2262, line: 20, type: !1308)
!2269 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2261, file: !2262, line: 20, type: !958)
!2270 = !DILocalVariable(name: "__size", arg: 4, scope: !2261, file: !2262, line: 20, type: !958)
!2271 = !DILocalVariable(name: "__compar", arg: 5, scope: !2261, file: !2262, line: 21, type: !2265)
!2272 = !DILocalVariable(name: "__l", scope: !2261, file: !2262, line: 23, type: !958)
!2273 = !DILocalVariable(name: "__u", scope: !2261, file: !2262, line: 23, type: !958)
!2274 = !DILocalVariable(name: "__idx", scope: !2261, file: !2262, line: 23, type: !958)
!2275 = !DILocalVariable(name: "__p", scope: !2261, file: !2262, line: 24, type: !1308)
!2276 = !DILocalVariable(name: "__comparison", scope: !2261, file: !2262, line: 25, type: !482)
!2277 = !DILocation(line: 0, scope: !2261)
!2278 = !DILocation(line: 29, column: 3, scope: !2261)
!2279 = !DILocation(line: 27, column: 7, scope: !2261)
!2280 = !DILocation(line: 29, column: 14, scope: !2261)
!2281 = !DILocation(line: 31, column: 20, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2261, file: !2262, line: 30, column: 5)
!2283 = !DILocation(line: 31, column: 27, scope: !2282)
!2284 = !DILocation(line: 32, column: 56, scope: !2282)
!2285 = !DILocation(line: 32, column: 47, scope: !2282)
!2286 = !DILocation(line: 33, column: 22, scope: !2282)
!2287 = !DILocation(line: 34, column: 24, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !2282, file: !2262, line: 34, column: 11)
!2289 = !DILocation(line: 34, column: 11, scope: !2282)
!2290 = !DILocation(line: 36, column: 29, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2288, file: !2262, line: 36, column: 16)
!2292 = !DILocation(line: 36, column: 16, scope: !2288)
!2293 = !DILocation(line: 37, column: 14, scope: !2291)
!2294 = distinct !{!2294, !2278, !2295}
!2295 = !DILocation(line: 40, column: 5, scope: !2261)
!2296 = !DILocation(line: 43, column: 1, scope: !2261)
!2297 = distinct !DISubprogram(name: "atof", scope: !2298, file: !2298, line: 25, type: !2299, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2302)
!2298 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!2301, !487}
!2301 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2302 = !{!2303}
!2303 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2297, file: !2298, line: 25, type: !487)
!2304 = !DILocation(line: 0, scope: !2297)
!2305 = !DILocation(line: 27, column: 10, scope: !2297)
!2306 = !DILocation(line: 27, column: 3, scope: !2297)
!2307 = distinct !DISubprogram(name: "strtoimax", scope: !2308, file: !2308, line: 324, type: !2309, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!2308 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2309 = !DISubroutineType(types: !2310)
!2310 = !{!2311, !2068, !2314, !482}
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2312, line: 101, baseType: !2313)
!2312 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2120, line: 72, baseType: !545)
!2314 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !483)
!2315 = !{!2316, !2317, !2318}
!2316 = !DILocalVariable(name: "nptr", arg: 1, scope: !2307, file: !2308, line: 324, type: !2068)
!2317 = !DILocalVariable(name: "endptr", arg: 2, scope: !2307, file: !2308, line: 324, type: !2314)
!2318 = !DILocalVariable(name: "base", arg: 3, scope: !2307, file: !2308, line: 324, type: !482)
!2319 = !DILocation(line: 0, scope: !2307)
!2320 = !DILocation(line: 327, column: 10, scope: !2307)
!2321 = !DILocation(line: 327, column: 3, scope: !2307)
!2322 = distinct !DISubprogram(name: "strtoumax", scope: !2308, file: !2308, line: 336, type: !2323, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2327)
!2323 = !DISubroutineType(types: !2324)
!2324 = !{!2325, !2068, !2314, !482}
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2312, line: 102, baseType: !2326)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2120, line: 73, baseType: !543)
!2327 = !{!2328, !2329, !2330}
!2328 = !DILocalVariable(name: "nptr", arg: 1, scope: !2322, file: !2308, line: 336, type: !2068)
!2329 = !DILocalVariable(name: "endptr", arg: 2, scope: !2322, file: !2308, line: 336, type: !2314)
!2330 = !DILocalVariable(name: "base", arg: 3, scope: !2322, file: !2308, line: 336, type: !482)
!2331 = !DILocation(line: 0, scope: !2322)
!2332 = !DILocation(line: 339, column: 10, scope: !2322)
!2333 = !DILocation(line: 339, column: 3, scope: !2322)
!2334 = distinct !DISubprogram(name: "wcstoimax", scope: !2308, file: !2308, line: 348, type: !2335, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2344)
!2335 = !DISubroutineType(types: !2336)
!2336 = !{!2311, !2337, !2341, !482}
!2337 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2338)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2340)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2308, line: 34, baseType: !482)
!2341 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2342)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64)
!2344 = !{!2345, !2346, !2347}
!2345 = !DILocalVariable(name: "nptr", arg: 1, scope: !2334, file: !2308, line: 348, type: !2337)
!2346 = !DILocalVariable(name: "endptr", arg: 2, scope: !2334, file: !2308, line: 348, type: !2341)
!2347 = !DILocalVariable(name: "base", arg: 3, scope: !2334, file: !2308, line: 348, type: !482)
!2348 = !DILocation(line: 0, scope: !2334)
!2349 = !DILocation(line: 351, column: 10, scope: !2334)
!2350 = !DILocation(line: 351, column: 3, scope: !2334)
!2351 = distinct !DISubprogram(name: "wcstoumax", scope: !2308, file: !2308, line: 362, type: !2352, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2354)
!2352 = !DISubroutineType(types: !2353)
!2353 = !{!2325, !2337, !2341, !482}
!2354 = !{!2355, !2356, !2357}
!2355 = !DILocalVariable(name: "nptr", arg: 1, scope: !2351, file: !2308, line: 362, type: !2337)
!2356 = !DILocalVariable(name: "endptr", arg: 2, scope: !2351, file: !2308, line: 362, type: !2341)
!2357 = !DILocalVariable(name: "base", arg: 3, scope: !2351, file: !2308, line: 362, type: !482)
!2358 = !DILocation(line: 0, scope: !2351)
!2359 = !DILocation(line: 365, column: 10, scope: !2351)
!2360 = !DILocation(line: 365, column: 3, scope: !2351)
!2361 = distinct !DISubprogram(name: "stat", scope: !2362, file: !2362, line: 453, type: !2363, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2400)
!2362 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!482, !487, !2365}
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2367, line: 46, size: 1152, elements: !2368)
!2367 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2368 = !{!2369, !2371, !2373, !2375, !2377, !2379, !2381, !2382, !2383, !2384, !2386, !2388, !2396, !2397, !2398}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2366, file: !2367, line: 48, baseType: !2370, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2120, line: 145, baseType: !543)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2366, file: !2367, line: 53, baseType: !2372, size: 64, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2120, line: 148, baseType: !543)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2366, file: !2367, line: 61, baseType: !2374, size: 64, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2120, line: 151, baseType: !543)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2366, file: !2367, line: 62, baseType: !2376, size: 32, offset: 192)
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2120, line: 150, baseType: !7)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2366, file: !2367, line: 64, baseType: !2378, size: 32, offset: 224)
!2378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2120, line: 146, baseType: !7)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2366, file: !2367, line: 65, baseType: !2380, size: 32, offset: 256)
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2120, line: 147, baseType: !7)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2366, file: !2367, line: 67, baseType: !482, size: 32, offset: 288)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2366, file: !2367, line: 69, baseType: !2370, size: 64, offset: 320)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2366, file: !2367, line: 74, baseType: !2119, size: 64, offset: 384)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2366, file: !2367, line: 78, baseType: !2385, size: 64, offset: 448)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2120, line: 174, baseType: !545)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2366, file: !2367, line: 80, baseType: !2387, size: 64, offset: 512)
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2120, line: 179, baseType: !545)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2366, file: !2367, line: 91, baseType: !2389, size: 128, offset: 576)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2390, line: 10, size: 128, elements: !2391)
!2390 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2391 = !{!2392, !2394}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2389, file: !2390, line: 12, baseType: !2393, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2120, line: 160, baseType: !545)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2389, file: !2390, line: 16, baseType: !2395, size: 64, offset: 64)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2120, line: 196, baseType: !545)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2366, file: !2367, line: 92, baseType: !2389, size: 128, offset: 704)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2366, file: !2367, line: 93, baseType: !2389, size: 128, offset: 832)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2366, file: !2367, line: 106, baseType: !2399, size: 192, offset: 960)
!2399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2395, size: 192, elements: !563)
!2400 = !{!2401, !2402}
!2401 = !DILocalVariable(name: "__path", arg: 1, scope: !2361, file: !2362, line: 453, type: !487)
!2402 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2361, file: !2362, line: 453, type: !2365)
!2403 = !DILocation(line: 0, scope: !2361)
!2404 = !DILocation(line: 455, column: 10, scope: !2361)
!2405 = !DILocation(line: 455, column: 3, scope: !2361)
!2406 = distinct !DISubprogram(name: "lstat", scope: !2362, file: !2362, line: 460, type: !2363, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2407)
!2407 = !{!2408, !2409}
!2408 = !DILocalVariable(name: "__path", arg: 1, scope: !2406, file: !2362, line: 460, type: !487)
!2409 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2406, file: !2362, line: 460, type: !2365)
!2410 = !DILocation(line: 0, scope: !2406)
!2411 = !DILocation(line: 462, column: 10, scope: !2406)
!2412 = !DILocation(line: 462, column: 3, scope: !2406)
!2413 = distinct !DISubprogram(name: "fstat", scope: !2362, file: !2362, line: 467, type: !2414, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2416)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!482, !482, !2365}
!2416 = !{!2417, !2418}
!2417 = !DILocalVariable(name: "__fd", arg: 1, scope: !2413, file: !2362, line: 467, type: !482)
!2418 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2413, file: !2362, line: 467, type: !2365)
!2419 = !DILocation(line: 0, scope: !2413)
!2420 = !DILocation(line: 469, column: 10, scope: !2413)
!2421 = !DILocation(line: 469, column: 3, scope: !2413)
!2422 = distinct !DISubprogram(name: "fstatat", scope: !2362, file: !2362, line: 474, type: !2423, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2425)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{!482, !482, !487, !2365, !482}
!2425 = !{!2426, !2427, !2428, !2429}
!2426 = !DILocalVariable(name: "__fd", arg: 1, scope: !2422, file: !2362, line: 474, type: !482)
!2427 = !DILocalVariable(name: "__filename", arg: 2, scope: !2422, file: !2362, line: 474, type: !487)
!2428 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2422, file: !2362, line: 474, type: !2365)
!2429 = !DILocalVariable(name: "__flag", arg: 4, scope: !2422, file: !2362, line: 474, type: !482)
!2430 = !DILocation(line: 0, scope: !2422)
!2431 = !DILocation(line: 477, column: 10, scope: !2422)
!2432 = !DILocation(line: 477, column: 3, scope: !2422)
!2433 = distinct !DISubprogram(name: "mknod", scope: !2362, file: !2362, line: 483, type: !2434, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2436)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!482, !487, !2376, !2370}
!2436 = !{!2437, !2438, !2439}
!2437 = !DILocalVariable(name: "__path", arg: 1, scope: !2433, file: !2362, line: 483, type: !487)
!2438 = !DILocalVariable(name: "__mode", arg: 2, scope: !2433, file: !2362, line: 483, type: !2376)
!2439 = !DILocalVariable(name: "__dev", arg: 3, scope: !2433, file: !2362, line: 483, type: !2370)
!2440 = !DILocation(line: 0, scope: !2433)
!2441 = !DILocation(line: 485, column: 10, scope: !2433)
!2442 = !DILocation(line: 485, column: 3, scope: !2433)
!2443 = distinct !DISubprogram(name: "mknodat", scope: !2362, file: !2362, line: 491, type: !2444, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2446)
!2444 = !DISubroutineType(types: !2445)
!2445 = !{!482, !482, !487, !2376, !2370}
!2446 = !{!2447, !2448, !2449, !2450}
!2447 = !DILocalVariable(name: "__fd", arg: 1, scope: !2443, file: !2362, line: 491, type: !482)
!2448 = !DILocalVariable(name: "__path", arg: 2, scope: !2443, file: !2362, line: 491, type: !487)
!2449 = !DILocalVariable(name: "__mode", arg: 3, scope: !2443, file: !2362, line: 491, type: !2376)
!2450 = !DILocalVariable(name: "__dev", arg: 4, scope: !2443, file: !2362, line: 491, type: !2370)
!2451 = !DILocation(line: 0, scope: !2443)
!2452 = !DILocation(line: 494, column: 10, scope: !2443)
!2453 = !DILocation(line: 494, column: 3, scope: !2443)
!2454 = distinct !DISubprogram(name: "stat64", scope: !2362, file: !2362, line: 502, type: !2455, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2477)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!482, !487, !2457}
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2367, line: 119, size: 1152, elements: !2459)
!2459 = !{!2460, !2461, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2473, !2474, !2475, !2476}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2458, file: !2367, line: 121, baseType: !2370, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2458, file: !2367, line: 123, baseType: !2462, size: 64, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2120, line: 149, baseType: !543)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2458, file: !2367, line: 124, baseType: !2374, size: 64, offset: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2458, file: !2367, line: 125, baseType: !2376, size: 32, offset: 192)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2458, file: !2367, line: 132, baseType: !2378, size: 32, offset: 224)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2458, file: !2367, line: 133, baseType: !2380, size: 32, offset: 256)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2458, file: !2367, line: 135, baseType: !482, size: 32, offset: 288)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2458, file: !2367, line: 136, baseType: !2370, size: 64, offset: 320)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2458, file: !2367, line: 137, baseType: !2119, size: 64, offset: 384)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2458, file: !2367, line: 143, baseType: !2385, size: 64, offset: 448)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2458, file: !2367, line: 144, baseType: !2472, size: 64, offset: 512)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2120, line: 180, baseType: !545)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2458, file: !2367, line: 152, baseType: !2389, size: 128, offset: 576)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2458, file: !2367, line: 153, baseType: !2389, size: 128, offset: 704)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2458, file: !2367, line: 154, baseType: !2389, size: 128, offset: 832)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2458, file: !2367, line: 164, baseType: !2399, size: 192, offset: 960)
!2477 = !{!2478, !2479}
!2478 = !DILocalVariable(name: "__path", arg: 1, scope: !2454, file: !2362, line: 502, type: !487)
!2479 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2454, file: !2362, line: 502, type: !2457)
!2480 = !DILocation(line: 0, scope: !2454)
!2481 = !DILocation(line: 504, column: 10, scope: !2454)
!2482 = !DILocation(line: 504, column: 3, scope: !2454)
!2483 = distinct !DISubprogram(name: "lstat64", scope: !2362, file: !2362, line: 509, type: !2455, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2484)
!2484 = !{!2485, !2486}
!2485 = !DILocalVariable(name: "__path", arg: 1, scope: !2483, file: !2362, line: 509, type: !487)
!2486 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2483, file: !2362, line: 509, type: !2457)
!2487 = !DILocation(line: 0, scope: !2483)
!2488 = !DILocation(line: 511, column: 10, scope: !2483)
!2489 = !DILocation(line: 511, column: 3, scope: !2483)
!2490 = distinct !DISubprogram(name: "fstat64", scope: !2362, file: !2362, line: 516, type: !2491, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2493)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!482, !482, !2457}
!2493 = !{!2494, !2495}
!2494 = !DILocalVariable(name: "__fd", arg: 1, scope: !2490, file: !2362, line: 516, type: !482)
!2495 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2490, file: !2362, line: 516, type: !2457)
!2496 = !DILocation(line: 0, scope: !2490)
!2497 = !DILocation(line: 518, column: 10, scope: !2490)
!2498 = !DILocation(line: 518, column: 3, scope: !2490)
!2499 = distinct !DISubprogram(name: "fstatat64", scope: !2362, file: !2362, line: 523, type: !2500, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2502)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{!482, !482, !487, !2457, !482}
!2502 = !{!2503, !2504, !2505, !2506}
!2503 = !DILocalVariable(name: "__fd", arg: 1, scope: !2499, file: !2362, line: 523, type: !482)
!2504 = !DILocalVariable(name: "__filename", arg: 2, scope: !2499, file: !2362, line: 523, type: !487)
!2505 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2499, file: !2362, line: 523, type: !2457)
!2506 = !DILocalVariable(name: "__flag", arg: 4, scope: !2499, file: !2362, line: 523, type: !482)
!2507 = !DILocation(line: 0, scope: !2499)
!2508 = !DILocation(line: 526, column: 10, scope: !2499)
!2509 = !DILocation(line: 526, column: 3, scope: !2499)
!2510 = distinct !DISubprogram(name: "dump_dref", scope: !3, file: !3, line: 342, type: !2511, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2513)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !2093, !1841}
!2513 = !{!2514, !2515}
!2514 = !DILocalVariable(name: "file", arg: 1, scope: !2510, file: !3, line: 342, type: !2093)
!2515 = !DILocalVariable(name: "ref", arg: 2, scope: !2510, file: !3, line: 342, type: !1841)
!2516 = !DILocation(line: 0, scope: !2510)
!2517 = !DILocation(line: 344, column: 12, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 344, column: 7)
!2519 = !DILocation(line: 344, column: 7, scope: !2518)
!2520 = !DILocation(line: 344, column: 7, scope: !2510)
!2521 = !DILocation(line: 346, column: 7, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2518, file: !3, line: 345, column: 5)
!2523 = !DILocation(line: 347, column: 33, scope: !2522)
!2524 = !DILocation(line: 347, column: 7, scope: !2522)
!2525 = !DILocation(line: 348, column: 43, scope: !2522)
!2526 = !DILocation(line: 349, column: 9, scope: !2522)
!2527 = !DILocation(line: 348, column: 7, scope: !2522)
!2528 = !DILocation(line: 351, column: 7, scope: !2522)
!2529 = !DILocation(line: 352, column: 7, scope: !2522)
!2530 = !DILocation(line: 353, column: 7, scope: !2522)
!2531 = !DILocation(line: 355, column: 50, scope: !2522)
!2532 = !DILocation(line: 355, column: 7, scope: !2522)
!2533 = !DILocation(line: 356, column: 5, scope: !2522)
!2534 = !DILocation(line: 359, column: 29, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2536, file: !3, line: 359, column: 11)
!2536 = distinct !DILexicalBlock(scope: !2518, file: !3, line: 358, column: 5)
!2537 = !DILocation(line: 359, column: 11, scope: !2535)
!2538 = !DILocation(line: 359, column: 35, scope: !2535)
!2539 = !DILocation(line: 359, column: 11, scope: !2536)
!2540 = !DILocation(line: 360, column: 2, scope: !2535)
!2541 = !DILocation(line: 362, column: 2, scope: !2535)
!2542 = !DILocation(line: 363, column: 7, scope: !2536)
!2543 = !DILocation(line: 364, column: 37, scope: !2536)
!2544 = !DILocation(line: 364, column: 7, scope: !2536)
!2545 = !DILocation(line: 365, column: 7, scope: !2536)
!2546 = !DILocation(line: 366, column: 50, scope: !2536)
!2547 = !DILocation(line: 366, column: 7, scope: !2536)
!2548 = !DILocation(line: 369, column: 1, scope: !2510)
!2549 = distinct !DISubprogram(name: "gimple_code", scope: !402, file: !402, line: 1052, type: !2550, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2553)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!401, !2552}
!2552 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !490, line: 60, baseType: !2047)
!2553 = !{!2554}
!2554 = !DILocalVariable(name: "g", arg: 1, scope: !2549, file: !402, line: 1052, type: !2552)
!2555 = !DILocation(line: 0, scope: !2549)
!2556 = !DILocation(line: 1054, column: 20, scope: !2549)
!2557 = !DILocation(line: 1054, column: 3, scope: !2549)
!2558 = distinct !DISubprogram(name: "dump_chain", scope: !3, file: !3, line: 375, type: !2559, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2561)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{null, !2093, !1911}
!2561 = !{!2562, !2563, !2564, !2565, !2566, !2567}
!2562 = !DILocalVariable(name: "file", arg: 1, scope: !2558, file: !3, line: 375, type: !2093)
!2563 = !DILocalVariable(name: "chain", arg: 2, scope: !2558, file: !3, line: 375, type: !1911)
!2564 = !DILocalVariable(name: "a", scope: !2558, file: !3, line: 377, type: !1841)
!2565 = !DILocalVariable(name: "chain_type", scope: !2558, file: !3, line: 378, type: !487)
!2566 = !DILocalVariable(name: "i", scope: !2558, file: !3, line: 379, type: !7)
!2567 = !DILocalVariable(name: "var", scope: !2558, file: !3, line: 380, type: !489)
!2568 = !DILocation(line: 0, scope: !2558)
!2569 = !DILocation(line: 377, column: 3, scope: !2558)
!2570 = !DILocation(line: 380, column: 3, scope: !2558)
!2571 = !DILocation(line: 382, column: 18, scope: !2558)
!2572 = !DILocation(line: 382, column: 3, scope: !2558)
!2573 = !DILocation(line: 390, column: 7, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 383, column: 5)
!2575 = !DILocation(line: 394, column: 7, scope: !2574)
!2576 = !DILocation(line: 398, column: 7, scope: !2574)
!2577 = !DILocation(line: 401, column: 7, scope: !2574)
!2578 = !DILocation(line: 402, column: 5, scope: !2574)
!2579 = !DILocation(line: 405, column: 12, scope: !2558)
!2580 = !DILocation(line: 405, column: 5, scope: !2558)
!2581 = !DILocation(line: 404, column: 3, scope: !2558)
!2582 = !DILocation(line: 406, column: 14, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 406, column: 7)
!2584 = !DILocation(line: 406, column: 19, scope: !2583)
!2585 = !DILocation(line: 406, column: 7, scope: !2558)
!2586 = !DILocation(line: 407, column: 52, scope: !2583)
!2587 = !DILocation(line: 408, column: 14, scope: !2583)
!2588 = !DILocation(line: 408, column: 7, scope: !2583)
!2589 = !DILocation(line: 407, column: 5, scope: !2583)
!2590 = !DILocation(line: 410, column: 14, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 410, column: 7)
!2592 = !DILocation(line: 410, column: 7, scope: !2558)
!2593 = !DILocation(line: 413, column: 25, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2591, file: !3, line: 411, column: 5)
!2595 = !DILocation(line: 413, column: 53, scope: !2594)
!2596 = !DILocation(line: 413, column: 30, scope: !2594)
!2597 = !DILocation(line: 414, column: 25, scope: !2594)
!2598 = !DILocation(line: 412, column: 7, scope: !2594)
!2599 = !DILocation(line: 415, column: 40, scope: !2594)
!2600 = !DILocation(line: 415, column: 7, scope: !2594)
!2601 = !DILocation(line: 416, column: 7, scope: !2594)
!2602 = !DILocation(line: 417, column: 5, scope: !2594)
!2603 = !DILocation(line: 419, column: 14, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 419, column: 7)
!2605 = !DILocation(line: 419, column: 7, scope: !2604)
!2606 = !DILocation(line: 419, column: 7, scope: !2558)
!2607 = !DILocation(line: 421, column: 7, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2604, file: !3, line: 420, column: 5)
!2609 = !DILocation(line: 422, column: 12, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2608, file: !3, line: 422, column: 7)
!2611 = !DILocation(line: 0, scope: !2610)
!2612 = !DILocation(line: 422, column: 19, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2610, file: !3, line: 422, column: 7)
!2614 = !DILocation(line: 422, column: 7, scope: !2610)
!2615 = !DILocation(line: 424, column: 4, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2613, file: !3, line: 423, column: 2)
!2617 = !DILocation(line: 425, column: 30, scope: !2616)
!2618 = !DILocation(line: 425, column: 4, scope: !2616)
!2619 = !DILocation(line: 422, column: 61, scope: !2613)
!2620 = !DILocation(line: 422, column: 7, scope: !2613)
!2621 = distinct !{!2621, !2614, !2622}
!2622 = !DILocation(line: 426, column: 2, scope: !2610)
!2623 = !DILocation(line: 427, column: 7, scope: !2608)
!2624 = !DILocation(line: 428, column: 5, scope: !2608)
!2625 = !DILocation(line: 430, column: 14, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 430, column: 7)
!2627 = !DILocation(line: 430, column: 7, scope: !2626)
!2628 = !DILocation(line: 430, column: 7, scope: !2558)
!2629 = !DILocation(line: 432, column: 7, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 431, column: 5)
!2631 = !DILocation(line: 433, column: 12, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2630, file: !3, line: 433, column: 7)
!2633 = !DILocation(line: 0, scope: !2632)
!2634 = !DILocation(line: 433, column: 19, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2632, file: !3, line: 433, column: 7)
!2636 = !DILocation(line: 433, column: 7, scope: !2632)
!2637 = !DILocation(line: 435, column: 4, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2635, file: !3, line: 434, column: 2)
!2639 = !DILocation(line: 436, column: 30, scope: !2638)
!2640 = !DILocation(line: 436, column: 4, scope: !2638)
!2641 = !DILocation(line: 433, column: 62, scope: !2635)
!2642 = !DILocation(line: 433, column: 7, scope: !2635)
!2643 = distinct !{!2643, !2636, !2644}
!2644 = !DILocation(line: 437, column: 2, scope: !2632)
!2645 = !DILocation(line: 438, column: 7, scope: !2630)
!2646 = !DILocation(line: 439, column: 5, scope: !2630)
!2647 = !DILocation(line: 441, column: 3, scope: !2558)
!2648 = !DILocation(line: 0, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2650, file: !3, line: 442, column: 3)
!2650 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 442, column: 3)
!2651 = !DILocation(line: 442, column: 8, scope: !2650)
!2652 = !DILocation(line: 0, scope: !2650)
!2653 = !DILocation(line: 442, column: 15, scope: !2649)
!2654 = !DILocation(line: 442, column: 3, scope: !2650)
!2655 = !DILocation(line: 443, column: 22, scope: !2649)
!2656 = !DILocation(line: 443, column: 5, scope: !2649)
!2657 = !DILocation(line: 442, column: 55, scope: !2649)
!2658 = !DILocation(line: 442, column: 3, scope: !2649)
!2659 = distinct !{!2659, !2654, !2660}
!2660 = !DILocation(line: 443, column: 23, scope: !2650)
!2661 = !DILocation(line: 445, column: 3, scope: !2558)
!2662 = !DILocation(line: 446, column: 1, scope: !2558)
!2663 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !164, file: !164, line: 182, type: !2664, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2668)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!482, !2666, !7, !847}
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1365)
!2668 = !{!2669, !2670, !2671}
!2669 = !DILocalVariable(name: "vec_", arg: 1, scope: !2663, file: !164, line: 182, type: !2666)
!2670 = !DILocalVariable(name: "ix_", arg: 2, scope: !2663, file: !164, line: 182, type: !7)
!2671 = !DILocalVariable(name: "ptr", arg: 3, scope: !2663, file: !164, line: 182, type: !847)
!2672 = !DILocation(line: 0, scope: !2663)
!2673 = !DILocation(line: 182, column: 1, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2663, file: !164, line: 182, column: 1)
!2675 = !DILocation(line: 182, column: 1, scope: !2663)
!2676 = !DILocation(line: 182, column: 1, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2674, file: !164, line: 182, column: 1)
!2678 = !DILocation(line: 182, column: 1, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2674, file: !164, line: 182, column: 1)
!2680 = !DILocation(line: 0, scope: !2674)
!2681 = distinct !DISubprogram(name: "VEC_dref_base_iterate", scope: !3, file: !3, line: 242, type: !2682, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2687)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!482, !2684, !7, !2686}
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1926)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!2687 = !{!2688, !2689, !2690}
!2688 = !DILocalVariable(name: "vec_", arg: 1, scope: !2681, file: !3, line: 242, type: !2684)
!2689 = !DILocalVariable(name: "ix_", arg: 2, scope: !2681, file: !3, line: 242, type: !7)
!2690 = !DILocalVariable(name: "ptr", arg: 3, scope: !2681, file: !3, line: 242, type: !2686)
!2691 = !DILocation(line: 0, scope: !2681)
!2692 = !DILocation(line: 242, column: 1, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2681, file: !3, line: 242, column: 1)
!2694 = !DILocation(line: 242, column: 1, scope: !2681)
!2695 = !DILocation(line: 242, column: 1, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2693, file: !3, line: 242, column: 1)
!2697 = !DILocation(line: 242, column: 1, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2693, file: !3, line: 242, column: 1)
!2699 = !DILocation(line: 0, scope: !2693)
!2700 = distinct !DISubprogram(name: "dump_chains", scope: !3, file: !3, line: 452, type: !2701, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2703)
!2701 = !DISubroutineType(types: !2702)
!2702 = !{null, !2093, !2033}
!2703 = !{!2704, !2705, !2706, !2707}
!2704 = !DILocalVariable(name: "file", arg: 1, scope: !2700, file: !3, line: 452, type: !2093)
!2705 = !DILocalVariable(name: "chains", arg: 2, scope: !2700, file: !3, line: 452, type: !2033)
!2706 = !DILocalVariable(name: "chain", scope: !2700, file: !3, line: 454, type: !1911)
!2707 = !DILocalVariable(name: "i", scope: !2700, file: !3, line: 455, type: !7)
!2708 = !DILocation(line: 0, scope: !2700)
!2709 = !DILocation(line: 454, column: 3, scope: !2700)
!2710 = !DILocation(line: 0, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2712, file: !3, line: 457, column: 3)
!2712 = distinct !DILexicalBlock(scope: !2700, file: !3, line: 457, column: 3)
!2713 = !DILocation(line: 457, column: 8, scope: !2712)
!2714 = !DILocation(line: 0, scope: !2712)
!2715 = !DILocation(line: 457, column: 15, scope: !2711)
!2716 = !DILocation(line: 457, column: 3, scope: !2712)
!2717 = !DILocation(line: 458, column: 23, scope: !2711)
!2718 = !DILocation(line: 458, column: 5, scope: !2711)
!2719 = !DILocation(line: 457, column: 57, scope: !2711)
!2720 = !DILocation(line: 457, column: 3, scope: !2711)
!2721 = distinct !{!2721, !2716, !2722}
!2722 = !DILocation(line: 458, column: 28, scope: !2712)
!2723 = !DILocation(line: 459, column: 1, scope: !2700)
!2724 = distinct !DISubprogram(name: "VEC_chain_p_base_iterate", scope: !3, file: !3, line: 298, type: !2725, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2730)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{!482, !2727, !7, !2729}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2038)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!2730 = !{!2731, !2732, !2733}
!2731 = !DILocalVariable(name: "vec_", arg: 1, scope: !2724, file: !3, line: 298, type: !2727)
!2732 = !DILocalVariable(name: "ix_", arg: 2, scope: !2724, file: !3, line: 298, type: !7)
!2733 = !DILocalVariable(name: "ptr", arg: 3, scope: !2724, file: !3, line: 298, type: !2729)
!2734 = !DILocation(line: 0, scope: !2724)
!2735 = !DILocation(line: 298, column: 1, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2724, file: !3, line: 298, column: 1)
!2737 = !DILocation(line: 298, column: 1, scope: !2724)
!2738 = !DILocation(line: 298, column: 1, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2736, file: !3, line: 298, column: 1)
!2740 = !DILocation(line: 298, column: 1, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2736, file: !3, line: 298, column: 1)
!2742 = !DILocation(line: 0, scope: !2736)
!2743 = distinct !DISubprogram(name: "dump_component", scope: !3, file: !3, line: 465, type: !2744, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2746)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{null, !2093, !2027}
!2746 = !{!2747, !2748, !2749, !2750}
!2747 = !DILocalVariable(name: "file", arg: 1, scope: !2743, file: !3, line: 465, type: !2093)
!2748 = !DILocalVariable(name: "comp", arg: 2, scope: !2743, file: !3, line: 465, type: !2027)
!2749 = !DILocalVariable(name: "a", scope: !2743, file: !3, line: 467, type: !1841)
!2750 = !DILocalVariable(name: "i", scope: !2743, file: !3, line: 468, type: !7)
!2751 = !DILocation(line: 0, scope: !2743)
!2752 = !DILocation(line: 467, column: 3, scope: !2743)
!2753 = !DILocation(line: 471, column: 11, scope: !2743)
!2754 = !DILocation(line: 471, column: 21, scope: !2743)
!2755 = !DILocation(line: 471, column: 5, scope: !2743)
!2756 = !DILocation(line: 470, column: 3, scope: !2743)
!2757 = !DILocation(line: 0, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2759, file: !3, line: 472, column: 3)
!2759 = distinct !DILexicalBlock(scope: !2743, file: !3, line: 472, column: 3)
!2760 = !DILocation(line: 472, column: 8, scope: !2759)
!2761 = !DILocation(line: 0, scope: !2759)
!2762 = !DILocation(line: 472, column: 15, scope: !2758)
!2763 = !DILocation(line: 472, column: 3, scope: !2759)
!2764 = !DILocation(line: 473, column: 22, scope: !2758)
!2765 = !DILocation(line: 473, column: 5, scope: !2758)
!2766 = !DILocation(line: 472, column: 54, scope: !2758)
!2767 = !DILocation(line: 472, column: 3, scope: !2758)
!2768 = distinct !{!2768, !2763, !2769}
!2769 = !DILocation(line: 473, column: 23, scope: !2759)
!2770 = !DILocation(line: 474, column: 3, scope: !2743)
!2771 = !DILocation(line: 475, column: 1, scope: !2743)
!2772 = distinct !DISubprogram(name: "dump_components", scope: !3, file: !3, line: 481, type: !2744, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2773)
!2773 = !{!2774, !2775, !2776}
!2774 = !DILocalVariable(name: "file", arg: 1, scope: !2772, file: !3, line: 481, type: !2093)
!2775 = !DILocalVariable(name: "comps", arg: 2, scope: !2772, file: !3, line: 481, type: !2027)
!2776 = !DILocalVariable(name: "comp", scope: !2772, file: !3, line: 483, type: !2027)
!2777 = !DILocation(line: 0, scope: !2772)
!2778 = !DILocation(line: 485, column: 8, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2772, file: !3, line: 485, column: 3)
!2780 = !DILocation(line: 0, scope: !2779)
!2781 = !DILocation(line: 485, column: 3, scope: !2779)
!2782 = !DILocation(line: 486, column: 5, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2779, file: !3, line: 485, column: 3)
!2784 = !DILocation(line: 485, column: 41, scope: !2783)
!2785 = !DILocation(line: 485, column: 3, scope: !2783)
!2786 = distinct !{!2786, !2781, !2787}
!2787 = !DILocation(line: 486, column: 31, scope: !2779)
!2788 = !DILocation(line: 487, column: 1, scope: !2772)
!2789 = distinct !DISubprogram(name: "mark_virtual_ops_for_renaming", scope: !3, file: !3, line: 1440, type: !2790, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2792)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{null, !813}
!2792 = !{!2793, !2794}
!2793 = !DILocalVariable(name: "stmt", arg: 1, scope: !2789, file: !3, line: 1440, type: !813)
!2794 = !DILocalVariable(name: "var", scope: !2789, file: !3, line: 1442, type: !489)
!2795 = !DILocation(line: 0, scope: !2789)
!2796 = !DILocation(line: 1444, column: 7, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2789, file: !3, line: 1444, column: 7)
!2798 = !DILocation(line: 1444, column: 26, scope: !2797)
!2799 = !DILocation(line: 1444, column: 7, scope: !2789)
!2800 = !DILocation(line: 1446, column: 13, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 1445, column: 5)
!2802 = !DILocation(line: 1447, column: 11, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 1447, column: 11)
!2804 = !DILocation(line: 1447, column: 11, scope: !2801)
!2805 = !DILocation(line: 1450, column: 11, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 1450, column: 11)
!2807 = !DILocation(line: 1450, column: 27, scope: !2806)
!2808 = !DILocation(line: 1450, column: 11, scope: !2801)
!2809 = !DILocation(line: 1451, column: 8, scope: !2806)
!2810 = !DILocation(line: 1451, column: 2, scope: !2806)
!2811 = !DILocation(line: 0, scope: !2801)
!2812 = !DILocation(line: 1452, column: 7, scope: !2801)
!2813 = !DILocation(line: 1453, column: 7, scope: !2801)
!2814 = !DILocation(line: 1456, column: 3, scope: !2789)
!2815 = !DILocation(line: 1457, column: 7, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2789, file: !3, line: 1457, column: 7)
!2817 = !DILocation(line: 1457, column: 7, scope: !2789)
!2818 = !DILocation(line: 1458, column: 40, scope: !2816)
!2819 = !DILocation(line: 1458, column: 28, scope: !2816)
!2820 = !DILocation(line: 1458, column: 5, scope: !2816)
!2821 = !DILocation(line: 1459, column: 1, scope: !2789)
!2822 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !2823, file: !2823, line: 434, type: !2824, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2827)
!2823 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!489, !2826}
!2826 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !473, line: 27, baseType: !847)
!2827 = !{!2828}
!2828 = !DILocalVariable(name: "def", arg: 1, scope: !2822, file: !2823, line: 434, type: !2826)
!2829 = !DILocation(line: 0, scope: !2822)
!2830 = !DILocation(line: 436, column: 10, scope: !2822)
!2831 = !DILocation(line: 436, column: 3, scope: !2822)
!2832 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !402, file: !402, line: 3080, type: !2833, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2835)
!2833 = !DISubroutineType(types: !2834)
!2834 = !{!847, !813}
!2835 = !{!2836}
!2836 = !DILocalVariable(name: "gs", arg: 1, scope: !2832, file: !402, line: 3080, type: !813)
!2837 = !DILocation(line: 0, scope: !2832)
!2838 = !DILocation(line: 3083, column: 26, scope: !2832)
!2839 = !DILocation(line: 3083, column: 3, scope: !2832)
!2840 = distinct !DISubprogram(name: "update_stmt", scope: !402, file: !402, line: 1456, type: !2790, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2841)
!2841 = !{!2842}
!2842 = !DILocalVariable(name: "s", arg: 1, scope: !2840, file: !402, line: 1456, type: !813)
!2843 = !DILocation(line: 0, scope: !2840)
!2844 = !DILocation(line: 1458, column: 7, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2840, file: !402, line: 1458, column: 7)
!2846 = !DILocation(line: 1458, column: 7, scope: !2840)
!2847 = !DILocation(line: 1460, column: 7, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2845, file: !402, line: 1459, column: 5)
!2849 = !DILocation(line: 1461, column: 7, scope: !2848)
!2850 = !DILocation(line: 1462, column: 5, scope: !2848)
!2851 = !DILocation(line: 1463, column: 1, scope: !2840)
!2852 = distinct !DISubprogram(name: "gimple_vuse", scope: !402, file: !402, line: 1365, type: !2853, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2855)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!489, !2552}
!2855 = !{!2856}
!2856 = !DILocalVariable(name: "g", arg: 1, scope: !2852, file: !402, line: 1365, type: !2552)
!2857 = !DILocation(line: 0, scope: !2852)
!2858 = !DILocation(line: 1367, column: 8, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2852, file: !402, line: 1367, column: 7)
!2860 = !DILocation(line: 1367, column: 7, scope: !2852)
!2861 = !DILocation(line: 1369, column: 23, scope: !2852)
!2862 = !DILocation(line: 1369, column: 3, scope: !2852)
!2863 = !DILocation(line: 1370, column: 1, scope: !2852)
!2864 = distinct !DISubprogram(name: "gimple_vop", scope: !2823, file: !2823, line: 49, type: !2865, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2869)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!489, !2867}
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1254)
!2869 = !{!2870}
!2870 = !DILocalVariable(name: "fun", arg: 1, scope: !2864, file: !2823, line: 49, type: !2867)
!2871 = !DILocation(line: 0, scope: !2864)
!2872 = !DILocation(line: 51, column: 3, scope: !2864)
!2873 = !DILocation(line: 52, column: 15, scope: !2864)
!2874 = !DILocation(line: 52, column: 26, scope: !2864)
!2875 = !DILocation(line: 52, column: 3, scope: !2864)
!2876 = distinct !DISubprogram(name: "tree_predictive_commoning", scope: !3, file: !3, line: 2578, type: !2877, scopeLine: 2579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2879)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!7}
!2879 = !{!2880, !2881, !2882, !2888}
!2880 = !DILocalVariable(name: "unrolled", scope: !2876, file: !3, line: 2580, type: !481)
!2881 = !DILocalVariable(name: "loop", scope: !2876, file: !3, line: 2581, type: !1028)
!2882 = !DILocalVariable(name: "li", scope: !2876, file: !3, line: 2582, type: !2883)
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_iterator", file: !146, line: 515, baseType: !2884)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 508, size: 128, elements: !2885)
!2885 = !{!2886, !2887}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "to_visit", scope: !2884, file: !146, line: 511, baseType: !1939, size: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !2884, file: !146, line: 514, baseType: !7, size: 32, offset: 64)
!2888 = !DILocalVariable(name: "ret", scope: !2876, file: !3, line: 2583, type: !7)
!2889 = !DILocation(line: 0, scope: !2876)
!2890 = !DILocation(line: 2581, column: 3, scope: !2876)
!2891 = !DILocation(line: 2582, column: 3, scope: !2876)
!2892 = !DILocation(line: 2585, column: 3, scope: !2876)
!2893 = !DILocation(line: 2586, column: 3, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2876, file: !3, line: 2586, column: 3)
!2895 = !DILocation(line: 2586, column: 3, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 2586, column: 3)
!2897 = !DILocation(line: 2587, column: 9, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2896, file: !3, line: 2587, column: 9)
!2899 = !DILocation(line: 2587, column: 9, scope: !2896)
!2900 = !DILocation(line: 2589, column: 46, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 2588, column: 7)
!2902 = !DILocation(line: 2589, column: 14, scope: !2901)
!2903 = !DILocation(line: 2589, column: 11, scope: !2901)
!2904 = !DILocation(line: 2590, column: 7, scope: !2901)
!2905 = distinct !{!2905, !2893, !2906}
!2906 = !DILocation(line: 2590, column: 7, scope: !2894)
!2907 = !DILocation(line: 2592, column: 7, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2876, file: !3, line: 2592, column: 7)
!2909 = !DILocation(line: 2592, column: 7, scope: !2876)
!2910 = !DILocation(line: 2594, column: 7, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 2593, column: 5)
!2912 = !DILocation(line: 2596, column: 5, scope: !2911)
!2913 = !DILocation(line: 2597, column: 3, scope: !2876)
!2914 = !DILocation(line: 2600, column: 1, scope: !2876)
!2915 = !DILocation(line: 2599, column: 3, scope: !2876)
!2916 = distinct !DISubprogram(name: "fel_init", scope: !146, file: !146, line: 535, type: !2917, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2921)
!2917 = !DISubroutineType(types: !2918)
!2918 = !{null, !2919, !2920, !7}
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!2921 = !{!2922, !2923, !2924, !2925, !2926, !2927}
!2922 = !DILocalVariable(name: "li", arg: 1, scope: !2916, file: !146, line: 535, type: !2919)
!2923 = !DILocalVariable(name: "loop", arg: 2, scope: !2916, file: !146, line: 535, type: !2920)
!2924 = !DILocalVariable(name: "flags", arg: 3, scope: !2916, file: !146, line: 535, type: !7)
!2925 = !DILocalVariable(name: "aloop", scope: !2916, file: !146, line: 537, type: !1028)
!2926 = !DILocalVariable(name: "i", scope: !2916, file: !146, line: 538, type: !7)
!2927 = !DILocalVariable(name: "mn", scope: !2916, file: !146, line: 539, type: !482)
!2928 = !DILocation(line: 0, scope: !2916)
!2929 = !DILocation(line: 537, column: 3, scope: !2916)
!2930 = !DILocation(line: 541, column: 7, scope: !2916)
!2931 = !DILocation(line: 541, column: 11, scope: !2916)
!2932 = !DILocation(line: 542, column: 8, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2916, file: !146, line: 542, column: 7)
!2934 = !DILocation(line: 542, column: 7, scope: !2916)
!2935 = !DILocation(line: 544, column: 11, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2933, file: !146, line: 543, column: 5)
!2937 = !DILocation(line: 544, column: 20, scope: !2936)
!2938 = !DILocation(line: 545, column: 13, scope: !2936)
!2939 = !DILocation(line: 546, column: 7, scope: !2936)
!2940 = !DILocation(line: 549, column: 18, scope: !2916)
!2941 = !DILocation(line: 549, column: 7, scope: !2916)
!2942 = !DILocation(line: 549, column: 16, scope: !2916)
!2943 = !DILocation(line: 554, column: 7, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2945, file: !146, line: 554, column: 7)
!2945 = distinct !DILexicalBlock(scope: !2946, file: !146, line: 553, column: 5)
!2946 = distinct !DILexicalBlock(scope: !2916, file: !146, line: 552, column: 7)
!2947 = !DILocation(line: 0, scope: !2944)
!2948 = !DILocation(line: 554, column: 19, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2944, file: !146, line: 554, column: 7)
!2950 = !DILocation(line: 555, column: 6, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2949, file: !146, line: 555, column: 6)
!2952 = !DILocation(line: 555, column: 12, scope: !2951)
!2953 = !DILocation(line: 556, column: 6, scope: !2951)
!2954 = !DILocation(line: 556, column: 16, scope: !2951)
!2955 = !DILocation(line: 556, column: 22, scope: !2951)
!2956 = !DILocation(line: 557, column: 6, scope: !2951)
!2957 = !DILocation(line: 557, column: 16, scope: !2951)
!2958 = !DILocation(line: 557, column: 20, scope: !2951)
!2959 = !DILocation(line: 555, column: 6, scope: !2949)
!2960 = !DILocation(line: 558, column: 4, scope: !2951)
!2961 = !DILocation(line: 554, column: 75, scope: !2949)
!2962 = !DILocation(line: 554, column: 7, scope: !2949)
!2963 = distinct !{!2963, !2943, !2964}
!2964 = !DILocation(line: 558, column: 4, scope: !2944)
!2965 = !DILocation(line: 608, column: 3, scope: !2916)
!2966 = !DILocation(line: 609, column: 1, scope: !2916)
!2967 = distinct !DISubprogram(name: "tree_predictive_commoning_loop", scope: !3, file: !3, line: 2459, type: !2968, scopeLine: 2460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2970)
!2968 = !DISubroutineType(types: !2969)
!2969 = !{!481, !1028}
!2970 = !{!2971, !2972, !2973, !2974, !2975, !2976, !2977, !2993, !2994, !2995, !2996, !2999}
!2971 = !DILocalVariable(name: "loop", arg: 1, scope: !2967, file: !3, line: 2459, type: !1028)
!2972 = !DILocalVariable(name: "datarefs", scope: !2967, file: !3, line: 2461, type: !1952)
!2973 = !DILocalVariable(name: "dependences", scope: !2967, file: !3, line: 2462, type: !1965)
!2974 = !DILocalVariable(name: "components", scope: !2967, file: !3, line: 2463, type: !2027)
!2975 = !DILocalVariable(name: "chains", scope: !2967, file: !3, line: 2464, type: !2033)
!2976 = !DILocalVariable(name: "unroll_factor", scope: !2967, file: !3, line: 2465, type: !7)
!2977 = !DILocalVariable(name: "desc", scope: !2967, file: !3, line: 2466, type: !2978)
!2978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_niter_desc", file: !1205, line: 657, size: 640, elements: !2979)
!2979 = !{!2980, !2981, !2982, !2983, !2984, !2991, !2992}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "assumptions", scope: !2978, file: !1205, line: 659, baseType: !489, size: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "may_be_zero", scope: !2978, file: !1205, line: 663, baseType: !489, size: 64, offset: 64)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "niter", scope: !2978, file: !1205, line: 667, baseType: !489, size: 64, offset: 128)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2978, file: !1205, line: 671, baseType: !538, size: 128, offset: 192)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2978, file: !1205, line: 679, baseType: !2985, size: 192, offset: 320)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_iv", file: !1205, line: 651, baseType: !2986)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1205, line: 644, size: 192, elements: !2987)
!2987 = !{!2988, !2989, !2990}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2986, file: !1205, line: 647, baseType: !489, size: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2986, file: !1205, line: 647, baseType: !489, size: 64, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "no_overflow", scope: !2986, file: !1205, line: 650, baseType: !481, size: 8, offset: 128)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2978, file: !1205, line: 680, baseType: !489, size: 64, offset: 512)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "cmp", scope: !2978, file: !1205, line: 681, baseType: !196, size: 32, offset: 576)
!2993 = !DILocalVariable(name: "unroll", scope: !2967, file: !3, line: 2467, type: !481)
!2994 = !DILocalVariable(name: "exit", scope: !2967, file: !3, line: 2468, type: !793)
!2995 = !DILocalVariable(name: "tmp_vars", scope: !2967, file: !3, line: 2469, type: !1383)
!2996 = !DILocalVariable(name: "dta", scope: !2997, file: !3, line: 2534, type: !2053)
!2997 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 2533, column: 5)
!2998 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 2532, column: 7)
!2999 = !DILabel(scope: !2967, name: "end", file: !3, line: 2564)
!3000 = !DILocation(line: 0, scope: !2967)
!3001 = !DILocation(line: 2461, column: 3, scope: !2967)
!3002 = !DILocation(line: 2462, column: 3, scope: !2967)
!3003 = !DILocation(line: 2464, column: 3, scope: !2967)
!3004 = !DILocation(line: 2464, column: 24, scope: !2967)
!3005 = !DILocation(line: 2466, column: 3, scope: !2967)
!3006 = !DILocation(line: 2471, column: 7, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 2471, column: 7)
!3008 = !DILocation(line: 2471, column: 17, scope: !3007)
!3009 = !DILocation(line: 2471, column: 21, scope: !3007)
!3010 = !DILocation(line: 2471, column: 32, scope: !3007)
!3011 = !DILocation(line: 2471, column: 7, scope: !2967)
!3012 = !DILocation(line: 2472, column: 56, scope: !3007)
!3013 = !DILocation(line: 2472, column: 5, scope: !3007)
!3014 = !DILocation(line: 2476, column: 14, scope: !2967)
!3015 = !DILocation(line: 2476, column: 12, scope: !2967)
!3016 = !DILocation(line: 2477, column: 17, scope: !2967)
!3017 = !DILocation(line: 2477, column: 15, scope: !2967)
!3018 = !DILocation(line: 2478, column: 3, scope: !2967)
!3019 = !DILocation(line: 2479, column: 7, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 2479, column: 7)
!3021 = !DILocation(line: 2479, column: 17, scope: !3020)
!3022 = !DILocation(line: 2479, column: 21, scope: !3020)
!3023 = !DILocation(line: 2479, column: 32, scope: !3020)
!3024 = !DILocation(line: 2479, column: 7, scope: !2967)
!3025 = !DILocation(line: 2480, column: 48, scope: !3020)
!3026 = !DILocation(line: 2480, column: 5, scope: !3020)
!3027 = !DILocation(line: 2482, column: 53, scope: !2967)
!3028 = !DILocation(line: 2482, column: 63, scope: !2967)
!3029 = !DILocation(line: 2482, column: 16, scope: !2967)
!3030 = !DILocation(line: 2483, column: 30, scope: !2967)
!3031 = !DILocation(line: 2483, column: 3, scope: !2967)
!3032 = !DILocation(line: 2484, column: 8, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 2484, column: 7)
!3034 = !DILocation(line: 2484, column: 7, scope: !2967)
!3035 = !DILocation(line: 2486, column: 23, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 2485, column: 5)
!3037 = !DILocation(line: 2486, column: 7, scope: !3036)
!3038 = !DILocation(line: 2487, column: 7, scope: !3036)
!3039 = !DILocation(line: 2490, column: 7, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 2490, column: 7)
!3041 = !DILocation(line: 2490, column: 17, scope: !3040)
!3042 = !DILocation(line: 2490, column: 21, scope: !3040)
!3043 = !DILocation(line: 2490, column: 32, scope: !3040)
!3044 = !DILocation(line: 2490, column: 7, scope: !2967)
!3045 = !DILocation(line: 2492, column: 7, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 2491, column: 5)
!3047 = !DILocation(line: 2493, column: 24, scope: !3046)
!3048 = !DILocation(line: 2493, column: 7, scope: !3046)
!3049 = !DILocation(line: 2494, column: 5, scope: !3046)
!3050 = !DILocation(line: 2497, column: 16, scope: !2967)
!3051 = !DILocation(line: 2499, column: 14, scope: !2967)
!3052 = !DILocation(line: 2500, column: 21, scope: !2967)
!3053 = !DILocation(line: 2500, column: 19, scope: !2967)
!3054 = !DILocation(line: 2501, column: 3, scope: !2967)
!3055 = !DILocation(line: 2502, column: 3, scope: !2967)
!3056 = !DILocation(line: 2504, column: 8, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 2504, column: 7)
!3058 = !DILocation(line: 2504, column: 7, scope: !2967)
!3059 = !DILocation(line: 2506, column: 11, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 2506, column: 11)
!3061 = distinct !DILexicalBlock(scope: !3057, file: !3, line: 2505, column: 5)
!3062 = !DILocation(line: 2506, column: 21, scope: !3060)
!3063 = !DILocation(line: 2506, column: 25, scope: !3060)
!3064 = !DILocation(line: 2506, column: 36, scope: !3060)
!3065 = !DILocation(line: 2506, column: 11, scope: !3061)
!3066 = !DILocation(line: 2507, column: 2, scope: !3060)
!3067 = !DILocation(line: 2511, column: 3, scope: !2967)
!3068 = !DILocation(line: 2514, column: 3, scope: !2967)
!3069 = !DILocation(line: 2516, column: 7, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 2516, column: 7)
!3071 = !DILocation(line: 2516, column: 17, scope: !3070)
!3072 = !DILocation(line: 2516, column: 21, scope: !3070)
!3073 = !DILocation(line: 2516, column: 32, scope: !3070)
!3074 = !DILocation(line: 2516, column: 7, scope: !2967)
!3075 = !DILocation(line: 2518, column: 7, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 2517, column: 5)
!3077 = !DILocation(line: 2519, column: 20, scope: !3076)
!3078 = !DILocation(line: 2519, column: 31, scope: !3076)
!3079 = !DILocation(line: 2519, column: 7, scope: !3076)
!3080 = !DILocation(line: 2520, column: 5, scope: !3076)
!3081 = !DILocation(line: 2524, column: 44, scope: !2967)
!3082 = !DILocation(line: 2524, column: 19, scope: !2967)
!3083 = !DILocation(line: 2525, column: 3, scope: !2967)
!3084 = !DILocation(line: 2526, column: 27, scope: !2967)
!3085 = !DILocation(line: 2527, column: 6, scope: !2967)
!3086 = !DILocation(line: 2527, column: 9, scope: !2967)
!3087 = !DILocation(line: 2528, column: 10, scope: !2967)
!3088 = !DILocation(line: 2532, column: 7, scope: !2998)
!3089 = !DILocation(line: 2532, column: 7, scope: !2967)
!3090 = !DILocation(line: 2534, column: 7, scope: !2997)
!3091 = !DILocation(line: 2536, column: 11, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 2536, column: 11)
!3093 = !DILocation(line: 2536, column: 21, scope: !3092)
!3094 = !DILocation(line: 2536, column: 25, scope: !3092)
!3095 = !DILocation(line: 2536, column: 36, scope: !3092)
!3096 = !DILocation(line: 2536, column: 11, scope: !2997)
!3097 = !DILocation(line: 2537, column: 2, scope: !3092)
!3098 = !DILocation(line: 2539, column: 20, scope: !2997)
!3099 = !DILocation(line: 2539, column: 18, scope: !2997)
!3100 = !DILocation(line: 2540, column: 11, scope: !2997)
!3101 = !DILocation(line: 2540, column: 20, scope: !2997)
!3102 = !DILocation(line: 2542, column: 7, scope: !2997)
!3103 = !DILocation(line: 2550, column: 38, scope: !2997)
!3104 = !DILocation(line: 2550, column: 7, scope: !2997)
!3105 = !DILocation(line: 2552, column: 7, scope: !2997)
!3106 = !DILocation(line: 2554, column: 7, scope: !2997)
!3107 = !DILocation(line: 2555, column: 5, scope: !2998)
!3108 = !DILocation(line: 2555, column: 5, scope: !2997)
!3109 = !DILocation(line: 2558, column: 11, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 2558, column: 11)
!3111 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 2557, column: 5)
!3112 = !DILocation(line: 2558, column: 21, scope: !3110)
!3113 = !DILocation(line: 2558, column: 25, scope: !3110)
!3114 = !DILocation(line: 2558, column: 36, scope: !3110)
!3115 = !DILocation(line: 2558, column: 11, scope: !3111)
!3116 = !DILocation(line: 2559, column: 2, scope: !3110)
!3117 = !DILocation(line: 2561, column: 37, scope: !3111)
!3118 = !DILocation(line: 2561, column: 7, scope: !3111)
!3119 = !DILocation(line: 2564, column: 1, scope: !2967)
!3120 = !DILocation(line: 2565, column: 19, scope: !2967)
!3121 = !DILocation(line: 2565, column: 3, scope: !2967)
!3122 = !DILocation(line: 2566, column: 19, scope: !2967)
!3123 = !DILocation(line: 2566, column: 3, scope: !2967)
!3124 = !DILocation(line: 2567, column: 3, scope: !2967)
!3125 = !DILocation(line: 2568, column: 3, scope: !2967)
!3126 = !DILocation(line: 2570, column: 3, scope: !2967)
!3127 = !DILocation(line: 2572, column: 3, scope: !2967)
!3128 = !DILocation(line: 2573, column: 1, scope: !2967)
!3129 = distinct !DISubprogram(name: "fel_next", scope: !146, file: !146, line: 518, type: !3130, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3132)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{null, !2919, !2920}
!3132 = !{!3133, !3134, !3135}
!3133 = !DILocalVariable(name: "li", arg: 1, scope: !3129, file: !146, line: 518, type: !2919)
!3134 = !DILocalVariable(name: "loop", arg: 2, scope: !3129, file: !146, line: 518, type: !2920)
!3135 = !DILocalVariable(name: "anum", scope: !3129, file: !146, line: 520, type: !482)
!3136 = !DILocation(line: 0, scope: !3129)
!3137 = !DILocation(line: 520, column: 3, scope: !3129)
!3138 = !DILocation(line: 522, column: 3, scope: !3129)
!3139 = !DILocation(line: 522, column: 10, scope: !3129)
!3140 = !DILocation(line: 524, column: 14, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3129, file: !146, line: 523, column: 5)
!3142 = !DILocation(line: 525, column: 25, scope: !3141)
!3143 = !DILocation(line: 525, column: 15, scope: !3141)
!3144 = !DILocation(line: 525, column: 13, scope: !3141)
!3145 = !DILocation(line: 526, column: 11, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3141, file: !146, line: 526, column: 11)
!3147 = !DILocation(line: 526, column: 11, scope: !3141)
!3148 = distinct !{!3148, !3138, !3149}
!3149 = !DILocation(line: 528, column: 5, scope: !3129)
!3150 = !DILocation(line: 530, column: 3, scope: !3129)
!3151 = !DILocation(line: 531, column: 9, scope: !3129)
!3152 = !DILocation(line: 532, column: 1, scope: !3129)
!3153 = distinct !DISubprogram(name: "gimple_has_ops", scope: !402, file: !402, line: 1274, type: !3154, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3156)
!3154 = !DISubroutineType(types: !3155)
!3155 = !{!481, !2552}
!3156 = !{!3157}
!3157 = !DILocalVariable(name: "g", arg: 1, scope: !3153, file: !402, line: 1274, type: !2552)
!3158 = !DILocation(line: 0, scope: !3153)
!3159 = !DILocation(line: 1276, column: 10, scope: !3153)
!3160 = !DILocation(line: 1276, column: 26, scope: !3153)
!3161 = !DILocation(line: 1276, column: 41, scope: !3153)
!3162 = !DILocation(line: 1276, column: 44, scope: !3153)
!3163 = !DILocation(line: 1276, column: 60, scope: !3153)
!3164 = !DILocation(line: 1276, column: 3, scope: !3153)
!3165 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !402, file: !402, line: 1283, type: !3154, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3166)
!3166 = !{!3167}
!3167 = !DILocalVariable(name: "g", arg: 1, scope: !3165, file: !402, line: 1283, type: !2552)
!3168 = !DILocation(line: 0, scope: !3165)
!3169 = !DILocation(line: 1285, column: 10, scope: !3165)
!3170 = !DILocation(line: 1285, column: 26, scope: !3165)
!3171 = !DILocation(line: 1285, column: 43, scope: !3165)
!3172 = !DILocation(line: 1285, column: 46, scope: !3165)
!3173 = !DILocation(line: 1285, column: 62, scope: !3165)
!3174 = !DILocation(line: 1285, column: 3, scope: !3165)
!3175 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !1941, file: !1941, line: 32, type: !3176, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3178)
!3176 = !DISubroutineType(types: !3177)
!3177 = !{!1939, !482}
!3178 = !{!3179}
!3179 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3175, file: !1941, line: 32, type: !482)
!3180 = !DILocation(line: 0, scope: !3175)
!3181 = !DILocation(line: 32, column: 1, scope: !3175)
!3182 = distinct !DISubprogram(name: "number_of_loops", scope: !146, file: !146, line: 459, type: !2877, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2086)
!3183 = !DILocation(line: 461, column: 8, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3182, file: !146, line: 461, column: 7)
!3185 = !DILocation(line: 461, column: 7, scope: !3182)
!3186 = !DILocation(line: 464, column: 10, scope: !3182)
!3187 = !DILocation(line: 464, column: 3, scope: !3182)
!3188 = !DILocation(line: 0, scope: !3182)
!3189 = !DILocation(line: 465, column: 1, scope: !3182)
!3190 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !146, file: !146, line: 85, type: !3191, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3195)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{!482, !3193, !7, !2920}
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1048)
!3195 = !{!3196, !3197, !3198}
!3196 = !DILocalVariable(name: "vec_", arg: 1, scope: !3190, file: !146, line: 85, type: !3193)
!3197 = !DILocalVariable(name: "ix_", arg: 2, scope: !3190, file: !146, line: 85, type: !7)
!3198 = !DILocalVariable(name: "ptr", arg: 3, scope: !3190, file: !146, line: 85, type: !2920)
!3199 = !DILocation(line: 0, scope: !3190)
!3200 = !DILocation(line: 85, column: 1, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3190, file: !146, line: 85, column: 1)
!3202 = !DILocation(line: 85, column: 1, scope: !3190)
!3203 = !DILocation(line: 85, column: 1, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3201, file: !146, line: 85, column: 1)
!3205 = !DILocation(line: 85, column: 1, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3201, file: !146, line: 85, column: 1)
!3207 = !DILocation(line: 0, scope: !3201)
!3208 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !1941, file: !1941, line: 31, type: !3209, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3212)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!1904, !3211, !482}
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!3212 = !{!3213, !3214, !3215}
!3213 = !DILocalVariable(name: "vec_", arg: 1, scope: !3208, file: !1941, line: 31, type: !3211)
!3214 = !DILocalVariable(name: "obj_", arg: 2, scope: !3208, file: !1941, line: 31, type: !482)
!3215 = !DILocalVariable(name: "slot_", scope: !3208, file: !1941, line: 31, type: !1904)
!3216 = !DILocation(line: 0, scope: !3208)
!3217 = !DILocation(line: 31, column: 1, scope: !3208)
!3218 = distinct !DISubprogram(name: "loop_outer", scope: !146, file: !146, line: 434, type: !3219, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3223)
!3219 = !DISubroutineType(types: !3220)
!3220 = !{!1028, !3221}
!3221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3222, size: 64)
!3222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!3223 = !{!3224, !3225}
!3224 = !DILocalVariable(name: "loop", arg: 1, scope: !3218, file: !146, line: 434, type: !3221)
!3225 = !DILocalVariable(name: "n", scope: !3218, file: !146, line: 436, type: !7)
!3226 = !DILocation(line: 0, scope: !3218)
!3227 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !146, file: !146, line: 85, type: !3228, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3230)
!3228 = !DISubroutineType(types: !3229)
!3229 = !{!7, !3193}
!3230 = !{!3231}
!3231 = !DILocalVariable(name: "vec_", arg: 1, scope: !3227, file: !146, line: 85, type: !3193)
!3232 = !DILocation(line: 0, scope: !3227)
!3233 = !DILocation(line: 85, column: 1, scope: !3227)
!3234 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !146, file: !146, line: 85, type: !3235, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3237)
!3235 = !DISubroutineType(types: !3236)
!3236 = !{!1055, !3193, !7}
!3237 = !{!3238, !3239}
!3238 = !DILocalVariable(name: "vec_", arg: 1, scope: !3234, file: !146, line: 85, type: !3193)
!3239 = !DILocalVariable(name: "ix_", arg: 2, scope: !3234, file: !146, line: 85, type: !7)
!3240 = !DILocation(line: 0, scope: !3234)
!3241 = !DILocation(line: 85, column: 1, scope: !3234)
!3242 = distinct !DISubprogram(name: "VEC_data_reference_p_heap_alloc", scope: !1848, file: !1848, line: 209, type: !3243, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3245)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{!1952, !482}
!3245 = !{!3246}
!3246 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3242, file: !1848, line: 209, type: !482)
!3247 = !DILocation(line: 0, scope: !3242)
!3248 = !DILocation(line: 209, column: 1, scope: !3242)
!3249 = distinct !DISubprogram(name: "VEC_ddr_p_heap_alloc", scope: !1848, file: !1848, line: 333, type: !3250, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3252)
!3250 = !DISubroutineType(types: !3251)
!3251 = !{!1965, !482}
!3252 = !{!3253}
!3253 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3249, file: !1848, line: 333, type: !482)
!3254 = !DILocation(line: 0, scope: !3249)
!3255 = !DILocation(line: 333, column: 1, scope: !3249)
!3256 = distinct !DISubprogram(name: "split_data_refs_to_components", scope: !3, file: !3, line: 694, type: !3257, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3259)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{!2027, !1028, !1952, !1965}
!3259 = !{!3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3284, !3288}
!3260 = !DILocalVariable(name: "loop", arg: 1, scope: !3256, file: !3, line: 694, type: !1028)
!3261 = !DILocalVariable(name: "datarefs", arg: 2, scope: !3256, file: !3, line: 695, type: !1952)
!3262 = !DILocalVariable(name: "depends", arg: 3, scope: !3256, file: !3, line: 696, type: !1965)
!3263 = !DILocalVariable(name: "i", scope: !3256, file: !3, line: 698, type: !7)
!3264 = !DILocalVariable(name: "n", scope: !3256, file: !3, line: 698, type: !7)
!3265 = !DILocalVariable(name: "ca", scope: !3256, file: !3, line: 699, type: !7)
!3266 = !DILocalVariable(name: "ia", scope: !3256, file: !3, line: 699, type: !7)
!3267 = !DILocalVariable(name: "ib", scope: !3256, file: !3, line: 699, type: !7)
!3268 = !DILocalVariable(name: "bad", scope: !3256, file: !3, line: 699, type: !7)
!3269 = !DILocalVariable(name: "comp_father", scope: !3256, file: !3, line: 700, type: !2025)
!3270 = !DILocalVariable(name: "comp_size", scope: !3256, file: !3, line: 701, type: !2025)
!3271 = !DILocalVariable(name: "comps", scope: !3256, file: !3, line: 702, type: !2026)
!3272 = !DILocalVariable(name: "dr", scope: !3256, file: !3, line: 703, type: !1846)
!3273 = !DILocalVariable(name: "dra", scope: !3256, file: !3, line: 703, type: !1846)
!3274 = !DILocalVariable(name: "drb", scope: !3256, file: !3, line: 703, type: !1846)
!3275 = !DILocalVariable(name: "ddr", scope: !3256, file: !3, line: 704, type: !1978)
!3276 = !DILocalVariable(name: "comp_list", scope: !3256, file: !3, line: 705, type: !2027)
!3277 = !DILocalVariable(name: "comp", scope: !3256, file: !3, line: 705, type: !2027)
!3278 = !DILocalVariable(name: "dataref", scope: !3256, file: !3, line: 706, type: !1841)
!3279 = !DILocalVariable(name: "last_always_executed", scope: !3256, file: !3, line: 707, type: !1265)
!3280 = !DILocalVariable(name: "dummy", scope: !3281, file: !3, line: 728, type: !396)
!3281 = distinct !DILexicalBlock(scope: !3282, file: !3, line: 727, column: 5)
!3282 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 726, column: 3)
!3283 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 726, column: 3)
!3284 = !DILocalVariable(name: "dummy_off", scope: !3285, file: !3, line: 739, type: !538)
!3285 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 738, column: 5)
!3286 = distinct !DILexicalBlock(scope: !3287, file: !3, line: 737, column: 3)
!3287 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 737, column: 3)
!3288 = !DILabel(scope: !3256, name: "end", file: !3, line: 803)
!3289 = !DILocation(line: 0, scope: !3256)
!3290 = !DILocation(line: 698, column: 19, scope: !3256)
!3291 = !DILocation(line: 700, column: 27, scope: !3256)
!3292 = !DILocation(line: 701, column: 25, scope: !3256)
!3293 = !DILocation(line: 703, column: 3, scope: !3256)
!3294 = !DILocation(line: 704, column: 3, scope: !3256)
!3295 = !DILocation(line: 707, column: 38, scope: !3256)
!3296 = !DILocation(line: 709, column: 8, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 709, column: 3)
!3298 = !DILocation(line: 0, scope: !3297)
!3299 = !DILocation(line: 709, column: 15, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 709, column: 3)
!3301 = !DILocation(line: 709, column: 3, scope: !3297)
!3302 = !DILocation(line: 711, column: 12, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 711, column: 11)
!3304 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 710, column: 5)
!3305 = !DILocation(line: 711, column: 11, scope: !3304)
!3306 = !DILocation(line: 717, column: 26, scope: !3304)
!3307 = !DILocation(line: 717, column: 17, scope: !3304)
!3308 = !DILocation(line: 717, column: 11, scope: !3304)
!3309 = !DILocation(line: 717, column: 15, scope: !3304)
!3310 = !DILocation(line: 718, column: 7, scope: !3304)
!3311 = !DILocation(line: 718, column: 22, scope: !3304)
!3312 = !DILocation(line: 719, column: 7, scope: !3304)
!3313 = !DILocation(line: 719, column: 20, scope: !3304)
!3314 = !DILocation(line: 709, column: 65, scope: !3300)
!3315 = !DILocation(line: 709, column: 3, scope: !3300)
!3316 = distinct !{!3316, !3301, !3317}
!3317 = !DILocation(line: 720, column: 5, scope: !3297)
!3318 = !DILocation(line: 723, column: 3, scope: !3256)
!3319 = !DILocation(line: 723, column: 18, scope: !3256)
!3320 = !DILocation(line: 724, column: 3, scope: !3256)
!3321 = !DILocation(line: 724, column: 16, scope: !3256)
!3322 = !DILocation(line: 0, scope: !3281)
!3323 = !DILocation(line: 726, column: 8, scope: !3283)
!3324 = !DILocation(line: 0, scope: !3283)
!3325 = !DILocation(line: 726, column: 15, scope: !3282)
!3326 = !DILocation(line: 726, column: 3, scope: !3283)
!3327 = !DILocation(line: 0, scope: !3286)
!3328 = !DILocation(line: 0, scope: !3285)
!3329 = !DILocation(line: 737, column: 3, scope: !3287)
!3330 = !DILocation(line: 728, column: 7, scope: !3281)
!3331 = !DILocation(line: 730, column: 34, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 730, column: 11)
!3333 = !DILocation(line: 730, column: 12, scope: !3332)
!3334 = !DILocation(line: 730, column: 11, scope: !3281)
!3335 = !DILocation(line: 732, column: 29, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 731, column: 2)
!3337 = !DILocation(line: 732, column: 33, scope: !3336)
!3338 = !DILocation(line: 732, column: 9, scope: !3336)
!3339 = !DILocation(line: 733, column: 4, scope: !3336)
!3340 = !DILocation(line: 734, column: 2, scope: !3336)
!3341 = !DILocation(line: 735, column: 5, scope: !3282)
!3342 = !DILocation(line: 726, column: 65, scope: !3282)
!3343 = !DILocation(line: 726, column: 3, scope: !3282)
!3344 = distinct !{!3344, !3326, !3345}
!3345 = !DILocation(line: 735, column: 5, scope: !3283)
!3346 = !DILocation(line: 0, scope: !3287)
!3347 = !DILocation(line: 737, column: 15, scope: !3286)
!3348 = !DILocation(line: 739, column: 7, scope: !3285)
!3349 = !DILocation(line: 741, column: 11, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 741, column: 11)
!3351 = !DILocation(line: 741, column: 38, scope: !3350)
!3352 = !DILocation(line: 741, column: 35, scope: !3350)
!3353 = !DILocation(line: 741, column: 11, scope: !3285)
!3354 = !DILocation(line: 744, column: 13, scope: !3285)
!3355 = !DILocation(line: 745, column: 13, scope: !3285)
!3356 = !DILocation(line: 746, column: 64, scope: !3285)
!3357 = !DILocation(line: 746, column: 39, scope: !3285)
!3358 = !DILocation(line: 746, column: 12, scope: !3285)
!3359 = !DILocation(line: 747, column: 64, scope: !3285)
!3360 = !DILocation(line: 747, column: 39, scope: !3285)
!3361 = !DILocation(line: 747, column: 12, scope: !3285)
!3362 = !DILocation(line: 748, column: 14, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 748, column: 11)
!3364 = !DILocation(line: 748, column: 11, scope: !3285)
!3365 = !DILocation(line: 751, column: 13, scope: !3285)
!3366 = !DILocation(line: 754, column: 11, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 754, column: 11)
!3368 = !DILocation(line: 754, column: 28, scope: !3367)
!3369 = !DILocation(line: 754, column: 31, scope: !3367)
!3370 = !DILocation(line: 755, column: 4, scope: !3367)
!3371 = !DILocation(line: 755, column: 11, scope: !3367)
!3372 = !DILocation(line: 755, column: 24, scope: !3367)
!3373 = !DILocation(line: 755, column: 18, scope: !3367)
!3374 = !DILocation(line: 756, column: 12, scope: !3367)
!3375 = !DILocation(line: 754, column: 11, scope: !3285)
!3376 = !DILocation(line: 759, column: 7, scope: !3285)
!3377 = !DILocation(line: 760, column: 5, scope: !3286)
!3378 = !DILocation(line: 737, column: 54, scope: !3286)
!3379 = !DILocation(line: 737, column: 3, scope: !3286)
!3380 = distinct !{!3380, !3329, !3381}
!3381 = !DILocation(line: 760, column: 5, scope: !3287)
!3382 = !DILocation(line: 762, column: 11, scope: !3256)
!3383 = !DILocation(line: 763, column: 9, scope: !3256)
!3384 = !DILocation(line: 0, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 765, column: 5)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 764, column: 3)
!3387 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 764, column: 3)
!3388 = !DILocation(line: 764, column: 8, scope: !3387)
!3389 = !DILocation(line: 0, scope: !3387)
!3390 = !DILocation(line: 764, column: 15, scope: !3386)
!3391 = !DILocation(line: 764, column: 3, scope: !3387)
!3392 = !DILocation(line: 792, column: 17, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 792, column: 3)
!3394 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 792, column: 3)
!3395 = !DILocation(line: 792, column: 3, scope: !3394)
!3396 = !DILocation(line: 766, column: 32, scope: !3385)
!3397 = !DILocation(line: 766, column: 36, scope: !3385)
!3398 = !DILocation(line: 766, column: 12, scope: !3385)
!3399 = !DILocation(line: 767, column: 12, scope: !3385)
!3400 = !DILocation(line: 768, column: 14, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 768, column: 11)
!3402 = !DILocation(line: 768, column: 11, scope: !3385)
!3403 = !DILocation(line: 771, column: 14, scope: !3385)
!3404 = !DILocation(line: 772, column: 12, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 772, column: 11)
!3406 = !DILocation(line: 772, column: 11, scope: !3385)
!3407 = !DILocation(line: 774, column: 11, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 773, column: 2)
!3409 = !DILocation(line: 775, column: 17, scope: !3408)
!3410 = !DILocation(line: 775, column: 10, scope: !3408)
!3411 = !DILocation(line: 775, column: 15, scope: !3408)
!3412 = !DILocation(line: 776, column: 14, scope: !3408)
!3413 = !DILocation(line: 777, column: 2, scope: !3408)
!3414 = !DILocation(line: 779, column: 17, scope: !3385)
!3415 = !DILocation(line: 780, column: 22, scope: !3385)
!3416 = !DILocation(line: 780, column: 20, scope: !3385)
!3417 = !DILocation(line: 781, column: 23, scope: !3385)
!3418 = !DILocation(line: 781, column: 16, scope: !3385)
!3419 = !DILocation(line: 781, column: 21, scope: !3385)
!3420 = !DILocation(line: 782, column: 16, scope: !3385)
!3421 = !DILocation(line: 782, column: 25, scope: !3385)
!3422 = !DILocation(line: 783, column: 16, scope: !3385)
!3423 = !DILocation(line: 783, column: 25, scope: !3385)
!3424 = !DILocation(line: 787, column: 25, scope: !3385)
!3425 = !DILocation(line: 787, column: 5, scope: !3385)
!3426 = !DILocation(line: 786, column: 10, scope: !3385)
!3427 = !DILocation(line: 785, column: 16, scope: !3385)
!3428 = !DILocation(line: 786, column: 8, scope: !3385)
!3429 = !DILocation(line: 788, column: 22, scope: !3385)
!3430 = !DILocation(line: 788, column: 16, scope: !3385)
!3431 = !DILocation(line: 788, column: 20, scope: !3385)
!3432 = !DILocation(line: 789, column: 7, scope: !3385)
!3433 = !DILocation(line: 790, column: 5, scope: !3385)
!3434 = !DILocation(line: 764, column: 65, scope: !3386)
!3435 = !DILocation(line: 764, column: 3, scope: !3386)
!3436 = distinct !{!3436, !3391, !3437}
!3437 = !DILocation(line: 790, column: 5, scope: !3387)
!3438 = !DILocation(line: 0, scope: !3394)
!3439 = !DILocation(line: 794, column: 14, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 793, column: 5)
!3441 = !DILocation(line: 795, column: 11, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 795, column: 11)
!3443 = !DILocation(line: 795, column: 11, scope: !3440)
!3444 = !DILocation(line: 797, column: 10, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3442, file: !3, line: 796, column: 2)
!3446 = !DILocation(line: 797, column: 15, scope: !3445)
!3447 = !DILocation(line: 799, column: 2, scope: !3445)
!3448 = !DILocation(line: 792, column: 23, scope: !3393)
!3449 = !DILocation(line: 792, column: 3, scope: !3393)
!3450 = distinct !{!3450, !3395, !3451}
!3451 = !DILocation(line: 800, column: 5, scope: !3394)
!3452 = !DILocation(line: 801, column: 3, scope: !3256)
!3453 = !DILocation(line: 804, column: 3, scope: !3256)
!3454 = !DILocation(line: 705, column: 21, scope: !3256)
!3455 = !DILocation(line: 803, column: 1, scope: !3256)
!3456 = !DILocation(line: 805, column: 3, scope: !3256)
!3457 = !DILocation(line: 807, column: 1, scope: !3256)
!3458 = !DILocation(line: 806, column: 3, scope: !3256)
!3459 = distinct !DISubprogram(name: "filter_suitable_components", scope: !3, file: !3, line: 870, type: !3460, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3462)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{!2027, !1028, !2027}
!3462 = !{!3463, !3464, !3465, !3466, !3467, !3473}
!3463 = !DILocalVariable(name: "loop", arg: 1, scope: !3459, file: !3, line: 870, type: !1028)
!3464 = !DILocalVariable(name: "comps", arg: 2, scope: !3459, file: !3, line: 870, type: !2027)
!3465 = !DILocalVariable(name: "comp", scope: !3459, file: !3, line: 872, type: !2026)
!3466 = !DILocalVariable(name: "act", scope: !3459, file: !3, line: 872, type: !2027)
!3467 = !DILocalVariable(name: "ref", scope: !3468, file: !3, line: 881, type: !1841)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 880, column: 2)
!3469 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 877, column: 11)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !3, line: 875, column: 5)
!3471 = distinct !DILexicalBlock(scope: !3472, file: !3, line: 874, column: 3)
!3472 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 874, column: 3)
!3473 = !DILocalVariable(name: "i", scope: !3468, file: !3, line: 882, type: !7)
!3474 = !DILocation(line: 0, scope: !3459)
!3475 = !DILocation(line: 0, scope: !3468)
!3476 = !DILocation(line: 0, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 885, column: 4)
!3478 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 885, column: 4)
!3479 = !DILocation(line: 874, column: 8, scope: !3472)
!3480 = !DILocation(line: 874, column: 23, scope: !3471)
!3481 = !DILocation(line: 0, scope: !3472)
!3482 = !DILocation(line: 874, column: 3, scope: !3472)
!3483 = !DILocation(line: 877, column: 11, scope: !3469)
!3484 = !DILocation(line: 877, column: 11, scope: !3470)
!3485 = !DILocation(line: 878, column: 15, scope: !3469)
!3486 = !DILocation(line: 878, column: 2, scope: !3469)
!3487 = !DILocation(line: 881, column: 4, scope: !3468)
!3488 = !DILocation(line: 884, column: 17, scope: !3468)
!3489 = !DILocation(line: 884, column: 10, scope: !3468)
!3490 = !DILocation(line: 885, column: 9, scope: !3478)
!3491 = !DILocation(line: 0, scope: !3478)
!3492 = !DILocation(line: 885, column: 16, scope: !3477)
!3493 = !DILocation(line: 885, column: 4, scope: !3478)
!3494 = !DILocation(line: 886, column: 12, scope: !3477)
!3495 = !DILocation(line: 886, column: 6, scope: !3477)
!3496 = !DILocation(line: 885, column: 56, scope: !3477)
!3497 = !DILocation(line: 885, column: 4, scope: !3477)
!3498 = distinct !{!3498, !3493, !3499}
!3499 = !DILocation(line: 886, column: 15, scope: !3478)
!3500 = !DILocation(line: 887, column: 4, scope: !3468)
!3501 = !DILocation(line: 888, column: 2, scope: !3469)
!3502 = !DILocation(line: 874, column: 3, scope: !3471)
!3503 = distinct !{!3503, !3482, !3504}
!3504 = !DILocation(line: 889, column: 5, scope: !3472)
!3505 = !DILocation(line: 891, column: 10, scope: !3459)
!3506 = !DILocation(line: 891, column: 3, scope: !3459)
!3507 = distinct !DISubprogram(name: "determine_roots", scope: !3, file: !3, line: 1237, type: !3508, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3511)
!3508 = !DISubroutineType(types: !3509)
!3509 = !{null, !1028, !2027, !3510}
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!3511 = !{!3512, !3513, !3514, !3515}
!3512 = !DILocalVariable(name: "loop", arg: 1, scope: !3507, file: !3, line: 1237, type: !1028)
!3513 = !DILocalVariable(name: "comps", arg: 2, scope: !3507, file: !3, line: 1238, type: !2027)
!3514 = !DILocalVariable(name: "chains", arg: 3, scope: !3507, file: !3, line: 1238, type: !3510)
!3515 = !DILocalVariable(name: "comp", scope: !3507, file: !3, line: 1240, type: !2027)
!3516 = !DILocation(line: 0, scope: !3507)
!3517 = !DILocation(line: 1242, column: 8, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 1242, column: 3)
!3519 = !DILocation(line: 0, scope: !3518)
!3520 = !DILocation(line: 1242, column: 3, scope: !3518)
!3521 = !DILocation(line: 1243, column: 5, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 1242, column: 3)
!3523 = !DILocation(line: 1242, column: 41, scope: !3522)
!3524 = !DILocation(line: 1242, column: 3, scope: !3522)
!3525 = distinct !{!3525, !3520, !3526}
!3526 = !DILocation(line: 1243, column: 45, scope: !3518)
!3527 = !DILocation(line: 1244, column: 1, scope: !3507)
!3528 = distinct !DISubprogram(name: "release_components", scope: !3, file: !3, line: 535, type: !3529, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3531)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{null, !2027}
!3531 = !{!3532, !3533, !3534}
!3532 = !DILocalVariable(name: "comps", arg: 1, scope: !3528, file: !3, line: 535, type: !2027)
!3533 = !DILocalVariable(name: "act", scope: !3528, file: !3, line: 537, type: !2027)
!3534 = !DILocalVariable(name: "next", scope: !3528, file: !3, line: 537, type: !2027)
!3535 = !DILocation(line: 0, scope: !3528)
!3536 = !DILocation(line: 539, column: 8, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 539, column: 3)
!3538 = !DILocation(line: 0, scope: !3537)
!3539 = !DILocation(line: 539, column: 3, scope: !3537)
!3540 = !DILocation(line: 541, column: 19, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 540, column: 5)
!3542 = distinct !DILexicalBlock(scope: !3537, file: !3, line: 539, column: 3)
!3543 = !DILocation(line: 542, column: 7, scope: !3541)
!3544 = !DILocation(line: 539, column: 3, scope: !3542)
!3545 = distinct !{!3545, !3539, !3546}
!3546 = !DILocation(line: 543, column: 5, scope: !3537)
!3547 = !DILocation(line: 544, column: 1, scope: !3528)
!3548 = distinct !DISubprogram(name: "prepare_initializers", scope: !3, file: !3, line: 2437, type: !3549, scopeLine: 2438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3551)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{null, !1028, !2033}
!3551 = !{!3552, !3553, !3554, !3555}
!3552 = !DILocalVariable(name: "loop", arg: 1, scope: !3548, file: !3, line: 2437, type: !1028)
!3553 = !DILocalVariable(name: "chains", arg: 2, scope: !3548, file: !3, line: 2437, type: !2033)
!3554 = !DILocalVariable(name: "chain", scope: !3548, file: !3, line: 2439, type: !1911)
!3555 = !DILocalVariable(name: "i", scope: !3548, file: !3, line: 2440, type: !7)
!3556 = !DILocation(line: 0, scope: !3548)
!3557 = !DILocation(line: 0, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 2442, column: 3)
!3559 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 2442, column: 3)
!3560 = !DILocation(line: 2442, column: 8, scope: !3559)
!3561 = !DILocation(line: 0, scope: !3559)
!3562 = !DILocation(line: 2442, column: 19, scope: !3558)
!3563 = !DILocation(line: 2442, column: 17, scope: !3558)
!3564 = !DILocation(line: 2442, column: 3, scope: !3559)
!3565 = !DILocation(line: 2444, column: 15, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 2443, column: 5)
!3567 = !DILocation(line: 2445, column: 11, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3566, file: !3, line: 2445, column: 11)
!3569 = !DILocation(line: 2445, column: 11, scope: !3566)
!3570 = !DILocation(line: 2446, column: 3, scope: !3568)
!3571 = !DILocation(line: 2446, column: 2, scope: !3568)
!3572 = !DILocation(line: 2449, column: 4, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 2448, column: 2)
!3574 = !DILocation(line: 2450, column: 4, scope: !3573)
!3575 = !DILocation(line: 2442, column: 3, scope: !3558)
!3576 = distinct !{!3576, !3564, !3577}
!3577 = !DILocation(line: 2452, column: 5, scope: !3559)
!3578 = !DILocation(line: 2453, column: 1, scope: !3548)
!3579 = distinct !DISubprogram(name: "try_combine_chains", scope: !3, file: !3, line: 2348, type: !3580, scopeLine: 2349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3582)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{null, !3510}
!3582 = !{!3583, !3584, !3585, !3586, !3587, !3588, !3589}
!3583 = !DILocalVariable(name: "chains", arg: 1, scope: !3579, file: !3, line: 2348, type: !3510)
!3584 = !DILocalVariable(name: "i", scope: !3579, file: !3, line: 2350, type: !7)
!3585 = !DILocalVariable(name: "j", scope: !3579, file: !3, line: 2350, type: !7)
!3586 = !DILocalVariable(name: "ch1", scope: !3579, file: !3, line: 2351, type: !1911)
!3587 = !DILocalVariable(name: "ch2", scope: !3579, file: !3, line: 2351, type: !1911)
!3588 = !DILocalVariable(name: "cch", scope: !3579, file: !3, line: 2351, type: !1911)
!3589 = !DILocalVariable(name: "worklist", scope: !3579, file: !3, line: 2352, type: !2033)
!3590 = !DILocation(line: 0, scope: !3579)
!3591 = !DILocation(line: 2351, column: 3, scope: !3579)
!3592 = !DILocation(line: 2352, column: 3, scope: !3579)
!3593 = !DILocation(line: 2352, column: 24, scope: !3579)
!3594 = !DILocation(line: 2354, column: 8, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2354, column: 3)
!3596 = !DILocation(line: 0, scope: !3595)
!3597 = !DILocation(line: 2354, column: 15, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 2354, column: 3)
!3599 = !DILocation(line: 2354, column: 3, scope: !3595)
!3600 = !DILocation(line: 2358, column: 3, scope: !3579)
!3601 = !DILocation(line: 2355, column: 34, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 2355, column: 9)
!3603 = !DILocation(line: 2355, column: 9, scope: !3602)
!3604 = !DILocation(line: 2355, column: 9, scope: !3598)
!3605 = !DILocation(line: 2356, column: 7, scope: !3602)
!3606 = !DILocation(line: 2354, column: 56, scope: !3598)
!3607 = !DILocation(line: 2354, column: 3, scope: !3598)
!3608 = distinct !{!3608, !3599, !3609}
!3609 = !DILocation(line: 2356, column: 7, scope: !3595)
!3610 = !DILocation(line: 2358, column: 11, scope: !3579)
!3611 = !DILocation(line: 2360, column: 13, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2359, column: 5)
!3613 = !DILocation(line: 2360, column: 11, scope: !3612)
!3614 = !DILocation(line: 2361, column: 12, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 2361, column: 11)
!3616 = !DILocation(line: 2361, column: 11, scope: !3612)
!3617 = !DILocation(line: 2364, column: 7, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 2364, column: 7)
!3619 = !DILocation(line: 0, scope: !3618)
!3620 = !DILocation(line: 2364, column: 19, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 2364, column: 7)
!3622 = !DILocation(line: 2366, column: 34, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 2366, column: 8)
!3624 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 2365, column: 2)
!3625 = !DILocation(line: 2366, column: 9, scope: !3623)
!3626 = !DILocation(line: 2366, column: 8, scope: !3624)
!3627 = !DILocation(line: 2369, column: 26, scope: !3624)
!3628 = !DILocation(line: 2369, column: 31, scope: !3624)
!3629 = !DILocation(line: 2369, column: 10, scope: !3624)
!3630 = !DILocation(line: 2370, column: 8, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 2370, column: 8)
!3632 = !DILocation(line: 2370, column: 8, scope: !3624)
!3633 = !DILocation(line: 2372, column: 8, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 2371, column: 6)
!3635 = !DILocation(line: 2373, column: 8, scope: !3634)
!3636 = !DILocation(line: 2374, column: 8, scope: !3634)
!3637 = !DILocation(line: 2364, column: 60, scope: !3621)
!3638 = !DILocation(line: 2364, column: 7, scope: !3621)
!3639 = distinct !{!3639, !3617, !3640}
!3640 = !DILocation(line: 2376, column: 2, scope: !3618)
!3641 = distinct !{!3641, !3600, !3642}
!3642 = !DILocation(line: 2377, column: 5, scope: !3579)
!3643 = !DILocation(line: 2378, column: 1, scope: !3579)
!3644 = distinct !DISubprogram(name: "determine_unroll_factor", scope: !3, file: !3, line: 1781, type: !3645, scopeLine: 1782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3647)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{!7, !2033}
!3647 = !{!3648, !3649, !3650, !3651, !3652, !3653, !3654}
!3648 = !DILocalVariable(name: "chains", arg: 1, scope: !3644, file: !3, line: 1781, type: !2033)
!3649 = !DILocalVariable(name: "chain", scope: !3644, file: !3, line: 1783, type: !1911)
!3650 = !DILocalVariable(name: "factor", scope: !3644, file: !3, line: 1784, type: !7)
!3651 = !DILocalVariable(name: "af", scope: !3644, file: !3, line: 1784, type: !7)
!3652 = !DILocalVariable(name: "nfactor", scope: !3644, file: !3, line: 1784, type: !7)
!3653 = !DILocalVariable(name: "i", scope: !3644, file: !3, line: 1784, type: !7)
!3654 = !DILocalVariable(name: "max", scope: !3644, file: !3, line: 1785, type: !7)
!3655 = !DILocation(line: 0, scope: !3644)
!3656 = !DILocation(line: 1783, column: 3, scope: !3644)
!3657 = !DILocation(line: 1785, column: 18, scope: !3644)
!3658 = !DILocation(line: 0, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 1787, column: 3)
!3660 = distinct !DILexicalBlock(scope: !3644, file: !3, line: 1787, column: 3)
!3661 = !DILocation(line: 1787, column: 8, scope: !3660)
!3662 = !DILocation(line: 1784, column: 12, scope: !3644)
!3663 = !DILocation(line: 0, scope: !3660)
!3664 = !DILocation(line: 1787, column: 15, scope: !3659)
!3665 = !DILocation(line: 1787, column: 3, scope: !3660)
!3666 = !DILocation(line: 1789, column: 11, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 1789, column: 11)
!3668 = distinct !DILexicalBlock(scope: !3659, file: !3, line: 1788, column: 5)
!3669 = !DILocation(line: 1789, column: 18, scope: !3667)
!3670 = !DILocation(line: 1789, column: 23, scope: !3667)
!3671 = !DILocation(line: 1789, column: 39, scope: !3667)
!3672 = !DILocation(line: 1789, column: 49, scope: !3667)
!3673 = !DILocation(line: 1789, column: 42, scope: !3667)
!3674 = !DILocation(line: 1789, column: 11, scope: !3668)
!3675 = !DILocation(line: 1794, column: 19, scope: !3668)
!3676 = !DILocation(line: 1795, column: 18, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 1795, column: 11)
!3678 = !DILocation(line: 1795, column: 11, scope: !3668)
!3679 = !DILocation(line: 1798, column: 24, scope: !3668)
!3680 = !DILocation(line: 1798, column: 31, scope: !3668)
!3681 = !DILocation(line: 1798, column: 29, scope: !3668)
!3682 = !DILocation(line: 1799, column: 19, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 1799, column: 11)
!3684 = !DILocation(line: 1799, column: 11, scope: !3668)
!3685 = !DILocation(line: 1787, column: 57, scope: !3659)
!3686 = !DILocation(line: 1787, column: 3, scope: !3659)
!3687 = distinct !{!3687, !3665, !3688}
!3688 = !DILocation(line: 1801, column: 5, scope: !3660)
!3689 = !DILocation(line: 1804, column: 1, scope: !3644)
!3690 = !DILocation(line: 1803, column: 3, scope: !3644)
!3691 = distinct !DISubprogram(name: "replace_phis_by_defined_names", scope: !3, file: !3, line: 1831, type: !3692, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3694)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{null, !2033}
!3694 = !{!3695, !3696, !3697, !3698, !3699}
!3695 = !DILocalVariable(name: "chains", arg: 1, scope: !3691, file: !3, line: 1831, type: !2033)
!3696 = !DILocalVariable(name: "chain", scope: !3691, file: !3, line: 1833, type: !1911)
!3697 = !DILocalVariable(name: "a", scope: !3691, file: !3, line: 1834, type: !1841)
!3698 = !DILocalVariable(name: "i", scope: !3691, file: !3, line: 1835, type: !7)
!3699 = !DILocalVariable(name: "j", scope: !3691, file: !3, line: 1835, type: !7)
!3700 = !DILocation(line: 0, scope: !3691)
!3701 = !DILocation(line: 1833, column: 3, scope: !3691)
!3702 = !DILocation(line: 1834, column: 3, scope: !3691)
!3703 = !DILocation(line: 0, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 1837, column: 3)
!3705 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 1837, column: 3)
!3706 = !DILocation(line: 1837, column: 8, scope: !3705)
!3707 = !DILocation(line: 0, scope: !3705)
!3708 = !DILocation(line: 1837, column: 15, scope: !3704)
!3709 = !DILocation(line: 1837, column: 3, scope: !3705)
!3710 = !DILocation(line: 1838, column: 5, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3704, file: !3, line: 1838, column: 5)
!3712 = !DILocation(line: 0, scope: !3711)
!3713 = !DILocation(line: 1838, column: 17, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 1838, column: 5)
!3715 = !DILocation(line: 1840, column: 19, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 1840, column: 6)
!3717 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 1839, column: 7)
!3718 = !DILocation(line: 1840, column: 22, scope: !3716)
!3719 = !DILocation(line: 1840, column: 6, scope: !3716)
!3720 = !DILocation(line: 1840, column: 28, scope: !3716)
!3721 = !DILocation(line: 1840, column: 6, scope: !3717)
!3722 = !DILocation(line: 1842, column: 31, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1841, column: 4)
!3724 = !DILocation(line: 1842, column: 6, scope: !3723)
!3725 = !DILocation(line: 1842, column: 9, scope: !3723)
!3726 = !DILocation(line: 1842, column: 29, scope: !3723)
!3727 = !DILocation(line: 1843, column: 9, scope: !3723)
!3728 = !DILocation(line: 1843, column: 14, scope: !3723)
!3729 = !DILocation(line: 1844, column: 4, scope: !3723)
!3730 = !DILocation(line: 1838, column: 57, scope: !3714)
!3731 = !DILocation(line: 1838, column: 5, scope: !3714)
!3732 = distinct !{!3732, !3710, !3733}
!3733 = !DILocation(line: 1845, column: 7, scope: !3711)
!3734 = !DILocation(line: 1837, column: 57, scope: !3704)
!3735 = !DILocation(line: 1837, column: 3, scope: !3704)
!3736 = distinct !{!3736, !3709, !3737}
!3737 = !DILocation(line: 1845, column: 7, scope: !3705)
!3738 = !DILocation(line: 1846, column: 1, scope: !3691)
!3739 = distinct !DISubprogram(name: "execute_pred_commoning_cbck", scope: !3, file: !3, line: 1878, type: !3740, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3742)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{null, !1028, !486}
!3742 = !{!3743, !3744, !3745}
!3743 = !DILocalVariable(name: "loop", arg: 1, scope: !3739, file: !3, line: 1878, type: !1028)
!3744 = !DILocalVariable(name: "data", arg: 2, scope: !3739, file: !3, line: 1878, type: !486)
!3745 = !DILocalVariable(name: "dta", scope: !3739, file: !3, line: 1880, type: !3746)
!3746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2052)
!3747 = !DILocation(line: 0, scope: !3739)
!3748 = !DILocation(line: 1885, column: 31, scope: !3739)
!3749 = !DILocation(line: 1885, column: 3, scope: !3739)
!3750 = !DILocation(line: 1886, column: 38, scope: !3739)
!3751 = !DILocation(line: 1886, column: 51, scope: !3739)
!3752 = !DILocation(line: 1886, column: 3, scope: !3739)
!3753 = !DILocation(line: 1887, column: 1, scope: !3739)
!3754 = distinct !DISubprogram(name: "eliminate_temp_copies", scope: !3, file: !3, line: 1927, type: !3755, scopeLine: 1928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3757)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{null, !1028, !1383}
!3757 = !{!3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766}
!3758 = !DILocalVariable(name: "loop", arg: 1, scope: !3754, file: !3, line: 1927, type: !1028)
!3759 = !DILocalVariable(name: "tmp_vars", arg: 2, scope: !3754, file: !3, line: 1927, type: !1383)
!3760 = !DILocalVariable(name: "e", scope: !3754, file: !3, line: 1929, type: !793)
!3761 = !DILocalVariable(name: "phi", scope: !3754, file: !3, line: 1930, type: !813)
!3762 = !DILocalVariable(name: "stmt", scope: !3754, file: !3, line: 1930, type: !813)
!3763 = !DILocalVariable(name: "name", scope: !3754, file: !3, line: 1931, type: !489)
!3764 = !DILocalVariable(name: "use", scope: !3754, file: !3, line: 1931, type: !489)
!3765 = !DILocalVariable(name: "var", scope: !3754, file: !3, line: 1931, type: !489)
!3766 = !DILocalVariable(name: "psi", scope: !3754, file: !3, line: 1932, type: !3767)
!3767 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !402, line: 265, baseType: !3768)
!3768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 254, size: 192, elements: !3769)
!3769 = !{!3770, !3771, !3772}
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3768, file: !402, line: 257, baseType: !808, size: 64)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3768, file: !402, line: 263, baseType: !803, size: 64, offset: 64)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3768, file: !402, line: 264, baseType: !1265, size: 64, offset: 128)
!3773 = !DILocation(line: 0, scope: !3754)
!3774 = !DILocation(line: 1932, column: 3, scope: !3754)
!3775 = !DILocation(line: 1934, column: 7, scope: !3754)
!3776 = !DILocation(line: 1935, column: 14, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 1935, column: 3)
!3778 = !DILocation(line: 1935, column: 36, scope: !3777)
!3779 = !DILocation(line: 0, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 1936, column: 5)
!3781 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 1935, column: 3)
!3782 = !DILocation(line: 1935, column: 8, scope: !3777)
!3783 = !DILocation(line: 1935, column: 46, scope: !3781)
!3784 = !DILocation(line: 1935, column: 45, scope: !3781)
!3785 = !DILocation(line: 1935, column: 3, scope: !3777)
!3786 = !DILocation(line: 1937, column: 13, scope: !3780)
!3787 = !DILocation(line: 1938, column: 14, scope: !3780)
!3788 = !DILocation(line: 1939, column: 13, scope: !3780)
!3789 = !DILocation(line: 1940, column: 36, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 1940, column: 11)
!3791 = !DILocation(line: 1940, column: 12, scope: !3790)
!3792 = !DILocation(line: 1940, column: 11, scope: !3780)
!3793 = !DILocation(line: 1942, column: 13, scope: !3780)
!3794 = !DILocation(line: 1943, column: 7, scope: !3780)
!3795 = !DILocation(line: 1947, column: 7, scope: !3780)
!3796 = !DILocation(line: 1947, column: 14, scope: !3780)
!3797 = !DILocation(line: 1947, column: 33, scope: !3780)
!3798 = !DILocation(line: 1953, column: 7, scope: !3780)
!3799 = !DILocation(line: 1953, column: 10, scope: !3780)
!3800 = !DILocation(line: 1953, column: 36, scope: !3780)
!3801 = !DILocation(line: 1953, column: 27, scope: !3780)
!3802 = !DILocation(line: 1955, column: 4, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 1954, column: 2)
!3804 = !DILocation(line: 1956, column: 10, scope: !3803)
!3805 = distinct !{!3805, !3795, !3806}
!3806 = !DILocation(line: 1958, column: 2, scope: !3780)
!3807 = !DILocation(line: 1960, column: 7, scope: !3780)
!3808 = !DILocation(line: 1961, column: 5, scope: !3780)
!3809 = !DILocation(line: 1935, column: 63, scope: !3781)
!3810 = !DILocation(line: 1935, column: 3, scope: !3781)
!3811 = distinct !{!3811, !3785, !3812}
!3812 = !DILocation(line: 1961, column: 5, scope: !3777)
!3813 = !DILocation(line: 1962, column: 1, scope: !3754)
!3814 = distinct !DISubprogram(name: "execute_pred_commoning", scope: !3, file: !3, line: 1810, type: !3815, scopeLine: 1812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3817)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{null, !1028, !2033, !1383}
!3817 = !{!3818, !3819, !3820, !3821, !3822}
!3818 = !DILocalVariable(name: "loop", arg: 1, scope: !3814, file: !3, line: 1810, type: !1028)
!3819 = !DILocalVariable(name: "chains", arg: 2, scope: !3814, file: !3, line: 1810, type: !2033)
!3820 = !DILocalVariable(name: "tmp_vars", arg: 3, scope: !3814, file: !3, line: 1811, type: !1383)
!3821 = !DILocalVariable(name: "chain", scope: !3814, file: !3, line: 1813, type: !1911)
!3822 = !DILocalVariable(name: "i", scope: !3814, file: !3, line: 1814, type: !7)
!3823 = !DILocation(line: 0, scope: !3814)
!3824 = !DILocation(line: 1813, column: 3, scope: !3814)
!3825 = !DILocation(line: 0, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 1816, column: 3)
!3827 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 1816, column: 3)
!3828 = !DILocation(line: 1816, column: 8, scope: !3827)
!3829 = !DILocation(line: 0, scope: !3827)
!3830 = !DILocation(line: 1816, column: 15, scope: !3826)
!3831 = !DILocation(line: 1816, column: 3, scope: !3827)
!3832 = !DILocation(line: 1818, column: 11, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 1818, column: 11)
!3834 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 1817, column: 5)
!3835 = !DILocation(line: 1818, column: 18, scope: !3833)
!3836 = !DILocation(line: 1818, column: 23, scope: !3833)
!3837 = !DILocation(line: 1818, column: 11, scope: !3834)
!3838 = !DILocation(line: 1819, column: 2, scope: !3833)
!3839 = !DILocation(line: 1821, column: 2, scope: !3833)
!3840 = !DILocation(line: 1816, column: 57, scope: !3826)
!3841 = !DILocation(line: 1816, column: 3, scope: !3826)
!3842 = distinct !{!3842, !3831, !3843}
!3843 = !DILocation(line: 1822, column: 5, scope: !3827)
!3844 = !DILocation(line: 1824, column: 3, scope: !3814)
!3845 = !DILocation(line: 1825, column: 1, scope: !3814)
!3846 = distinct !DISubprogram(name: "release_chains", scope: !3, file: !3, line: 513, type: !3692, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3847)
!3847 = !{!3848, !3849, !3850}
!3848 = !DILocalVariable(name: "chains", arg: 1, scope: !3846, file: !3, line: 513, type: !2033)
!3849 = !DILocalVariable(name: "i", scope: !3846, file: !3, line: 515, type: !7)
!3850 = !DILocalVariable(name: "chain", scope: !3846, file: !3, line: 516, type: !1911)
!3851 = !DILocation(line: 0, scope: !3846)
!3852 = !DILocation(line: 516, column: 3, scope: !3846)
!3853 = !DILocation(line: 518, column: 8, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 518, column: 3)
!3855 = !DILocation(line: 518, column: 15, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 518, column: 3)
!3857 = !DILocation(line: 0, scope: !3854)
!3858 = !DILocation(line: 518, column: 3, scope: !3854)
!3859 = !DILocation(line: 519, column: 20, scope: !3856)
!3860 = !DILocation(line: 519, column: 5, scope: !3856)
!3861 = !DILocation(line: 518, column: 57, scope: !3856)
!3862 = !DILocation(line: 518, column: 3, scope: !3856)
!3863 = distinct !{!3863, !3858, !3864}
!3864 = !DILocation(line: 519, column: 25, scope: !3854)
!3865 = !DILocation(line: 520, column: 3, scope: !3846)
!3866 = !DILocation(line: 521, column: 1, scope: !3846)
!3867 = distinct !DISubprogram(name: "VEC_data_reference_p_base_length", scope: !1848, file: !1848, line: 208, type: !3868, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3872)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!7, !3870}
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1957)
!3872 = !{!3873}
!3873 = !DILocalVariable(name: "vec_", arg: 1, scope: !3867, file: !1848, line: 208, type: !3870)
!3874 = !DILocation(line: 0, scope: !3867)
!3875 = !DILocation(line: 208, column: 1, scope: !3867)
!3876 = distinct !DISubprogram(name: "last_always_executed_block", scope: !3, file: !3, line: 677, type: !3877, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3879)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!1265, !1028}
!3879 = !{!3880, !3881, !3882, !3888, !3889}
!3880 = !DILocalVariable(name: "loop", arg: 1, scope: !3876, file: !3, line: 677, type: !1028)
!3881 = !DILocalVariable(name: "i", scope: !3876, file: !3, line: 679, type: !7)
!3882 = !DILocalVariable(name: "exits", scope: !3876, file: !3, line: 680, type: !3883)
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3884, size: 64)
!3884 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_heap", file: !135, line: 152, baseType: !3885)
!3885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_heap", file: !135, line: 152, size: 128, elements: !3886)
!3886 = !{!3887}
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3885, file: !135, line: 152, baseType: !786, size: 128)
!3888 = !DILocalVariable(name: "ex", scope: !3876, file: !3, line: 681, type: !793)
!3889 = !DILocalVariable(name: "last", scope: !3876, file: !3, line: 682, type: !1265)
!3890 = !DILocation(line: 0, scope: !3876)
!3891 = !DILocation(line: 680, column: 3, scope: !3876)
!3892 = !DILocation(line: 680, column: 29, scope: !3876)
!3893 = !DILocation(line: 680, column: 21, scope: !3876)
!3894 = !DILocation(line: 681, column: 3, scope: !3876)
!3895 = !DILocation(line: 682, column: 28, scope: !3876)
!3896 = !DILocation(line: 684, column: 8, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 684, column: 3)
!3898 = !DILocation(line: 684, column: 15, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 684, column: 3)
!3900 = !DILocation(line: 0, scope: !3897)
!3901 = !DILocation(line: 684, column: 3, scope: !3897)
!3902 = !DILocation(line: 685, column: 60, scope: !3899)
!3903 = !DILocation(line: 685, column: 64, scope: !3899)
!3904 = !DILocation(line: 685, column: 12, scope: !3899)
!3905 = !DILocation(line: 684, column: 50, scope: !3899)
!3906 = !DILocation(line: 684, column: 3, scope: !3899)
!3907 = distinct !{!3907, !3901, !3908}
!3908 = !DILocation(line: 685, column: 67, scope: !3897)
!3909 = !DILocation(line: 686, column: 3, scope: !3876)
!3910 = !DILocation(line: 689, column: 1, scope: !3876)
!3911 = !DILocation(line: 688, column: 3, scope: !3876)
!3912 = distinct !DISubprogram(name: "VEC_data_reference_p_base_iterate", scope: !1848, file: !1848, line: 208, type: !3913, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3916)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{!482, !3870, !7, !3915}
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!3916 = !{!3917, !3918, !3919}
!3917 = !DILocalVariable(name: "vec_", arg: 1, scope: !3912, file: !1848, line: 208, type: !3870)
!3918 = !DILocalVariable(name: "ix_", arg: 2, scope: !3912, file: !1848, line: 208, type: !7)
!3919 = !DILocalVariable(name: "ptr", arg: 3, scope: !3912, file: !1848, line: 208, type: !3915)
!3920 = !DILocation(line: 0, scope: !3912)
!3921 = !DILocation(line: 208, column: 1, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3912, file: !1848, line: 208, column: 1)
!3923 = !DILocation(line: 208, column: 1, scope: !3912)
!3924 = !DILocation(line: 208, column: 1, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3922, file: !1848, line: 208, column: 1)
!3926 = !DILocation(line: 208, column: 1, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3922, file: !1848, line: 208, column: 1)
!3928 = !DILocation(line: 0, scope: !3922)
!3929 = distinct !DISubprogram(name: "suitable_reference_p", scope: !3, file: !3, line: 595, type: !3930, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3933)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{!481, !1846, !3932}
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!3933 = !{!3934, !3935, !3936, !3937}
!3934 = !DILocalVariable(name: "a", arg: 1, scope: !3929, file: !3, line: 595, type: !1846)
!3935 = !DILocalVariable(name: "ref_step", arg: 2, scope: !3929, file: !3, line: 595, type: !3932)
!3936 = !DILocalVariable(name: "ref", scope: !3929, file: !3, line: 597, type: !489)
!3937 = !DILocalVariable(name: "step", scope: !3929, file: !3, line: 597, type: !489)
!3938 = !DILocation(line: 0, scope: !3929)
!3939 = !DILocation(line: 597, column: 14, scope: !3929)
!3940 = !DILocation(line: 597, column: 33, scope: !3929)
!3941 = !DILocation(line: 599, column: 8, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3929, file: !3, line: 599, column: 7)
!3943 = !DILocation(line: 600, column: 7, scope: !3942)
!3944 = !DILocation(line: 600, column: 31, scope: !3942)
!3945 = !DILocation(line: 600, column: 11, scope: !3942)
!3946 = !DILocation(line: 601, column: 7, scope: !3942)
!3947 = !DILocation(line: 601, column: 10, scope: !3942)
!3948 = !DILocation(line: 599, column: 7, scope: !3929)
!3949 = !DILocation(line: 604, column: 7, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3929, file: !3, line: 604, column: 7)
!3951 = !DILocation(line: 604, column: 7, scope: !3929)
!3952 = !DILocation(line: 605, column: 15, scope: !3950)
!3953 = !DILocation(line: 605, column: 5, scope: !3950)
!3954 = !DILocation(line: 606, column: 12, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 606, column: 12)
!3956 = !DILocation(line: 606, column: 12, scope: !3950)
!3957 = !DILocation(line: 607, column: 15, scope: !3955)
!3958 = !DILocation(line: 607, column: 5, scope: !3955)
!3959 = !DILocation(line: 609, column: 15, scope: !3955)
!3960 = !DILocation(line: 612, column: 1, scope: !3929)
!3961 = distinct !DISubprogram(name: "merge_comps", scope: !3, file: !3, line: 570, type: !3962, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3964)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{null, !2025, !2025, !7, !7}
!3964 = !{!3965, !3966, !3967, !3968, !3969, !3970}
!3965 = !DILocalVariable(name: "fathers", arg: 1, scope: !3961, file: !3, line: 570, type: !2025)
!3966 = !DILocalVariable(name: "sizes", arg: 2, scope: !3961, file: !3, line: 570, type: !2025)
!3967 = !DILocalVariable(name: "a", arg: 3, scope: !3961, file: !3, line: 570, type: !7)
!3968 = !DILocalVariable(name: "b", arg: 4, scope: !3961, file: !3, line: 570, type: !7)
!3969 = !DILocalVariable(name: "ca", scope: !3961, file: !3, line: 572, type: !7)
!3970 = !DILocalVariable(name: "cb", scope: !3961, file: !3, line: 573, type: !7)
!3971 = !DILocation(line: 0, scope: !3961)
!3972 = !DILocation(line: 572, column: 17, scope: !3961)
!3973 = !DILocation(line: 573, column: 17, scope: !3961)
!3974 = !DILocation(line: 575, column: 10, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 575, column: 7)
!3976 = !DILocation(line: 575, column: 7, scope: !3961)
!3977 = !DILocation(line: 578, column: 7, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 578, column: 7)
!3979 = !DILocation(line: 578, column: 19, scope: !3978)
!3980 = !DILocation(line: 578, column: 17, scope: !3978)
!3981 = !DILocation(line: 578, column: 7, scope: !3961)
!3982 = !DILocation(line: 580, column: 17, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 579, column: 5)
!3984 = !DILocation(line: 581, column: 7, scope: !3983)
!3985 = !DILocation(line: 581, column: 19, scope: !3983)
!3986 = !DILocation(line: 582, column: 5, scope: !3983)
!3987 = !DILocation(line: 585, column: 17, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 584, column: 5)
!3989 = !DILocation(line: 586, column: 7, scope: !3988)
!3990 = !DILocation(line: 586, column: 19, scope: !3988)
!3991 = !DILocation(line: 588, column: 1, scope: !3961)
!3992 = distinct !DISubprogram(name: "VEC_ddr_p_base_iterate", scope: !1848, file: !1848, line: 332, type: !3993, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3998)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{!482, !3995, !7, !3997}
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1970)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!3998 = !{!3999, !4000, !4001}
!3999 = !DILocalVariable(name: "vec_", arg: 1, scope: !3992, file: !1848, line: 332, type: !3995)
!4000 = !DILocalVariable(name: "ix_", arg: 2, scope: !3992, file: !1848, line: 332, type: !7)
!4001 = !DILocalVariable(name: "ptr", arg: 3, scope: !3992, file: !1848, line: 332, type: !3997)
!4002 = !DILocation(line: 0, scope: !3992)
!4003 = !DILocation(line: 332, column: 1, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3992, file: !1848, line: 332, column: 1)
!4005 = !DILocation(line: 332, column: 1, scope: !3992)
!4006 = !DILocation(line: 332, column: 1, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4004, file: !1848, line: 332, column: 1)
!4008 = !DILocation(line: 332, column: 1, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4004, file: !1848, line: 332, column: 1)
!4010 = !DILocation(line: 0, scope: !4004)
!4011 = distinct !DISubprogram(name: "component_of", scope: !3, file: !3, line: 550, type: !4012, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4014)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{!7, !2025, !7}
!4014 = !{!4015, !4016, !4017, !4018}
!4015 = !DILocalVariable(name: "fathers", arg: 1, scope: !4011, file: !3, line: 550, type: !2025)
!4016 = !DILocalVariable(name: "a", arg: 2, scope: !4011, file: !3, line: 550, type: !7)
!4017 = !DILocalVariable(name: "root", scope: !4011, file: !3, line: 552, type: !7)
!4018 = !DILocalVariable(name: "n", scope: !4011, file: !3, line: 552, type: !7)
!4019 = !DILocation(line: 0, scope: !4011)
!4020 = !DILocation(line: 554, column: 8, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4011, file: !3, line: 554, column: 3)
!4022 = !DILocation(line: 0, scope: !4021)
!4023 = !DILocation(line: 554, column: 26, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 554, column: 3)
!4025 = !DILocation(line: 554, column: 23, scope: !4024)
!4026 = !DILocation(line: 554, column: 3, scope: !4021)
!4027 = !DILocation(line: 557, column: 3, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4011, file: !3, line: 557, column: 3)
!4029 = !DILocation(line: 554, column: 3, scope: !4024)
!4030 = distinct !{!4030, !4026, !4031}
!4031 = !DILocation(line: 555, column: 5, scope: !4021)
!4032 = !DILocation(line: 557, column: 12, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 557, column: 3)
!4034 = !DILocation(line: 559, column: 11, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 558, column: 5)
!4036 = !DILocation(line: 560, column: 18, scope: !4035)
!4037 = !DILocation(line: 557, column: 3, scope: !4033)
!4038 = distinct !{!4038, !4027, !4039}
!4039 = !DILocation(line: 561, column: 5, scope: !4028)
!4040 = !DILocation(line: 563, column: 3, scope: !4011)
!4041 = distinct !DISubprogram(name: "determine_offset", scope: !3, file: !3, line: 634, type: !4042, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4045)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{!481, !1846, !1846, !4044}
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!4045 = !{!4046, !4047, !4048, !4049, !4066, !4067, !4068, !4069}
!4046 = !DILocalVariable(name: "a", arg: 1, scope: !4041, file: !3, line: 634, type: !1846)
!4047 = !DILocalVariable(name: "b", arg: 2, scope: !4041, file: !3, line: 634, type: !1846)
!4048 = !DILocalVariable(name: "off", arg: 3, scope: !4041, file: !3, line: 635, type: !4044)
!4049 = !DILocalVariable(name: "diff", scope: !4041, file: !3, line: 637, type: !4050)
!4050 = !DIDerivedType(tag: DW_TAG_typedef, name: "aff_tree", file: !4051, line: 59, baseType: !4052)
!4051 = !DIFile(filename: "./tree-affine.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "affine_tree_combination", file: !4051, line: 36, size: 1856, elements: !4053)
!4053 = !{!4054, !4055, !4056, !4057, !4065}
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4052, file: !4051, line: 39, baseType: !489, size: 64)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4052, file: !4051, line: 42, baseType: !538, size: 128, offset: 64)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !4052, file: !4051, line: 45, baseType: !7, size: 32, offset: 192)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !4052, file: !4051, line: 53, baseType: !4058, size: 1536, offset: 256)
!4058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4059, size: 1536, elements: !4063)
!4059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aff_comb_elt", file: !4051, line: 27, size: 192, elements: !4060)
!4060 = !{!4061, !4062}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4059, file: !4051, line: 30, baseType: !489, size: 64)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !4059, file: !4051, line: 33, baseType: !538, size: 128, offset: 64)
!4063 = !{!4064}
!4064 = !DISubrange(count: 8)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "rest", scope: !4052, file: !4051, line: 58, baseType: !489, size: 64, offset: 1792)
!4066 = !DILocalVariable(name: "baseb", scope: !4041, file: !3, line: 637, type: !4050)
!4067 = !DILocalVariable(name: "step", scope: !4041, file: !3, line: 637, type: !4050)
!4068 = !DILocalVariable(name: "typea", scope: !4041, file: !3, line: 638, type: !489)
!4069 = !DILocalVariable(name: "typeb", scope: !4041, file: !3, line: 638, type: !489)
!4070 = !DILocation(line: 0, scope: !4041)
!4071 = !DILocation(line: 637, column: 3, scope: !4041)
!4072 = !DILocation(line: 641, column: 11, scope: !4041)
!4073 = !DILocation(line: 642, column: 11, scope: !4041)
!4074 = !DILocation(line: 643, column: 8, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 643, column: 7)
!4076 = !DILocation(line: 643, column: 7, scope: !4041)
!4077 = !DILocation(line: 648, column: 25, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 648, column: 7)
!4079 = !DILocation(line: 648, column: 38, scope: !4078)
!4080 = !DILocation(line: 648, column: 8, scope: !4078)
!4081 = !DILocation(line: 649, column: 7, scope: !4078)
!4082 = !DILocation(line: 649, column: 28, scope: !4078)
!4083 = !DILocation(line: 649, column: 49, scope: !4078)
!4084 = !DILocation(line: 649, column: 11, scope: !4078)
!4085 = !DILocation(line: 648, column: 7, scope: !4041)
!4086 = !DILocation(line: 652, column: 22, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 652, column: 7)
!4088 = !DILocation(line: 652, column: 7, scope: !4087)
!4089 = !DILocation(line: 652, column: 7, scope: !4041)
!4090 = !DILocation(line: 656, column: 14, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4087, file: !3, line: 653, column: 5)
!4092 = !DILocation(line: 657, column: 32, scope: !4091)
!4093 = !DILocation(line: 657, column: 47, scope: !4091)
!4094 = !DILocation(line: 657, column: 15, scope: !4091)
!4095 = !DILocation(line: 658, column: 8, scope: !4091)
!4096 = !DILocation(line: 658, column: 28, scope: !4091)
!4097 = !DILocation(line: 658, column: 41, scope: !4091)
!4098 = !DILocation(line: 658, column: 11, scope: !4091)
!4099 = !DILocation(line: 657, column: 7, scope: !4091)
!4100 = !DILocation(line: 663, column: 3, scope: !4041)
!4101 = !DILocation(line: 664, column: 3, scope: !4041)
!4102 = !DILocation(line: 665, column: 34, scope: !4041)
!4103 = !DILocation(line: 665, column: 3, scope: !4041)
!4104 = !DILocation(line: 666, column: 3, scope: !4041)
!4105 = !DILocation(line: 668, column: 35, scope: !4041)
!4106 = !DILocation(line: 668, column: 48, scope: !4041)
!4107 = !DILocation(line: 668, column: 3, scope: !4041)
!4108 = !DILocation(line: 670, column: 10, scope: !4041)
!4109 = !DILocation(line: 670, column: 3, scope: !4041)
!4110 = !DILocation(line: 671, column: 1, scope: !4041)
!4111 = distinct !DISubprogram(name: "VEC_dref_heap_alloc", scope: !3, file: !3, line: 243, type: !4112, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4114)
!4112 = !DISubroutineType(types: !4113)
!4113 = !{!1921, !482}
!4114 = !{!4115}
!4115 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4111, file: !3, line: 243, type: !482)
!4116 = !DILocation(line: 0, scope: !4111)
!4117 = !DILocation(line: 243, column: 1, scope: !4111)
!4118 = distinct !DISubprogram(name: "shwi_to_double_int", scope: !539, file: !539, line: 72, type: !4119, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4121)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{!538, !545}
!4121 = !{!4122, !4123}
!4122 = !DILocalVariable(name: "cst", arg: 1, scope: !4118, file: !539, line: 72, type: !545)
!4123 = !DILocalVariable(name: "r", scope: !4118, file: !539, line: 74, type: !538)
!4124 = !DILocation(line: 0, scope: !4118)
!4125 = !DILocation(line: 77, column: 12, scope: !4118)
!4126 = !DILocation(line: 79, column: 3, scope: !4118)
!4127 = distinct !DISubprogram(name: "gimple_bb", scope: !402, file: !402, line: 1112, type: !4128, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4130)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!777, !2552}
!4130 = !{!4131}
!4131 = !DILocalVariable(name: "g", arg: 1, scope: !4127, file: !402, line: 1112, type: !2552)
!4132 = !DILocation(line: 0, scope: !4127)
!4133 = !DILocation(line: 1114, column: 20, scope: !4127)
!4134 = !DILocation(line: 1114, column: 3, scope: !4127)
!4135 = distinct !DISubprogram(name: "VEC_dref_base_length", scope: !3, file: !3, line: 242, type: !4136, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4138)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!7, !2684}
!4138 = !{!4139}
!4139 = !DILocalVariable(name: "vec_", arg: 1, scope: !4135, file: !3, line: 242, type: !2684)
!4140 = !DILocation(line: 0, scope: !4135)
!4141 = !DILocation(line: 242, column: 1, scope: !4135)
!4142 = distinct !DISubprogram(name: "VEC_dref_base_quick_push", scope: !3, file: !3, line: 242, type: !4143, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4146)
!4143 = !DISubroutineType(types: !4144)
!4144 = !{!2686, !4145, !1841}
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!4146 = !{!4147, !4148, !4149}
!4147 = !DILocalVariable(name: "vec_", arg: 1, scope: !4142, file: !3, line: 242, type: !4145)
!4148 = !DILocalVariable(name: "obj_", arg: 2, scope: !4142, file: !3, line: 242, type: !1841)
!4149 = !DILocalVariable(name: "slot_", scope: !4142, file: !3, line: 242, type: !2686)
!4150 = !DILocation(line: 0, scope: !4142)
!4151 = !DILocation(line: 242, column: 1, scope: !4142)
!4152 = distinct !DISubprogram(name: "VEC_edge_base_iterate", scope: !135, file: !135, line: 150, type: !4153, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4158)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{!482, !4155, !7, !4157}
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !786)
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!4158 = !{!4159, !4160, !4161}
!4159 = !DILocalVariable(name: "vec_", arg: 1, scope: !4152, file: !135, line: 150, type: !4155)
!4160 = !DILocalVariable(name: "ix_", arg: 2, scope: !4152, file: !135, line: 150, type: !7)
!4161 = !DILocalVariable(name: "ptr", arg: 3, scope: !4152, file: !135, line: 150, type: !4157)
!4162 = !DILocation(line: 0, scope: !4152)
!4163 = !DILocation(line: 150, column: 1, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4152, file: !135, line: 150, column: 1)
!4165 = !DILocation(line: 150, column: 1, scope: !4152)
!4166 = !DILocation(line: 150, column: 1, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4164, file: !135, line: 150, column: 1)
!4168 = !DILocation(line: 150, column: 1, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4164, file: !135, line: 150, column: 1)
!4170 = !DILocation(line: 0, scope: !4164)
!4171 = distinct !DISubprogram(name: "VEC_edge_heap_free", scope: !135, file: !135, line: 152, type: !4172, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4175)
!4172 = !DISubroutineType(types: !4173)
!4173 = !{null, !4174}
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!4175 = !{!4176}
!4176 = !DILocalVariable(name: "vec_", arg: 1, scope: !4171, file: !135, line: 152, type: !4174)
!4177 = !DILocation(line: 0, scope: !4171)
!4178 = !DILocation(line: 152, column: 1, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4171, file: !135, line: 152, column: 1)
!4180 = !DILocation(line: 152, column: 1, scope: !4171)
!4181 = distinct !DISubprogram(name: "aff_combination_dr_offset", scope: !3, file: !3, line: 617, type: !4182, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4185)
!4182 = !DISubroutineType(types: !4183)
!4183 = !{null, !1846, !4184}
!4184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 64)
!4185 = !{!4186, !4187, !4188}
!4186 = !DILocalVariable(name: "dr", arg: 1, scope: !4181, file: !3, line: 617, type: !1846)
!4187 = !DILocalVariable(name: "offset", arg: 2, scope: !4181, file: !3, line: 617, type: !4184)
!4188 = !DILocalVariable(name: "delta", scope: !4181, file: !3, line: 619, type: !4050)
!4189 = !DILocation(line: 0, scope: !4181)
!4190 = !DILocation(line: 619, column: 3, scope: !4181)
!4191 = !DILocation(line: 621, column: 35, scope: !4181)
!4192 = !DILocation(line: 621, column: 51, scope: !4181)
!4193 = !DILocation(line: 621, column: 3, scope: !4181)
!4194 = !DILocation(line: 623, column: 34, scope: !4181)
!4195 = !DILocation(line: 623, column: 64, scope: !4181)
!4196 = !DILocation(line: 623, column: 44, scope: !4181)
!4197 = !DILocation(line: 623, column: 3, scope: !4181)
!4198 = !DILocation(line: 624, column: 3, scope: !4181)
!4199 = !DILocation(line: 625, column: 1, scope: !4181)
!4200 = distinct !DISubprogram(name: "suitable_component_p", scope: !3, file: !3, line: 814, type: !4201, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4203)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!481, !1028, !2027}
!4203 = !{!4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212}
!4204 = !DILocalVariable(name: "loop", arg: 1, scope: !4200, file: !3, line: 814, type: !1028)
!4205 = !DILocalVariable(name: "comp", arg: 2, scope: !4200, file: !3, line: 814, type: !2027)
!4206 = !DILocalVariable(name: "i", scope: !4200, file: !3, line: 816, type: !7)
!4207 = !DILocalVariable(name: "a", scope: !4200, file: !3, line: 817, type: !1841)
!4208 = !DILocalVariable(name: "first", scope: !4200, file: !3, line: 817, type: !1841)
!4209 = !DILocalVariable(name: "ba", scope: !4200, file: !3, line: 818, type: !1265)
!4210 = !DILocalVariable(name: "bp", scope: !4200, file: !3, line: 818, type: !1265)
!4211 = !DILocalVariable(name: "ok", scope: !4200, file: !3, line: 819, type: !481)
!4212 = !DILocalVariable(name: "has_write", scope: !4200, file: !3, line: 819, type: !481)
!4213 = !DILocation(line: 0, scope: !4200)
!4214 = !DILocation(line: 817, column: 3, scope: !4200)
!4215 = !DILocation(line: 818, column: 30, scope: !4200)
!4216 = !DILocation(line: 0, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 821, column: 3)
!4218 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 821, column: 3)
!4219 = !DILocation(line: 821, column: 8, scope: !4218)
!4220 = !DILocation(line: 0, scope: !4218)
!4221 = !DILocation(line: 819, column: 12, scope: !4200)
!4222 = !DILocation(line: 821, column: 15, scope: !4217)
!4223 = !DILocation(line: 821, column: 3, scope: !4218)
!4224 = !DILocation(line: 823, column: 23, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 822, column: 5)
!4226 = !DILocation(line: 823, column: 26, scope: !4225)
!4227 = !DILocation(line: 823, column: 12, scope: !4225)
!4228 = !DILocation(line: 825, column: 12, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 825, column: 11)
!4230 = !DILocation(line: 825, column: 11, scope: !4225)
!4231 = !DILocation(line: 828, column: 7, scope: !4225)
!4232 = !DILocation(line: 831, column: 12, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 831, column: 11)
!4234 = !DILocation(line: 831, column: 11, scope: !4225)
!4235 = !DILocation(line: 821, column: 54, scope: !4217)
!4236 = !DILocation(line: 821, column: 3, scope: !4217)
!4237 = distinct !{!4237, !4223, !4238}
!4238 = !DILocation(line: 833, column: 5, scope: !4218)
!4239 = !DILocation(line: 835, column: 11, scope: !4200)
!4240 = !DILocation(line: 836, column: 37, scope: !4200)
!4241 = !DILocation(line: 836, column: 49, scope: !4200)
!4242 = !DILocation(line: 836, column: 8, scope: !4200)
!4243 = !DILocation(line: 837, column: 3, scope: !4200)
!4244 = !DILocation(line: 838, column: 10, scope: !4200)
!4245 = !DILocation(line: 838, column: 19, scope: !4200)
!4246 = !DILocation(line: 840, column: 8, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 840, column: 3)
!4248 = !DILocation(line: 0, scope: !4247)
!4249 = !DILocation(line: 840, column: 15, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 840, column: 3)
!4251 = !DILocation(line: 840, column: 3, scope: !4247)
!4252 = !DILocation(line: 842, column: 37, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 842, column: 11)
!4254 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 841, column: 5)
!4255 = !DILocation(line: 842, column: 42, scope: !4253)
!4256 = !DILocation(line: 842, column: 45, scope: !4253)
!4257 = !DILocation(line: 842, column: 54, scope: !4253)
!4258 = !DILocation(line: 842, column: 12, scope: !4253)
!4259 = !DILocation(line: 842, column: 11, scope: !4254)
!4260 = !DILocation(line: 840, column: 54, scope: !4250)
!4261 = !DILocation(line: 840, column: 3, scope: !4250)
!4262 = distinct !{!4262, !4251, !4263}
!4263 = !DILocation(line: 852, column: 5, scope: !4247)
!4264 = !DILocation(line: 858, column: 7, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 858, column: 7)
!4266 = !DILocation(line: 858, column: 17, scope: !4265)
!4267 = !DILocation(line: 858, column: 26, scope: !4265)
!4268 = !DILocation(line: 858, column: 36, scope: !4265)
!4269 = !DILocation(line: 858, column: 7, scope: !4200)
!4270 = !DILocation(line: 861, column: 3, scope: !4200)
!4271 = !DILocation(line: 862, column: 1, scope: !4200)
!4272 = distinct !DISubprogram(name: "release_component", scope: !3, file: !3, line: 526, type: !3529, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4273)
!4273 = !{!4274}
!4274 = !DILocalVariable(name: "comp", arg: 1, scope: !4272, file: !3, line: 526, type: !2027)
!4275 = !DILocation(line: 0, scope: !4272)
!4276 = !DILocation(line: 528, column: 3, scope: !4272)
!4277 = !DILocation(line: 529, column: 9, scope: !4272)
!4278 = !DILocation(line: 529, column: 3, scope: !4272)
!4279 = !DILocation(line: 530, column: 1, scope: !4272)
!4280 = distinct !DISubprogram(name: "VEC_dref_base_index", scope: !3, file: !3, line: 242, type: !4281, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4283)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{!1841, !2684, !7}
!4283 = !{!4284, !4285}
!4284 = !DILocalVariable(name: "vec_", arg: 1, scope: !4280, file: !3, line: 242, type: !2684)
!4285 = !DILocalVariable(name: "ix_", arg: 2, scope: !4280, file: !3, line: 242, type: !7)
!4286 = !DILocation(line: 0, scope: !4280)
!4287 = !DILocation(line: 242, column: 1, scope: !4280)
!4288 = distinct !DISubprogram(name: "VEC_dref_heap_free", scope: !3, file: !3, line: 243, type: !4289, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4292)
!4289 = !DISubroutineType(types: !4290)
!4290 = !{null, !4291}
!4291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!4292 = !{!4293}
!4293 = !DILocalVariable(name: "vec_", arg: 1, scope: !4288, file: !3, line: 243, type: !4291)
!4294 = !DILocation(line: 0, scope: !4288)
!4295 = !DILocation(line: 243, column: 1, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 243, column: 1)
!4297 = !DILocation(line: 243, column: 1, scope: !4288)
!4298 = distinct !DISubprogram(name: "determine_roots_comp", scope: !3, file: !3, line: 1177, type: !3508, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4299)
!4299 = !{!4300, !4301, !4302, !4303, !4304, !4305, !4306}
!4300 = !DILocalVariable(name: "loop", arg: 1, scope: !4298, file: !3, line: 1177, type: !1028)
!4301 = !DILocalVariable(name: "comp", arg: 2, scope: !4298, file: !3, line: 1178, type: !2027)
!4302 = !DILocalVariable(name: "chains", arg: 3, scope: !4298, file: !3, line: 1179, type: !3510)
!4303 = !DILocalVariable(name: "i", scope: !4298, file: !3, line: 1181, type: !7)
!4304 = !DILocalVariable(name: "a", scope: !4298, file: !3, line: 1182, type: !1841)
!4305 = !DILocalVariable(name: "chain", scope: !4298, file: !3, line: 1183, type: !1911)
!4306 = !DILocalVariable(name: "last_ofs", scope: !4298, file: !3, line: 1184, type: !538)
!4307 = !DILocation(line: 0, scope: !4298)
!4308 = !DILocation(line: 1182, column: 3, scope: !4298)
!4309 = !DILocation(line: 1184, column: 3, scope: !4298)
!4310 = !DILocation(line: 1184, column: 25, scope: !4298)
!4311 = !DILocation(line: 1187, column: 13, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 1187, column: 7)
!4313 = !DILocation(line: 1187, column: 23, scope: !4312)
!4314 = !DILocation(line: 1187, column: 7, scope: !4298)
!4315 = !DILocation(line: 1189, column: 15, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 1188, column: 5)
!4317 = !DILocation(line: 1190, column: 7, scope: !4316)
!4318 = !DILocation(line: 1191, column: 7, scope: !4316)
!4319 = !DILocation(line: 1195, column: 15, scope: !4298)
!4320 = !DILocation(line: 1195, column: 47, scope: !4298)
!4321 = !DILocation(line: 1195, column: 3, scope: !4298)
!4322 = !DILocation(line: 1202, column: 8, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 1202, column: 3)
!4324 = !DILocation(line: 0, scope: !4323)
!4325 = !DILocation(line: 1202, column: 15, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 1202, column: 3)
!4327 = !DILocation(line: 1202, column: 3, scope: !4323)
!4328 = !DILocation(line: 1204, column: 12, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 1204, column: 11)
!4330 = distinct !DILexicalBlock(scope: !4326, file: !3, line: 1203, column: 5)
!4331 = !DILocation(line: 1204, column: 18, scope: !4329)
!4332 = !DILocation(line: 1204, column: 22, scope: !4329)
!4333 = !DILocation(line: 1205, column: 4, scope: !4329)
!4334 = !DILocation(line: 1205, column: 44, scope: !4329)
!4335 = !DILocation(line: 1205, column: 24, scope: !4329)
!4336 = !DILocation(line: 1206, column: 26, scope: !4329)
!4337 = !DILocation(line: 1207, column: 12, scope: !4329)
!4338 = !DILocation(line: 1206, column: 10, scope: !4329)
!4339 = !DILocation(line: 1205, column: 7, scope: !4329)
!4340 = !DILocation(line: 1207, column: 40, scope: !4329)
!4341 = !DILocation(line: 1204, column: 11, scope: !4330)
!4342 = !DILocation(line: 1209, column: 8, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 1209, column: 8)
!4344 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 1208, column: 2)
!4345 = !DILocation(line: 1209, column: 8, scope: !4344)
!4346 = !DILocation(line: 1211, column: 8, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 1210, column: 6)
!4348 = !DILocation(line: 1212, column: 8, scope: !4347)
!4349 = !DILocation(line: 1213, column: 6, scope: !4347)
!4350 = !DILocation(line: 1215, column: 6, scope: !4343)
!4351 = !DILocation(line: 1216, column: 31, scope: !4344)
!4352 = !DILocation(line: 1216, column: 12, scope: !4344)
!4353 = !DILocation(line: 1217, column: 15, scope: !4344)
!4354 = !DILocation(line: 1217, column: 18, scope: !4344)
!4355 = !DILocation(line: 1218, column: 4, scope: !4344)
!4356 = !DILocation(line: 1221, column: 32, scope: !4330)
!4357 = !DILocation(line: 1221, column: 7, scope: !4330)
!4358 = !DILocation(line: 1222, column: 5, scope: !4330)
!4359 = !DILocation(line: 1202, column: 54, scope: !4326)
!4360 = !DILocation(line: 1202, column: 3, scope: !4326)
!4361 = distinct !{!4361, !4327, !4362}
!4362 = !DILocation(line: 1222, column: 5, scope: !4323)
!4363 = !DILocation(line: 1224, column: 7, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 1224, column: 7)
!4365 = !DILocation(line: 1224, column: 7, scope: !4298)
!4366 = !DILocation(line: 1226, column: 7, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 1225, column: 5)
!4368 = !DILocation(line: 1227, column: 7, scope: !4367)
!4369 = !DILocation(line: 1228, column: 5, scope: !4367)
!4370 = !DILocation(line: 1230, column: 5, scope: !4364)
!4371 = !DILocation(line: 1231, column: 1, scope: !4298)
!4372 = distinct !DISubprogram(name: "make_invariant_chain", scope: !3, file: !3, line: 955, type: !4373, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4375)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!1911, !2027}
!4375 = !{!4376, !4377, !4378, !4379}
!4376 = !DILocalVariable(name: "comp", arg: 1, scope: !4372, file: !3, line: 955, type: !2027)
!4377 = !DILocalVariable(name: "chain", scope: !4372, file: !3, line: 957, type: !1911)
!4378 = !DILocalVariable(name: "i", scope: !4372, file: !3, line: 958, type: !7)
!4379 = !DILocalVariable(name: "ref", scope: !4372, file: !3, line: 959, type: !1841)
!4380 = !DILocation(line: 0, scope: !4372)
!4381 = !DILocation(line: 957, column: 19, scope: !4372)
!4382 = !DILocation(line: 959, column: 3, scope: !4372)
!4383 = !DILocation(line: 961, column: 10, scope: !4372)
!4384 = !DILocation(line: 961, column: 15, scope: !4372)
!4385 = !DILocation(line: 963, column: 10, scope: !4372)
!4386 = !DILocation(line: 963, column: 30, scope: !4372)
!4387 = !DILocation(line: 0, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 965, column: 3)
!4389 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 965, column: 3)
!4390 = !DILocation(line: 0, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 966, column: 5)
!4392 = !DILocation(line: 965, column: 8, scope: !4389)
!4393 = !DILocation(line: 0, scope: !4389)
!4394 = !DILocation(line: 965, column: 15, scope: !4388)
!4395 = !DILocation(line: 965, column: 3, scope: !4389)
!4396 = !DILocation(line: 967, column: 7, scope: !4391)
!4397 = !DILocation(line: 968, column: 37, scope: !4391)
!4398 = !DILocation(line: 968, column: 42, scope: !4391)
!4399 = !DILocation(line: 968, column: 34, scope: !4391)
!4400 = !DILocation(line: 965, column: 56, scope: !4388)
!4401 = !DILocation(line: 965, column: 3, scope: !4388)
!4402 = distinct !{!4402, !4395, !4403}
!4403 = !DILocation(line: 969, column: 5, scope: !4389)
!4404 = !DILocation(line: 972, column: 1, scope: !4372)
!4405 = !DILocation(line: 971, column: 3, scope: !4372)
!4406 = distinct !DISubprogram(name: "VEC_chain_p_heap_safe_push", scope: !3, file: !3, line: 299, type: !4407, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4409)
!4407 = !DISubroutineType(types: !4408)
!4408 = !{!2729, !3510, !1911}
!4409 = !{!4410, !4411}
!4410 = !DILocalVariable(name: "vec_", arg: 1, scope: !4406, file: !3, line: 299, type: !3510)
!4411 = !DILocalVariable(name: "obj_", arg: 2, scope: !4406, file: !3, line: 299, type: !1911)
!4412 = !DILocation(line: 0, scope: !4406)
!4413 = !DILocation(line: 299, column: 1, scope: !4406)
!4414 = distinct !DISubprogram(name: "VEC_dref_base_address", scope: !3, file: !3, line: 242, type: !4415, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4417)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!2686, !4145}
!4417 = !{!4418}
!4418 = !DILocalVariable(name: "vec_", arg: 1, scope: !4414, file: !3, line: 242, type: !4145)
!4419 = !DILocation(line: 0, scope: !4414)
!4420 = !DILocation(line: 242, column: 1, scope: !4414)
!4421 = distinct !DISubprogram(name: "order_drefs", scope: !3, file: !3, line: 898, type: !1313, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4422)
!4422 = !{!4423, !4424, !4425, !4427, !4428}
!4423 = !DILocalVariable(name: "a", arg: 1, scope: !4421, file: !3, line: 898, type: !1308)
!4424 = !DILocalVariable(name: "b", arg: 2, scope: !4421, file: !3, line: 898, type: !1308)
!4425 = !DILocalVariable(name: "da", scope: !4421, file: !3, line: 900, type: !4426)
!4426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2045)
!4427 = !DILocalVariable(name: "db", scope: !4421, file: !3, line: 901, type: !4426)
!4428 = !DILocalVariable(name: "offcmp", scope: !4421, file: !3, line: 902, type: !482)
!4429 = !DILocation(line: 0, scope: !4421)
!4430 = !DILocation(line: 900, column: 26, scope: !4421)
!4431 = !DILocation(line: 901, column: 26, scope: !4421)
!4432 = !DILocation(line: 902, column: 34, scope: !4421)
!4433 = !DILocation(line: 902, column: 49, scope: !4421)
!4434 = !DILocation(line: 902, column: 16, scope: !4421)
!4435 = !DILocation(line: 904, column: 14, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 904, column: 7)
!4437 = !DILocation(line: 904, column: 7, scope: !4421)
!4438 = !DILocation(line: 907, column: 11, scope: !4421)
!4439 = !DILocation(line: 907, column: 17, scope: !4421)
!4440 = !DILocation(line: 907, column: 24, scope: !4421)
!4441 = !DILocation(line: 907, column: 30, scope: !4421)
!4442 = !DILocation(line: 907, column: 21, scope: !4421)
!4443 = !DILocation(line: 907, column: 3, scope: !4421)
!4444 = !DILocation(line: 908, column: 1, scope: !4421)
!4445 = distinct !DISubprogram(name: "uhwi_to_double_int", scope: !539, file: !539, line: 94, type: !4446, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4448)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!538, !543}
!4448 = !{!4449, !4450}
!4449 = !DILocalVariable(name: "cst", arg: 1, scope: !4445, file: !539, line: 94, type: !543)
!4450 = !DILocalVariable(name: "r", scope: !4445, file: !539, line: 96, type: !538)
!4451 = !DILocation(line: 0, scope: !4445)
!4452 = !DILocation(line: 101, column: 3, scope: !4445)
!4453 = distinct !DISubprogram(name: "nontrivial_chain_p", scope: !3, file: !3, line: 994, type: !4454, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4456)
!4454 = !DISubroutineType(types: !4455)
!4455 = !{!481, !1911}
!4456 = !{!4457}
!4457 = !DILocalVariable(name: "chain", arg: 1, scope: !4453, file: !3, line: 994, type: !1911)
!4458 = !DILocation(line: 0, scope: !4453)
!4459 = !DILocation(line: 996, column: 16, scope: !4453)
!4460 = !DILocation(line: 996, column: 24, scope: !4453)
!4461 = !DILocation(line: 996, column: 27, scope: !4453)
!4462 = !DILocation(line: 996, column: 58, scope: !4453)
!4463 = !DILocation(line: 996, column: 3, scope: !4453)
!4464 = distinct !DISubprogram(name: "add_looparound_copies", scope: !3, file: !3, line: 1155, type: !4465, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4467)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{null, !1028, !1911}
!4467 = !{!4468, !4469, !4470, !4471, !4472, !4473}
!4468 = !DILocalVariable(name: "loop", arg: 1, scope: !4464, file: !3, line: 1155, type: !1028)
!4469 = !DILocalVariable(name: "chain", arg: 2, scope: !4464, file: !3, line: 1155, type: !1911)
!4470 = !DILocalVariable(name: "i", scope: !4464, file: !3, line: 1157, type: !7)
!4471 = !DILocalVariable(name: "ref", scope: !4464, file: !3, line: 1158, type: !1841)
!4472 = !DILocalVariable(name: "root", scope: !4464, file: !3, line: 1158, type: !1841)
!4473 = !DILocalVariable(name: "phi", scope: !4464, file: !3, line: 1159, type: !813)
!4474 = !DILocation(line: 0, scope: !4464)
!4475 = !DILocation(line: 1158, column: 3, scope: !4464)
!4476 = !DILocation(line: 1158, column: 20, scope: !4464)
!4477 = !DILocation(line: 0, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 1161, column: 3)
!4479 = distinct !DILexicalBlock(scope: !4464, file: !3, line: 1161, column: 3)
!4480 = !DILocation(line: 1161, column: 8, scope: !4479)
!4481 = !DILocation(line: 0, scope: !4479)
!4482 = !DILocation(line: 1161, column: 15, scope: !4478)
!4483 = !DILocation(line: 1161, column: 3, scope: !4479)
!4484 = !DILocation(line: 1163, column: 40, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 1162, column: 5)
!4486 = !DILocation(line: 1163, column: 13, scope: !4485)
!4487 = !DILocation(line: 1164, column: 12, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 1164, column: 11)
!4489 = !DILocation(line: 1164, column: 11, scope: !4485)
!4490 = !DILocation(line: 1167, column: 23, scope: !4485)
!4491 = !DILocation(line: 1167, column: 40, scope: !4485)
!4492 = !DILocation(line: 1167, column: 7, scope: !4485)
!4493 = !DILocation(line: 1168, column: 38, scope: !4485)
!4494 = !DILocation(line: 1168, column: 7, scope: !4485)
!4495 = !DILocation(line: 1169, column: 5, scope: !4485)
!4496 = !DILocation(line: 1161, column: 57, scope: !4478)
!4497 = !DILocation(line: 1161, column: 3, scope: !4478)
!4498 = distinct !{!4498, !4483, !4499}
!4499 = !DILocation(line: 1169, column: 5, scope: !4479)
!4500 = !DILocation(line: 1170, column: 1, scope: !4464)
!4501 = distinct !DISubprogram(name: "release_chain", scope: !3, file: !3, line: 492, type: !4502, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4504)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{null, !1911}
!4504 = !{!4505, !4506, !4507}
!4505 = !DILocalVariable(name: "chain", arg: 1, scope: !4501, file: !3, line: 492, type: !1911)
!4506 = !DILocalVariable(name: "ref", scope: !4501, file: !3, line: 494, type: !1841)
!4507 = !DILocalVariable(name: "i", scope: !4501, file: !3, line: 495, type: !7)
!4508 = !DILocation(line: 0, scope: !4501)
!4509 = !DILocation(line: 494, column: 3, scope: !4501)
!4510 = !DILocation(line: 497, column: 13, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4501, file: !3, line: 497, column: 7)
!4512 = !DILocation(line: 497, column: 7, scope: !4501)
!4513 = !DILocation(line: 0, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 500, column: 3)
!4515 = distinct !DILexicalBlock(scope: !4501, file: !3, line: 500, column: 3)
!4516 = !DILocation(line: 500, column: 3, scope: !4515)
!4517 = !DILocation(line: 0, scope: !4515)
!4518 = !DILocation(line: 500, column: 15, scope: !4514)
!4519 = !DILocation(line: 501, column: 11, scope: !4514)
!4520 = !DILocation(line: 501, column: 5, scope: !4514)
!4521 = !DILocation(line: 500, column: 57, scope: !4514)
!4522 = !DILocation(line: 500, column: 3, scope: !4514)
!4523 = distinct !{!4523, !4516, !4524}
!4524 = !DILocation(line: 501, column: 14, scope: !4515)
!4525 = !DILocation(line: 503, column: 3, scope: !4501)
!4526 = !DILocation(line: 504, column: 3, scope: !4501)
!4527 = !DILocation(line: 505, column: 3, scope: !4501)
!4528 = !DILocation(line: 507, column: 9, scope: !4501)
!4529 = !DILocation(line: 507, column: 3, scope: !4501)
!4530 = !DILocation(line: 508, column: 1, scope: !4501)
!4531 = distinct !DISubprogram(name: "make_rooted_chain", scope: !3, file: !3, line: 977, type: !4532, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4534)
!4532 = !DISubroutineType(types: !4533)
!4533 = !{!1911, !1841}
!4534 = !{!4535, !4536}
!4535 = !DILocalVariable(name: "ref", arg: 1, scope: !4531, file: !3, line: 977, type: !1841)
!4536 = !DILocalVariable(name: "chain", scope: !4531, file: !3, line: 979, type: !1911)
!4537 = !DILocation(line: 0, scope: !4531)
!4538 = !DILocation(line: 979, column: 19, scope: !4531)
!4539 = !DILocation(line: 981, column: 17, scope: !4531)
!4540 = !DILocation(line: 981, column: 10, scope: !4531)
!4541 = !DILocation(line: 981, column: 15, scope: !4531)
!4542 = !DILocation(line: 983, column: 3, scope: !4531)
!4543 = !DILocation(line: 984, column: 37, scope: !4531)
!4544 = !DILocation(line: 984, column: 10, scope: !4531)
!4545 = !DILocation(line: 984, column: 30, scope: !4531)
!4546 = !DILocation(line: 986, column: 8, scope: !4531)
!4547 = !DILocation(line: 986, column: 17, scope: !4531)
!4548 = !DILocation(line: 988, column: 3, scope: !4531)
!4549 = distinct !DISubprogram(name: "add_ref_to_chain", scope: !3, file: !3, line: 921, type: !4550, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4552)
!4550 = !DISubroutineType(types: !4551)
!4551 = !{null, !1911, !1841}
!4552 = !{!4553, !4554, !4555, !4556}
!4553 = !DILocalVariable(name: "chain", arg: 1, scope: !4549, file: !3, line: 921, type: !1911)
!4554 = !DILocalVariable(name: "ref", arg: 2, scope: !4549, file: !3, line: 921, type: !1841)
!4555 = !DILocalVariable(name: "root", scope: !4549, file: !3, line: 923, type: !1841)
!4556 = !DILocalVariable(name: "dist", scope: !4549, file: !3, line: 924, type: !538)
!4557 = !DILocation(line: 0, scope: !4549)
!4558 = !DILocation(line: 923, column: 15, scope: !4549)
!4559 = !DILocation(line: 924, column: 3, scope: !4549)
!4560 = !DILocation(line: 926, column: 3, scope: !4549)
!4561 = !DILocation(line: 927, column: 10, scope: !4549)
!4562 = !DILocation(line: 927, column: 39, scope: !4549)
!4563 = !DILocation(line: 928, column: 44, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 928, column: 7)
!4565 = !DILocation(line: 928, column: 24, scope: !4564)
!4566 = !DILocation(line: 928, column: 7, scope: !4564)
!4567 = !DILocation(line: 928, column: 65, scope: !4564)
!4568 = !DILocation(line: 928, column: 7, scope: !4549)
!4569 = !DILocation(line: 930, column: 13, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 929, column: 5)
!4571 = !DILocation(line: 930, column: 7, scope: !4570)
!4572 = !DILocation(line: 931, column: 7, scope: !4570)
!4573 = !DILocation(line: 933, column: 3, scope: !4549)
!4574 = !DILocation(line: 935, column: 3, scope: !4549)
!4575 = !DILocation(line: 937, column: 19, scope: !4549)
!4576 = !DILocation(line: 937, column: 8, scope: !4549)
!4577 = !DILocation(line: 937, column: 17, scope: !4549)
!4578 = !DILocation(line: 939, column: 31, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 939, column: 7)
!4580 = !DILocation(line: 939, column: 21, scope: !4579)
!4581 = !DILocation(line: 939, column: 7, scope: !4549)
!4582 = !DILocation(line: 941, column: 21, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 940, column: 5)
!4584 = !DILocation(line: 942, column: 14, scope: !4583)
!4585 = !DILocation(line: 942, column: 32, scope: !4583)
!4586 = !DILocation(line: 945, column: 12, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 945, column: 7)
!4588 = !DILocation(line: 943, column: 5, scope: !4583)
!4589 = !DILocation(line: 945, column: 31, scope: !4587)
!4590 = !DILocation(line: 945, column: 21, scope: !4587)
!4591 = !DILocation(line: 946, column: 7, scope: !4587)
!4592 = !DILocation(line: 946, column: 15, scope: !4587)
!4593 = !DILocation(line: 946, column: 27, scope: !4587)
!4594 = !DILocation(line: 946, column: 19, scope: !4587)
!4595 = !DILocation(line: 945, column: 7, scope: !4549)
!4596 = !DILocation(line: 947, column: 12, scope: !4587)
!4597 = !DILocation(line: 947, column: 30, scope: !4587)
!4598 = !DILocation(line: 947, column: 5, scope: !4587)
!4599 = !DILocation(line: 949, column: 38, scope: !4549)
!4600 = !DILocation(line: 949, column: 10, scope: !4549)
!4601 = !DILocation(line: 949, column: 30, scope: !4549)
!4602 = !DILocation(line: 950, column: 1, scope: !4549)
!4603 = distinct !DISubprogram(name: "VEC_dref_heap_safe_push", scope: !3, file: !3, line: 243, type: !4604, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4606)
!4604 = !DISubroutineType(types: !4605)
!4605 = !{!2686, !4291, !1841}
!4606 = !{!4607, !4608}
!4607 = !DILocalVariable(name: "vec_", arg: 1, scope: !4603, file: !3, line: 243, type: !4291)
!4608 = !DILocalVariable(name: "obj_", arg: 2, scope: !4603, file: !3, line: 243, type: !1841)
!4609 = !DILocation(line: 0, scope: !4603)
!4610 = !DILocation(line: 243, column: 1, scope: !4603)
!4611 = distinct !DISubprogram(name: "VEC_dref_heap_reserve", scope: !3, file: !3, line: 243, type: !4612, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4614)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!482, !4291, !482}
!4614 = !{!4615, !4616, !4617}
!4615 = !DILocalVariable(name: "vec_", arg: 1, scope: !4611, file: !3, line: 243, type: !4291)
!4616 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4611, file: !3, line: 243, type: !482)
!4617 = !DILocalVariable(name: "extend", scope: !4611, file: !3, line: 243, type: !482)
!4618 = !DILocation(line: 0, scope: !4611)
!4619 = !DILocation(line: 243, column: 1, scope: !4611)
!4620 = !DILocation(line: 243, column: 1, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 243, column: 1)
!4622 = distinct !DISubprogram(name: "VEC_dref_base_space", scope: !3, file: !3, line: 242, type: !4623, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4625)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!482, !4145, !482}
!4625 = !{!4626, !4627}
!4626 = !DILocalVariable(name: "vec_", arg: 1, scope: !4622, file: !3, line: 242, type: !4145)
!4627 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4622, file: !3, line: 242, type: !482)
!4628 = !DILocation(line: 0, scope: !4622)
!4629 = !DILocation(line: 242, column: 1, scope: !4622)
!4630 = distinct !DISubprogram(name: "VEC_chain_p_heap_reserve", scope: !3, file: !3, line: 299, type: !4631, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4633)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{!482, !3510, !482}
!4633 = !{!4634, !4635, !4636}
!4634 = !DILocalVariable(name: "vec_", arg: 1, scope: !4630, file: !3, line: 299, type: !3510)
!4635 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4630, file: !3, line: 299, type: !482)
!4636 = !DILocalVariable(name: "extend", scope: !4630, file: !3, line: 299, type: !482)
!4637 = !DILocation(line: 0, scope: !4630)
!4638 = !DILocation(line: 299, column: 1, scope: !4630)
!4639 = !DILocation(line: 299, column: 1, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 299, column: 1)
!4641 = distinct !DISubprogram(name: "VEC_chain_p_base_quick_push", scope: !3, file: !3, line: 298, type: !4642, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4645)
!4642 = !DISubroutineType(types: !4643)
!4643 = !{!2729, !4644, !1911}
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!4645 = !{!4646, !4647, !4648}
!4646 = !DILocalVariable(name: "vec_", arg: 1, scope: !4641, file: !3, line: 298, type: !4644)
!4647 = !DILocalVariable(name: "obj_", arg: 2, scope: !4641, file: !3, line: 298, type: !1911)
!4648 = !DILocalVariable(name: "slot_", scope: !4641, file: !3, line: 298, type: !2729)
!4649 = !DILocation(line: 0, scope: !4641)
!4650 = !DILocation(line: 298, column: 1, scope: !4641)
!4651 = distinct !DISubprogram(name: "VEC_chain_p_base_space", scope: !3, file: !3, line: 298, type: !4652, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4654)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{!482, !4644, !482}
!4654 = !{!4655, !4656}
!4655 = !DILocalVariable(name: "vec_", arg: 1, scope: !4651, file: !3, line: 298, type: !4644)
!4656 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4651, file: !3, line: 298, type: !482)
!4657 = !DILocation(line: 0, scope: !4651)
!4658 = !DILocation(line: 298, column: 1, scope: !4651)
!4659 = distinct !DISubprogram(name: "get_chain_root", scope: !3, file: !3, line: 913, type: !4660, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4662)
!4660 = !DISubroutineType(types: !4661)
!4661 = !{!1841, !1911}
!4662 = !{!4663}
!4663 = !DILocalVariable(name: "chain", arg: 1, scope: !4659, file: !3, line: 913, type: !1911)
!4664 = !DILocation(line: 0, scope: !4659)
!4665 = !DILocation(line: 915, column: 10, scope: !4659)
!4666 = !DILocation(line: 915, column: 3, scope: !4659)
!4667 = distinct !DISubprogram(name: "find_looparound_phi", scope: !3, file: !3, line: 1068, type: !4668, scopeLine: 1069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4670)
!4668 = !DISubroutineType(types: !4669)
!4669 = !{!813, !1028, !1841, !1841}
!4670 = !{!4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681}
!4671 = !DILocalVariable(name: "loop", arg: 1, scope: !4667, file: !3, line: 1068, type: !1028)
!4672 = !DILocalVariable(name: "ref", arg: 2, scope: !4667, file: !3, line: 1068, type: !1841)
!4673 = !DILocalVariable(name: "root", arg: 3, scope: !4667, file: !3, line: 1068, type: !1841)
!4674 = !DILocalVariable(name: "name", scope: !4667, file: !3, line: 1070, type: !489)
!4675 = !DILocalVariable(name: "init", scope: !4667, file: !3, line: 1070, type: !489)
!4676 = !DILocalVariable(name: "init_ref", scope: !4667, file: !3, line: 1070, type: !489)
!4677 = !DILocalVariable(name: "phi", scope: !4667, file: !3, line: 1071, type: !813)
!4678 = !DILocalVariable(name: "init_stmt", scope: !4667, file: !3, line: 1071, type: !813)
!4679 = !DILocalVariable(name: "latch", scope: !4667, file: !3, line: 1072, type: !793)
!4680 = !DILocalVariable(name: "init_dr", scope: !4667, file: !3, line: 1073, type: !1847)
!4681 = !DILocalVariable(name: "psi", scope: !4667, file: !3, line: 1074, type: !3767)
!4682 = !DILocation(line: 0, scope: !4667)
!4683 = !DILocation(line: 1072, column: 16, scope: !4667)
!4684 = !DILocation(line: 1073, column: 3, scope: !4667)
!4685 = !DILocation(line: 1074, column: 3, scope: !4667)
!4686 = !DILocation(line: 1076, column: 30, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1076, column: 7)
!4688 = !DILocation(line: 1076, column: 7, scope: !4687)
!4689 = !DILocation(line: 1076, column: 7, scope: !4667)
!4690 = !DILocation(line: 1078, column: 11, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 1078, column: 11)
!4692 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 1077, column: 5)
!4693 = !DILocation(line: 0, scope: !4691)
!4694 = !DILocation(line: 1078, column: 11, scope: !4692)
!4695 = !DILocation(line: 1079, column: 9, scope: !4691)
!4696 = !DILocation(line: 1079, column: 2, scope: !4691)
!4697 = !DILocation(line: 1081, column: 9, scope: !4691)
!4698 = !DILocation(line: 1084, column: 12, scope: !4687)
!4699 = !DILocation(line: 0, scope: !4687)
!4700 = !DILocation(line: 1085, column: 8, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1085, column: 7)
!4702 = !DILocation(line: 1085, column: 7, scope: !4667)
!4703 = !DILocation(line: 1088, column: 14, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1088, column: 3)
!4705 = !DILocation(line: 1088, column: 36, scope: !4704)
!4706 = !DILocation(line: 0, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1091, column: 11)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 1089, column: 5)
!4709 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 1088, column: 3)
!4710 = !DILocation(line: 1088, column: 8, scope: !4704)
!4711 = !DILocation(line: 1088, column: 46, scope: !4709)
!4712 = !DILocation(line: 1088, column: 45, scope: !4709)
!4713 = !DILocation(line: 1088, column: 3, scope: !4704)
!4714 = !DILocation(line: 1090, column: 13, scope: !4708)
!4715 = !DILocation(line: 1091, column: 11, scope: !4707)
!4716 = !DILocation(line: 1091, column: 46, scope: !4707)
!4717 = !DILocation(line: 1091, column: 11, scope: !4708)
!4718 = !DILocation(line: 1088, column: 63, scope: !4709)
!4719 = !DILocation(line: 1088, column: 3, scope: !4709)
!4720 = distinct !{!4720, !4713, !4721}
!4721 = !DILocation(line: 1093, column: 5, scope: !4704)
!4722 = !DILocation(line: 1095, column: 7, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1095, column: 7)
!4724 = !DILocation(line: 1095, column: 7, scope: !4667)
!4725 = !DILocation(line: 1098, column: 10, scope: !4667)
!4726 = !DILocation(line: 1099, column: 7, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1099, column: 7)
!4728 = !DILocation(line: 1099, column: 24, scope: !4727)
!4729 = !DILocation(line: 1099, column: 7, scope: !4667)
!4730 = !DILocation(line: 1101, column: 15, scope: !4667)
!4731 = !DILocation(line: 1102, column: 7, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1102, column: 7)
!4733 = !DILocation(line: 1102, column: 31, scope: !4732)
!4734 = !DILocation(line: 1102, column: 7, scope: !4667)
!4735 = !DILocation(line: 1104, column: 3, scope: !4667)
!4736 = !DILocation(line: 1106, column: 14, scope: !4667)
!4737 = !DILocation(line: 1107, column: 8, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1107, column: 7)
!4739 = !DILocation(line: 1108, column: 7, scope: !4738)
!4740 = !DILocation(line: 1108, column: 11, scope: !4738)
!4741 = !DILocation(line: 1107, column: 7, scope: !4667)
!4742 = !DILocation(line: 1113, column: 3, scope: !4667)
!4743 = !DILocation(line: 1114, column: 3, scope: !4667)
!4744 = !DILocation(line: 1114, column: 21, scope: !4667)
!4745 = !DILocation(line: 1115, column: 3, scope: !4667)
!4746 = !DILocation(line: 1115, column: 22, scope: !4667)
!4747 = !DILocation(line: 1116, column: 8, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1116, column: 7)
!4749 = !DILocation(line: 1116, column: 7, scope: !4667)
!4750 = !DILocation(line: 1119, column: 44, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1119, column: 7)
!4752 = !DILocation(line: 1119, column: 53, scope: !4751)
!4753 = !DILocation(line: 1119, column: 64, scope: !4751)
!4754 = !DILocation(line: 1119, column: 8, scope: !4751)
!4755 = !DILocation(line: 1123, column: 1, scope: !4667)
!4756 = distinct !DISubprogram(name: "insert_looparound_copy", scope: !3, file: !3, line: 1128, type: !4757, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4759)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{null, !1911, !1841, !813}
!4759 = !{!4760, !4761, !4762, !4763, !4764, !4765}
!4760 = !DILocalVariable(name: "chain", arg: 1, scope: !4756, file: !3, line: 1128, type: !1911)
!4761 = !DILocalVariable(name: "ref", arg: 2, scope: !4756, file: !3, line: 1128, type: !1841)
!4762 = !DILocalVariable(name: "phi", arg: 3, scope: !4756, file: !3, line: 1128, type: !813)
!4763 = !DILocalVariable(name: "nw", scope: !4756, file: !3, line: 1130, type: !1841)
!4764 = !DILocalVariable(name: "aref", scope: !4756, file: !3, line: 1130, type: !1841)
!4765 = !DILocalVariable(name: "i", scope: !4756, file: !3, line: 1131, type: !7)
!4766 = !DILocation(line: 0, scope: !4756)
!4767 = !DILocation(line: 1130, column: 13, scope: !4756)
!4768 = !DILocation(line: 1130, column: 3, scope: !4756)
!4769 = !DILocation(line: 1133, column: 7, scope: !4756)
!4770 = !DILocation(line: 1133, column: 12, scope: !4756)
!4771 = !DILocation(line: 1134, column: 23, scope: !4756)
!4772 = !DILocation(line: 1134, column: 32, scope: !4756)
!4773 = !DILocation(line: 1134, column: 7, scope: !4756)
!4774 = !DILocation(line: 1134, column: 16, scope: !4756)
!4775 = !DILocation(line: 1135, column: 7, scope: !4756)
!4776 = !DILocation(line: 1135, column: 23, scope: !4756)
!4777 = !DILocation(line: 0, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 1137, column: 3)
!4779 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 1137, column: 3)
!4780 = !DILocation(line: 1137, column: 8, scope: !4779)
!4781 = !DILocation(line: 0, scope: !4779)
!4782 = !DILocation(line: 1137, column: 15, scope: !4778)
!4783 = !DILocation(line: 1137, column: 3, scope: !4779)
!4784 = !DILocation(line: 1138, column: 9, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 1138, column: 9)
!4786 = !DILocation(line: 1138, column: 15, scope: !4785)
!4787 = !DILocation(line: 1138, column: 31, scope: !4785)
!4788 = !DILocation(line: 1138, column: 24, scope: !4785)
!4789 = !DILocation(line: 1138, column: 9, scope: !4778)
!4790 = !DILocation(line: 1137, column: 58, scope: !4778)
!4791 = !DILocation(line: 1137, column: 3, scope: !4778)
!4792 = distinct !{!4792, !4783, !4793}
!4793 = !DILocation(line: 1139, column: 7, scope: !4779)
!4794 = !DILocation(line: 1140, column: 3, scope: !4756)
!4795 = !DILocation(line: 1142, column: 11, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 1142, column: 7)
!4797 = !DILocation(line: 1142, column: 29, scope: !4796)
!4798 = !DILocation(line: 1142, column: 20, scope: !4796)
!4799 = !DILocation(line: 1142, column: 7, scope: !4756)
!4800 = !DILocation(line: 1144, column: 21, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 1143, column: 5)
!4802 = !DILocation(line: 1145, column: 14, scope: !4801)
!4803 = !DILocation(line: 1145, column: 32, scope: !4801)
!4804 = !DILocation(line: 1146, column: 5, scope: !4801)
!4805 = !DILocation(line: 1147, column: 1, scope: !4756)
!4806 = distinct !DISubprogram(name: "is_gimple_assign", scope: !402, file: !402, line: 1677, type: !3154, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4807)
!4807 = !{!4808}
!4808 = !DILocalVariable(name: "gs", arg: 1, scope: !4806, file: !402, line: 1677, type: !2552)
!4809 = !DILocation(line: 0, scope: !4806)
!4810 = !DILocation(line: 1679, column: 10, scope: !4806)
!4811 = !DILocation(line: 1679, column: 27, scope: !4806)
!4812 = !DILocation(line: 1679, column: 3, scope: !4806)
!4813 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !402, file: !402, line: 1694, type: !2853, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4814)
!4814 = !{!4815}
!4815 = !DILocalVariable(name: "gs", arg: 1, scope: !4813, file: !402, line: 1694, type: !2552)
!4816 = !DILocation(line: 0, scope: !4813)
!4817 = !DILocation(line: 1697, column: 10, scope: !4813)
!4818 = !DILocation(line: 1697, column: 3, scope: !4813)
!4819 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !402, file: !402, line: 1727, type: !2853, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4820)
!4820 = !{!4821}
!4821 = !DILocalVariable(name: "gs", arg: 1, scope: !4819, file: !402, line: 1727, type: !2552)
!4822 = !DILocation(line: 0, scope: !4819)
!4823 = !DILocation(line: 1730, column: 10, scope: !4819)
!4824 = !DILocation(line: 1730, column: 3, scope: !4819)
!4825 = distinct !DISubprogram(name: "gsi_end_p", scope: !402, file: !402, line: 4467, type: !4826, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4828)
!4826 = !DISubroutineType(types: !4827)
!4827 = !{!481, !3767}
!4828 = !{!4829}
!4829 = !DILocalVariable(name: "i", arg: 1, scope: !4825, file: !402, line: 4467, type: !3767)
!4830 = !DILocation(line: 4467, column: 33, scope: !4825)
!4831 = !DILocation(line: 4469, column: 12, scope: !4825)
!4832 = !DILocation(line: 4469, column: 16, scope: !4825)
!4833 = !DILocation(line: 4469, column: 10, scope: !4825)
!4834 = !DILocation(line: 4469, column: 3, scope: !4825)
!4835 = distinct !DISubprogram(name: "gsi_stmt", scope: !402, file: !402, line: 4501, type: !4836, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4838)
!4836 = !DISubroutineType(types: !4837)
!4837 = !{!813, !3767}
!4838 = !{!4839}
!4839 = !DILocalVariable(name: "i", arg: 1, scope: !4835, file: !402, line: 4501, type: !3767)
!4840 = !DILocation(line: 4501, column: 32, scope: !4835)
!4841 = !DILocation(line: 4503, column: 12, scope: !4835)
!4842 = !DILocation(line: 4503, column: 17, scope: !4835)
!4843 = !DILocation(line: 4503, column: 3, scope: !4835)
!4844 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !2823, file: !2823, line: 427, type: !4845, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4847)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{!489, !2049}
!4847 = !{!4848}
!4848 = !DILocalVariable(name: "use", arg: 1, scope: !4844, file: !2823, line: 427, type: !2049)
!4849 = !DILocation(line: 0, scope: !4844)
!4850 = !DILocation(line: 429, column: 17, scope: !4844)
!4851 = !DILocation(line: 429, column: 10, scope: !4844)
!4852 = !DILocation(line: 429, column: 3, scope: !4844)
!4853 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !2823, file: !2823, line: 442, type: !4854, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4856)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{!2049, !813, !482}
!4856 = !{!4857, !4858}
!4857 = !DILocalVariable(name: "gs", arg: 1, scope: !4853, file: !2823, line: 442, type: !813)
!4858 = !DILocalVariable(name: "i", arg: 2, scope: !4853, file: !2823, line: 442, type: !482)
!4859 = !DILocation(line: 0, scope: !4853)
!4860 = !DILocation(line: 444, column: 11, scope: !4853)
!4861 = !DILocation(line: 444, column: 35, scope: !4853)
!4862 = !DILocation(line: 444, column: 3, scope: !4853)
!4863 = distinct !DISubprogram(name: "gsi_next", scope: !402, file: !402, line: 4485, type: !4864, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4867)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{null, !4866}
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3767, size: 64)
!4867 = !{!4868}
!4868 = !DILocalVariable(name: "i", arg: 1, scope: !4863, file: !402, line: 4485, type: !4866)
!4869 = !DILocation(line: 0, scope: !4863)
!4870 = !DILocation(line: 4487, column: 15, scope: !4863)
!4871 = !DILocation(line: 4487, column: 20, scope: !4863)
!4872 = !DILocation(line: 4487, column: 10, scope: !4863)
!4873 = !DILocation(line: 4488, column: 1, scope: !4863)
!4874 = distinct !DISubprogram(name: "valid_initializer_p", scope: !3, file: !3, line: 1024, type: !4875, scopeLine: 1026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4877)
!4875 = !DISubroutineType(types: !4876)
!4876 = !{!481, !1846, !7, !1846}
!4877 = !{!4878, !4879, !4880, !4881, !4882, !4883, !4884}
!4878 = !DILocalVariable(name: "ref", arg: 1, scope: !4874, file: !3, line: 1024, type: !1846)
!4879 = !DILocalVariable(name: "distance", arg: 2, scope: !4874, file: !3, line: 1025, type: !7)
!4880 = !DILocalVariable(name: "root", arg: 3, scope: !4874, file: !3, line: 1025, type: !1846)
!4881 = !DILocalVariable(name: "diff", scope: !4874, file: !3, line: 1027, type: !4050)
!4882 = !DILocalVariable(name: "base", scope: !4874, file: !3, line: 1027, type: !4050)
!4883 = !DILocalVariable(name: "step", scope: !4874, file: !3, line: 1027, type: !4050)
!4884 = !DILocalVariable(name: "off", scope: !4874, file: !3, line: 1028, type: !538)
!4885 = !DILocation(line: 0, scope: !4874)
!4886 = !DILocation(line: 1027, column: 3, scope: !4874)
!4887 = !DILocation(line: 1028, column: 3, scope: !4874)
!4888 = !DILocation(line: 1031, column: 25, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1031, column: 7)
!4890 = !DILocation(line: 1031, column: 48, scope: !4889)
!4891 = !DILocation(line: 1031, column: 8, scope: !4889)
!4892 = !DILocation(line: 1031, column: 7, scope: !4874)
!4893 = !DILocation(line: 1036, column: 3, scope: !4874)
!4894 = !DILocation(line: 1040, column: 22, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1040, column: 7)
!4896 = !DILocation(line: 1040, column: 7, scope: !4895)
!4897 = !DILocation(line: 1040, column: 7, scope: !4874)
!4898 = !DILocation(line: 1041, column: 30, scope: !4895)
!4899 = !DILocation(line: 1041, column: 47, scope: !4895)
!4900 = !DILocation(line: 1041, column: 13, scope: !4895)
!4901 = !DILocation(line: 1042, column: 6, scope: !4895)
!4902 = !DILocation(line: 1042, column: 26, scope: !4895)
!4903 = !DILocation(line: 1042, column: 41, scope: !4895)
!4904 = !DILocation(line: 1042, column: 9, scope: !4895)
!4905 = !DILocation(line: 1041, column: 5, scope: !4895)
!4906 = !DILocation(line: 1046, column: 3, scope: !4874)
!4907 = !DILocation(line: 1047, column: 3, scope: !4874)
!4908 = !DILocation(line: 1048, column: 33, scope: !4874)
!4909 = !DILocation(line: 1048, column: 3, scope: !4874)
!4910 = !DILocation(line: 1049, column: 3, scope: !4874)
!4911 = !DILocation(line: 1051, column: 35, scope: !4874)
!4912 = !DILocation(line: 1051, column: 51, scope: !4874)
!4913 = !DILocation(line: 1051, column: 3, scope: !4874)
!4914 = !DILocation(line: 1053, column: 8, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1053, column: 7)
!4916 = !DILocation(line: 1053, column: 7, scope: !4874)
!4917 = !DILocation(line: 1056, column: 53, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1056, column: 7)
!4919 = !DILocation(line: 1056, column: 33, scope: !4918)
!4920 = !DILocation(line: 1056, column: 8, scope: !4918)
!4921 = !DILocation(line: 1060, column: 1, scope: !4874)
!4922 = distinct !DISubprogram(name: "gimple_op", scope: !402, file: !402, line: 1631, type: !4923, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4925)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{!489, !2552, !7}
!4925 = !{!4926, !4927}
!4926 = !DILocalVariable(name: "gs", arg: 1, scope: !4922, file: !402, line: 1631, type: !2552)
!4927 = !DILocalVariable(name: "i", arg: 2, scope: !4922, file: !402, line: 1631, type: !7)
!4928 = !DILocation(line: 0, scope: !4922)
!4929 = !DILocation(line: 1633, column: 7, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4922, file: !402, line: 1633, column: 7)
!4931 = !DILocation(line: 1633, column: 7, scope: !4922)
!4932 = !DILocation(line: 1638, column: 14, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4930, file: !402, line: 1634, column: 5)
!4934 = !DILocation(line: 1638, column: 7, scope: !4933)
!4935 = !DILocation(line: 0, scope: !4930)
!4936 = !DILocation(line: 1642, column: 1, scope: !4922)
!4937 = distinct !DISubprogram(name: "gimple_ops", scope: !402, file: !402, line: 1614, type: !2833, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4938)
!4938 = !{!4939, !4940}
!4939 = !DILocalVariable(name: "gs", arg: 1, scope: !4937, file: !402, line: 1614, type: !813)
!4940 = !DILocalVariable(name: "off", scope: !4937, file: !402, line: 1616, type: !958)
!4941 = !DILocation(line: 0, scope: !4937)
!4942 = !DILocation(line: 1621, column: 28, scope: !4937)
!4943 = !DILocation(line: 1621, column: 9, scope: !4937)
!4944 = !DILocation(line: 1622, column: 3, scope: !4937)
!4945 = !DILocation(line: 1624, column: 20, scope: !4937)
!4946 = !DILocation(line: 1624, column: 32, scope: !4937)
!4947 = !DILocation(line: 1624, column: 10, scope: !4937)
!4948 = !DILocation(line: 1624, column: 3, scope: !4937)
!4949 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !402, file: !402, line: 1073, type: !4950, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4952)
!4950 = !DISubroutineType(types: !4951)
!4951 = !{!440, !813}
!4952 = !{!4953}
!4953 = !DILocalVariable(name: "gs", arg: 1, scope: !4949, file: !402, line: 1073, type: !813)
!4954 = !DILocation(line: 0, scope: !4949)
!4955 = !DILocation(line: 1075, column: 24, scope: !4949)
!4956 = !DILocation(line: 1075, column: 10, scope: !4949)
!4957 = !DILocation(line: 1075, column: 3, scope: !4949)
!4958 = distinct !DISubprogram(name: "gss_for_code", scope: !402, file: !402, line: 1061, type: !4959, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4961)
!4959 = !DISubroutineType(types: !4960)
!4960 = !{!440, !401}
!4961 = !{!4962}
!4962 = !DILocalVariable(name: "code", arg: 1, scope: !4958, file: !402, line: 1061, type: !401)
!4963 = !DILocation(line: 0, scope: !4958)
!4964 = !DILocation(line: 1066, column: 10, scope: !4958)
!4965 = !DILocation(line: 1066, column: 3, scope: !4958)
!4966 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !402, file: !402, line: 3100, type: !4967, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4970)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!4969, !813, !7}
!4969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!4970 = !{!4971, !4972}
!4971 = !DILocalVariable(name: "gs", arg: 1, scope: !4966, file: !402, line: 3100, type: !813)
!4972 = !DILocalVariable(name: "index", arg: 2, scope: !4966, file: !402, line: 3100, type: !7)
!4973 = !DILocation(line: 0, scope: !4966)
!4974 = !DILocation(line: 3103, column: 3, scope: !4966)
!4975 = !DILocation(line: 3104, column: 12, scope: !4966)
!4976 = !DILocation(line: 3104, column: 3, scope: !4966)
!4977 = distinct !DISubprogram(name: "double_int_equal_p", scope: !539, file: !539, line: 176, type: !4978, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4980)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{!481, !538, !538}
!4980 = !{!4981, !4982}
!4981 = !DILocalVariable(name: "cst1", arg: 1, scope: !4977, file: !539, line: 176, type: !538)
!4982 = !DILocalVariable(name: "cst2", arg: 2, scope: !4977, file: !539, line: 176, type: !538)
!4983 = !DILocation(line: 178, column: 19, scope: !4977)
!4984 = !DILocation(line: 178, column: 31, scope: !4977)
!4985 = !DILocation(line: 178, column: 44, scope: !4977)
!4986 = !DILocation(line: 178, column: 3, scope: !4977)
!4987 = distinct !DISubprogram(name: "VEC_dref_heap_safe_insert", scope: !3, file: !3, line: 243, type: !4988, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4990)
!4988 = !DISubroutineType(types: !4989)
!4989 = !{!2686, !4291, !7, !1841}
!4990 = !{!4991, !4992, !4993}
!4991 = !DILocalVariable(name: "vec_", arg: 1, scope: !4987, file: !3, line: 243, type: !4291)
!4992 = !DILocalVariable(name: "ix_", arg: 2, scope: !4987, file: !3, line: 243, type: !7)
!4993 = !DILocalVariable(name: "obj_", arg: 3, scope: !4987, file: !3, line: 243, type: !1841)
!4994 = !DILocation(line: 0, scope: !4987)
!4995 = !DILocation(line: 243, column: 1, scope: !4987)
!4996 = distinct !DISubprogram(name: "VEC_dref_base_quick_insert", scope: !3, file: !3, line: 242, type: !4997, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4999)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!2686, !4145, !7, !1841}
!4999 = !{!5000, !5001, !5002, !5003}
!5000 = !DILocalVariable(name: "vec_", arg: 1, scope: !4996, file: !3, line: 242, type: !4145)
!5001 = !DILocalVariable(name: "ix_", arg: 2, scope: !4996, file: !3, line: 242, type: !7)
!5002 = !DILocalVariable(name: "obj_", arg: 3, scope: !4996, file: !3, line: 242, type: !1841)
!5003 = !DILocalVariable(name: "slot_", scope: !4996, file: !3, line: 242, type: !2686)
!5004 = !DILocation(line: 0, scope: !4996)
!5005 = !DILocation(line: 242, column: 1, scope: !4996)
!5006 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !164, file: !164, line: 184, type: !5007, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5010)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{null, !5009}
!5009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!5010 = !{!5011}
!5011 = !DILocalVariable(name: "vec_", arg: 1, scope: !5006, file: !164, line: 184, type: !5009)
!5012 = !DILocation(line: 0, scope: !5006)
!5013 = !DILocation(line: 184, column: 1, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5006, file: !164, line: 184, column: 1)
!5015 = !DILocation(line: 184, column: 1, scope: !5006)
!5016 = distinct !DISubprogram(name: "VEC_chain_p_base_length", scope: !3, file: !3, line: 298, type: !5017, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5019)
!5017 = !DISubroutineType(types: !5018)
!5018 = !{!7, !2727}
!5019 = !{!5020}
!5020 = !DILocalVariable(name: "vec_", arg: 1, scope: !5016, file: !3, line: 298, type: !2727)
!5021 = !DILocation(line: 0, scope: !5016)
!5022 = !DILocation(line: 298, column: 1, scope: !5016)
!5023 = distinct !DISubprogram(name: "VEC_chain_p_base_index", scope: !3, file: !3, line: 298, type: !5024, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5026)
!5024 = !DISubroutineType(types: !5025)
!5025 = !{!1911, !2727, !7}
!5026 = !{!5027, !5028}
!5027 = !DILocalVariable(name: "vec_", arg: 1, scope: !5023, file: !3, line: 298, type: !2727)
!5028 = !DILocalVariable(name: "ix_", arg: 2, scope: !5023, file: !3, line: 298, type: !7)
!5029 = !DILocation(line: 0, scope: !5023)
!5030 = !DILocation(line: 298, column: 1, scope: !5023)
!5031 = distinct !DISubprogram(name: "prepare_initializers_chain", scope: !3, file: !3, line: 2384, type: !5032, scopeLine: 2385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5034)
!5032 = !DISubroutineType(types: !5033)
!5033 = !{!481, !1028, !1911}
!5034 = !{!5035, !5036, !5037, !5038, !5039, !5040, !5041, !5042, !5043}
!5035 = !DILocalVariable(name: "loop", arg: 1, scope: !5031, file: !3, line: 2384, type: !1028)
!5036 = !DILocalVariable(name: "chain", arg: 2, scope: !5031, file: !3, line: 2384, type: !1911)
!5037 = !DILocalVariable(name: "i", scope: !5031, file: !3, line: 2386, type: !7)
!5038 = !DILocalVariable(name: "n", scope: !5031, file: !3, line: 2386, type: !7)
!5039 = !DILocalVariable(name: "dr", scope: !5031, file: !3, line: 2387, type: !1846)
!5040 = !DILocalVariable(name: "init", scope: !5031, file: !3, line: 2388, type: !489)
!5041 = !DILocalVariable(name: "stmts", scope: !5031, file: !3, line: 2389, type: !803)
!5042 = !DILocalVariable(name: "laref", scope: !5031, file: !3, line: 2390, type: !1841)
!5043 = !DILocalVariable(name: "entry", scope: !5031, file: !3, line: 2391, type: !793)
!5044 = !DILocation(line: 0, scope: !5031)
!5045 = !DILocation(line: 2386, column: 27, scope: !5031)
!5046 = !DILocation(line: 2386, column: 32, scope: !5031)
!5047 = !DILocation(line: 2386, column: 19, scope: !5031)
!5048 = !DILocation(line: 2386, column: 62, scope: !5031)
!5049 = !DILocation(line: 2387, column: 31, scope: !5031)
!5050 = !DILocation(line: 2387, column: 55, scope: !5031)
!5051 = !DILocation(line: 2389, column: 3, scope: !5031)
!5052 = !DILocation(line: 2390, column: 3, scope: !5031)
!5053 = !DILocation(line: 2391, column: 16, scope: !5031)
!5054 = !DILocation(line: 2395, column: 18, scope: !5031)
!5055 = !DILocation(line: 2395, column: 10, scope: !5031)
!5056 = !DILocation(line: 2395, column: 16, scope: !5031)
!5057 = !DILocation(line: 2396, column: 8, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 2396, column: 3)
!5059 = !DILocation(line: 0, scope: !5058)
!5060 = !DILocation(line: 2396, column: 17, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 2396, column: 3)
!5062 = !DILocation(line: 2396, column: 3, scope: !5058)
!5063 = !DILocation(line: 0, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 2401, column: 3)
!5065 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 2401, column: 3)
!5066 = !DILocation(line: 0, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 2402, column: 5)
!5068 = !DILocation(line: 2401, column: 3, scope: !5065)
!5069 = !DILocation(line: 2397, column: 5, scope: !5061)
!5070 = !DILocation(line: 2396, column: 23, scope: !5061)
!5071 = !DILocation(line: 2396, column: 3, scope: !5061)
!5072 = distinct !{!5072, !5062, !5073}
!5073 = !DILocation(line: 2397, column: 5, scope: !5058)
!5074 = !DILocation(line: 0, scope: !5065)
!5075 = !DILocation(line: 2401, column: 15, scope: !5064)
!5076 = !DILocation(line: 2416, column: 38, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 2412, column: 5)
!5078 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 2411, column: 3)
!5079 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 2411, column: 3)
!5080 = !DILocation(line: 0, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 2420, column: 11)
!5082 = !DILocation(line: 2411, column: 3, scope: !5079)
!5083 = !DILocation(line: 2403, column: 24, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5067, file: !3, line: 2403, column: 11)
!5085 = !DILocation(line: 2403, column: 31, scope: !5084)
!5086 = !DILocation(line: 2403, column: 11, scope: !5084)
!5087 = !DILocation(line: 2403, column: 37, scope: !5084)
!5088 = !DILocation(line: 2403, column: 11, scope: !5067)
!5089 = !DILocation(line: 2406, column: 7, scope: !5067)
!5090 = !DILocation(line: 2407, column: 7, scope: !5067)
!5091 = !DILocation(line: 2409, column: 5, scope: !5067)
!5092 = !DILocation(line: 2401, column: 59, scope: !5064)
!5093 = !DILocation(line: 2401, column: 3, scope: !5064)
!5094 = distinct !{!5094, !5068, !5095}
!5095 = !DILocation(line: 2409, column: 5, scope: !5065)
!5096 = !DILocation(line: 0, scope: !5079)
!5097 = !DILocation(line: 2411, column: 17, scope: !5078)
!5098 = !DILocation(line: 2413, column: 11, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 2413, column: 11)
!5100 = !DILocation(line: 2413, column: 45, scope: !5099)
!5101 = !DILocation(line: 2413, column: 11, scope: !5077)
!5102 = !DILocation(line: 2416, column: 59, scope: !5077)
!5103 = !DILocation(line: 2416, column: 14, scope: !5077)
!5104 = !DILocation(line: 2417, column: 12, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 2417, column: 11)
!5106 = !DILocation(line: 2417, column: 11, scope: !5077)
!5107 = !DILocation(line: 2420, column: 19, scope: !5081)
!5108 = !DILocation(line: 2420, column: 12, scope: !5081)
!5109 = !DILocation(line: 2420, column: 39, scope: !5081)
!5110 = !DILocation(line: 2420, column: 42, scope: !5081)
!5111 = !DILocation(line: 2420, column: 11, scope: !5077)
!5112 = !DILocation(line: 2423, column: 14, scope: !5077)
!5113 = !DILocation(line: 2424, column: 11, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 2424, column: 11)
!5115 = !DILocation(line: 2424, column: 11, scope: !5077)
!5116 = !DILocation(line: 2425, column: 2, scope: !5114)
!5117 = !DILocation(line: 2427, column: 7, scope: !5077)
!5118 = !DILocation(line: 2428, column: 5, scope: !5077)
!5119 = !DILocation(line: 2411, column: 23, scope: !5078)
!5120 = !DILocation(line: 2411, column: 3, scope: !5078)
!5121 = distinct !{!5121, !5082, !5122}
!5122 = !DILocation(line: 2428, column: 5, scope: !5079)
!5123 = !DILocation(line: 2431, column: 1, scope: !5031)
!5124 = distinct !DISubprogram(name: "VEC_chain_p_base_unordered_remove", scope: !3, file: !3, line: 298, type: !5125, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5127)
!5125 = !DISubroutineType(types: !5126)
!5126 = !{!1911, !4644, !7}
!5127 = !{!5128, !5129, !5130, !5131}
!5128 = !DILocalVariable(name: "vec_", arg: 1, scope: !5124, file: !3, line: 298, type: !4644)
!5129 = !DILocalVariable(name: "ix_", arg: 2, scope: !5124, file: !3, line: 298, type: !7)
!5130 = !DILocalVariable(name: "slot_", scope: !5124, file: !3, line: 298, type: !2729)
!5131 = !DILocalVariable(name: "obj_", scope: !5124, file: !3, line: 298, type: !1911)
!5132 = !DILocation(line: 0, scope: !5124)
!5133 = !DILocation(line: 298, column: 1, scope: !5124)
!5134 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !164, file: !164, line: 184, type: !5135, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5137)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{!1867, !482}
!5137 = !{!5138}
!5138 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5134, file: !164, line: 184, type: !482)
!5139 = !DILocation(line: 0, scope: !5134)
!5140 = !DILocation(line: 184, column: 1, scope: !5134)
!5141 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !164, file: !164, line: 182, type: !5142, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5145)
!5142 = !DISubroutineType(types: !5143)
!5143 = !{!847, !5144, !489}
!5144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!5145 = !{!5146, !5147, !5148}
!5146 = !DILocalVariable(name: "vec_", arg: 1, scope: !5141, file: !164, line: 182, type: !5144)
!5147 = !DILocalVariable(name: "obj_", arg: 2, scope: !5141, file: !164, line: 182, type: !489)
!5148 = !DILocalVariable(name: "slot_", scope: !5141, file: !164, line: 182, type: !847)
!5149 = !DILocation(line: 0, scope: !5141)
!5150 = !DILocation(line: 182, column: 1, scope: !5141)
!5151 = distinct !DISubprogram(name: "VEC_tree_base_replace", scope: !164, file: !164, line: 182, type: !5152, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5154)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{!489, !5144, !7, !489}
!5154 = !{!5155, !5156, !5157, !5158}
!5155 = !DILocalVariable(name: "vec_", arg: 1, scope: !5151, file: !164, line: 182, type: !5144)
!5156 = !DILocalVariable(name: "ix_", arg: 2, scope: !5151, file: !164, line: 182, type: !7)
!5157 = !DILocalVariable(name: "obj_", arg: 3, scope: !5151, file: !164, line: 182, type: !489)
!5158 = !DILocalVariable(name: "old_obj_", scope: !5151, file: !164, line: 182, type: !489)
!5159 = !DILocation(line: 0, scope: !5151)
!5160 = !DILocation(line: 182, column: 1, scope: !5151)
!5161 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !164, file: !164, line: 182, type: !5162, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5164)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{!489, !2666, !7}
!5164 = !{!5165, !5166}
!5165 = !DILocalVariable(name: "vec_", arg: 1, scope: !5161, file: !164, line: 182, type: !2666)
!5166 = !DILocalVariable(name: "ix_", arg: 2, scope: !5161, file: !164, line: 182, type: !7)
!5167 = !DILocation(line: 0, scope: !5161)
!5168 = !DILocation(line: 182, column: 1, scope: !5161)
!5169 = distinct !DISubprogram(name: "ref_at_iteration", scope: !3, file: !3, line: 1340, type: !5170, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5172)
!5170 = !DISubroutineType(types: !5171)
!5171 = !{!489, !1028, !489, !482}
!5172 = !{!5173, !5174, !5175, !5176, !5177, !5178, !5179, !5180, !5181, !5182, !5183}
!5173 = !DILocalVariable(name: "loop", arg: 1, scope: !5169, file: !3, line: 1340, type: !1028)
!5174 = !DILocalVariable(name: "ref", arg: 2, scope: !5169, file: !3, line: 1340, type: !489)
!5175 = !DILocalVariable(name: "iter", arg: 3, scope: !5169, file: !3, line: 1340, type: !482)
!5176 = !DILocalVariable(name: "idx", scope: !5169, file: !3, line: 1342, type: !489)
!5177 = !DILocalVariable(name: "idx_p", scope: !5169, file: !3, line: 1342, type: !847)
!5178 = !DILocalVariable(name: "type", scope: !5169, file: !3, line: 1342, type: !489)
!5179 = !DILocalVariable(name: "val", scope: !5169, file: !3, line: 1342, type: !489)
!5180 = !DILocalVariable(name: "op0", scope: !5169, file: !3, line: 1342, type: !489)
!5181 = !DILocalVariable(name: "ret", scope: !5169, file: !3, line: 1342, type: !489)
!5182 = !DILocalVariable(name: "iv", scope: !5169, file: !3, line: 1343, type: !2985)
!5183 = !DILocalVariable(name: "ok", scope: !5169, file: !3, line: 1344, type: !481)
!5184 = !DILocation(line: 0, scope: !5169)
!5185 = !DILocation(line: 1343, column: 3, scope: !5169)
!5186 = !DILocation(line: 1346, column: 7, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 1346, column: 7)
!5188 = !DILocation(line: 1346, column: 7, scope: !5169)
!5189 = !DILocation(line: 1348, column: 37, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 1347, column: 5)
!5191 = !DILocation(line: 1348, column: 13, scope: !5190)
!5192 = !DILocation(line: 1349, column: 12, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 1349, column: 11)
!5194 = !DILocation(line: 1349, column: 11, scope: !5190)
!5195 = !DILocation(line: 0, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 1355, column: 7)
!5197 = !DILocation(line: 1355, column: 7, scope: !5196)
!5198 = !DILocation(line: 1352, column: 13, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 1352, column: 12)
!5200 = !DILocation(line: 1352, column: 12, scope: !5187)
!5201 = !DILocation(line: 1353, column: 12, scope: !5199)
!5202 = !DILocation(line: 1353, column: 5, scope: !5199)
!5203 = !DILocation(line: 1355, column: 7, scope: !5169)
!5204 = !DILocation(line: 1359, column: 13, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 1356, column: 5)
!5206 = !DILocation(line: 1360, column: 13, scope: !5205)
!5207 = !DILocation(line: 1361, column: 16, scope: !5205)
!5208 = !DILocation(line: 1362, column: 5, scope: !5205)
!5209 = !DILocation(line: 1363, column: 28, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 1363, column: 12)
!5211 = !DILocation(line: 1363, column: 12, scope: !5196)
!5212 = !DILocation(line: 1366, column: 11, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 1366, column: 11)
!5214 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 1364, column: 5)
!5215 = !DILocation(line: 1367, column: 4, scope: !5213)
!5216 = !DILocation(line: 1367, column: 8, scope: !5213)
!5217 = !DILocation(line: 1366, column: 11, scope: !5214)
!5218 = !DILocation(line: 1370, column: 14, scope: !5214)
!5219 = !DILocation(line: 1370, column: 7, scope: !5214)
!5220 = !DILocation(line: 1374, column: 28, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 1374, column: 12)
!5222 = !DILocation(line: 1374, column: 12, scope: !5210)
!5223 = !DILocation(line: 1377, column: 11, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 1377, column: 11)
!5225 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 1375, column: 5)
!5226 = !DILocation(line: 1378, column: 4, scope: !5224)
!5227 = !DILocation(line: 1378, column: 8, scope: !5224)
!5228 = !DILocation(line: 1377, column: 11, scope: !5225)
!5229 = !DILocation(line: 1380, column: 11, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 1380, column: 11)
!5231 = !DILocation(line: 1381, column: 4, scope: !5230)
!5232 = !DILocation(line: 1381, column: 8, scope: !5230)
!5233 = !DILocation(line: 1380, column: 11, scope: !5225)
!5234 = !DILocation(line: 1384, column: 13, scope: !5225)
!5235 = !DILocation(line: 1387, column: 13, scope: !5225)
!5236 = !DILocation(line: 1388, column: 16, scope: !5225)
!5237 = !DILocation(line: 1393, column: 8, scope: !5169)
!5238 = !DILocation(line: 1394, column: 8, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 1394, column: 7)
!5240 = !DILocation(line: 1394, column: 7, scope: !5169)
!5241 = !DILocation(line: 1396, column: 42, scope: !5169)
!5242 = !DILocation(line: 1396, column: 13, scope: !5169)
!5243 = !DILocation(line: 1396, column: 11, scope: !5169)
!5244 = !DILocation(line: 1397, column: 25, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 1397, column: 7)
!5246 = !DILocation(line: 1397, column: 7, scope: !5245)
!5247 = !DILocation(line: 0, scope: !5245)
!5248 = !DILocation(line: 1397, column: 7, scope: !5169)
!5249 = !DILocation(line: 1398, column: 14, scope: !5245)
!5250 = !DILocation(line: 1398, column: 12, scope: !5245)
!5251 = !DILocation(line: 1398, column: 5, scope: !5245)
!5252 = !DILocation(line: 1401, column: 14, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 1400, column: 5)
!5254 = !DILocation(line: 1402, column: 11, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 1402, column: 11)
!5256 = !DILocation(line: 1402, column: 11, scope: !5253)
!5257 = !DILocation(line: 1404, column: 10, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 1403, column: 2)
!5259 = !DILocation(line: 1406, column: 10, scope: !5258)
!5260 = !DILocation(line: 1407, column: 2, scope: !5258)
!5261 = !DILocation(line: 1410, column: 10, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 1409, column: 2)
!5263 = !DILocation(line: 1412, column: 10, scope: !5262)
!5264 = !DILocation(line: 0, scope: !5255)
!5265 = !DILocation(line: 1414, column: 16, scope: !5253)
!5266 = !DILocation(line: 1414, column: 14, scope: !5253)
!5267 = !DILocation(line: 1418, column: 1, scope: !5169)
!5268 = distinct !DISubprogram(name: "handled_component_p", scope: !164, file: !164, line: 4551, type: !5269, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5274)
!5269 = !DISubroutineType(types: !5270)
!5270 = !{!481, !5271}
!5271 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !490, line: 59, baseType: !5272)
!5272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5273, size: 64)
!5273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!5274 = !{!5275}
!5275 = !DILocalVariable(name: "t", arg: 1, scope: !5268, file: !164, line: 4551, type: !5271)
!5276 = !DILocation(line: 0, scope: !5268)
!5277 = !DILocation(line: 4553, column: 11, scope: !5268)
!5278 = !DILocation(line: 4553, column: 3, scope: !5268)
!5279 = !DILocation(line: 4565, column: 7, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5268, file: !164, line: 4554, column: 5)
!5281 = !DILocation(line: 0, scope: !5280)
!5282 = !DILocation(line: 4567, column: 1, scope: !5268)
!5283 = distinct !DISubprogram(name: "chain_can_be_combined_p", scope: !3, file: !3, line: 1967, type: !4454, scopeLine: 1968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5284)
!5284 = !{!5285}
!5285 = !DILocalVariable(name: "chain", arg: 1, scope: !5283, file: !3, line: 1967, type: !1911)
!5286 = !DILocation(line: 0, scope: !5283)
!5287 = !DILocation(line: 1969, column: 19, scope: !5283)
!5288 = !DILocation(line: 1969, column: 12, scope: !5283)
!5289 = !DILocation(line: 1970, column: 4, scope: !5283)
!5290 = !DILocation(line: 1970, column: 15, scope: !5283)
!5291 = !DILocation(line: 1970, column: 20, scope: !5283)
!5292 = !DILocation(line: 1970, column: 31, scope: !5283)
!5293 = !DILocation(line: 1970, column: 46, scope: !5283)
!5294 = !DILocation(line: 1969, column: 3, scope: !5283)
!5295 = distinct !DISubprogram(name: "VEC_chain_p_base_pop", scope: !3, file: !3, line: 298, type: !5296, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5298)
!5296 = !DISubroutineType(types: !5297)
!5297 = !{!1911, !4644}
!5298 = !{!5299, !5300}
!5299 = !DILocalVariable(name: "vec_", arg: 1, scope: !5295, file: !3, line: 298, type: !4644)
!5300 = !DILocalVariable(name: "obj_", scope: !5295, file: !3, line: 298, type: !1911)
!5301 = !DILocation(line: 0, scope: !5295)
!5302 = !DILocation(line: 298, column: 1, scope: !5295)
!5303 = distinct !DISubprogram(name: "combine_chains", scope: !3, file: !3, line: 2275, type: !5304, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5306)
!5304 = !DISubroutineType(types: !5305)
!5305 = !{!1911, !1911, !1911}
!5306 = !{!5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314, !5315, !5316, !5317, !5318}
!5307 = !DILocalVariable(name: "ch1", arg: 1, scope: !5303, file: !3, line: 2275, type: !1911)
!5308 = !DILocalVariable(name: "ch2", arg: 2, scope: !5303, file: !3, line: 2275, type: !1911)
!5309 = !DILocalVariable(name: "r1", scope: !5303, file: !3, line: 2277, type: !1841)
!5310 = !DILocalVariable(name: "r2", scope: !5303, file: !3, line: 2277, type: !1841)
!5311 = !DILocalVariable(name: "nw", scope: !5303, file: !3, line: 2277, type: !1841)
!5312 = !DILocalVariable(name: "op", scope: !5303, file: !3, line: 2278, type: !196)
!5313 = !DILocalVariable(name: "swap", scope: !5303, file: !3, line: 2279, type: !481)
!5314 = !DILocalVariable(name: "new_chain", scope: !5303, file: !3, line: 2280, type: !1911)
!5315 = !DILocalVariable(name: "i", scope: !5303, file: !3, line: 2281, type: !7)
!5316 = !DILocalVariable(name: "root_stmt", scope: !5303, file: !3, line: 2282, type: !813)
!5317 = !DILocalVariable(name: "rslt_type", scope: !5303, file: !3, line: 2283, type: !489)
!5318 = !DILocalVariable(name: "tmp", scope: !5319, file: !3, line: 2305, type: !1911)
!5319 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 2304, column: 5)
!5320 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 2303, column: 7)
!5321 = !DILocation(line: 0, scope: !5303)
!5322 = !DILocation(line: 2277, column: 3, scope: !5303)
!5323 = !DILocation(line: 2278, column: 3, scope: !5303)
!5324 = !DILocation(line: 2278, column: 18, scope: !5303)
!5325 = !DILocation(line: 2279, column: 3, scope: !5303)
!5326 = !DILocation(line: 2279, column: 8, scope: !5303)
!5327 = !DILocation(line: 2283, column: 3, scope: !5303)
!5328 = !DILocation(line: 2283, column: 8, scope: !5303)
!5329 = !DILocation(line: 2285, column: 11, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 2285, column: 7)
!5331 = !DILocation(line: 2285, column: 7, scope: !5303)
!5332 = !DILocation(line: 2287, column: 12, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 2287, column: 7)
!5334 = !DILocation(line: 2287, column: 27, scope: !5333)
!5335 = !DILocation(line: 2287, column: 19, scope: !5333)
!5336 = !DILocation(line: 2287, column: 7, scope: !5303)
!5337 = !DILocation(line: 2290, column: 7, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 2290, column: 7)
!5339 = !DILocation(line: 2290, column: 39, scope: !5338)
!5340 = !DILocation(line: 2290, column: 36, scope: !5338)
!5341 = !DILocation(line: 2290, column: 7, scope: !5303)
!5342 = !DILocation(line: 2293, column: 3, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 2293, column: 3)
!5344 = !DILocation(line: 0, scope: !5343)
!5345 = !DILocation(line: 2293, column: 16, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 2293, column: 3)
!5347 = !DILocation(line: 2294, column: 9, scope: !5346)
!5348 = !DILocation(line: 2294, column: 12, scope: !5346)
!5349 = !DILocation(line: 2296, column: 11, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 2296, column: 11)
!5351 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 2295, column: 5)
!5352 = !DILocation(line: 2296, column: 15, scope: !5350)
!5353 = !DILocation(line: 2296, column: 27, scope: !5350)
!5354 = !DILocation(line: 2296, column: 31, scope: !5350)
!5355 = !DILocation(line: 2296, column: 24, scope: !5350)
!5356 = !DILocation(line: 2296, column: 11, scope: !5351)
!5357 = !DILocation(line: 2299, column: 12, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 2299, column: 11)
!5359 = !DILocation(line: 2299, column: 11, scope: !5351)
!5360 = !DILocation(line: 2294, column: 52, scope: !5346)
!5361 = !DILocation(line: 2293, column: 3, scope: !5346)
!5362 = distinct !{!5362, !5342, !5363}
!5363 = !DILocation(line: 2301, column: 5, scope: !5343)
!5364 = !DILocation(line: 2303, column: 7, scope: !5320)
!5365 = !DILocation(line: 2303, column: 7, scope: !5303)
!5366 = !DILocation(line: 2310, column: 15, scope: !5303)
!5367 = !DILocation(line: 2311, column: 14, scope: !5303)
!5368 = !DILocation(line: 2311, column: 19, scope: !5303)
!5369 = !DILocation(line: 2312, column: 19, scope: !5303)
!5370 = !DILocation(line: 2312, column: 14, scope: !5303)
!5371 = !DILocation(line: 2312, column: 17, scope: !5303)
!5372 = !DILocation(line: 2313, column: 14, scope: !5303)
!5373 = !DILocation(line: 2313, column: 18, scope: !5303)
!5374 = !DILocation(line: 2314, column: 14, scope: !5303)
!5375 = !DILocation(line: 2314, column: 18, scope: !5303)
!5376 = !DILocation(line: 2315, column: 26, scope: !5303)
!5377 = !DILocation(line: 2315, column: 14, scope: !5303)
!5378 = !DILocation(line: 2315, column: 24, scope: !5303)
!5379 = !DILocation(line: 2316, column: 28, scope: !5303)
!5380 = !DILocation(line: 2316, column: 14, scope: !5303)
!5381 = !DILocation(line: 2316, column: 21, scope: !5303)
!5382 = !DILocation(line: 0, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 2318, column: 3)
!5384 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 2318, column: 3)
!5385 = !DILocation(line: 0, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 2320, column: 5)
!5387 = !DILocation(line: 2318, column: 8, scope: !5384)
!5388 = !DILocation(line: 0, scope: !5384)
!5389 = !DILocation(line: 2318, column: 16, scope: !5383)
!5390 = !DILocation(line: 2319, column: 9, scope: !5383)
!5391 = !DILocation(line: 2319, column: 12, scope: !5383)
!5392 = !DILocation(line: 2318, column: 3, scope: !5384)
!5393 = !DILocation(line: 2321, column: 12, scope: !5386)
!5394 = !DILocation(line: 2321, column: 10, scope: !5386)
!5395 = !DILocation(line: 2322, column: 39, scope: !5386)
!5396 = !DILocation(line: 2322, column: 43, scope: !5386)
!5397 = !DILocation(line: 2322, column: 18, scope: !5386)
!5398 = !DILocation(line: 2322, column: 7, scope: !5386)
!5399 = !DILocation(line: 2322, column: 11, scope: !5386)
!5400 = !DILocation(line: 2322, column: 16, scope: !5386)
!5401 = !DILocation(line: 2323, column: 22, scope: !5386)
!5402 = !DILocation(line: 2323, column: 26, scope: !5386)
!5403 = !DILocation(line: 2323, column: 11, scope: !5386)
!5404 = !DILocation(line: 2323, column: 20, scope: !5386)
!5405 = !DILocation(line: 2325, column: 7, scope: !5386)
!5406 = !DILocation(line: 2319, column: 52, scope: !5383)
!5407 = !DILocation(line: 2318, column: 3, scope: !5383)
!5408 = distinct !{!5408, !5392, !5409}
!5409 = !DILocation(line: 2326, column: 5, scope: !5384)
!5410 = !DILocation(line: 2328, column: 14, scope: !5303)
!5411 = !DILocation(line: 2328, column: 32, scope: !5303)
!5412 = !DILocation(line: 2329, column: 15, scope: !5303)
!5413 = !DILocation(line: 2329, column: 43, scope: !5303)
!5414 = !DILocation(line: 2330, column: 8, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 2330, column: 3)
!5416 = !DILocation(line: 0, scope: !5415)
!5417 = !DILocation(line: 2330, column: 15, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 2330, column: 3)
!5419 = !DILocation(line: 2330, column: 3, scope: !5415)
!5420 = !DILocation(line: 2332, column: 11, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 2332, column: 11)
!5422 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 2331, column: 5)
!5423 = !DILocation(line: 2332, column: 15, scope: !5421)
!5424 = !DILocation(line: 2332, column: 38, scope: !5421)
!5425 = !DILocation(line: 2332, column: 24, scope: !5421)
!5426 = !DILocation(line: 2333, column: 4, scope: !5421)
!5427 = !DILocation(line: 2333, column: 35, scope: !5421)
!5428 = !DILocation(line: 2333, column: 8, scope: !5421)
!5429 = !DILocation(line: 2332, column: 11, scope: !5422)
!5430 = !DILocation(line: 2335, column: 33, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 2334, column: 2)
!5432 = !DILocation(line: 2336, column: 4, scope: !5431)
!5433 = !DILocation(line: 2330, column: 60, scope: !5418)
!5434 = !DILocation(line: 2330, column: 3, scope: !5418)
!5435 = distinct !{!5435, !5419, !5436}
!5436 = !DILocation(line: 2338, column: 5, scope: !5415)
!5437 = !DILocation(line: 2340, column: 8, scope: !5303)
!5438 = !DILocation(line: 2340, column: 17, scope: !5303)
!5439 = !DILocation(line: 2341, column: 8, scope: !5303)
!5440 = !DILocation(line: 2341, column: 17, scope: !5303)
!5441 = !DILocation(line: 2342, column: 3, scope: !5303)
!5442 = !DILocation(line: 2343, column: 1, scope: !5303)
!5443 = distinct !DISubprogram(name: "combinable_refs_p", scope: !3, file: !3, line: 2098, type: !5444, scopeLine: 2100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5447)
!5444 = !DISubroutineType(types: !5445)
!5445 = !{!481, !1841, !1841, !5446, !480, !847}
!5446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!5447 = !{!5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458}
!5448 = !DILocalVariable(name: "r1", arg: 1, scope: !5443, file: !3, line: 2098, type: !1841)
!5449 = !DILocalVariable(name: "r2", arg: 2, scope: !5443, file: !3, line: 2098, type: !1841)
!5450 = !DILocalVariable(name: "code", arg: 3, scope: !5443, file: !3, line: 2099, type: !5446)
!5451 = !DILocalVariable(name: "swap", arg: 4, scope: !5443, file: !3, line: 2099, type: !480)
!5452 = !DILocalVariable(name: "rslt_type", arg: 5, scope: !5443, file: !3, line: 2099, type: !847)
!5453 = !DILocalVariable(name: "acode", scope: !5443, file: !3, line: 2101, type: !196)
!5454 = !DILocalVariable(name: "aswap", scope: !5443, file: !3, line: 2102, type: !481)
!5455 = !DILocalVariable(name: "atype", scope: !5443, file: !3, line: 2103, type: !489)
!5456 = !DILocalVariable(name: "name1", scope: !5443, file: !3, line: 2104, type: !489)
!5457 = !DILocalVariable(name: "name2", scope: !5443, file: !3, line: 2104, type: !489)
!5458 = !DILocalVariable(name: "stmt", scope: !5443, file: !3, line: 2105, type: !813)
!5459 = !DILocation(line: 0, scope: !5443)
!5460 = !DILocation(line: 2104, column: 3, scope: !5443)
!5461 = !DILocation(line: 2107, column: 11, scope: !5443)
!5462 = !DILocation(line: 2107, column: 9, scope: !5443)
!5463 = !DILocation(line: 2108, column: 11, scope: !5443)
!5464 = !DILocation(line: 2108, column: 9, scope: !5443)
!5465 = !DILocation(line: 2109, column: 3, scope: !5443)
!5466 = !DILocation(line: 2111, column: 10, scope: !5443)
!5467 = !DILocation(line: 2113, column: 8, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 2113, column: 7)
!5469 = !DILocation(line: 2113, column: 7, scope: !5443)
!5470 = !DILocation(line: 2116, column: 11, scope: !5443)
!5471 = !DILocation(line: 2117, column: 13, scope: !5443)
!5472 = !DILocation(line: 2118, column: 5, scope: !5443)
!5473 = !DILocation(line: 2118, column: 8, scope: !5443)
!5474 = !DILocation(line: 2118, column: 37, scope: !5443)
!5475 = !DILocation(line: 2118, column: 34, scope: !5443)
!5476 = !DILocation(line: 2119, column: 11, scope: !5443)
!5477 = !DILocation(line: 2121, column: 7, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 2121, column: 7)
!5479 = !DILocation(line: 2121, column: 13, scope: !5478)
!5480 = !DILocation(line: 2121, column: 7, scope: !5443)
!5481 = !DILocation(line: 2123, column: 13, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 2122, column: 5)
!5483 = !DILocation(line: 2124, column: 13, scope: !5482)
!5484 = !DILocation(line: 2125, column: 18, scope: !5482)
!5485 = !DILocation(line: 2126, column: 7, scope: !5482)
!5486 = !DILocation(line: 2129, column: 17, scope: !5443)
!5487 = !DILocation(line: 2130, column: 4, scope: !5443)
!5488 = !DILocation(line: 2130, column: 7, scope: !5443)
!5489 = !DILocation(line: 2130, column: 13, scope: !5443)
!5490 = !DILocation(line: 2131, column: 4, scope: !5443)
!5491 = !DILocation(line: 2131, column: 7, scope: !5443)
!5492 = !DILocation(line: 2131, column: 18, scope: !5443)
!5493 = !DILocation(line: 2129, column: 3, scope: !5443)
!5494 = !DILocation(line: 2132, column: 1, scope: !5443)
!5495 = distinct !DISubprogram(name: "stmt_combining_refs", scope: !3, file: !3, line: 2257, type: !5496, scopeLine: 2258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5498)
!5496 = !DISubroutineType(types: !5497)
!5497 = !{!813, !1841, !1841}
!5498 = !{!5499, !5500, !5501, !5502, !5503, !5504}
!5499 = !DILocalVariable(name: "r1", arg: 1, scope: !5495, file: !3, line: 2257, type: !1841)
!5500 = !DILocalVariable(name: "r2", arg: 2, scope: !5495, file: !3, line: 2257, type: !1841)
!5501 = !DILocalVariable(name: "stmt1", scope: !5495, file: !3, line: 2259, type: !813)
!5502 = !DILocalVariable(name: "stmt2", scope: !5495, file: !3, line: 2259, type: !813)
!5503 = !DILocalVariable(name: "name1", scope: !5495, file: !3, line: 2260, type: !489)
!5504 = !DILocalVariable(name: "name2", scope: !5495, file: !3, line: 2261, type: !489)
!5505 = !DILocation(line: 0, scope: !5495)
!5506 = !DILocation(line: 2260, column: 3, scope: !5495)
!5507 = !DILocation(line: 2260, column: 16, scope: !5495)
!5508 = !DILocation(line: 2260, column: 8, scope: !5495)
!5509 = !DILocation(line: 2261, column: 3, scope: !5495)
!5510 = !DILocation(line: 2261, column: 16, scope: !5495)
!5511 = !DILocation(line: 2261, column: 8, scope: !5495)
!5512 = !DILocation(line: 2263, column: 11, scope: !5495)
!5513 = !DILocation(line: 2264, column: 11, scope: !5495)
!5514 = !DILocation(line: 2265, column: 13, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5495, file: !3, line: 2265, column: 7)
!5516 = !DILocation(line: 2265, column: 7, scope: !5495)
!5517 = !DILocation(line: 2268, column: 40, scope: !5495)
!5518 = !DILocation(line: 2268, column: 47, scope: !5495)
!5519 = !DILocation(line: 2268, column: 10, scope: !5495)
!5520 = !DILocation(line: 2268, column: 3, scope: !5495)
!5521 = !DILocation(line: 2269, column: 1, scope: !5495)
!5522 = distinct !DISubprogram(name: "name_for_ref", scope: !3, file: !3, line: 1003, type: !5523, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5525)
!5523 = !DISubroutineType(types: !5524)
!5524 = !{!489, !1841}
!5525 = !{!5526, !5527}
!5526 = !DILocalVariable(name: "ref", arg: 1, scope: !5522, file: !3, line: 1003, type: !1841)
!5527 = !DILocalVariable(name: "name", scope: !5522, file: !3, line: 1005, type: !489)
!5528 = !DILocation(line: 0, scope: !5522)
!5529 = !DILocation(line: 1007, column: 30, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 1007, column: 7)
!5531 = !DILocation(line: 1007, column: 7, scope: !5530)
!5532 = !DILocation(line: 1007, column: 7, scope: !5522)
!5533 = !DILocation(line: 1009, column: 17, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 1009, column: 11)
!5535 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 1008, column: 5)
!5536 = !DILocation(line: 1009, column: 12, scope: !5534)
!5537 = !DILocation(line: 1009, column: 21, scope: !5534)
!5538 = !DILocation(line: 1009, column: 24, scope: !5534)
!5539 = !DILocation(line: 1009, column: 11, scope: !5535)
!5540 = !DILocation(line: 1010, column: 33, scope: !5534)
!5541 = !DILocation(line: 1010, column: 9, scope: !5534)
!5542 = !DILocation(line: 1010, column: 2, scope: !5534)
!5543 = !DILocation(line: 1012, column: 34, scope: !5534)
!5544 = !DILocation(line: 1012, column: 9, scope: !5534)
!5545 = !DILocation(line: 1015, column: 12, scope: !5530)
!5546 = !DILocation(line: 0, scope: !5530)
!5547 = !DILocation(line: 1017, column: 11, scope: !5522)
!5548 = !DILocation(line: 1017, column: 28, scope: !5522)
!5549 = !DILocation(line: 1017, column: 3, scope: !5522)
!5550 = distinct !DISubprogram(name: "find_common_use_stmt", scope: !3, file: !3, line: 2068, type: !5551, scopeLine: 2069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5553)
!5551 = !DISubroutineType(types: !5552)
!5552 = !{!813, !847, !847}
!5553 = !{!5554, !5555, !5556, !5557}
!5554 = !DILocalVariable(name: "name1", arg: 1, scope: !5550, file: !3, line: 2068, type: !847)
!5555 = !DILocalVariable(name: "name2", arg: 2, scope: !5550, file: !3, line: 2068, type: !847)
!5556 = !DILocalVariable(name: "stmt1", scope: !5550, file: !3, line: 2070, type: !813)
!5557 = !DILocalVariable(name: "stmt2", scope: !5550, file: !3, line: 2070, type: !813)
!5558 = !DILocation(line: 0, scope: !5550)
!5559 = !DILocation(line: 2072, column: 11, scope: !5550)
!5560 = !DILocation(line: 2073, column: 8, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 2073, column: 7)
!5562 = !DILocation(line: 2073, column: 7, scope: !5550)
!5563 = !DILocation(line: 2076, column: 11, scope: !5550)
!5564 = !DILocation(line: 2077, column: 8, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 2077, column: 7)
!5566 = !DILocation(line: 2077, column: 7, scope: !5550)
!5567 = !DILocation(line: 2080, column: 13, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 2080, column: 7)
!5569 = !DILocation(line: 2080, column: 7, scope: !5550)
!5570 = !DILocation(line: 2083, column: 11, scope: !5550)
!5571 = !DILocation(line: 2084, column: 8, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 2084, column: 7)
!5573 = !DILocation(line: 2084, column: 7, scope: !5550)
!5574 = !DILocation(line: 2086, column: 11, scope: !5550)
!5575 = !DILocation(line: 2087, column: 8, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 2087, column: 7)
!5577 = !DILocation(line: 2087, column: 7, scope: !5550)
!5578 = !DILocation(line: 2090, column: 17, scope: !5550)
!5579 = !DILocation(line: 2090, column: 11, scope: !5550)
!5580 = !DILocation(line: 2090, column: 3, scope: !5550)
!5581 = !DILocation(line: 2091, column: 1, scope: !5550)
!5582 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !402, file: !402, line: 1815, type: !5583, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5585)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{!196, !2552}
!5585 = !{!5586, !5587}
!5586 = !DILocalVariable(name: "gs", arg: 1, scope: !5582, file: !402, line: 1815, type: !2552)
!5587 = !DILocalVariable(name: "code", scope: !5582, file: !402, line: 1817, type: !196)
!5588 = !DILocation(line: 0, scope: !5582)
!5589 = !DILocation(line: 1820, column: 10, scope: !5582)
!5590 = !DILocation(line: 1821, column: 7, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5582, file: !402, line: 1821, column: 7)
!5592 = !DILocation(line: 1821, column: 35, scope: !5591)
!5593 = !DILocation(line: 1821, column: 7, scope: !5582)
!5594 = !DILocation(line: 1822, column: 12, scope: !5591)
!5595 = !DILocation(line: 1822, column: 5, scope: !5591)
!5596 = !DILocation(line: 1824, column: 3, scope: !5582)
!5597 = distinct !DISubprogram(name: "find_use_stmt", scope: !3, file: !3, line: 1978, type: !5598, scopeLine: 1979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5600)
!5598 = !DISubroutineType(types: !5599)
!5599 = !{!813, !847}
!5600 = !{!5601, !5602, !5603, !5604}
!5601 = !DILocalVariable(name: "name", arg: 1, scope: !5597, file: !3, line: 1978, type: !847)
!5602 = !DILocalVariable(name: "stmt", scope: !5597, file: !3, line: 1980, type: !813)
!5603 = !DILocalVariable(name: "rhs", scope: !5597, file: !3, line: 1981, type: !489)
!5604 = !DILocalVariable(name: "lhs", scope: !5597, file: !3, line: 1981, type: !489)
!5605 = !DILocation(line: 0, scope: !5597)
!5606 = !DILocation(line: 1986, column: 40, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 1985, column: 5)
!5608 = !DILocation(line: 1984, column: 3, scope: !5597)
!5609 = !DILocation(line: 1986, column: 14, scope: !5607)
!5610 = !DILocation(line: 1987, column: 12, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1987, column: 11)
!5612 = !DILocation(line: 1987, column: 11, scope: !5607)
!5613 = !DILocation(line: 1990, column: 11, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1990, column: 11)
!5615 = !DILocation(line: 1990, column: 30, scope: !5614)
!5616 = !DILocation(line: 1990, column: 11, scope: !5607)
!5617 = !DILocation(line: 1993, column: 13, scope: !5607)
!5618 = !DILocation(line: 1994, column: 11, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1994, column: 11)
!5620 = !DILocation(line: 1994, column: 27, scope: !5619)
!5621 = !DILocation(line: 1994, column: 11, scope: !5607)
!5622 = !DILocation(line: 1997, column: 11, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1997, column: 11)
!5624 = !DILocation(line: 1997, column: 11, scope: !5607)
!5625 = !DILocation(line: 1999, column: 10, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 1998, column: 2)
!5627 = !DILocation(line: 2000, column: 15, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 2000, column: 8)
!5629 = !DILocation(line: 2000, column: 12, scope: !5628)
!5630 = !DILocation(line: 2000, column: 8, scope: !5626)
!5631 = !DILocation(line: 2003, column: 10, scope: !5626)
!5632 = distinct !{!5632, !5608, !5633}
!5633 = !DILocation(line: 2010, column: 5, scope: !5597)
!5634 = !DILocation(line: 2005, column: 38, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 2005, column: 16)
!5636 = !DILocation(line: 2005, column: 16, scope: !5635)
!5637 = !DILocation(line: 2006, column: 9, scope: !5635)
!5638 = !DILocation(line: 0, scope: !5635)
!5639 = !DILocation(line: 2011, column: 1, scope: !5597)
!5640 = !DILocation(line: 0, scope: !5607)
!5641 = distinct !DISubprogram(name: "find_associative_operation_root", scope: !3, file: !3, line: 2031, type: !5642, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5644)
!5642 = !DISubroutineType(types: !5643)
!5643 = !{!813, !813, !2025}
!5644 = !{!5645, !5646, !5647, !5648, !5649, !5650, !5651}
!5645 = !DILocalVariable(name: "stmt", arg: 1, scope: !5641, file: !3, line: 2031, type: !813)
!5646 = !DILocalVariable(name: "distance", arg: 2, scope: !5641, file: !3, line: 2031, type: !2025)
!5647 = !DILocalVariable(name: "lhs", scope: !5641, file: !3, line: 2033, type: !489)
!5648 = !DILocalVariable(name: "next", scope: !5641, file: !3, line: 2034, type: !813)
!5649 = !DILocalVariable(name: "code", scope: !5641, file: !3, line: 2035, type: !196)
!5650 = !DILocalVariable(name: "type", scope: !5641, file: !3, line: 2036, type: !489)
!5651 = !DILocalVariable(name: "dist", scope: !5641, file: !3, line: 2037, type: !7)
!5652 = !DILocation(line: 0, scope: !5641)
!5653 = !DILocation(line: 2033, column: 3, scope: !5641)
!5654 = !DILocation(line: 2035, column: 25, scope: !5641)
!5655 = !DILocation(line: 2036, column: 15, scope: !5641)
!5656 = !DILocation(line: 2039, column: 8, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 2039, column: 7)
!5658 = !DILocation(line: 2039, column: 7, scope: !5641)
!5659 = !DILocation(line: 2042, column: 3, scope: !5641)
!5660 = !DILocation(line: 2044, column: 13, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 2043, column: 5)
!5662 = !DILocation(line: 2044, column: 11, scope: !5661)
!5663 = !DILocation(line: 2045, column: 7, scope: !5661)
!5664 = !DILocation(line: 2047, column: 14, scope: !5661)
!5665 = !DILocation(line: 2048, column: 12, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 2048, column: 11)
!5667 = !DILocation(line: 2049, column: 4, scope: !5666)
!5668 = !DILocation(line: 2049, column: 7, scope: !5666)
!5669 = !DILocation(line: 2049, column: 37, scope: !5666)
!5670 = !DILocation(line: 2048, column: 11, scope: !5661)
!5671 = !DILocation(line: 2053, column: 11, scope: !5661)
!5672 = distinct !{!5672, !5659, !5673}
!5673 = !DILocation(line: 2054, column: 5, scope: !5641)
!5674 = !DILocation(line: 2056, column: 7, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 2056, column: 7)
!5676 = !DILocation(line: 2056, column: 7, scope: !5641)
!5677 = !DILocation(line: 2057, column: 15, scope: !5675)
!5678 = !DILocation(line: 2057, column: 5, scope: !5675)
!5679 = !DILocation(line: 2059, column: 1, scope: !5641)
!5680 = distinct !DISubprogram(name: "single_nonlooparound_use", scope: !3, file: !3, line: 1662, type: !5681, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5683)
!5681 = !DISubroutineType(types: !5682)
!5682 = !{!813, !489}
!5683 = !{!5684, !5685, !5686, !5694, !5695}
!5684 = !DILocalVariable(name: "name", arg: 1, scope: !5680, file: !3, line: 1662, type: !489)
!5685 = !DILocalVariable(name: "use", scope: !5680, file: !3, line: 1664, type: !2049)
!5686 = !DILocalVariable(name: "it", scope: !5680, file: !3, line: 1665, type: !5687)
!5687 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !1205, line: 249, baseType: !5688)
!5688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !1205, line: 238, size: 448, elements: !5689)
!5689 = !{!5690, !5691, !5692, !5693}
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !5688, file: !1205, line: 241, baseType: !2050, size: 64)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !5688, file: !1205, line: 243, baseType: !2050, size: 64, offset: 64)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !5688, file: !1205, line: 245, baseType: !2051, size: 256, offset: 128)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !5688, file: !1205, line: 248, baseType: !2050, size: 64, offset: 384)
!5694 = !DILocalVariable(name: "stmt", scope: !5680, file: !3, line: 1666, type: !813)
!5695 = !DILocalVariable(name: "ret", scope: !5680, file: !3, line: 1666, type: !813)
!5696 = !DILocation(line: 0, scope: !5680)
!5697 = !DILocation(line: 1665, column: 3, scope: !5680)
!5698 = !DILocation(line: 1668, column: 3, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 1668, column: 3)
!5700 = !DILocation(line: 1666, column: 16, scope: !5680)
!5701 = !DILocation(line: 0, scope: !5699)
!5702 = !DILocation(line: 1668, column: 3, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 1668, column: 3)
!5704 = !DILocation(line: 1670, column: 14, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1669, column: 5)
!5706 = !DILocation(line: 1672, column: 11, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 1672, column: 11)
!5708 = !DILocation(line: 1672, column: 30, scope: !5707)
!5709 = !DILocation(line: 1672, column: 11, scope: !5705)
!5710 = !DILocation(line: 1676, column: 22, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 1676, column: 8)
!5712 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 1673, column: 2)
!5713 = !DILocation(line: 1677, column: 8, scope: !5711)
!5714 = !DILocation(line: 1676, column: 8, scope: !5711)
!5715 = !DILocation(line: 1676, column: 8, scope: !5712)
!5716 = !DILocation(line: 1682, column: 20, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 1682, column: 16)
!5718 = !DILocation(line: 1682, column: 16, scope: !5707)
!5719 = distinct !{!5719, !5698, !5720}
!5720 = !DILocation(line: 1686, column: 5, scope: !5699)
!5721 = !DILocation(line: 1689, column: 1, scope: !5680)
!5722 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !402, file: !402, line: 1686, type: !5723, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5725)
!5723 = !DISubroutineType(types: !5724)
!5724 = !{!466, !196}
!5725 = !{!5726}
!5726 = !DILocalVariable(name: "code", arg: 1, scope: !5722, file: !402, line: 1686, type: !196)
!5727 = !DILocation(line: 0, scope: !5722)
!5728 = !DILocation(line: 1688, column: 34, scope: !5722)
!5729 = !DILocation(line: 1688, column: 10, scope: !5722)
!5730 = !DILocation(line: 1688, column: 3, scope: !5722)
!5731 = distinct !DISubprogram(name: "first_readonly_imm_use", scope: !2823, file: !2823, line: 292, type: !5732, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5735)
!5732 = !DISubroutineType(types: !5733)
!5733 = !{!2049, !5734, !489}
!5734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5687, size: 64)
!5735 = !{!5736, !5737}
!5736 = !DILocalVariable(name: "imm", arg: 1, scope: !5731, file: !2823, line: 292, type: !5734)
!5737 = !DILocalVariable(name: "var", arg: 2, scope: !5731, file: !2823, line: 292, type: !489)
!5738 = !DILocation(line: 0, scope: !5731)
!5739 = !DILocation(line: 294, column: 18, scope: !5731)
!5740 = !DILocation(line: 294, column: 8, scope: !5731)
!5741 = !DILocation(line: 294, column: 14, scope: !5731)
!5742 = !DILocation(line: 295, column: 30, scope: !5731)
!5743 = !DILocation(line: 295, column: 16, scope: !5731)
!5744 = !DILocation(line: 299, column: 7, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5731, file: !2823, line: 299, column: 7)
!5746 = !DILocation(line: 299, column: 7, scope: !5731)
!5747 = !DILocation(line: 301, column: 15, scope: !5731)
!5748 = !DILocation(line: 301, column: 3, scope: !5731)
!5749 = !DILocation(line: 302, column: 1, scope: !5731)
!5750 = distinct !DISubprogram(name: "end_readonly_imm_use_p", scope: !2823, file: !2823, line: 285, type: !5751, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5755)
!5751 = !DISubroutineType(types: !5752)
!5752 = !{!481, !5753}
!5753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5754, size: 64)
!5754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5687)
!5755 = !{!5756}
!5756 = !DILocalVariable(name: "imm", arg: 1, scope: !5750, file: !2823, line: 285, type: !5753)
!5757 = !DILocation(line: 0, scope: !5750)
!5758 = !DILocation(line: 287, column: 16, scope: !5750)
!5759 = !DILocation(line: 287, column: 32, scope: !5750)
!5760 = !DILocation(line: 287, column: 24, scope: !5750)
!5761 = !DILocation(line: 287, column: 10, scope: !5750)
!5762 = !DILocation(line: 287, column: 3, scope: !5750)
!5763 = distinct !DISubprogram(name: "next_readonly_imm_use", scope: !2823, file: !2823, line: 306, type: !5764, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5766)
!5764 = !DISubroutineType(types: !5765)
!5765 = !{!2049, !5734}
!5766 = !{!5767, !5768}
!5767 = !DILocalVariable(name: "imm", arg: 1, scope: !5763, file: !2823, line: 306, type: !5734)
!5768 = !DILocalVariable(name: "old", scope: !5763, file: !2823, line: 308, type: !2049)
!5769 = !DILocation(line: 0, scope: !5763)
!5770 = !DILocation(line: 308, column: 28, scope: !5763)
!5771 = !DILocation(line: 319, column: 23, scope: !5763)
!5772 = !DILocation(line: 319, column: 16, scope: !5763)
!5773 = !DILocation(line: 320, column: 7, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5763, file: !2823, line: 320, column: 7)
!5775 = !DILocation(line: 320, column: 7, scope: !5763)
!5776 = !DILocation(line: 322, column: 15, scope: !5763)
!5777 = !DILocation(line: 322, column: 3, scope: !5763)
!5778 = !DILocation(line: 323, column: 1, scope: !5763)
!5779 = distinct !DISubprogram(name: "may_reassociate_p", scope: !3, file: !3, line: 2016, type: !5780, scopeLine: 2017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5782)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{!481, !489, !196}
!5782 = !{!5783, !5784}
!5783 = !DILocalVariable(name: "type", arg: 1, scope: !5779, file: !3, line: 2016, type: !489)
!5784 = !DILocalVariable(name: "code", arg: 2, scope: !5779, file: !3, line: 2016, type: !196)
!5785 = !DILocation(line: 0, scope: !5779)
!5786 = !DILocation(line: 2018, column: 7, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 2018, column: 7)
!5788 = !DILocation(line: 2019, column: 7, scope: !5787)
!5789 = !DILocation(line: 2019, column: 11, scope: !5787)
!5790 = !DILocation(line: 2018, column: 7, scope: !5779)
!5791 = !DILocation(line: 2022, column: 11, scope: !5779)
!5792 = !DILocation(line: 2023, column: 4, scope: !5779)
!5793 = !DILocation(line: 2023, column: 7, scope: !5779)
!5794 = !DILocation(line: 2022, column: 3, scope: !5779)
!5795 = !DILocation(line: 2024, column: 1, scope: !5779)
!5796 = distinct !DISubprogram(name: "gimple_expr_code", scope: !402, file: !402, line: 1438, type: !5583, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5797)
!5797 = !{!5798, !5799}
!5798 = !DILocalVariable(name: "stmt", arg: 1, scope: !5796, file: !402, line: 1438, type: !2552)
!5799 = !DILocalVariable(name: "code", scope: !5796, file: !402, line: 1440, type: !401)
!5800 = !DILocation(line: 0, scope: !5796)
!5801 = !DILocation(line: 1440, column: 27, scope: !5796)
!5802 = !DILocation(line: 1441, column: 29, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5796, file: !402, line: 1441, column: 7)
!5804 = !DILocation(line: 1442, column: 42, scope: !5803)
!5805 = !DILocation(line: 1442, column: 5, scope: !5803)
!5806 = !DILocation(line: 1446, column: 5, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5803, file: !402, line: 1443, column: 12)
!5808 = !DILocation(line: 1448, column: 5, scope: !5796)
!5809 = !DILocation(line: 1450, column: 1, scope: !5796)
!5810 = distinct !DISubprogram(name: "reassociate_to_the_same_stmt", scope: !3, file: !3, line: 2163, type: !5811, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5813)
!5811 = !DISubroutineType(types: !5812)
!5812 = !{!813, !489, !489}
!5813 = !{!5814, !5815, !5816, !5817, !5818, !5819, !5820, !5821, !5822, !5823, !5824, !5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832, !5833}
!5814 = !DILocalVariable(name: "name1", arg: 1, scope: !5810, file: !3, line: 2163, type: !489)
!5815 = !DILocalVariable(name: "name2", arg: 2, scope: !5810, file: !3, line: 2163, type: !489)
!5816 = !DILocalVariable(name: "stmt1", scope: !5810, file: !3, line: 2165, type: !813)
!5817 = !DILocalVariable(name: "stmt2", scope: !5810, file: !3, line: 2165, type: !813)
!5818 = !DILocalVariable(name: "root1", scope: !5810, file: !3, line: 2165, type: !813)
!5819 = !DILocalVariable(name: "root2", scope: !5810, file: !3, line: 2165, type: !813)
!5820 = !DILocalVariable(name: "s1", scope: !5810, file: !3, line: 2165, type: !813)
!5821 = !DILocalVariable(name: "s2", scope: !5810, file: !3, line: 2165, type: !813)
!5822 = !DILocalVariable(name: "new_stmt", scope: !5810, file: !3, line: 2166, type: !813)
!5823 = !DILocalVariable(name: "tmp_stmt", scope: !5810, file: !3, line: 2166, type: !813)
!5824 = !DILocalVariable(name: "new_name", scope: !5810, file: !3, line: 2167, type: !489)
!5825 = !DILocalVariable(name: "tmp_name", scope: !5810, file: !3, line: 2167, type: !489)
!5826 = !DILocalVariable(name: "var", scope: !5810, file: !3, line: 2167, type: !489)
!5827 = !DILocalVariable(name: "r1", scope: !5810, file: !3, line: 2167, type: !489)
!5828 = !DILocalVariable(name: "r2", scope: !5810, file: !3, line: 2167, type: !489)
!5829 = !DILocalVariable(name: "dist1", scope: !5810, file: !3, line: 2168, type: !7)
!5830 = !DILocalVariable(name: "dist2", scope: !5810, file: !3, line: 2168, type: !7)
!5831 = !DILocalVariable(name: "code", scope: !5810, file: !3, line: 2169, type: !196)
!5832 = !DILocalVariable(name: "type", scope: !5810, file: !3, line: 2170, type: !489)
!5833 = !DILocalVariable(name: "bsi", scope: !5810, file: !3, line: 2171, type: !3767)
!5834 = !DILocation(line: 0, scope: !5810)
!5835 = !DILocation(line: 2167, column: 3, scope: !5810)
!5836 = !DILocation(line: 2168, column: 3, scope: !5810)
!5837 = !DILocation(line: 2170, column: 15, scope: !5810)
!5838 = !DILocation(line: 2171, column: 3, scope: !5810)
!5839 = !DILocation(line: 2173, column: 11, scope: !5810)
!5840 = !DILocation(line: 2174, column: 11, scope: !5810)
!5841 = !DILocation(line: 2175, column: 11, scope: !5810)
!5842 = !DILocation(line: 2176, column: 11, scope: !5810)
!5843 = !DILocation(line: 2177, column: 10, scope: !5810)
!5844 = !DILocation(line: 2179, column: 3, scope: !5810)
!5845 = !DILocation(line: 2184, column: 8, scope: !5810)
!5846 = !DILocation(line: 2184, column: 6, scope: !5810)
!5847 = !DILocation(line: 2186, column: 8, scope: !5810)
!5848 = !DILocation(line: 2186, column: 6, scope: !5810)
!5849 = !DILocation(line: 2189, column: 10, scope: !5810)
!5850 = !DILocation(line: 2189, column: 3, scope: !5810)
!5851 = !DILocation(line: 2189, column: 18, scope: !5810)
!5852 = !DILocation(line: 2189, column: 16, scope: !5810)
!5853 = !DILocation(line: 2195, column: 3, scope: !5810)
!5854 = !DILocation(line: 2191, column: 12, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 2190, column: 5)
!5856 = !DILocation(line: 2192, column: 12, scope: !5855)
!5857 = !DILocation(line: 2192, column: 10, scope: !5855)
!5858 = !DILocation(line: 2193, column: 12, scope: !5855)
!5859 = distinct !{!5859, !5850, !5860}
!5860 = !DILocation(line: 2194, column: 5, scope: !5810)
!5861 = !DILocation(line: 2195, column: 18, scope: !5810)
!5862 = !DILocation(line: 2195, column: 10, scope: !5810)
!5863 = !DILocation(line: 2195, column: 16, scope: !5810)
!5864 = !DILocation(line: 2202, column: 3, scope: !5810)
!5865 = !DILocation(line: 2197, column: 12, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 2196, column: 5)
!5867 = !DILocation(line: 2198, column: 12, scope: !5866)
!5868 = !DILocation(line: 2198, column: 10, scope: !5866)
!5869 = !DILocation(line: 2199, column: 12, scope: !5866)
!5870 = distinct !{!5870, !5853, !5871}
!5871 = !DILocation(line: 2200, column: 5, scope: !5810)
!5872 = !DILocation(line: 2202, column: 13, scope: !5810)
!5873 = !DILocation(line: 2204, column: 12, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 2203, column: 5)
!5875 = !DILocation(line: 2205, column: 12, scope: !5874)
!5876 = !DILocation(line: 2205, column: 10, scope: !5874)
!5877 = !DILocation(line: 2206, column: 12, scope: !5874)
!5878 = !DILocation(line: 2207, column: 12, scope: !5874)
!5879 = !DILocation(line: 2207, column: 10, scope: !5874)
!5880 = distinct !{!5880, !5864, !5881}
!5881 = !DILocation(line: 2208, column: 5, scope: !5810)
!5882 = !DILocation(line: 2212, column: 38, scope: !5810)
!5883 = !DILocation(line: 2212, column: 3, scope: !5810)
!5884 = !DILocation(line: 2213, column: 38, scope: !5810)
!5885 = !DILocation(line: 2213, column: 3, scope: !5810)
!5886 = !DILocation(line: 2217, column: 9, scope: !5810)
!5887 = !DILocation(line: 2218, column: 7, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 2218, column: 7)
!5889 = !DILocation(line: 2218, column: 24, scope: !5888)
!5890 = !DILocation(line: 2219, column: 7, scope: !5888)
!5891 = !DILocation(line: 2219, column: 27, scope: !5888)
!5892 = !DILocation(line: 2218, column: 7, scope: !5810)
!5893 = !DILocation(line: 2220, column: 5, scope: !5888)
!5894 = !DILocation(line: 2220, column: 29, scope: !5888)
!5895 = !DILocation(line: 2221, column: 3, scope: !5810)
!5896 = !DILocation(line: 2222, column: 14, scope: !5810)
!5897 = !DILocation(line: 2223, column: 14, scope: !5810)
!5898 = !DILocation(line: 2225, column: 9, scope: !5810)
!5899 = !DILocation(line: 2226, column: 7, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 2226, column: 7)
!5901 = !DILocation(line: 2226, column: 24, scope: !5900)
!5902 = !DILocation(line: 2227, column: 7, scope: !5900)
!5903 = !DILocation(line: 2227, column: 27, scope: !5900)
!5904 = !DILocation(line: 2226, column: 7, scope: !5810)
!5905 = !DILocation(line: 2228, column: 5, scope: !5900)
!5906 = !DILocation(line: 2228, column: 29, scope: !5900)
!5907 = !DILocation(line: 2229, column: 3, scope: !5810)
!5908 = !DILocation(line: 2230, column: 14, scope: !5810)
!5909 = !DILocation(line: 2235, column: 14, scope: !5810)
!5910 = !DILocation(line: 2240, column: 9, scope: !5810)
!5911 = !DILocation(line: 2241, column: 3, scope: !5810)
!5912 = !DILocation(line: 2242, column: 8, scope: !5810)
!5913 = !DILocation(line: 2243, column: 3, scope: !5810)
!5914 = !DILocation(line: 2245, column: 3, scope: !5810)
!5915 = !DILocation(line: 2246, column: 3, scope: !5810)
!5916 = !DILocation(line: 2249, column: 1, scope: !5810)
!5917 = !DILocation(line: 2248, column: 3, scope: !5810)
!5918 = distinct !DISubprogram(name: "remove_name_from_operation", scope: !3, file: !3, line: 2138, type: !5919, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5921)
!5919 = !DISubroutineType(types: !5920)
!5920 = !{null, !813, !489}
!5921 = !{!5922, !5923, !5924, !5925}
!5922 = !DILocalVariable(name: "stmt", arg: 1, scope: !5918, file: !3, line: 2138, type: !813)
!5923 = !DILocalVariable(name: "op", arg: 2, scope: !5918, file: !3, line: 2138, type: !489)
!5924 = !DILocalVariable(name: "other_op", scope: !5918, file: !3, line: 2140, type: !489)
!5925 = !DILocalVariable(name: "si", scope: !5918, file: !3, line: 2141, type: !3767)
!5926 = !DILocation(line: 0, scope: !5918)
!5927 = !DILocation(line: 2141, column: 3, scope: !5918)
!5928 = !DILocation(line: 2143, column: 3, scope: !5918)
!5929 = !DILocation(line: 2145, column: 7, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 2145, column: 7)
!5931 = !DILocation(line: 2145, column: 33, scope: !5930)
!5932 = !DILocation(line: 2145, column: 7, scope: !5918)
!5933 = !DILocation(line: 2146, column: 16, scope: !5930)
!5934 = !DILocation(line: 2146, column: 5, scope: !5930)
!5935 = !DILocation(line: 2148, column: 16, scope: !5930)
!5936 = !DILocation(line: 0, scope: !5930)
!5937 = !DILocation(line: 2150, column: 8, scope: !5918)
!5938 = !DILocation(line: 2151, column: 3, scope: !5918)
!5939 = !DILocation(line: 2154, column: 3, scope: !5918)
!5940 = !DILocation(line: 2156, column: 3, scope: !5918)
!5941 = !DILocation(line: 2157, column: 1, scope: !5918)
!5942 = distinct !DISubprogram(name: "make_ssa_name", scope: !2823, file: !2823, line: 1245, type: !5943, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5945)
!5943 = !DISubroutineType(types: !5944)
!5944 = !{!489, !489, !813}
!5945 = !{!5946, !5947}
!5946 = !DILocalVariable(name: "var", arg: 1, scope: !5942, file: !2823, line: 1245, type: !489)
!5947 = !DILocalVariable(name: "stmt", arg: 2, scope: !5942, file: !2823, line: 1245, type: !813)
!5948 = !DILocation(line: 0, scope: !5942)
!5949 = !DILocation(line: 1247, column: 28, scope: !5942)
!5950 = !DILocation(line: 1247, column: 10, scope: !5942)
!5951 = !DILocation(line: 1247, column: 3, scope: !5942)
!5952 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !402, file: !402, line: 1759, type: !2853, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5953)
!5953 = !{!5954}
!5954 = !DILocalVariable(name: "gs", arg: 1, scope: !5952, file: !402, line: 1759, type: !2552)
!5955 = !DILocation(line: 0, scope: !5952)
!5956 = !DILocation(line: 1763, column: 7, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5952, file: !402, line: 1763, column: 7)
!5958 = !DILocation(line: 1763, column: 27, scope: !5957)
!5959 = !DILocation(line: 1763, column: 7, scope: !5952)
!5960 = !DILocation(line: 1764, column: 12, scope: !5957)
!5961 = !DILocation(line: 1764, column: 5, scope: !5957)
!5962 = !DILocation(line: 0, scope: !5957)
!5963 = !DILocation(line: 1767, column: 1, scope: !5952)
!5964 = distinct !DISubprogram(name: "gimple_num_ops", scope: !402, file: !402, line: 1596, type: !5965, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5967)
!5965 = !DISubroutineType(types: !5966)
!5966 = !{!7, !2552}
!5967 = !{!5968}
!5968 = !DILocalVariable(name: "gs", arg: 1, scope: !5964, file: !402, line: 1596, type: !2552)
!5969 = !DILocation(line: 0, scope: !5964)
!5970 = !DILocation(line: 1598, column: 21, scope: !5964)
!5971 = !DILocation(line: 1598, column: 3, scope: !5964)
!5972 = distinct !DISubprogram(name: "gcd", scope: !1892, file: !1892, line: 427, type: !5973, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5975)
!5973 = !DISubroutineType(types: !5974)
!5974 = !{!482, !482, !482}
!5975 = !{!5976, !5977, !5978, !5979, !5980}
!5976 = !DILocalVariable(name: "a", arg: 1, scope: !5972, file: !1892, line: 427, type: !482)
!5977 = !DILocalVariable(name: "b", arg: 2, scope: !5972, file: !1892, line: 427, type: !482)
!5978 = !DILocalVariable(name: "x", scope: !5972, file: !1892, line: 429, type: !482)
!5979 = !DILocalVariable(name: "y", scope: !5972, file: !1892, line: 429, type: !482)
!5980 = !DILocalVariable(name: "z", scope: !5972, file: !1892, line: 429, type: !482)
!5981 = !DILocation(line: 0, scope: !5972)
!5982 = !DILocation(line: 431, column: 7, scope: !5972)
!5983 = !DILocation(line: 432, column: 7, scope: !5972)
!5984 = !DILocation(line: 434, column: 3, scope: !5972)
!5985 = !DILocation(line: 434, column: 12, scope: !5972)
!5986 = !DILocation(line: 436, column: 13, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5972, file: !1892, line: 435, column: 5)
!5988 = distinct !{!5988, !5984, !5989}
!5989 = !DILocation(line: 439, column: 5, scope: !5972)
!5990 = !DILocation(line: 441, column: 3, scope: !5972)
!5991 = distinct !DISubprogram(name: "replace_names_by_phis", scope: !3, file: !3, line: 1852, type: !3692, scopeLine: 1853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5992)
!5992 = !{!5993, !5994, !5995, !5996, !5997}
!5993 = !DILocalVariable(name: "chains", arg: 1, scope: !5991, file: !3, line: 1852, type: !2033)
!5994 = !DILocalVariable(name: "chain", scope: !5991, file: !3, line: 1854, type: !1911)
!5995 = !DILocalVariable(name: "a", scope: !5991, file: !3, line: 1855, type: !1841)
!5996 = !DILocalVariable(name: "i", scope: !5991, file: !3, line: 1856, type: !7)
!5997 = !DILocalVariable(name: "j", scope: !5991, file: !3, line: 1856, type: !7)
!5998 = !DILocation(line: 0, scope: !5991)
!5999 = !DILocation(line: 1854, column: 3, scope: !5991)
!6000 = !DILocation(line: 1855, column: 3, scope: !5991)
!6001 = !DILocation(line: 0, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 1858, column: 3)
!6003 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 1858, column: 3)
!6004 = !DILocation(line: 1858, column: 8, scope: !6003)
!6005 = !DILocation(line: 0, scope: !6003)
!6006 = !DILocation(line: 1858, column: 15, scope: !6002)
!6007 = !DILocation(line: 1858, column: 3, scope: !6003)
!6008 = !DILocation(line: 1859, column: 5, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 1859, column: 5)
!6010 = !DILocation(line: 0, scope: !6009)
!6011 = !DILocation(line: 1859, column: 17, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 1859, column: 5)
!6013 = !DILocation(line: 1860, column: 11, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 1860, column: 11)
!6015 = !DILocation(line: 1860, column: 14, scope: !6014)
!6016 = !DILocation(line: 1860, column: 19, scope: !6014)
!6017 = !DILocation(line: 1860, column: 11, scope: !6012)
!6018 = !DILocation(line: 1862, column: 14, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 1861, column: 2)
!6020 = !DILocation(line: 1862, column: 12, scope: !6019)
!6021 = !DILocation(line: 1863, column: 4, scope: !6019)
!6022 = !DILocation(line: 1864, column: 4, scope: !6019)
!6023 = !DILocation(line: 1864, column: 7, scope: !6019)
!6024 = !DILocation(line: 1864, column: 27, scope: !6019)
!6025 = !DILocation(line: 1865, column: 2, scope: !6019)
!6026 = !DILocation(line: 1859, column: 57, scope: !6012)
!6027 = !DILocation(line: 1859, column: 5, scope: !6012)
!6028 = distinct !{!6028, !6008, !6029}
!6029 = !DILocation(line: 1865, column: 2, scope: !6009)
!6030 = !DILocation(line: 1858, column: 57, scope: !6002)
!6031 = !DILocation(line: 1858, column: 3, scope: !6002)
!6032 = distinct !{!6032, !6007, !6033}
!6033 = !DILocation(line: 1865, column: 2, scope: !6003)
!6034 = !DILocation(line: 1866, column: 1, scope: !5991)
!6035 = distinct !DISubprogram(name: "single_pred_p", scope: !135, file: !135, line: 634, type: !6036, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6041)
!6036 = !DISubroutineType(types: !6037)
!6037 = !{!481, !6038}
!6038 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !490, line: 112, baseType: !6039)
!6039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6040, size: 64)
!6040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !778)
!6041 = !{!6042}
!6042 = !DILocalVariable(name: "bb", arg: 1, scope: !6035, file: !135, line: 634, type: !6038)
!6043 = !DILocation(line: 0, scope: !6035)
!6044 = !DILocation(line: 636, column: 10, scope: !6035)
!6045 = !DILocation(line: 636, column: 33, scope: !6035)
!6046 = !DILocation(line: 636, column: 3, scope: !6035)
!6047 = distinct !DISubprogram(name: "base_names_in_chain_on", scope: !3, file: !3, line: 1894, type: !6048, scopeLine: 1895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6050)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{null, !1028, !489, !489}
!6050 = !{!6051, !6052, !6053, !6054, !6055, !6056}
!6051 = !DILocalVariable(name: "loop", arg: 1, scope: !6047, file: !3, line: 1894, type: !1028)
!6052 = !DILocalVariable(name: "name", arg: 2, scope: !6047, file: !3, line: 1894, type: !489)
!6053 = !DILocalVariable(name: "var", arg: 3, scope: !6047, file: !3, line: 1894, type: !489)
!6054 = !DILocalVariable(name: "stmt", scope: !6047, file: !3, line: 1896, type: !813)
!6055 = !DILocalVariable(name: "phi", scope: !6047, file: !3, line: 1896, type: !813)
!6056 = !DILocalVariable(name: "iter", scope: !6047, file: !3, line: 1897, type: !5687)
!6057 = !DILocation(line: 0, scope: !6047)
!6058 = !DILocation(line: 1897, column: 3, scope: !6047)
!6059 = !DILocation(line: 1899, column: 3, scope: !6047)
!6060 = !DILocation(line: 1899, column: 23, scope: !6047)
!6061 = !DILocation(line: 1901, column: 3, scope: !6047)
!6062 = !DILocation(line: 1904, column: 7, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1904, column: 7)
!6064 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 1902, column: 5)
!6065 = !DILocation(line: 0, scope: !6063)
!6066 = !DILocation(line: 1904, column: 7, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 1904, column: 7)
!6068 = !DILocation(line: 1906, column: 8, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1906, column: 8)
!6070 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 1905, column: 2)
!6071 = !DILocation(line: 1906, column: 27, scope: !6069)
!6072 = !DILocation(line: 1907, column: 8, scope: !6069)
!6073 = !DILocation(line: 1907, column: 40, scope: !6069)
!6074 = !DILocation(line: 1907, column: 11, scope: !6069)
!6075 = !DILocation(line: 1906, column: 8, scope: !6070)
!6076 = !DILocation(line: 1910, column: 8, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 1910, column: 8)
!6078 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 1908, column: 6)
!6079 = distinct !{!6079, !6062, !6080}
!6080 = !DILocation(line: 1912, column: 2, scope: !6063)
!6081 = !DILocation(line: 1913, column: 12, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1913, column: 11)
!6083 = !DILocation(line: 0, scope: !6064)
!6084 = !DILocation(line: 1913, column: 11, scope: !6064)
!6085 = !DILocation(line: 1919, column: 1, scope: !6047)
!6086 = !DILocation(line: 1916, column: 14, scope: !6064)
!6087 = !DILocation(line: 1917, column: 7, scope: !6064)
!6088 = !DILocation(line: 1917, column: 27, scope: !6064)
!6089 = distinct !{!6089, !6061, !6090}
!6090 = !DILocation(line: 1918, column: 5, scope: !6047)
!6091 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !135, file: !135, line: 150, type: !6092, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6094)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!7, !4155}
!6094 = !{!6095}
!6095 = !DILocalVariable(name: "vec_", arg: 1, scope: !6091, file: !135, line: 150, type: !4155)
!6096 = !DILocation(line: 0, scope: !6091)
!6097 = !DILocation(line: 150, column: 1, scope: !6091)
!6098 = distinct !DISubprogram(name: "first_imm_use_stmt", scope: !2823, file: !2823, line: 1058, type: !6099, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6101)
!6099 = !DISubroutineType(types: !6100)
!6100 = !{!813, !5734, !489}
!6101 = !{!6102, !6103}
!6102 = !DILocalVariable(name: "imm", arg: 1, scope: !6098, file: !2823, line: 1058, type: !5734)
!6103 = !DILocalVariable(name: "var", arg: 2, scope: !6098, file: !2823, line: 1058, type: !489)
!6104 = !DILocation(line: 0, scope: !6098)
!6105 = !DILocation(line: 1060, column: 18, scope: !6098)
!6106 = !DILocation(line: 1060, column: 8, scope: !6098)
!6107 = !DILocation(line: 1060, column: 14, scope: !6098)
!6108 = !DILocation(line: 1061, column: 30, scope: !6098)
!6109 = !DILocation(line: 1061, column: 16, scope: !6098)
!6110 = !DILocation(line: 1062, column: 8, scope: !6098)
!6111 = !DILocation(line: 1062, column: 22, scope: !6098)
!6112 = !DILocation(line: 1067, column: 18, scope: !6098)
!6113 = !DILocation(line: 1067, column: 23, scope: !6098)
!6114 = !DILocation(line: 1068, column: 18, scope: !6098)
!6115 = !DILocation(line: 1068, column: 23, scope: !6098)
!6116 = !DILocation(line: 1069, column: 22, scope: !6098)
!6117 = !DILocation(line: 1069, column: 27, scope: !6098)
!6118 = !DILocation(line: 1070, column: 18, scope: !6098)
!6119 = !DILocation(line: 1070, column: 22, scope: !6098)
!6120 = !DILocation(line: 1072, column: 7, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6098, file: !2823, line: 1072, column: 7)
!6122 = !DILocation(line: 1072, column: 7, scope: !6098)
!6123 = !DILocation(line: 1075, column: 30, scope: !6098)
!6124 = !DILocation(line: 1075, column: 3, scope: !6098)
!6125 = !DILocation(line: 1077, column: 10, scope: !6098)
!6126 = !DILocation(line: 1077, column: 3, scope: !6098)
!6127 = !DILocation(line: 1078, column: 1, scope: !6098)
!6128 = distinct !DISubprogram(name: "end_imm_use_stmt_p", scope: !2823, file: !2823, line: 969, type: !5751, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6129)
!6129 = !{!6130}
!6130 = !DILocalVariable(name: "imm", arg: 1, scope: !6128, file: !2823, line: 969, type: !5753)
!6131 = !DILocation(line: 0, scope: !6128)
!6132 = !DILocation(line: 971, column: 16, scope: !6128)
!6133 = !DILocation(line: 971, column: 32, scope: !6128)
!6134 = !DILocation(line: 971, column: 24, scope: !6128)
!6135 = !DILocation(line: 971, column: 10, scope: !6128)
!6136 = !DILocation(line: 971, column: 3, scope: !6128)
!6137 = distinct !DISubprogram(name: "end_imm_use_stmt_traverse", scope: !2823, file: !2823, line: 978, type: !6138, scopeLine: 979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6140)
!6138 = !DISubroutineType(types: !6139)
!6139 = !{null, !5734}
!6140 = !{!6141}
!6141 = !DILocalVariable(name: "imm", arg: 1, scope: !6137, file: !2823, line: 978, type: !5734)
!6142 = !DILocation(line: 0, scope: !6137)
!6143 = !DILocation(line: 980, column: 26, scope: !6137)
!6144 = !DILocation(line: 980, column: 3, scope: !6137)
!6145 = !DILocation(line: 981, column: 1, scope: !6137)
!6146 = distinct !DISubprogram(name: "next_imm_use_stmt", scope: !2823, file: !2823, line: 1083, type: !6147, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6149)
!6147 = !DISubroutineType(types: !6148)
!6148 = !{!813, !5734}
!6149 = !{!6150}
!6150 = !DILocalVariable(name: "imm", arg: 1, scope: !6146, file: !2823, line: 1083, type: !5734)
!6151 = !DILocation(line: 0, scope: !6146)
!6152 = !DILocation(line: 1085, column: 33, scope: !6146)
!6153 = !DILocation(line: 1085, column: 16, scope: !6146)
!6154 = !DILocation(line: 1086, column: 7, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6146, file: !2823, line: 1086, column: 7)
!6156 = !DILocation(line: 1086, column: 7, scope: !6146)
!6157 = !DILocation(line: 1088, column: 26, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !2823, line: 1088, column: 11)
!6159 = distinct !DILexicalBlock(scope: !6155, file: !2823, line: 1087, column: 5)
!6160 = !DILocation(line: 1088, column: 31, scope: !6158)
!6161 = !DILocation(line: 1088, column: 11, scope: !6159)
!6162 = !DILocation(line: 1089, column: 24, scope: !6158)
!6163 = !DILocation(line: 1089, column: 2, scope: !6158)
!6164 = !DILocation(line: 1093, column: 30, scope: !6146)
!6165 = !DILocation(line: 1093, column: 3, scope: !6146)
!6166 = !DILocation(line: 1094, column: 10, scope: !6146)
!6167 = !DILocation(line: 1094, column: 3, scope: !6146)
!6168 = !DILocation(line: 1095, column: 1, scope: !6146)
!6169 = distinct !DISubprogram(name: "link_use_stmts_after", scope: !2823, file: !2823, line: 1018, type: !6170, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6172)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{null, !2049, !5734}
!6172 = !{!6173, !6174, !6175, !6176, !6177, !6178, !6179, !6192}
!6173 = !DILocalVariable(name: "head", arg: 1, scope: !6169, file: !2823, line: 1018, type: !2049)
!6174 = !DILocalVariable(name: "imm", arg: 2, scope: !6169, file: !2823, line: 1018, type: !5734)
!6175 = !DILocalVariable(name: "use_p", scope: !6169, file: !2823, line: 1020, type: !2049)
!6176 = !DILocalVariable(name: "last_p", scope: !6169, file: !2823, line: 1021, type: !2049)
!6177 = !DILocalVariable(name: "head_stmt", scope: !6169, file: !2823, line: 1022, type: !813)
!6178 = !DILocalVariable(name: "use", scope: !6169, file: !2823, line: 1023, type: !489)
!6179 = !DILocalVariable(name: "op_iter", scope: !6169, file: !2823, line: 1024, type: !6180)
!6180 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !473, line: 140, baseType: !6181)
!6181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !473, line: 131, size: 320, elements: !6182)
!6182 = !{!6183, !6184, !6185, !6187, !6189, !6190, !6191}
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !6181, file: !473, line: 133, baseType: !481, size: 8)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !6181, file: !473, line: 134, baseType: !472, size: 32, offset: 32)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !6181, file: !473, line: 135, baseType: !6186, size: 64, offset: 64)
!6186 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !473, line: 42, baseType: !842)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !6181, file: !473, line: 136, baseType: !6188, size: 64, offset: 128)
!6188 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !473, line: 50, baseType: !849)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !6181, file: !473, line: 137, baseType: !482, size: 32, offset: 192)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !6181, file: !473, line: 138, baseType: !482, size: 32, offset: 224)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !6181, file: !473, line: 139, baseType: !813, size: 64, offset: 256)
!6192 = !DILocalVariable(name: "flag", scope: !6169, file: !2823, line: 1025, type: !482)
!6193 = !DILocation(line: 0, scope: !6169)
!6194 = !DILocation(line: 1022, column: 22, scope: !6169)
!6195 = !DILocation(line: 1023, column: 14, scope: !6169)
!6196 = !DILocation(line: 1024, column: 3, scope: !6169)
!6197 = !DILocation(line: 1028, column: 11, scope: !6169)
!6198 = !DILocation(line: 1030, column: 7, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6169, file: !2823, line: 1030, column: 7)
!6200 = !DILocation(line: 1030, column: 31, scope: !6199)
!6201 = !DILocation(line: 1030, column: 7, scope: !6169)
!6202 = !DILocation(line: 1032, column: 7, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6204, file: !2823, line: 1032, column: 7)
!6204 = distinct !DILexicalBlock(scope: !6199, file: !2823, line: 1031, column: 5)
!6205 = !DILocation(line: 0, scope: !6203)
!6206 = !DILocation(line: 1032, column: 7, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6203, file: !2823, line: 1032, column: 7)
!6208 = !DILocation(line: 1033, column: 6, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6207, file: !2823, line: 1033, column: 6)
!6210 = !DILocation(line: 1033, column: 27, scope: !6209)
!6211 = !DILocation(line: 1033, column: 6, scope: !6207)
!6212 = !DILocation(line: 1034, column: 13, scope: !6209)
!6213 = !DILocation(line: 1034, column: 4, scope: !6209)
!6214 = distinct !{!6214, !6202, !6215}
!6215 = !DILocation(line: 1034, column: 53, scope: !6203)
!6216 = !DILocation(line: 1038, column: 11, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6199, file: !2823, line: 1037, column: 5)
!6218 = !DILocation(line: 1040, column: 4, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !2823, line: 1040, column: 4)
!6220 = distinct !DILexicalBlock(scope: !6221, file: !2823, line: 1039, column: 2)
!6221 = distinct !DILexicalBlock(scope: !6217, file: !2823, line: 1038, column: 11)
!6222 = !DILocation(line: 0, scope: !6219)
!6223 = !DILocation(line: 1040, column: 4, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6219, file: !2823, line: 1040, column: 4)
!6225 = !DILocation(line: 1041, column: 10, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6224, file: !2823, line: 1041, column: 10)
!6227 = !DILocation(line: 1041, column: 31, scope: !6226)
!6228 = !DILocation(line: 1041, column: 10, scope: !6224)
!6229 = !DILocation(line: 1042, column: 17, scope: !6226)
!6230 = !DILocation(line: 1042, column: 8, scope: !6226)
!6231 = distinct !{!6231, !6218, !6232}
!6232 = !DILocation(line: 1042, column: 57, scope: !6219)
!6233 = !DILocation(line: 1044, column: 25, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6221, file: !2823, line: 1044, column: 16)
!6235 = !DILocation(line: 1044, column: 53, scope: !6234)
!6236 = !DILocation(line: 1044, column: 16, scope: !6221)
!6237 = !DILocation(line: 1046, column: 8, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6239, file: !2823, line: 1046, column: 8)
!6239 = distinct !DILexicalBlock(scope: !6234, file: !2823, line: 1045, column: 2)
!6240 = !DILocation(line: 1046, column: 29, scope: !6238)
!6241 = !DILocation(line: 1046, column: 8, scope: !6239)
!6242 = !DILocation(line: 1047, column: 15, scope: !6238)
!6243 = !DILocation(line: 1047, column: 6, scope: !6238)
!6244 = !DILocation(line: 1051, column: 22, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6169, file: !2823, line: 1051, column: 7)
!6246 = !DILocation(line: 1021, column: 17, scope: !6169)
!6247 = !DILocation(line: 1051, column: 27, scope: !6245)
!6248 = !DILocation(line: 1051, column: 7, scope: !6169)
!6249 = !DILocation(line: 1052, column: 27, scope: !6245)
!6250 = !DILocation(line: 1052, column: 5, scope: !6245)
!6251 = !DILocation(line: 1053, column: 32, scope: !6169)
!6252 = !DILocation(line: 1053, column: 3, scope: !6169)
!6253 = !DILocation(line: 1054, column: 1, scope: !6169)
!6254 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !2823, file: !2823, line: 910, type: !6255, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6258)
!6255 = !DISubroutineType(types: !6256)
!6256 = !{!2049, !6257, !813, !482}
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6180, size: 64)
!6258 = !{!6259, !6260, !6261, !6262, !6263}
!6259 = !DILocalVariable(name: "ptr", arg: 1, scope: !6254, file: !2823, line: 910, type: !6257)
!6260 = !DILocalVariable(name: "phi", arg: 2, scope: !6254, file: !2823, line: 910, type: !813)
!6261 = !DILocalVariable(name: "flags", arg: 3, scope: !6254, file: !2823, line: 910, type: !482)
!6262 = !DILocalVariable(name: "phi_def", scope: !6254, file: !2823, line: 912, type: !489)
!6263 = !DILocalVariable(name: "comp", scope: !6254, file: !2823, line: 913, type: !482)
!6264 = !DILocation(line: 0, scope: !6254)
!6265 = !DILocation(line: 912, column: 18, scope: !6254)
!6266 = !DILocation(line: 915, column: 3, scope: !6254)
!6267 = !DILocation(line: 916, column: 8, scope: !6254)
!6268 = !DILocation(line: 916, column: 13, scope: !6254)
!6269 = !DILocation(line: 918, column: 3, scope: !6254)
!6270 = !DILocation(line: 920, column: 11, scope: !6254)
!6271 = !DILocation(line: 923, column: 14, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6254, file: !2823, line: 923, column: 7)
!6273 = !DILocation(line: 923, column: 22, scope: !6272)
!6274 = !DILocation(line: 923, column: 7, scope: !6254)
!6275 = !DILocation(line: 925, column: 17, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6272, file: !2823, line: 924, column: 5)
!6277 = !DILocation(line: 926, column: 7, scope: !6276)
!6278 = !DILocation(line: 929, column: 8, scope: !6254)
!6279 = !DILocation(line: 929, column: 17, scope: !6254)
!6280 = !DILocation(line: 930, column: 18, scope: !6254)
!6281 = !DILocation(line: 930, column: 8, scope: !6254)
!6282 = !DILocation(line: 930, column: 16, scope: !6254)
!6283 = !DILocation(line: 931, column: 8, scope: !6254)
!6284 = !DILocation(line: 931, column: 18, scope: !6254)
!6285 = !DILocation(line: 932, column: 10, scope: !6254)
!6286 = !DILocation(line: 932, column: 3, scope: !6254)
!6287 = !DILocation(line: 933, column: 1, scope: !6254)
!6288 = distinct !DISubprogram(name: "op_iter_done", scope: !2823, file: !2823, line: 652, type: !6289, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6293)
!6289 = !DISubroutineType(types: !6290)
!6290 = !{!481, !6291}
!6291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6292, size: 64)
!6292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6180)
!6293 = !{!6294}
!6294 = !DILocalVariable(name: "ptr", arg: 1, scope: !6288, file: !2823, line: 652, type: !6291)
!6295 = !DILocation(line: 0, scope: !6288)
!6296 = !DILocation(line: 654, column: 15, scope: !6288)
!6297 = !DILocation(line: 654, column: 3, scope: !6288)
!6298 = distinct !DISubprogram(name: "move_use_after_head", scope: !2823, file: !2823, line: 990, type: !6299, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6301)
!6299 = !DISubroutineType(types: !6300)
!6300 = !{!2049, !2049, !2049, !2049}
!6301 = !{!6302, !6303, !6304}
!6302 = !DILocalVariable(name: "use_p", arg: 1, scope: !6298, file: !2823, line: 990, type: !2049)
!6303 = !DILocalVariable(name: "head", arg: 2, scope: !6298, file: !2823, line: 990, type: !2049)
!6304 = !DILocalVariable(name: "last_p", arg: 3, scope: !6298, file: !2823, line: 991, type: !2049)
!6305 = !DILocation(line: 0, scope: !6298)
!6306 = !DILocation(line: 997, column: 13, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6298, file: !2823, line: 997, column: 7)
!6308 = !DILocation(line: 997, column: 7, scope: !6298)
!6309 = !DILocation(line: 1000, column: 19, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !2823, line: 1000, column: 11)
!6311 = distinct !DILexicalBlock(scope: !6307, file: !2823, line: 998, column: 5)
!6312 = !DILocation(line: 1000, column: 24, scope: !6310)
!6313 = !DILocation(line: 1000, column: 11, scope: !6311)
!6314 = !DILocation(line: 1005, column: 4, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6310, file: !2823, line: 1003, column: 2)
!6316 = !DILocation(line: 1006, column: 4, scope: !6315)
!6317 = !DILocation(line: 1010, column: 3, scope: !6298)
!6318 = distinct !DISubprogram(name: "op_iter_next_use", scope: !2823, file: !2823, line: 659, type: !6319, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6321)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{!2049, !6257}
!6321 = !{!6322, !6323}
!6322 = !DILocalVariable(name: "ptr", arg: 1, scope: !6318, file: !2823, line: 659, type: !6257)
!6323 = !DILocalVariable(name: "use_p", scope: !6318, file: !2823, line: 661, type: !2049)
!6324 = !DILocation(line: 0, scope: !6318)
!6325 = !DILocation(line: 665, column: 12, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6318, file: !2823, line: 665, column: 7)
!6327 = !DILocation(line: 665, column: 7, scope: !6326)
!6328 = !DILocation(line: 665, column: 7, scope: !6318)
!6329 = !DILocation(line: 667, column: 15, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6326, file: !2823, line: 666, column: 5)
!6331 = !DILocation(line: 668, column: 30, scope: !6330)
!6332 = !DILocation(line: 668, column: 17, scope: !6330)
!6333 = !DILocation(line: 669, column: 7, scope: !6330)
!6334 = !DILocation(line: 671, column: 12, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6318, file: !2823, line: 671, column: 7)
!6336 = !DILocation(line: 671, column: 25, scope: !6335)
!6337 = !DILocation(line: 671, column: 18, scope: !6335)
!6338 = !DILocation(line: 671, column: 7, scope: !6318)
!6339 = !DILocation(line: 673, column: 14, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6335, file: !2823, line: 672, column: 5)
!6341 = !DILocation(line: 673, column: 7, scope: !6340)
!6342 = !DILocation(line: 675, column: 8, scope: !6318)
!6343 = !DILocation(line: 675, column: 13, scope: !6318)
!6344 = !DILocation(line: 676, column: 3, scope: !6318)
!6345 = !DILocation(line: 677, column: 1, scope: !6318)
!6346 = distinct !DISubprogram(name: "op_iter_init_use", scope: !2823, file: !2823, line: 768, type: !6255, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6347)
!6347 = !{!6348, !6349, !6350}
!6348 = !DILocalVariable(name: "ptr", arg: 1, scope: !6346, file: !2823, line: 768, type: !6257)
!6349 = !DILocalVariable(name: "stmt", arg: 2, scope: !6346, file: !2823, line: 768, type: !813)
!6350 = !DILocalVariable(name: "flags", arg: 3, scope: !6346, file: !2823, line: 768, type: !482)
!6351 = !DILocation(line: 0, scope: !6346)
!6352 = !DILocation(line: 770, column: 3, scope: !6346)
!6353 = !DILocation(line: 772, column: 3, scope: !6346)
!6354 = !DILocation(line: 773, column: 8, scope: !6346)
!6355 = !DILocation(line: 773, column: 18, scope: !6346)
!6356 = !DILocation(line: 774, column: 10, scope: !6346)
!6357 = !DILocation(line: 774, column: 3, scope: !6346)
!6358 = distinct !DISubprogram(name: "gimple_vuse_op", scope: !402, file: !402, line: 1334, type: !6359, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6361)
!6359 = !DISubroutineType(types: !6360)
!6360 = !{!2049, !2552}
!6361 = !{!6362, !6363}
!6362 = !DILocalVariable(name: "g", arg: 1, scope: !6358, file: !402, line: 1334, type: !2552)
!6363 = !DILocalVariable(name: "ops", scope: !6358, file: !402, line: 1336, type: !849)
!6364 = !DILocation(line: 0, scope: !6358)
!6365 = !DILocation(line: 1337, column: 8, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6358, file: !402, line: 1337, column: 7)
!6367 = !DILocation(line: 1337, column: 7, scope: !6358)
!6368 = !DILocation(line: 1339, column: 25, scope: !6358)
!6369 = !DILocation(line: 1340, column: 7, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6358, file: !402, line: 1340, column: 7)
!6371 = !DILocation(line: 1341, column: 7, scope: !6370)
!6372 = !DILocation(line: 1341, column: 28, scope: !6370)
!6373 = !DILocation(line: 1341, column: 49, scope: !6370)
!6374 = !DILocation(line: 1341, column: 32, scope: !6370)
!6375 = !DILocation(line: 1342, column: 12, scope: !6370)
!6376 = !DILocation(line: 1340, column: 7, scope: !6358)
!6377 = !DILocation(line: 1344, column: 1, scope: !6358)
!6378 = distinct !DISubprogram(name: "delink_imm_use", scope: !2823, file: !2823, line: 188, type: !6379, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6381)
!6379 = !DISubroutineType(types: !6380)
!6380 = !{null, !2050}
!6381 = !{!6382}
!6382 = !DILocalVariable(name: "linknode", arg: 1, scope: !6378, file: !2823, line: 188, type: !2050)
!6383 = !DILocation(line: 0, scope: !6378)
!6384 = !DILocation(line: 191, column: 17, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6378, file: !2823, line: 191, column: 7)
!6386 = !DILocation(line: 191, column: 22, scope: !6385)
!6387 = !DILocation(line: 191, column: 7, scope: !6378)
!6388 = !DILocation(line: 194, column: 36, scope: !6378)
!6389 = !DILocation(line: 194, column: 19, scope: !6378)
!6390 = !DILocation(line: 194, column: 24, scope: !6378)
!6391 = !DILocation(line: 195, column: 36, scope: !6378)
!6392 = !DILocation(line: 195, column: 13, scope: !6378)
!6393 = !DILocation(line: 195, column: 24, scope: !6378)
!6394 = !DILocation(line: 196, column: 18, scope: !6378)
!6395 = !DILocation(line: 197, column: 18, scope: !6378)
!6396 = !DILocation(line: 198, column: 1, scope: !6378)
!6397 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !2823, file: !2823, line: 202, type: !6398, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6400)
!6398 = !DISubroutineType(types: !6399)
!6399 = !{null, !2050, !2050}
!6400 = !{!6401, !6402}
!6401 = !DILocalVariable(name: "linknode", arg: 1, scope: !6397, file: !2823, line: 202, type: !2050)
!6402 = !DILocalVariable(name: "list", arg: 2, scope: !6397, file: !2823, line: 202, type: !2050)
!6403 = !DILocation(line: 0, scope: !6397)
!6404 = !DILocation(line: 206, column: 13, scope: !6397)
!6405 = !DILocation(line: 206, column: 18, scope: !6397)
!6406 = !DILocation(line: 207, column: 26, scope: !6397)
!6407 = !DILocation(line: 207, column: 13, scope: !6397)
!6408 = !DILocation(line: 207, column: 18, scope: !6397)
!6409 = !DILocation(line: 208, column: 9, scope: !6397)
!6410 = !DILocation(line: 208, column: 15, scope: !6397)
!6411 = !DILocation(line: 208, column: 20, scope: !6397)
!6412 = !DILocation(line: 209, column: 14, scope: !6397)
!6413 = !DILocation(line: 210, column: 1, scope: !6397)
!6414 = distinct !DISubprogram(name: "gimple_phi_result", scope: !402, file: !402, line: 3071, type: !2853, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6415)
!6415 = !{!6416}
!6416 = !DILocalVariable(name: "gs", arg: 1, scope: !6414, file: !402, line: 3071, type: !2552)
!6417 = !DILocation(line: 0, scope: !6414)
!6418 = !DILocation(line: 3074, column: 25, scope: !6414)
!6419 = !DILocation(line: 3074, column: 3, scope: !6414)
!6420 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !2823, file: !2823, line: 729, type: !6421, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6423)
!6421 = !DISubroutineType(types: !6422)
!6422 = !{null, !6257}
!6423 = !{!6424}
!6424 = !DILocalVariable(name: "ptr", arg: 1, scope: !6420, file: !2823, line: 729, type: !6257)
!6425 = !DILocation(line: 0, scope: !6420)
!6426 = !DILocation(line: 731, column: 8, scope: !6420)
!6427 = !DILocation(line: 731, column: 13, scope: !6420)
!6428 = !DILocation(line: 732, column: 8, scope: !6420)
!6429 = !DILocation(line: 732, column: 13, scope: !6420)
!6430 = !DILocation(line: 733, column: 8, scope: !6420)
!6431 = !DILocation(line: 733, column: 18, scope: !6420)
!6432 = !DILocation(line: 734, column: 8, scope: !6420)
!6433 = !DILocation(line: 734, column: 14, scope: !6420)
!6434 = !DILocation(line: 735, column: 8, scope: !6420)
!6435 = !DILocation(line: 735, column: 16, scope: !6420)
!6436 = !DILocation(line: 736, column: 8, scope: !6420)
!6437 = !DILocation(line: 736, column: 17, scope: !6420)
!6438 = !DILocation(line: 737, column: 8, scope: !6420)
!6439 = !DILocation(line: 737, column: 13, scope: !6420)
!6440 = !DILocation(line: 738, column: 1, scope: !6420)
!6441 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !402, file: !402, line: 3061, type: !5965, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6442)
!6442 = !{!6443}
!6443 = !DILocalVariable(name: "gs", arg: 1, scope: !6441, file: !402, line: 3061, type: !2552)
!6444 = !DILocation(line: 0, scope: !6441)
!6445 = !DILocation(line: 3064, column: 25, scope: !6441)
!6446 = !DILocation(line: 3064, column: 3, scope: !6441)
!6447 = distinct !DISubprogram(name: "op_iter_init", scope: !2823, file: !2823, line: 742, type: !6448, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6450)
!6448 = !DISubroutineType(types: !6449)
!6449 = !{null, !6257, !813, !482}
!6450 = !{!6451, !6452, !6453}
!6451 = !DILocalVariable(name: "ptr", arg: 1, scope: !6447, file: !2823, line: 742, type: !6257)
!6452 = !DILocalVariable(name: "stmt", arg: 2, scope: !6447, file: !2823, line: 742, type: !813)
!6453 = !DILocalVariable(name: "flags", arg: 3, scope: !6447, file: !2823, line: 742, type: !482)
!6454 = !DILocation(line: 0, scope: !6447)
!6455 = !DILocation(line: 746, column: 3, scope: !6447)
!6456 = !DILocation(line: 748, column: 22, scope: !6447)
!6457 = !DILocation(line: 748, column: 15, scope: !6447)
!6458 = !DILocation(line: 748, column: 52, scope: !6447)
!6459 = !DILocation(line: 748, column: 8, scope: !6447)
!6460 = !DILocation(line: 748, column: 13, scope: !6447)
!6461 = !DILocation(line: 749, column: 15, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6447, file: !2823, line: 749, column: 7)
!6463 = !DILocation(line: 750, column: 7, scope: !6462)
!6464 = !DILocation(line: 750, column: 10, scope: !6462)
!6465 = !DILocation(line: 751, column: 7, scope: !6462)
!6466 = !DILocation(line: 751, column: 10, scope: !6462)
!6467 = !DILocation(line: 751, column: 29, scope: !6462)
!6468 = !DILocation(line: 749, column: 7, scope: !6447)
!6469 = !DILocation(line: 752, column: 22, scope: !6462)
!6470 = !DILocation(line: 752, column: 28, scope: !6462)
!6471 = !DILocation(line: 752, column: 15, scope: !6462)
!6472 = !DILocation(line: 752, column: 5, scope: !6462)
!6473 = !DILocation(line: 753, column: 22, scope: !6447)
!6474 = !DILocation(line: 753, column: 15, scope: !6447)
!6475 = !DILocation(line: 753, column: 52, scope: !6447)
!6476 = !DILocation(line: 753, column: 8, scope: !6447)
!6477 = !DILocation(line: 753, column: 13, scope: !6447)
!6478 = !DILocation(line: 754, column: 15, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6447, file: !2823, line: 754, column: 7)
!6480 = !DILocation(line: 755, column: 7, scope: !6479)
!6481 = !DILocation(line: 755, column: 10, scope: !6479)
!6482 = !DILocation(line: 756, column: 7, scope: !6479)
!6483 = !DILocation(line: 756, column: 10, scope: !6479)
!6484 = !DILocation(line: 756, column: 29, scope: !6479)
!6485 = !DILocation(line: 754, column: 7, scope: !6447)
!6486 = !DILocation(line: 757, column: 22, scope: !6479)
!6487 = !DILocation(line: 757, column: 28, scope: !6479)
!6488 = !DILocation(line: 757, column: 15, scope: !6479)
!6489 = !DILocation(line: 757, column: 5, scope: !6479)
!6490 = !DILocation(line: 758, column: 8, scope: !6447)
!6491 = !DILocation(line: 758, column: 13, scope: !6447)
!6492 = !DILocation(line: 760, column: 8, scope: !6447)
!6493 = !DILocation(line: 760, column: 14, scope: !6447)
!6494 = !DILocation(line: 761, column: 8, scope: !6447)
!6495 = !DILocation(line: 761, column: 16, scope: !6447)
!6496 = !DILocation(line: 762, column: 8, scope: !6447)
!6497 = !DILocation(line: 762, column: 17, scope: !6447)
!6498 = !DILocation(line: 763, column: 1, scope: !6447)
!6499 = distinct !DISubprogram(name: "gimple_def_ops", scope: !402, file: !402, line: 1292, type: !6500, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6502)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{!842, !2552}
!6502 = !{!6503}
!6503 = !DILocalVariable(name: "g", arg: 1, scope: !6499, file: !402, line: 1292, type: !2552)
!6504 = !DILocation(line: 0, scope: !6499)
!6505 = !DILocation(line: 1294, column: 8, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6499, file: !402, line: 1294, column: 7)
!6507 = !DILocation(line: 1294, column: 7, scope: !6499)
!6508 = !DILocation(line: 1296, column: 26, scope: !6499)
!6509 = !DILocation(line: 1296, column: 3, scope: !6499)
!6510 = !DILocation(line: 1297, column: 1, scope: !6499)
!6511 = distinct !DISubprogram(name: "gimple_vdef", scope: !402, file: !402, line: 1375, type: !2853, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6512)
!6512 = !{!6513}
!6513 = !DILocalVariable(name: "g", arg: 1, scope: !6511, file: !402, line: 1375, type: !2552)
!6514 = !DILocation(line: 0, scope: !6511)
!6515 = !DILocation(line: 1377, column: 8, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6511, file: !402, line: 1377, column: 7)
!6517 = !DILocation(line: 1377, column: 7, scope: !6511)
!6518 = !DILocation(line: 1379, column: 23, scope: !6511)
!6519 = !DILocation(line: 1379, column: 3, scope: !6511)
!6520 = !DILocation(line: 1380, column: 1, scope: !6511)
!6521 = distinct !DISubprogram(name: "gimple_use_ops", scope: !402, file: !402, line: 1313, type: !6522, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6524)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{!849, !2552}
!6524 = !{!6525}
!6525 = !DILocalVariable(name: "g", arg: 1, scope: !6521, file: !402, line: 1313, type: !2552)
!6526 = !DILocation(line: 0, scope: !6521)
!6527 = !DILocation(line: 1315, column: 8, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6521, file: !402, line: 1315, column: 7)
!6529 = !DILocation(line: 1315, column: 7, scope: !6521)
!6530 = !DILocation(line: 1317, column: 26, scope: !6521)
!6531 = !DILocation(line: 1317, column: 3, scope: !6521)
!6532 = !DILocation(line: 1318, column: 1, scope: !6521)
!6533 = distinct !DISubprogram(name: "execute_load_motion", scope: !3, file: !3, line: 1611, type: !6534, scopeLine: 1612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{null, !1028, !1911, !1383}
!6536 = !{!6537, !6538, !6539, !6540, !6541, !6542, !6543, !6544, !6545, !6546}
!6537 = !DILocalVariable(name: "loop", arg: 1, scope: !6533, file: !3, line: 1611, type: !1028)
!6538 = !DILocalVariable(name: "chain", arg: 2, scope: !6533, file: !3, line: 1611, type: !1911)
!6539 = !DILocalVariable(name: "tmp_vars", arg: 3, scope: !6533, file: !3, line: 1611, type: !1383)
!6540 = !DILocalVariable(name: "vars", scope: !6533, file: !3, line: 1613, type: !1867)
!6541 = !DILocalVariable(name: "a", scope: !6533, file: !3, line: 1614, type: !1841)
!6542 = !DILocalVariable(name: "n_writes", scope: !6533, file: !3, line: 1615, type: !7)
!6543 = !DILocalVariable(name: "ridx", scope: !6533, file: !3, line: 1615, type: !7)
!6544 = !DILocalVariable(name: "i", scope: !6533, file: !3, line: 1615, type: !7)
!6545 = !DILocalVariable(name: "var", scope: !6533, file: !3, line: 1616, type: !489)
!6546 = !DILocalVariable(name: "is_read", scope: !6547, file: !3, line: 1634, type: !481)
!6547 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 1633, column: 5)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 1632, column: 3)
!6549 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 1632, column: 3)
!6550 = !DILocation(line: 0, scope: !6533)
!6551 = !DILocation(line: 1613, column: 3, scope: !6533)
!6552 = !DILocation(line: 1614, column: 3, scope: !6533)
!6553 = !DILocation(line: 1618, column: 3, scope: !6533)
!6554 = !DILocation(line: 1619, column: 3, scope: !6533)
!6555 = !DILocation(line: 0, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 1620, column: 3)
!6557 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 1620, column: 3)
!6558 = !DILocation(line: 1620, column: 8, scope: !6557)
!6559 = !DILocation(line: 1615, column: 12, scope: !6533)
!6560 = !DILocation(line: 0, scope: !6557)
!6561 = !DILocation(line: 1620, column: 15, scope: !6556)
!6562 = !DILocation(line: 1620, column: 3, scope: !6557)
!6563 = !DILocation(line: 1621, column: 10, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 1621, column: 9)
!6565 = !DILocation(line: 1621, column: 9, scope: !6556)
!6566 = !DILocation(line: 1620, column: 55, scope: !6556)
!6567 = !DILocation(line: 1620, column: 3, scope: !6556)
!6568 = distinct !{!6568, !6562, !6569}
!6569 = !DILocation(line: 1622, column: 15, scope: !6557)
!6570 = !DILocation(line: 1625, column: 19, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 1625, column: 7)
!6572 = !DILocation(line: 1625, column: 16, scope: !6571)
!6573 = !DILocation(line: 1625, column: 7, scope: !6533)
!6574 = !DILocation(line: 1628, column: 34, scope: !6533)
!6575 = !DILocation(line: 1628, column: 67, scope: !6533)
!6576 = !DILocation(line: 1628, column: 58, scope: !6533)
!6577 = !DILocation(line: 1629, column: 21, scope: !6533)
!6578 = !DILocation(line: 1628, column: 3, scope: !6533)
!6579 = !DILocation(line: 1632, column: 8, scope: !6549)
!6580 = !DILocation(line: 1631, column: 8, scope: !6533)
!6581 = !DILocation(line: 0, scope: !6549)
!6582 = !DILocation(line: 1632, column: 15, scope: !6548)
!6583 = !DILocation(line: 1632, column: 3, scope: !6549)
!6584 = !DILocation(line: 1634, column: 22, scope: !6547)
!6585 = !DILocation(line: 0, scope: !6547)
!6586 = !DILocation(line: 1635, column: 41, scope: !6547)
!6587 = !DILocation(line: 1635, column: 7, scope: !6547)
!6588 = !DILocation(line: 1637, column: 12, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 1637, column: 11)
!6590 = !DILocation(line: 1637, column: 11, scope: !6547)
!6591 = !DILocation(line: 1639, column: 12, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 1638, column: 2)
!6593 = !DILocation(line: 1640, column: 8, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 1640, column: 8)
!6595 = !DILocation(line: 1640, column: 8, scope: !6592)
!6596 = !DILocation(line: 1642, column: 14, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 1641, column: 6)
!6598 = !DILocation(line: 1643, column: 29, scope: !6597)
!6599 = !DILocation(line: 1643, column: 14, scope: !6597)
!6600 = !DILocation(line: 1644, column: 8, scope: !6597)
!6601 = !DILocation(line: 1650, column: 25, scope: !6547)
!6602 = !DILocation(line: 1645, column: 6, scope: !6597)
!6603 = !DILocation(line: 1650, column: 28, scope: !6547)
!6604 = !DILocation(line: 1650, column: 34, scope: !6547)
!6605 = !DILocation(line: 1651, column: 4, scope: !6547)
!6606 = !DILocation(line: 1650, column: 7, scope: !6547)
!6607 = !DILocation(line: 1632, column: 55, scope: !6548)
!6608 = !DILocation(line: 1632, column: 3, scope: !6548)
!6609 = distinct !{!6609, !6583, !6610}
!6610 = !DILocation(line: 1652, column: 5, scope: !6549)
!6611 = !DILocation(line: 1654, column: 3, scope: !6533)
!6612 = !DILocation(line: 1655, column: 1, scope: !6533)
!6613 = distinct !DISubprogram(name: "execute_pred_commoning_chain", scope: !3, file: !3, line: 1744, type: !6534, scopeLine: 1746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6614)
!6614 = !{!6615, !6616, !6617, !6618, !6619, !6620, !6621}
!6615 = !DILocalVariable(name: "loop", arg: 1, scope: !6613, file: !3, line: 1744, type: !1028)
!6616 = !DILocalVariable(name: "chain", arg: 2, scope: !6613, file: !3, line: 1744, type: !1911)
!6617 = !DILocalVariable(name: "tmp_vars", arg: 3, scope: !6613, file: !3, line: 1745, type: !1383)
!6618 = !DILocalVariable(name: "i", scope: !6613, file: !3, line: 1747, type: !7)
!6619 = !DILocalVariable(name: "a", scope: !6613, file: !3, line: 1748, type: !1841)
!6620 = !DILocalVariable(name: "root", scope: !6613, file: !3, line: 1748, type: !1841)
!6621 = !DILocalVariable(name: "var", scope: !6613, file: !3, line: 1749, type: !489)
!6622 = !DILocation(line: 0, scope: !6613)
!6623 = !DILocation(line: 1748, column: 3, scope: !6613)
!6624 = !DILocation(line: 1751, column: 14, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 1751, column: 7)
!6626 = !DILocation(line: 1751, column: 7, scope: !6625)
!6627 = !DILocation(line: 1751, column: 7, scope: !6613)
!6628 = !DILocation(line: 0, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 1755, column: 7)
!6630 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 1755, column: 7)
!6631 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 1752, column: 5)
!6632 = !DILocation(line: 1755, column: 7, scope: !6630)
!6633 = !DILocation(line: 0, scope: !6630)
!6634 = !DILocation(line: 1755, column: 19, scope: !6629)
!6635 = !DILocation(line: 1756, column: 15, scope: !6629)
!6636 = !DILocation(line: 1756, column: 18, scope: !6629)
!6637 = !DILocation(line: 1756, column: 2, scope: !6629)
!6638 = !DILocation(line: 1755, column: 59, scope: !6629)
!6639 = !DILocation(line: 1755, column: 7, scope: !6629)
!6640 = distinct !{!6640, !6632, !6641}
!6641 = !DILocation(line: 1756, column: 22, scope: !6630)
!6642 = !DILocation(line: 1763, column: 14, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 1759, column: 5)
!6644 = !DILocation(line: 1764, column: 44, scope: !6643)
!6645 = !DILocation(line: 1764, column: 7, scope: !6643)
!6646 = !DILocation(line: 1766, column: 7, scope: !6643)
!6647 = !DILocation(line: 0, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 1767, column: 7)
!6649 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 1767, column: 7)
!6650 = !DILocation(line: 0, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 1768, column: 2)
!6652 = !DILocation(line: 1767, column: 12, scope: !6649)
!6653 = !DILocation(line: 0, scope: !6649)
!6654 = !DILocation(line: 1767, column: 19, scope: !6648)
!6655 = !DILocation(line: 1767, column: 7, scope: !6649)
!6656 = !DILocation(line: 1769, column: 35, scope: !6651)
!6657 = !DILocation(line: 1769, column: 38, scope: !6651)
!6658 = !DILocation(line: 1769, column: 4, scope: !6651)
!6659 = !DILocation(line: 1770, column: 10, scope: !6651)
!6660 = !DILocation(line: 1771, column: 22, scope: !6651)
!6661 = !DILocation(line: 1771, column: 25, scope: !6651)
!6662 = !DILocation(line: 1771, column: 4, scope: !6651)
!6663 = !DILocation(line: 1767, column: 59, scope: !6648)
!6664 = !DILocation(line: 1767, column: 7, scope: !6648)
!6665 = distinct !{!6665, !6655, !6666}
!6666 = !DILocation(line: 1772, column: 2, scope: !6649)
!6667 = !DILocation(line: 1774, column: 1, scope: !6613)
!6668 = distinct !DISubprogram(name: "initialize_root_vars_lm", scope: !3, file: !3, line: 1561, type: !6669, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6671)
!6669 = !DISubroutineType(types: !6670)
!6670 = !{null, !1028, !1841, !481, !5009, !1867, !1383}
!6671 = !{!6672, !6673, !6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6684, !6685, !6686, !6687}
!6672 = !DILocalVariable(name: "loop", arg: 1, scope: !6668, file: !3, line: 1561, type: !1028)
!6673 = !DILocalVariable(name: "root", arg: 2, scope: !6668, file: !3, line: 1561, type: !1841)
!6674 = !DILocalVariable(name: "written", arg: 3, scope: !6668, file: !3, line: 1561, type: !481)
!6675 = !DILocalVariable(name: "vars", arg: 4, scope: !6668, file: !3, line: 1562, type: !5009)
!6676 = !DILocalVariable(name: "inits", arg: 5, scope: !6668, file: !3, line: 1562, type: !1867)
!6677 = !DILocalVariable(name: "tmp_vars", arg: 6, scope: !6668, file: !3, line: 1563, type: !1383)
!6678 = !DILocalVariable(name: "i", scope: !6668, file: !3, line: 1565, type: !7)
!6679 = !DILocalVariable(name: "ref", scope: !6668, file: !3, line: 1566, type: !489)
!6680 = !DILocalVariable(name: "init", scope: !6668, file: !3, line: 1566, type: !489)
!6681 = !DILocalVariable(name: "var", scope: !6668, file: !3, line: 1566, type: !489)
!6682 = !DILocalVariable(name: "next", scope: !6668, file: !3, line: 1566, type: !489)
!6683 = !DILocalVariable(name: "stmts", scope: !6668, file: !3, line: 1567, type: !803)
!6684 = !DILocalVariable(name: "phi", scope: !6668, file: !3, line: 1568, type: !813)
!6685 = !DILocalVariable(name: "entry", scope: !6668, file: !3, line: 1569, type: !793)
!6686 = !DILocalVariable(name: "latch", scope: !6668, file: !3, line: 1569, type: !793)
!6687 = !DILocalVariable(name: "init_stmt", scope: !6688, file: !3, line: 1600, type: !813)
!6688 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1599, column: 5)
!6689 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1590, column: 7)
!6690 = !DILocation(line: 0, scope: !6668)
!6691 = !DILocation(line: 1566, column: 14, scope: !6668)
!6692 = !DILocation(line: 1566, column: 3, scope: !6668)
!6693 = !DILocation(line: 1567, column: 3, scope: !6668)
!6694 = !DILocation(line: 1569, column: 16, scope: !6668)
!6695 = !DILocation(line: 1569, column: 52, scope: !6668)
!6696 = !DILocation(line: 1573, column: 10, scope: !6668)
!6697 = !DILocation(line: 1575, column: 11, scope: !6668)
!6698 = !DILocation(line: 1575, column: 9, scope: !6668)
!6699 = !DILocation(line: 1576, column: 9, scope: !6668)
!6700 = !DILocation(line: 1576, column: 7, scope: !6668)
!6701 = !DILocation(line: 1577, column: 3, scope: !6668)
!6702 = !DILocation(line: 1578, column: 7, scope: !6668)
!6703 = !DILocation(line: 1579, column: 5, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1578, column: 7)
!6705 = !DILocation(line: 1581, column: 8, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1581, column: 3)
!6707 = !DILocation(line: 0, scope: !6706)
!6708 = !DILocation(line: 1581, column: 15, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 1581, column: 3)
!6710 = !DILocation(line: 1581, column: 3, scope: !6706)
!6711 = !DILocation(line: 1582, column: 5, scope: !6709)
!6712 = !DILocation(line: 1581, column: 51, scope: !6709)
!6713 = !DILocation(line: 1581, column: 3, scope: !6709)
!6714 = distinct !{!6714, !6710, !6715}
!6715 = !DILocation(line: 1582, column: 5, scope: !6706)
!6716 = !DILocation(line: 1584, column: 9, scope: !6668)
!6717 = !DILocation(line: 1584, column: 7, scope: !6668)
!6718 = !DILocation(line: 1586, column: 10, scope: !6668)
!6719 = !DILocation(line: 1587, column: 7, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1587, column: 7)
!6721 = !DILocation(line: 1587, column: 7, scope: !6668)
!6722 = !DILocation(line: 1588, column: 5, scope: !6720)
!6723 = !DILocation(line: 1590, column: 7, scope: !6668)
!6724 = !DILocation(line: 1592, column: 14, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1591, column: 5)
!6726 = !DILocation(line: 1593, column: 30, scope: !6725)
!6727 = !DILocation(line: 1593, column: 41, scope: !6725)
!6728 = !DILocation(line: 1593, column: 13, scope: !6725)
!6729 = !DILocation(line: 1594, column: 7, scope: !6725)
!6730 = !DILocation(line: 1594, column: 31, scope: !6725)
!6731 = !DILocation(line: 1595, column: 7, scope: !6725)
!6732 = !DILocation(line: 1596, column: 7, scope: !6725)
!6733 = !DILocation(line: 1597, column: 5, scope: !6725)
!6734 = !DILocation(line: 1600, column: 26, scope: !6688)
!6735 = !DILocation(line: 0, scope: !6688)
!6736 = !DILocation(line: 1601, column: 7, scope: !6688)
!6737 = !DILocation(line: 1602, column: 7, scope: !6688)
!6738 = !DILocation(line: 1604, column: 1, scope: !6668)
!6739 = distinct !DISubprogram(name: "replace_ref_with", scope: !3, file: !3, line: 1252, type: !6740, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6742)
!6740 = !DISubroutineType(types: !6741)
!6741 = !{null, !813, !489, !481, !481}
!6742 = !{!6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750}
!6743 = !DILocalVariable(name: "stmt", arg: 1, scope: !6739, file: !3, line: 1252, type: !813)
!6744 = !DILocalVariable(name: "new_tree", arg: 2, scope: !6739, file: !3, line: 1252, type: !489)
!6745 = !DILocalVariable(name: "set", arg: 3, scope: !6739, file: !3, line: 1252, type: !481)
!6746 = !DILocalVariable(name: "in_lhs", arg: 4, scope: !6739, file: !3, line: 1252, type: !481)
!6747 = !DILocalVariable(name: "val", scope: !6739, file: !3, line: 1254, type: !489)
!6748 = !DILocalVariable(name: "new_stmt", scope: !6739, file: !3, line: 1255, type: !813)
!6749 = !DILocalVariable(name: "bsi", scope: !6739, file: !3, line: 1256, type: !3767)
!6750 = !DILocalVariable(name: "psi", scope: !6739, file: !3, line: 1256, type: !3767)
!6751 = !DILocation(line: 0, scope: !6739)
!6752 = !DILocation(line: 1256, column: 3, scope: !6739)
!6753 = !DILocation(line: 1258, column: 7, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1258, column: 7)
!6755 = !DILocation(line: 1258, column: 26, scope: !6754)
!6756 = !DILocation(line: 1258, column: 7, scope: !6739)
!6757 = !DILocation(line: 1260, column: 7, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 1259, column: 5)
!6759 = !DILocation(line: 1262, column: 13, scope: !6758)
!6760 = !DILocation(line: 1263, column: 13, scope: !6758)
!6761 = !DILocation(line: 1263, column: 31, scope: !6758)
!6762 = !DILocation(line: 1264, column: 13, scope: !6758)
!6763 = !DILocation(line: 1265, column: 7, scope: !6758)
!6764 = !DILocation(line: 1268, column: 18, scope: !6758)
!6765 = !DILocation(line: 1269, column: 7, scope: !6758)
!6766 = !DILocation(line: 1270, column: 7, scope: !6758)
!6767 = !DILocation(line: 1275, column: 3, scope: !6739)
!6768 = !DILocation(line: 1277, column: 9, scope: !6739)
!6769 = !DILocation(line: 1280, column: 8, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1280, column: 7)
!6771 = !DILocation(line: 1280, column: 7, scope: !6739)
!6772 = !DILocation(line: 1282, column: 7, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 1281, column: 5)
!6774 = !DILocation(line: 1283, column: 7, scope: !6773)
!6775 = !DILocation(line: 1284, column: 14, scope: !6773)
!6776 = !DILocation(line: 1285, column: 7, scope: !6773)
!6777 = !DILocation(line: 1286, column: 7, scope: !6773)
!6778 = !DILocation(line: 0, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1289, column: 7)
!6780 = !DILocation(line: 1289, column: 7, scope: !6739)
!6781 = !DILocation(line: 1311, column: 11, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 1311, column: 11)
!6783 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 1290, column: 5)
!6784 = !DILocation(line: 1311, column: 27, scope: !6782)
!6785 = !DILocation(line: 1311, column: 11, scope: !6783)
!6786 = !DILocation(line: 1313, column: 4, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 1312, column: 2)
!6788 = !DILocation(line: 1314, column: 10, scope: !6787)
!6789 = !DILocation(line: 1315, column: 2, scope: !6787)
!6790 = !DILocation(line: 1329, column: 14, scope: !6739)
!6791 = !DILocation(line: 1330, column: 3, scope: !6739)
!6792 = !DILocation(line: 1331, column: 1, scope: !6739)
!6793 = distinct !DISubprogram(name: "predcom_tmp_var", scope: !3, file: !3, line: 1465, type: !6794, scopeLine: 1466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6796)
!6794 = !DISubroutineType(types: !6795)
!6795 = !{!489, !489, !7, !1383}
!6796 = !{!6797, !6798, !6799, !6800, !6801}
!6797 = !DILocalVariable(name: "ref", arg: 1, scope: !6793, file: !3, line: 1465, type: !489)
!6798 = !DILocalVariable(name: "i", arg: 2, scope: !6793, file: !3, line: 1465, type: !7)
!6799 = !DILocalVariable(name: "tmp_vars", arg: 3, scope: !6793, file: !3, line: 1465, type: !1383)
!6800 = !DILocalVariable(name: "type", scope: !6793, file: !3, line: 1467, type: !489)
!6801 = !DILocalVariable(name: "var", scope: !6793, file: !3, line: 1468, type: !489)
!6802 = !DILocation(line: 0, scope: !6793)
!6803 = !DILocation(line: 1467, column: 15, scope: !6793)
!6804 = !DILocation(line: 1468, column: 36, scope: !6793)
!6805 = !DILocation(line: 1468, column: 14, scope: !6793)
!6806 = !DILocation(line: 1472, column: 7, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 1472, column: 7)
!6808 = !DILocation(line: 1472, column: 24, scope: !6807)
!6809 = !DILocation(line: 1473, column: 7, scope: !6807)
!6810 = !DILocation(line: 1473, column: 27, scope: !6807)
!6811 = !DILocation(line: 1472, column: 7, scope: !6793)
!6812 = !DILocation(line: 1474, column: 5, scope: !6807)
!6813 = !DILocation(line: 1474, column: 29, scope: !6807)
!6814 = !DILocation(line: 1476, column: 3, scope: !6793)
!6815 = !DILocation(line: 1477, column: 29, scope: !6793)
!6816 = !DILocation(line: 1477, column: 3, scope: !6793)
!6817 = !DILocation(line: 1478, column: 3, scope: !6793)
!6818 = distinct !DISubprogram(name: "gsi_after_labels", scope: !402, file: !402, line: 4510, type: !6819, scopeLine: 4511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6821)
!6819 = !DISubroutineType(types: !6820)
!6820 = !{!3767, !1265}
!6821 = !{!6822, !6823}
!6822 = !DILocalVariable(name: "bb", arg: 1, scope: !6818, file: !402, line: 4510, type: !1265)
!6823 = !DILocalVariable(name: "gsi", scope: !6818, file: !402, line: 4512, type: !3767)
!6824 = !DILocation(line: 0, scope: !6818)
!6825 = !DILocation(line: 4512, column: 24, scope: !6818)
!6826 = !DILocation(line: 4512, column: 30, scope: !6818)
!6827 = !DILocation(line: 4514, column: 3, scope: !6818)
!6828 = !DILocation(line: 4514, column: 11, scope: !6818)
!6829 = !DILocation(line: 4514, column: 27, scope: !6818)
!6830 = !DILocation(line: 4514, column: 43, scope: !6818)
!6831 = !DILocation(line: 4514, column: 30, scope: !6818)
!6832 = !DILocation(line: 4514, column: 59, scope: !6818)
!6833 = !DILocation(line: 4515, column: 5, scope: !6818)
!6834 = distinct !{!6834, !6827, !6835}
!6835 = !DILocation(line: 4515, column: 19, scope: !6818)
!6836 = !DILocation(line: 4517, column: 3, scope: !6818)
!6837 = distinct !DISubprogram(name: "gsi_start_bb", scope: !402, file: !402, line: 4418, type: !6819, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6838)
!6838 = !{!6839, !6840, !6841}
!6839 = !DILocalVariable(name: "bb", arg: 1, scope: !6837, file: !402, line: 4418, type: !1265)
!6840 = !DILocalVariable(name: "i", scope: !6837, file: !402, line: 4420, type: !3767)
!6841 = !DILocalVariable(name: "seq", scope: !6837, file: !402, line: 4421, type: !803)
!6842 = !DILocation(line: 0, scope: !6837)
!6843 = !DILocation(line: 4420, column: 24, scope: !6837)
!6844 = !DILocation(line: 4423, column: 9, scope: !6837)
!6845 = !DILocation(line: 4424, column: 11, scope: !6837)
!6846 = !DILocation(line: 4424, column: 5, scope: !6837)
!6847 = !DILocation(line: 4424, column: 9, scope: !6837)
!6848 = !DILocation(line: 4425, column: 5, scope: !6837)
!6849 = !DILocation(line: 4425, column: 9, scope: !6837)
!6850 = !DILocation(line: 4426, column: 5, scope: !6837)
!6851 = !DILocation(line: 4426, column: 8, scope: !6837)
!6852 = !DILocation(line: 4429, column: 1, scope: !6837)
!6853 = distinct !DISubprogram(name: "bb_seq", scope: !402, file: !402, line: 237, type: !6854, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6856)
!6854 = !DISubroutineType(types: !6855)
!6855 = !{!803, !6038}
!6856 = !{!6857}
!6857 = !DILocalVariable(name: "bb", arg: 1, scope: !6853, file: !402, line: 237, type: !6038)
!6858 = !DILocation(line: 0, scope: !6853)
!6859 = !DILocation(line: 239, column: 17, scope: !6853)
!6860 = !DILocation(line: 239, column: 23, scope: !6853)
!6861 = !DILocation(line: 239, column: 33, scope: !6853)
!6862 = !DILocation(line: 239, column: 43, scope: !6853)
!6863 = !DILocation(line: 239, column: 36, scope: !6853)
!6864 = !DILocation(line: 239, column: 10, scope: !6853)
!6865 = !DILocation(line: 239, column: 68, scope: !6853)
!6866 = !DILocation(line: 239, column: 3, scope: !6853)
!6867 = distinct !DISubprogram(name: "gimple_seq_first", scope: !402, file: !402, line: 159, type: !6868, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6873)
!6868 = !DISubroutineType(types: !6869)
!6869 = !{!808, !6870}
!6870 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !490, line: 67, baseType: !6871)
!6871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6872, size: 64)
!6872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !805)
!6873 = !{!6874}
!6874 = !DILocalVariable(name: "s", arg: 1, scope: !6867, file: !402, line: 159, type: !6870)
!6875 = !DILocation(line: 0, scope: !6867)
!6876 = !DILocation(line: 161, column: 10, scope: !6867)
!6877 = !DILocation(line: 161, column: 17, scope: !6867)
!6878 = !DILocation(line: 161, column: 3, scope: !6867)
!6879 = distinct !DISubprogram(name: "remove_stmt", scope: !3, file: !3, line: 1695, type: !2790, scopeLine: 1696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6880)
!6880 = !{!6881, !6882, !6883, !6884, !6885}
!6881 = !DILocalVariable(name: "stmt", arg: 1, scope: !6879, file: !3, line: 1695, type: !813)
!6882 = !DILocalVariable(name: "name", scope: !6879, file: !3, line: 1697, type: !489)
!6883 = !DILocalVariable(name: "next", scope: !6879, file: !3, line: 1698, type: !813)
!6884 = !DILocalVariable(name: "psi", scope: !6879, file: !3, line: 1699, type: !3767)
!6885 = !DILocalVariable(name: "bsi", scope: !6886, file: !3, line: 1718, type: !3767)
!6886 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 1717, column: 5)
!6887 = !DILocation(line: 0, scope: !6879)
!6888 = !DILocation(line: 1699, column: 3, scope: !6879)
!6889 = !DILocation(line: 1701, column: 7, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 1701, column: 7)
!6891 = !DILocation(line: 1701, column: 26, scope: !6890)
!6892 = !DILocation(line: 1701, column: 7, scope: !6879)
!6893 = !DILocation(line: 1703, column: 14, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 1702, column: 5)
!6895 = !DILocation(line: 1704, column: 14, scope: !6894)
!6896 = !DILocation(line: 1705, column: 13, scope: !6894)
!6897 = !DILocation(line: 1706, column: 7, scope: !6894)
!6898 = !DILocation(line: 1708, column: 12, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 1708, column: 11)
!6900 = !DILocation(line: 1709, column: 4, scope: !6899)
!6901 = !DILocation(line: 1709, column: 8, scope: !6899)
!6902 = !DILocation(line: 1710, column: 4, scope: !6899)
!6903 = !DILocation(line: 1710, column: 7, scope: !6899)
!6904 = !DILocation(line: 1710, column: 33, scope: !6899)
!6905 = !DILocation(line: 1708, column: 11, scope: !6894)
!6906 = !DILocation(line: 0, scope: !6886)
!6907 = !DILocation(line: 1716, column: 3, scope: !6879)
!6908 = !DILocation(line: 1713, column: 12, scope: !6894)
!6909 = !DILocation(line: 1718, column: 7, scope: !6886)
!6910 = !DILocation(line: 1720, column: 13, scope: !6886)
!6911 = !DILocation(line: 1722, column: 14, scope: !6886)
!6912 = !DILocation(line: 1723, column: 7, scope: !6886)
!6913 = !DILocation(line: 1725, column: 14, scope: !6886)
!6914 = !DILocation(line: 1727, column: 7, scope: !6886)
!6915 = !DILocation(line: 1728, column: 7, scope: !6886)
!6916 = !DILocation(line: 1729, column: 7, scope: !6886)
!6917 = !DILocation(line: 1731, column: 12, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 1731, column: 11)
!6919 = !DILocation(line: 1732, column: 4, scope: !6918)
!6920 = !DILocation(line: 1732, column: 8, scope: !6918)
!6921 = !DILocation(line: 1733, column: 4, scope: !6918)
!6922 = !DILocation(line: 1733, column: 7, scope: !6918)
!6923 = !DILocation(line: 1733, column: 33, scope: !6918)
!6924 = !DILocation(line: 1731, column: 11, scope: !6886)
!6925 = !DILocation(line: 1737, column: 5, scope: !6879)
!6926 = distinct !{!6926, !6907, !6925}
!6927 = !DILocation(line: 1738, column: 1, scope: !6879)
!6928 = distinct !DISubprogram(name: "initialize_root", scope: !3, file: !3, line: 1541, type: !6534, scopeLine: 1542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6929)
!6929 = !{!6930, !6931, !6932, !6933, !6934}
!6930 = !DILocalVariable(name: "loop", arg: 1, scope: !6928, file: !3, line: 1541, type: !1028)
!6931 = !DILocalVariable(name: "chain", arg: 2, scope: !6928, file: !3, line: 1541, type: !1911)
!6932 = !DILocalVariable(name: "tmp_vars", arg: 3, scope: !6928, file: !3, line: 1541, type: !1383)
!6933 = !DILocalVariable(name: "root", scope: !6928, file: !3, line: 1543, type: !1841)
!6934 = !DILocalVariable(name: "in_lhs", scope: !6928, file: !3, line: 1544, type: !481)
!6935 = !DILocation(line: 0, scope: !6928)
!6936 = !DILocation(line: 1543, column: 15, scope: !6928)
!6937 = !DILocation(line: 1544, column: 25, scope: !6928)
!6938 = !DILocation(line: 1544, column: 30, scope: !6928)
!6939 = !DILocation(line: 1545, column: 4, scope: !6928)
!6940 = !DILocation(line: 1545, column: 19, scope: !6928)
!6941 = !DILocation(line: 1547, column: 3, scope: !6928)
!6942 = !DILocation(line: 1548, column: 27, scope: !6928)
!6943 = !DILocation(line: 1549, column: 7, scope: !6928)
!6944 = !DILocation(line: 1548, column: 3, scope: !6928)
!6945 = !DILocation(line: 1551, column: 1, scope: !6928)
!6946 = distinct !DISubprogram(name: "initialize_root_vars", scope: !3, file: !3, line: 1486, type: !6534, scopeLine: 1487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6947)
!6947 = !{!6948, !6949, !6950, !6951, !6952, !6953, !6954, !6955, !6956, !6957, !6958, !6959, !6960, !6961, !6962}
!6948 = !DILocalVariable(name: "loop", arg: 1, scope: !6946, file: !3, line: 1486, type: !1028)
!6949 = !DILocalVariable(name: "chain", arg: 2, scope: !6946, file: !3, line: 1486, type: !1911)
!6950 = !DILocalVariable(name: "tmp_vars", arg: 3, scope: !6946, file: !3, line: 1486, type: !1383)
!6951 = !DILocalVariable(name: "i", scope: !6946, file: !3, line: 1488, type: !7)
!6952 = !DILocalVariable(name: "n", scope: !6946, file: !3, line: 1489, type: !7)
!6953 = !DILocalVariable(name: "root", scope: !6946, file: !3, line: 1490, type: !1841)
!6954 = !DILocalVariable(name: "reuse_first", scope: !6946, file: !3, line: 1491, type: !481)
!6955 = !DILocalVariable(name: "ref", scope: !6946, file: !3, line: 1492, type: !489)
!6956 = !DILocalVariable(name: "init", scope: !6946, file: !3, line: 1492, type: !489)
!6957 = !DILocalVariable(name: "var", scope: !6946, file: !3, line: 1492, type: !489)
!6958 = !DILocalVariable(name: "next", scope: !6946, file: !3, line: 1492, type: !489)
!6959 = !DILocalVariable(name: "phi", scope: !6946, file: !3, line: 1493, type: !813)
!6960 = !DILocalVariable(name: "stmts", scope: !6946, file: !3, line: 1494, type: !803)
!6961 = !DILocalVariable(name: "entry", scope: !6946, file: !3, line: 1495, type: !793)
!6962 = !DILocalVariable(name: "latch", scope: !6946, file: !3, line: 1495, type: !793)
!6963 = !DILocation(line: 0, scope: !6946)
!6964 = !DILocation(line: 1489, column: 23, scope: !6946)
!6965 = !DILocation(line: 1490, column: 15, scope: !6946)
!6966 = !DILocation(line: 1491, column: 30, scope: !6946)
!6967 = !DILocation(line: 1491, column: 22, scope: !6946)
!6968 = !DILocation(line: 1492, column: 3, scope: !6946)
!6969 = !DILocation(line: 1494, column: 3, scope: !6946)
!6970 = !DILocation(line: 1495, column: 16, scope: !6946)
!6971 = !DILocation(line: 1495, column: 52, scope: !6946)
!6972 = !DILocation(line: 1499, column: 3, scope: !6946)
!6973 = !DILocation(line: 1501, column: 17, scope: !6946)
!6974 = !DILocation(line: 1501, column: 10, scope: !6946)
!6975 = !DILocation(line: 1501, column: 15, scope: !6946)
!6976 = !DILocation(line: 1503, column: 14, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 1503, column: 7)
!6978 = !DILocation(line: 1503, column: 19, scope: !6977)
!6979 = !DILocation(line: 1503, column: 7, scope: !6946)
!6980 = !DILocation(line: 1504, column: 36, scope: !6977)
!6981 = !DILocation(line: 1504, column: 11, scope: !6977)
!6982 = !DILocation(line: 1504, column: 5, scope: !6977)
!6983 = !DILocation(line: 1506, column: 11, scope: !6977)
!6984 = !DILocation(line: 0, scope: !6977)
!6985 = !DILocation(line: 0, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 1508, column: 3)
!6987 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 1508, column: 3)
!6988 = !DILocation(line: 1508, column: 8, scope: !6987)
!6989 = !DILocation(line: 0, scope: !6987)
!6990 = !DILocation(line: 1508, column: 17, scope: !6986)
!6991 = !DILocation(line: 1508, column: 3, scope: !6987)
!6992 = !DILocation(line: 1510, column: 13, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 1509, column: 5)
!6994 = !DILocation(line: 1510, column: 11, scope: !6993)
!6995 = !DILocation(line: 1511, column: 7, scope: !6993)
!6996 = !DILocation(line: 1508, column: 47, scope: !6986)
!6997 = !DILocation(line: 1508, column: 3, scope: !6986)
!6998 = distinct !{!6998, !6991, !6999}
!6999 = !DILocation(line: 1512, column: 5, scope: !6987)
!7000 = !DILocation(line: 1513, column: 7, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 1513, column: 7)
!7002 = !DILocation(line: 1513, column: 7, scope: !6946)
!7003 = !DILocation(line: 1514, column: 5, scope: !7001)
!7004 = !DILocation(line: 1516, column: 8, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 1516, column: 3)
!7006 = !DILocation(line: 0, scope: !7005)
!7007 = !DILocation(line: 1516, column: 15, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 1516, column: 3)
!7009 = !DILocation(line: 1516, column: 3, scope: !7005)
!7010 = !DILocation(line: 0, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 1520, column: 5)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 1519, column: 3)
!7013 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 1519, column: 3)
!7014 = !DILocation(line: 1519, column: 3, scope: !7013)
!7015 = !DILocation(line: 1517, column: 5, scope: !7008)
!7016 = !DILocation(line: 1516, column: 57, scope: !7008)
!7017 = !DILocation(line: 1516, column: 3, scope: !7008)
!7018 = distinct !{!7018, !7009, !7019}
!7019 = !DILocation(line: 1517, column: 5, scope: !7005)
!7020 = !DILocation(line: 0, scope: !7013)
!7021 = !DILocation(line: 1519, column: 17, scope: !7012)
!7022 = !DILocation(line: 1521, column: 13, scope: !7011)
!7023 = !DILocation(line: 1521, column: 11, scope: !7011)
!7024 = !DILocation(line: 1522, column: 14, scope: !7011)
!7025 = !DILocation(line: 1523, column: 14, scope: !7011)
!7026 = !DILocation(line: 1525, column: 14, scope: !7011)
!7027 = !DILocation(line: 1526, column: 11, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 1526, column: 11)
!7029 = !DILocation(line: 1526, column: 11, scope: !7011)
!7030 = !DILocation(line: 1527, column: 2, scope: !7028)
!7031 = !DILocation(line: 1529, column: 30, scope: !7011)
!7032 = !DILocation(line: 1529, column: 41, scope: !7011)
!7033 = !DILocation(line: 1529, column: 13, scope: !7011)
!7034 = !DILocation(line: 1530, column: 7, scope: !7011)
!7035 = !DILocation(line: 1530, column: 31, scope: !7011)
!7036 = !DILocation(line: 1531, column: 7, scope: !7011)
!7037 = !DILocation(line: 1532, column: 7, scope: !7011)
!7038 = !DILocation(line: 1519, column: 3, scope: !7012)
!7039 = distinct !{!7039, !7014, !7040}
!7040 = !DILocation(line: 1533, column: 5, scope: !7013)
!7041 = !DILocation(line: 1534, column: 1, scope: !6946)
!7042 = distinct !DISubprogram(name: "get_init_expr", scope: !3, file: !3, line: 1424, type: !7043, scopeLine: 1425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7045)
!7043 = !DISubroutineType(types: !7044)
!7044 = !{!489, !1911, !7}
!7045 = !{!7046, !7047, !7048, !7051}
!7046 = !DILocalVariable(name: "chain", arg: 1, scope: !7042, file: !3, line: 1424, type: !1911)
!7047 = !DILocalVariable(name: "index", arg: 2, scope: !7042, file: !3, line: 1424, type: !7)
!7048 = !DILocalVariable(name: "e1", scope: !7049, file: !3, line: 1428, type: !489)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !3, line: 1427, column: 5)
!7050 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 1426, column: 7)
!7051 = !DILocalVariable(name: "e2", scope: !7049, file: !3, line: 1429, type: !489)
!7052 = !DILocation(line: 0, scope: !7042)
!7053 = !DILocation(line: 1426, column: 14, scope: !7050)
!7054 = !DILocation(line: 1426, column: 19, scope: !7050)
!7055 = !DILocation(line: 1426, column: 7, scope: !7042)
!7056 = !DILocation(line: 1428, column: 39, scope: !7049)
!7057 = !DILocation(line: 1428, column: 17, scope: !7049)
!7058 = !DILocation(line: 0, scope: !7049)
!7059 = !DILocation(line: 1429, column: 39, scope: !7049)
!7060 = !DILocation(line: 1429, column: 17, scope: !7049)
!7061 = !DILocation(line: 1431, column: 14, scope: !7049)
!7062 = !DILocation(line: 1435, column: 1, scope: !7042)
!7063 = !DILocation(line: 1434, column: 12, scope: !7050)
!7064 = distinct !DISubprogram(name: "VEC_chain_p_heap_free", scope: !3, file: !3, line: 299, type: !3580, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7065)
!7065 = !{!7066}
!7066 = !DILocalVariable(name: "vec_", arg: 1, scope: !7064, file: !3, line: 299, type: !3510)
!7067 = !DILocation(line: 0, scope: !7064)
!7068 = !DILocation(line: 299, column: 1, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7064, file: !3, line: 299, column: 1)
!7070 = !DILocation(line: 299, column: 1, scope: !7064)
!7071 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !1941, file: !1941, line: 31, type: !7072, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7076)
!7072 = !DISubroutineType(types: !7073)
!7073 = !{!482, !7074, !7, !1904}
!7074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7075, size: 64)
!7075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1945)
!7076 = !{!7077, !7078, !7079}
!7077 = !DILocalVariable(name: "vec_", arg: 1, scope: !7071, file: !1941, line: 31, type: !7074)
!7078 = !DILocalVariable(name: "ix_", arg: 2, scope: !7071, file: !1941, line: 31, type: !7)
!7079 = !DILocalVariable(name: "ptr", arg: 3, scope: !7071, file: !1941, line: 31, type: !1904)
!7080 = !DILocation(line: 0, scope: !7071)
!7081 = !DILocation(line: 31, column: 1, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7071, file: !1941, line: 31, column: 1)
!7083 = !DILocation(line: 31, column: 1, scope: !7071)
!7084 = !DILocation(line: 31, column: 1, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7082, file: !1941, line: 31, column: 1)
!7086 = !DILocation(line: 31, column: 1, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7082, file: !1941, line: 31, column: 1)
!7088 = !DILocation(line: 0, scope: !7082)
!7089 = distinct !DISubprogram(name: "get_loop", scope: !146, file: !146, line: 417, type: !7090, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7092)
!7090 = !DISubroutineType(types: !7091)
!7091 = !{!1028, !7}
!7092 = !{!7093}
!7093 = !DILocalVariable(name: "num", arg: 1, scope: !7089, file: !146, line: 417, type: !7)
!7094 = !DILocation(line: 0, scope: !7089)
!7095 = !DILocation(line: 419, column: 10, scope: !7089)
!7096 = !DILocation(line: 419, column: 3, scope: !7089)
!7097 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !1941, file: !1941, line: 32, type: !7098, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7101)
!7098 = !DISubroutineType(types: !7099)
!7099 = !{null, !7100}
!7100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!7101 = !{!7102}
!7102 = !DILocalVariable(name: "vec_", arg: 1, scope: !7097, file: !1941, line: 32, type: !7100)
!7103 = !DILocation(line: 0, scope: !7097)
!7104 = !DILocation(line: 32, column: 1, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7097, file: !1941, line: 32, column: 1)
!7106 = !DILocation(line: 32, column: 1, scope: !7097)
