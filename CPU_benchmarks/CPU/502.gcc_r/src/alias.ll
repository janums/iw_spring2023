; ModuleID = 'alias.bc'
source_filename = "alias.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type opaque
%struct.diagnostic_info = type opaque
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.VEC_alias_set_entry_gc = type { %struct.VEC_alias_set_entry_base }
%struct.VEC_alias_set_entry_base = type { i32, i32, [1 x %struct.alias_set_entry_d*] }
%struct.alias_set_entry_d = type { i32, i32, %struct.splay_tree_s* }
%struct.splay_tree_s = type { %struct.splay_tree_node_s*, i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8* }
%struct.splay_tree_node_s = type { i64, i64, %struct.splay_tree_node_s*, %struct.splay_tree_node_s* }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.cselib_val_struct = type { i32, i32, %struct.rtx_def*, %struct.elt_loc_list*, %struct.elt_list*, %struct.cselib_val_struct* }
%struct.elt_loc_list = type { %struct.elt_loc_list*, %struct.rtx_def*, %struct.rtx_def* }
%struct.elt_list = type { %struct.elt_list*, %struct.cselib_val_struct* }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.tree_field_decl = type { %struct.tree_decl_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.ao_ref_s = type { %union.tree_node*, %union.tree_node*, i64, i64, i64, i32, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@flag_strict_aliasing = external dso_local local_unnamed_addr global i32, align 4
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@.str = private unnamed_addr constant [8 x i8] c"alias.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@alias_sets = internal global %struct.VEC_alias_set_entry_gc* null, align 8, !dbg !0
@frame_set = internal global i32 -1, align 4, !dbg !2031
@reg_known_value_size = internal global i32 0, align 4, !dbg !2019
@reg_known_value = internal global %struct.rtx_def** null, align 8, !dbg !2017
@reg_known_equiv_p = internal unnamed_addr global i8* null, align 8, !dbg !2021
@reg_base_value = internal global %struct.VEC_rtx_gc* null, align 8, !dbg !2006
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@pic_offset_table_rtx = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@flag_argument_noalias = external dso_local local_unnamed_addr global i32, align 4
@static_reg_base_value = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !2012
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@memory_modified = internal unnamed_addr global i1 false, align 1, !dbg !2035
@timevar_enable = external dso_local local_unnamed_addr global i8, align 1
@old_reg_base_value = internal global %struct.VEC_rtx_gc* null, align 8, !dbg !2010
@new_reg_base_value = internal unnamed_addr global %struct.rtx_def** null, align 8, !dbg !2008
@reg_seen = internal unnamed_addr global i8* null, align 8, !dbg !2025
@unique_id = internal unnamed_addr global i32 0, align 4, !dbg !2027
@copying_arguments = internal unnamed_addr global i1 false, align 1, !dbg !2036
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@regno_reg_rtx = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@gt_ggc_r_gt_alias_h = dso_local local_unnamed_addr constant [5 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.VEC_alias_set_entry_gc** @alias_sets to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_VEC_alias_set_entry_gc, void (i8*)* @gt_pch_nx_VEC_alias_set_entry_gc }, %struct.ggc_root_tab { i8* bitcast (%struct.rtx_def*** @reg_known_value to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_ma_reg_known_value, void (i8*)* @gt_pch_na_reg_known_value }, %struct.ggc_root_tab { i8* bitcast ([53 x %struct.rtx_def*]* @static_reg_base_value to i8*), i64 53, i64 8, void (i8*)* @gt_ggc_mx_rtx_def, void (i8*)* @gt_pch_nx_rtx_def }, %struct.ggc_root_tab { i8* bitcast (%struct.VEC_rtx_gc** @reg_base_value to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_VEC_rtx_gc, void (i8*)* @gt_pch_nx_VEC_rtx_gc }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !1984
@gt_ggc_rd_gt_alias_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.VEC_rtx_gc** @old_reg_base_value to i8*), i64 1, i64 8, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2000
@varargs_set = internal global i32 -1, align 4, !dbg !2033
@gt_pch_rs_gt_alias_h = dso_local local_unnamed_addr constant [4 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (i32* @frame_set to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @varargs_set to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @reg_known_value_size to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2003
@flag_expensive_optimizations = external dso_local local_unnamed_addr global i32, align 4
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2041 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2054, metadata !DIExpression()), !dbg !2056
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2055, metadata !DIExpression()), !dbg !2056
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2057
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2058
  ret i32 %call, !dbg !2059
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2060 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2064
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2065
  ret i32 %call, !dbg !2066
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2067 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2121, metadata !DIExpression()), !dbg !2122
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2123
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2123
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2123
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2123
  %cmp = icmp uge i8* %0, %1, !dbg !2123
  %conv1 = zext i1 %cmp to i64, !dbg !2123
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2123
  %tobool = icmp eq i64 %expval, 0, !dbg !2123
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2123

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2123
  br label %cond.end, !dbg !2123

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2123
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2123
  %2 = load i8, i8* %0, align 1, !dbg !2123
  %conv3 = zext i8 %2 to i32, !dbg !2123
  br label %cond.end, !dbg !2123

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2123
  ret i32 %cond, !dbg !2124
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2125 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2127, metadata !DIExpression()), !dbg !2128
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2129
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2129
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2129
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2129
  %cmp = icmp uge i8* %0, %1, !dbg !2129
  %conv1 = zext i1 %cmp to i64, !dbg !2129
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2129
  %tobool = icmp eq i64 %expval, 0, !dbg !2129
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2129

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2129
  br label %cond.end, !dbg !2129

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2129
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2129
  %2 = load i8, i8* %0, align 1, !dbg !2129
  %conv3 = zext i8 %2 to i32, !dbg !2129
  br label %cond.end, !dbg !2129

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2129
  ret i32 %cond, !dbg !2130
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2131 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2132
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2132
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2132
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2132
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2132
  %cmp = icmp uge i8* %1, %2, !dbg !2132
  %conv1 = zext i1 %cmp to i64, !dbg !2132
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2132
  %tobool = icmp eq i64 %expval, 0, !dbg !2132
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2132

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2132
  br label %cond.end, !dbg !2132

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2132
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2132
  %3 = load i8, i8* %1, align 1, !dbg !2132
  %conv3 = zext i8 %3 to i32, !dbg !2132
  br label %cond.end, !dbg !2132

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2132
  ret i32 %cond, !dbg !2133
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2134 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2138, metadata !DIExpression()), !dbg !2139
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2140
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2141
  ret i32 %call, !dbg !2142
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2143 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2147, metadata !DIExpression()), !dbg !2149
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2148, metadata !DIExpression()), !dbg !2149
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2150
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2150
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2150
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2150
  %cmp = icmp uge i8* %0, %1, !dbg !2150
  %conv1 = zext i1 %cmp to i64, !dbg !2150
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2150
  %tobool = icmp eq i64 %expval, 0, !dbg !2150
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2150

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2150
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2150
  br label %cond.end, !dbg !2150

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2150
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2150
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2150
  store i8 %conv2, i8* %0, align 1, !dbg !2150
  %conv6 = and i32 %__c, 255, !dbg !2150
  br label %cond.end, !dbg !2150

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2150
  ret i32 %cond, !dbg !2151
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2152 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2154, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2155, metadata !DIExpression()), !dbg !2156
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2157
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2157
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2157
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2157
  %cmp = icmp uge i8* %0, %1, !dbg !2157
  %conv1 = zext i1 %cmp to i64, !dbg !2157
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2157
  %tobool = icmp eq i64 %expval, 0, !dbg !2157
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2157

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2157
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2157
  br label %cond.end, !dbg !2157

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2157
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2157
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2157
  store i8 %conv2, i8* %0, align 1, !dbg !2157
  %conv6 = and i32 %__c, 255, !dbg !2157
  br label %cond.end, !dbg !2157

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2157
  ret i32 %cond, !dbg !2158
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2159 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2161, metadata !DIExpression()), !dbg !2162
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2163
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2163
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2163
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2163
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2163
  %cmp = icmp uge i8* %1, %2, !dbg !2163
  %conv1 = zext i1 %cmp to i64, !dbg !2163
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2163
  %tobool = icmp eq i64 %expval, 0, !dbg !2163
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2163

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2163
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2163
  br label %cond.end, !dbg !2163

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2163
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2163
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2163
  store i8 %conv4, i8* %1, align 1, !dbg !2163
  %conv6 = and i32 %__c, 255, !dbg !2163
  br label %cond.end, !dbg !2163

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2163
  ret i32 %cond, !dbg !2164
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2165 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2171, metadata !DIExpression()), !dbg !2174
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2172, metadata !DIExpression()), !dbg !2174
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2173, metadata !DIExpression()), !dbg !2174
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2175
  ret i64 %call, !dbg !2176
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2177 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2179, metadata !DIExpression()), !dbg !2180
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2181
  %0 = load i32, i32* %_flags, align 8, !dbg !2181
  %and = lshr i32 %0, 4, !dbg !2181
  %and.lobit = and i32 %and, 1, !dbg !2181
  ret i32 %and.lobit, !dbg !2182
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2183 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2185, metadata !DIExpression()), !dbg !2186
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2187
  %0 = load i32, i32* %_flags, align 8, !dbg !2187
  %and = lshr i32 %0, 5, !dbg !2187
  %and.lobit = and i32 %and, 1, !dbg !2187
  ret i32 %and.lobit, !dbg !2188
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2189 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2192, metadata !DIExpression()), !dbg !2193
  %__c.off = add i32 %__c, 128, !dbg !2194
  %0 = icmp ult i32 %__c.off, 384, !dbg !2194
  br i1 %0, label %cond.true, label %cond.end, !dbg !2194

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2195
  %1 = load i32*, i32** %call, align 8, !dbg !2196
  %idxprom = sext i32 %__c to i64, !dbg !2197
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2197
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2197
  br label %cond.end, !dbg !2198

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2198
  ret i32 %cond, !dbg !2199
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2200 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2202, metadata !DIExpression()), !dbg !2203
  %__c.off = add i32 %__c, 128, !dbg !2204
  %0 = icmp ult i32 %__c.off, 384, !dbg !2204
  br i1 %0, label %cond.true, label %cond.end, !dbg !2204

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2205
  %1 = load i32*, i32** %call, align 8, !dbg !2206
  %idxprom = sext i32 %__c to i64, !dbg !2207
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2207
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2207
  br label %cond.end, !dbg !2208

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2208
  ret i32 %cond, !dbg !2209
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2210 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2215, metadata !DIExpression()), !dbg !2216
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2217
  %conv = trunc i64 %call to i32, !dbg !2218
  ret i32 %conv, !dbg !2219
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2220 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2224, metadata !DIExpression()), !dbg !2225
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2226
  ret i64 %call, !dbg !2227
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2228 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2233, metadata !DIExpression()), !dbg !2234
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2235
  ret i64 %call, !dbg !2236
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2237 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2243, metadata !DIExpression()), !dbg !2253
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2244, metadata !DIExpression()), !dbg !2253
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2245, metadata !DIExpression()), !dbg !2253
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2246, metadata !DIExpression()), !dbg !2253
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2247, metadata !DIExpression()), !dbg !2253
  call void @llvm.dbg.value(metadata i64 0, metadata !2248, metadata !DIExpression()), !dbg !2253
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2249, metadata !DIExpression()), !dbg !2253
  br label %while.cond, !dbg !2254

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2255
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2253
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2249, metadata !DIExpression()), !dbg !2253
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2248, metadata !DIExpression()), !dbg !2253
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2256
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2254

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2257
  %div = lshr i64 %add, 1, !dbg !2259
  call void @llvm.dbg.value(metadata i64 %div, metadata !2250, metadata !DIExpression()), !dbg !2253
  %mul = mul i64 %div, %__size, !dbg !2260
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2261
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2251, metadata !DIExpression()), !dbg !2253
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2262
  call void @llvm.dbg.value(metadata i32 %call, metadata !2252, metadata !DIExpression()), !dbg !2253
  %cmp1 = icmp slt i32 %call, 0, !dbg !2263
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2265

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2266
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2268

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2269
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2248, metadata !DIExpression()), !dbg !2253
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2253
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2253
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2249, metadata !DIExpression()), !dbg !2253
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2248, metadata !DIExpression()), !dbg !2253
  br label %while.cond, !dbg !2254, !llvm.loop !2270

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2253
  ret i8* %retval.0, !dbg !2272
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2273 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2279, metadata !DIExpression()), !dbg !2280
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2281
  ret double %call, !dbg !2282
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2283 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2292, metadata !DIExpression()), !dbg !2295
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2293, metadata !DIExpression()), !dbg !2295
  call void @llvm.dbg.value(metadata i32 %base, metadata !2294, metadata !DIExpression()), !dbg !2295
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2296
  ret i64 %call, !dbg !2297
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2298 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2304, metadata !DIExpression()), !dbg !2307
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2305, metadata !DIExpression()), !dbg !2307
  call void @llvm.dbg.value(metadata i32 %base, metadata !2306, metadata !DIExpression()), !dbg !2307
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2308
  ret i64 %call, !dbg !2309
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2310 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2321, metadata !DIExpression()), !dbg !2324
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2322, metadata !DIExpression()), !dbg !2324
  call void @llvm.dbg.value(metadata i32 %base, metadata !2323, metadata !DIExpression()), !dbg !2324
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2325
  ret i64 %call, !dbg !2326
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2327 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2331, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2332, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.value(metadata i32 %base, metadata !2333, metadata !DIExpression()), !dbg !2334
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2335
  ret i64 %call, !dbg !2336
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2337 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2377, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2378, metadata !DIExpression()), !dbg !2379
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2380
  ret i32 %call, !dbg !2381
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2382 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2384, metadata !DIExpression()), !dbg !2386
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2385, metadata !DIExpression()), !dbg !2386
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2387
  ret i32 %call, !dbg !2388
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2389 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2393, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2394, metadata !DIExpression()), !dbg !2395
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2396
  ret i32 %call, !dbg !2397
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2398 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2402, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2403, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2404, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2405, metadata !DIExpression()), !dbg !2406
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2407
  ret i32 %call, !dbg !2408
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2409 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2413, metadata !DIExpression()), !dbg !2416
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2414, metadata !DIExpression()), !dbg !2416
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2415, metadata !DIExpression()), !dbg !2416
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2415, metadata !DIExpression(DW_OP_deref)), !dbg !2416
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2417
  ret i32 %call, !dbg !2418
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2419 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2423, metadata !DIExpression()), !dbg !2427
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2424, metadata !DIExpression()), !dbg !2427
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2425, metadata !DIExpression()), !dbg !2427
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2426, metadata !DIExpression()), !dbg !2427
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2426, metadata !DIExpression(DW_OP_deref)), !dbg !2427
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2428
  ret i32 %call, !dbg !2429
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2430 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2454, metadata !DIExpression()), !dbg !2456
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2455, metadata !DIExpression()), !dbg !2456
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2457
  ret i32 %call, !dbg !2458
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2459 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2461, metadata !DIExpression()), !dbg !2463
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2462, metadata !DIExpression()), !dbg !2463
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2464
  ret i32 %call, !dbg !2465
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2466 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2470, metadata !DIExpression()), !dbg !2472
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2471, metadata !DIExpression()), !dbg !2472
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2473
  ret i32 %call, !dbg !2474
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2475 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2479, metadata !DIExpression()), !dbg !2483
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2480, metadata !DIExpression()), !dbg !2483
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2481, metadata !DIExpression()), !dbg !2483
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2482, metadata !DIExpression()), !dbg !2483
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2484
  ret i32 %call, !dbg !2485
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @alias_set_subset_of(i32 %set1, i32 %set2) local_unnamed_addr #4 !dbg !2486 {
entry:
  call void @llvm.dbg.value(metadata i32 %set1, metadata !2490, metadata !DIExpression()), !dbg !2493
  call void @llvm.dbg.value(metadata i32 %set2, metadata !2491, metadata !DIExpression()), !dbg !2493
  %cmp = icmp eq i32 %set2, 0, !dbg !2494
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2496

if.end:                                           ; preds = %entry
  %call = tail call fastcc %struct.alias_set_entry_d* @get_alias_set_entry(i32 %set2) #7, !dbg !2497
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d* %call, metadata !2492, metadata !DIExpression()), !dbg !2493
  %cmp1 = icmp eq %struct.alias_set_entry_d* %call, null, !dbg !2498
  br i1 %cmp1, label %if.end7, label %land.lhs.true, !dbg !2500

land.lhs.true:                                    ; preds = %if.end
  %has_zero_child = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %call, i64 0, i32 1, !dbg !2501
  %0 = load i32, i32* %has_zero_child, align 4, !dbg !2501
  %tobool = icmp ne i32 %0, 0, !dbg !2502
  %cmp3 = icmp eq i32 %set1, 0, !dbg !2503
  %or.cond = and i1 %tobool, %cmp3, !dbg !2504
  br i1 %or.cond, label %cleanup, label %lor.lhs.false, !dbg !2504

lor.lhs.false:                                    ; preds = %land.lhs.true
  %children = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %call, i64 0, i32 2, !dbg !2505
  %1 = load %struct.splay_tree_s*, %struct.splay_tree_s** %children, align 8, !dbg !2505
  %conv = sext i32 %set1 to i64, !dbg !2506
  %call4 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %1, i64 %conv) #6, !dbg !2507
  %tobool5 = icmp eq %struct.splay_tree_node_s* %call4, null, !dbg !2507
  br i1 %tobool5, label %if.end7, label %cleanup, !dbg !2508

if.end7:                                          ; preds = %lor.lhs.false, %if.end
  br label %cleanup, !dbg !2509

cleanup:                                          ; preds = %lor.lhs.false, %land.lhs.true, %entry, %if.end7
  %retval.0 = phi i8 [ 0, %if.end7 ], [ 1, %entry ], [ 1, %land.lhs.true ], [ 1, %lor.lhs.false ], !dbg !2493
  ret i8 %retval.0, !dbg !2510
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.alias_set_entry_d* @get_alias_set_entry(i32 %alias_set) unnamed_addr #0 !dbg !2511 {
entry:
  call void @llvm.dbg.value(metadata i32 %alias_set, metadata !2515, metadata !DIExpression()), !dbg !2516
  %0 = load %struct.VEC_alias_set_entry_gc*, %struct.VEC_alias_set_entry_gc** @alias_sets, align 8, !dbg !2517
  %base = getelementptr inbounds %struct.VEC_alias_set_entry_gc, %struct.VEC_alias_set_entry_gc* %0, i64 0, i32 0, !dbg !2517
  %call = tail call fastcc %struct.alias_set_entry_d* @VEC_alias_set_entry_base_index(%struct.VEC_alias_set_entry_base* %base, i32 %alias_set) #7, !dbg !2517
  ret %struct.alias_set_entry_d* %call, !dbg !2518
}

declare dso_local %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s*, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @alias_sets_conflict_p(i32 %set1, i32 %set2) local_unnamed_addr #4 !dbg !2519 {
entry:
  call void @llvm.dbg.value(metadata i32 %set1, metadata !2523, metadata !DIExpression()), !dbg !2526
  call void @llvm.dbg.value(metadata i32 %set2, metadata !2524, metadata !DIExpression()), !dbg !2526
  %call = tail call i32 @alias_sets_must_conflict_p(i32 %set1, i32 %set2) #7, !dbg !2527
  %tobool = icmp eq i32 %call, 0, !dbg !2527
  br i1 %tobool, label %if.end, label %cleanup, !dbg !2529

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %struct.alias_set_entry_d* @get_alias_set_entry(i32 %set1) #7, !dbg !2530
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d* %call1, metadata !2525, metadata !DIExpression()), !dbg !2526
  %cmp = icmp eq %struct.alias_set_entry_d* %call1, null, !dbg !2531
  br i1 %cmp, label %if.end6, label %land.lhs.true, !dbg !2533

land.lhs.true:                                    ; preds = %if.end
  %has_zero_child = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %call1, i64 0, i32 1, !dbg !2534
  %0 = load i32, i32* %has_zero_child, align 4, !dbg !2534
  %tobool2 = icmp eq i32 %0, 0, !dbg !2535
  br i1 %tobool2, label %lor.lhs.false, label %cleanup, !dbg !2536

lor.lhs.false:                                    ; preds = %land.lhs.true
  %children = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %call1, i64 0, i32 2, !dbg !2537
  %1 = load %struct.splay_tree_s*, %struct.splay_tree_s** %children, align 8, !dbg !2537
  %conv = sext i32 %set2 to i64, !dbg !2538
  %call3 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %1, i64 %conv) #6, !dbg !2539
  %tobool4 = icmp eq %struct.splay_tree_node_s* %call3, null, !dbg !2539
  br i1 %tobool4, label %if.end6, label %cleanup, !dbg !2540

if.end6:                                          ; preds = %lor.lhs.false, %if.end
  %call7 = tail call fastcc %struct.alias_set_entry_d* @get_alias_set_entry(i32 %set2) #7, !dbg !2541
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d* %call7, metadata !2525, metadata !DIExpression()), !dbg !2526
  %cmp8 = icmp eq %struct.alias_set_entry_d* %call7, null, !dbg !2542
  br i1 %cmp8, label %if.end19, label %land.lhs.true10, !dbg !2544

land.lhs.true10:                                  ; preds = %if.end6
  %has_zero_child11 = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %call7, i64 0, i32 1, !dbg !2545
  %2 = load i32, i32* %has_zero_child11, align 4, !dbg !2545
  %tobool12 = icmp eq i32 %2, 0, !dbg !2546
  br i1 %tobool12, label %lor.lhs.false13, label %cleanup, !dbg !2547

lor.lhs.false13:                                  ; preds = %land.lhs.true10
  %children14 = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %call7, i64 0, i32 2, !dbg !2548
  %3 = load %struct.splay_tree_s*, %struct.splay_tree_s** %children14, align 8, !dbg !2548
  %conv15 = sext i32 %set1 to i64, !dbg !2549
  %call16 = tail call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %3, i64 %conv15) #6, !dbg !2550
  %tobool17 = icmp eq %struct.splay_tree_node_s* %call16, null, !dbg !2550
  br i1 %tobool17, label %if.end19, label %cleanup, !dbg !2551

if.end19:                                         ; preds = %lor.lhs.false13, %if.end6
  br label %cleanup, !dbg !2552

cleanup:                                          ; preds = %lor.lhs.false, %land.lhs.true, %lor.lhs.false13, %land.lhs.true10, %entry, %if.end19
  %retval.0 = phi i32 [ 0, %if.end19 ], [ 1, %entry ], [ 1, %lor.lhs.false ], [ 1, %land.lhs.true ], [ 1, %lor.lhs.false13 ], [ 1, %land.lhs.true10 ], !dbg !2526
  ret i32 %retval.0, !dbg !2553
}

; Function Attrs: nounwind uwtable
define dso_local i32 @alias_sets_must_conflict_p(i32 %set1, i32 %set2) local_unnamed_addr #4 !dbg !2554 {
entry:
  call void @llvm.dbg.value(metadata i32 %set1, metadata !2556, metadata !DIExpression()), !dbg !2558
  call void @llvm.dbg.value(metadata i32 %set2, metadata !2557, metadata !DIExpression()), !dbg !2558
  %cmp = icmp eq i32 %set1, 0, !dbg !2559
  %cmp1 = icmp eq i32 %set2, 0, !dbg !2561
  %or.cond = or i1 %cmp, %cmp1, !dbg !2562
  %cmp3 = icmp eq i32 %set1, %set2, !dbg !2563
  %or.cond1 = or i1 %or.cond, %cmp3, !dbg !2562
  %retval.0 = zext i1 %or.cond1 to i32, !dbg !2562
  ret i32 %retval.0, !dbg !2564
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @insn_alias_sets_conflict_p(%struct.rtx_def* %insn1, %struct.rtx_def* %insn2) local_unnamed_addr #4 !dbg !2565 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn1, metadata !2569, metadata !DIExpression()), !dbg !2571
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn2, metadata !2570, metadata !DIExpression()), !dbg !2571
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn1, i64 0, i32 1, !dbg !2572
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !2572
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !2572
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn2, i64 0, i32 1, !dbg !2573
  %1 = getelementptr inbounds %union.u, %union.u* %u1, i64 1, i32 0, i32 0, i64 0, !dbg !2573
  %2 = bitcast %union.rtunion_def* %1 to i8*, !dbg !2574
  %call = tail call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx, i32 (%struct.rtx_def**, i8*)* bitcast (i32 (%struct.rtx_def**, %struct.rtx_def**)* @walk_mems_1 to i32 (%struct.rtx_def**, i8*)*), i8* nonnull %2) #6, !dbg !2575
  %conv = trunc i32 %call to i8, !dbg !2575
  ret i8 %conv, !dbg !2576
}

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @walk_mems_1(%struct.rtx_def** %x, %struct.rtx_def** %pat) #4 !dbg !2577 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %x, metadata !2581, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pat, metadata !2582, metadata !DIExpression()), !dbg !2583
  %0 = bitcast %struct.rtx_def** %x to i32**, !dbg !2584
  %1 = load i32*, i32** %0, align 8, !dbg !2584
  %bf.load = load i32, i32* %1, align 8, !dbg !2584
  %bf.clear = and i32 %bf.load, 65535, !dbg !2584
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !2584
  br i1 %cmp, label %if.then, label %return, !dbg !2586

if.then:                                          ; preds = %entry
  %2 = bitcast i32* %1 to i8*, !dbg !2586
  %call = tail call i32 @for_each_rtx(%struct.rtx_def** %pat, i32 (%struct.rtx_def**, i8*)* bitcast (i32 (%struct.rtx_def**, %struct.rtx_def*)* @walk_mems_2 to i32 (%struct.rtx_def**, i8*)*), i8* %2) #6, !dbg !2587
  %tobool = icmp eq i32 %call, 0, !dbg !2587
  %. = select i1 %tobool, i32 -1, i32 1, !dbg !2590
  br label %return, !dbg !2590

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i32 [ %., %if.then ], [ 0, %entry ], !dbg !2583
  ret i32 %retval.0, !dbg !2591
}

; Function Attrs: nounwind uwtable
define dso_local i32 @objects_must_conflict_p(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #4 !dbg !2592 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !2596, metadata !DIExpression()), !dbg !2600
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !2597, metadata !DIExpression()), !dbg !2600
  %cmp = icmp eq %union.tree_node* %t1, null, !dbg !2601
  %cmp1 = icmp eq %union.tree_node* %t2, null, !dbg !2603
  %or.cond = and i1 %cmp, %cmp1, !dbg !2604
  br i1 %or.cond, label %cleanup, label %if.end, !dbg !2604

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq %union.tree_node* %t1, %t2, !dbg !2605
  br i1 %cmp2, label %cleanup, label %lor.lhs.false, !dbg !2607

lor.lhs.false:                                    ; preds = %if.end
  br i1 %cmp, label %cond.end, label %land.lhs.true4, !dbg !2608

land.lhs.true4:                                   ; preds = %lor.lhs.false
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2609
  %bf.load = load i64, i64* %0, align 8, !dbg !2609
  %bf.cast3 = and i64 %bf.load, 524288, !dbg !2609
  %tobool = icmp ne i64 %bf.cast3, 0, !dbg !2609
  %cmp6 = icmp ne %union.tree_node* %t2, null, !dbg !2610
  %or.cond1 = and i1 %tobool, %cmp6, !dbg !2611
  br i1 %or.cond1, label %land.lhs.true7, label %if.end15, !dbg !2611

land.lhs.true7:                                   ; preds = %land.lhs.true4
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2612
  %bf.load9 = load i64, i64* %1, align 8, !dbg !2612
  %bf.cast124 = and i64 %bf.load9, 524288, !dbg !2612
  %tobool13 = icmp eq i64 %bf.cast124, 0, !dbg !2612
  br i1 %tobool13, label %if.end15, label %cleanup, !dbg !2613

if.end15:                                         ; preds = %land.lhs.true7, %land.lhs.true4
  %call = tail call i32 @get_alias_set(%union.tree_node* nonnull %t1) #7, !dbg !2614
  br label %cond.end, !dbg !2615

cond.end:                                         ; preds = %lor.lhs.false, %if.end15
  %cond = phi i32 [ %call, %if.end15 ], [ 0, %lor.lhs.false ], !dbg !2615
  call void @llvm.dbg.value(metadata i32 %cond, metadata !2598, metadata !DIExpression()), !dbg !2600
  br i1 %cmp1, label %cond.end21, label %cond.true18, !dbg !2616

cond.true18:                                      ; preds = %cond.end
  %call19 = tail call i32 @get_alias_set(%union.tree_node* nonnull %t2) #7, !dbg !2617
  br label %cond.end21, !dbg !2616

cond.end21:                                       ; preds = %cond.end, %cond.true18
  %cond22 = phi i32 [ %call19, %cond.true18 ], [ 0, %cond.end ], !dbg !2616
  call void @llvm.dbg.value(metadata i32 %cond22, metadata !2599, metadata !DIExpression()), !dbg !2600
  %call23 = tail call i32 @alias_sets_must_conflict_p(i32 %cond, i32 %cond22) #7, !dbg !2618
  br label %cleanup, !dbg !2619

cleanup:                                          ; preds = %land.lhs.true7, %if.end, %entry, %cond.end21
  %retval.0 = phi i32 [ %call23, %cond.end21 ], [ 0, %entry ], [ 1, %land.lhs.true7 ], [ 1, %if.end ], !dbg !2600
  ret i32 %retval.0, !dbg !2620
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_alias_set(%union.tree_node* %t) local_unnamed_addr #4 !dbg !2621 {
entry:
  br label %tailrecurse, !dbg !2630

tailrecurse:                                      ; preds = %if.then179, %entry
  %t.tr = phi %union.tree_node* [ %t, %entry ], [ %30, %if.then179 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr, metadata !2625, metadata !DIExpression()), !dbg !2634
  %0 = load i32, i32* @flag_strict_aliasing, align 4, !dbg !2635
  %tobool = icmp eq i32 %0, 0, !dbg !2635
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2637
  %cmp = icmp eq %union.tree_node* %1, %t.tr, !dbg !2638
  %or.cond = or i1 %tobool, %cmp, !dbg !2639
  br i1 %or.cond, label %cleanup274.loopexit, label %lor.lhs.false1, !dbg !2639

lor.lhs.false1:                                   ; preds = %tailrecurse
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2640
  %bf.load = load i64, i64* %2, align 8, !dbg !2640
  %bf.cast = and i64 %bf.load, 65535, !dbg !2640
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !2640
  %3 = load i32, i32* %arrayidx, align 4, !dbg !2640
  %cmp2 = icmp eq i32 %3, 2, !dbg !2640
  br i1 %cmp2, label %if.end, label %land.lhs.true, !dbg !2641

land.lhs.true:                                    ; preds = %lor.lhs.false1
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2642
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2642
  %cmp3 = icmp eq %union.tree_node* %4, null, !dbg !2643
  br i1 %cmp3, label %cleanup274.loopexit, label %lor.lhs.false4, !dbg !2644

lor.lhs.false4:                                   ; preds = %land.lhs.true
  %cmp7 = icmp eq %union.tree_node* %4, %1, !dbg !2645
  br i1 %cmp7, label %cleanup274.loopexit, label %if.end, !dbg !2646

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false1
  br i1 %cmp2, label %if.end135, label %if.then15, !dbg !2647

if.then15:                                        ; preds = %if.end
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %t.tr) #6, !dbg !2648
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2625, metadata !DIExpression()), !dbg !2634
  %5 = load i32 (%union.tree_node*)*, i32 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 13), align 8, !dbg !2649
  %call16 = tail call i32 %5(%union.tree_node* %call) #6, !dbg !2650
  call void @llvm.dbg.value(metadata i32 %call16, metadata !2626, metadata !DIExpression()), !dbg !2634
  %cmp17 = icmp eq i32 %call16, -1, !dbg !2651
  br i1 %cmp17, label %if.end19, label %cleanup, !dbg !2653

if.end19:                                         ; preds = %if.then15
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2654
  %bf.load21 = load i64, i64* %6, align 8, !dbg !2654
  %bf.cast232 = and i64 %bf.load21, 65535, !dbg !2656
  %cmp24 = icmp eq i64 %bf.cast232, 152, !dbg !2656
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !2657

if.then25:                                        ; preds = %if.end19
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2658
  %arrayidx26 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 5, !dbg !2658
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx26, align 8, !dbg !2658
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !2625, metadata !DIExpression()), !dbg !2634
  br label %if.end27, !dbg !2659

if.end27:                                         ; preds = %if.then25, %if.end19
  %t.addr.0 = phi %union.tree_node* [ %7, %if.then25 ], [ %call, %if.end19 ], !dbg !2660
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !2625, metadata !DIExpression()), !dbg !2634
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !2627, metadata !DIExpression()), !dbg !2660
  br label %while.cond, !dbg !2661

while.cond:                                       ; preds = %while.body, %if.end27
  %inner.0 = phi %union.tree_node* [ %t.addr.0, %if.end27 ], [ %call33, %while.body ], !dbg !2660
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0, metadata !2627, metadata !DIExpression()), !dbg !2660
  %call28 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %inner.0) #7, !dbg !2662
  %tobool29 = icmp eq i8 %call28, 0, !dbg !2661
  br i1 %tobool29, label %while.end, label %while.body, !dbg !2661

while.body:                                       ; preds = %while.cond
  %operands31 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2663
  %8 = load %union.tree_node*, %union.tree_node** %operands31, align 8, !dbg !2663
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !2627, metadata !DIExpression()), !dbg !2660
  %call33 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %8) #6, !dbg !2665
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !2627, metadata !DIExpression()), !dbg !2660
  br label %while.cond, !dbg !2661, !llvm.loop !2666

while.end:                                        ; preds = %while.cond
  %inner.0.lcssa = phi %union.tree_node* [ %inner.0, %while.cond ], !dbg !2660
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !2627, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !2627, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !2627, metadata !DIExpression()), !dbg !2660
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2668
  %bf.load35 = load i64, i64* %9, align 8, !dbg !2668
  %bf.cast373 = and i64 %bf.load35, 65535, !dbg !2668
  %cmp38 = icmp eq i64 %bf.cast373, 47, !dbg !2668
  br i1 %cmp38, label %if.then51, label %lor.lhs.false39, !dbg !2668

lor.lhs.false39:                                  ; preds = %while.end
  %cmp44 = icmp eq i64 %bf.cast373, 48, !dbg !2668
  br i1 %cmp44, label %if.then51, label %lor.lhs.false45, !dbg !2668

lor.lhs.false45:                                  ; preds = %lor.lhs.false39
  %cmp50 = icmp eq i64 %bf.cast373, 49, !dbg !2668
  br i1 %cmp50, label %if.then51, label %if.end59, !dbg !2670

if.then51:                                        ; preds = %lor.lhs.false45, %lor.lhs.false39, %while.end
  %operands53 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2671
  %10 = load %union.tree_node*, %union.tree_node** %operands53, align 8, !dbg !2671
  %call55 = tail call fastcc i32 @get_deref_alias_set_1(%union.tree_node* %10) #7, !dbg !2673
  call void @llvm.dbg.value(metadata i32 %call55, metadata !2626, metadata !DIExpression()), !dbg !2634
  %cmp56 = icmp eq i32 %call55, -1, !dbg !2674
  br i1 %cmp56, label %if.end59, label %cleanup, !dbg !2676

if.end59:                                         ; preds = %if.then51, %lor.lhs.false45
  br label %while.cond60, !dbg !2677

while.cond60:                                     ; preds = %while.body63, %if.end59
  %t.addr.1 = phi %union.tree_node* [ %t.addr.0, %if.end59 ], [ %call67, %while.body63 ], !dbg !2660
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.1, metadata !2625, metadata !DIExpression()), !dbg !2634
  %call61 = tail call zeroext i8 @component_uses_parent_alias_set(%union.tree_node* %t.addr.1) #7, !dbg !2678
  %tobool62 = icmp eq i8 %call61, 0, !dbg !2677
  br i1 %tobool62, label %while.end68, label %while.body63, !dbg !2677

while.body63:                                     ; preds = %while.cond60
  %operands65 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2679
  %11 = load %union.tree_node*, %union.tree_node** %operands65, align 8, !dbg !2679
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !2625, metadata !DIExpression()), !dbg !2634
  %call67 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %11) #6, !dbg !2681
  call void @llvm.dbg.value(metadata %union.tree_node* %call67, metadata !2625, metadata !DIExpression()), !dbg !2634
  br label %while.cond60, !dbg !2677, !llvm.loop !2682

while.end68:                                      ; preds = %while.cond60
  %t.addr.1.lcssa = phi %union.tree_node* [ %t.addr.1, %while.cond60 ], !dbg !2660
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.1.lcssa, metadata !2625, metadata !DIExpression()), !dbg !2634
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.1.lcssa, metadata !2625, metadata !DIExpression()), !dbg !2634
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.1.lcssa, metadata !2625, metadata !DIExpression()), !dbg !2634
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.1.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2684
  %bf.load70 = load i64, i64* %12, align 8, !dbg !2684
  %bf.cast726 = and i64 %bf.load70, 65535, !dbg !2686
  %cmp73 = icmp eq i64 %bf.cast726, 32, !dbg !2686
  br i1 %cmp73, label %land.lhs.true74, label %if.end132, !dbg !2687

land.lhs.true74:                                  ; preds = %while.end68
  %13 = load i8, i8* getelementptr inbounds ([191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 32, i64 11), align 1, !dbg !2688
  %tobool82 = icmp eq i8 %13, 0, !dbg !2688
  br i1 %tobool82, label %if.end132, label %land.lhs.true83, !dbg !2688

land.lhs.true83:                                  ; preds = %land.lhs.true74
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.1.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2688
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !2688
  %cmp84 = icmp eq %struct.rtx_def* %14, null, !dbg !2688
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 0, !dbg !2689
  br i1 %cmp84, label %if.end132, label %land.lhs.true86, !dbg !2689

land.lhs.true86:                                  ; preds = %land.lhs.true83
  br i1 false, label %cond.false, label %cond.true, !dbg !2690

cond.true:                                        ; preds = %land.lhs.true86
  %bf.load94.pre = load i32, i32* %15, align 8, !dbg !2690
  br label %cond.end, !dbg !2690

cond.false:                                       ; preds = %land.lhs.true86
  br label %cond.end, !dbg !2690

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load94 = phi i32 [ undef, %cond.false ], [ %bf.load94.pre, %cond.true ], !dbg !2690
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !2690
  %cmp96 = icmp eq i32 %bf.clear95, 43, !dbg !2690
  br i1 %cmp96, label %if.then98, label %if.end132, !dbg !2691

if.then98:                                        ; preds = %cond.end
  br i1 false, label %cond.false105, label %cond.true102, !dbg !2692

cond.true102:                                     ; preds = %if.then98
  %.phi.trans.insert26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2693
  %rt_mem.phi.trans.insert = bitcast %union.rtunion_def* %.phi.trans.insert26 to %struct.mem_attrs**, !dbg !2693
  %.pre27 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem.phi.trans.insert, align 8, !dbg !2692
  br label %cond.end108, !dbg !2692

cond.false105:                                    ; preds = %if.then98
  br label %cond.end108, !dbg !2692

cond.end108:                                      ; preds = %cond.false105, %cond.true102
  %16 = phi %struct.mem_attrs* [ undef, %cond.false105 ], [ %.pre27, %cond.true102 ], !dbg !2692
  %cmp111 = icmp eq %struct.mem_attrs* %16, null, !dbg !2692
  br i1 %cmp111, label %cleanup, label %cond.false114, !dbg !2692

cond.false114:                                    ; preds = %cond.end108
  br i1 false, label %cond.false121, label %cond.true118, !dbg !2692

cond.true118:                                     ; preds = %cond.false114
  %alias.phi.trans.insert = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %16, i64 0, i32 3, !dbg !2693
  %.pre28 = load i32, i32* %alias.phi.trans.insert, align 8, !dbg !2692
  br label %cond.end124, !dbg !2692

cond.false121:                                    ; preds = %cond.false114
  br label %cond.end124, !dbg !2692

cond.end124:                                      ; preds = %cond.false121, %cond.true118
  %17 = phi i32 [ undef, %cond.false121 ], [ %.pre28, %cond.true118 ], !dbg !2692
  br label %cleanup, !dbg !2692

if.end132:                                        ; preds = %land.lhs.true83, %land.lhs.true74, %cond.end, %while.end68
  %type134 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.1.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2694
  %18 = load %union.tree_node*, %union.tree_node** %type134, align 8, !dbg !2694
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !2625, metadata !DIExpression()), !dbg !2634
  br label %cleanup, !dbg !2695

cleanup:                                          ; preds = %if.then51, %if.then15, %cond.end124, %cond.end108, %if.end132
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end132 ], [ false, %if.then15 ], [ false, %if.then51 ], [ false, %cond.end108 ], [ false, %cond.end124 ]
  %t.addr.2 = phi %union.tree_node* [ %18, %if.end132 ], [ %call, %if.then15 ], [ %t.addr.0, %if.then51 ], [ %t.addr.1.lcssa, %cond.end108 ], [ %t.addr.1.lcssa, %cond.end124 ], !dbg !2660
  %retval.0 = phi i32 [ undef, %if.end132 ], [ %call16, %if.then15 ], [ %call55, %if.then51 ], [ 0, %cond.end108 ], [ %17, %cond.end124 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.2, metadata !2625, metadata !DIExpression()), !dbg !2634
  br i1 %cleanup.dest.slot.0, label %if.end135, label %cleanup274.loopexit

if.end135:                                        ; preds = %cleanup, %if.end
  %t.addr.3 = phi %union.tree_node* [ %t.tr, %if.end ], [ %t.addr.2, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.3, metadata !2625, metadata !DIExpression()), !dbg !2634
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.3, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !2696
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !2696
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !2625, metadata !DIExpression()), !dbg !2634
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 1, !dbg !2697
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !2697
  %cmp138 = icmp eq %union.tree_node* %22, null, !dbg !2697
  br i1 %cmp138, label %if.then140, label %if.end146, !dbg !2699

if.then140:                                       ; preds = %if.end135
  %.lcssa40 = phi %union.tree_node* [ %20, %if.end135 ], !dbg !2696
  %23 = load i32 (%union.tree_node*)*, i32 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 13), align 8, !dbg !2700
  %call141 = tail call i32 %23(%union.tree_node* %.lcssa40) #6, !dbg !2702
  call void @llvm.dbg.value(metadata i32 %call141, metadata !2626, metadata !DIExpression()), !dbg !2634
  %cmp142 = icmp eq i32 %call141, -1, !dbg !2703
  %call141. = select i1 %cmp142, i32 0, i32 %call141, !dbg !2705
  br label %cleanup274, !dbg !2705

if.end146:                                        ; preds = %if.end135
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !2625, metadata !DIExpression()), !dbg !2634
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 1, !dbg !2706
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !2706
  %cmp151 = icmp eq %union.tree_node* %25, null, !dbg !2706
  br i1 %cmp151, label %cond.true158, label %land.lhs.true153, !dbg !2706

land.lhs.true153:                                 ; preds = %if.end146
  %cmp156 = icmp eq %union.tree_node* %25, %22, !dbg !2706
  br i1 %cmp156, label %cond.end160, label %cond.true158, !dbg !2706

cond.true158:                                     ; preds = %land.lhs.true153, %if.end146
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 710, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2706
  br label %cond.end160, !dbg !2706

cond.end160:                                      ; preds = %land.lhs.true153, %cond.true158
  %type162 = bitcast %union.tree_node* %22 to %struct.tree_type*, !dbg !2707
  %alias_set = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type162, i64 0, i32 8, !dbg !2707
  %26 = load i32, i32* %alias_set, align 4, !dbg !2707
  %cmp163 = icmp eq i32 %26, -1, !dbg !2707
  br i1 %cmp163, label %if.end168, label %if.then165, !dbg !2709

if.then165:                                       ; preds = %cond.end160
  %.lcssa43 = phi i32 [ %26, %cond.end160 ], !dbg !2707
  br label %cleanup274, !dbg !2710

if.end168:                                        ; preds = %cond.end160
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2711
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8, !dbg !2711
  %cmp170 = icmp eq %union.tree_node* %28, null, !dbg !2711
  br i1 %cmp170, label %if.then172, label %if.end184, !dbg !2712

if.then172:                                       ; preds = %if.end168
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2713
  %bf.load174 = load i64, i64* %29, align 8, !dbg !2713
  %bf.cast1767 = and i64 %bf.load174, 65535, !dbg !2714
  %cmp177 = icmp eq i64 %bf.cast1767, 15, !dbg !2714
  br i1 %cmp177, label %if.then179, label %cleanup274.loopexit, !dbg !2715

if.then179:                                       ; preds = %if.then172
  %type181 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2716
  %30 = load %union.tree_node*, %union.tree_node** %type181, align 8, !dbg !2716
  br label %tailrecurse, !dbg !2630

if.end184:                                        ; preds = %if.end168
  %type162.lcssa46 = phi %struct.tree_type* [ %type162, %if.end168 ], !dbg !2707
  %alias_set.lcssa45 = phi i32* [ %alias_set, %if.end168 ], !dbg !2707
  %.lcssa39 = phi %union.tree_node* [ %22, %if.end168 ], !dbg !2697
  %31 = load i32 (%union.tree_node*)*, i32 (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 13), align 8, !dbg !2717
  %call185 = tail call i32 %31(%union.tree_node* nonnull %.lcssa39) #6, !dbg !2718
  call void @llvm.dbg.value(metadata i32 %call185, metadata !2626, metadata !DIExpression()), !dbg !2634
  %cmp186 = icmp eq i32 %call185, -1, !dbg !2719
  br i1 %cmp186, label %if.else, label %cleanup274, !dbg !2721

if.else:                                          ; preds = %if.end184
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2722
  %bf.load190 = load i64, i64* %32, align 8, !dbg !2722
  %bf.cast1928 = and i64 %bf.load190, 65535, !dbg !2724
  %cmp193 = icmp eq i64 %bf.cast1928, 20, !dbg !2724
  br i1 %cmp193, label %if.end235, label %lor.lhs.false195, !dbg !2725

lor.lhs.false195:                                 ; preds = %if.else
  %cmp200 = icmp eq i64 %bf.cast1928, 21, !dbg !2726
  br i1 %cmp200, label %if.end235, label %if.else203, !dbg !2727

if.else203:                                       ; preds = %lor.lhs.false195
  %cmp208 = icmp eq i64 %bf.cast1928, 14, !dbg !2728
  br i1 %cmp208, label %if.then210, label %if.else214, !dbg !2730

if.then210:                                       ; preds = %if.else203
  %type212 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2731
  %33 = load %union.tree_node*, %union.tree_node** %type212, align 8, !dbg !2731
  %call213 = tail call i32 @get_alias_set(%union.tree_node* %33) #7, !dbg !2732
  call void @llvm.dbg.value(metadata i32 %call213, metadata !2626, metadata !DIExpression()), !dbg !2634
  br label %if.end235, !dbg !2733

if.else214:                                       ; preds = %if.else203
  %cmp219 = icmp eq i64 %bf.cast1928, 15, !dbg !2734
  br i1 %cmp219, label %land.lhs.true221, label %if.else230, !dbg !2736

land.lhs.true221:                                 ; preds = %if.else214
  %transparent_aggr_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type162.lcssa46, i64 0, i32 6, !dbg !2737
  %bf.load223 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !2737
  %bf.clear224 = and i32 %bf.load223, 4096, !dbg !2737
  %tobool225 = icmp eq i32 %bf.clear224, 0, !dbg !2737
  br i1 %tobool225, label %if.then226, label %if.else230, !dbg !2738

if.then226:                                       ; preds = %land.lhs.true221
  %type228 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2739
  %34 = load %union.tree_node*, %union.tree_node** %type228, align 8, !dbg !2739
  %call229 = tail call i32 @get_alias_set(%union.tree_node* %34) #7, !dbg !2740
  call void @llvm.dbg.value(metadata i32 %call229, metadata !2626, metadata !DIExpression()), !dbg !2634
  br label %if.end235, !dbg !2741

if.else230:                                       ; preds = %land.lhs.true221, %if.else214
  %call231 = tail call i32 @new_alias_set() #7, !dbg !2742
  call void @llvm.dbg.value(metadata i32 %call231, metadata !2626, metadata !DIExpression()), !dbg !2634
  br label %if.end235

if.end235:                                        ; preds = %lor.lhs.false195, %if.else, %if.then226, %if.else230, %if.then210
  %set.2 = phi i32 [ 0, %lor.lhs.false195 ], [ 0, %if.else ], [ %call213, %if.then210 ], [ %call231, %if.else230 ], [ %call229, %if.then226 ], !dbg !2743
  call void @llvm.dbg.value(metadata i32 %set.2, metadata !2626, metadata !DIExpression()), !dbg !2634
  store i32 %set.2, i32* %alias_set.lcssa45, align 4, !dbg !2744
  %bf.load239 = load i64, i64* %32, align 8, !dbg !2745
  %bf.cast24112 = and i64 %bf.load239, 65535, !dbg !2745
  %cmp242 = icmp eq i64 %bf.cast24112, 15, !dbg !2745
  br i1 %cmp242, label %if.then272, label %lor.lhs.false244, !dbg !2745

lor.lhs.false244:                                 ; preds = %if.end235
  %cmp249 = icmp eq i64 %bf.cast24112, 16, !dbg !2745
  br i1 %cmp249, label %if.then272, label %lor.lhs.false251, !dbg !2745

lor.lhs.false251:                                 ; preds = %lor.lhs.false244
  %cmp256 = icmp eq i64 %bf.cast24112, 17, !dbg !2745
  br i1 %cmp256, label %if.then272, label %lor.lhs.false258, !dbg !2745

lor.lhs.false258:                                 ; preds = %lor.lhs.false251
  %cmp263 = icmp eq i64 %bf.cast24112, 18, !dbg !2745
  br i1 %cmp263, label %if.then272, label %lor.lhs.false265, !dbg !2747

lor.lhs.false265:                                 ; preds = %lor.lhs.false258
  %cmp270 = icmp eq i64 %bf.cast24112, 13, !dbg !2748
  br i1 %cmp270, label %if.then272, label %cleanup274, !dbg !2749

if.then272:                                       ; preds = %lor.lhs.false265, %lor.lhs.false258, %lor.lhs.false251, %lor.lhs.false244, %if.end235
  tail call void @record_component_aliases(%union.tree_node* nonnull %.lcssa39) #7, !dbg !2750
  br label %cleanup274, !dbg !2750

cleanup274.loopexit:                              ; preds = %cleanup, %tailrecurse, %lor.lhs.false4, %land.lhs.true, %if.then172
  %retval.1.ph = phi i32 [ 0, %if.then172 ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false4 ], [ 0, %tailrecurse ], [ %retval.0, %cleanup ]
  br label %cleanup274, !dbg !2751

cleanup274:                                       ; preds = %cleanup274.loopexit, %if.end184, %lor.lhs.false265, %if.then272, %if.then140, %if.then165
  %retval.1 = phi i32 [ %.lcssa43, %if.then165 ], [ %call141., %if.then140 ], [ %call185, %if.end184 ], [ %set.2, %if.then272 ], [ %set.2, %lor.lhs.false265 ], [ %retval.1.ph, %cleanup274.loopexit ], !dbg !2634
  ret i32 %retval.1, !dbg !2751
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @component_uses_parent_alias_set(%union.tree_node* %t) local_unnamed_addr #4 !dbg !2752 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2757, metadata !DIExpression()), !dbg !2758
  br label %while.body, !dbg !2759

while.body:                                       ; preds = %sw.epilog, %entry
  %t.addr.0 = phi %union.tree_node* [ %t, %entry ], [ %9, %sw.epilog ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !2757, metadata !DIExpression()), !dbg !2758
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %t.addr.0) #7, !dbg !2760
  %tobool = icmp eq i8 %call, 0, !dbg !2760
  br i1 %tobool, label %return, label %if.end, !dbg !2763

if.end:                                           ; preds = %while.body
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2764
  %bf.load = load i64, i64* %0, align 8, !dbg !2764
  %1 = trunc i64 %bf.load to i16, !dbg !2764
  switch i16 %1, label %return [
    i16 41, label %sw.bb
    i16 45, label %sw.bb7
    i16 46, label %sw.bb7
    i16 43, label %sw.epilog
    i16 44, label %sw.epilog
  ], !dbg !2765

sw.bb:                                            ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2766
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !2766
  %2 = bitcast %union.tree_node** %arrayidx to %struct.tree_decl_common**, !dbg !2766
  %3 = load %struct.tree_decl_common*, %struct.tree_decl_common** %2, align 8, !dbg !2766
  %decl_flag_2 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %3, i64 0, i32 2, !dbg !2766
  %4 = bitcast i40* %decl_flag_2 to i64*, !dbg !2766
  %bf.load1 = load i64, i64* %4, align 8, !dbg !2766
  %bf.cast31 = and i64 %bf.load1, 67108864, !dbg !2766
  %tobool4 = icmp eq i64 %bf.cast31, 0, !dbg !2766
  br i1 %tobool4, label %sw.epilog, label %return, !dbg !2769

sw.bb7:                                           ; preds = %if.end, %if.end
  %operands9 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2770
  %5 = bitcast %union.tree_node** %operands9 to %struct.tree_common**, !dbg !2770
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !2770
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !2770
  %7 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !2770
  %8 = load %struct.tree_type*, %struct.tree_type** %7, align 8, !dbg !2770
  %transparent_aggr_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 6, !dbg !2770
  %bf.load12 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !2770
  %bf.clear14 = and i32 %bf.load12, 4096, !dbg !2770
  %tobool15 = icmp eq i32 %bf.clear14, 0, !dbg !2770
  br i1 %tobool15, label %sw.epilog, label %return, !dbg !2772

sw.epilog:                                        ; preds = %sw.bb, %sw.bb7, %if.end, %if.end
  %operands20 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2773
  %9 = load %union.tree_node*, %union.tree_node** %operands20, align 8, !dbg !2773
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !2757, metadata !DIExpression()), !dbg !2758
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2774
  %10 = load %union.tree_node*, %union.tree_node** %type23, align 8, !dbg !2774
  %call24 = tail call i32 @get_alias_set(%union.tree_node* %10) #7, !dbg !2776
  %cmp = icmp eq i32 %call24, 0, !dbg !2777
  br i1 %cmp, label %return, label %while.body, !dbg !2778, !llvm.loop !2779

return:                                           ; preds = %sw.bb, %sw.bb7, %while.body, %sw.epilog, %if.end
  %retval.0 = phi i8 [ 0, %while.body ], [ 1, %sw.bb ], [ 1, %sw.bb7 ], [ 1, %if.end ], [ 1, %sw.epilog ], !dbg !2781
  ret i8 %retval.0, !dbg !2782
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !2783 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2785, metadata !DIExpression()), !dbg !2786
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2787
  %bf.load = load i64, i64* %0, align 8, !dbg !2787
  %1 = trunc i64 %bf.load to i16, !dbg !2787
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !2788

sw.default:                                       ; preds = %entry
  br label %return, !dbg !2789

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !2791
  ret i8 %retval.0, !dbg !2792
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_deref_alias_set(%union.tree_node* %t) local_unnamed_addr #4 !dbg !2793 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2795, metadata !DIExpression()), !dbg !2797
  %call = tail call fastcc i32 @get_deref_alias_set_1(%union.tree_node* %t) #7, !dbg !2798
  call void @llvm.dbg.value(metadata i32 %call, metadata !2796, metadata !DIExpression()), !dbg !2797
  %cmp = icmp eq i32 %call, -1, !dbg !2799
  br i1 %cmp, label %if.then, label %if.end6, !dbg !2801

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2802
  %bf.load = load i64, i64* %0, align 8, !dbg !2802
  %bf.cast = and i64 %bf.load, 65535, !dbg !2802
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !2802
  %1 = load i32, i32* %arrayidx, align 4, !dbg !2802
  %cmp1 = icmp eq i32 %1, 2, !dbg !2802
  br i1 %cmp1, label %if.end, label %if.then2, !dbg !2805

if.then2:                                         ; preds = %if.then
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2806
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2806
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !2795, metadata !DIExpression()), !dbg !2797
  br label %if.end, !dbg !2807

if.end:                                           ; preds = %if.then2, %if.then
  %t.addr.0 = phi %union.tree_node* [ %t, %if.then ], [ %2, %if.then2 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !2795, metadata !DIExpression()), !dbg !2797
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2808
  %3 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !2808
  %call5 = tail call i32 @get_alias_set(%union.tree_node* %3) #7, !dbg !2809
  call void @llvm.dbg.value(metadata i32 %call5, metadata !2796, metadata !DIExpression()), !dbg !2797
  br label %if.end6, !dbg !2810

if.end6:                                          ; preds = %if.end, %entry
  %set.0 = phi i32 [ %call5, %if.end ], [ %call, %entry ], !dbg !2797
  call void @llvm.dbg.value(metadata i32 %set.0, metadata !2796, metadata !DIExpression()), !dbg !2797
  ret i32 %set.0, !dbg !2811
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_deref_alias_set_1(%union.tree_node* %t) unnamed_addr #4 !dbg !2812 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2814, metadata !DIExpression()), !dbg !2815
  %0 = load i32, i32* @flag_strict_aliasing, align 4, !dbg !2816
  %tobool = icmp eq i32 %0, 0, !dbg !2816
  br i1 %tobool, label %return, label %if.end, !dbg !2818

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2819
  %bf.load = load i64, i64* %1, align 8, !dbg !2819
  %bf.cast = and i64 %bf.load, 65535, !dbg !2819
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !2819
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2819
  %cmp = icmp eq i32 %2, 2, !dbg !2819
  br i1 %cmp, label %if.end2, label %if.then1, !dbg !2821

if.then1:                                         ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2822
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2822
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !2814, metadata !DIExpression()), !dbg !2815
  br label %if.end2, !dbg !2823

if.end2:                                          ; preds = %if.then1, %if.end
  %t.addr.0 = phi %union.tree_node* [ %t, %if.end ], [ %3, %if.then1 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !2814, metadata !DIExpression()), !dbg !2815
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2824
  %4 = bitcast %union.tree_node** %type4 to i64**, !dbg !2824
  %5 = load i64*, i64** %4, align 8, !dbg !2824
  %bf.load6 = load i64, i64* %5, align 8, !dbg !2824
  %bf.cast81 = and i64 %bf.load6, 65535, !dbg !2826
  %cmp9 = icmp eq i64 %bf.cast81, 19, !dbg !2826
  br i1 %cmp9, label %return, label %lor.lhs.false, !dbg !2827

lor.lhs.false:                                    ; preds = %if.end2
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2828
  %bf.load11 = load i64, i64* %6, align 8, !dbg !2828
  %bf.cast132 = lshr i64 %bf.load11, 26, !dbg !2829
  %7 = trunc i64 %bf.cast132 to i32, !dbg !2829
  %8 = and i32 %7, 1, !dbg !2829
  %spec.select = add nsw i32 %8, -1, !dbg !2829
  ret i32 %spec.select, !dbg !2829

return:                                           ; preds = %entry, %if.end2
  ret i32 0, !dbg !2830
}

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #1

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @new_alias_set() local_unnamed_addr #4 !dbg !2831 {
entry:
  %0 = load i32, i32* @flag_strict_aliasing, align 4, !dbg !2834
  %tobool = icmp eq i32 %0, 0, !dbg !2834
  br i1 %tobool, label %return, label %if.then, !dbg !2836

if.then:                                          ; preds = %entry
  %1 = load %struct.VEC_alias_set_entry_gc*, %struct.VEC_alias_set_entry_gc** @alias_sets, align 8, !dbg !2837
  %cmp = icmp eq %struct.VEC_alias_set_entry_gc* %1, null, !dbg !2840
  br i1 %cmp, label %if.then1, label %if.end, !dbg !2841

if.then1:                                         ; preds = %if.then
  %call = tail call fastcc %struct.alias_set_entry_d** @VEC_alias_set_entry_gc_safe_push(%struct.VEC_alias_set_entry_gc** nonnull @alias_sets, %struct.alias_set_entry_d* null) #7, !dbg !2842
  br label %if.end, !dbg !2842

if.end:                                           ; preds = %if.then1, %if.then
  %call2 = tail call fastcc %struct.alias_set_entry_d** @VEC_alias_set_entry_gc_safe_push(%struct.VEC_alias_set_entry_gc** nonnull @alias_sets, %struct.alias_set_entry_d* null) #7, !dbg !2843
  %2 = load %struct.VEC_alias_set_entry_gc*, %struct.VEC_alias_set_entry_gc** @alias_sets, align 8, !dbg !2844
  %base = getelementptr inbounds %struct.VEC_alias_set_entry_gc, %struct.VEC_alias_set_entry_gc* %2, i64 0, i32 0, !dbg !2844
  %call4 = tail call fastcc i32 @VEC_alias_set_entry_base_length(%struct.VEC_alias_set_entry_base* %base) #7, !dbg !2844
  %sub = add i32 %call4, -1, !dbg !2845
  br label %return, !dbg !2846

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %sub, %if.end ], [ 0, %entry ], !dbg !2847
  ret i32 %retval.0, !dbg !2848
}

; Function Attrs: nounwind uwtable
define dso_local void @record_component_aliases(%union.tree_node* %type) local_unnamed_addr #4 !dbg !2849 {
entry:
  %base_binfo = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !2853, metadata !DIExpression()), !dbg !2862
  %call = tail call i32 @get_alias_set(%union.tree_node* %type) #7, !dbg !2863
  call void @llvm.dbg.value(metadata i32 %call, metadata !2854, metadata !DIExpression()), !dbg !2862
  %cmp = icmp eq i32 %call, 0, !dbg !2864
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !2866

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2867
  %bf.load = load i64, i64* %0, align 8, !dbg !2867
  %1 = trunc i64 %bf.load to i16, !dbg !2867
  switch i16 %1, label %cleanup.cont [
    i16 16, label %sw.bb
    i16 17, label %sw.bb
    i16 18, label %sw.bb
    i16 13, label %sw.bb37
  ], !dbg !2868

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !2869
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !2869
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !2869
  br i1 %tobool, label %if.end15, label %if.then2, !dbg !2870

if.then2:                                         ; preds = %sw.bb
  %4 = bitcast %union.tree_node** %base_binfo to i8*, !dbg !2871
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !2871
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !2860, metadata !DIExpression()), !dbg !2872
  call void @llvm.dbg.value(metadata i32 0, metadata !2856, metadata !DIExpression()), !dbg !2872
  %base_binfos9 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !2873
  %base10 = bitcast %union.tree_node** %base_binfos9 to %struct.VEC_tree_base*, !dbg !2873
  %5 = bitcast %union.tree_node** %base_binfo to %struct.tree_common**, !dbg !2873
  br label %for.cond, !dbg !2876

for.cond:                                         ; preds = %for.body, %if.then2
  %i.0 = phi i32 [ 0, %if.then2 ], [ %inc, %for.body ], !dbg !2877
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2856, metadata !DIExpression()), !dbg !2872
  call void @llvm.dbg.value(metadata %union.tree_node** %base_binfo, metadata !2861, metadata !DIExpression(DW_OP_deref)), !dbg !2872
  %call11 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* nonnull %base10, i32 %i.0, %union.tree_node** nonnull %base_binfo) #7, !dbg !2878
  %tobool12 = icmp eq i32 %call11, 0, !dbg !2879
  br i1 %tobool12, label %for.end, label %for.body, !dbg !2879

for.body:                                         ; preds = %for.cond
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !2880
  %type13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !2880
  %7 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !2880
  %call14 = call i32 @get_alias_set(%union.tree_node* %7) #7, !dbg !2881
  call void @record_alias_subset(i32 %call, i32 %call14) #7, !dbg !2882
  %inc = add nuw nsw i32 %i.0, 1, !dbg !2883
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2856, metadata !DIExpression()), !dbg !2872
  br label %for.cond, !dbg !2884, !llvm.loop !2885

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !2887
  br label %if.end15, !dbg !2888

if.end15:                                         ; preds = %sw.bb, %for.end
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2889
  %8 = bitcast i32* %values to %union.tree_node**, !dbg !2889
  br label %for.cond17, !dbg !2891

for.cond17:                                       ; preds = %for.inc34, %if.end15
  %field.0.in = phi %union.tree_node** [ %8, %if.end15 ], [ %chain, %for.inc34 ]
  %field.0 = load %union.tree_node*, %union.tree_node** %field.0.in, align 8, !dbg !2892
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !2855, metadata !DIExpression()), !dbg !2862
  %cmp18 = icmp eq %union.tree_node* %field.0, null, !dbg !2893
  br i1 %cmp18, label %cleanup.cont.loopexit, label %for.body19, !dbg !2895

for.body19:                                       ; preds = %for.cond17
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2896
  %bf.load21 = load i64, i64* %9, align 8, !dbg !2896
  %bf.cast231 = and i64 %bf.load21, 65535, !dbg !2898
  %cmp24 = icmp eq i64 %bf.cast231, 31, !dbg !2898
  br i1 %cmp24, label %land.lhs.true, label %for.inc34, !dbg !2899

land.lhs.true:                                    ; preds = %for.body19
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2900
  %10 = bitcast i40* %decl_flag_2 to i64*, !dbg !2900
  %bf.load25 = load i64, i64* %10, align 8, !dbg !2900
  %bf.cast272 = and i64 %bf.load25, 67108864, !dbg !2900
  %tobool28 = icmp eq i64 %bf.cast272, 0, !dbg !2900
  br i1 %tobool28, label %if.then29, label %for.inc34, !dbg !2901

if.then29:                                        ; preds = %land.lhs.true
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2902
  %11 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !2902
  %call32 = call i32 @get_alias_set(%union.tree_node* %11) #7, !dbg !2903
  call void @record_alias_subset(i32 %call, i32 %call32) #7, !dbg !2904
  br label %for.inc34, !dbg !2904

for.inc34:                                        ; preds = %land.lhs.true, %for.body19, %if.then29
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2905
  br label %for.cond17, !dbg !2906, !llvm.loop !2907

sw.bb37:                                          ; preds = %if.end
  %type39 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2909
  %12 = load %union.tree_node*, %union.tree_node** %type39, align 8, !dbg !2909
  %call40 = tail call i32 @get_alias_set(%union.tree_node* %12) #7, !dbg !2910
  tail call void @record_alias_subset(i32 %call, i32 %call40) #7, !dbg !2911
  br label %cleanup.cont, !dbg !2912

cleanup.cont.loopexit:                            ; preds = %for.cond17
  br label %cleanup.cont, !dbg !2913

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry, %if.end, %sw.bb37
  ret void, !dbg !2913
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.alias_set_entry_d** @VEC_alias_set_entry_gc_safe_push(%struct.VEC_alias_set_entry_gc** %vec_, %struct.alias_set_entry_d* %obj_) unnamed_addr #0 !dbg !2914 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_set_entry_gc** @alias_sets, metadata !2920, metadata !DIExpression()), !dbg !2922
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d* null, metadata !2921, metadata !DIExpression()), !dbg !2922
  %call = tail call fastcc i32 @VEC_alias_set_entry_gc_reserve(%struct.VEC_alias_set_entry_gc** nonnull @alias_sets, i32 1) #7, !dbg !2923
  %0 = load %struct.VEC_alias_set_entry_gc*, %struct.VEC_alias_set_entry_gc** @alias_sets, align 8, !dbg !2923
  %tobool = icmp eq %struct.VEC_alias_set_entry_gc* %0, null, !dbg !2923
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2923

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_alias_set_entry_gc, %struct.VEC_alias_set_entry_gc* %0, i64 0, i32 0, !dbg !2923
  br label %cond.end, !dbg !2923

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_alias_set_entry_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2923
  %call1 = tail call fastcc %struct.alias_set_entry_d** @VEC_alias_set_entry_base_quick_push(%struct.VEC_alias_set_entry_base* %cond, %struct.alias_set_entry_d* null) #7, !dbg !2923
  ret %struct.alias_set_entry_d** %call1, !dbg !2923
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alias_set_entry_base_length(%struct.VEC_alias_set_entry_base* %vec_) unnamed_addr #0 !dbg !2924 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_set_entry_base* %vec_, metadata !2930, metadata !DIExpression()), !dbg !2931
  %tobool = icmp eq %struct.VEC_alias_set_entry_base* %vec_, null, !dbg !2932
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2932

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_alias_set_entry_base, %struct.VEC_alias_set_entry_base* %vec_, i64 0, i32 0, !dbg !2932
  %0 = load i32, i32* %num, align 8, !dbg !2932
  br label %cond.end, !dbg !2932

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2932
  ret i32 %cond, !dbg !2932
}

; Function Attrs: nounwind uwtable
define dso_local void @record_alias_subset(i32 %superset, i32 %subset) local_unnamed_addr #4 !dbg !2933 {
entry:
  call void @llvm.dbg.value(metadata i32 %superset, metadata !2937, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 %subset, metadata !2938, metadata !DIExpression()), !dbg !2941
  %cmp = icmp eq i32 %superset, %subset, !dbg !2942
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !2944

if.end:                                           ; preds = %entry
  %tobool = icmp eq i32 %superset, 0, !dbg !2945
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2945

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 813, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2945
  br label %cond.end, !dbg !2945

cond.end:                                         ; preds = %if.end, %cond.true
  %call = tail call fastcc %struct.alias_set_entry_d* @get_alias_set_entry(i32 %superset) #7, !dbg !2946
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d* %call, metadata !2939, metadata !DIExpression()), !dbg !2941
  %cmp1 = icmp eq %struct.alias_set_entry_d* %call, null, !dbg !2947
  br i1 %cmp1, label %if.then2, label %if.end11, !dbg !2949

if.then2:                                         ; preds = %cond.end
  %call3 = tail call i8* @ggc_alloc_stat(i64 16) #6, !dbg !2950
  %0 = bitcast i8* %call3 to %struct.alias_set_entry_d*, !dbg !2950
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d* %0, metadata !2939, metadata !DIExpression()), !dbg !2941
  %alias_set = bitcast i8* %call3 to i32*, !dbg !2952
  store i32 %superset, i32* %alias_set, align 8, !dbg !2953
  %call4 = tail call %struct.splay_tree_s* @splay_tree_new_with_allocator(i32 (i64, i64)* nonnull @splay_tree_compare_ints, void (i64)* null, void (i64)* null, i8* (i32, i8*)* nonnull @ggc_splay_alloc, void (i8*, i8*)* nonnull @ggc_splay_dont_free, i8* null) #6, !dbg !2954
  %children = getelementptr inbounds i8, i8* %call3, i64 8, !dbg !2955
  %1 = bitcast i8* %children to %struct.splay_tree_s**, !dbg !2955
  store %struct.splay_tree_s* %call4, %struct.splay_tree_s** %1, align 8, !dbg !2956
  %has_zero_child = getelementptr inbounds i8, i8* %call3, i64 4, !dbg !2957
  %2 = bitcast i8* %has_zero_child to i32*, !dbg !2957
  store i32 0, i32* %2, align 4, !dbg !2958
  %3 = load %struct.VEC_alias_set_entry_gc*, %struct.VEC_alias_set_entry_gc** @alias_sets, align 8, !dbg !2959
  %base = getelementptr inbounds %struct.VEC_alias_set_entry_gc, %struct.VEC_alias_set_entry_gc* %3, i64 0, i32 0, !dbg !2959
  %call10 = tail call fastcc %struct.alias_set_entry_d* @VEC_alias_set_entry_base_replace(%struct.VEC_alias_set_entry_base* %base, i32 %superset, %struct.alias_set_entry_d* %0) #7, !dbg !2959
  br label %if.end11, !dbg !2960

if.end11:                                         ; preds = %if.then2, %cond.end
  %superset_entry.0 = phi %struct.alias_set_entry_d* [ %0, %if.then2 ], [ %call, %cond.end ], !dbg !2941
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d* %superset_entry.0, metadata !2939, metadata !DIExpression()), !dbg !2941
  %cmp12 = icmp eq i32 %subset, 0, !dbg !2961
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !2963

if.then13:                                        ; preds = %if.end11
  %has_zero_child14 = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %superset_entry.0, i64 0, i32 1, !dbg !2964
  store i32 1, i32* %has_zero_child14, align 4, !dbg !2965
  br label %cleanup.cont, !dbg !2966

if.else:                                          ; preds = %if.end11
  %call15 = tail call fastcc %struct.alias_set_entry_d* @get_alias_set_entry(i32 %subset) #7, !dbg !2967
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d* %call15, metadata !2940, metadata !DIExpression()), !dbg !2941
  %tobool16 = icmp eq %struct.alias_set_entry_d* %call15, null, !dbg !2969
  br i1 %tobool16, label %if.end26, label %if.then17, !dbg !2971

if.then17:                                        ; preds = %if.else
  %has_zero_child18 = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %call15, i64 0, i32 1, !dbg !2972
  %4 = load i32, i32* %has_zero_child18, align 4, !dbg !2972
  %tobool19 = icmp eq i32 %4, 0, !dbg !2975
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !2976

if.then20:                                        ; preds = %if.then17
  %has_zero_child21 = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %superset_entry.0, i64 0, i32 1, !dbg !2977
  store i32 1, i32* %has_zero_child21, align 4, !dbg !2978
  br label %if.end22, !dbg !2979

if.end22:                                         ; preds = %if.then17, %if.then20
  %children23 = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %call15, i64 0, i32 2, !dbg !2980
  %5 = load %struct.splay_tree_s*, %struct.splay_tree_s** %children23, align 8, !dbg !2980
  %children24 = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %superset_entry.0, i64 0, i32 2, !dbg !2981
  %6 = bitcast %struct.splay_tree_s** %children24 to i8**, !dbg !2981
  %7 = load i8*, i8** %6, align 8, !dbg !2981
  %call25 = tail call i32 @splay_tree_foreach(%struct.splay_tree_s* %5, i32 (%struct.splay_tree_node_s*, i8*)* nonnull @insert_subset_children, i8* %7) #6, !dbg !2982
  br label %if.end26, !dbg !2983

if.end26:                                         ; preds = %if.else, %if.end22
  %children27 = getelementptr inbounds %struct.alias_set_entry_d, %struct.alias_set_entry_d* %superset_entry.0, i64 0, i32 2, !dbg !2984
  %8 = load %struct.splay_tree_s*, %struct.splay_tree_s** %children27, align 8, !dbg !2984
  %conv = sext i32 %subset to i64, !dbg !2985
  %call28 = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %8, i64 %conv, i64 0) #6, !dbg !2986
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %entry, %if.end26, %if.then13
  ret void, !dbg !2987
}

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #1

declare dso_local %struct.splay_tree_s* @splay_tree_new_with_allocator(i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8*) local_unnamed_addr #1

declare dso_local i32 @splay_tree_compare_ints(i64, i64) #1

declare dso_local i8* @ggc_splay_alloc(i32, i8*) #1

declare dso_local void @ggc_splay_dont_free(i8*, i8*) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.alias_set_entry_d* @VEC_alias_set_entry_base_replace(%struct.VEC_alias_set_entry_base* %vec_, i32 %ix_, %struct.alias_set_entry_d* %obj_) unnamed_addr #0 !dbg !2988 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_set_entry_base* %vec_, metadata !2993, metadata !DIExpression()), !dbg !2997
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2994, metadata !DIExpression()), !dbg !2997
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d* %obj_, metadata !2995, metadata !DIExpression()), !dbg !2997
  %idxprom = zext i32 %ix_ to i64, !dbg !2998
  %arrayidx = getelementptr inbounds %struct.VEC_alias_set_entry_base, %struct.VEC_alias_set_entry_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2998
  %0 = load %struct.alias_set_entry_d*, %struct.alias_set_entry_d** %arrayidx, align 8, !dbg !2998
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d* %0, metadata !2996, metadata !DIExpression()), !dbg !2997
  store %struct.alias_set_entry_d* %obj_, %struct.alias_set_entry_d** %arrayidx, align 8, !dbg !2998
  ret %struct.alias_set_entry_d* %0, !dbg !2998
}

declare dso_local i32 @splay_tree_foreach(%struct.splay_tree_s*, i32 (%struct.splay_tree_node_s*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @insert_subset_children(%struct.splay_tree_node_s* %node, i8* %data) #4 !dbg !2999 {
entry:
  call void @llvm.dbg.value(metadata %struct.splay_tree_node_s* %node, metadata !3003, metadata !DIExpression()), !dbg !3005
  call void @llvm.dbg.value(metadata i8* %data, metadata !3004, metadata !DIExpression()), !dbg !3005
  %0 = bitcast i8* %data to %struct.splay_tree_s*, !dbg !3006
  %key = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %node, i64 0, i32 0, !dbg !3007
  %1 = load i64, i64* %key, align 8, !dbg !3007
  %value = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %node, i64 0, i32 1, !dbg !3008
  %2 = load i64, i64* %value, align 8, !dbg !3008
  %call = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %0, i64 %1, i64 %2) #6, !dbg !3009
  ret i32 0, !dbg !3010
}

declare dso_local %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s*, i64, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !3011 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3017, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3018, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !3019, metadata !DIExpression()), !dbg !3020
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !3021
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3021

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !3021
  %0 = load i32, i32* %num, align 8, !dbg !3021
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3021
  br i1 %cmp, label %if.then, label %if.else, !dbg !3023

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3024
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3024
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3024
  br label %return, !dbg !3024

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3026

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !3028
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3028
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !3028
  ret i32 %retval.0, !dbg !3023
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_varargs_alias_set() local_unnamed_addr #4 !dbg !3029 {
entry:
  ret i32 0, !dbg !3030
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_frame_alias_set() local_unnamed_addr #4 !dbg !3031 {
entry:
  %0 = load i32, i32* @frame_set, align 4, !dbg !3032
  %cmp = icmp eq i32 %0, -1, !dbg !3034
  br i1 %cmp, label %if.then, label %if.end, !dbg !3035

if.then:                                          ; preds = %entry
  %call = tail call i32 @new_alias_set() #7, !dbg !3036
  store i32 %call, i32* @frame_set, align 4, !dbg !3037
  br label %if.end, !dbg !3038

if.end:                                           ; preds = %if.then, %entry
  %1 = phi i32 [ %call, %if.then ], [ %0, %entry ], !dbg !3039
  ret i32 %1, !dbg !3040
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_reg_known_value(i32 %regno) local_unnamed_addr #4 !dbg !3041 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3045, metadata !DIExpression()), !dbg !3046
  %cmp = icmp ugt i32 %regno, 52, !dbg !3047
  br i1 %cmp, label %if.then, label %return, !dbg !3049

if.then:                                          ; preds = %entry
  %sub = add i32 %regno, -53, !dbg !3050
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3045, metadata !DIExpression()), !dbg !3046
  %0 = load i32, i32* @reg_known_value_size, align 4, !dbg !3052
  %cmp1 = icmp ult i32 %sub, %0, !dbg !3054
  br i1 %cmp1, label %if.then2, label %return, !dbg !3055

if.then2:                                         ; preds = %if.then
  %1 = load %struct.rtx_def**, %struct.rtx_def*** @reg_known_value, align 8, !dbg !3056
  %idxprom = zext i32 %sub to i64, !dbg !3056
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %idxprom, !dbg !3056
  %2 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !3056
  br label %return, !dbg !3057

return:                                           ; preds = %entry, %if.then, %if.then2
  %retval.0 = phi %struct.rtx_def* [ %2, %if.then2 ], [ null, %if.then ], [ null, %entry ], !dbg !3046
  ret %struct.rtx_def* %retval.0, !dbg !3058
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @get_reg_known_equiv_p(i32 %regno) local_unnamed_addr #4 !dbg !3059 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3063, metadata !DIExpression()), !dbg !3064
  %cmp = icmp ugt i32 %regno, 52, !dbg !3065
  br i1 %cmp, label %if.then, label %return, !dbg !3067

if.then:                                          ; preds = %entry
  %sub = add i32 %regno, -53, !dbg !3068
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3063, metadata !DIExpression()), !dbg !3064
  %0 = load i32, i32* @reg_known_value_size, align 4, !dbg !3070
  %cmp1 = icmp ult i32 %sub, %0, !dbg !3072
  br i1 %cmp1, label %if.then2, label %return, !dbg !3073

if.then2:                                         ; preds = %if.then
  %1 = load i8*, i8** @reg_known_equiv_p, align 8, !dbg !3074
  %idxprom = zext i32 %sub to i64, !dbg !3074
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !3074
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3074
  br label %return, !dbg !3075

return:                                           ; preds = %entry, %if.then, %if.then2
  %retval.0 = phi i8 [ %2, %if.then2 ], [ 0, %if.then ], [ 0, %entry ], !dbg !3064
  ret i8 %retval.0, !dbg !3076
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @canon_rtx(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !3077 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3081, metadata !DIExpression()), !dbg !3089
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3090
  %bf.load = load i32, i32* %0, align 8, !dbg !3090
  %bf.clear = and i32 %bf.load, 65535, !dbg !3090
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !3090
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !3091

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !3092
  %cmp1 = icmp ugt i32 %call, 52, !dbg !3093
  br i1 %cmp1, label %if.then, label %if.end9, !dbg !3094

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !3095
  %call3 = tail call %struct.rtx_def* @get_reg_known_value(i32 %call2) #7, !dbg !3096
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !3082, metadata !DIExpression()), !dbg !3097
  %cmp4 = icmp eq %struct.rtx_def* %call3, %x, !dbg !3098
  br i1 %cmp4, label %cleanup, label %if.end, !dbg !3100

if.end:                                           ; preds = %if.then
  %tobool = icmp eq %struct.rtx_def* %call3, null, !dbg !3101
  br i1 %tobool, label %cleanup, label %if.then6, !dbg !3103

if.then6:                                         ; preds = %if.end
  %call7 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* nonnull %call3) #7, !dbg !3104
  br label %cleanup, !dbg !3105

cleanup:                                          ; preds = %if.end, %if.then, %if.then6
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then6 ], [ false, %if.then ], [ true, %if.end ]
  %retval.0 = phi %struct.rtx_def* [ %call7, %if.then6 ], [ %x, %if.then ], [ undef, %if.end ]
  br i1 %cleanup.dest.slot.0, label %if.end9, label %return

if.end9:                                          ; preds = %cleanup, %land.lhs.true, %entry
  %retval.1 = phi %struct.rtx_def* [ undef, %land.lhs.true ], [ undef, %entry ], [ %retval.0, %cleanup ]
  %bf.load10 = load i32, i32* %0, align 8, !dbg !3106
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !3106
  %cmp12 = icmp eq i32 %bf.clear11, 49, !dbg !3107
  br i1 %cmp12, label %if.then13, label %if.else56, !dbg !3108

if.then13:                                        ; preds = %if.end9
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3109
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3109
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3109
  %call14 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %1) #7, !dbg !3110
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !3085, metadata !DIExpression()), !dbg !3111
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3112
  %rt_rtx18 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !3112
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !3112
  %call19 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %3) #7, !dbg !3113
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call19, metadata !3088, metadata !DIExpression()), !dbg !3111
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3114
  %cmp24 = icmp eq %struct.rtx_def* %call14, %4, !dbg !3116
  br i1 %cmp24, label %lor.lhs.false, label %if.then30, !dbg !3117

lor.lhs.false:                                    ; preds = %if.then13
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !3118
  %cmp29 = icmp eq %struct.rtx_def* %call19, %5, !dbg !3119
  br i1 %cmp29, label %cleanup52, label %if.then30, !dbg !3120

if.then30:                                        ; preds = %lor.lhs.false, %if.then13
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call14, i64 0, i32 0, !dbg !3121
  %bf.load31 = load i32, i32* %6, align 8, !dbg !3121
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !3121
  %cmp33 = icmp eq i32 %bf.clear32, 30, !dbg !3121
  br i1 %cmp33, label %if.then34, label %if.else, !dbg !3124

if.then34:                                        ; preds = %if.then30
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call14, i64 0, i32 1, !dbg !3125
  %arrayidx36 = bitcast %union.u* %u35 to i64*, !dbg !3125
  %7 = load i64, i64* %arrayidx36, align 8, !dbg !3125
  %call37 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %call19, i64 %7) #6, !dbg !3126
  br label %cleanup52, !dbg !3127

if.else:                                          ; preds = %if.then30
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call19, i64 0, i32 0, !dbg !3128
  %bf.load38 = load i32, i32* %8, align 8, !dbg !3128
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !3128
  %cmp40 = icmp eq i32 %bf.clear39, 30, !dbg !3128
  br i1 %cmp40, label %if.then41, label %if.end47, !dbg !3130

if.then41:                                        ; preds = %if.else
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call19, i64 0, i32 1, !dbg !3131
  %arrayidx44 = bitcast %union.u* %u42 to i64*, !dbg !3131
  %9 = load i64, i64* %arrayidx44, align 8, !dbg !3131
  %call45 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %call14, i64 %9) #6, !dbg !3132
  br label %cleanup52, !dbg !3133

if.end47:                                         ; preds = %if.else
  %bf.load48 = load i32, i32* %0, align 8, !dbg !3134
  %bf.lshr = lshr i32 %bf.load48, 16, !dbg !3134
  %bf.clear49 = and i32 %bf.lshr, 255, !dbg !3134
  %call50 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %bf.clear49, %struct.rtx_def* %call14, %struct.rtx_def* %call19) #6, !dbg !3134
  br label %cleanup52, !dbg !3135

cleanup52:                                        ; preds = %lor.lhs.false, %if.end47, %if.then41, %if.then34
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then34 ], [ false, %if.then41 ], [ false, %if.end47 ], [ true, %lor.lhs.false ]
  %retval.2 = phi %struct.rtx_def* [ %call37, %if.then34 ], [ %call45, %if.then41 ], [ %call50, %if.end47 ], [ %retval.1, %lor.lhs.false ], !dbg !3089
  br i1 %cleanup.dest.slot.1, label %if.end68, label %return

if.else56:                                        ; preds = %if.end9
  %cmp59 = icmp eq i32 %bf.clear11, 43, !dbg !3136
  br i1 %cmp59, label %if.then60, label %if.end68, !dbg !3138

if.then60:                                        ; preds = %if.else56
  %arrayidx63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3139
  %rt_rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**, !dbg !3139
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx64, align 8, !dbg !3139
  %call65 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %10) #7, !dbg !3140
  %call66 = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %x, %struct.rtx_def* %call65) #6, !dbg !3141
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call66, metadata !3081, metadata !DIExpression()), !dbg !3089
  br label %if.end68, !dbg !3142

if.end68:                                         ; preds = %if.else56, %if.then60, %cleanup52
  %x.addr.1 = phi %struct.rtx_def* [ %x, %cleanup52 ], [ %call66, %if.then60 ], [ %x, %if.else56 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.1, metadata !3081, metadata !DIExpression()), !dbg !3089
  br label %return, !dbg !3143

return:                                           ; preds = %cleanup52, %cleanup, %if.end68
  %retval.3 = phi %struct.rtx_def* [ %retval.0, %cleanup ], [ %retval.2, %cleanup52 ], [ %x.addr.1, %if.end68 ], !dbg !3089
  ret %struct.rtx_def* %retval.3, !dbg !3144
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !3145 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3149, metadata !DIExpression()), !dbg !3150
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3151
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3151
  %0 = load i32, i32* %rt_uint, align 8, !dbg !3151
  ret i32 %0, !dbg !3152
}

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @find_base_term(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !3153 {
entry:
  br label %tailrecurse, !dbg !3170

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %x.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !3155, metadata !DIExpression()), !dbg !3171
  %call = tail call %struct.rtx_def* @ix86_find_base_term(%struct.rtx_def* %x.tr) #6, !dbg !3172
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3155, metadata !DIExpression()), !dbg !3171
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !3173
  %bf.load = load i32, i32* %0, align 8, !dbg !3173
  %trunc = trunc i32 %bf.load to i16, !dbg !3174
  switch i16 %trunc, label %sw.default [
    i16 37, label %sw.bb
    i16 100, label %sw.bb15
    i16 121, label %sw.bb27
    i16 75, label %sw.bb27
    i16 74, label %sw.bb27
    i16 77, label %sw.bb27
    i16 76, label %sw.bb27
    i16 78, label %sw.bb27
    i16 79, label %sw.bb27
    i16 99, label %sw.bb30
    i16 98, label %sw.bb30
    i16 1, label %sw.bb51
    i16 122, label %sw.bb64
    i16 35, label %sw.bb70
    i16 49, label %sw.bb86
    i16 50, label %sw.bb86
    i16 61, label %sw.bb195
    i16 45, label %cleanup221.loopexit4
    i16 44, label %cleanup221.loopexit4
  ], !dbg !3174

sw.bb:                                            ; preds = %tailrecurse
  %call.lcssa19 = phi %struct.rtx_def* [ %call, %tailrecurse ], !dbg !3172
  %call1 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %call.lcssa19) #7, !dbg !3175
  %1 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !3175
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %1, i64 0, i32 0, !dbg !3175
  %call2 = tail call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %base) #7, !dbg !3175
  %cmp = icmp ult i32 %call1, %call2, !dbg !3175
  br i1 %cmp, label %cond.true3, label %cleanup221, !dbg !3175

cond.true3:                                       ; preds = %sw.bb
  %2 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !3175
  %base6 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %2, i64 0, i32 0, !dbg !3175
  %call10 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %call.lcssa19) #7, !dbg !3175
  %call11 = tail call fastcc %struct.rtx_def* @VEC_rtx_base_index(%struct.VEC_rtx_base* %base6, i32 %call10) #7, !dbg !3175
  br label %cleanup221, !dbg !3175

sw.bb15:                                          ; preds = %tailrecurse
  %call16 = tail call zeroext i8 @target_default_pointer_address_modes_p() #6, !dbg !3176
  %tobool17 = icmp eq i8 %call16, 0, !dbg !3176
  br i1 %tobool17, label %cleanup221.loopexit4, label %if.end, !dbg !3178

if.end:                                           ; preds = %sw.bb15
  %bf.load18 = load i32, i32* %0, align 8, !dbg !3179
  %bf.lshr = lshr i32 %bf.load18, 16, !dbg !3179
  %bf.clear19 = and i32 %bf.lshr, 255, !dbg !3179
  %idxprom = zext i32 %bf.clear19 to i64, !dbg !3179
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3179
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3179
  %4 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 16), align 16, !dbg !3181
  %cmp23 = icmp ult i8 %3, %4, !dbg !3182
  br i1 %cmp23, label %cleanup221.loopexit4, label %sw.bb27, !dbg !3183

sw.bb27:                                          ; preds = %if.end, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %arrayidx28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3184
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !3184
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3184
  br label %tailrecurse.backedge, !dbg !3170

tailrecurse.backedge:                             ; preds = %sw.bb27, %sw.bb64, %if.then213, %if.then104
  %x.tr.be = phi %struct.rtx_def* [ %5, %sw.bb27 ], [ %12, %sw.bb64 ], [ %29, %if.then213 ], [ %17, %if.then104 ]
  br label %tailrecurse, !dbg !3171

sw.bb30:                                          ; preds = %tailrecurse, %tailrecurse
  %call.lcssa20 = phi %struct.rtx_def* [ %call, %tailrecurse ], [ %call, %tailrecurse ], !dbg !3172
  %call31 = tail call zeroext i8 @target_default_pointer_address_modes_p() #6, !dbg !3185
  %tobool32 = icmp eq i8 %call31, 0, !dbg !3185
  br i1 %tobool32, label %cleanup221, label %if.end34, !dbg !3187

if.end34:                                         ; preds = %sw.bb30
  %arrayidx37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call.lcssa20, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3188
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !3188
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !3188
  %call39 = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %6) #7, !dbg !3189
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call39, metadata !3158, metadata !DIExpression()), !dbg !3190
  %cmp40 = icmp eq %struct.rtx_def* %call39, null, !dbg !3191
  br i1 %cmp40, label %cleanup221, label %land.lhs.true, !dbg !3193

land.lhs.true:                                    ; preds = %if.end34
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call39, i64 0, i32 0, !dbg !3194
  %bf.load42 = load i32, i32* %7, align 8, !dbg !3194
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !3194
  %idxprom44 = zext i32 %bf.clear43 to i64, !dbg !3194
  %arrayidx45 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom44, !dbg !3194
  %8 = load i32, i32* %arrayidx45, align 4, !dbg !3194
  %cmp46 = icmp eq i32 %8, 9, !dbg !3194
  br i1 %cmp46, label %if.then48, label %cleanup221, !dbg !3195

if.then48:                                        ; preds = %land.lhs.true
  %call49 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* nonnull %call39, i8 zeroext 0) #6, !dbg !3196
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !3158, metadata !DIExpression()), !dbg !3190
  br label %cleanup221, !dbg !3197

sw.bb51:                                          ; preds = %tailrecurse
  %call.lcssa21 = phi %struct.rtx_def* [ %call, %tailrecurse ], !dbg !3172
  %arrayidx54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call.lcssa21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3198
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx54 to %struct.cselib_val_struct**, !dbg !3198
  %9 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %rt_cselib, align 8, !dbg !3198
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct* %9, metadata !3156, metadata !DIExpression()), !dbg !3171
  %tobool55 = icmp eq %struct.cselib_val_struct* %9, null, !dbg !3199
  br i1 %tobool55, label %cleanup221, label %if.end57, !dbg !3201

if.end57:                                         ; preds = %sw.bb51
  %locs = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %9, i64 0, i32 3, !dbg !3202
  br label %for.cond, !dbg !3204

for.cond:                                         ; preds = %for.inc, %if.end57
  %l.0.in = phi %struct.elt_loc_list** [ %locs, %if.end57 ], [ %next, %for.inc ]
  %l.0 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l.0.in, align 8, !dbg !3205
  call void @llvm.dbg.value(metadata %struct.elt_loc_list* %l.0, metadata !3157, metadata !DIExpression()), !dbg !3171
  %tobool58 = icmp eq %struct.elt_loc_list* %l.0, null, !dbg !3206
  br i1 %tobool58, label %cleanup221.loopexit, label %for.body, !dbg !3206

for.body:                                         ; preds = %for.cond
  %loc = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %l.0, i64 0, i32 1, !dbg !3207
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !3207
  %call59 = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %10) #7, !dbg !3210
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call59, metadata !3155, metadata !DIExpression()), !dbg !3171
  %cmp60 = icmp eq %struct.rtx_def* %call59, null, !dbg !3211
  br i1 %cmp60, label %for.inc, label %cleanup221.loopexit, !dbg !3212

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %l.0, i64 0, i32 0, !dbg !3213
  br label %for.cond, !dbg !3214, !llvm.loop !3215

sw.bb64:                                          ; preds = %tailrecurse
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3217
  %rt_rtx68 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !3217
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx68, align 8, !dbg !3217
  br label %tailrecurse.backedge, !dbg !3218

sw.bb70:                                          ; preds = %tailrecurse
  %arrayidx73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3219
  %rt_rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !3219
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !3219
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !3155, metadata !DIExpression()), !dbg !3171
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 0, !dbg !3220
  %bf.load75 = load i32, i32* %14, align 8, !dbg !3220
  %bf.clear76 = and i32 %bf.load75, 65535, !dbg !3220
  %cmp77 = icmp eq i32 %bf.clear76, 49, !dbg !3222
  br i1 %cmp77, label %sw.bb86, label %land.lhs.true79, !dbg !3223

land.lhs.true79:                                  ; preds = %sw.bb70
  %cmp82 = icmp eq i32 %bf.clear76, 50, !dbg !3224
  br i1 %cmp82, label %sw.bb86, label %cleanup221.loopexit4, !dbg !3225

sw.bb86:                                          ; preds = %land.lhs.true79, %sw.bb70, %tailrecurse, %tailrecurse
  %x.addr.0 = phi %struct.rtx_def* [ %call, %tailrecurse ], [ %call, %tailrecurse ], [ %13, %land.lhs.true79 ], [ %13, %sw.bb70 ], !dbg !3171
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !3155, metadata !DIExpression()), !dbg !3171
  %arrayidx89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3226
  %rt_rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**, !dbg !3226
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx90, align 8, !dbg !3226
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !3161, metadata !DIExpression()), !dbg !3227
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3228
  %rt_rtx94 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !3228
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx94, align 8, !dbg !3228
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !3163, metadata !DIExpression()), !dbg !3227
  %18 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !3229
  %cmp95 = icmp eq %struct.rtx_def* %15, %18, !dbg !3231
  br i1 %cmp95, label %land.lhs.true97, label %if.end106, !dbg !3232

land.lhs.true97:                                  ; preds = %sw.bb86
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 0, !dbg !3233
  %bf.load98 = load i32, i32* %19, align 8, !dbg !3233
  %bf.clear99 = and i32 %bf.load98, 65535, !dbg !3233
  %idxprom100 = zext i32 %bf.clear99 to i64, !dbg !3233
  %arrayidx101 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom100, !dbg !3233
  %20 = load i32, i32* %arrayidx101, align 4, !dbg !3233
  %cmp102 = icmp eq i32 %20, 9, !dbg !3233
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !3234

if.then104:                                       ; preds = %land.lhs.true97
  br label %tailrecurse.backedge, !dbg !3235

if.end106:                                        ; preds = %land.lhs.true97, %sw.bb86
  %.lcssa18 = phi %struct.rtx_def* [ %15, %land.lhs.true97 ], [ %15, %sw.bb86 ], !dbg !3226
  %.lcssa = phi %struct.rtx_def* [ %17, %land.lhs.true97 ], [ %17, %sw.bb86 ], !dbg !3228
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa18, i64 0, i32 0, !dbg !3236
  %bf.load107 = load i32, i32* %21, align 8, !dbg !3236
  %bf.clear108 = and i32 %bf.load107, 65535, !dbg !3236
  %cmp109 = icmp eq i32 %bf.clear108, 37, !dbg !3236
  br i1 %cmp109, label %land.lhs.true111, label %if.end122, !dbg !3237

land.lhs.true111:                                 ; preds = %if.end106
  %bf.clear114 = and i32 %bf.load107, 1073741824, !dbg !3238
  %tobool115 = icmp eq i32 %bf.clear114, 0, !dbg !3238
  br i1 %tobool115, label %if.end122, label %if.then116, !dbg !3239

if.then116:                                       ; preds = %land.lhs.true111
  %call118 = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %.lcssa18) #7, !dbg !3240
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call118, metadata !3164, metadata !DIExpression()), !dbg !3241
  %tobool119 = icmp eq %struct.rtx_def* %call118, null, !dbg !3242
  br i1 %tobool119, label %if.end122, label %cleanup221

if.end122:                                        ; preds = %land.lhs.true111, %if.then116, %if.end106
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa, i64 0, i32 0, !dbg !3244
  %bf.load123 = load i32, i32* %22, align 8, !dbg !3244
  %bf.clear124 = and i32 %bf.load123, 65535, !dbg !3244
  %cmp125 = icmp eq i32 %bf.clear124, 37, !dbg !3244
  br i1 %cmp125, label %land.lhs.true127, label %if.end141, !dbg !3245

land.lhs.true127:                                 ; preds = %if.end122
  %bf.clear130 = and i32 %bf.load123, 1073741824, !dbg !3246
  %tobool131 = icmp eq i32 %bf.clear130, 0, !dbg !3246
  br i1 %tobool131, label %if.end141, label %if.then132, !dbg !3247

if.then132:                                       ; preds = %land.lhs.true127
  %call134 = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %.lcssa) #7, !dbg !3248
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call134, metadata !3167, metadata !DIExpression()), !dbg !3249
  %tobool135 = icmp eq %struct.rtx_def* %call134, null, !dbg !3250
  br i1 %tobool135, label %if.end141, label %cleanup221

if.end141:                                        ; preds = %if.then132, %land.lhs.true127, %if.end122
  %call142 = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %.lcssa18) #7, !dbg !3252
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call142, metadata !3161, metadata !DIExpression()), !dbg !3227
  %call143 = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %.lcssa) #7, !dbg !3253
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call143, metadata !3163, metadata !DIExpression()), !dbg !3227
  %cmp144 = icmp eq %struct.rtx_def* %call142, null, !dbg !3254
  br i1 %cmp144, label %if.end167, label %land.lhs.true146, !dbg !3256

land.lhs.true146:                                 ; preds = %if.end141
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call142, i64 0, i32 0, !dbg !3257
  %bf.load147 = load i32, i32* %23, align 8, !dbg !3257
  %bf.clear148 = and i32 %bf.load147, 65535, !dbg !3257
  %cmp149 = icmp eq i32 %bf.clear148, 45, !dbg !3258
  br i1 %cmp149, label %cleanup221, label %lor.lhs.false, !dbg !3259

lor.lhs.false:                                    ; preds = %land.lhs.true146
  %cmp153 = icmp eq i32 %bf.clear148, 44, !dbg !3260
  br i1 %cmp153, label %cleanup221, label %lor.lhs.false155, !dbg !3261

lor.lhs.false155:                                 ; preds = %lor.lhs.false
  %cmp158 = icmp eq i32 %bf.clear148, 6, !dbg !3262
  br i1 %cmp158, label %land.lhs.true160, label %if.end167, !dbg !3263

land.lhs.true160:                                 ; preds = %lor.lhs.false155
  %bf.clear163 = and i32 %bf.load147, 16711680, !dbg !3264
  %cmp164 = icmp eq i32 %bf.clear163, 0, !dbg !3265
  br i1 %cmp164, label %if.end167, label %cleanup221, !dbg !3266

if.end167:                                        ; preds = %land.lhs.true160, %if.end141, %lor.lhs.false155
  %cmp168 = icmp eq %struct.rtx_def* %call143, null, !dbg !3267
  br i1 %cmp168, label %if.end192, label %land.lhs.true170, !dbg !3269

land.lhs.true170:                                 ; preds = %if.end167
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call143, i64 0, i32 0, !dbg !3270
  %bf.load171 = load i32, i32* %24, align 8, !dbg !3270
  %bf.clear172 = and i32 %bf.load171, 65535, !dbg !3270
  %cmp173 = icmp eq i32 %bf.clear172, 45, !dbg !3271
  br i1 %cmp173, label %cleanup221, label %lor.lhs.false175, !dbg !3272

lor.lhs.false175:                                 ; preds = %land.lhs.true170
  %cmp178 = icmp eq i32 %bf.clear172, 44, !dbg !3273
  br i1 %cmp178, label %cleanup221, label %lor.lhs.false180, !dbg !3274

lor.lhs.false180:                                 ; preds = %lor.lhs.false175
  %cmp183 = icmp eq i32 %bf.clear172, 6, !dbg !3275
  br i1 %cmp183, label %land.lhs.true185, label %if.end192, !dbg !3276

land.lhs.true185:                                 ; preds = %lor.lhs.false180
  %bf.clear188 = and i32 %bf.load171, 16711680, !dbg !3277
  %cmp189 = icmp eq i32 %bf.clear188, 0, !dbg !3278
  br i1 %cmp189, label %if.end192, label %cleanup221, !dbg !3279

if.end192:                                        ; preds = %land.lhs.true185, %if.end167, %lor.lhs.false180
  br label %cleanup221, !dbg !3280

sw.bb195:                                         ; preds = %tailrecurse
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3281
  %26 = bitcast %union.rtunion_def* %25 to i32**, !dbg !3281
  %27 = load i32*, i32** %26, align 8, !dbg !3281
  %bf.load200 = load i32, i32* %27, align 8, !dbg !3281
  %bf.clear201 = and i32 %bf.load200, 65535, !dbg !3281
  %cmp202 = icmp eq i32 %bf.clear201, 30, !dbg !3281
  br i1 %cmp202, label %land.lhs.true204, label %cleanup221.loopexit4, !dbg !3283

land.lhs.true204:                                 ; preds = %sw.bb195
  %u209 = getelementptr inbounds i32, i32* %27, i64 2, !dbg !3284
  %arrayidx210 = bitcast i32* %u209 to i64*, !dbg !3284
  %28 = load i64, i64* %arrayidx210, align 8, !dbg !3284
  %cmp211 = icmp eq i64 %28, 0, !dbg !3285
  br i1 %cmp211, label %cleanup221.loopexit4, label %if.then213, !dbg !3286

if.then213:                                       ; preds = %land.lhs.true204
  %arrayidx216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3287
  %rt_rtx217 = bitcast %union.rtunion_def* %arrayidx216 to %struct.rtx_def**, !dbg !3287
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx217, align 8, !dbg !3287
  br label %tailrecurse.backedge, !dbg !3288

sw.default:                                       ; preds = %tailrecurse
  br label %cleanup221, !dbg !3289

cleanup221.loopexit:                              ; preds = %for.cond, %for.body
  %retval.4.ph = phi %struct.rtx_def* [ null, %for.cond ], [ %call59, %for.body ]
  br label %cleanup221, !dbg !3290

cleanup221.loopexit4:                             ; preds = %if.end, %sw.bb195, %tailrecurse, %tailrecurse, %land.lhs.true204, %land.lhs.true79, %sw.bb15
  %retval.4.ph5 = phi %struct.rtx_def* [ %call, %tailrecurse ], [ %call, %tailrecurse ], [ null, %sw.bb195 ], [ null, %land.lhs.true204 ], [ null, %land.lhs.true79 ], [ null, %if.end ], [ null, %sw.bb15 ]
  br label %cleanup221, !dbg !3290

cleanup221:                                       ; preds = %if.then132, %cleanup221.loopexit4, %cleanup221.loopexit, %if.end34, %sw.bb30, %sw.bb51, %land.lhs.true160, %land.lhs.true185, %if.end192, %if.then116, %lor.lhs.false, %land.lhs.true146, %lor.lhs.false175, %land.lhs.true170, %land.lhs.true, %if.then48, %cond.true3, %sw.bb, %sw.default
  %retval.4 = phi %struct.rtx_def* [ null, %sw.default ], [ %call11, %cond.true3 ], [ null, %sw.bb ], [ null, %sw.bb30 ], [ %call49, %if.then48 ], [ %call39, %land.lhs.true ], [ null, %if.end34 ], [ null, %sw.bb51 ], [ %call118, %if.then116 ], [ %call134, %if.then132 ], [ null, %if.end192 ], [ %call142, %land.lhs.true160 ], [ %call142, %lor.lhs.false ], [ %call142, %land.lhs.true146 ], [ %call143, %land.lhs.true185 ], [ %call143, %lor.lhs.false175 ], [ %call143, %land.lhs.true170 ], [ %retval.4.ph, %cleanup221.loopexit ], [ %retval.4.ph5, %cleanup221.loopexit4 ], !dbg !3291
  ret %struct.rtx_def* %retval.4, !dbg !3290
}

declare dso_local %struct.rtx_def* @ix86_find_base_term(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %vec_) unnamed_addr #0 !dbg !3292 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !3298, metadata !DIExpression()), !dbg !3299
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !3300
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3300

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !3300
  %0 = load i32, i32* %num, align 8, !dbg !3300
  br label %cond.end, !dbg !3300

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3300
  ret i32 %cond, !dbg !3300
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @VEC_rtx_base_index(%struct.VEC_rtx_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3301 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !3305, metadata !DIExpression()), !dbg !3307
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3306, metadata !DIExpression()), !dbg !3307
  br label %land.end, !dbg !3308

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3308
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3308
  %0 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !3308
  ret %struct.rtx_def* %0, !dbg !3308
}

declare dso_local zeroext i8 @target_default_pointer_address_modes_p() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @convert_memory_address_addr_space(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_addr(%struct.rtx_def* %x) local_unnamed_addr #4 !dbg !3309 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3311, metadata !DIExpression()), !dbg !3314
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3315
  %bf.load = load i32, i32* %0, align 8, !dbg !3315
  %bf.clear = and i32 %bf.load, 65535, !dbg !3315
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !3317
  br i1 %cmp, label %if.end, label %cleanup, !dbg !3318

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3319
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx to %struct.cselib_val_struct**, !dbg !3319
  %1 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %rt_cselib, align 8, !dbg !3319
  call void @llvm.dbg.value(metadata %struct.cselib_val_struct* %1, metadata !3312, metadata !DIExpression()), !dbg !3314
  %tobool = icmp eq %struct.cselib_val_struct* %1, null, !dbg !3320
  br i1 %tobool, label %cleanup, label %if.then1, !dbg !3322

if.then1:                                         ; preds = %if.end
  %locs = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %1, i64 0, i32 3, !dbg !3323
  br label %for.cond, !dbg !3326

for.cond:                                         ; preds = %for.inc, %if.then1
  %l.0.in = phi %struct.elt_loc_list** [ %locs, %if.then1 ], [ %next, %for.inc ]
  %l.0 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l.0.in, align 8, !dbg !3327
  call void @llvm.dbg.value(metadata %struct.elt_loc_list* %l.0, metadata !3313, metadata !DIExpression()), !dbg !3314
  %tobool2 = icmp eq %struct.elt_loc_list* %l.0, null, !dbg !3328
  br i1 %tobool2, label %for.end, label %for.body, !dbg !3328

for.body:                                         ; preds = %for.cond
  %loc = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %l.0, i64 0, i32 1, !dbg !3329
  %2 = bitcast %struct.rtx_def** %loc to i32**, !dbg !3329
  %3 = load i32*, i32** %2, align 8, !dbg !3329
  %bf.load3 = load i32, i32* %3, align 8, !dbg !3329
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !3329
  %idxprom = zext i32 %bf.clear4 to i64, !dbg !3329
  %arrayidx5 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !3329
  %4 = load i32, i32* %arrayidx5, align 4, !dbg !3329
  %cmp6 = icmp eq i32 %4, 9, !dbg !3329
  br i1 %cmp6, label %if.then7, label %for.inc, !dbg !3332

if.then7:                                         ; preds = %for.body
  %.lcssa4 = phi i32* [ %3, %for.body ], !dbg !3329
  %5 = bitcast i32* %.lcssa4 to %struct.rtx_def*, !dbg !3332
  br label %cleanup, !dbg !3333

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %l.0, i64 0, i32 0, !dbg !3334
  br label %for.cond, !dbg !3335, !llvm.loop !3336

for.end:                                          ; preds = %for.cond
  br label %for.cond11, !dbg !3338

for.cond11:                                       ; preds = %for.inc25, %for.end
  %l.1.in = phi %struct.elt_loc_list** [ %locs, %for.end ], [ %next26, %for.inc25 ]
  %l.1 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l.1.in, align 8, !dbg !3340
  call void @llvm.dbg.value(metadata %struct.elt_loc_list* %l.1, metadata !3313, metadata !DIExpression()), !dbg !3314
  %tobool12 = icmp eq %struct.elt_loc_list* %l.1, null, !dbg !3341
  br i1 %tobool12, label %for.end27, label %for.body13, !dbg !3341

for.body13:                                       ; preds = %for.cond11
  %loc14 = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %l.1, i64 0, i32 1, !dbg !3342
  %6 = bitcast %struct.rtx_def** %loc14 to i32**, !dbg !3342
  %7 = load i32*, i32** %6, align 8, !dbg !3342
  %bf.load15 = load i32, i32* %7, align 8, !dbg !3342
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !3342
  %cmp17 = icmp eq i32 %bf.clear16, 37, !dbg !3342
  br i1 %cmp17, label %for.inc25, label %land.lhs.true, !dbg !3345

land.lhs.true:                                    ; preds = %for.body13
  %cmp21 = icmp eq i32 %bf.clear16, 43, !dbg !3346
  br i1 %cmp21, label %for.inc25, label %if.then22, !dbg !3347

if.then22:                                        ; preds = %land.lhs.true
  %.lcssa = phi i32* [ %7, %land.lhs.true ], !dbg !3342
  %8 = bitcast i32* %.lcssa to %struct.rtx_def*, !dbg !3345
  br label %cleanup, !dbg !3348

for.inc25:                                        ; preds = %for.body13, %land.lhs.true
  %next26 = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %l.1, i64 0, i32 0, !dbg !3349
  br label %for.cond11, !dbg !3350, !llvm.loop !3351

for.end27:                                        ; preds = %for.cond11
  %9 = load %struct.elt_loc_list*, %struct.elt_loc_list** %locs, align 8, !dbg !3353
  %tobool29 = icmp eq %struct.elt_loc_list* %9, null, !dbg !3355
  br i1 %tobool29, label %cleanup, label %if.then30, !dbg !3356

if.then30:                                        ; preds = %for.end27
  %loc32 = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %9, i64 0, i32 1, !dbg !3357
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc32, align 8, !dbg !3357
  br label %cleanup, !dbg !3358

cleanup:                                          ; preds = %for.end27, %if.end, %entry, %if.then30, %if.then22, %if.then7
  %retval.0 = phi %struct.rtx_def* [ %5, %if.then7 ], [ %8, %if.then22 ], [ %10, %if.then30 ], [ %x, %entry ], [ %x, %for.end27 ], [ %x, %if.end ], !dbg !3314
  ret %struct.rtx_def* %retval.0, !dbg !3359
}

; Function Attrs: nounwind uwtable
define dso_local i32 @read_dependence(%struct.rtx_def* %mem, %struct.rtx_def* %x) local_unnamed_addr #4 !dbg !3360 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !3364, metadata !DIExpression()), !dbg !3366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3365, metadata !DIExpression()), !dbg !3366
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3367
  %bf.load = load i32, i32* %0, align 8, !dbg !3367
  %bf.clear = and i32 %bf.load, 134217728, !dbg !3367
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !3367
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3368

land.rhs:                                         ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !3369
  %bf.load1 = load i32, i32* %1, align 8, !dbg !3369
  %bf.lshr2 = lshr i32 %bf.load1, 27, !dbg !3369
  %bf.clear3 = and i32 %bf.lshr2, 1, !dbg !3369
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i32 [ 0, %entry ], [ %bf.clear3, %land.rhs ]
  ret i32 %2, !dbg !3370
}

; Function Attrs: nounwind uwtable
define dso_local i32 @nonoverlapping_memrefs_p(%struct.rtx_def* %x, %struct.rtx_def* %y) local_unnamed_addr #4 !dbg !3371 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3373, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !3374, metadata !DIExpression()), !dbg !3404
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3405
  %rt_mem = bitcast %union.rtunion_def* %0 to %struct.mem_attrs**, !dbg !3405
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3405
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !3405
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !3405

cond.false:                                       ; preds = %entry
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 0, !dbg !3405
  %2 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !3405
  %3 = bitcast %union.tree_node* %2 to %struct.tree_exp*, !dbg !3405
  br label %cond.end, !dbg !3405

cond.end:                                         ; preds = %entry, %cond.false
  %4 = phi %struct.tree_exp* [ %3, %cond.false ], [ null, %entry ], !dbg !3405
  %cond = phi %union.tree_node* [ %2, %cond.false ], [ null, %entry ], !dbg !3405
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !3375, metadata !DIExpression()), !dbg !3404
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3406
  %rt_mem8 = bitcast %union.rtunion_def* %5 to %struct.mem_attrs**, !dbg !3406
  %6 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem8, align 8, !dbg !3406
  %cmp9 = icmp eq %struct.mem_attrs* %6, null, !dbg !3406
  br i1 %cmp9, label %cond.end17, label %cond.false11, !dbg !3406

cond.false11:                                     ; preds = %cond.end
  %expr16 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %6, i64 0, i32 0, !dbg !3406
  %7 = load %union.tree_node*, %union.tree_node** %expr16, align 8, !dbg !3406
  %8 = bitcast %union.tree_node* %7 to %struct.tree_exp*, !dbg !3406
  br label %cond.end17, !dbg !3406

cond.end17:                                       ; preds = %cond.end, %cond.false11
  %9 = phi %struct.tree_exp* [ %8, %cond.false11 ], [ null, %cond.end ], !dbg !3406
  %cond18 = phi %union.tree_node* [ %7, %cond.false11 ], [ null, %cond.end ], !dbg !3406
  call void @llvm.dbg.value(metadata %union.tree_node* %cond18, metadata !3376, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i64 0, metadata !3383, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i64 0, metadata !3384, metadata !DIExpression()), !dbg !3404
  %cmp19 = icmp eq %union.tree_node* %cond, null, !dbg !3407
  %cmp20 = icmp eq %union.tree_node* %cond18, null, !dbg !3409
  %or.cond = or i1 %cmp19, %cmp20, !dbg !3410
  br i1 %or.cond, label %cleanup887, label %if.end, !dbg !3410

if.end:                                           ; preds = %cond.end17
  %call = tail call %union.tree_node* @get_spill_slot_decl(i8 zeroext 0) #6, !dbg !3411
  %cmp21 = icmp eq %union.tree_node* %cond, %call, !dbg !3413
  br i1 %cmp21, label %land.lhs.true, label %lor.lhs.false33, !dbg !3414

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3415
  %cmp26 = icmp eq %struct.mem_attrs* %10, null, !dbg !3415
  br i1 %cmp26, label %cleanup887, label %cond.false28, !dbg !3416

cond.false28:                                     ; preds = %land.lhs.true
  %offset = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %10, i64 0, i32 1, !dbg !3415
  %11 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8, !dbg !3415
  %tobool = icmp eq %struct.rtx_def* %11, null, !dbg !3415
  br i1 %tobool, label %cleanup887, label %lor.lhs.false33, !dbg !3416

lor.lhs.false33:                                  ; preds = %cond.false28, %if.end
  %call34 = tail call %union.tree_node* @get_spill_slot_decl(i8 zeroext 0) #6, !dbg !3417
  %cmp35 = icmp eq %union.tree_node* %cond18, %call34, !dbg !3418
  br i1 %cmp35, label %land.lhs.true36, label %if.end51, !dbg !3419

land.lhs.true36:                                  ; preds = %lor.lhs.false33
  %12 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem8, align 8, !dbg !3420
  %cmp41 = icmp eq %struct.mem_attrs* %12, null, !dbg !3420
  br i1 %cmp41, label %cleanup887, label %cond.false43, !dbg !3421

cond.false43:                                     ; preds = %land.lhs.true36
  %offset48 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %12, i64 0, i32 1, !dbg !3420
  %13 = load %struct.rtx_def*, %struct.rtx_def** %offset48, align 8, !dbg !3420
  %tobool49 = icmp eq %struct.rtx_def* %13, null, !dbg !3420
  br i1 %tobool49, label %cleanup887, label %if.end51, !dbg !3421

if.end51:                                         ; preds = %cond.false43, %lor.lhs.false33
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3422
  %bf.load = load i64, i64* %14, align 8, !dbg !3422
  %bf.cast12 = and i64 %bf.load, 65535, !dbg !3424
  %cmp52 = icmp eq i64 %bf.cast12, 41, !dbg !3424
  br i1 %cmp52, label %land.lhs.true53, label %if.end63, !dbg !3425

land.lhs.true53:                                  ; preds = %if.end51
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3426
  %bf.load55 = load i64, i64* %15, align 8, !dbg !3426
  %bf.cast5731 = and i64 %bf.load55, 65535, !dbg !3427
  %cmp58 = icmp eq i64 %bf.cast5731, 41, !dbg !3427
  br i1 %cmp58, label %land.lhs.true59, label %if.end63, !dbg !3428

land.lhs.true59:                                  ; preds = %land.lhs.true53
  %call60 = tail call fastcc zeroext i8 @nonoverlapping_component_refs_p(%union.tree_node* %cond, %union.tree_node* %cond18) #7, !dbg !3429
  %tobool61 = icmp eq i8 %call60, 0, !dbg !3429
  br i1 %tobool61, label %if.end63, label %cleanup887, !dbg !3430

if.end63:                                         ; preds = %land.lhs.true59, %land.lhs.true53, %if.end51
  %16 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3431
  %cmp68 = icmp eq %struct.mem_attrs* %16, null, !dbg !3431
  br i1 %cmp68, label %cond.end77, label %cond.false71, !dbg !3431

cond.false71:                                     ; preds = %if.end63
  %offset76 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %16, i64 0, i32 1, !dbg !3431
  %17 = load %struct.rtx_def*, %struct.rtx_def** %offset76, align 8, !dbg !3431
  br label %cond.end77, !dbg !3431

cond.end77:                                       ; preds = %if.end63, %cond.false71
  %cond78 = phi %struct.rtx_def* [ %17, %cond.false71 ], [ null, %if.end63 ], !dbg !3431
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond78, metadata !3381, metadata !DIExpression()), !dbg !3404
  %bf.load80 = load i64, i64* %14, align 8, !dbg !3432
  %bf.cast8213 = and i64 %bf.load80, 65535, !dbg !3433
  %cmp83 = icmp eq i64 %bf.cast8213, 41, !dbg !3433
  br i1 %cmp83, label %if.then85, label %if.else, !dbg !3434

if.then85:                                        ; preds = %cond.end77
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3435
  %bf.load87 = load i64, i64* %18, align 8, !dbg !3435
  %bf.cast8928 = and i64 %bf.load87, 65535, !dbg !3436
  %cmp90 = icmp eq i64 %bf.cast8928, 32, !dbg !3436
  br i1 %cmp90, label %land.lhs.true92, label %if.end117, !dbg !3437

land.lhs.true92:                                  ; preds = %if.then85
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %cond18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3438
  %19 = bitcast %union.tree_node** %type to i64**, !dbg !3438
  %20 = load i64*, i64** %19, align 8, !dbg !3438
  %bf.load94 = load i64, i64* %20, align 8, !dbg !3438
  %bf.cast9629 = and i64 %bf.load94, 65535, !dbg !3438
  %cmp97 = icmp eq i64 %bf.cast9629, 10, !dbg !3438
  br i1 %cmp97, label %if.then108, label %lor.lhs.false99, !dbg !3438

lor.lhs.false99:                                  ; preds = %land.lhs.true92
  %cmp106 = icmp eq i64 %bf.cast9629, 12, !dbg !3438
  br i1 %cmp106, label %if.then108, label %if.end117, !dbg !3439

if.then108:                                       ; preds = %lor.lhs.false99, %land.lhs.true92
  %arrayidx109 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %4, i64 0, i32 3, i64 1, !dbg !3440
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx109, align 8, !dbg !3440
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !3388, metadata !DIExpression()), !dbg !3441
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3442
  %22 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3442
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !3393, metadata !DIExpression()), !dbg !3441
  %type111 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3443
  %23 = load %union.tree_node*, %union.tree_node** %type111, align 8, !dbg !3443
  %call112 = tail call zeroext i8 @ipa_type_escape_field_does_not_clobber_p(%union.tree_node* %22, %union.tree_node* %23) #6, !dbg !3445
  %tobool113 = icmp eq i8 %call112, 0, !dbg !3445
  br i1 %tobool113, label %if.end117, label %cleanup887

if.end117:                                        ; preds = %if.then108, %lor.lhs.false99, %if.then85
  %call118 = tail call fastcc %union.tree_node* @decl_for_component_ref(%union.tree_node* %cond) #7, !dbg !3446
  call void @llvm.dbg.value(metadata %union.tree_node* %call118, metadata !3394, metadata !DIExpression()), !dbg !3447
  %tobool119 = icmp eq %union.tree_node* %call118, null, !dbg !3448
  br i1 %tobool119, label %cleanup123, label %if.end121, !dbg !3450

if.end121:                                        ; preds = %if.end117
  %call122 = tail call fastcc %struct.rtx_def* @adjust_offset_for_component_ref(%union.tree_node* %cond, %struct.rtx_def* %cond78) #7, !dbg !3451
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call122, metadata !3381, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata %union.tree_node* %call118, metadata !3375, metadata !DIExpression()), !dbg !3404
  br label %cleanup123, !dbg !3452

cleanup123:                                       ; preds = %if.end117, %if.end121
  %moffsetx.0 = phi %struct.rtx_def* [ %call122, %if.end121 ], [ %cond78, %if.end117 ], !dbg !3404
  %exprx.0 = phi %union.tree_node* [ %call118, %if.end121 ], [ %cond, %if.end117 ], !dbg !3404
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end121 ], [ false, %if.end117 ]
  %retval.2 = phi i32 [ 1, %if.end121 ], [ 0, %if.end117 ], !dbg !3453
  call void @llvm.dbg.value(metadata %union.tree_node* %exprx.0, metadata !3375, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata %struct.rtx_def* %moffsetx.0, metadata !3381, metadata !DIExpression()), !dbg !3404
  br i1 %cleanup.dest.slot.1, label %if.end162, label %cleanup887

if.else:                                          ; preds = %cond.end77
  %cmp130 = icmp eq i64 %bf.cast8213, 47, !dbg !3454
  br i1 %cmp130, label %if.then146, label %lor.lhs.false132, !dbg !3454

lor.lhs.false132:                                 ; preds = %if.else
  %cmp137 = icmp eq i64 %bf.cast8213, 48, !dbg !3454
  br i1 %cmp137, label %if.then146, label %lor.lhs.false139, !dbg !3454

lor.lhs.false139:                                 ; preds = %lor.lhs.false132
  %cmp144 = icmp eq i64 %bf.cast8213, 49, !dbg !3454
  br i1 %cmp144, label %if.then146, label %if.end162, !dbg !3456

if.then146:                                       ; preds = %lor.lhs.false139, %lor.lhs.false132, %if.else
  %arrayidx149 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %4, i64 0, i32 3, i64 0, !dbg !3457
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx149, align 8, !dbg !3457
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !3375, metadata !DIExpression()), !dbg !3404
  %25 = load i32, i32* @flag_argument_noalias, align 4, !dbg !3459
  %cmp150 = icmp slt i32 %25, 2, !dbg !3461
  br i1 %cmp150, label %cleanup887, label %lor.lhs.false152, !dbg !3462

lor.lhs.false152:                                 ; preds = %if.then146
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3463
  %bf.load154 = load i64, i64* %26, align 8, !dbg !3463
  %bf.cast15627 = and i64 %bf.load154, 65535, !dbg !3464
  %cmp157 = icmp eq i64 %bf.cast15627, 34, !dbg !3464
  br i1 %cmp157, label %if.end162, label %cleanup887, !dbg !3465

if.end162:                                        ; preds = %lor.lhs.false152, %lor.lhs.false139, %cleanup123
  %moffsetx.1 = phi %struct.rtx_def* [ %moffsetx.0, %cleanup123 ], [ %cond78, %lor.lhs.false152 ], [ %cond78, %lor.lhs.false139 ], !dbg !3404
  %exprx.2 = phi %union.tree_node* [ %exprx.0, %cleanup123 ], [ %24, %lor.lhs.false152 ], [ %cond, %lor.lhs.false139 ], !dbg !3466
  %retval.3 = phi i32 [ %retval.2, %cleanup123 ], [ undef, %lor.lhs.false152 ], [ undef, %lor.lhs.false139 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exprx.2, metadata !3375, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata %struct.rtx_def* %moffsetx.1, metadata !3381, metadata !DIExpression()), !dbg !3404
  %27 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem8, align 8, !dbg !3467
  %cmp167 = icmp eq %struct.mem_attrs* %27, null, !dbg !3467
  br i1 %cmp167, label %cond.end176, label %cond.false170, !dbg !3467

cond.false170:                                    ; preds = %if.end162
  %offset175 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %27, i64 0, i32 1, !dbg !3467
  %28 = load %struct.rtx_def*, %struct.rtx_def** %offset175, align 8, !dbg !3467
  br label %cond.end176, !dbg !3467

cond.end176:                                      ; preds = %if.end162, %cond.false170
  %cond177 = phi %struct.rtx_def* [ %28, %cond.false170 ], [ null, %if.end162 ], !dbg !3467
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond177, metadata !3382, metadata !DIExpression()), !dbg !3404
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3468
  %bf.load179 = load i64, i64* %29, align 8, !dbg !3468
  %bf.cast18117 = and i64 %bf.load179, 65535, !dbg !3469
  %cmp182 = icmp eq i64 %bf.cast18117, 41, !dbg !3469
  br i1 %cmp182, label %if.then184, label %if.else237, !dbg !3470

if.then184:                                       ; preds = %cond.end176
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %exprx.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3471
  %bf.load186 = load i64, i64* %30, align 8, !dbg !3471
  %bf.cast18824 = and i64 %bf.load186, 65535, !dbg !3472
  %cmp189 = icmp eq i64 %bf.cast18824, 32, !dbg !3472
  br i1 %cmp189, label %land.lhs.true191, label %if.end227, !dbg !3473

land.lhs.true191:                                 ; preds = %if.then184
  %type193 = getelementptr inbounds %union.tree_node, %union.tree_node* %exprx.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3474
  %31 = bitcast %union.tree_node** %type193 to i64**, !dbg !3474
  %32 = load i64*, i64** %31, align 8, !dbg !3474
  %bf.load195 = load i64, i64* %32, align 8, !dbg !3474
  %bf.cast19725 = and i64 %bf.load195, 65535, !dbg !3474
  %cmp198 = icmp eq i64 %bf.cast19725, 10, !dbg !3474
  br i1 %cmp198, label %if.then209, label %lor.lhs.false200, !dbg !3474

lor.lhs.false200:                                 ; preds = %land.lhs.true191
  %cmp207 = icmp eq i64 %bf.cast19725, 12, !dbg !3474
  br i1 %cmp207, label %if.then209, label %if.end227, !dbg !3475

if.then209:                                       ; preds = %lor.lhs.false200, %land.lhs.true191
  %arrayidx213 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %9, i64 0, i32 3, i64 1, !dbg !3476
  %33 = load %union.tree_node*, %union.tree_node** %arrayidx213, align 8, !dbg !3476
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !3396, metadata !DIExpression()), !dbg !3477
  %context216 = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3478
  %34 = load %union.tree_node*, %union.tree_node** %context216, align 8, !dbg !3478
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !3401, metadata !DIExpression()), !dbg !3477
  %type218 = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3479
  %35 = load %union.tree_node*, %union.tree_node** %type218, align 8, !dbg !3479
  %call219 = tail call zeroext i8 @ipa_type_escape_field_does_not_clobber_p(%union.tree_node* %34, %union.tree_node* %35) #6, !dbg !3481
  %tobool220 = icmp ne i8 %call219, 0, !dbg !3481
  %.retval.3 = select i1 %tobool220, i32 1, i32 %retval.3, !dbg !3482
  br i1 %tobool220, label %cleanup887, label %if.end227

if.end227:                                        ; preds = %if.then209, %lor.lhs.false200, %if.then184
  %retval.5 = phi i32 [ %retval.3, %lor.lhs.false200 ], [ %retval.3, %if.then184 ], [ %.retval.3, %if.then209 ], !dbg !3404
  %call229 = tail call fastcc %union.tree_node* @decl_for_component_ref(%union.tree_node* %cond18) #7, !dbg !3483
  call void @llvm.dbg.value(metadata %union.tree_node* %call229, metadata !3402, metadata !DIExpression()), !dbg !3484
  %tobool230 = icmp eq %union.tree_node* %call229, null, !dbg !3485
  br i1 %tobool230, label %cleanup234, label %if.end232, !dbg !3487

if.end232:                                        ; preds = %if.end227
  %call233 = tail call fastcc %struct.rtx_def* @adjust_offset_for_component_ref(%union.tree_node* %cond18, %struct.rtx_def* %cond177) #7, !dbg !3488
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call233, metadata !3382, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata %union.tree_node* %call229, metadata !3376, metadata !DIExpression()), !dbg !3404
  br label %cleanup234, !dbg !3489

cleanup234:                                       ; preds = %if.end227, %if.end232
  %moffsety.0 = phi %struct.rtx_def* [ %call233, %if.end232 ], [ %cond177, %if.end227 ], !dbg !3404
  %expry.0 = phi %union.tree_node* [ %call229, %if.end232 ], [ %cond18, %if.end227 ], !dbg !3404
  %cleanup.dest.slot.3 = phi i1 [ true, %if.end232 ], [ false, %if.end227 ]
  %retval.6 = phi i32 [ %retval.5, %if.end232 ], [ 0, %if.end227 ], !dbg !3490
  call void @llvm.dbg.value(metadata %union.tree_node* %expry.0, metadata !3376, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata %struct.rtx_def* %moffsety.0, metadata !3382, metadata !DIExpression()), !dbg !3404
  br i1 %cleanup.dest.slot.3, label %if.end274, label %cleanup887

if.else237:                                       ; preds = %cond.end176
  %cmp242 = icmp eq i64 %bf.cast18117, 47, !dbg !3491
  br i1 %cmp242, label %if.then258, label %lor.lhs.false244, !dbg !3491

lor.lhs.false244:                                 ; preds = %if.else237
  %cmp249 = icmp eq i64 %bf.cast18117, 48, !dbg !3491
  br i1 %cmp249, label %if.then258, label %lor.lhs.false251, !dbg !3491

lor.lhs.false251:                                 ; preds = %lor.lhs.false244
  %cmp256 = icmp eq i64 %bf.cast18117, 49, !dbg !3491
  br i1 %cmp256, label %if.then258, label %if.end274, !dbg !3493

if.then258:                                       ; preds = %lor.lhs.false251, %lor.lhs.false244, %if.else237
  %arrayidx261 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %9, i64 0, i32 3, i64 0, !dbg !3494
  %36 = load %union.tree_node*, %union.tree_node** %arrayidx261, align 8, !dbg !3494
  call void @llvm.dbg.value(metadata %union.tree_node* %36, metadata !3376, metadata !DIExpression()), !dbg !3404
  %37 = load i32, i32* @flag_argument_noalias, align 4, !dbg !3496
  %cmp262 = icmp slt i32 %37, 2, !dbg !3498
  br i1 %cmp262, label %cleanup887, label %lor.lhs.false264, !dbg !3499

lor.lhs.false264:                                 ; preds = %if.then258
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3500
  %bf.load266 = load i64, i64* %38, align 8, !dbg !3500
  %bf.cast26823 = and i64 %bf.load266, 65535, !dbg !3501
  %cmp269 = icmp eq i64 %bf.cast26823, 34, !dbg !3501
  br i1 %cmp269, label %if.end274, label %cleanup887, !dbg !3502

if.end274:                                        ; preds = %lor.lhs.false264, %lor.lhs.false251, %cleanup234
  %moffsety.1 = phi %struct.rtx_def* [ %moffsety.0, %cleanup234 ], [ %cond177, %lor.lhs.false264 ], [ %cond177, %lor.lhs.false251 ], !dbg !3404
  %expry.2 = phi %union.tree_node* [ %expry.0, %cleanup234 ], [ %36, %lor.lhs.false264 ], [ %cond18, %lor.lhs.false251 ], !dbg !3503
  call void @llvm.dbg.value(metadata %union.tree_node* %expry.2, metadata !3376, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata %struct.rtx_def* %moffsety.1, metadata !3382, metadata !DIExpression()), !dbg !3404
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %exprx.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3504
  %bf.load276 = load i64, i64* %39, align 8, !dbg !3504
  %bf.cast278 = and i64 %bf.load276, 65535, !dbg !3504
  %arrayidx279 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast278, !dbg !3504
  %40 = load i32, i32* %arrayidx279, align 4, !dbg !3504
  %cmp280 = icmp eq i32 %40, 3, !dbg !3504
  br i1 %cmp280, label %lor.lhs.false282, label %cleanup887, !dbg !3506

lor.lhs.false282:                                 ; preds = %if.end274
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %expry.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3507
  %bf.load284 = load i64, i64* %41, align 8, !dbg !3507
  %bf.cast286 = and i64 %bf.load284, 65535, !dbg !3507
  %arrayidx288 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast286, !dbg !3507
  %42 = load i32, i32* %arrayidx288, align 4, !dbg !3507
  %cmp289 = icmp eq i32 %42, 3, !dbg !3507
  br i1 %cmp289, label %if.end292, label %cleanup887, !dbg !3508

if.end292:                                        ; preds = %lor.lhs.false282
  %cmp297 = icmp eq i64 %bf.cast278, 33, !dbg !3509
  br i1 %cmp297, label %cleanup887, label %lor.lhs.false299, !dbg !3511

lor.lhs.false299:                                 ; preds = %if.end292
  %cmp304 = icmp eq i64 %bf.cast286, 33, !dbg !3512
  br i1 %cmp304, label %cleanup887, label %if.end307, !dbg !3513

if.end307:                                        ; preds = %lor.lhs.false299
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %exprx.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3514
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3514
  %tobool308 = icmp eq %struct.rtx_def* %43, null, !dbg !3514
  br i1 %tobool308, label %cond.false312, label %cond.true309, !dbg !3514

cond.true309:                                     ; preds = %if.end307
  br label %cond.end315, !dbg !3514

cond.false312:                                    ; preds = %if.end307
  tail call void @make_decl_rtl(%union.tree_node* %exprx.2) #6, !dbg !3514
  %cond316.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3514
  br label %cond.end315, !dbg !3514

cond.end315:                                      ; preds = %cond.false312, %cond.true309
  %cond316 = phi %struct.rtx_def* [ %cond316.pre, %cond.false312 ], [ %43, %cond.true309 ], !dbg !3514
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond316, metadata !3377, metadata !DIExpression()), !dbg !3404
  %rtl318 = getelementptr inbounds %union.tree_node, %union.tree_node* %expry.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3515
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtl318, align 8, !dbg !3515
  %tobool319 = icmp eq %struct.rtx_def* %44, null, !dbg !3515
  br i1 %tobool319, label %cond.false323, label %cond.true320, !dbg !3515

cond.true320:                                     ; preds = %cond.end315
  br label %cond.end326, !dbg !3515

cond.false323:                                    ; preds = %cond.end315
  tail call void @make_decl_rtl(%union.tree_node* %expry.2) #6, !dbg !3515
  %cond327.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl318, align 8, !dbg !3515
  br label %cond.end326, !dbg !3515

cond.end326:                                      ; preds = %cond.false323, %cond.true320
  %cond327 = phi %struct.rtx_def* [ %cond327.pre, %cond.false323 ], [ %44, %cond.true320 ], !dbg !3515
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond327, metadata !3378, metadata !DIExpression()), !dbg !3404
  %45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond316, i64 0, i32 0, !dbg !3516
  %bf.load328 = load i32, i32* %45, align 8, !dbg !3516
  %bf.clear329 = and i32 %bf.load328, 65535, !dbg !3516
  %cmp330 = icmp eq i32 %bf.clear329, 43, !dbg !3516
  br i1 %cmp330, label %lor.lhs.false332, label %land.lhs.true337, !dbg !3518

lor.lhs.false332:                                 ; preds = %cond.end326
  %46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond327, i64 0, i32 0, !dbg !3519
  %bf.load333 = load i32, i32* %46, align 8, !dbg !3519
  %bf.clear334 = and i32 %bf.load333, 65535, !dbg !3519
  %cmp335 = icmp eq i32 %bf.clear334, 43, !dbg !3519
  br i1 %cmp335, label %if.end341, label %land.lhs.true337, !dbg !3520

land.lhs.true337:                                 ; preds = %lor.lhs.false332, %cond.end326
  %call338 = tail call i32 @rtx_equal_p(%struct.rtx_def* %cond316, %struct.rtx_def* %cond327) #6, !dbg !3521
  %tobool339 = icmp eq i32 %call338, 0, !dbg !3521
  br i1 %tobool339, label %cleanup887, label %land.lhs.true337.if.end341_crit_edge, !dbg !3522

land.lhs.true337.if.end341_crit_edge:             ; preds = %land.lhs.true337
  %bf.load342.pre = load i32, i32* %45, align 8, !dbg !3523
  br label %if.end341, !dbg !3522

if.end341:                                        ; preds = %land.lhs.true337.if.end341_crit_edge, %lor.lhs.false332
  %bf.load387 = phi i32 [ %bf.load342.pre, %land.lhs.true337.if.end341_crit_edge ], [ %bf.load328, %lor.lhs.false332 ], !dbg !3523
  %bf.clear343 = and i32 %bf.load387, 65535, !dbg !3523
  %cmp344 = icmp eq i32 %bf.clear343, 43, !dbg !3523
  br i1 %cmp344, label %land.lhs.true346, label %if.end386, !dbg !3525

land.lhs.true346:                                 ; preds = %if.end341
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond327, i64 0, i32 0, !dbg !3526
  %bf.load347 = load i32, i32* %47, align 8, !dbg !3526
  %bf.clear348 = and i32 %bf.load347, 65535, !dbg !3526
  %cmp349 = icmp eq i32 %bf.clear348, 43, !dbg !3526
  br i1 %cmp349, label %land.lhs.true351, label %if.end386, !dbg !3527

land.lhs.true351:                                 ; preds = %land.lhs.true346
  %48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond316, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3528
  %rt_mem355 = bitcast %union.rtunion_def* %48 to %struct.mem_attrs**, !dbg !3528
  %49 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem355, align 8, !dbg !3528
  %cmp356 = icmp eq %struct.mem_attrs* %49, null, !dbg !3528
  br i1 %cmp356, label %cond.end365, label %cond.false359, !dbg !3528

cond.false359:                                    ; preds = %land.lhs.true351
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %49, i64 0, i32 5, !dbg !3528
  %50 = load i8, i8* %addrspace, align 8, !dbg !3528
  %conv364 = zext i8 %50 to i32, !dbg !3528
  br label %cond.end365, !dbg !3528

cond.end365:                                      ; preds = %land.lhs.true351, %cond.false359
  %cond366 = phi i32 [ %conv364, %cond.false359 ], [ 0, %land.lhs.true351 ], !dbg !3528
  %51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond327, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3529
  %rt_mem370 = bitcast %union.rtunion_def* %51 to %struct.mem_attrs**, !dbg !3529
  %52 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem370, align 8, !dbg !3529
  %cmp371 = icmp eq %struct.mem_attrs* %52, null, !dbg !3529
  br i1 %cmp371, label %cond.end381, label %cond.false374, !dbg !3529

cond.false374:                                    ; preds = %cond.end365
  %addrspace379 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %52, i64 0, i32 5, !dbg !3529
  %53 = load i8, i8* %addrspace379, align 8, !dbg !3529
  %conv380 = zext i8 %53 to i32, !dbg !3529
  br label %cond.end381, !dbg !3529

cond.end381:                                      ; preds = %cond.end365, %cond.false374
  %cond382 = phi i32 [ %conv380, %cond.false374 ], [ 0, %cond.end365 ], !dbg !3529
  %cmp383 = icmp eq i32 %cond366, %cond382, !dbg !3530
  br i1 %cmp383, label %if.end386, label %cleanup887, !dbg !3531

if.end386:                                        ; preds = %cond.end381, %land.lhs.true346, %if.end341
  br i1 %cmp344, label %cond.true391, label %cond.end396, !dbg !3532

cond.true391:                                     ; preds = %if.end386
  %arrayidx394 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond316, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3533
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx394 to %struct.rtx_def**, !dbg !3533
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3533
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i64 0, i32 0, !dbg !3534
  %bf.load398.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !3536
  br label %cond.end396, !dbg !3532

cond.end396:                                      ; preds = %if.end386, %cond.true391
  %bf.load398 = phi i32 [ %bf.load398.pre, %cond.true391 ], [ %bf.load387, %if.end386 ], !dbg !3536
  %cond397 = phi %struct.rtx_def* [ %54, %cond.true391 ], [ %cond316, %if.end386 ], !dbg !3532
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond397, metadata !3379, metadata !DIExpression()), !dbg !3404
  %bf.clear399 = and i32 %bf.load398, 65535, !dbg !3536
  %cmp400 = icmp eq i32 %bf.clear399, 49, !dbg !3537
  br i1 %cmp400, label %land.lhs.true402, label %if.end422, !dbg !3538

land.lhs.true402:                                 ; preds = %cond.end396
  %55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond397, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3539
  %56 = bitcast %union.rtunion_def* %55 to i32**, !dbg !3539
  %57 = load i32*, i32** %56, align 8, !dbg !3539
  %bf.load407 = load i32, i32* %57, align 8, !dbg !3539
  %bf.clear408 = and i32 %bf.load407, 65535, !dbg !3539
  %cmp409 = icmp eq i32 %bf.clear408, 30, !dbg !3539
  br i1 %cmp409, label %if.then411, label %if.end422, !dbg !3540

if.then411:                                       ; preds = %land.lhs.true402
  %u416 = getelementptr inbounds i32, i32* %57, i64 2, !dbg !3541
  %arrayidx417 = bitcast i32* %u416 to i64*, !dbg !3541
  %58 = load i64, i64* %arrayidx417, align 8, !dbg !3541
  call void @llvm.dbg.value(metadata i64 %58, metadata !3383, metadata !DIExpression()), !dbg !3404
  %arrayidx420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond397, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3542
  %rt_rtx421 = bitcast %union.rtunion_def* %arrayidx420 to %struct.rtx_def**, !dbg !3542
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx421, align 8, !dbg !3542
  call void @llvm.dbg.value(metadata %struct.rtx_def* %59, metadata !3379, metadata !DIExpression()), !dbg !3404
  br label %if.end422, !dbg !3543

if.end422:                                        ; preds = %if.then411, %land.lhs.true402, %cond.end396
  %offsetx.0 = phi i64 [ %58, %if.then411 ], [ 0, %land.lhs.true402 ], [ 0, %cond.end396 ], !dbg !3404
  %basex.0 = phi %struct.rtx_def* [ %59, %if.then411 ], [ %cond397, %land.lhs.true402 ], [ %cond397, %cond.end396 ], !dbg !3404
  call void @llvm.dbg.value(metadata %struct.rtx_def* %basex.0, metadata !3379, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i64 %offsetx.0, metadata !3383, metadata !DIExpression()), !dbg !3404
  %60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond327, i64 0, i32 0, !dbg !3544
  %bf.load423 = load i32, i32* %60, align 8, !dbg !3544
  %bf.clear424 = and i32 %bf.load423, 65535, !dbg !3544
  %cmp425 = icmp eq i32 %bf.clear424, 43, !dbg !3544
  br i1 %cmp425, label %cond.true427, label %cond.end433, !dbg !3544

cond.true427:                                     ; preds = %if.end422
  %arrayidx430 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond327, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3545
  %rt_rtx431 = bitcast %union.rtunion_def* %arrayidx430 to %struct.rtx_def**, !dbg !3545
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx431, align 8, !dbg !3545
  %.phi.trans.insert36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i64 0, i32 0, !dbg !3546
  %bf.load435.pre = load i32, i32* %.phi.trans.insert36, align 8, !dbg !3548
  br label %cond.end433, !dbg !3544

cond.end433:                                      ; preds = %if.end422, %cond.true427
  %bf.load435 = phi i32 [ %bf.load435.pre, %cond.true427 ], [ %bf.load423, %if.end422 ], !dbg !3548
  %cond434 = phi %struct.rtx_def* [ %61, %cond.true427 ], [ %cond327, %if.end422 ], !dbg !3544
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond434, metadata !3380, metadata !DIExpression()), !dbg !3404
  %bf.clear436 = and i32 %bf.load435, 65535, !dbg !3548
  %cmp437 = icmp eq i32 %bf.clear436, 49, !dbg !3549
  br i1 %cmp437, label %land.lhs.true439, label %if.end460, !dbg !3550

land.lhs.true439:                                 ; preds = %cond.end433
  %62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond434, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3551
  %63 = bitcast %union.rtunion_def* %62 to i32**, !dbg !3551
  %64 = load i32*, i32** %63, align 8, !dbg !3551
  %bf.load444 = load i32, i32* %64, align 8, !dbg !3551
  %bf.clear445 = and i32 %bf.load444, 65535, !dbg !3551
  %cmp446 = icmp eq i32 %bf.clear445, 30, !dbg !3551
  br i1 %cmp446, label %if.then448, label %if.end460, !dbg !3552

if.then448:                                       ; preds = %land.lhs.true439
  %u453 = getelementptr inbounds i32, i32* %64, i64 2, !dbg !3553
  %arrayidx455 = bitcast i32* %u453 to i64*, !dbg !3553
  %65 = load i64, i64* %arrayidx455, align 8, !dbg !3553
  call void @llvm.dbg.value(metadata i64 %65, metadata !3384, metadata !DIExpression()), !dbg !3404
  %arrayidx458 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond434, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3554
  %rt_rtx459 = bitcast %union.rtunion_def* %arrayidx458 to %struct.rtx_def**, !dbg !3554
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx459, align 8, !dbg !3554
  call void @llvm.dbg.value(metadata %struct.rtx_def* %66, metadata !3380, metadata !DIExpression()), !dbg !3404
  br label %if.end460, !dbg !3555

if.end460:                                        ; preds = %if.then448, %land.lhs.true439, %cond.end433
  %basey.0 = phi %struct.rtx_def* [ %66, %if.then448 ], [ %cond434, %land.lhs.true439 ], [ %cond434, %cond.end433 ], !dbg !3404
  %offsety.0 = phi i64 [ %65, %if.then448 ], [ 0, %land.lhs.true439 ], [ 0, %cond.end433 ], !dbg !3404
  call void @llvm.dbg.value(metadata i64 %offsety.0, metadata !3384, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata %struct.rtx_def* %basey.0, metadata !3380, metadata !DIExpression()), !dbg !3404
  %call461 = tail call i32 @rtx_equal_p(%struct.rtx_def* %basex.0, %struct.rtx_def* %basey.0) #6, !dbg !3556
  %tobool462 = icmp eq i32 %call461, 0, !dbg !3556
  br i1 %tobool462, label %if.then463, label %if.end549, !dbg !3558

if.then463:                                       ; preds = %if.end460
  %67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %basex.0, i64 0, i32 0, !dbg !3559
  %bf.load464 = load i32, i32* %67, align 8, !dbg !3559
  %bf.clear465 = and i32 %bf.load464, 65535, !dbg !3559
  %idxprom466 = zext i32 %bf.clear465 to i64, !dbg !3559
  %arrayidx467 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom466, !dbg !3559
  %68 = load i32, i32* %arrayidx467, align 4, !dbg !3559
  %cmp468 = icmp eq i32 %68, 9, !dbg !3559
  br i1 %cmp468, label %land.lhs.true470, label %lor.lhs.false477, !dbg !3560

land.lhs.true470:                                 ; preds = %if.then463
  %69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %basey.0, i64 0, i32 0, !dbg !3561
  %bf.load471 = load i32, i32* %69, align 8, !dbg !3561
  %bf.clear472 = and i32 %bf.load471, 65535, !dbg !3561
  %idxprom473 = zext i32 %bf.clear472 to i64, !dbg !3561
  %arrayidx474 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom473, !dbg !3561
  %70 = load i32, i32* %arrayidx474, align 4, !dbg !3561
  %cmp475 = icmp eq i32 %70, 9, !dbg !3561
  br i1 %cmp475, label %lor.end548, label %lor.lhs.false477, !dbg !3562

lor.lhs.false477:                                 ; preds = %land.lhs.true470, %if.then463
  br i1 %cmp468, label %land.lhs.true484, label %lor.rhs, !dbg !3563

land.lhs.true484:                                 ; preds = %lor.lhs.false477
  %71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %basey.0, i64 0, i32 0, !dbg !3564
  %bf.load485 = load i32, i32* %71, align 8, !dbg !3564
  %bf.clear486 = and i32 %bf.load485, 65535, !dbg !3564
  %cmp487 = icmp eq i32 %bf.clear486, 37, !dbg !3564
  br i1 %cmp487, label %land.lhs.true489, label %lor.rhs, !dbg !3565

land.lhs.true489:                                 ; preds = %land.lhs.true484
  %call490 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basey.0) #7, !dbg !3566
  %cmp491 = icmp eq i32 %call490, 7, !dbg !3566
  br i1 %cmp491, label %lor.end548, label %lor.lhs.false493, !dbg !3566

lor.lhs.false493:                                 ; preds = %land.lhs.true489
  %call494 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basey.0) #7, !dbg !3566
  %cmp495 = icmp eq i32 %call494, 20, !dbg !3566
  br i1 %cmp495, label %lor.end548, label %lor.lhs.false497, !dbg !3566

lor.lhs.false497:                                 ; preds = %lor.lhs.false493
  %call498 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basey.0) #7, !dbg !3566
  %cmp499 = icmp eq i32 %call498, 6, !dbg !3566
  br i1 %cmp499, label %lor.end548, label %lor.lhs.false501, !dbg !3566

lor.lhs.false501:                                 ; preds = %lor.lhs.false497
  %call502 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basey.0) #7, !dbg !3566
  %cmp503 = icmp eq i32 %call502, 16, !dbg !3566
  br i1 %cmp503, label %lor.end548, label %lor.lhs.false505, !dbg !3566

lor.lhs.false505:                                 ; preds = %lor.lhs.false501
  %call506 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basey.0) #7, !dbg !3566
  %cmp507 = icmp ugt i32 %call506, 52, !dbg !3566
  br i1 %cmp507, label %land.lhs.true509, label %lor.rhs, !dbg !3566

land.lhs.true509:                                 ; preds = %lor.lhs.false505
  %call510 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basey.0) #7, !dbg !3566
  %cmp511 = icmp ult i32 %call510, 58, !dbg !3566
  br i1 %cmp511, label %lor.end548, label %lor.rhs, !dbg !3567

lor.rhs:                                          ; preds = %land.lhs.true509, %lor.lhs.false505, %land.lhs.true484, %lor.lhs.false477
  %72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %basey.0, i64 0, i32 0, !dbg !3568
  %bf.load513 = load i32, i32* %72, align 8, !dbg !3568
  %bf.clear514 = and i32 %bf.load513, 65535, !dbg !3568
  %idxprom515 = zext i32 %bf.clear514 to i64, !dbg !3568
  %arrayidx516 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom515, !dbg !3568
  %73 = load i32, i32* %arrayidx516, align 4, !dbg !3568
  %cmp517 = icmp eq i32 %73, 9, !dbg !3568
  br i1 %cmp517, label %land.lhs.true519, label %lor.end548, !dbg !3569

land.lhs.true519:                                 ; preds = %lor.rhs
  %bf.load520 = load i32, i32* %67, align 8, !dbg !3570
  %bf.clear521 = and i32 %bf.load520, 65535, !dbg !3570
  %cmp522 = icmp eq i32 %bf.clear521, 37, !dbg !3570
  br i1 %cmp522, label %land.rhs, label %lor.end548, !dbg !3571

land.rhs:                                         ; preds = %land.lhs.true519
  %call524 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basex.0) #7, !dbg !3572
  %cmp525 = icmp eq i32 %call524, 7, !dbg !3572
  br i1 %cmp525, label %lor.end548, label %lor.lhs.false527, !dbg !3572

lor.lhs.false527:                                 ; preds = %land.rhs
  %call528 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basex.0) #7, !dbg !3572
  %cmp529 = icmp eq i32 %call528, 20, !dbg !3572
  br i1 %cmp529, label %lor.end548, label %lor.lhs.false531, !dbg !3572

lor.lhs.false531:                                 ; preds = %lor.lhs.false527
  %call532 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basex.0) #7, !dbg !3572
  %cmp533 = icmp eq i32 %call532, 6, !dbg !3572
  br i1 %cmp533, label %lor.end548, label %lor.lhs.false535, !dbg !3572

lor.lhs.false535:                                 ; preds = %lor.lhs.false531
  %call536 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basex.0) #7, !dbg !3572
  %cmp537 = icmp eq i32 %call536, 16, !dbg !3572
  br i1 %cmp537, label %lor.end548, label %lor.rhs539, !dbg !3572

lor.rhs539:                                       ; preds = %lor.lhs.false535
  %call540 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basex.0) #7, !dbg !3572
  %cmp541 = icmp ugt i32 %call540, 52, !dbg !3572
  br i1 %cmp541, label %land.rhs543, label %lor.end548, !dbg !3572

land.rhs543:                                      ; preds = %lor.rhs539
  %call544 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %basex.0) #7, !dbg !3572
  %cmp545 = icmp ult i32 %call544, 58, !dbg !3572
  %phitmp = zext i1 %cmp545 to i32
  br label %lor.end548

lor.end548:                                       ; preds = %lor.rhs, %land.lhs.true519, %lor.rhs539, %land.rhs543, %lor.lhs.false535, %lor.lhs.false531, %lor.lhs.false527, %land.rhs, %land.lhs.true509, %lor.lhs.false501, %lor.lhs.false497, %lor.lhs.false493, %land.lhs.true489, %land.lhs.true470
  %74 = phi i32 [ 1, %land.lhs.true509 ], [ 1, %lor.lhs.false501 ], [ 1, %lor.lhs.false497 ], [ 1, %lor.lhs.false493 ], [ 1, %land.lhs.true489 ], [ 1, %land.lhs.true470 ], [ 0, %land.lhs.true519 ], [ 0, %lor.rhs ], [ 1, %lor.lhs.false535 ], [ 1, %lor.lhs.false531 ], [ 1, %lor.lhs.false527 ], [ 1, %land.rhs ], [ 0, %lor.rhs539 ], [ %phitmp, %land.rhs543 ]
  br label %cleanup887, !dbg !3573

if.end549:                                        ; preds = %if.end460
  %bf.load550 = load i32, i32* %45, align 8, !dbg !3574
  %bf.clear551 = and i32 %bf.load550, 65535, !dbg !3574
  %cmp552 = icmp eq i32 %bf.clear551, 43, !dbg !3574
  br i1 %cmp552, label %cond.false562, label %cond.true554, !dbg !3575

cond.true554:                                     ; preds = %if.end549
  %bf.lshr = lshr i32 %bf.load550, 16, !dbg !3576
  %bf.clear556 = and i32 %bf.lshr, 255, !dbg !3576
  %idxprom557 = zext i32 %bf.clear556 to i64, !dbg !3576
  %arrayidx558 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom557, !dbg !3576
  %75 = load i8, i8* %arrayidx558, align 1, !dbg !3576
  %conv561 = zext i8 %75 to i64, !dbg !3577
  br label %cond.end631, !dbg !3575

cond.false562:                                    ; preds = %if.end549
  %76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond316, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3578
  %rt_mem566 = bitcast %union.rtunion_def* %76 to %struct.mem_attrs**, !dbg !3578
  %77 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem566, align 8, !dbg !3578
  %cmp567 = icmp eq %struct.mem_attrs* %77, null, !dbg !3578
  br i1 %cmp567, label %cond.false575, label %cond.true569, !dbg !3578

cond.true569:                                     ; preds = %cond.false562
  %size = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %77, i64 0, i32 2, !dbg !3578
  %78 = load %struct.rtx_def*, %struct.rtx_def** %size, align 8, !dbg !3578
  %tobool574 = icmp eq %struct.rtx_def* %78, null, !dbg !3578
  br i1 %tobool574, label %cond.end631, label %cond.true592, !dbg !3578

cond.false575:                                    ; preds = %cond.false562
  %bf.clear578 = and i32 %bf.load550, 16711680, !dbg !3578
  %cmp579 = icmp eq i32 %bf.clear578, 65536, !dbg !3578
  br i1 %cmp579, label %cond.end631, label %cond.true581, !dbg !3578

cond.true581:                                     ; preds = %cond.false575
  %bf.lshr583 = lshr i32 %bf.load550, 16, !dbg !3578
  %bf.clear584 = and i32 %bf.lshr583, 255, !dbg !3578
  %idxprom585 = zext i32 %bf.clear584 to i64, !dbg !3578
  %arrayidx586 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom585, !dbg !3578
  %79 = load i8, i8* %arrayidx586, align 1, !dbg !3578
  %conv588 = zext i8 %79 to i64, !dbg !3578
  %call589 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv588) #6, !dbg !3578
  %tobool590 = icmp eq %struct.rtx_def* %call589, null, !dbg !3578
  br i1 %tobool590, label %cond.end631, label %cond.true581.cond.true592_crit_edge, !dbg !3578

cond.true581.cond.true592_crit_edge:              ; preds = %cond.true581
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem566, align 8, !dbg !3579
  br label %cond.true592, !dbg !3578

cond.true592:                                     ; preds = %cond.true581.cond.true592_crit_edge, %cond.true569
  %80 = phi %struct.mem_attrs* [ %.pre, %cond.true581.cond.true592_crit_edge ], [ %77, %cond.true569 ], !dbg !3579
  %cmp597 = icmp eq %struct.mem_attrs* %80, null, !dbg !3579
  br i1 %cmp597, label %cond.false605, label %cond.true599, !dbg !3579

cond.true599:                                     ; preds = %cond.true592
  %size604 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %80, i64 0, i32 2, !dbg !3579
  %81 = load %struct.rtx_def*, %struct.rtx_def** %size604, align 8, !dbg !3579
  br label %cond.end623, !dbg !3579

cond.false605:                                    ; preds = %cond.true592
  %bf.load612 = load i32, i32* %45, align 8, !dbg !3579
  %bf.lshr613 = lshr i32 %bf.load612, 16, !dbg !3579
  %bf.clear614 = and i32 %bf.lshr613, 255, !dbg !3579
  %idxprom615 = zext i32 %bf.clear614 to i64, !dbg !3579
  %arrayidx616 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom615, !dbg !3579
  %82 = load i8, i8* %arrayidx616, align 1, !dbg !3579
  %conv618 = zext i8 %82 to i64, !dbg !3579
  %call619 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv618) #6, !dbg !3579
  br label %cond.end623, !dbg !3579

cond.end623:                                      ; preds = %cond.false605, %cond.true599
  %cond624 = phi %struct.rtx_def* [ %81, %cond.true599 ], [ %call619, %cond.false605 ], !dbg !3579
  %u625 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond624, i64 0, i32 1, !dbg !3579
  %arrayidx627 = bitcast %union.u* %u625 to i64*, !dbg !3579
  %83 = load i64, i64* %arrayidx627, align 8, !dbg !3579
  br label %cond.end631, !dbg !3578

cond.end631:                                      ; preds = %cond.true569, %cond.true581, %cond.false575, %cond.end623, %cond.true554
  %cond632 = phi i64 [ %conv561, %cond.true554 ], [ %83, %cond.end623 ], [ -1, %cond.false575 ], [ -1, %cond.true581 ], [ -1, %cond.true569 ], !dbg !3575
  call void @llvm.dbg.value(metadata i64 %cond632, metadata !3385, metadata !DIExpression()), !dbg !3404
  %bf.load633 = load i32, i32* %60, align 8, !dbg !3580
  %bf.clear634 = and i32 %bf.load633, 65535, !dbg !3580
  %cmp635 = icmp eq i32 %bf.clear634, 43, !dbg !3580
  br i1 %cmp635, label %cond.false646, label %cond.true637, !dbg !3581

cond.true637:                                     ; preds = %cond.end631
  %bf.lshr639 = lshr i32 %bf.load633, 16, !dbg !3582
  %bf.clear640 = and i32 %bf.lshr639, 255, !dbg !3582
  %idxprom641 = zext i32 %bf.clear640 to i64, !dbg !3582
  %arrayidx642 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom641, !dbg !3582
  %84 = load i8, i8* %arrayidx642, align 1, !dbg !3582
  %conv645 = zext i8 %84 to i64, !dbg !3583
  br label %cond.end716, !dbg !3581

cond.false646:                                    ; preds = %cond.end631
  %85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond327, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3584
  %rt_mem650 = bitcast %union.rtunion_def* %85 to %struct.mem_attrs**, !dbg !3584
  %86 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem650, align 8, !dbg !3584
  %cmp651 = icmp eq %struct.mem_attrs* %86, null, !dbg !3584
  br i1 %cmp651, label %cond.false660, label %cond.true653, !dbg !3584

cond.true653:                                     ; preds = %cond.false646
  %size658 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %86, i64 0, i32 2, !dbg !3584
  %87 = load %struct.rtx_def*, %struct.rtx_def** %size658, align 8, !dbg !3584
  %tobool659 = icmp eq %struct.rtx_def* %87, null, !dbg !3584
  br i1 %tobool659, label %cond.end716, label %cond.true677, !dbg !3584

cond.false660:                                    ; preds = %cond.false646
  %bf.clear663 = and i32 %bf.load633, 16711680, !dbg !3584
  %cmp664 = icmp eq i32 %bf.clear663, 65536, !dbg !3584
  br i1 %cmp664, label %cond.end716, label %cond.true666, !dbg !3584

cond.true666:                                     ; preds = %cond.false660
  %bf.lshr668 = lshr i32 %bf.load633, 16, !dbg !3584
  %bf.clear669 = and i32 %bf.lshr668, 255, !dbg !3584
  %idxprom670 = zext i32 %bf.clear669 to i64, !dbg !3584
  %arrayidx671 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom670, !dbg !3584
  %88 = load i8, i8* %arrayidx671, align 1, !dbg !3584
  %conv673 = zext i8 %88 to i64, !dbg !3584
  %call674 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv673) #6, !dbg !3584
  %tobool675 = icmp eq %struct.rtx_def* %call674, null, !dbg !3584
  br i1 %tobool675, label %cond.end716, label %cond.true666.cond.true677_crit_edge, !dbg !3584

cond.true666.cond.true677_crit_edge:              ; preds = %cond.true666
  %.pre38 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem650, align 8, !dbg !3585
  br label %cond.true677, !dbg !3584

cond.true677:                                     ; preds = %cond.true666.cond.true677_crit_edge, %cond.true653
  %89 = phi %struct.mem_attrs* [ %.pre38, %cond.true666.cond.true677_crit_edge ], [ %86, %cond.true653 ], !dbg !3585
  %cmp682 = icmp eq %struct.mem_attrs* %89, null, !dbg !3585
  br i1 %cmp682, label %cond.false690, label %cond.true684, !dbg !3585

cond.true684:                                     ; preds = %cond.true677
  %size689 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %89, i64 0, i32 2, !dbg !3585
  %90 = load %struct.rtx_def*, %struct.rtx_def** %size689, align 8, !dbg !3585
  br label %cond.end708, !dbg !3585

cond.false690:                                    ; preds = %cond.true677
  %bf.load697 = load i32, i32* %60, align 8, !dbg !3585
  %bf.lshr698 = lshr i32 %bf.load697, 16, !dbg !3585
  %bf.clear699 = and i32 %bf.lshr698, 255, !dbg !3585
  %idxprom700 = zext i32 %bf.clear699 to i64, !dbg !3585
  %arrayidx701 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom700, !dbg !3585
  %91 = load i8, i8* %arrayidx701, align 1, !dbg !3585
  %conv703 = zext i8 %91 to i64, !dbg !3585
  %call704 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv703) #6, !dbg !3585
  br label %cond.end708, !dbg !3585

cond.end708:                                      ; preds = %cond.false690, %cond.true684
  %cond709 = phi %struct.rtx_def* [ %90, %cond.true684 ], [ %call704, %cond.false690 ], !dbg !3585
  %u710 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond709, i64 0, i32 1, !dbg !3585
  %arrayidx712 = bitcast %union.u* %u710 to i64*, !dbg !3585
  %92 = load i64, i64* %arrayidx712, align 8, !dbg !3585
  br label %cond.end716, !dbg !3584

cond.end716:                                      ; preds = %cond.true653, %cond.true666, %cond.false660, %cond.end708, %cond.true637
  %cond717 = phi i64 [ %conv645, %cond.true637 ], [ %92, %cond.end708 ], [ -1, %cond.false660 ], [ -1, %cond.true666 ], [ -1, %cond.true653 ], !dbg !3581
  call void @llvm.dbg.value(metadata i64 %cond717, metadata !3386, metadata !DIExpression()), !dbg !3404
  %tobool718 = icmp eq %struct.rtx_def* %moffsetx.1, null, !dbg !3586
  br i1 %tobool718, label %if.end726, label %if.then719, !dbg !3588

if.then719:                                       ; preds = %cond.end716
  %u720 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %moffsetx.1, i64 0, i32 1, !dbg !3589
  %arrayidx722 = bitcast %union.u* %u720 to i64*, !dbg !3589
  %93 = load i64, i64* %arrayidx722, align 8, !dbg !3589
  %add = add nsw i64 %offsetx.0, %93, !dbg !3590
  call void @llvm.dbg.value(metadata i64 %add, metadata !3383, metadata !DIExpression()), !dbg !3404
  %sub = sub nsw i64 %cond632, %93, !dbg !3591
  call void @llvm.dbg.value(metadata i64 %sub, metadata !3385, metadata !DIExpression()), !dbg !3404
  br label %if.end726, !dbg !3592

if.end726:                                        ; preds = %cond.end716, %if.then719
  %offsetx.1 = phi i64 [ %add, %if.then719 ], [ %offsetx.0, %cond.end716 ], !dbg !3404
  %sizex.0 = phi i64 [ %sub, %if.then719 ], [ %cond632, %cond.end716 ], !dbg !3404
  call void @llvm.dbg.value(metadata i64 %sizex.0, metadata !3385, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i64 %offsetx.1, metadata !3383, metadata !DIExpression()), !dbg !3404
  %tobool727 = icmp eq %struct.rtx_def* %moffsety.1, null, !dbg !3593
  br i1 %tobool727, label %if.end737, label %if.then728, !dbg !3595

if.then728:                                       ; preds = %if.end726
  %u729 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %moffsety.1, i64 0, i32 1, !dbg !3596
  %arrayidx731 = bitcast %union.u* %u729 to i64*, !dbg !3596
  %94 = load i64, i64* %arrayidx731, align 8, !dbg !3596
  %add732 = add nsw i64 %offsety.0, %94, !dbg !3597
  call void @llvm.dbg.value(metadata i64 %add732, metadata !3384, metadata !DIExpression()), !dbg !3404
  %sub736 = sub nsw i64 %cond717, %94, !dbg !3598
  call void @llvm.dbg.value(metadata i64 %sub736, metadata !3386, metadata !DIExpression()), !dbg !3404
  br label %if.end737, !dbg !3599

if.end737:                                        ; preds = %if.end726, %if.then728
  %offsety.1 = phi i64 [ %add732, %if.then728 ], [ %offsety.0, %if.end726 ], !dbg !3404
  %sizey.0 = phi i64 [ %sub736, %if.then728 ], [ %cond717, %if.end726 ], !dbg !3404
  call void @llvm.dbg.value(metadata i64 %sizey.0, metadata !3386, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i64 %offsety.1, metadata !3384, metadata !DIExpression()), !dbg !3404
  %95 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3600
  %cmp742 = icmp eq %struct.mem_attrs* %95, null, !dbg !3600
  br i1 %cmp742, label %cond.false751, label %cond.true744, !dbg !3602

cond.true744:                                     ; preds = %if.end737
  %size749 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %95, i64 0, i32 2, !dbg !3600
  %96 = load %struct.rtx_def*, %struct.rtx_def** %size749, align 8, !dbg !3600
  %tobool750 = icmp ne %struct.rtx_def* %96, null, !dbg !3600
  %tobool769.old = icmp ne %struct.rtx_def* %moffsetx.1, null, !dbg !3603
  %or.cond7 = and i1 %tobool750, %tobool769.old, !dbg !3600
  br i1 %or.cond7, label %if.then770, label %if.end806, !dbg !3600

cond.false751:                                    ; preds = %if.end737
  %97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3600
  %bf.load752 = load i32, i32* %97, align 8, !dbg !3600
  %bf.clear754 = and i32 %bf.load752, 16711680, !dbg !3600
  %cmp755 = icmp eq i32 %bf.clear754, 65536, !dbg !3600
  br i1 %cmp755, label %if.end806, label %cond.true757, !dbg !3602

cond.true757:                                     ; preds = %cond.false751
  %bf.lshr759 = lshr i32 %bf.load752, 16, !dbg !3600
  %bf.clear760 = and i32 %bf.lshr759, 255, !dbg !3600
  %idxprom761 = zext i32 %bf.clear760 to i64, !dbg !3600
  %arrayidx762 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom761, !dbg !3600
  %98 = load i8, i8* %arrayidx762, align 1, !dbg !3600
  %conv764 = zext i8 %98 to i64, !dbg !3600
  %call765 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv764) #6, !dbg !3600
  %tobool766 = icmp ne %struct.rtx_def* %call765, null, !dbg !3600
  %tobool769 = icmp ne %struct.rtx_def* %moffsetx.1, null, !dbg !3603
  %or.cond6 = and i1 %tobool766, %tobool769, !dbg !3600
  br i1 %or.cond6, label %cond.true757.if.then770_crit_edge, label %if.end806, !dbg !3600

cond.true757.if.then770_crit_edge:                ; preds = %cond.true757
  %.pre39 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3604
  br label %if.then770, !dbg !3600

if.then770:                                       ; preds = %cond.true757.if.then770_crit_edge, %cond.true744
  %99 = phi %struct.mem_attrs* [ %.pre39, %cond.true757.if.then770_crit_edge ], [ %95, %cond.true744 ], !dbg !3604
  %cmp775 = icmp eq %struct.mem_attrs* %99, null, !dbg !3604
  br i1 %cmp775, label %cond.false783, label %cond.true777, !dbg !3604

cond.true777:                                     ; preds = %if.then770
  %size782 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %99, i64 0, i32 2, !dbg !3604
  %100 = load %struct.rtx_def*, %struct.rtx_def** %size782, align 8, !dbg !3604
  br label %cond.end801, !dbg !3604

cond.false783:                                    ; preds = %if.then770
  %101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3604
  %bf.load790 = load i32, i32* %101, align 8, !dbg !3604
  %bf.lshr791 = lshr i32 %bf.load790, 16, !dbg !3604
  %bf.clear792 = and i32 %bf.lshr791, 255, !dbg !3604
  %idxprom793 = zext i32 %bf.clear792 to i64, !dbg !3604
  %arrayidx794 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom793, !dbg !3604
  %102 = load i8, i8* %arrayidx794, align 1, !dbg !3604
  %conv796 = zext i8 %102 to i64, !dbg !3604
  %call797 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv796) #6, !dbg !3604
  br label %cond.end801, !dbg !3604

cond.end801:                                      ; preds = %cond.false783, %cond.true777
  %cond802 = phi %struct.rtx_def* [ %100, %cond.true777 ], [ %call797, %cond.false783 ], !dbg !3604
  %u803 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond802, i64 0, i32 1, !dbg !3604
  %arrayidx805 = bitcast %union.u* %u803 to i64*, !dbg !3604
  %103 = load i64, i64* %arrayidx805, align 8, !dbg !3604
  call void @llvm.dbg.value(metadata i64 %103, metadata !3385, metadata !DIExpression()), !dbg !3404
  br label %if.end806, !dbg !3605

if.end806:                                        ; preds = %cond.false751, %cond.end801, %cond.true757, %cond.true744
  %sizex.1 = phi i64 [ %103, %cond.end801 ], [ %sizex.0, %cond.true744 ], [ %sizex.0, %cond.true757 ], [ %sizex.0, %cond.false751 ], !dbg !3404
  call void @llvm.dbg.value(metadata i64 %sizex.1, metadata !3385, metadata !DIExpression()), !dbg !3404
  %104 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem8, align 8, !dbg !3606
  %cmp811 = icmp eq %struct.mem_attrs* %104, null, !dbg !3606
  br i1 %cmp811, label %cond.false820, label %cond.true813, !dbg !3608

cond.true813:                                     ; preds = %if.end806
  %size818 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %104, i64 0, i32 2, !dbg !3606
  %105 = load %struct.rtx_def*, %struct.rtx_def** %size818, align 8, !dbg !3606
  %tobool819 = icmp ne %struct.rtx_def* %105, null, !dbg !3606
  %tobool838.old = icmp ne %struct.rtx_def* %moffsety.1, null, !dbg !3609
  %or.cond9 = and i1 %tobool819, %tobool838.old, !dbg !3606
  br i1 %or.cond9, label %if.then839, label %if.end875, !dbg !3606

cond.false820:                                    ; preds = %if.end806
  %106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !3606
  %bf.load821 = load i32, i32* %106, align 8, !dbg !3606
  %bf.clear823 = and i32 %bf.load821, 16711680, !dbg !3606
  %cmp824 = icmp eq i32 %bf.clear823, 65536, !dbg !3606
  br i1 %cmp824, label %if.end875, label %cond.true826, !dbg !3608

cond.true826:                                     ; preds = %cond.false820
  %bf.lshr828 = lshr i32 %bf.load821, 16, !dbg !3606
  %bf.clear829 = and i32 %bf.lshr828, 255, !dbg !3606
  %idxprom830 = zext i32 %bf.clear829 to i64, !dbg !3606
  %arrayidx831 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom830, !dbg !3606
  %107 = load i8, i8* %arrayidx831, align 1, !dbg !3606
  %conv833 = zext i8 %107 to i64, !dbg !3606
  %call834 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv833) #6, !dbg !3606
  %tobool835 = icmp ne %struct.rtx_def* %call834, null, !dbg !3606
  %tobool838 = icmp ne %struct.rtx_def* %moffsety.1, null, !dbg !3609
  %or.cond8 = and i1 %tobool835, %tobool838, !dbg !3606
  br i1 %or.cond8, label %cond.true826.if.then839_crit_edge, label %if.end875, !dbg !3606

cond.true826.if.then839_crit_edge:                ; preds = %cond.true826
  %.pre40 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem8, align 8, !dbg !3610
  br label %if.then839, !dbg !3606

if.then839:                                       ; preds = %cond.true826.if.then839_crit_edge, %cond.true813
  %108 = phi %struct.mem_attrs* [ %.pre40, %cond.true826.if.then839_crit_edge ], [ %104, %cond.true813 ], !dbg !3610
  %cmp844 = icmp eq %struct.mem_attrs* %108, null, !dbg !3610
  br i1 %cmp844, label %cond.false852, label %cond.true846, !dbg !3610

cond.true846:                                     ; preds = %if.then839
  %size851 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %108, i64 0, i32 2, !dbg !3610
  %109 = load %struct.rtx_def*, %struct.rtx_def** %size851, align 8, !dbg !3610
  br label %cond.end870, !dbg !3610

cond.false852:                                    ; preds = %if.then839
  %110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !3610
  %bf.load859 = load i32, i32* %110, align 8, !dbg !3610
  %bf.lshr860 = lshr i32 %bf.load859, 16, !dbg !3610
  %bf.clear861 = and i32 %bf.lshr860, 255, !dbg !3610
  %idxprom862 = zext i32 %bf.clear861 to i64, !dbg !3610
  %arrayidx863 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom862, !dbg !3610
  %111 = load i8, i8* %arrayidx863, align 1, !dbg !3610
  %conv865 = zext i8 %111 to i64, !dbg !3610
  %call866 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv865) #6, !dbg !3610
  br label %cond.end870, !dbg !3610

cond.end870:                                      ; preds = %cond.false852, %cond.true846
  %cond871 = phi %struct.rtx_def* [ %109, %cond.true846 ], [ %call866, %cond.false852 ], !dbg !3610
  %u872 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond871, i64 0, i32 1, !dbg !3610
  %arrayidx874 = bitcast %union.u* %u872 to i64*, !dbg !3610
  %112 = load i64, i64* %arrayidx874, align 8, !dbg !3610
  call void @llvm.dbg.value(metadata i64 %112, metadata !3386, metadata !DIExpression()), !dbg !3404
  br label %if.end875, !dbg !3611

if.end875:                                        ; preds = %cond.false820, %cond.end870, %cond.true826, %cond.true813
  %sizey.1 = phi i64 [ %112, %cond.end870 ], [ %sizey.0, %cond.true813 ], [ %sizey.0, %cond.true826 ], [ %sizey.0, %cond.false820 ], !dbg !3404
  call void @llvm.dbg.value(metadata i64 %sizey.1, metadata !3386, metadata !DIExpression()), !dbg !3404
  %cmp876 = icmp sgt i64 %offsetx.1, %offsety.1, !dbg !3612
  %spec.select = select i1 %cmp876, i64 %offsety.1, i64 %offsetx.1, !dbg !3614
  %spec.select10 = select i1 %cmp876, i64 %offsetx.1, i64 %offsety.1, !dbg !3614
  %spec.select11 = select i1 %cmp876, i64 %sizey.1, i64 %sizex.1, !dbg !3614
  call void @llvm.dbg.value(metadata i64 %spec.select11, metadata !3385, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i64 %spec.select10, metadata !3384, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !3383, metadata !DIExpression()), !dbg !3404
  %cmp880 = icmp sgt i64 %spec.select11, -1, !dbg !3615
  %add883 = add nsw i64 %spec.select, %spec.select11, !dbg !3616
  %cmp884 = icmp sge i64 %spec.select10, %add883, !dbg !3616
  %113 = and i1 %cmp880, %cmp884, !dbg !3616
  %land.ext = zext i1 %113 to i32, !dbg !3616
  br label %cleanup887, !dbg !3617

cleanup887:                                       ; preds = %cond.false28, %cond.false43, %land.lhs.true59, %lor.lhs.false152, %if.then209, %lor.lhs.false264, %cond.end381, %land.lhs.true337, %if.end292, %lor.lhs.false299, %if.end274, %lor.lhs.false282, %if.then258, %if.then146, %land.lhs.true, %land.lhs.true36, %cond.end17, %if.then108, %cleanup123, %cleanup234, %if.end875, %lor.end548
  %retval.7 = phi i32 [ 1, %if.then108 ], [ %retval.2, %cleanup123 ], [ %.retval.3, %if.then209 ], [ %retval.6, %cleanup234 ], [ %land.ext, %if.end875 ], [ %74, %lor.end548 ], [ 0, %cond.end17 ], [ 0, %land.lhs.true36 ], [ 0, %land.lhs.true ], [ 0, %cond.false43 ], [ 0, %cond.false28 ], [ 1, %land.lhs.true59 ], [ 0, %lor.lhs.false152 ], [ 0, %if.then146 ], [ 0, %lor.lhs.false264 ], [ 0, %if.then258 ], [ 0, %lor.lhs.false282 ], [ 0, %if.end274 ], [ 1, %lor.lhs.false299 ], [ 1, %if.end292 ], [ 1, %land.lhs.true337 ], [ 0, %cond.end381 ], !dbg !3404
  ret i32 %retval.7, !dbg !3618
}

declare dso_local %union.tree_node* @get_spill_slot_decl(i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @nonoverlapping_component_refs_p(%union.tree_node* %x, %union.tree_node* %y) unnamed_addr #4 !dbg !3619 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !3623, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata %union.tree_node* %y, metadata !3624, metadata !DIExpression()), !dbg !3632
  %0 = load i32, i32* @flag_strict_aliasing, align 4, !dbg !3633
  %tobool = icmp eq i32 %0, 0, !dbg !3633
  br i1 %tobool, label %cleanup, label %do.body.preheader, !dbg !3635

do.body.preheader:                                ; preds = %entry
  br label %do.body, !dbg !3636

do.body:                                          ; preds = %do.body.preheader, %land.rhs54
  %y.addr.0 = phi %union.tree_node* [ %15, %land.rhs54 ], [ %y, %do.body.preheader ]
  %x.addr.0 = phi %union.tree_node* [ %14, %land.rhs54 ], [ %x, %do.body.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0, metadata !3623, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata %union.tree_node* %y.addr.0, metadata !3624, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata %union.tree_node* %y.addr.0, metadata !3629, metadata !DIExpression()), !dbg !3632
  br label %do.body1, !dbg !3637

do.body1:                                         ; preds = %land.rhs22, %do.body
  %x.addr.1 = phi %union.tree_node* [ %x.addr.0, %do.body ], [ %11, %land.rhs22 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.1, metadata !3623, metadata !DIExpression()), !dbg !3632
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3638
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3638
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3638
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3625, metadata !DIExpression()), !dbg !3632
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3640
  %2 = bitcast %union.tree_node** %context to %struct.tree_type**, !dbg !3640
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !3640
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 16, !dbg !3640
  %4 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !3640
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3627, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata %union.tree_node* %y.addr.0, metadata !3624, metadata !DIExpression()), !dbg !3632
  br label %do.body2, !dbg !3641

do.body2:                                         ; preds = %land.rhs, %do.body1
  %y.addr.1 = phi %union.tree_node* [ %y.addr.0, %do.body1 ], [ %9, %land.rhs ], !dbg !3642
  call void @llvm.dbg.value(metadata %union.tree_node* %y.addr.1, metadata !3624, metadata !DIExpression()), !dbg !3632
  %operands4 = getelementptr inbounds %union.tree_node, %union.tree_node* %y.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3643
  %arrayidx5 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands4, i64 1, !dbg !3643
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx5, align 8, !dbg !3643
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !3626, metadata !DIExpression()), !dbg !3632
  %context7 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3645
  %6 = bitcast %union.tree_node** %context7 to %struct.tree_type**, !dbg !3645
  %7 = load %struct.tree_type*, %struct.tree_type** %6, align 8, !dbg !3645
  %main_variant9 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 16, !dbg !3645
  %8 = load %union.tree_node*, %union.tree_node** %main_variant9, align 8, !dbg !3645
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3628, metadata !DIExpression()), !dbg !3632
  %cmp = icmp eq %union.tree_node* %4, %8, !dbg !3646
  br i1 %cmp, label %found, label %if.end11, !dbg !3648

if.end11:                                         ; preds = %do.body2
  %9 = load %union.tree_node*, %union.tree_node** %operands4, align 8, !dbg !3649
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !3624, metadata !DIExpression()), !dbg !3632
  %tobool15 = icmp eq %union.tree_node* %9, null, !dbg !3650
  br i1 %tobool15, label %do.end, label %land.rhs, !dbg !3651

land.rhs:                                         ; preds = %if.end11
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3652
  %bf.load = load i64, i64* %10, align 8, !dbg !3652
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !3653
  %cmp16 = icmp eq i64 %bf.cast4, 41, !dbg !3653
  br i1 %cmp16, label %do.body2, label %do.end, !dbg !3654, !llvm.loop !3655

do.end:                                           ; preds = %if.end11, %land.rhs
  %11 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3657
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !3623, metadata !DIExpression()), !dbg !3632
  %tobool21 = icmp eq %union.tree_node* %11, null, !dbg !3658
  br i1 %tobool21, label %cleanup.loopexit, label %land.rhs22, !dbg !3659

land.rhs22:                                       ; preds = %do.end
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3660
  %bf.load24 = load i64, i64* %12, align 8, !dbg !3660
  %bf.cast263 = and i64 %bf.load24, 65535, !dbg !3661
  %cmp27 = icmp eq i64 %bf.cast263, 41, !dbg !3661
  br i1 %cmp27, label %do.body1, label %cleanup.loopexit, !dbg !3662, !llvm.loop !3663

found:                                            ; preds = %do.body2
  %operands.lcssa = phi %union.tree_node** [ %operands, %do.body2 ], !dbg !3638
  %.lcssa31 = phi %union.tree_node* [ %1, %do.body2 ], !dbg !3638
  %.lcssa29 = phi %union.tree_node* [ %4, %do.body2 ], !dbg !3640
  %operands4.lcssa = phi %union.tree_node** [ %operands4, %do.body2 ], !dbg !3643
  %.lcssa = phi %union.tree_node* [ %5, %do.body2 ], !dbg !3643
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.1, metadata !3623, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata %union.tree_node* %y.addr.1, metadata !3624, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.label(metadata !3630), !dbg !3665
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3666
  %bf.load31 = load i64, i64* %13, align 8, !dbg !3666
  %bf.cast335 = and i64 %bf.load31, 65535, !dbg !3668
  %cmp34 = icmp eq i64 %bf.cast335, 16, !dbg !3668
  %cmp35 = icmp ne %union.tree_node* %.lcssa31, %.lcssa, !dbg !3669
  %or.cond = and i1 %cmp34, %cmp35, !dbg !3670
  br i1 %or.cond, label %cleanup.loopexit8, label %if.end37, !dbg !3670

if.end37:                                         ; preds = %found
  %14 = load %union.tree_node*, %union.tree_node** %operands.lcssa, align 8, !dbg !3671
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !3623, metadata !DIExpression()), !dbg !3632
  %15 = load %union.tree_node*, %union.tree_node** %operands4.lcssa, align 8, !dbg !3672
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !3624, metadata !DIExpression()), !dbg !3632
  %tobool45 = icmp ne %union.tree_node* %14, null, !dbg !3673
  %tobool47 = icmp ne %union.tree_node* %15, null, !dbg !3674
  %or.cond1 = and i1 %tobool45, %tobool47, !dbg !3675
  br i1 %or.cond1, label %land.lhs.true48, label %cleanup.loopexit8, !dbg !3675

land.lhs.true48:                                  ; preds = %if.end37
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3676
  %bf.load50 = load i64, i64* %16, align 8, !dbg !3676
  %bf.cast526 = and i64 %bf.load50, 65535, !dbg !3677
  %cmp53 = icmp eq i64 %bf.cast526, 41, !dbg !3677
  br i1 %cmp53, label %land.rhs54, label %cleanup.loopexit8, !dbg !3678

land.rhs54:                                       ; preds = %land.lhs.true48
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3679
  %bf.load56 = load i64, i64* %17, align 8, !dbg !3679
  %bf.cast587 = and i64 %bf.load56, 65535, !dbg !3680
  %cmp59 = icmp eq i64 %bf.cast587, 41, !dbg !3680
  br i1 %cmp59, label %do.body, label %cleanup.loopexit8, !dbg !3681, !llvm.loop !3682

cleanup.loopexit:                                 ; preds = %land.rhs22, %do.end
  br label %cleanup, !dbg !3684

cleanup.loopexit8:                                ; preds = %found, %land.rhs54, %land.lhs.true48, %if.end37
  %retval.0.ph = phi i8 [ 0, %if.end37 ], [ 0, %land.lhs.true48 ], [ 0, %land.rhs54 ], [ 1, %found ]
  br label %cleanup, !dbg !3684

cleanup:                                          ; preds = %cleanup.loopexit8, %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit8 ], !dbg !3632
  ret i8 %retval.0, !dbg !3684
}

declare dso_local zeroext i8 @ipa_type_escape_field_does_not_clobber_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @decl_for_component_ref(%union.tree_node* %x) unnamed_addr #4 !dbg !3685 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !3689, metadata !DIExpression()), !dbg !3690
  br label %do.body, !dbg !3691

do.body:                                          ; preds = %land.rhs, %entry
  %x.addr.0 = phi %union.tree_node* [ %x, %entry ], [ %0, %land.rhs ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0, metadata !3689, metadata !DIExpression()), !dbg !3690
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3692
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3692
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3689, metadata !DIExpression()), !dbg !3690
  %cond1 = icmp eq %union.tree_node* %0, null, !dbg !3694
  br i1 %cond1, label %cond.false.loopexit, label %land.rhs, !dbg !3694

land.rhs:                                         ; preds = %do.body
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3695
  %bf.load = load i64, i64* %1, align 8, !dbg !3695
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3696
  %cmp = icmp eq i64 %bf.cast2, 41, !dbg !3696
  br i1 %cmp, label %do.body, label %do.end, !dbg !3697, !llvm.loop !3698

do.end:                                           ; preds = %land.rhs
  %bf.cast2.lcssa = phi i64 [ %bf.cast2, %land.rhs ], !dbg !3696
  %.lcssa5 = phi %union.tree_node* [ %0, %land.rhs ], !dbg !3692
  %arrayidx6 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast2.lcssa, !dbg !3700
  %2 = load i32, i32* %arrayidx6, align 4, !dbg !3700
  %cmp7 = icmp eq i32 %2, 3, !dbg !3700
  br i1 %cmp7, label %cond.end, label %cond.false, !dbg !3701

cond.false.loopexit:                              ; preds = %do.body
  br label %cond.false, !dbg !3701

cond.false:                                       ; preds = %cond.false.loopexit, %do.end
  br label %cond.end, !dbg !3701

cond.end:                                         ; preds = %do.end, %cond.false
  %cond = phi %union.tree_node* [ null, %cond.false ], [ %.lcssa5, %do.end ], !dbg !3701
  ret %union.tree_node* %cond, !dbg !3702
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @adjust_offset_for_component_ref(%union.tree_node* %x, %struct.rtx_def* %offset) unnamed_addr #4 !dbg !3703 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %x, metadata !3707, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.value(metadata %struct.rtx_def* %offset, metadata !3708, metadata !DIExpression()), !dbg !3713
  %tobool = icmp eq %struct.rtx_def* %offset, null, !dbg !3714
  br i1 %tobool, label %cleanup16, label %if.end, !dbg !3716

if.end:                                           ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %offset, i64 0, i32 1, !dbg !3717
  %arrayidx = bitcast %union.u* %u to i64*, !dbg !3717
  %0 = load i64, i64* %arrayidx, align 8, !dbg !3717
  call void @llvm.dbg.value(metadata i64 %0, metadata !3709, metadata !DIExpression()), !dbg !3713
  br label %do.body, !dbg !3718

do.body:                                          ; preds = %land.rhs, %if.end
  %ioffset.0 = phi i64 [ %0, %if.end ], [ %ioffset.1, %land.rhs ], !dbg !3713
  %x.addr.0 = phi %union.tree_node* [ %x, %if.end ], [ %x.addr.1, %land.rhs ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.0, metadata !3707, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.value(metadata i64 %ioffset.0, metadata !3709, metadata !DIExpression()), !dbg !3713
  %call = tail call %union.tree_node* @component_ref_field_offset(%union.tree_node* %x.addr.0) #6, !dbg !3719
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3710, metadata !DIExpression()), !dbg !3720
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3721
  %arrayidx2 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3721
  %1 = bitcast %union.tree_node** %arrayidx2 to %struct.tree_field_decl**, !dbg !3721
  %2 = load %struct.tree_field_decl*, %struct.tree_field_decl** %1, align 8, !dbg !3721
  %call3 = tail call i32 @host_integerp(%union.tree_node* %call, i32 1) #6, !dbg !3722
  %tobool4 = icmp eq i32 %call3, 0, !dbg !3722
  br i1 %tobool4, label %cleanup, label %if.end6, !dbg !3724

if.end6:                                          ; preds = %do.body
  %call7 = tail call i64 @tree_low_cst(%union.tree_node* %call, i32 1) #6, !dbg !3725
  %bit_offset = getelementptr inbounds %struct.tree_field_decl, %struct.tree_field_decl* %2, i64 0, i32 4, !dbg !3726
  %3 = load %union.tree_node*, %union.tree_node** %bit_offset, align 8, !dbg !3726
  %call8 = tail call i64 @tree_low_cst(%union.tree_node* %3, i32 1) #6, !dbg !3727
  %div = sdiv i64 %call8, 8, !dbg !3728
  %add = add nsw i64 %call7, %div, !dbg !3729
  %add9 = add nsw i64 %ioffset.0, %add, !dbg !3730
  call void @llvm.dbg.value(metadata i64 %add9, metadata !3709, metadata !DIExpression()), !dbg !3713
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3731
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3707, metadata !DIExpression()), !dbg !3713
  br label %cleanup, !dbg !3732

cleanup:                                          ; preds = %do.body, %if.end6
  %ioffset.1 = phi i64 [ %add9, %if.end6 ], [ %ioffset.0, %do.body ], !dbg !3713
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end6 ], [ false, %do.body ]
  %x.addr.1 = phi %union.tree_node* [ %4, %if.end6 ], [ %x.addr.0, %do.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %x.addr.1, metadata !3707, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.value(metadata i64 %ioffset.1, metadata !3709, metadata !DIExpression()), !dbg !3713
  br i1 %cleanup.dest.slot.0, label %do.cond, label %cleanup16.loopexit

do.cond:                                          ; preds = %cleanup
  %tobool14 = icmp eq %union.tree_node* %x.addr.1, null, !dbg !3733
  br i1 %tobool14, label %do.end, label %land.rhs, !dbg !3734

land.rhs:                                         ; preds = %do.cond
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3735
  %bf.load = load i64, i64* %5, align 8, !dbg !3735
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3736
  %cmp = icmp eq i64 %bf.cast1, 41, !dbg !3736
  br i1 %cmp, label %do.body, label %do.end, !dbg !3737, !llvm.loop !3738

do.end:                                           ; preds = %do.cond, %land.rhs
  %ioffset.1.lcssa5 = phi i64 [ %ioffset.1, %do.cond ], [ %ioffset.1, %land.rhs ], !dbg !3713
  call void @llvm.dbg.value(metadata i64 %ioffset.1.lcssa5, metadata !3709, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.value(metadata i64 %ioffset.1.lcssa5, metadata !3709, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.value(metadata i64 %ioffset.1.lcssa5, metadata !3709, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.value(metadata i64 %ioffset.1.lcssa5, metadata !3709, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.value(metadata i64 %ioffset.1.lcssa5, metadata !3709, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.value(metadata i64 %ioffset.1.lcssa5, metadata !3709, metadata !DIExpression()), !dbg !3713
  %call15 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %ioffset.1.lcssa5) #6, !dbg !3740
  br label %cleanup16, !dbg !3741

cleanup16.loopexit:                               ; preds = %cleanup
  br label %cleanup16, !dbg !3742

cleanup16:                                        ; preds = %cleanup16.loopexit, %entry, %do.end
  %retval.2 = phi %struct.rtx_def* [ %call15, %do.end ], [ null, %entry ], [ null, %cleanup16.loopexit ]
  ret %struct.rtx_def* %retval.2, !dbg !3742
}

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local i32 @true_dependence(%struct.rtx_def* %mem, i32 %mem_mode, %struct.rtx_def* %x, i8 (%struct.rtx_def*, i8)* %varies) local_unnamed_addr #4 !dbg !3743 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !3750, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i32 %mem_mode, metadata !3751, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3752, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8 (%struct.rtx_def*, i8)* %varies, metadata !3753, metadata !DIExpression()), !dbg !3758
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3759
  %bf.load = load i32, i32* %0, align 8, !dbg !3759
  %bf.clear = and i32 %bf.load, 134217728, !dbg !3759
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !3759
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3761

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !3762
  %bf.load1 = load i32, i32* %1, align 8, !dbg !3762
  %bf.clear3 = and i32 %bf.load1, 134217728, !dbg !3762
  %tobool4 = icmp eq i32 %bf.clear3, 0, !dbg !3762
  br i1 %tobool4, label %if.end, label %cleanup, !dbg !3763

if.end:                                           ; preds = %land.lhs.true, %entry
  %bf.clear7 = and i32 %bf.load, 16711680, !dbg !3764
  %cmp = icmp eq i32 %bf.clear7, 65536, !dbg !3766
  br i1 %cmp, label %land.lhs.true8, label %if.end13, !dbg !3767

land.lhs.true8:                                   ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3768
  %2 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !3768
  %3 = load i32*, i32** %2, align 8, !dbg !3768
  %bf.load9 = load i32, i32* %3, align 8, !dbg !3768
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !3768
  %cmp11 = icmp eq i32 %bf.clear10, 38, !dbg !3769
  br i1 %cmp11, label %cleanup, label %if.end13, !dbg !3770

if.end13:                                         ; preds = %land.lhs.true8, %if.end
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !3771
  %bf.load14 = load i32, i32* %4, align 8, !dbg !3771
  %bf.clear16 = and i32 %bf.load14, 16711680, !dbg !3771
  %cmp17 = icmp eq i32 %bf.clear16, 65536, !dbg !3773
  br i1 %cmp17, label %land.lhs.true18, label %if.end27, !dbg !3774

land.lhs.true18:                                  ; preds = %if.end13
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3775
  %5 = bitcast %union.rtunion_def* %arrayidx21 to i32**, !dbg !3775
  %6 = load i32*, i32** %5, align 8, !dbg !3775
  %bf.load23 = load i32, i32* %6, align 8, !dbg !3775
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !3775
  %cmp25 = icmp eq i32 %bf.clear24, 38, !dbg !3776
  br i1 %cmp25, label %cleanup, label %if.end27, !dbg !3777

if.end27:                                         ; preds = %land.lhs.true18, %if.end13
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3778
  %rt_mem = bitcast %union.rtunion_def* %7 to %struct.mem_attrs**, !dbg !3778
  %8 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3778
  %cmp31 = icmp eq %struct.mem_attrs* %8, null, !dbg !3778
  br i1 %cmp31, label %cond.end, label %cond.false, !dbg !3778

cond.false:                                       ; preds = %if.end27
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i64 0, i32 3, !dbg !3778
  %9 = load i32, i32* %alias, align 8, !dbg !3778
  %phitmp = icmp eq i32 %9, -1, !dbg !3778
  br label %cond.end, !dbg !3778

cond.end:                                         ; preds = %if.end27, %cond.false
  %cond = phi i1 [ %phitmp, %cond.false ], [ false, %if.end27 ]
  br i1 %cond, label %cleanup, label %lor.lhs.false, !dbg !3780

lor.lhs.false:                                    ; preds = %cond.end
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3781
  %rt_mem40 = bitcast %union.rtunion_def* %10 to %struct.mem_attrs**, !dbg !3781
  %11 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem40, align 8, !dbg !3781
  %cmp41 = icmp eq %struct.mem_attrs* %11, null, !dbg !3781
  br i1 %cmp41, label %cond.end49, label %cond.false43, !dbg !3781

cond.false43:                                     ; preds = %lor.lhs.false
  %alias48 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %11, i64 0, i32 3, !dbg !3781
  %12 = load i32, i32* %alias48, align 8, !dbg !3781
  %phitmp2 = icmp eq i32 %12, -1, !dbg !3781
  br label %cond.end49, !dbg !3781

cond.end49:                                       ; preds = %lor.lhs.false, %cond.false43
  %cond50 = phi i1 [ %phitmp2, %cond.false43 ], [ false, %lor.lhs.false ]
  br i1 %cond50, label %cleanup, label %if.end53, !dbg !3782

if.end53:                                         ; preds = %cond.end49
  %bf.clear56 = and i32 %bf.load, 67108864, !dbg !3783
  %tobool57 = icmp eq i32 %bf.clear56, 0, !dbg !3783
  br i1 %tobool57, label %if.end59, label %cleanup, !dbg !3785

if.end59:                                         ; preds = %if.end53
  br i1 %cmp41, label %cond.end71, label %cond.false66, !dbg !3786

cond.false66:                                     ; preds = %if.end59
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %11, i64 0, i32 5, !dbg !3786
  %13 = load i8, i8* %addrspace, align 8, !dbg !3786
  %conv = zext i8 %13 to i32, !dbg !3786
  br label %cond.end71, !dbg !3786

cond.end71:                                       ; preds = %if.end59, %cond.false66
  %cond72 = phi i32 [ %conv, %cond.false66 ], [ 0, %if.end59 ], !dbg !3786
  br i1 %cmp31, label %cond.end87, label %cond.false80, !dbg !3788

cond.false80:                                     ; preds = %cond.end71
  %addrspace85 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i64 0, i32 5, !dbg !3788
  %14 = load i8, i8* %addrspace85, align 8, !dbg !3788
  %conv86 = zext i8 %14 to i32, !dbg !3788
  br label %cond.end87, !dbg !3788

cond.end87:                                       ; preds = %cond.end71, %cond.false80
  %cond88 = phi i32 [ %conv86, %cond.false80 ], [ 0, %cond.end71 ], !dbg !3788
  %cmp89 = icmp eq i32 %cond72, %cond88, !dbg !3789
  br i1 %cmp89, label %if.end92, label %cleanup, !dbg !3790

if.end92:                                         ; preds = %cond.end87
  %cmp93 = icmp eq i32 %mem_mode, 0, !dbg !3791
  br i1 %cmp93, label %if.then95, label %if.end99, !dbg !3793

if.then95:                                        ; preds = %if.end92
  %bf.lshr97 = lshr i32 %bf.load14, 16, !dbg !3794
  %bf.clear98 = and i32 %bf.lshr97, 255, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %bf.clear98, metadata !3751, metadata !DIExpression()), !dbg !3758
  br label %if.end99, !dbg !3795

if.end99:                                         ; preds = %if.then95, %if.end92
  %mem_mode.addr.0 = phi i32 [ %bf.clear98, %if.then95 ], [ %mem_mode, %if.end92 ]
  call void @llvm.dbg.value(metadata i32 %mem_mode.addr.0, metadata !3751, metadata !DIExpression()), !dbg !3758
  %arrayidx102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3796
  %rt_rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**, !dbg !3796
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx103, align 8, !dbg !3796
  %call = tail call %struct.rtx_def* @get_addr(%struct.rtx_def* %15) #7, !dbg !3797
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3754, metadata !DIExpression()), !dbg !3758
  %arrayidx106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3798
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !3798
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !3798
  %call108 = tail call %struct.rtx_def* @get_addr(%struct.rtx_def* %16) #7, !dbg !3799
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call108, metadata !3755, metadata !DIExpression()), !dbg !3758
  %call109 = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %call) #7, !dbg !3800
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call109, metadata !3756, metadata !DIExpression()), !dbg !3758
  %tobool110 = icmp eq %struct.rtx_def* %call109, null, !dbg !3801
  br i1 %tobool110, label %if.end127, label %land.lhs.true111, !dbg !3803

land.lhs.true111:                                 ; preds = %if.end99
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call109, i64 0, i32 0, !dbg !3804
  %bf.load112 = load i32, i32* %17, align 8, !dbg !3804
  %bf.clear113 = and i32 %bf.load112, 65535, !dbg !3804
  %cmp114 = icmp eq i32 %bf.clear113, 44, !dbg !3805
  br i1 %cmp114, label %cleanup, label %lor.lhs.false116, !dbg !3806

lor.lhs.false116:                                 ; preds = %land.lhs.true111
  %cmp119 = icmp eq i32 %bf.clear113, 45, !dbg !3807
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !3808

land.lhs.true121:                                 ; preds = %lor.lhs.false116
  %bf.clear124 = and i32 %bf.load112, 67108864, !dbg !3809
  %tobool125 = icmp eq i32 %bf.clear124, 0, !dbg !3809
  br i1 %tobool125, label %if.end127, label %cleanup, !dbg !3810

if.end127:                                        ; preds = %land.lhs.true121, %if.end99, %lor.lhs.false116
  %bf.load128 = load i32, i32* %0, align 8, !dbg !3811
  %bf.lshr129 = lshr i32 %bf.load128, 16, !dbg !3811
  %bf.clear130 = and i32 %bf.lshr129, 255, !dbg !3811
  %call131 = tail call fastcc i32 @base_alias_check(%struct.rtx_def* %call, %struct.rtx_def* %call108, i32 %bf.clear130, i32 %mem_mode.addr.0) #7, !dbg !3813
  %tobool132 = icmp eq i32 %call131, 0, !dbg !3813
  br i1 %tobool132, label %cleanup, label %if.end134, !dbg !3814

if.end134:                                        ; preds = %if.end127
  %call135 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %call) #7, !dbg !3815
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call135, metadata !3754, metadata !DIExpression()), !dbg !3758
  %call136 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %call108) #7, !dbg !3816
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call136, metadata !3755, metadata !DIExpression()), !dbg !3758
  %idxprom = zext i32 %mem_mode.addr.0 to i64, !dbg !3817
  %arrayidx137 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3817
  %18 = load i8, i8* %arrayidx137, align 1, !dbg !3817
  %conv139 = zext i8 %18 to i32, !dbg !3817
  %bf.load140 = load i32, i32* %0, align 8, !dbg !3819
  %bf.lshr141 = lshr i32 %bf.load140, 16, !dbg !3819
  %bf.clear142 = and i32 %bf.lshr141, 255, !dbg !3819
  %idxprom143 = zext i32 %bf.clear142 to i64, !dbg !3819
  %arrayidx144 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom143, !dbg !3819
  %19 = load i8, i8* %arrayidx144, align 1, !dbg !3819
  %conv146 = zext i8 %19 to i32, !dbg !3819
  %call147 = tail call fastcc i32 @memrefs_conflict_p(i32 %conv139, %struct.rtx_def* %call136, i32 %conv146, %struct.rtx_def* %call135, i64 0) #7, !dbg !3820
  call void @llvm.dbg.value(metadata i32 %call147, metadata !3757, metadata !DIExpression()), !dbg !3758
  %cmp148 = icmp eq i32 %call147, -1, !dbg !3821
  br i1 %cmp148, label %if.end151, label %cleanup, !dbg !3822

if.end151:                                        ; preds = %if.end134
  %call152 = tail call fastcc i32 @mems_in_disjoint_alias_sets_p(%struct.rtx_def* %x, %struct.rtx_def* %mem) #7, !dbg !3823
  %tobool153 = icmp eq i32 %call152, 0, !dbg !3823
  br i1 %tobool153, label %if.end155, label %cleanup, !dbg !3825

if.end155:                                        ; preds = %if.end151
  %call156 = tail call i32 @nonoverlapping_memrefs_p(%struct.rtx_def* %mem, %struct.rtx_def* %x) #7, !dbg !3826
  %tobool157 = icmp eq i32 %call156, 0, !dbg !3826
  br i1 %tobool157, label %if.end159, label %cleanup, !dbg !3828

if.end159:                                        ; preds = %if.end155
  %call160 = tail call fastcc i32 @aliases_everything_p(%struct.rtx_def* %x) #7, !dbg !3829
  %tobool161 = icmp ne i32 %call160, 0, !dbg !3829
  %cmp164 = icmp eq i32 %mem_mode.addr.0, 14, !dbg !3831
  %or.cond = or i1 %tobool161, %cmp164, !dbg !3833
  br i1 %or.cond, label %cleanup, label %lor.lhs.false166, !dbg !3833

lor.lhs.false166:                                 ; preds = %if.end159
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call136, i64 0, i32 0, !dbg !3834
  %bf.load167 = load i32, i32* %20, align 8, !dbg !3834
  %bf.clear168 = and i32 %bf.load167, 65535, !dbg !3834
  %cmp169 = icmp eq i32 %bf.clear168, 61, !dbg !3835
  %cmp173 = icmp eq i32 %mem_mode.addr.0, 1, !dbg !3836
  %or.cond1 = or i1 %cmp169, %cmp173, !dbg !3838
  br i1 %or.cond1, label %cleanup, label %lor.lhs.false175, !dbg !3838

lor.lhs.false175:                                 ; preds = %lor.lhs.false166
  %bf.load176 = load i32, i32* %0, align 8, !dbg !3839
  %bf.clear178 = and i32 %bf.load176, 16711680, !dbg !3839
  %cmp179 = icmp eq i32 %bf.clear178, 65536, !dbg !3840
  br i1 %cmp179, label %cleanup, label %if.end182, !dbg !3841

if.end182:                                        ; preds = %lor.lhs.false175
  %call183 = tail call fastcc %struct.rtx_def* @fixed_scalar_and_varying_struct_p(%struct.rtx_def* %mem, %struct.rtx_def* %x, %struct.rtx_def* %call136, %struct.rtx_def* %call135, i8 (%struct.rtx_def*, i8)* %varies) #7, !dbg !3842
  %tobool184 = icmp eq %struct.rtx_def* %call183, null, !dbg !3842
  br i1 %tobool184, label %if.end186, label %cleanup, !dbg !3844

if.end186:                                        ; preds = %if.end182
  %call187 = tail call fastcc zeroext i8 @rtx_refs_may_alias_p(%struct.rtx_def* %x, %struct.rtx_def* %mem, i8 zeroext 1) #7, !dbg !3845
  %conv188 = zext i8 %call187 to i32, !dbg !3845
  br label %cleanup, !dbg !3846

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true121, %if.end182, %if.end155, %if.end151, %if.end134, %if.end127, %cond.end87, %if.end53, %lor.lhs.false175, %lor.lhs.false166, %if.end159, %land.lhs.true111, %cond.end, %cond.end49, %land.lhs.true18, %land.lhs.true8, %if.end186
  %retval.0 = phi i32 [ %conv188, %if.end186 ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true8 ], [ 1, %land.lhs.true18 ], [ 1, %cond.end49 ], [ 1, %cond.end ], [ 0, %if.end53 ], [ 1, %cond.end87 ], [ 0, %land.lhs.true121 ], [ 0, %land.lhs.true111 ], [ 0, %if.end127 ], [ %call147, %if.end134 ], [ 0, %if.end151 ], [ 0, %if.end155 ], [ 1, %if.end159 ], [ 1, %lor.lhs.false166 ], [ 1, %lor.lhs.false175 ], [ 0, %if.end182 ], !dbg !3758
  ret i32 %retval.0, !dbg !3847
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @base_alias_check(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %x_mode, i32 %y_mode) unnamed_addr #4 !dbg !3848 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3852, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !3853, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i32 %x_mode, metadata !3854, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i32 %y_mode, metadata !3855, metadata !DIExpression()), !dbg !3864
  %call = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %x) #7, !dbg !3865
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3856, metadata !DIExpression()), !dbg !3864
  %call1 = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %y) #7, !dbg !3866
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !3857, metadata !DIExpression()), !dbg !3864
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !3867
  br i1 %cmp, label %if.then, label %if.end9, !dbg !3868

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @flag_expensive_optimizations, align 4, !dbg !3869
  %tobool = icmp eq i32 %0, 0, !dbg !3869
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !3871

lor.lhs.false:                                    ; preds = %if.then
  %call2 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %x) #7, !dbg !3872
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !3858, metadata !DIExpression()), !dbg !3873
  %cmp3 = icmp eq %struct.rtx_def* %call2, %x, !dbg !3874
  br i1 %cmp3, label %cleanup, label %if.end, !dbg !3875

if.end:                                           ; preds = %lor.lhs.false
  %call5 = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %call2) #7, !dbg !3876
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !3856, metadata !DIExpression()), !dbg !3864
  %cmp6 = icmp eq %struct.rtx_def* %call5, null, !dbg !3877
  %. = zext i1 %cmp6 to i32, !dbg !3879
  br label %cleanup, !dbg !3879

cleanup:                                          ; preds = %if.then, %if.end, %lor.lhs.false
  %x_base.0 = phi %struct.rtx_def* [ null, %lor.lhs.false ], [ null, %if.then ], [ %call5, %if.end ], !dbg !3864
  %cleanup.dest.slot.0 = phi i32 [ 1, %lor.lhs.false ], [ 1, %if.then ], [ %., %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x_base.0, metadata !3856, metadata !DIExpression()), !dbg !3864
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %if.end9, label %cleanup166

if.end9:                                          ; preds = %cleanup, %entry
  %x_base.1 = phi %struct.rtx_def* [ %call, %entry ], [ %x_base.0, %cleanup ], !dbg !3880
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x_base.1, metadata !3856, metadata !DIExpression()), !dbg !3864
  %cmp10 = icmp eq %struct.rtx_def* %call1, null, !dbg !3881
  br i1 %cmp10, label %if.then11, label %if.end25, !dbg !3882

if.then11:                                        ; preds = %if.end9
  %1 = load i32, i32* @flag_expensive_optimizations, align 4, !dbg !3883
  %tobool12 = icmp eq i32 %1, 0, !dbg !3883
  br i1 %tobool12, label %cleanup22, label %lor.lhs.false13, !dbg !3885

lor.lhs.false13:                                  ; preds = %if.then11
  %call14 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %y) #7, !dbg !3886
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !3861, metadata !DIExpression()), !dbg !3887
  %cmp15 = icmp eq %struct.rtx_def* %call14, %y, !dbg !3888
  br i1 %cmp15, label %cleanup22, label %if.end17, !dbg !3889

if.end17:                                         ; preds = %lor.lhs.false13
  %call18 = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %call14) #7, !dbg !3890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !3857, metadata !DIExpression()), !dbg !3864
  %cmp19 = icmp ne %struct.rtx_def* %call18, null, !dbg !3891
  br label %cleanup22, !dbg !3893

cleanup22:                                        ; preds = %if.then11, %if.end17, %lor.lhs.false13
  %y_base.0 = phi %struct.rtx_def* [ null, %lor.lhs.false13 ], [ null, %if.then11 ], [ %call18, %if.end17 ], !dbg !3864
  %cleanup.dest.slot.1 = phi i1 [ false, %lor.lhs.false13 ], [ false, %if.then11 ], [ %cmp19, %if.end17 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y_base.0, metadata !3857, metadata !DIExpression()), !dbg !3864
  br i1 %cleanup.dest.slot.1, label %if.end25, label %cleanup166

if.end25:                                         ; preds = %cleanup22, %if.end9
  %y_base.1 = phi %struct.rtx_def* [ %call1, %if.end9 ], [ %y_base.0, %cleanup22 ], !dbg !3894
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y_base.1, metadata !3857, metadata !DIExpression()), !dbg !3864
  %call26 = tail call i32 @rtx_equal_p(%struct.rtx_def* %x_base.1, %struct.rtx_def* %y_base.1) #6, !dbg !3895
  %tobool27 = icmp eq i32 %call26, 0, !dbg !3895
  br i1 %tobool27, label %if.end29, label %cleanup166, !dbg !3897

if.end29:                                         ; preds = %if.end25
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3898
  %bf.load = load i32, i32* %2, align 8, !dbg !3898
  %bf.clear = and i32 %bf.load, 65535, !dbg !3898
  %cmp30 = icmp eq i32 %bf.clear, 61, !dbg !3900
  br i1 %cmp30, label %land.lhs.true, label %if.end35, !dbg !3901

land.lhs.true:                                    ; preds = %if.end29
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !3902
  %bf.load31 = load i32, i32* %3, align 8, !dbg !3902
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !3902
  %cmp33 = icmp eq i32 %bf.clear32, 61, !dbg !3903
  br i1 %cmp33, label %cleanup166, label %if.end35, !dbg !3904

if.end35:                                         ; preds = %land.lhs.true, %if.end29
  br i1 %cmp30, label %land.lhs.true39, label %if.end68, !dbg !3905

land.lhs.true39:                                  ; preds = %if.end35
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3907
  %5 = bitcast %union.rtunion_def* %4 to i32**, !dbg !3907
  %6 = load i32*, i32** %5, align 8, !dbg !3907
  %bf.load40 = load i32, i32* %6, align 8, !dbg !3907
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !3907
  %cmp42 = icmp eq i32 %bf.clear41, 30, !dbg !3907
  br i1 %cmp42, label %lor.lhs.false43, label %cleanup166, !dbg !3908

lor.lhs.false43:                                  ; preds = %land.lhs.true39
  %idxprom = zext i32 %y_mode to i64, !dbg !3909
  %arrayidx44 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !3909
  %7 = load i8, i8* %arrayidx44, align 1, !dbg !3909
  %cmp45 = icmp eq i8 %7, 0, !dbg !3909
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !3909

cond.true:                                        ; preds = %lor.lhs.false43
  br label %cond.end, !dbg !3909

cond.false:                                       ; preds = %lor.lhs.false43
  %idxprom54 = zext i8 %7 to i64, !dbg !3909
  br label %cond.end, !dbg !3909

cond.end:                                         ; preds = %cond.false, %cond.true
  %idxprom47.pn = phi i64 [ %idxprom, %cond.true ], [ %idxprom54, %cond.false ]
  %cond.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom47.pn, !dbg !3909
  %cond.in = load i8, i8* %cond.in.in, align 1, !dbg !3909
  %cond = zext i8 %cond.in to i64, !dbg !3909
  %u63 = getelementptr inbounds i32, i32* %6, i64 2, !dbg !3910
  %arrayidx64 = bitcast i32* %u63 to i64*, !dbg !3910
  %8 = load i64, i64* %arrayidx64, align 8, !dbg !3910
  %sub = sub nsw i64 0, %8, !dbg !3911
  %cmp65 = icmp slt i64 %cond, %sub, !dbg !3912
  br i1 %cmp65, label %cleanup166, label %if.end68, !dbg !3913

if.end68:                                         ; preds = %cond.end, %if.end35
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !3914
  %bf.load69 = load i32, i32* %9, align 8, !dbg !3914
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !3914
  %cmp71 = icmp eq i32 %bf.clear70, 61, !dbg !3916
  br i1 %cmp71, label %land.lhs.true73, label %if.end115, !dbg !3917

land.lhs.true73:                                  ; preds = %if.end68
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3918
  %11 = bitcast %union.rtunion_def* %10 to i32**, !dbg !3918
  %12 = load i32*, i32** %11, align 8, !dbg !3918
  %bf.load78 = load i32, i32* %12, align 8, !dbg !3918
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !3918
  %cmp80 = icmp eq i32 %bf.clear79, 30, !dbg !3918
  br i1 %cmp80, label %lor.lhs.false82, label %cleanup166, !dbg !3919

lor.lhs.false82:                                  ; preds = %land.lhs.true73
  %idxprom83 = zext i32 %x_mode to i64, !dbg !3920
  %arrayidx84 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom83, !dbg !3920
  %13 = load i8, i8* %arrayidx84, align 1, !dbg !3920
  %cmp86 = icmp eq i8 %13, 0, !dbg !3920
  br i1 %cmp86, label %cond.true88, label %cond.false93, !dbg !3920

cond.true88:                                      ; preds = %lor.lhs.false82
  br label %cond.end101, !dbg !3920

cond.false93:                                     ; preds = %lor.lhs.false82
  %idxprom97 = zext i8 %13 to i64, !dbg !3920
  br label %cond.end101, !dbg !3920

cond.end101:                                      ; preds = %cond.false93, %cond.true88
  %idxprom89.pn = phi i64 [ %idxprom83, %cond.true88 ], [ %idxprom97, %cond.false93 ]
  %cond102.in.in = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom89.pn, !dbg !3920
  %cond102.in = load i8, i8* %cond102.in.in, align 1, !dbg !3920
  %cond102 = zext i8 %cond102.in to i64, !dbg !3920
  %u108 = getelementptr inbounds i32, i32* %12, i64 2, !dbg !3921
  %arrayidx110 = bitcast i32* %u108 to i64*, !dbg !3921
  %14 = load i64, i64* %arrayidx110, align 8, !dbg !3921
  %sub111 = sub nsw i64 0, %14, !dbg !3922
  %cmp112 = icmp slt i64 %cond102, %sub111, !dbg !3923
  br i1 %cmp112, label %cleanup166, label %if.end115, !dbg !3924

if.end115:                                        ; preds = %cond.end101, %if.end68
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x_base.1, i64 0, i32 0, !dbg !3925
  %bf.load116 = load i32, i32* %15, align 8, !dbg !3925
  %bf.clear117 = and i32 %bf.load116, 65535, !dbg !3925
  %cmp118 = icmp eq i32 %bf.clear117, 6, !dbg !3927
  br i1 %cmp118, label %if.end126, label %land.lhs.true120, !dbg !3928

land.lhs.true120:                                 ; preds = %if.end115
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y_base.1, i64 0, i32 0, !dbg !3929
  %bf.load121 = load i32, i32* %16, align 8, !dbg !3929
  %bf.clear122 = and i32 %bf.load121, 65535, !dbg !3929
  %cmp123 = icmp eq i32 %bf.clear122, 6, !dbg !3930
  br i1 %cmp123, label %if.end126, label %cleanup166, !dbg !3931

if.end126:                                        ; preds = %land.lhs.true120, %if.end115
  br i1 %cmp118, label %land.lhs.true131, label %lor.lhs.false136, !dbg !3932

land.lhs.true131:                                 ; preds = %if.end126
  %bf.clear133 = and i32 %bf.load116, 16711680, !dbg !3934
  %cmp134 = icmp eq i32 %bf.clear133, 1048576, !dbg !3935
  br i1 %cmp134, label %cleanup166, label %lor.lhs.false136, !dbg !3936

lor.lhs.false136:                                 ; preds = %land.lhs.true131, %if.end126
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y_base.1, i64 0, i32 0, !dbg !3937
  %bf.load137 = load i32, i32* %17, align 8, !dbg !3937
  %bf.clear138 = and i32 %bf.load137, 65535, !dbg !3937
  %cmp139 = icmp eq i32 %bf.clear138, 6, !dbg !3938
  br i1 %cmp139, label %land.lhs.true141, label %if.end148, !dbg !3939

land.lhs.true141:                                 ; preds = %lor.lhs.false136
  %bf.clear144 = and i32 %bf.load137, 16711680, !dbg !3940
  %cmp145 = icmp eq i32 %bf.clear144, 1048576, !dbg !3941
  br i1 %cmp145, label %cleanup166, label %if.end148, !dbg !3942

if.end148:                                        ; preds = %land.lhs.true141, %lor.lhs.false136
  %18 = load i32, i32* @flag_argument_noalias, align 4, !dbg !3943
  %tobool149 = icmp eq i32 %18, 0, !dbg !3943
  br i1 %tobool149, label %cleanup166, label %if.end151, !dbg !3945

if.end151:                                        ; preds = %if.end148
  %cmp152 = icmp sgt i32 %18, 1, !dbg !3946
  br i1 %cmp152, label %cleanup166, label %if.end155, !dbg !3948

if.end155:                                        ; preds = %if.end151
  %bf.clear158 = and i32 %bf.load116, 16711680, !dbg !3949
  %cmp159 = icmp eq i32 %bf.clear158, 0, !dbg !3950
  br i1 %cmp159, label %land.rhs, label %land.end, !dbg !3951

land.rhs:                                         ; preds = %if.end155
  %bf.clear163 = and i32 %bf.load137, 16711680, !dbg !3952
  %cmp164 = icmp ne i32 %bf.clear163, 0, !dbg !3953
  %phitmp = zext i1 %cmp164 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end155
  %19 = phi i32 [ 1, %if.end155 ], [ %phitmp, %land.rhs ]
  br label %cleanup166, !dbg !3954

cleanup166:                                       ; preds = %land.lhs.true120, %if.end148, %if.end25, %if.end151, %land.lhs.true131, %land.lhs.true141, %land.lhs.true73, %cond.end101, %land.lhs.true39, %cond.end, %land.lhs.true, %cleanup, %cleanup22, %land.end
  %retval.3 = phi i32 [ 1, %cleanup ], [ 1, %cleanup22 ], [ %19, %land.end ], [ 1, %if.end25 ], [ 1, %land.lhs.true ], [ 1, %cond.end ], [ 1, %land.lhs.true39 ], [ 1, %cond.end101 ], [ 1, %land.lhs.true73 ], [ 0, %land.lhs.true120 ], [ 0, %land.lhs.true141 ], [ 0, %land.lhs.true131 ], [ 1, %if.end148 ], [ 0, %if.end151 ], !dbg !3864
  ret i32 %retval.3, !dbg !3955
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @memrefs_conflict_p(i32 %xsize, %struct.rtx_def* %x, i32 %ysize, %struct.rtx_def* %y, i64 %c) unnamed_addr #4 !dbg !3956 {
entry:
  br label %tailrecurse.outer, !dbg !3984

tailrecurse.outer:                                ; preds = %tailrecurse.outer.backedge, %entry
  %xsize.tr.ph = phi i32 [ %xsize, %entry ], [ %xsize.tr.ph.be, %tailrecurse.outer.backedge ]
  %x.tr.ph = phi %struct.rtx_def* [ %x, %entry ], [ %x.tr.ph.be, %tailrecurse.outer.backedge ]
  %ysize.tr.ph = phi i32 [ %ysize, %entry ], [ %ysize.tr.ph.be, %tailrecurse.outer.backedge ]
  %y.tr.ph = phi %struct.rtx_def* [ %y, %entry ], [ %y.tr.ph.be, %tailrecurse.outer.backedge ]
  %c.tr.ph = phi i64 [ %c, %entry ], [ %c.tr.ph.be, %tailrecurse.outer.backedge ]
  %conv327 = sext i32 %xsize.tr.ph to i64, !dbg !3987
  br label %tailrecurse.outer10, !dbg !3991

tailrecurse.outer10:                              ; preds = %tailrecurse.outer, %if.end339
  %x.tr.ph11 = phi %struct.rtx_def* [ %x.tr.ph, %tailrecurse.outer ], [ %x.addr.2.lcssa114, %if.end339 ]
  %ysize.tr.ph12 = phi i32 [ %ysize.tr.ph, %tailrecurse.outer ], [ %ysize.addr.0, %if.end339 ]
  %y.tr.ph13 = phi %struct.rtx_def* [ %y.tr.ph, %tailrecurse.outer ], [ %call344, %if.end339 ]
  %c.tr.ph14 = phi i64 [ %c.tr.ph, %tailrecurse.outer ], [ %c.tr.ph18.lcssa137, %if.end339 ]
  br label %tailrecurse.outer15, !dbg !3991

tailrecurse.outer15:                              ; preds = %tailrecurse.outer10, %if.then172
  %x.tr.ph16 = phi %struct.rtx_def* [ %x.tr.ph11, %tailrecurse.outer10 ], [ %x.addr.2.lcssa110, %if.then172 ]
  %y.tr.ph17 = phi %struct.rtx_def* [ %y.tr.ph13, %tailrecurse.outer10 ], [ %29, %if.then172 ]
  %c.tr.ph18 = phi i64 [ %c.tr.ph14, %tailrecurse.outer10 ], [ %add176, %if.then172 ]
  br label %tailrecurse, !dbg !3991

tailrecurse:                                      ; preds = %tailrecurse.backedge, %tailrecurse.outer15
  %x.tr = phi %struct.rtx_def* [ %x.tr.ph16, %tailrecurse.outer15 ], [ %x.tr.be, %tailrecurse.backedge ]
  %y.tr = phi %struct.rtx_def* [ %y.tr.ph17, %tailrecurse.outer15 ], [ %y.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata i32 %xsize.tr.ph, metadata !3960, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata i32 %ysize.tr.ph12, metadata !3962, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata i64 %c.tr.ph18, metadata !3964, metadata !DIExpression()), !dbg !3992
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !3993
  %bf.load = load i32, i32* %0, align 8, !dbg !3993
  %bf.clear = and i32 %bf.load, 65535, !dbg !3993
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !3995
  br i1 %cmp, label %if.then, label %if.end, !dbg !3991

if.then:                                          ; preds = %tailrecurse
  %call = tail call %struct.rtx_def* @get_addr(%struct.rtx_def* %x.tr) #7, !dbg !3996
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3961, metadata !DIExpression()), !dbg !3992
  br label %if.end, !dbg !3997

if.end:                                           ; preds = %if.then, %tailrecurse
  %x.addr.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %x.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.0, metadata !3961, metadata !DIExpression()), !dbg !3992
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr, i64 0, i32 0, !dbg !3998
  %bf.load1 = load i32, i32* %1, align 8, !dbg !3998
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3998
  %cmp3 = icmp eq i32 %bf.clear2, 1, !dbg !4000
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !4001

if.then4:                                         ; preds = %if.end
  %call5 = tail call %struct.rtx_def* @get_addr(%struct.rtx_def* %y.tr) #7, !dbg !4002
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !3963, metadata !DIExpression()), !dbg !3992
  br label %if.end6, !dbg !4003

if.end6:                                          ; preds = %if.then4, %if.end
  %y.addr.0 = phi %struct.rtx_def* [ %call5, %if.then4 ], [ %y.tr, %if.end ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.0, metadata !3963, metadata !DIExpression()), !dbg !3992
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 0, !dbg !4004
  %bf.load7 = load i32, i32* %2, align 8, !dbg !4004
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !4004
  %cmp9 = icmp eq i32 %bf.clear8, 121, !dbg !4006
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !4007

if.then10:                                        ; preds = %if.end6
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4008
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4008
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4008
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3961, metadata !DIExpression()), !dbg !3992
  br label %if.end22, !dbg !4009

if.else:                                          ; preds = %if.end6
  %cmp13 = icmp eq i32 %bf.clear8, 122, !dbg !4010
  br i1 %cmp13, label %if.then14, label %if.else19, !dbg !4012

if.then14:                                        ; preds = %if.else
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4013
  %rt_rtx18 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !4013
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !4013
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3961, metadata !DIExpression()), !dbg !3992
  br label %if.end22, !dbg !4014

if.else19:                                        ; preds = %if.else
  %call20 = tail call fastcc %struct.rtx_def* @addr_side_effect_eval(%struct.rtx_def* %x.addr.0, i32 %xsize.tr.ph, i32 0) #7, !dbg !4015
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call20, metadata !3961, metadata !DIExpression()), !dbg !3992
  br label %if.end22

if.end22:                                         ; preds = %if.then14, %if.else19, %if.then10
  %x.addr.2 = phi %struct.rtx_def* [ %3, %if.then10 ], [ %5, %if.then14 ], [ %call20, %if.else19 ], !dbg !4016
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2, metadata !3961, metadata !DIExpression()), !dbg !3992
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.0, i64 0, i32 0, !dbg !4017
  %bf.load23 = load i32, i32* %6, align 8, !dbg !4017
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !4017
  %cmp25 = icmp eq i32 %bf.clear24, 121, !dbg !4019
  br i1 %cmp25, label %if.then26, label %if.else31, !dbg !4020

if.then26:                                        ; preds = %if.end22
  %arrayidx29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4021
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !4021
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !4021
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !3963, metadata !DIExpression()), !dbg !3992
  br label %if.end43, !dbg !4022

if.else31:                                        ; preds = %if.end22
  %cmp34 = icmp eq i32 %bf.clear24, 122, !dbg !4023
  br i1 %cmp34, label %if.then35, label %if.else40, !dbg !4025

if.then35:                                        ; preds = %if.else31
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4026
  %rt_rtx39 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !4026
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !4026
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !3963, metadata !DIExpression()), !dbg !3992
  br label %if.end43, !dbg !4027

if.else40:                                        ; preds = %if.else31
  %call41 = tail call fastcc %struct.rtx_def* @addr_side_effect_eval(%struct.rtx_def* %y.addr.0, i32 %ysize.tr.ph12, i32 0) #7, !dbg !4028
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41, metadata !3963, metadata !DIExpression()), !dbg !3992
  br label %if.end43

if.end43:                                         ; preds = %if.then35, %if.else40, %if.then26
  %y.addr.2 = phi %struct.rtx_def* [ %7, %if.then26 ], [ %9, %if.then35 ], [ %call41, %if.else40 ], !dbg !4029
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2, metadata !3963, metadata !DIExpression()), !dbg !3992
  %call44 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %x.addr.2, %struct.rtx_def* %y.addr.2) #7, !dbg !4030
  %tobool = icmp eq i32 %call44, 0, !dbg !4030
  br i1 %tobool, label %if.end63, label %if.then45, !dbg !4032

if.then45:                                        ; preds = %if.end43
  %xsize.tr.ph.lcssa = phi i32 [ %xsize.tr.ph, %if.end43 ]
  %conv327.lcssa = phi i64 [ %conv327, %if.end43 ], !dbg !3987
  %ysize.tr.ph12.lcssa = phi i32 [ %ysize.tr.ph12, %if.end43 ]
  %c.tr.ph18.lcssa = phi i64 [ %c.tr.ph18, %if.end43 ]
  %cmp46 = icmp slt i32 %xsize.tr.ph.lcssa, 1, !dbg !4033
  %cmp47 = icmp slt i32 %ysize.tr.ph12.lcssa, 1, !dbg !4036
  %or.cond = or i1 %cmp46, %cmp47, !dbg !4037
  br i1 %or.cond, label %return, label %if.end49, !dbg !4037

if.end49:                                         ; preds = %if.then45
  %cmp50 = icmp sgt i64 %c.tr.ph18.lcssa, -1, !dbg !4038
  %cmp51 = icmp slt i64 %c.tr.ph18.lcssa, %conv327.lcssa, !dbg !4040
  %or.cond1 = and i1 %cmp50, %cmp51, !dbg !4041
  br i1 %or.cond1, label %return, label %if.end54, !dbg !4041

if.end54:                                         ; preds = %if.end49
  %cmp55 = icmp slt i64 %c.tr.ph18.lcssa, 0, !dbg !4042
  br i1 %cmp55, label %land.lhs.true57, label %if.end62, !dbg !4044

land.lhs.true57:                                  ; preds = %if.end54
  %conv58 = sext i32 %ysize.tr.ph12.lcssa to i64, !dbg !4045
  %add = add nsw i64 %c.tr.ph18.lcssa, %conv58, !dbg !4046
  %cmp59 = icmp sgt i64 %add, 0, !dbg !4047
  br i1 %cmp59, label %return, label %if.end62, !dbg !4048

if.end62:                                         ; preds = %land.lhs.true57, %if.end54
  br label %return, !dbg !4049

if.end63:                                         ; preds = %if.end43
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.2, i64 0, i32 0, !dbg !4050
  %bf.load64 = load i32, i32* %10, align 8, !dbg !4050
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !4050
  %cmp66 = icmp eq i32 %bf.clear65, 49, !dbg !4051
  br i1 %cmp66, label %if.then68, label %if.else152, !dbg !4052

if.then68:                                        ; preds = %if.end63
  %arrayidx71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4053
  %rt_rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**, !dbg !4053
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx72, align 8, !dbg !4053
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !3965, metadata !DIExpression()), !dbg !4054
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4055
  %rt_rtx76 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !4055
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx76, align 8, !dbg !4055
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !3968, metadata !DIExpression()), !dbg !4054
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2, i64 0, i32 0, !dbg !4056
  %bf.load77 = load i32, i32* %14, align 8, !dbg !4056
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !4056
  %cmp79 = icmp eq i32 %bf.clear78, 49, !dbg !4057
  br i1 %cmp79, label %if.then81, label %if.else137, !dbg !4058

if.then81:                                        ; preds = %if.then68
  %arrayidx84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4059
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !4059
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !4059
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !3969, metadata !DIExpression()), !dbg !4060
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4061
  %rt_rtx89 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !4061
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89, align 8, !dbg !4061
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !3972, metadata !DIExpression()), !dbg !4060
  %call90 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %13, %struct.rtx_def* %17) #7, !dbg !4062
  %tobool91 = icmp eq i32 %call90, 0, !dbg !4062
  br i1 %tobool91, label %if.end94, label %if.then92, !dbg !4064

if.then92:                                        ; preds = %if.then81
  %call93 = tail call fastcc i32 @memrefs_conflict_p(i32 %xsize.tr.ph, %struct.rtx_def* %11, i32 %ysize.tr.ph12, %struct.rtx_def* %15, i64 %c.tr.ph18) #7, !dbg !4065
  br label %cleanup150, !dbg !4066

if.end94:                                         ; preds = %if.then81
  %call95 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %11, %struct.rtx_def* %15) #7, !dbg !4067
  %tobool96 = icmp eq i32 %call95, 0, !dbg !4067
  br i1 %tobool96, label %if.end99, label %if.then97, !dbg !4069

if.then97:                                        ; preds = %if.end94
  %call98 = tail call fastcc i32 @memrefs_conflict_p(i32 %xsize.tr.ph, %struct.rtx_def* %13, i32 %ysize.tr.ph12, %struct.rtx_def* %17, i64 %c.tr.ph18) #7, !dbg !4070
  br label %cleanup150, !dbg !4071

if.end99:                                         ; preds = %if.end94
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 0, !dbg !4072
  %bf.load100 = load i32, i32* %18, align 8, !dbg !4072
  %bf.clear101 = and i32 %bf.load100, 65535, !dbg !4072
  %cmp102 = icmp eq i32 %bf.clear101, 30, !dbg !4072
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 0, !dbg !4074
  %bf.load105 = load i32, i32* %19, align 8, !dbg !4074
  %bf.clear106 = and i32 %bf.load105, 65535, !dbg !4074
  %cmp107 = icmp eq i32 %bf.clear106, 30, !dbg !4074
  br i1 %cmp102, label %if.then104, label %if.else123, !dbg !4075

if.then104:                                       ; preds = %if.end99
  %u110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, !dbg !4076
  %arrayidx111 = bitcast %union.u* %u110 to i64*, !dbg !4076
  %20 = load i64, i64* %arrayidx111, align 8, !dbg !4076
  %sub = sub nsw i64 %c.tr.ph18, %20, !dbg !4076
  br i1 %cmp107, label %if.then109, label %if.else117, !dbg !4079

if.then109:                                       ; preds = %if.then104
  %u112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, !dbg !4080
  %arrayidx114 = bitcast %union.u* %u112 to i64*, !dbg !4080
  %21 = load i64, i64* %arrayidx114, align 8, !dbg !4080
  %add115 = add nsw i64 %sub, %21, !dbg !4081
  %call116 = tail call fastcc i32 @memrefs_conflict_p(i32 %xsize.tr.ph, %struct.rtx_def* %11, i32 %ysize.tr.ph12, %struct.rtx_def* %15, i64 %add115) #7, !dbg !4082
  br label %cleanup150, !dbg !4083

if.else117:                                       ; preds = %if.then104
  %call122 = tail call fastcc i32 @memrefs_conflict_p(i32 %xsize.tr.ph, %struct.rtx_def* %11, i32 %ysize.tr.ph12, %struct.rtx_def* %y.addr.2, i64 %sub) #7, !dbg !4084
  br label %cleanup150, !dbg !4085

if.else123:                                       ; preds = %if.end99
  br i1 %cmp107, label %if.then128, label %cleanup150, !dbg !4086

if.then128:                                       ; preds = %if.else123
  %u129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, !dbg !4087
  %arrayidx131 = bitcast %union.u* %u129 to i64*, !dbg !4087
  %22 = load i64, i64* %arrayidx131, align 8, !dbg !4087
  %add132 = add nsw i64 %22, %c.tr.ph18, !dbg !4089
  %call133 = tail call fastcc i32 @memrefs_conflict_p(i32 %xsize.tr.ph, %struct.rtx_def* %x.addr.2, i32 %ysize.tr.ph12, %struct.rtx_def* %15, i64 %add132) #7, !dbg !4090
  br label %cleanup150, !dbg !4091

if.else137:                                       ; preds = %if.then68
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 0, !dbg !4092
  %bf.load138 = load i32, i32* %23, align 8, !dbg !4092
  %bf.clear139 = and i32 %bf.load138, 65535, !dbg !4092
  %cmp140 = icmp eq i32 %bf.clear139, 30, !dbg !4092
  br i1 %cmp140, label %if.then142, label %cleanup150, !dbg !4094

if.then142:                                       ; preds = %if.else137
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, !dbg !4095
  %arrayidx145 = bitcast %union.u* %u143 to i64*, !dbg !4095
  %24 = load i64, i64* %arrayidx145, align 8, !dbg !4095
  %sub146 = sub nsw i64 %c.tr.ph18, %24, !dbg !4096
  %call147 = tail call fastcc i32 @memrefs_conflict_p(i32 %xsize.tr.ph, %struct.rtx_def* %11, i32 %ysize.tr.ph12, %struct.rtx_def* %y.addr.2, i64 %sub146) #7, !dbg !4097
  br label %cleanup150, !dbg !4098

cleanup150:                                       ; preds = %if.else137, %if.then92, %if.then97, %if.then109, %if.else117, %if.then128, %if.else123, %if.then142
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then142 ], [ false, %if.else123 ], [ false, %if.then128 ], [ false, %if.else117 ], [ false, %if.then109 ], [ false, %if.then97 ], [ false, %if.then92 ], [ true, %if.else137 ]
  %retval.1 = phi i32 [ %call147, %if.then142 ], [ -1, %if.else123 ], [ %call133, %if.then128 ], [ %call122, %if.else117 ], [ %call116, %if.then109 ], [ %call98, %if.then97 ], [ %call93, %if.then92 ], [ undef, %if.else137 ]
  br i1 %cleanup.dest.slot.1, label %cleanup150.if.end182_crit_edge, label %return.loopexit.loopexit.loopexit

cleanup150.if.end182_crit_edge:                   ; preds = %cleanup150
  %bf.load183.pre = load i32, i32* %10, align 8, !dbg !4099
  %bf.load185.pre = load i32, i32* %14, align 8, !dbg !4100
  br label %if.end182

if.else152:                                       ; preds = %if.end63
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2, i64 0, i32 0, !dbg !4101
  %bf.load153 = load i32, i32* %25, align 8, !dbg !4101
  %bf.clear154 = and i32 %bf.load153, 65535, !dbg !4101
  %cmp155 = icmp eq i32 %bf.clear154, 49, !dbg !4102
  br i1 %cmp155, label %if.then157, label %if.end182, !dbg !4103

if.then157:                                       ; preds = %if.else152
  %y.addr.2.lcssa117 = phi %struct.rtx_def* [ %y.addr.2, %if.else152 ], !dbg !4029
  %x.addr.2.lcssa110 = phi %struct.rtx_def* [ %x.addr.2, %if.else152 ], !dbg !4016
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa117, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa110, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa117, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa110, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa117, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa110, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* undef, metadata !3973, metadata !DIExpression()), !dbg !4104
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2.lcssa117, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4105
  %rt_rtx167 = bitcast %union.rtunion_def* %26 to %struct.rtx_def**, !dbg !4105
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx167, align 8, !dbg !4105
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !3976, metadata !DIExpression()), !dbg !4104
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 0, !dbg !4106
  %bf.load168 = load i32, i32* %28, align 8, !dbg !4106
  %bf.clear169 = and i32 %bf.load168, 65535, !dbg !4106
  %cmp170 = icmp eq i32 %bf.clear169, 30, !dbg !4106
  br i1 %cmp170, label %if.then172, label %return.loopexit.loopexit.loopexit19, !dbg !4108

if.then172:                                       ; preds = %if.then157
  %arrayidx161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2.lcssa117, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4109
  %rt_rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**, !dbg !4109
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx162, align 8, !dbg !4109
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !3973, metadata !DIExpression()), !dbg !4104
  %u173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, !dbg !4110
  %arrayidx175 = bitcast %union.u* %u173 to i64*, !dbg !4110
  %30 = load i64, i64* %arrayidx175, align 8, !dbg !4110
  %add176 = add nsw i64 %30, %c.tr.ph18, !dbg !4111
  br label %tailrecurse.outer15, !dbg !4112

if.end182:                                        ; preds = %cleanup150.if.end182_crit_edge, %if.else152
  %bf.load283 = phi i32 [ %bf.load185.pre, %cleanup150.if.end182_crit_edge ], [ %bf.load153, %if.else152 ], !dbg !4100
  %bf.load322 = phi i32 [ %bf.load183.pre, %cleanup150.if.end182_crit_edge ], [ %bf.load64, %if.else152 ], !dbg !4099
  %31 = xor i32 %bf.load322, %bf.load283, !dbg !4113
  %32 = and i32 %31, 65535, !dbg !4113
  %cmp187 = icmp eq i32 %32, 0, !dbg !4113
  br i1 %cmp187, label %if.then189, label %if.end182.if.end268_crit_edge, !dbg !4114

if.end182.if.end268_crit_edge:                    ; preds = %if.end182
  %.pre = and i32 %bf.load322, 65535, !dbg !4115
  br label %if.end268, !dbg !4114

if.then189:                                       ; preds = %if.end182
  %bf.clear191 = and i32 %bf.load322, 65535, !dbg !4116
  %cond = icmp eq i32 %bf.clear191, 52, !dbg !4117
  br i1 %cond, label %sw.bb, label %if.end268, !dbg !4117

sw.bb:                                            ; preds = %if.then189
  %ysize.tr.ph12.lcssa143 = phi i32 [ %ysize.tr.ph12, %if.then189 ]
  %c.tr.ph18.lcssa135 = phi i64 [ %c.tr.ph18, %if.then189 ]
  %y.addr.2.lcssa119 = phi %struct.rtx_def* [ %y.addr.2, %if.then189 ], !dbg !4029
  %x.addr.2.lcssa112 = phi %struct.rtx_def* [ %x.addr.2, %if.then189 ], !dbg !4016
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa119, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa112, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa119, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa112, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa119, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa112, metadata !3961, metadata !DIExpression()), !dbg !3992
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.2.lcssa112, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4118
  %rt_rtx198 = bitcast %union.rtunion_def* %33 to %struct.rtx_def**, !dbg !4118
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx198, align 8, !dbg !4118
  %call199 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %34) #7, !dbg !4119
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call199, metadata !3982, metadata !DIExpression()), !dbg !4120
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2.lcssa119, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4121
  %rt_rtx204 = bitcast %union.rtunion_def* %35 to %struct.rtx_def**, !dbg !4121
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx204, align 8, !dbg !4121
  %call205 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %36) #7, !dbg !4122
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call205, metadata !3983, metadata !DIExpression()), !dbg !4120
  %call206 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call199, %struct.rtx_def* %call205) #7, !dbg !4123
  %tobool207 = icmp eq i32 %call206, 0, !dbg !4123
  br i1 %tobool207, label %return.loopexit.loopexit20, label %if.end209, !dbg !4125

if.end209:                                        ; preds = %sw.bb
  %arrayidx212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.2.lcssa112, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4126
  %rt_rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**, !dbg !4126
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx213, align 8, !dbg !4126
  %call214 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %37) #7, !dbg !4127
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call214, metadata !3977, metadata !DIExpression()), !dbg !4120
  %arrayidx217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2.lcssa119, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4128
  %rt_rtx218 = bitcast %union.rtunion_def* %arrayidx217 to %struct.rtx_def**, !dbg !4128
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx218, align 8, !dbg !4128
  %call219 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %38) #7, !dbg !4129
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call219, metadata !3981, metadata !DIExpression()), !dbg !4120
  %call220 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call214, %struct.rtx_def* %call219) #7, !dbg !4130
  %tobool221 = icmp eq i32 %call220, 0, !dbg !4130
  br i1 %tobool221, label %if.end241, label %if.then222, !dbg !4132

if.then222:                                       ; preds = %if.end209
  %xsize.tr.ph.lcssa159 = phi i32 [ %xsize.tr.ph, %if.end209 ]
  %conv327.lcssa153 = phi i64 [ %conv327, %if.end209 ], !dbg !3987
  %ysize.tr.ph12.lcssa143.lcssa147 = phi i32 [ %ysize.tr.ph12.lcssa143, %if.end209 ]
  %c.tr.ph18.lcssa135.lcssa140 = phi i64 [ %c.tr.ph18.lcssa135, %if.end209 ]
  %cmp223 = icmp eq i32 %xsize.tr.ph.lcssa159, 0, !dbg !4133
  %cmp226 = icmp eq i32 %ysize.tr.ph12.lcssa143.lcssa147, 0, !dbg !4134
  %or.cond2 = or i1 %cmp223, %cmp226, !dbg !4135
  br i1 %or.cond2, label %lor.end, label %lor.lhs.false228, !dbg !4135

lor.lhs.false228:                                 ; preds = %if.then222
  %cmp229 = icmp sgt i64 %c.tr.ph18.lcssa135.lcssa140, -1, !dbg !4136
  %cmp233 = icmp slt i64 %c.tr.ph18.lcssa135.lcssa140, %conv327.lcssa153, !dbg !4137
  %or.cond3 = and i1 %cmp229, %cmp233, !dbg !4138
  br i1 %or.cond3, label %lor.end, label %lor.rhs, !dbg !4138

lor.rhs:                                          ; preds = %lor.lhs.false228
  %cmp235 = icmp slt i64 %c.tr.ph18.lcssa135.lcssa140, 0, !dbg !4139
  br i1 %cmp235, label %land.rhs, label %lor.end, !dbg !4140

land.rhs:                                         ; preds = %lor.rhs
  %conv237 = sext i32 %ysize.tr.ph12.lcssa143.lcssa147 to i64, !dbg !4141
  %add238 = add nsw i64 %c.tr.ph18.lcssa135.lcssa140, %conv237, !dbg !4142
  %cmp239 = icmp sgt i64 %add238, 0, !dbg !4143
  %phitmp9 = zext i1 %cmp239 to i32
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs, %lor.lhs.false228, %if.then222
  %39 = phi i32 [ 1, %if.then222 ], [ 1, %lor.lhs.false228 ], [ 0, %lor.rhs ], [ %phitmp9, %land.rhs ]
  br label %return, !dbg !4144

if.end241:                                        ; preds = %if.end209
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call199, i64 0, i32 0, !dbg !4145
  %bf.load242 = load i32, i32* %40, align 8, !dbg !4145
  %bf.clear243 = and i32 %bf.load242, 65535, !dbg !4145
  %cmp244 = icmp eq i32 %bf.clear243, 30, !dbg !4145
  br i1 %cmp244, label %if.end247, label %return.loopexit.loopexit20, !dbg !4147

if.end247:                                        ; preds = %if.end241
  %u248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call199, i64 0, i32 1, !dbg !4148
  %arrayidx250 = bitcast %union.u* %u248 to i64*, !dbg !4148
  %41 = load i64, i64* %arrayidx250, align 8, !dbg !4148
  %div = sdiv i64 %conv327, %41, !dbg !4149
  %conv252 = trunc i64 %div to i32, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %conv252, metadata !3960, metadata !DIExpression()), !dbg !3992
  %conv256 = sext i32 %ysize.tr.ph12.lcssa143 to i64, !dbg !4150
  %div257 = sdiv i64 %conv256, %41, !dbg !4150
  %conv258 = trunc i64 %div257 to i32, !dbg !4150
  call void @llvm.dbg.value(metadata i32 %conv258, metadata !3962, metadata !DIExpression()), !dbg !3992
  %div262 = sdiv i64 %c.tr.ph18.lcssa135, %41, !dbg !4151
  call void @llvm.dbg.value(metadata i64 %div262, metadata !3964, metadata !DIExpression()), !dbg !3992
  br label %tailrecurse.outer.backedge, !dbg !4152

if.end268:                                        ; preds = %if.end182.if.end268_crit_edge, %if.then189
  %bf.clear270.pre-phi = phi i32 [ %.pre, %if.end182.if.end268_crit_edge ], [ %bf.clear191, %if.then189 ], !dbg !4115
  %cmp271 = icmp eq i32 %bf.clear270.pre-phi, 61, !dbg !4153
  br i1 %cmp271, label %land.lhs.true273, label %if.end307, !dbg !4154

land.lhs.true273:                                 ; preds = %if.end268
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4155
  %43 = bitcast %union.rtunion_def* %42 to i32**, !dbg !4155
  %44 = load i32*, i32** %43, align 8, !dbg !4155
  %bf.load278 = load i32, i32* %44, align 8, !dbg !4155
  %bf.clear279 = and i32 %bf.load278, 65535, !dbg !4155
  %cmp280 = icmp eq i32 %bf.clear279, 30, !dbg !4155
  br i1 %cmp280, label %if.then282, label %if.end307, !dbg !4156

if.then282:                                       ; preds = %land.lhs.true273
  %ysize.tr.ph12.lcssa144 = phi i32 [ %ysize.tr.ph12, %land.lhs.true273 ]
  %c.tr.ph18.lcssa136 = phi i64 [ %c.tr.ph18, %land.lhs.true273 ]
  %bf.load283.lcssa124 = phi i32 [ %bf.load283, %land.lhs.true273 ], !dbg !4100
  %y.addr.2.lcssa120 = phi %struct.rtx_def* [ %y.addr.2, %land.lhs.true273 ], !dbg !4029
  %x.addr.2.lcssa113 = phi %struct.rtx_def* [ %x.addr.2, %land.lhs.true273 ], !dbg !4016
  %.lcssa = phi i32* [ %44, %land.lhs.true273 ], !dbg !4155
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa120, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa113, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa120, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa113, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa120, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa113, metadata !3961, metadata !DIExpression()), !dbg !3992
  %bf.clear284 = and i32 %bf.load283.lcssa124, 65535, !dbg !4157
  %cmp285 = icmp eq i32 %bf.clear284, 61, !dbg !4159
  br i1 %cmp285, label %if.then299, label %lor.lhs.false287, !dbg !4160

lor.lhs.false287:                                 ; preds = %if.then282
  %conv288 = sext i32 %ysize.tr.ph12.lcssa144 to i64, !dbg !4161
  %u293 = getelementptr inbounds i32, i32* %.lcssa, i64 2, !dbg !4162
  %arrayidx295 = bitcast i32* %u293 to i64*, !dbg !4162
  %45 = load i64, i64* %arrayidx295, align 8, !dbg !4162
  %sub296 = sub nsw i64 0, %45, !dbg !4163
  %cmp297 = icmp slt i64 %conv288, %sub296, !dbg !4164
  br i1 %cmp297, label %if.then299, label %if.end300, !dbg !4165

if.then299:                                       ; preds = %lor.lhs.false287, %if.then282
  call void @llvm.dbg.value(metadata i32 -1, metadata !3960, metadata !DIExpression()), !dbg !3992
  br label %if.end300, !dbg !4166

if.end300:                                        ; preds = %if.then299, %lor.lhs.false287
  %xsize.addr.0 = phi i32 [ -1, %if.then299 ], [ %xsize.tr.ph, %lor.lhs.false287 ]
  call void @llvm.dbg.value(metadata i32 %xsize.addr.0, metadata !3960, metadata !DIExpression()), !dbg !3992
  %arrayidx303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.2.lcssa113, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4167
  %rt_rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**, !dbg !4167
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx304, align 8, !dbg !4167
  %call305 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %46) #7, !dbg !4168
  br label %tailrecurse.outer.backedge, !dbg !3984

tailrecurse.outer.backedge:                       ; preds = %if.end300, %if.end247
  %xsize.tr.ph.be = phi i32 [ %conv252, %if.end247 ], [ %xsize.addr.0, %if.end300 ]
  %x.tr.ph.be = phi %struct.rtx_def* [ %call214, %if.end247 ], [ %call305, %if.end300 ]
  %ysize.tr.ph.be = phi i32 [ %conv258, %if.end247 ], [ %ysize.tr.ph12.lcssa144, %if.end300 ]
  %y.tr.ph.be = phi %struct.rtx_def* [ %call219, %if.end247 ], [ %y.addr.2.lcssa120, %if.end300 ]
  %c.tr.ph.be = phi i64 [ %div262, %if.end247 ], [ %c.tr.ph18.lcssa136, %if.end300 ]
  br label %tailrecurse.outer, !dbg !3991

if.end307:                                        ; preds = %land.lhs.true273, %if.end268
  %bf.clear309 = and i32 %bf.load283, 65535, !dbg !4169
  %cmp310 = icmp eq i32 %bf.clear309, 61, !dbg !4170
  br i1 %cmp310, label %land.lhs.true312, label %if.end346, !dbg !4171

land.lhs.true312:                                 ; preds = %if.end307
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4172
  %48 = bitcast %union.rtunion_def* %47 to i32**, !dbg !4172
  %49 = load i32*, i32** %48, align 8, !dbg !4172
  %bf.load317 = load i32, i32* %49, align 8, !dbg !4172
  %bf.clear318 = and i32 %bf.load317, 65535, !dbg !4172
  %cmp319 = icmp eq i32 %bf.clear318, 30, !dbg !4172
  br i1 %cmp319, label %if.then321, label %if.end346, !dbg !4173

if.then321:                                       ; preds = %land.lhs.true312
  %c.tr.ph18.lcssa137 = phi i64 [ %c.tr.ph18, %land.lhs.true312 ]
  %cmp271.lcssa128 = phi i1 [ %cmp271, %land.lhs.true312 ], !dbg !4153
  %y.addr.2.lcssa121 = phi %struct.rtx_def* [ %y.addr.2, %land.lhs.true312 ], !dbg !4029
  %x.addr.2.lcssa114 = phi %struct.rtx_def* [ %x.addr.2, %land.lhs.true312 ], !dbg !4016
  %.lcssa109 = phi i32* [ %49, %land.lhs.true312 ], !dbg !4172
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa121, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa114, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa121, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa114, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa121, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa114, metadata !3961, metadata !DIExpression()), !dbg !3992
  br i1 %cmp271.lcssa128, label %if.then338, label %lor.lhs.false326, !dbg !4174

lor.lhs.false326:                                 ; preds = %if.then321
  %u332 = getelementptr inbounds i32, i32* %.lcssa109, i64 2, !dbg !4175
  %arrayidx334 = bitcast i32* %u332 to i64*, !dbg !4175
  %50 = load i64, i64* %arrayidx334, align 8, !dbg !4175
  %sub335 = sub nsw i64 0, %50, !dbg !4176
  %cmp336 = icmp slt i64 %conv327, %sub335, !dbg !4177
  br i1 %cmp336, label %if.then338, label %if.end339, !dbg !4178

if.then338:                                       ; preds = %lor.lhs.false326, %if.then321
  call void @llvm.dbg.value(metadata i32 -1, metadata !3962, metadata !DIExpression()), !dbg !3992
  br label %if.end339, !dbg !4179

if.end339:                                        ; preds = %if.then338, %lor.lhs.false326
  %ysize.addr.0 = phi i32 [ -1, %if.then338 ], [ %ysize.tr.ph12, %lor.lhs.false326 ]
  call void @llvm.dbg.value(metadata i32 %ysize.addr.0, metadata !3962, metadata !DIExpression()), !dbg !3992
  %arrayidx342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2.lcssa121, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4180
  %rt_rtx343 = bitcast %union.rtunion_def* %arrayidx342 to %struct.rtx_def**, !dbg !4180
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx343, align 8, !dbg !4180
  %call344 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %51) #7, !dbg !4181
  br label %tailrecurse.outer10, !dbg !4182

if.end346:                                        ; preds = %land.lhs.true312, %if.end307
  %idxprom = zext i32 %bf.clear270.pre-phi to i64, !dbg !4183
  %arrayidx349 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4183
  %52 = load i32, i32* %arrayidx349, align 4, !dbg !4183
  %cmp350 = icmp eq i32 %52, 9, !dbg !4183
  br i1 %cmp350, label %if.then352, label %return.loopexit.loopexit.loopexit, !dbg !4185

if.then352:                                       ; preds = %if.end346
  %cmp355 = icmp eq i32 %bf.clear270.pre-phi, 30, !dbg !4186
  br i1 %cmp355, label %land.lhs.true357, label %if.end394, !dbg !4189

land.lhs.true357:                                 ; preds = %if.then352
  %cmp360 = icmp eq i32 %bf.clear309, 30, !dbg !4190
  br i1 %cmp360, label %if.then362, label %if.end394, !dbg !4191

if.then362:                                       ; preds = %land.lhs.true357
  %xsize.tr.ph.lcssa156 = phi i32 [ %xsize.tr.ph, %land.lhs.true357 ]
  %conv327.lcssa150 = phi i64 [ %conv327, %land.lhs.true357 ], !dbg !3987
  %ysize.tr.ph12.lcssa145 = phi i32 [ %ysize.tr.ph12, %land.lhs.true357 ]
  %c.tr.ph18.lcssa138 = phi i64 [ %c.tr.ph18, %land.lhs.true357 ]
  %y.addr.2.lcssa122 = phi %struct.rtx_def* [ %y.addr.2, %land.lhs.true357 ], !dbg !4029
  %x.addr.2.lcssa115 = phi %struct.rtx_def* [ %x.addr.2, %land.lhs.true357 ], !dbg !4016
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa122, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa115, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa122, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa115, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa122, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa115, metadata !3961, metadata !DIExpression()), !dbg !3992
  %u363 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2.lcssa122, i64 0, i32 1, !dbg !4192
  %arrayidx365 = bitcast %union.u* %u363 to i64*, !dbg !4192
  %53 = load i64, i64* %arrayidx365, align 8, !dbg !4192
  %u366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.2.lcssa115, i64 0, i32 1, !dbg !4194
  %arrayidx368 = bitcast %union.u* %u366 to i64*, !dbg !4194
  %54 = load i64, i64* %arrayidx368, align 8, !dbg !4194
  %sub369 = sub nsw i64 %53, %54, !dbg !4195
  %add370 = add nsw i64 %sub369, %c.tr.ph18.lcssa138, !dbg !4196
  call void @llvm.dbg.value(metadata i64 %add370, metadata !3964, metadata !DIExpression()), !dbg !3992
  %cmp371 = icmp slt i32 %xsize.tr.ph.lcssa156, 1, !dbg !4197
  %cmp374 = icmp slt i32 %ysize.tr.ph12.lcssa145, 1, !dbg !4198
  %or.cond4 = or i1 %cmp371, %cmp374, !dbg !4199
  br i1 %or.cond4, label %lor.end392, label %lor.lhs.false376, !dbg !4199

lor.lhs.false376:                                 ; preds = %if.then362
  %cmp377 = icmp sgt i64 %add370, -1, !dbg !4200
  %cmp381 = icmp slt i64 %add370, %conv327.lcssa150, !dbg !4201
  %or.cond5 = and i1 %cmp377, %cmp381, !dbg !4202
  br i1 %or.cond5, label %lor.end392, label %lor.rhs383, !dbg !4202

lor.rhs383:                                       ; preds = %lor.lhs.false376
  %cmp384 = icmp slt i64 %add370, 0, !dbg !4203
  br i1 %cmp384, label %land.rhs386, label %lor.end392, !dbg !4204

land.rhs386:                                      ; preds = %lor.rhs383
  %conv387 = sext i32 %ysize.tr.ph12.lcssa145 to i64, !dbg !4205
  %add388 = add nsw i64 %add370, %conv387, !dbg !4206
  %cmp389 = icmp sgt i64 %add388, 0, !dbg !4207
  %phitmp8 = zext i1 %cmp389 to i32
  br label %lor.end392

lor.end392:                                       ; preds = %lor.rhs383, %land.rhs386, %lor.lhs.false376, %if.then362
  %55 = phi i32 [ 1, %if.then362 ], [ 1, %lor.lhs.false376 ], [ 0, %lor.rhs383 ], [ %phitmp8, %land.rhs386 ]
  br label %return, !dbg !4208

if.end394:                                        ; preds = %land.lhs.true357, %if.then352
  %cmp397 = icmp eq i32 %bf.clear270.pre-phi, 35, !dbg !4209
  %cmp402 = icmp eq i32 %bf.clear309, 35, !dbg !4211
  br i1 %cmp397, label %if.then399, label %if.end423, !dbg !4212

if.then399:                                       ; preds = %if.end394
  %arrayidx407 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.addr.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4213
  %rt_rtx408 = bitcast %union.rtunion_def* %arrayidx407 to %struct.rtx_def**, !dbg !4213
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx408, align 8, !dbg !4213
  %call409 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %56) #7, !dbg !4213
  br i1 %cmp402, label %if.then404, label %if.else416, !dbg !4216

if.then404:                                       ; preds = %if.then399
  %arrayidx412 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4217
  %rt_rtx413 = bitcast %union.rtunion_def* %arrayidx412 to %struct.rtx_def**, !dbg !4217
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx413, align 8, !dbg !4217
  %call414 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %57) #7, !dbg !4218
  br label %tailrecurse.backedge, !dbg !4219

tailrecurse.backedge:                             ; preds = %if.then404, %if.else416, %if.then428
  %x.tr.be = phi %struct.rtx_def* [ %call409, %if.then404 ], [ %call409, %if.else416 ], [ %x.addr.2, %if.then428 ]
  %y.tr.be = phi %struct.rtx_def* [ %call414, %if.then404 ], [ %y.addr.2, %if.else416 ], [ %call433, %if.then428 ]
  br label %tailrecurse, !dbg !3992

if.else416:                                       ; preds = %if.then399
  br label %tailrecurse.backedge, !dbg !4220

if.end423:                                        ; preds = %if.end394
  br i1 %cmp402, label %if.then428, label %if.end435, !dbg !4221

if.then428:                                       ; preds = %if.end423
  %arrayidx431 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.addr.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4222
  %rt_rtx432 = bitcast %union.rtunion_def* %arrayidx431 to %struct.rtx_def**, !dbg !4222
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx432, align 8, !dbg !4222
  %call433 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %58) #7, !dbg !4224
  br label %tailrecurse.backedge, !dbg !4225

if.end435:                                        ; preds = %if.end423
  %xsize.tr.ph.lcssa157 = phi i32 [ %xsize.tr.ph, %if.end423 ]
  %conv327.lcssa151 = phi i64 [ %conv327, %if.end423 ], !dbg !3987
  %ysize.tr.ph12.lcssa146 = phi i32 [ %ysize.tr.ph12, %if.end423 ]
  %c.tr.ph18.lcssa139 = phi i64 [ %c.tr.ph18, %if.end423 ]
  %bf.clear309.lcssa132 = phi i32 [ %bf.clear309, %if.end423 ], !dbg !4169
  %y.addr.2.lcssa123 = phi %struct.rtx_def* [ %y.addr.2, %if.end423 ], !dbg !4029
  %x.addr.2.lcssa116 = phi %struct.rtx_def* [ %x.addr.2, %if.end423 ], !dbg !4016
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa123, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa116, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa123, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa116, metadata !3961, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.addr.2.lcssa123, metadata !3963, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.addr.2.lcssa116, metadata !3961, metadata !DIExpression()), !dbg !3992
  %idxprom438 = zext i32 %bf.clear309.lcssa132 to i64, !dbg !4226
  %arrayidx439 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom438, !dbg !4226
  %59 = load i32, i32* %arrayidx439, align 4, !dbg !4226
  %cmp440 = icmp eq i32 %59, 9, !dbg !4226
  br i1 %cmp440, label %if.then442, label %return, !dbg !4228

if.then442:                                       ; preds = %if.end435
  %cmp443 = icmp slt i32 %xsize.tr.ph.lcssa157, 1, !dbg !4229
  %cmp446 = icmp slt i32 %ysize.tr.ph12.lcssa146, 1, !dbg !4230
  %or.cond6 = or i1 %cmp443, %cmp446, !dbg !4231
  br i1 %or.cond6, label %lor.end470, label %lor.rhs448, !dbg !4231

lor.rhs448:                                       ; preds = %if.then442
  %call449 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %x.addr.2.lcssa116, %struct.rtx_def* %y.addr.2.lcssa123) #7, !dbg !4232
  %tobool450 = icmp eq i32 %call449, 0, !dbg !4232
  br i1 %tobool450, label %lor.end470, label %land.rhs451, !dbg !4233

land.rhs451:                                      ; preds = %lor.rhs448
  %cmp452 = icmp sgt i64 %c.tr.ph18.lcssa139, -1, !dbg !4234
  %cmp456 = icmp slt i64 %c.tr.ph18.lcssa139, %conv327.lcssa151, !dbg !4235
  %or.cond7 = and i1 %cmp452, %cmp456, !dbg !4236
  br i1 %or.cond7, label %lor.end470, label %lor.rhs458, !dbg !4236

lor.rhs458:                                       ; preds = %land.rhs451
  %cmp459 = icmp slt i64 %c.tr.ph18.lcssa139, 0, !dbg !4237
  br i1 %cmp459, label %land.rhs461, label %lor.end470, !dbg !4238

land.rhs461:                                      ; preds = %lor.rhs458
  %conv462 = sext i32 %ysize.tr.ph12.lcssa146 to i64, !dbg !4239
  %add463 = add nsw i64 %c.tr.ph18.lcssa139, %conv462, !dbg !4240
  %cmp464 = icmp sgt i64 %add463, 0, !dbg !4241
  %phitmp = zext i1 %cmp464 to i32
  br label %lor.end470

lor.end470:                                       ; preds = %lor.rhs448, %lor.rhs458, %land.rhs461, %land.rhs451, %if.then442
  %60 = phi i32 [ 1, %if.then442 ], [ 0, %lor.rhs448 ], [ 1, %land.rhs451 ], [ 0, %lor.rhs458 ], [ %phitmp, %land.rhs461 ]
  br label %return, !dbg !4242

return.loopexit.loopexit.loopexit:                ; preds = %cleanup150, %if.end346
  %retval.4.ph.ph.ph = phi i32 [ -1, %if.end346 ], [ %retval.1, %cleanup150 ]
  br label %return.loopexit.loopexit, !dbg !4243

return.loopexit.loopexit.loopexit19:              ; preds = %if.then157
  br label %return.loopexit.loopexit, !dbg !4243

return.loopexit.loopexit:                         ; preds = %return.loopexit.loopexit.loopexit19, %return.loopexit.loopexit.loopexit
  %retval.4.ph.ph = phi i32 [ %retval.4.ph.ph.ph, %return.loopexit.loopexit.loopexit ], [ -1, %return.loopexit.loopexit.loopexit19 ]
  br label %return.loopexit, !dbg !4243

return.loopexit.loopexit20:                       ; preds = %sw.bb, %if.end241
  br label %return.loopexit, !dbg !4243

return.loopexit:                                  ; preds = %return.loopexit.loopexit20, %return.loopexit.loopexit
  %retval.4.ph = phi i32 [ %retval.4.ph.ph, %return.loopexit.loopexit ], [ -1, %return.loopexit.loopexit20 ]
  br label %return, !dbg !4243

return:                                           ; preds = %return.loopexit, %if.end435, %lor.end, %land.lhs.true57, %if.end49, %if.then45, %lor.end470, %lor.end392, %if.end62
  %retval.4 = phi i32 [ 0, %if.end62 ], [ %55, %lor.end392 ], [ %60, %lor.end470 ], [ 1, %if.then45 ], [ 1, %if.end49 ], [ 1, %land.lhs.true57 ], [ %39, %lor.end ], [ -1, %if.end435 ], [ %retval.4.ph, %return.loopexit ], !dbg !3992
  ret i32 %retval.4, !dbg !4243
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @mems_in_disjoint_alias_sets_p(%struct.rtx_def* %mem1, %struct.rtx_def* %mem2) unnamed_addr #0 !dbg !4244 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem1, metadata !4246, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem2, metadata !4247, metadata !DIExpression()), !dbg !4248
  %0 = load i32, i32* @flag_strict_aliasing, align 4, !dbg !4249
  %tobool = icmp eq i32 %0, 0, !dbg !4249
  br i1 %tobool, label %lor.lhs.false, label %entry.cond.end_crit_edge, !dbg !4249

entry.cond.end_crit_edge:                         ; preds = %entry
  br label %cond.end, !dbg !4249

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4249
  %rt_mem = bitcast %union.rtunion_def* %1 to %struct.mem_attrs**, !dbg !4249
  %2 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4249
  %cmp = icmp eq %struct.mem_attrs* %2, null, !dbg !4249
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !4249

cond.false:                                       ; preds = %lor.lhs.false
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 3, !dbg !4249
  %3 = load i32, i32* %alias, align 8, !dbg !4249
  %tobool5 = icmp eq i32 %3, 0, !dbg !4249
  br i1 %tobool5, label %land.lhs.true, label %cond.true19, !dbg !4249

land.lhs.true:                                    ; preds = %cond.false, %lor.lhs.false
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4249
  %rt_mem9 = bitcast %union.rtunion_def* %4 to %struct.mem_attrs**, !dbg !4249
  %5 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem9, align 8, !dbg !4249
  %cmp10 = icmp eq %struct.mem_attrs* %5, null, !dbg !4249
  br i1 %cmp10, label %cond.end, label %cond.false12, !dbg !4249

cond.false12:                                     ; preds = %land.lhs.true
  %alias17 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %5, i64 0, i32 3, !dbg !4249
  %6 = load i32, i32* %alias17, align 8, !dbg !4249
  %tobool18 = icmp eq i32 %6, 0, !dbg !4249
  br i1 %tobool18, label %cond.end, label %cond.true19, !dbg !4249

cond.true19:                                      ; preds = %cond.false12, %cond.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 379, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4249
  br label %cond.end, !dbg !4249

cond.end:                                         ; preds = %entry.cond.end_crit_edge, %cond.false12, %land.lhs.true, %cond.true19
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4250
  %rt_mem24 = bitcast %union.rtunion_def* %7 to %struct.mem_attrs**, !dbg !4250
  %8 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem24, align 8, !dbg !4250
  %cmp25 = icmp eq %struct.mem_attrs* %8, null, !dbg !4250
  br i1 %cmp25, label %cond.end33, label %cond.false27, !dbg !4250

cond.false27:                                     ; preds = %cond.end
  %alias32 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i64 0, i32 3, !dbg !4250
  %9 = load i32, i32* %alias32, align 8, !dbg !4250
  br label %cond.end33, !dbg !4250

cond.end33:                                       ; preds = %cond.end, %cond.false27
  %cond34 = phi i32 [ %9, %cond.false27 ], [ 0, %cond.end ], !dbg !4250
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4251
  %rt_mem38 = bitcast %union.rtunion_def* %10 to %struct.mem_attrs**, !dbg !4251
  %11 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem38, align 8, !dbg !4251
  %cmp39 = icmp eq %struct.mem_attrs* %11, null, !dbg !4251
  br i1 %cmp39, label %cond.end47, label %cond.false41, !dbg !4251

cond.false41:                                     ; preds = %cond.end33
  %alias46 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %11, i64 0, i32 3, !dbg !4251
  %12 = load i32, i32* %alias46, align 8, !dbg !4251
  br label %cond.end47, !dbg !4251

cond.end47:                                       ; preds = %cond.end33, %cond.false41
  %cond48 = phi i32 [ %12, %cond.false41 ], [ 0, %cond.end33 ], !dbg !4251
  %call = tail call i32 @alias_sets_conflict_p(i32 %cond34, i32 %cond48) #7, !dbg !4252
  %tobool49 = icmp eq i32 %call, 0, !dbg !4253
  %lnot.ext = zext i1 %tobool49 to i32, !dbg !4253
  ret i32 %lnot.ext, !dbg !4254
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @aliases_everything_p(%struct.rtx_def* %mem) unnamed_addr #4 !dbg !4255 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4259, metadata !DIExpression()), !dbg !4260
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4261
  %0 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4261
  %1 = load i32*, i32** %0, align 8, !dbg !4261
  %bf.load = load i32, i32* %1, align 8, !dbg !4261
  %bf.clear = and i32 %bf.load, 65535, !dbg !4261
  %cmp = icmp eq i32 %bf.clear, 61, !dbg !4263
  %. = zext i1 %cmp to i32, !dbg !4260
  ret i32 %., !dbg !4264
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @fixed_scalar_and_varying_struct_p(%struct.rtx_def* %mem1, %struct.rtx_def* %mem2, %struct.rtx_def* %mem1_addr, %struct.rtx_def* %mem2_addr, i8 (%struct.rtx_def*, i8)* %varies_p) unnamed_addr #4 !dbg !4265 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem1, metadata !4269, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem2, metadata !4270, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem1_addr, metadata !4271, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem2_addr, metadata !4272, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i8 (%struct.rtx_def*, i8)* %varies_p, metadata !4273, metadata !DIExpression()), !dbg !4274
  %0 = load i32, i32* @flag_strict_aliasing, align 4, !dbg !4275
  %tobool = icmp eq i32 %0, 0, !dbg !4275
  br i1 %tobool, label %return, label %if.end, !dbg !4277

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4278
  %rt_mem = bitcast %union.rtunion_def* %1 to %struct.mem_attrs**, !dbg !4278
  %2 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4278
  %cmp = icmp eq %struct.mem_attrs* %2, null, !dbg !4278
  br i1 %cmp, label %if.end17, label %cond.false, !dbg !4280

cond.false:                                       ; preds = %if.end
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %2, i64 0, i32 3, !dbg !4278
  %3 = load i32, i32* %alias, align 8, !dbg !4278
  %tobool5 = icmp eq i32 %3, 0, !dbg !4278
  br i1 %tobool5, label %if.end17, label %land.lhs.true, !dbg !4280

land.lhs.true:                                    ; preds = %cond.false
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem1, i64 0, i32 0, !dbg !4281
  %bf.load = load i32, i32* %4, align 8, !dbg !4281
  %tobool6 = icmp slt i32 %bf.load, 0, !dbg !4281
  br i1 %tobool6, label %land.lhs.true7, label %if.end17, !dbg !4282

land.lhs.true7:                                   ; preds = %land.lhs.true
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem2, i64 0, i32 0, !dbg !4283
  %bf.load8 = load i32, i32* %5, align 8, !dbg !4283
  %bf.clear = and i32 %bf.load8, 268435456, !dbg !4283
  %tobool10 = icmp eq i32 %bf.clear, 0, !dbg !4283
  br i1 %tobool10, label %if.end17, label %land.lhs.true11, !dbg !4284

land.lhs.true11:                                  ; preds = %land.lhs.true7
  %call = tail call zeroext i8 %varies_p(%struct.rtx_def* %mem1_addr, i8 zeroext 1) #6, !dbg !4285
  %tobool12 = icmp eq i8 %call, 0, !dbg !4285
  br i1 %tobool12, label %land.lhs.true13, label %if.end17, !dbg !4286

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %call14 = tail call zeroext i8 %varies_p(%struct.rtx_def* %mem2_addr, i8 zeroext 1) #6, !dbg !4287
  %tobool15 = icmp eq i8 %call14, 0, !dbg !4287
  br i1 %tobool15, label %if.end17, label %return, !dbg !4288

if.end17:                                         ; preds = %land.lhs.true13, %land.lhs.true11, %land.lhs.true7, %cond.false, %if.end, %land.lhs.true
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4289
  %rt_mem21 = bitcast %union.rtunion_def* %6 to %struct.mem_attrs**, !dbg !4289
  %7 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem21, align 8, !dbg !4289
  %cmp22 = icmp eq %struct.mem_attrs* %7, null, !dbg !4289
  br i1 %cmp22, label %if.end49, label %cond.false25, !dbg !4291

cond.false25:                                     ; preds = %if.end17
  %alias30 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 3, !dbg !4289
  %8 = load i32, i32* %alias30, align 8, !dbg !4289
  %tobool31 = icmp eq i32 %8, 0, !dbg !4289
  br i1 %tobool31, label %if.end49, label %land.lhs.true32, !dbg !4291

land.lhs.true32:                                  ; preds = %cond.false25
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem1, i64 0, i32 0, !dbg !4292
  %bf.load33 = load i32, i32* %9, align 8, !dbg !4292
  %bf.clear35 = and i32 %bf.load33, 268435456, !dbg !4292
  %tobool36 = icmp eq i32 %bf.clear35, 0, !dbg !4292
  br i1 %tobool36, label %if.end49, label %land.lhs.true37, !dbg !4293

land.lhs.true37:                                  ; preds = %land.lhs.true32
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem2, i64 0, i32 0, !dbg !4294
  %bf.load38 = load i32, i32* %10, align 8, !dbg !4294
  %tobool40 = icmp slt i32 %bf.load38, 0, !dbg !4294
  br i1 %tobool40, label %land.lhs.true41, label %if.end49, !dbg !4295

land.lhs.true41:                                  ; preds = %land.lhs.true37
  %call42 = tail call zeroext i8 %varies_p(%struct.rtx_def* %mem1_addr, i8 zeroext 1) #6, !dbg !4296
  %tobool44 = icmp eq i8 %call42, 0, !dbg !4296
  br i1 %tobool44, label %if.end49, label %land.lhs.true45, !dbg !4297

land.lhs.true45:                                  ; preds = %land.lhs.true41
  %call46 = tail call zeroext i8 %varies_p(%struct.rtx_def* %mem2_addr, i8 zeroext 1) #6, !dbg !4298
  %tobool47 = icmp eq i8 %call46, 0, !dbg !4298
  br i1 %tobool47, label %return, label %if.end49, !dbg !4299

if.end49:                                         ; preds = %land.lhs.true45, %land.lhs.true41, %land.lhs.true32, %cond.false25, %if.end17, %land.lhs.true37
  br label %return, !dbg !4300

return:                                           ; preds = %land.lhs.true13, %land.lhs.true45, %entry, %if.end49
  %retval.0 = phi %struct.rtx_def* [ null, %if.end49 ], [ null, %entry ], [ %mem1, %land.lhs.true13 ], [ %mem2, %land.lhs.true45 ], !dbg !4274
  ret %struct.rtx_def* %retval.0, !dbg !4301
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @rtx_refs_may_alias_p(%struct.rtx_def* %x, %struct.rtx_def* %mem, i8 zeroext %tbaa_p) unnamed_addr #4 !dbg !4302 {
entry:
  %ref1 = alloca %struct.ao_ref_s, align 8
  %ref2 = alloca %struct.ao_ref_s, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4306, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4307, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i8 %tbaa_p, metadata !4308, metadata !DIExpression()), !dbg !4321
  %0 = bitcast %struct.ao_ref_s* %ref1 to i8*, !dbg !4322
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %0) #8, !dbg !4322
  %1 = bitcast %struct.ao_ref_s* %ref2 to i8*, !dbg !4322
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1) #8, !dbg !4322
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref1, metadata !4309, metadata !DIExpression(DW_OP_deref)), !dbg !4321
  %call = call fastcc zeroext i8 @ao_ref_from_mem(%struct.ao_ref_s* nonnull %ref1, %struct.rtx_def* %x) #7, !dbg !4323
  %tobool = icmp eq i8 %call, 0, !dbg !4323
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !4325

lor.lhs.false:                                    ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref2, metadata !4320, metadata !DIExpression(DW_OP_deref)), !dbg !4321
  %call1 = call fastcc zeroext i8 @ao_ref_from_mem(%struct.ao_ref_s* nonnull %ref2, %struct.rtx_def* %mem) #7, !dbg !4326
  %tobool2 = icmp eq i8 %call1, 0, !dbg !4326
  br i1 %tobool2, label %cleanup, label %if.end, !dbg !4327

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref1, metadata !4309, metadata !DIExpression(DW_OP_deref)), !dbg !4321
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref2, metadata !4320, metadata !DIExpression(DW_OP_deref)), !dbg !4321
  %call3 = call zeroext i8 @refs_may_alias_p_1(%struct.ao_ref_s* nonnull %ref1, %struct.ao_ref_s* nonnull %ref2, i8 zeroext %tbaa_p) #6, !dbg !4328
  br label %cleanup, !dbg !4329

cleanup:                                          ; preds = %lor.lhs.false, %entry, %if.end
  %retval.0 = phi i8 [ %call3, %if.end ], [ 1, %lor.lhs.false ], [ 1, %entry ], !dbg !4321
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1) #8, !dbg !4330
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #8, !dbg !4330
  ret i8 %retval.0, !dbg !4330
}

; Function Attrs: nounwind uwtable
define dso_local i32 @canon_true_dependence(%struct.rtx_def* %mem, i32 %mem_mode, %struct.rtx_def* %mem_addr, %struct.rtx_def* %x, %struct.rtx_def* %x_addr, i8 (%struct.rtx_def*, i8)* %varies) local_unnamed_addr #4 !dbg !4331 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4335, metadata !DIExpression()), !dbg !4342
  call void @llvm.dbg.value(metadata i32 %mem_mode, metadata !4336, metadata !DIExpression()), !dbg !4342
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem_addr, metadata !4337, metadata !DIExpression()), !dbg !4342
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4338, metadata !DIExpression()), !dbg !4342
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x_addr, metadata !4339, metadata !DIExpression()), !dbg !4342
  call void @llvm.dbg.value(metadata i8 (%struct.rtx_def*, i8)* %varies, metadata !4340, metadata !DIExpression()), !dbg !4342
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4343
  %bf.load = load i32, i32* %0, align 8, !dbg !4343
  %bf.clear = and i32 %bf.load, 134217728, !dbg !4343
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !4343
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4345

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4346
  %bf.load1 = load i32, i32* %1, align 8, !dbg !4346
  %bf.clear3 = and i32 %bf.load1, 134217728, !dbg !4346
  %tobool4 = icmp eq i32 %bf.clear3, 0, !dbg !4346
  br i1 %tobool4, label %if.end, label %cleanup, !dbg !4347

if.end:                                           ; preds = %land.lhs.true, %entry
  %bf.clear7 = and i32 %bf.load, 16711680, !dbg !4348
  %cmp = icmp eq i32 %bf.clear7, 65536, !dbg !4350
  br i1 %cmp, label %land.lhs.true8, label %if.end13, !dbg !4351

land.lhs.true8:                                   ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4352
  %2 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4352
  %3 = load i32*, i32** %2, align 8, !dbg !4352
  %bf.load9 = load i32, i32* %3, align 8, !dbg !4352
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !4352
  %cmp11 = icmp eq i32 %bf.clear10, 38, !dbg !4353
  br i1 %cmp11, label %cleanup, label %if.end13, !dbg !4354

if.end13:                                         ; preds = %land.lhs.true8, %if.end
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4355
  %bf.load14 = load i32, i32* %4, align 8, !dbg !4355
  %bf.clear16 = and i32 %bf.load14, 16711680, !dbg !4355
  %cmp17 = icmp eq i32 %bf.clear16, 65536, !dbg !4357
  br i1 %cmp17, label %land.lhs.true18, label %if.end27, !dbg !4358

land.lhs.true18:                                  ; preds = %if.end13
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4359
  %5 = bitcast %union.rtunion_def* %arrayidx21 to i32**, !dbg !4359
  %6 = load i32*, i32** %5, align 8, !dbg !4359
  %bf.load23 = load i32, i32* %6, align 8, !dbg !4359
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !4359
  %cmp25 = icmp eq i32 %bf.clear24, 38, !dbg !4360
  br i1 %cmp25, label %cleanup, label %if.end27, !dbg !4361

if.end27:                                         ; preds = %land.lhs.true18, %if.end13
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4362
  %rt_mem = bitcast %union.rtunion_def* %7 to %struct.mem_attrs**, !dbg !4362
  %8 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4362
  %cmp31 = icmp eq %struct.mem_attrs* %8, null, !dbg !4362
  br i1 %cmp31, label %cond.end, label %cond.false, !dbg !4362

cond.false:                                       ; preds = %if.end27
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i64 0, i32 3, !dbg !4362
  %9 = load i32, i32* %alias, align 8, !dbg !4362
  %phitmp = icmp eq i32 %9, -1, !dbg !4362
  br label %cond.end, !dbg !4362

cond.end:                                         ; preds = %if.end27, %cond.false
  %cond = phi i1 [ %phitmp, %cond.false ], [ false, %if.end27 ]
  br i1 %cond, label %cleanup, label %lor.lhs.false, !dbg !4364

lor.lhs.false:                                    ; preds = %cond.end
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4365
  %rt_mem40 = bitcast %union.rtunion_def* %10 to %struct.mem_attrs**, !dbg !4365
  %11 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem40, align 8, !dbg !4365
  %cmp41 = icmp eq %struct.mem_attrs* %11, null, !dbg !4365
  br i1 %cmp41, label %cond.end49, label %cond.false43, !dbg !4365

cond.false43:                                     ; preds = %lor.lhs.false
  %alias48 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %11, i64 0, i32 3, !dbg !4365
  %12 = load i32, i32* %alias48, align 8, !dbg !4365
  %phitmp2 = icmp eq i32 %12, -1, !dbg !4365
  br label %cond.end49, !dbg !4365

cond.end49:                                       ; preds = %lor.lhs.false, %cond.false43
  %cond50 = phi i1 [ %phitmp2, %cond.false43 ], [ false, %lor.lhs.false ]
  br i1 %cond50, label %cleanup, label %if.end53, !dbg !4366

if.end53:                                         ; preds = %cond.end49
  %bf.clear56 = and i32 %bf.load, 67108864, !dbg !4367
  %tobool57 = icmp eq i32 %bf.clear56, 0, !dbg !4367
  br i1 %tobool57, label %if.end59, label %cleanup, !dbg !4369

if.end59:                                         ; preds = %if.end53
  br i1 %cmp41, label %cond.end71, label %cond.false66, !dbg !4370

cond.false66:                                     ; preds = %if.end59
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %11, i64 0, i32 5, !dbg !4370
  %13 = load i8, i8* %addrspace, align 8, !dbg !4370
  %conv = zext i8 %13 to i32, !dbg !4370
  br label %cond.end71, !dbg !4370

cond.end71:                                       ; preds = %if.end59, %cond.false66
  %cond72 = phi i32 [ %conv, %cond.false66 ], [ 0, %if.end59 ], !dbg !4370
  br i1 %cmp31, label %cond.end87, label %cond.false80, !dbg !4372

cond.false80:                                     ; preds = %cond.end71
  %addrspace85 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i64 0, i32 5, !dbg !4372
  %14 = load i8, i8* %addrspace85, align 8, !dbg !4372
  %conv86 = zext i8 %14 to i32, !dbg !4372
  br label %cond.end87, !dbg !4372

cond.end87:                                       ; preds = %cond.end71, %cond.false80
  %cond88 = phi i32 [ %conv86, %cond.false80 ], [ 0, %cond.end71 ], !dbg !4372
  %cmp89 = icmp eq i32 %cond72, %cond88, !dbg !4373
  br i1 %cmp89, label %if.end92, label %cleanup, !dbg !4374

if.end92:                                         ; preds = %cond.end87
  %tobool93 = icmp eq %struct.rtx_def* %x_addr, null, !dbg !4375
  br i1 %tobool93, label %if.then94, label %if.end99, !dbg !4377

if.then94:                                        ; preds = %if.end92
  %arrayidx97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4378
  %rt_rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**, !dbg !4378
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx98, align 8, !dbg !4378
  %call = tail call %struct.rtx_def* @get_addr(%struct.rtx_def* %15) #7, !dbg !4379
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4339, metadata !DIExpression()), !dbg !4342
  %bf.load100.pre = load i32, i32* %0, align 8, !dbg !4380
  br label %if.end99, !dbg !4382

if.end99:                                         ; preds = %if.end92, %if.then94
  %bf.load100 = phi i32 [ %bf.load, %if.end92 ], [ %bf.load100.pre, %if.then94 ], !dbg !4380
  %x_addr.addr.0 = phi %struct.rtx_def* [ %x_addr, %if.end92 ], [ %call, %if.then94 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x_addr.addr.0, metadata !4339, metadata !DIExpression()), !dbg !4342
  %bf.lshr101 = lshr i32 %bf.load100, 16, !dbg !4380
  %bf.clear102 = and i32 %bf.lshr101, 255, !dbg !4380
  %call103 = tail call fastcc i32 @base_alias_check(%struct.rtx_def* %x_addr.addr.0, %struct.rtx_def* %mem_addr, i32 %bf.clear102, i32 %mem_mode) #7, !dbg !4383
  %tobool104 = icmp eq i32 %call103, 0, !dbg !4383
  br i1 %tobool104, label %cleanup, label %if.end106, !dbg !4384

if.end106:                                        ; preds = %if.end99
  %call107 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %x_addr.addr.0) #7, !dbg !4385
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call107, metadata !4339, metadata !DIExpression()), !dbg !4342
  %idxprom = zext i32 %mem_mode to i64, !dbg !4386
  %arrayidx108 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4386
  %16 = load i8, i8* %arrayidx108, align 1, !dbg !4386
  %conv110 = zext i8 %16 to i32, !dbg !4386
  %bf.load111 = load i32, i32* %0, align 8, !dbg !4388
  %bf.lshr112 = lshr i32 %bf.load111, 16, !dbg !4388
  %bf.clear113 = and i32 %bf.lshr112, 255, !dbg !4388
  %idxprom114 = zext i32 %bf.clear113 to i64, !dbg !4388
  %arrayidx115 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom114, !dbg !4388
  %17 = load i8, i8* %arrayidx115, align 1, !dbg !4388
  %conv117 = zext i8 %17 to i32, !dbg !4388
  %call118 = tail call fastcc i32 @memrefs_conflict_p(i32 %conv110, %struct.rtx_def* %mem_addr, i32 %conv117, %struct.rtx_def* %call107, i64 0) #7, !dbg !4389
  call void @llvm.dbg.value(metadata i32 %call118, metadata !4341, metadata !DIExpression()), !dbg !4342
  %cmp119 = icmp eq i32 %call118, -1, !dbg !4390
  br i1 %cmp119, label %if.end122, label %cleanup, !dbg !4391

if.end122:                                        ; preds = %if.end106
  %call123 = tail call fastcc i32 @mems_in_disjoint_alias_sets_p(%struct.rtx_def* %x, %struct.rtx_def* %mem) #7, !dbg !4392
  %tobool124 = icmp eq i32 %call123, 0, !dbg !4392
  br i1 %tobool124, label %if.end126, label %cleanup, !dbg !4394

if.end126:                                        ; preds = %if.end122
  %call127 = tail call i32 @nonoverlapping_memrefs_p(%struct.rtx_def* %x, %struct.rtx_def* %mem) #7, !dbg !4395
  %tobool128 = icmp eq i32 %call127, 0, !dbg !4395
  br i1 %tobool128, label %if.end130, label %cleanup, !dbg !4397

if.end130:                                        ; preds = %if.end126
  %call131 = tail call fastcc i32 @aliases_everything_p(%struct.rtx_def* %x) #7, !dbg !4398
  %tobool132 = icmp ne i32 %call131, 0, !dbg !4398
  %cmp135 = icmp eq i32 %mem_mode, 14, !dbg !4400
  %or.cond = or i1 %tobool132, %cmp135, !dbg !4402
  br i1 %or.cond, label %cleanup, label %lor.lhs.false137, !dbg !4402

lor.lhs.false137:                                 ; preds = %if.end130
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem_addr, i64 0, i32 0, !dbg !4403
  %bf.load138 = load i32, i32* %18, align 8, !dbg !4403
  %bf.clear139 = and i32 %bf.load138, 65535, !dbg !4403
  %cmp140 = icmp eq i32 %bf.clear139, 61, !dbg !4404
  %cmp144 = icmp eq i32 %mem_mode, 1, !dbg !4405
  %or.cond1 = or i1 %cmp140, %cmp144, !dbg !4407
  br i1 %or.cond1, label %cleanup, label %lor.lhs.false146, !dbg !4407

lor.lhs.false146:                                 ; preds = %lor.lhs.false137
  %bf.load147 = load i32, i32* %0, align 8, !dbg !4408
  %bf.clear149 = and i32 %bf.load147, 16711680, !dbg !4408
  %cmp150 = icmp eq i32 %bf.clear149, 65536, !dbg !4409
  br i1 %cmp150, label %cleanup, label %if.end153, !dbg !4410

if.end153:                                        ; preds = %lor.lhs.false146
  %call154 = tail call fastcc %struct.rtx_def* @fixed_scalar_and_varying_struct_p(%struct.rtx_def* %mem, %struct.rtx_def* %x, %struct.rtx_def* %mem_addr, %struct.rtx_def* %call107, i8 (%struct.rtx_def*, i8)* %varies) #7, !dbg !4411
  %tobool155 = icmp eq %struct.rtx_def* %call154, null, !dbg !4411
  br i1 %tobool155, label %if.end157, label %cleanup, !dbg !4413

if.end157:                                        ; preds = %if.end153
  %call158 = tail call fastcc zeroext i8 @rtx_refs_may_alias_p(%struct.rtx_def* %x, %struct.rtx_def* %mem, i8 zeroext 1) #7, !dbg !4414
  %conv159 = zext i8 %call158 to i32, !dbg !4414
  br label %cleanup, !dbg !4415

cleanup:                                          ; preds = %land.lhs.true, %if.end153, %if.end126, %if.end122, %if.end106, %if.end99, %cond.end87, %if.end53, %lor.lhs.false146, %lor.lhs.false137, %if.end130, %cond.end, %cond.end49, %land.lhs.true18, %land.lhs.true8, %if.end157
  %retval.0 = phi i32 [ %conv159, %if.end157 ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true8 ], [ 1, %land.lhs.true18 ], [ 1, %cond.end49 ], [ 1, %cond.end ], [ 0, %if.end53 ], [ 1, %cond.end87 ], [ 0, %if.end99 ], [ %call118, %if.end106 ], [ 0, %if.end122 ], [ 0, %if.end126 ], [ 1, %if.end130 ], [ 1, %lor.lhs.false137 ], [ 1, %lor.lhs.false146 ], [ 0, %if.end153 ], !dbg !4342
  ret i32 %retval.0, !dbg !4416
}

; Function Attrs: nounwind uwtable
define dso_local i32 @anti_dependence(%struct.rtx_def* %mem, %struct.rtx_def* %x) local_unnamed_addr #4 !dbg !4417 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4419, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4420, metadata !DIExpression()), !dbg !4421
  %call = tail call fastcc i32 @write_dependence_p(%struct.rtx_def* %mem, %struct.rtx_def* %x, i32 0) #7, !dbg !4422
  ret i32 %call, !dbg !4423
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @write_dependence_p(%struct.rtx_def* %mem, %struct.rtx_def* %x, i32 %writep) unnamed_addr #4 !dbg !4424 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4428, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4429, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata i32 %writep, metadata !4430, metadata !DIExpression()), !dbg !4436
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4437
  %bf.load = load i32, i32* %0, align 8, !dbg !4437
  %bf.clear = and i32 %bf.load, 134217728, !dbg !4437
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !4437
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4439

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4440
  %bf.load1 = load i32, i32* %1, align 8, !dbg !4440
  %bf.clear3 = and i32 %bf.load1, 134217728, !dbg !4440
  %tobool4 = icmp eq i32 %bf.clear3, 0, !dbg !4440
  br i1 %tobool4, label %if.end, label %cleanup, !dbg !4441

if.end:                                           ; preds = %land.lhs.true, %entry
  %bf.clear7 = and i32 %bf.load, 16711680, !dbg !4442
  %cmp = icmp eq i32 %bf.clear7, 65536, !dbg !4444
  br i1 %cmp, label %land.lhs.true8, label %if.end13, !dbg !4445

land.lhs.true8:                                   ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4446
  %2 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4446
  %3 = load i32*, i32** %2, align 8, !dbg !4446
  %bf.load9 = load i32, i32* %3, align 8, !dbg !4446
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !4446
  %cmp11 = icmp eq i32 %bf.clear10, 38, !dbg !4447
  br i1 %cmp11, label %cleanup, label %if.end13, !dbg !4448

if.end13:                                         ; preds = %land.lhs.true8, %if.end
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !4449
  %bf.load14 = load i32, i32* %4, align 8, !dbg !4449
  %bf.clear16 = and i32 %bf.load14, 16711680, !dbg !4449
  %cmp17 = icmp eq i32 %bf.clear16, 65536, !dbg !4451
  br i1 %cmp17, label %land.lhs.true18, label %if.end27, !dbg !4452

land.lhs.true18:                                  ; preds = %if.end13
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4453
  %5 = bitcast %union.rtunion_def* %arrayidx21 to i32**, !dbg !4453
  %6 = load i32*, i32** %5, align 8, !dbg !4453
  %bf.load23 = load i32, i32* %6, align 8, !dbg !4453
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !4453
  %cmp25 = icmp eq i32 %bf.clear24, 38, !dbg !4454
  br i1 %cmp25, label %cleanup, label %if.end27, !dbg !4455

if.end27:                                         ; preds = %land.lhs.true18, %if.end13
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4456
  %rt_mem = bitcast %union.rtunion_def* %7 to %struct.mem_attrs**, !dbg !4456
  %8 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4456
  %cmp31 = icmp eq %struct.mem_attrs* %8, null, !dbg !4456
  br i1 %cmp31, label %cond.end, label %cond.false, !dbg !4456

cond.false:                                       ; preds = %if.end27
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i64 0, i32 3, !dbg !4456
  %9 = load i32, i32* %alias, align 8, !dbg !4456
  %phitmp = icmp eq i32 %9, -1, !dbg !4456
  br label %cond.end, !dbg !4456

cond.end:                                         ; preds = %if.end27, %cond.false
  %cond = phi i1 [ %phitmp, %cond.false ], [ false, %if.end27 ]
  br i1 %cond, label %cleanup, label %lor.lhs.false, !dbg !4458

lor.lhs.false:                                    ; preds = %cond.end
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4459
  %rt_mem40 = bitcast %union.rtunion_def* %10 to %struct.mem_attrs**, !dbg !4459
  %11 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem40, align 8, !dbg !4459
  %cmp41 = icmp eq %struct.mem_attrs* %11, null, !dbg !4459
  br i1 %cmp41, label %cond.end49, label %cond.false43, !dbg !4459

cond.false43:                                     ; preds = %lor.lhs.false
  %alias48 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %11, i64 0, i32 3, !dbg !4459
  %12 = load i32, i32* %alias48, align 8, !dbg !4459
  %phitmp1 = icmp eq i32 %12, -1, !dbg !4459
  br label %cond.end49, !dbg !4459

cond.end49:                                       ; preds = %lor.lhs.false, %cond.false43
  %cond50 = phi i1 [ %phitmp1, %cond.false43 ], [ false, %lor.lhs.false ]
  br i1 %cond50, label %cleanup, label %if.end53, !dbg !4460

if.end53:                                         ; preds = %cond.end49
  %tobool54 = icmp eq i32 %writep, 0, !dbg !4461
  br i1 %tobool54, label %land.lhs.true55, label %if.end61, !dbg !4463

land.lhs.true55:                                  ; preds = %if.end53
  %bf.clear58 = and i32 %bf.load14, 67108864, !dbg !4464
  %tobool59 = icmp eq i32 %bf.clear58, 0, !dbg !4464
  br i1 %tobool59, label %if.end61, label %cleanup, !dbg !4465

if.end61:                                         ; preds = %land.lhs.true55, %if.end53
  br i1 %cmp41, label %cond.end73, label %cond.false68, !dbg !4466

cond.false68:                                     ; preds = %if.end61
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %11, i64 0, i32 5, !dbg !4466
  %13 = load i8, i8* %addrspace, align 8, !dbg !4466
  %conv = zext i8 %13 to i32, !dbg !4466
  br label %cond.end73, !dbg !4466

cond.end73:                                       ; preds = %if.end61, %cond.false68
  %cond74 = phi i32 [ %conv, %cond.false68 ], [ 0, %if.end61 ], !dbg !4466
  br i1 %cmp31, label %cond.end89, label %cond.false82, !dbg !4468

cond.false82:                                     ; preds = %cond.end73
  %addrspace87 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i64 0, i32 5, !dbg !4468
  %14 = load i8, i8* %addrspace87, align 8, !dbg !4468
  %conv88 = zext i8 %14 to i32, !dbg !4468
  br label %cond.end89, !dbg !4468

cond.end89:                                       ; preds = %cond.end73, %cond.false82
  %cond90 = phi i32 [ %conv88, %cond.false82 ], [ 0, %cond.end73 ], !dbg !4468
  %cmp91 = icmp eq i32 %cond74, %cond90, !dbg !4469
  br i1 %cmp91, label %if.end94, label %cleanup, !dbg !4470

if.end94:                                         ; preds = %cond.end89
  %arrayidx97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4471
  %rt_rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**, !dbg !4471
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx98, align 8, !dbg !4471
  %call = tail call %struct.rtx_def* @get_addr(%struct.rtx_def* %15) #7, !dbg !4472
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4431, metadata !DIExpression()), !dbg !4436
  %arrayidx101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4473
  %rt_rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**, !dbg !4473
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx102, align 8, !dbg !4473
  %call103 = tail call %struct.rtx_def* @get_addr(%struct.rtx_def* %16) #7, !dbg !4474
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call103, metadata !4432, metadata !DIExpression()), !dbg !4436
  br i1 %tobool54, label %if.then105, label %if.end125, !dbg !4475

if.then105:                                       ; preds = %if.end94
  %call106 = tail call %struct.rtx_def* @find_base_term(%struct.rtx_def* %call103) #7, !dbg !4476
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call106, metadata !4434, metadata !DIExpression()), !dbg !4436
  %tobool107 = icmp eq %struct.rtx_def* %call106, null, !dbg !4479
  br i1 %tobool107, label %if.end125, label %land.lhs.true108, !dbg !4481

land.lhs.true108:                                 ; preds = %if.then105
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call106, i64 0, i32 0, !dbg !4482
  %bf.load109 = load i32, i32* %17, align 8, !dbg !4482
  %bf.clear110 = and i32 %bf.load109, 65535, !dbg !4482
  %cmp111 = icmp eq i32 %bf.clear110, 44, !dbg !4483
  br i1 %cmp111, label %cleanup, label %lor.lhs.false113, !dbg !4484

lor.lhs.false113:                                 ; preds = %land.lhs.true108
  %cmp116 = icmp eq i32 %bf.clear110, 45, !dbg !4485
  br i1 %cmp116, label %land.lhs.true118, label %if.end125, !dbg !4486

land.lhs.true118:                                 ; preds = %lor.lhs.false113
  %bf.clear121 = and i32 %bf.load109, 67108864, !dbg !4487
  %tobool122 = icmp eq i32 %bf.clear121, 0, !dbg !4487
  br i1 %tobool122, label %if.end125, label %cleanup, !dbg !4488

if.end125:                                        ; preds = %land.lhs.true118, %if.then105, %if.end94, %lor.lhs.false113
  %bf.load126 = load i32, i32* %0, align 8, !dbg !4489
  %bf.lshr127 = lshr i32 %bf.load126, 16, !dbg !4489
  %bf.clear128 = and i32 %bf.lshr127, 255, !dbg !4489
  %bf.load129 = load i32, i32* %4, align 8, !dbg !4491
  %bf.lshr130 = lshr i32 %bf.load129, 16, !dbg !4491
  %bf.clear131 = and i32 %bf.lshr130, 255, !dbg !4491
  %call132 = tail call fastcc i32 @base_alias_check(%struct.rtx_def* %call, %struct.rtx_def* %call103, i32 %bf.clear128, i32 %bf.clear131) #7, !dbg !4492
  %tobool133 = icmp eq i32 %call132, 0, !dbg !4492
  br i1 %tobool133, label %cleanup, label %if.end135, !dbg !4493

if.end135:                                        ; preds = %if.end125
  %call136 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %call) #7, !dbg !4494
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call136, metadata !4431, metadata !DIExpression()), !dbg !4436
  %call137 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %call103) #7, !dbg !4495
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call137, metadata !4432, metadata !DIExpression()), !dbg !4436
  %bf.load138 = load i32, i32* %4, align 8, !dbg !4496
  %bf.lshr139 = lshr i32 %bf.load138, 16, !dbg !4496
  %bf.clear140 = and i32 %bf.lshr139, 255, !dbg !4496
  %idxprom = zext i32 %bf.clear140 to i64, !dbg !4496
  %arrayidx141 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4496
  %18 = load i8, i8* %arrayidx141, align 1, !dbg !4496
  %conv143 = zext i8 %18 to i32, !dbg !4496
  %bf.load144 = load i32, i32* %0, align 8, !dbg !4498
  %bf.lshr145 = lshr i32 %bf.load144, 16, !dbg !4498
  %bf.clear146 = and i32 %bf.lshr145, 255, !dbg !4498
  %idxprom147 = zext i32 %bf.clear146 to i64, !dbg !4498
  %arrayidx148 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom147, !dbg !4498
  %19 = load i8, i8* %arrayidx148, align 1, !dbg !4498
  %conv150 = zext i8 %19 to i32, !dbg !4498
  %call151 = tail call fastcc i32 @memrefs_conflict_p(i32 %conv143, %struct.rtx_def* %call137, i32 %conv150, %struct.rtx_def* %call136, i64 0) #7, !dbg !4499
  call void @llvm.dbg.value(metadata i32 %call151, metadata !4435, metadata !DIExpression()), !dbg !4436
  %cmp152 = icmp eq i32 %call151, -1, !dbg !4500
  br i1 %cmp152, label %if.end155, label %cleanup, !dbg !4501

if.end155:                                        ; preds = %if.end135
  %call156 = tail call i32 @nonoverlapping_memrefs_p(%struct.rtx_def* %x, %struct.rtx_def* %mem) #7, !dbg !4502
  %tobool157 = icmp eq i32 %call156, 0, !dbg !4502
  br i1 %tobool157, label %if.end159, label %cleanup, !dbg !4504

if.end159:                                        ; preds = %if.end155
  %call160 = tail call fastcc %struct.rtx_def* @fixed_scalar_and_varying_struct_p(%struct.rtx_def* %mem, %struct.rtx_def* %x, %struct.rtx_def* %call137, %struct.rtx_def* %call136, i8 (%struct.rtx_def*, i8)* nonnull @rtx_addr_varies_p) #7, !dbg !4505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call160, metadata !4433, metadata !DIExpression()), !dbg !4436
  %cmp161 = icmp eq %struct.rtx_def* %call160, %mem, !dbg !4506
  br i1 %cmp161, label %land.lhs.true163, label %lor.lhs.false166, !dbg !4508

land.lhs.true163:                                 ; preds = %if.end159
  %call164 = tail call fastcc i32 @aliases_everything_p(%struct.rtx_def* %x) #7, !dbg !4509
  %tobool165 = icmp eq i32 %call164, 0, !dbg !4509
  br i1 %tobool165, label %cleanup, label %lor.lhs.false166, !dbg !4510

lor.lhs.false166:                                 ; preds = %land.lhs.true163, %if.end159
  %cmp167 = icmp eq %struct.rtx_def* %call160, %x, !dbg !4511
  br i1 %cmp167, label %land.lhs.true169, label %if.end173, !dbg !4512

land.lhs.true169:                                 ; preds = %lor.lhs.false166
  %call170 = tail call fastcc i32 @aliases_everything_p(%struct.rtx_def* %mem) #7, !dbg !4513
  %tobool171 = icmp eq i32 %call170, 0, !dbg !4513
  br i1 %tobool171, label %cleanup, label %if.end173, !dbg !4514

if.end173:                                        ; preds = %land.lhs.true169, %lor.lhs.false166
  %call174 = tail call fastcc zeroext i8 @rtx_refs_may_alias_p(%struct.rtx_def* %x, %struct.rtx_def* %mem, i8 zeroext 0) #7, !dbg !4515
  %conv175 = zext i8 %call174 to i32, !dbg !4515
  br label %cleanup, !dbg !4516

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true118, %land.lhs.true163, %land.lhs.true169, %if.end155, %if.end135, %if.end125, %cond.end89, %land.lhs.true55, %land.lhs.true108, %cond.end, %cond.end49, %land.lhs.true18, %land.lhs.true8, %if.end173
  %retval.0 = phi i32 [ %conv175, %if.end173 ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true8 ], [ 1, %land.lhs.true18 ], [ 1, %cond.end49 ], [ 1, %cond.end ], [ 0, %land.lhs.true55 ], [ 1, %cond.end89 ], [ 0, %land.lhs.true118 ], [ 0, %land.lhs.true108 ], [ 0, %if.end125 ], [ %call151, %if.end135 ], [ 0, %if.end155 ], [ 0, %land.lhs.true169 ], [ 0, %land.lhs.true163 ], !dbg !4436
  ret i32 %retval.0, !dbg !4517
}

; Function Attrs: nounwind uwtable
define dso_local i32 @output_dependence(%struct.rtx_def* %mem, %struct.rtx_def* %x) local_unnamed_addr #4 !dbg !4518 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4520, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4521, metadata !DIExpression()), !dbg !4522
  %call = tail call fastcc i32 @write_dependence_p(%struct.rtx_def* %mem, %struct.rtx_def* %x, i32 1) #7, !dbg !4523
  ret i32 %call, !dbg !4524
}

; Function Attrs: nounwind uwtable
define dso_local void @init_alias_target() local_unnamed_addr #4 !dbg !4525 {
entry:
  %call = tail call i8* @memset(i8* bitcast ([53 x %struct.rtx_def*]* @static_reg_base_value to i8*), i32 0, i64 424) #6, !dbg !4530
  call void @llvm.dbg.value(metadata i32 0, metadata !4529, metadata !DIExpression()), !dbg !4531
  br label %for.cond, !dbg !4532

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !4534
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4529, metadata !DIExpression()), !dbg !4531
  %exitcond = icmp eq i64 %indvars.iv, 53, !dbg !4535
  br i1 %exitcond, label %for.end, label %for.body, !dbg !4537

for.body:                                         ; preds = %for.cond
  %0 = trunc i64 %indvars.iv to i32, !dbg !4538
  %call1 = tail call zeroext i8 @ix86_function_arg_regno_p(i32 %0) #6, !dbg !4538
  %tobool = icmp eq i8 %call1, 0, !dbg !4538
  br i1 %tobool, label %for.inc, label %land.lhs.true, !dbg !4540

land.lhs.true:                                    ; preds = %for.body
  %1 = trunc i64 %indvars.iv to i32, !dbg !4541
  %call2 = tail call zeroext i8 @ix86_hard_regno_mode_ok(i32 %1, i32 16) #6, !dbg !4541
  %tobool4 = icmp eq i8 %call2, 0, !dbg !4541
  br i1 %tobool4, label %for.inc, label %if.then, !dbg !4542

if.then:                                          ; preds = %land.lhs.true
  %2 = trunc i64 %indvars.iv to i32, !dbg !4543
  %call5 = tail call %struct.rtx_def* @gen_rtx_REG(i32 16, i32 %2) #6, !dbg !4543
  %call6 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 6, i32 0, %struct.rtx_def* %call5) #6, !dbg !4543
  %arrayidx = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @static_reg_base_value, i64 0, i64 %indvars.iv, !dbg !4544
  store %struct.rtx_def* %call6, %struct.rtx_def** %arrayidx, align 8, !dbg !4545
  br label %for.inc, !dbg !4544

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4546
  call void @llvm.dbg.value(metadata i32 undef, metadata !4529, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4531
  br label %for.cond, !dbg !4547, !llvm.loop !4548

for.end:                                          ; preds = %for.cond
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !4550
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 6, i32 16, %struct.rtx_def* %3) #6, !dbg !4550
  store %struct.rtx_def* %call7, %struct.rtx_def** getelementptr inbounds ([53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @static_reg_base_value, i64 0, i64 7), align 8, !dbg !4551
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !4552
  %call8 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 6, i32 16, %struct.rtx_def* %4) #6, !dbg !4552
  store %struct.rtx_def* %call8, %struct.rtx_def** getelementptr inbounds ([53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @static_reg_base_value, i64 0, i64 16), align 16, !dbg !4553
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !4554
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 6, i32 16, %struct.rtx_def* %5) #6, !dbg !4554
  store %struct.rtx_def* %call9, %struct.rtx_def** getelementptr inbounds ([53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @static_reg_base_value, i64 0, i64 20), align 16, !dbg !4555
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !4556
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 6, i32 16, %struct.rtx_def* %6) #6, !dbg !4556
  store %struct.rtx_def* %call10, %struct.rtx_def** getelementptr inbounds ([53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @static_reg_base_value, i64 0, i64 6), align 16, !dbg !4557
  ret void, !dbg !4558
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #1

declare dso_local zeroext i8 @ix86_function_arg_regno_p(i32) local_unnamed_addr #1

declare dso_local zeroext i8 @ix86_hard_regno_mode_ok(i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @memory_modified_in_insn_p(%struct.rtx_def* %mem, %struct.rtx_def* %insn) local_unnamed_addr #4 !dbg !4559 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !4563, metadata !DIExpression()), !dbg !4565
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4564, metadata !DIExpression()), !dbg !4565
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !4566
  %bf.load = load i32, i32* %0, align 8, !dbg !4566
  %bf.clear = and i32 %bf.load, 65535, !dbg !4566
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4566
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !4566

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !4566
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !4566

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !4566
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !4566

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !4566
  br i1 %cmp11, label %if.end, label %return, !dbg !4568

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  store i1 false, i1* @memory_modified, align 1, !dbg !4569
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !4570
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4570
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !4570
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4570
  %3 = bitcast %struct.rtx_def* %mem to i8*, !dbg !4571
  tail call void @note_stores(%struct.rtx_def* %2, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @memory_modified_1, i8* %3) #6, !dbg !4572
  %.b = load i1, i1* @memory_modified, align 1, !dbg !4573
  %4 = zext i1 %.b to i8, !dbg !4573
  br label %return, !dbg !4574

return:                                           ; preds = %lor.lhs.false8, %if.end
  %retval.0 = phi i8 [ %4, %if.end ], [ 0, %lor.lhs.false8 ], !dbg !4565
  ret i8 %retval.0, !dbg !4575
}

declare dso_local void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @memory_modified_1(%struct.rtx_def* %x, %struct.rtx_def* %pat, i8* %data) #4 !dbg !4576 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4580, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pat, metadata !4581, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i8* %data, metadata !4582, metadata !DIExpression()), !dbg !4583
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !4584
  %bf.load = load i32, i32* %0, align 8, !dbg !4584
  %bf.clear = and i32 %bf.load, 65535, !dbg !4584
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !4584
  br i1 %cmp, label %if.then, label %if.end4, !dbg !4586

if.then:                                          ; preds = %entry
  %1 = bitcast i8* %data to %struct.rtx_def*, !dbg !4587
  %call = tail call i32 @anti_dependence(%struct.rtx_def* %x, %struct.rtx_def* %1) #7, !dbg !4590
  %tobool = icmp eq i32 %call, 0, !dbg !4590
  br i1 %tobool, label %lor.lhs.false, label %if.then3, !dbg !4591

lor.lhs.false:                                    ; preds = %if.then
  %call1 = tail call i32 @output_dependence(%struct.rtx_def* %x, %struct.rtx_def* %1) #7, !dbg !4592
  %tobool2 = icmp eq i32 %call1, 0, !dbg !4592
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !4593

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  store i1 true, i1* @memory_modified, align 1, !dbg !4594
  br label %if.end4, !dbg !4595

if.end4:                                          ; preds = %lor.lhs.false, %if.then3, %entry
  ret void, !dbg !4596
}

; Function Attrs: nounwind uwtable
define dso_local void @init_alias_analysis() local_unnamed_addr #4 !dbg !4597 {
entry:
  %call = tail call i32 @max_reg_num() #6, !dbg !4618
  call void @llvm.dbg.value(metadata i32 %call, metadata !4599, metadata !DIExpression()), !dbg !4619
  %0 = load i8, i8* @timevar_enable, align 1, !dbg !4620
  %tobool = icmp eq i8 %0, 0, !dbg !4620
  br i1 %tobool, label %do.end, label %if.then, !dbg !4623

if.then:                                          ; preds = %entry
  tail call void @timevar_push_1(i32 38) #6, !dbg !4620
  br label %do.end, !dbg !4620

do.end:                                           ; preds = %entry, %if.then
  %sub = add i32 %call, -53, !dbg !4624
  store i32 %sub, i32* @reg_known_value_size, align 4, !dbg !4625
  %conv = zext i32 %sub to i64, !dbg !4626
  %mul = shl nuw nsw i64 %conv, 3, !dbg !4626
  %call1 = tail call i8* @ggc_alloc_cleared_stat(i64 %mul) #6, !dbg !4626
  store i8* %call1, i8** bitcast (%struct.rtx_def*** @reg_known_value to i8**), align 8, !dbg !4627
  %1 = load i32, i32* @reg_known_value_size, align 4, !dbg !4628
  %conv2 = zext i32 %1 to i64, !dbg !4628
  %call3 = tail call i8* @xcalloc(i64 %conv2, i64 1) #6, !dbg !4628
  store i8* %call3, i8** @reg_known_equiv_p, align 8, !dbg !4629
  %2 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @old_reg_base_value, align 8, !dbg !4630
  %tobool4 = icmp eq %struct.VEC_rtx_gc* %2, null, !dbg !4630
  br i1 %tobool4, label %do.end.if.end6_crit_edge, label %if.then5, !dbg !4632

do.end.if.end6_crit_edge:                         ; preds = %do.end
  %.pre = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !4633
  br label %if.end6, !dbg !4632

if.then5:                                         ; preds = %do.end
  %3 = ptrtoint %struct.VEC_rtx_gc* %2 to i64, !dbg !4632
  store i64 %3, i64* bitcast (%struct.VEC_rtx_gc** @reg_base_value to i64*), align 8, !dbg !4635
  br label %if.end6, !dbg !4636

if.end6:                                          ; preds = %do.end.if.end6_crit_edge, %if.then5
  %4 = phi %struct.VEC_rtx_gc* [ %.pre, %do.end.if.end6_crit_edge ], [ %2, %if.then5 ]
  %5 = phi %struct.VEC_rtx_gc* [ %.pre, %do.end.if.end6_crit_edge ], [ %2, %if.then5 ], !dbg !4633
  %tobool7 = icmp eq %struct.VEC_rtx_gc* %5, null, !dbg !4633
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !4637

if.then8:                                         ; preds = %if.end6
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %4, i64 0, i32 0, !dbg !4638
  tail call fastcc void @VEC_rtx_base_truncate(%struct.VEC_rtx_base* %base, i32 0) #7, !dbg !4638
  br label %if.end10, !dbg !4638

if.end10:                                         ; preds = %if.end6, %if.then8
  tail call fastcc void @VEC_rtx_gc_safe_grow_cleared(%struct.VEC_rtx_gc** nonnull @reg_base_value, i32 %call) #7, !dbg !4639
  %conv11 = zext i32 %call to i64, !dbg !4640
  %mul12 = shl nuw nsw i64 %conv11, 3, !dbg !4640
  %call13 = tail call i8* @xmalloc(i64 %mul12) #6, !dbg !4640
  store i8* %call13, i8** bitcast (%struct.rtx_def*** @new_reg_base_value to i8**), align 8, !dbg !4641
  %call16 = tail call i8* @xmalloc(i64 %conv11) #6, !dbg !4642
  store i8* %call16, i8** @reg_seen, align 8, !dbg !4643
  call void @llvm.dbg.value(metadata i32 0, metadata !4601, metadata !DIExpression()), !dbg !4619
  br label %do.body17, !dbg !4644

do.body17:                                        ; preds = %do.cond332, %if.end10
  %pass.0 = phi i32 [ 0, %if.end10 ], [ %pass.1, %do.cond332 ], !dbg !4619
  call void @llvm.dbg.value(metadata i32 %pass.0, metadata !4601, metadata !DIExpression()), !dbg !4619
  call void @llvm.dbg.value(metadata i32 0, metadata !4600, metadata !DIExpression()), !dbg !4619
  store i32 0, i32* @unique_id, align 4, !dbg !4645
  store i1 true, i1* @copying_arguments, align 1, !dbg !4646
  %6 = load i8*, i8** bitcast (%struct.rtx_def*** @new_reg_base_value to i8**), align 8, !dbg !4647
  %call20 = tail call i8* @memset(i8* %6, i32 0, i64 %mul12) #6, !dbg !4648
  %7 = load i8*, i8** @reg_seen, align 8, !dbg !4649
  %call22 = tail call i8* @memset(i8* %7, i32 0, i64 %conv11) #6, !dbg !4650
  %8 = load i8*, i8** bitcast (%struct.rtx_def*** @new_reg_base_value to i8**), align 8, !dbg !4651
  %call23 = tail call i8* @memcpy(i8* %8, i8* bitcast ([53 x %struct.rtx_def*]* @static_reg_base_value to i8*), i64 424) #6, !dbg !4652
  %call24 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4653
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call24, metadata !4604, metadata !DIExpression()), !dbg !4619
  br label %for.cond, !dbg !4654

for.cond:                                         ; preds = %for.inc, %do.body17
  %insn.0 = phi %struct.rtx_def* [ %call24, %do.body17 ], [ %59, %for.inc ], !dbg !4655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4604, metadata !DIExpression()), !dbg !4619
  %tobool25 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !4656
  br i1 %tobool25, label %for.end, label %for.body, !dbg !4656

for.body:                                         ; preds = %for.cond
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4657
  %bf.load = load i32, i32* %9, align 8, !dbg !4657
  %bf.clear = and i32 %bf.load, 65535, !dbg !4657
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4657
  br i1 %cmp, label %if.then41, label %lor.lhs.false, !dbg !4657

lor.lhs.false:                                    ; preds = %for.body
  %cmp29 = icmp eq i32 %bf.clear, 7, !dbg !4657
  br i1 %cmp29, label %if.then41, label %lor.lhs.false31, !dbg !4657

lor.lhs.false31:                                  ; preds = %lor.lhs.false
  %cmp34 = icmp eq i32 %bf.clear, 9, !dbg !4657
  br i1 %cmp34, label %if.then41, label %lor.lhs.false36, !dbg !4657

lor.lhs.false36:                                  ; preds = %lor.lhs.false31
  %cmp39 = icmp eq i32 %bf.clear, 10, !dbg !4657
  br i1 %cmp39, label %if.then41, label %if.else263, !dbg !4658

if.then41:                                        ; preds = %lor.lhs.false36, %lor.lhs.false31, %lor.lhs.false, %for.body
  %10 = load i32, i32* @reload_completed, align 4, !dbg !4659
  %tobool42 = icmp eq i32 %10, 0, !dbg !4659
  br i1 %tobool42, label %if.end46, label %land.lhs.true, !dbg !4661

land.lhs.true:                                    ; preds = %if.then41
  %call43 = tail call i32 @prologue_epilogue_contains(%struct.rtx_def* nonnull %insn.0) #6, !dbg !4662
  %tobool44 = icmp eq i32 %call43, 0, !dbg !4662
  br i1 %tobool44, label %if.end46, label %for.inc, !dbg !4663

if.end46:                                         ; preds = %land.lhs.true, %if.then41
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !4664
  %11 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !4664
  %12 = bitcast %union.rtunion_def* %11 to i32**, !dbg !4664
  %13 = load i32*, i32** %12, align 8, !dbg !4664
  %bf.load47 = load i32, i32* %13, align 8, !dbg !4664
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !4664
  %cmp49 = icmp eq i32 %bf.clear48, 23, !dbg !4666
  %14 = bitcast i32* %13 to %struct.rtx_def*, !dbg !4667
  br i1 %cmp49, label %land.lhs.true51, label %if.else, !dbg !4667

land.lhs.true51:                                  ; preds = %if.end46
  %15 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !4668
  %rt_rtx55 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !4668
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !4668
  %cmp56 = icmp eq %struct.rtx_def* %16, null, !dbg !4669
  br i1 %cmp56, label %if.else, label %land.lhs.true58, !dbg !4670

land.lhs.true58:                                  ; preds = %land.lhs.true51
  %call59 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %insn.0, i32 15, %struct.rtx_def* null) #6, !dbg !4671
  %tobool60 = icmp eq %struct.rtx_def* %call59, null, !dbg !4671
  br i1 %tobool60, label %land.lhs.true58.if.else_crit_edge, label %if.then61, !dbg !4672

land.lhs.true58.if.else_crit_edge:                ; preds = %land.lhs.true58
  %rt_rtx73.phi.trans.insert = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !4673
  %.pre1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx73.phi.trans.insert, align 8, !dbg !4674
  br label %if.else, !dbg !4672

if.then61:                                        ; preds = %land.lhs.true58
  %rt_rtx65 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !4675
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !4675
  %arrayidx68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4675
  %rt_rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**, !dbg !4675
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx69, align 8, !dbg !4675
  tail call void @record_set(%struct.rtx_def* %18, %struct.rtx_def* null, i8* null) #7, !dbg !4676
  br label %if.end74, !dbg !4676

if.else:                                          ; preds = %land.lhs.true58.if.else_crit_edge, %land.lhs.true51, %if.end46
  %19 = phi %struct.rtx_def* [ %.pre1, %land.lhs.true58.if.else_crit_edge ], [ %14, %land.lhs.true51 ], [ %14, %if.end46 ], !dbg !4674
  tail call void @note_stores(%struct.rtx_def* %19, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @record_set, i8* null) #6, !dbg !4677
  br label %if.end74

if.end74:                                         ; preds = %if.else, %if.then61
  %bf.load75 = load i32, i32* %9, align 8, !dbg !4678
  %bf.clear76 = and i32 %bf.load75, 65535, !dbg !4678
  %cmp77 = icmp eq i32 %bf.clear76, 8, !dbg !4678
  br i1 %cmp77, label %cond.true94, label %lor.lhs.false79, !dbg !4678

lor.lhs.false79:                                  ; preds = %if.end74
  %cmp82 = icmp eq i32 %bf.clear76, 7, !dbg !4678
  br i1 %cmp82, label %cond.true94, label %lor.lhs.false84, !dbg !4678

lor.lhs.false84:                                  ; preds = %lor.lhs.false79
  %cmp87 = icmp eq i32 %bf.clear76, 9, !dbg !4678
  br i1 %cmp87, label %cond.true94, label %lor.lhs.false89, !dbg !4678

lor.lhs.false89:                                  ; preds = %lor.lhs.false84
  %cmp92 = icmp eq i32 %bf.clear76, 10, !dbg !4678
  br i1 %cmp92, label %cond.true94, label %cond.end117, !dbg !4678

cond.true94:                                      ; preds = %lor.lhs.false89, %lor.lhs.false84, %lor.lhs.false79, %if.end74
  %20 = load i32*, i32** %12, align 8, !dbg !4678
  %bf.load99 = load i32, i32* %20, align 8, !dbg !4678
  %bf.clear100 = and i32 %bf.load99, 65535, !dbg !4678
  %cmp101 = icmp eq i32 %bf.clear100, 23, !dbg !4678
  %21 = bitcast i32* %20 to %struct.rtx_def*, !dbg !4678
  br i1 %cmp101, label %cond.end117, label %cond.false108, !dbg !4678

cond.false108:                                    ; preds = %cond.true94
  %call113 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %21) #6, !dbg !4678
  br label %cond.end117, !dbg !4678

cond.end117:                                      ; preds = %lor.lhs.false89, %cond.false108, %cond.true94
  %cond118 = phi %struct.rtx_def* [ %call113, %cond.false108 ], [ %21, %cond.true94 ], [ null, %lor.lhs.false89 ], !dbg !4678
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond118, metadata !4612, metadata !DIExpression()), !dbg !4679
  %cmp119 = icmp eq %struct.rtx_def* %cond118, null, !dbg !4680
  br i1 %cmp119, label %for.inc, label %land.lhs.true121, !dbg !4681

land.lhs.true121:                                 ; preds = %cond.end117
  %arrayidx124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond118, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4682
  %22 = bitcast %union.rtunion_def* %arrayidx124 to i32**, !dbg !4682
  %23 = load i32*, i32** %22, align 8, !dbg !4682
  %bf.load126 = load i32, i32* %23, align 8, !dbg !4682
  %bf.clear127 = and i32 %bf.load126, 65535, !dbg !4682
  %cmp128 = icmp eq i32 %bf.clear127, 37, !dbg !4682
  br i1 %cmp128, label %land.lhs.true130, label %for.inc, !dbg !4683

land.lhs.true130:                                 ; preds = %land.lhs.true121
  %24 = bitcast i32* %23 to %struct.rtx_def*, !dbg !4683
  %rt_rtx134 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**, !dbg !4684
  %call135 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %24) #7, !dbg !4684
  %cmp136 = icmp ugt i32 %call135, 52, !dbg !4685
  br i1 %cmp136, label %if.then138, label %for.inc, !dbg !4686

if.then138:                                       ; preds = %land.lhs.true130
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx134, align 8, !dbg !4687
  %call143 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %25) #7, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %call143, metadata !4613, metadata !DIExpression()), !dbg !4688
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond118, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4689
  %rt_rtx147 = bitcast %union.rtunion_def* %26 to %struct.rtx_def**, !dbg !4689
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx147, align 8, !dbg !4689
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !4616, metadata !DIExpression()), !dbg !4688
  %call148 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* nonnull %insn.0) #6, !dbg !4690
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call148, metadata !4605, metadata !DIExpression()), !dbg !4679
  %tobool149 = icmp eq %struct.rtx_def* %call148, null, !dbg !4691
  br i1 %tobool149, label %if.end160, label %land.lhs.true150, !dbg !4693

land.lhs.true150:                                 ; preds = %if.then138
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call148, i64 0, i32 0, !dbg !4694
  %bf.load151 = load i32, i32* %28, align 8, !dbg !4694
  %bf.clear152 = and i32 %bf.load151, 16711680, !dbg !4694
  %cmp153 = icmp eq i32 %bf.clear152, 262144, !dbg !4695
  br i1 %cmp153, label %land.lhs.true155, label %if.end160, !dbg !4696

land.lhs.true155:                                 ; preds = %land.lhs.true150
  %29 = load %struct.df*, %struct.df** @df, align 8, !dbg !4697
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %29, i64 0, i32 5, !dbg !4697
  %30 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !4697
  %idxprom = zext i32 %call143 to i64, !dbg !4697
  %arrayidx156 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %30, i64 %idxprom, !dbg !4697
  %31 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx156, align 8, !dbg !4697
  %n_refs = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %31, i64 0, i32 1, !dbg !4697
  %32 = load i32, i32* %n_refs, align 8, !dbg !4697
  %cmp157 = icmp eq i32 %32, 1, !dbg !4698
  %spec.select = select i1 %cmp157, %struct.rtx_def* %call148, %struct.rtx_def* null, !dbg !4699
  br label %if.end160, !dbg !4699

if.end160:                                        ; preds = %if.then138, %land.lhs.true155, %land.lhs.true150
  %note.0 = phi %struct.rtx_def* [ %call148, %land.lhs.true150 ], [ null, %if.then138 ], [ %spec.select, %land.lhs.true155 ], !dbg !4688
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !4605, metadata !DIExpression()), !dbg !4679
  %cmp161 = icmp eq %struct.rtx_def* %note.0, null, !dbg !4700
  br i1 %cmp161, label %if.else201, label %land.lhs.true163, !dbg !4702

land.lhs.true163:                                 ; preds = %if.end160
  %arrayidx166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4703
  %33 = bitcast %union.rtunion_def* %arrayidx166 to i32**, !dbg !4703
  %34 = load i32*, i32** %33, align 8, !dbg !4703
  %bf.load168 = load i32, i32* %34, align 8, !dbg !4703
  %bf.clear169 = and i32 %bf.load168, 65535, !dbg !4703
  %cmp170 = icmp eq i32 %bf.clear169, 3, !dbg !4704
  br i1 %cmp170, label %if.else201, label %land.lhs.true172, !dbg !4705

land.lhs.true172:                                 ; preds = %land.lhs.true163
  %35 = bitcast i32* %34 to %struct.rtx_def*, !dbg !4705
  %rt_rtx176 = bitcast %union.rtunion_def* %arrayidx166 to %struct.rtx_def**, !dbg !4706
  %call177 = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %35, i8 zeroext 1) #6, !dbg !4707
  %tobool178 = icmp eq i8 %call177, 0, !dbg !4707
  br i1 %tobool178, label %land.lhs.true179, label %if.else201, !dbg !4708

land.lhs.true179:                                 ; preds = %land.lhs.true172
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx134, align 8, !dbg !4709
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx176, align 8, !dbg !4710
  %call188 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %36, %struct.rtx_def* %37) #6, !dbg !4711
  %tobool189 = icmp eq i32 %call188, 0, !dbg !4711
  br i1 %tobool189, label %if.then190, label %if.else201, !dbg !4712

if.then190:                                       ; preds = %land.lhs.true179
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx176, align 8, !dbg !4713
  tail call fastcc void @set_reg_known_value(i32 %call143, %struct.rtx_def* %38) #7, !dbg !4715
  %39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !4716
  %bf.load195 = load i32, i32* %39, align 8, !dbg !4716
  %bf.clear197 = and i32 %bf.load195, 16711680, !dbg !4716
  %cmp198 = icmp eq i32 %bf.clear197, 196608, !dbg !4717
  %conv200 = zext i1 %cmp198 to i8, !dbg !4716
  tail call fastcc void @set_reg_known_equiv_p(i32 %call143, i8 zeroext %conv200) #7, !dbg !4718
  br label %for.inc, !dbg !4719

if.else201:                                       ; preds = %land.lhs.true179, %land.lhs.true172, %land.lhs.true163, %if.end160
  %40 = load %struct.df*, %struct.df** @df, align 8, !dbg !4720
  %def_regs202 = getelementptr inbounds %struct.df, %struct.df* %40, i64 0, i32 5, !dbg !4720
  %41 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs202, align 8, !dbg !4720
  %idxprom203 = zext i32 %call143 to i64, !dbg !4720
  %arrayidx204 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %41, i64 %idxprom203, !dbg !4720
  %42 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx204, align 8, !dbg !4720
  %n_refs205 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %42, i64 0, i32 1, !dbg !4720
  %43 = load i32, i32* %n_refs205, align 8, !dbg !4720
  %cmp206 = icmp eq i32 %43, 1, !dbg !4722
  br i1 %cmp206, label %land.lhs.true208, label %if.else247, !dbg !4723

land.lhs.true208:                                 ; preds = %if.else201
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 0, !dbg !4724
  %bf.load209 = load i32, i32* %44, align 8, !dbg !4724
  %bf.clear210 = and i32 %bf.load209, 65535, !dbg !4724
  %cmp211 = icmp eq i32 %bf.clear210, 49, !dbg !4725
  br i1 %cmp211, label %land.lhs.true213, label %if.else247, !dbg !4726

land.lhs.true213:                                 ; preds = %land.lhs.true208
  %arrayidx216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4727
  %45 = bitcast %union.rtunion_def* %arrayidx216 to i32**, !dbg !4727
  %46 = load i32*, i32** %45, align 8, !dbg !4727
  %bf.load218 = load i32, i32* %46, align 8, !dbg !4727
  %bf.clear219 = and i32 %bf.load218, 65535, !dbg !4727
  %cmp220 = icmp eq i32 %bf.clear219, 37, !dbg !4727
  br i1 %cmp220, label %land.lhs.true222, label %if.else247, !dbg !4728

land.lhs.true222:                                 ; preds = %land.lhs.true213
  %47 = bitcast i32* %46 to %struct.rtx_def*, !dbg !4728
  %call227 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %47) #7, !dbg !4729
  %call228 = tail call %struct.rtx_def* @get_reg_known_value(i32 %call227) #7, !dbg !4730
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call228, metadata !4617, metadata !DIExpression()), !dbg !4688
  %tobool229 = icmp eq %struct.rtx_def* %call228, null, !dbg !4731
  br i1 %tobool229, label %if.else247, label %land.lhs.true230, !dbg !4732

land.lhs.true230:                                 ; preds = %land.lhs.true222
  %48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4733
  %49 = bitcast %union.rtunion_def* %48 to i32**, !dbg !4733
  %50 = load i32*, i32** %49, align 8, !dbg !4733
  %bf.load235 = load i32, i32* %50, align 8, !dbg !4733
  %bf.clear236 = and i32 %bf.load235, 65535, !dbg !4733
  %cmp237 = icmp eq i32 %bf.clear236, 30, !dbg !4733
  br i1 %cmp237, label %if.then239, label %if.else247, !dbg !4734

if.then239:                                       ; preds = %land.lhs.true230
  %u244 = getelementptr inbounds i32, i32* %50, i64 2, !dbg !4735
  %arrayidx245 = bitcast i32* %u244 to i64*, !dbg !4735
  %51 = load i64, i64* %arrayidx245, align 8, !dbg !4735
  %call246 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* nonnull %call228, i64 %51) #6, !dbg !4737
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call246, metadata !4617, metadata !DIExpression()), !dbg !4688
  tail call fastcc void @set_reg_known_value(i32 %call143, %struct.rtx_def* %call246) #7, !dbg !4738
  tail call fastcc void @set_reg_known_equiv_p(i32 %call143, i8 zeroext 0) #7, !dbg !4739
  br label %for.inc, !dbg !4740

if.else247:                                       ; preds = %land.lhs.true222, %land.lhs.true230, %land.lhs.true213, %land.lhs.true208, %if.else201
  %52 = load %struct.df*, %struct.df** @df, align 8, !dbg !4741
  %def_regs248 = getelementptr inbounds %struct.df, %struct.df* %52, i64 0, i32 5, !dbg !4741
  %53 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs248, align 8, !dbg !4741
  %arrayidx250 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %53, i64 %idxprom203, !dbg !4741
  %54 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx250, align 8, !dbg !4741
  %n_refs251 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %54, i64 0, i32 1, !dbg !4741
  %55 = load i32, i32* %n_refs251, align 8, !dbg !4741
  %cmp252 = icmp eq i32 %55, 1, !dbg !4743
  br i1 %cmp252, label %land.lhs.true254, label %for.inc, !dbg !4744

land.lhs.true254:                                 ; preds = %if.else247
  %call255 = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %27, i8 zeroext 1) #6, !dbg !4745
  %tobool256 = icmp eq i8 %call255, 0, !dbg !4745
  br i1 %tobool256, label %if.then257, label %for.inc, !dbg !4746

if.then257:                                       ; preds = %land.lhs.true254
  tail call fastcc void @set_reg_known_value(i32 %call143, %struct.rtx_def* %27) #7, !dbg !4747
  tail call fastcc void @set_reg_known_equiv_p(i32 %call143, i8 zeroext 0) #7, !dbg !4749
  br label %for.inc, !dbg !4750

if.else263:                                       ; preds = %lor.lhs.false36
  %cmp266 = icmp eq i32 %bf.clear, 13, !dbg !4751
  br i1 %cmp266, label %land.lhs.true268, label %for.inc, !dbg !4753

land.lhs.true268:                                 ; preds = %if.else263
  %u269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !4754
  %56 = getelementptr inbounds %union.u, %union.u* %u269, i64 1, i32 0, i32 0, i64 0, !dbg !4754
  %rt_int = bitcast %union.rtunion_def* %56 to i32*, !dbg !4754
  %57 = load i32, i32* %rt_int, align 8, !dbg !4754
  %cmp272 = icmp eq i32 %57, 4, !dbg !4755
  br i1 %cmp272, label %if.then274, label %for.inc, !dbg !4756

if.then274:                                       ; preds = %land.lhs.true268
  store i1 false, i1* @copying_arguments, align 1, !dbg !4757
  br label %for.inc, !dbg !4758

for.inc:                                          ; preds = %land.lhs.true, %land.lhs.true254, %cond.end117, %if.then190, %if.else247, %if.then257, %if.then239, %land.lhs.true130, %land.lhs.true121, %if.then274, %land.lhs.true268, %if.else263
  %58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4759
  %rt_rtx280 = bitcast %union.rtunion_def* %58 to %struct.rtx_def**, !dbg !4759
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx280, align 8, !dbg !4759
  call void @llvm.dbg.value(metadata %struct.rtx_def* %59, metadata !4604, metadata !DIExpression()), !dbg !4619
  br label %for.cond, !dbg !4760, !llvm.loop !4761

for.end:                                          ; preds = %for.cond
  %call281 = tail call i32 @max_reg_num() #6, !dbg !4763
  %cmp282 = icmp eq i32 %call, %call281, !dbg !4763
  br i1 %cmp282, label %cond.end286, label %cond.true284, !dbg !4763

cond.true284:                                     ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2760, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4763
  br label %cond.end286, !dbg !4763

cond.end286:                                      ; preds = %for.end, %cond.true284
  call void @llvm.dbg.value(metadata i32 0, metadata !4603, metadata !DIExpression()), !dbg !4619
  %wide.trip.count = zext i32 %call to i64, !dbg !4764
  br label %for.cond288, !dbg !4767

for.cond288:                                      ; preds = %for.inc330, %cond.end286
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc330 ], [ 0, %cond.end286 ], !dbg !4768
  %changed.0 = phi i32 [ %changed.1, %for.inc330 ], [ 0, %cond.end286 ], !dbg !4769
  call void @llvm.dbg.value(metadata i32 %changed.0, metadata !4600, metadata !DIExpression()), !dbg !4619
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !4603, metadata !DIExpression()), !dbg !4619
  %exitcond = icmp eq i64 %indvars.iv3, %wide.trip.count, !dbg !4764
  br i1 %exitcond, label %do.cond332, label %for.body291, !dbg !4770

for.body291:                                      ; preds = %for.cond288
  %60 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4771
  %arrayidx293 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %60, i64 %indvars.iv3, !dbg !4771
  %61 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx293, align 8, !dbg !4771
  %tobool294 = icmp eq %struct.rtx_def* %61, null, !dbg !4771
  br i1 %tobool294, label %for.inc330, label %land.lhs.true295, !dbg !4774

land.lhs.true295:                                 ; preds = %for.body291
  %62 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !4775
  %base300 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %62, i64 0, i32 0, !dbg !4775
  %63 = trunc i64 %indvars.iv3 to i32, !dbg !4775
  %call304 = tail call fastcc %struct.rtx_def* @VEC_rtx_base_index(%struct.VEC_rtx_base* %base300, i32 %63) #7, !dbg !4775
  %cmp305 = icmp eq %struct.rtx_def* %61, %call304, !dbg !4776
  br i1 %cmp305, label %for.inc330, label %land.lhs.true307, !dbg !4777

land.lhs.true307:                                 ; preds = %land.lhs.true295
  %64 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4778
  %arrayidx309 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %64, i64 %indvars.iv3, !dbg !4778
  %65 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx309, align 8, !dbg !4778
  %66 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !4779
  %base312 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %66, i64 0, i32 0, !dbg !4779
  %67 = trunc i64 %indvars.iv3 to i32, !dbg !4779
  %call316 = tail call fastcc %struct.rtx_def* @VEC_rtx_base_index(%struct.VEC_rtx_base* %base312, i32 %67) #7, !dbg !4779
  %call317 = tail call i32 @rtx_equal_p(%struct.rtx_def* %65, %struct.rtx_def* %call316) #6, !dbg !4780
  %tobool318 = icmp eq i32 %call317, 0, !dbg !4780
  br i1 %tobool318, label %if.then319, label %for.inc330, !dbg !4781

if.then319:                                       ; preds = %land.lhs.true307
  %68 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !4782
  %base322 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %68, i64 0, i32 0, !dbg !4782
  %69 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4782
  %arrayidx327 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %69, i64 %indvars.iv3, !dbg !4782
  %70 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx327, align 8, !dbg !4782
  %71 = trunc i64 %indvars.iv3 to i32, !dbg !4782
  %call328 = tail call fastcc %struct.rtx_def* @VEC_rtx_base_replace(%struct.VEC_rtx_base* %base322, i32 %71, %struct.rtx_def* %70) #7, !dbg !4782
  call void @llvm.dbg.value(metadata i32 1, metadata !4600, metadata !DIExpression()), !dbg !4619
  br label %for.inc330, !dbg !4784

for.inc330:                                       ; preds = %land.lhs.true307, %land.lhs.true295, %for.body291, %if.then319
  %changed.1 = phi i32 [ %changed.0, %land.lhs.true307 ], [ 1, %if.then319 ], [ %changed.0, %land.lhs.true295 ], [ %changed.0, %for.body291 ], !dbg !4785
  call void @llvm.dbg.value(metadata i32 %changed.1, metadata !4600, metadata !DIExpression()), !dbg !4619
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !4786
  br label %for.cond288, !dbg !4787, !llvm.loop !4788

do.cond332:                                       ; preds = %for.cond288
  %changed.0.lcssa = phi i32 [ %changed.0, %for.cond288 ], !dbg !4769
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !4600, metadata !DIExpression()), !dbg !4619
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !4600, metadata !DIExpression()), !dbg !4619
  call void @llvm.dbg.value(metadata i32 %changed.0.lcssa, metadata !4600, metadata !DIExpression()), !dbg !4619
  %tobool333 = icmp ne i32 %changed.0.lcssa, 0, !dbg !4790
  %inc334 = add nsw i32 %pass.0, 1, !dbg !4791
  %cmp335 = icmp slt i32 %inc334, 10, !dbg !4791
  %pass.1 = select i1 %tobool333, i32 %inc334, i32 %pass.0, !dbg !4791
  %72 = and i1 %tobool333, %cmp335, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %pass.1, metadata !4601, metadata !DIExpression()), !dbg !4619
  br i1 %72, label %do.body17, label %for.cond338.preheader, !dbg !4792, !llvm.loop !4793

for.cond338.preheader:                            ; preds = %do.cond332
  %73 = load i32, i32* @reg_known_value_size, align 4, !dbg !4795
  %74 = sext i32 %73 to i64, !dbg !4798
  br label %for.cond338, !dbg !4798

for.cond338:                                      ; preds = %for.cond338.preheader, %for.inc352
  %indvars.iv = phi i64 [ 0, %for.cond338.preheader ], [ %indvars.iv.next, %for.inc352 ], !dbg !4799
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4602, metadata !DIExpression()), !dbg !4619
  %cmp339 = icmp slt i64 %indvars.iv, %74, !dbg !4800
  br i1 %cmp339, label %for.body341, label %for.end354, !dbg !4798

for.body341:                                      ; preds = %for.cond338
  %75 = load %struct.rtx_def**, %struct.rtx_def*** @reg_known_value, align 8, !dbg !4801
  %arrayidx343 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %75, i64 %indvars.iv, !dbg !4801
  %76 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx343, align 8, !dbg !4801
  %cmp344 = icmp eq %struct.rtx_def* %76, null, !dbg !4803
  br i1 %cmp344, label %if.then346, label %for.inc352, !dbg !4804

if.then346:                                       ; preds = %for.body341
  %77 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !4805
  %78 = add nuw nsw i64 %indvars.iv, 53, !dbg !4806
  %arrayidx348 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %77, i64 %78, !dbg !4805
  %79 = bitcast %struct.rtx_def** %arrayidx348 to i64*, !dbg !4805
  %80 = load i64, i64* %79, align 8, !dbg !4805
  %81 = bitcast %struct.rtx_def** %arrayidx343 to i64*, !dbg !4807
  store i64 %80, i64* %81, align 8, !dbg !4807
  br label %for.inc352, !dbg !4808

for.inc352:                                       ; preds = %for.body341, %if.then346
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4809
  call void @llvm.dbg.value(metadata i32 undef, metadata !4602, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4619
  br label %for.cond338, !dbg !4810, !llvm.loop !4811

for.end354:                                       ; preds = %for.cond338
  %82 = load i8*, i8** bitcast (%struct.rtx_def*** @new_reg_base_value to i8**), align 8, !dbg !4813
  tail call void @free(i8* %82) #6, !dbg !4814
  store %struct.rtx_def** null, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4815
  %83 = load i8*, i8** @reg_seen, align 8, !dbg !4816
  tail call void @free(i8* %83) #6, !dbg !4817
  store i8* null, i8** @reg_seen, align 8, !dbg !4818
  %84 = load i8, i8* @timevar_enable, align 1, !dbg !4819
  %tobool356 = icmp eq i8 %84, 0, !dbg !4819
  br i1 %tobool356, label %do.end360, label %if.then357, !dbg !4822

if.then357:                                       ; preds = %for.end354
  tail call void @timevar_pop_1(i32 38) #6, !dbg !4819
  br label %do.end360, !dbg !4819

do.end360:                                        ; preds = %for.end354, %if.then357
  ret void, !dbg !4823
}

declare dso_local i32 @max_reg_num() local_unnamed_addr #1

declare dso_local void @timevar_push_1(i32) local_unnamed_addr #1

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #1

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_rtx_base_truncate(%struct.VEC_rtx_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !4824 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !4829, metadata !DIExpression()), !dbg !4831
  call void @llvm.dbg.value(metadata i32 0, metadata !4830, metadata !DIExpression()), !dbg !4831
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !4832
  br label %cond.true, !dbg !4832

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4832

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !4832

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !4832

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !4833
  store i32 0, i32* %num3, align 8, !dbg !4833
  br label %if.end, !dbg !4833

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !4832
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_rtx_gc_safe_grow_cleared(%struct.VEC_rtx_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !4835 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** @reg_base_value, metadata !4840, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata i32 %size_, metadata !4841, metadata !DIExpression()), !dbg !4843
  %0 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !4844
  %tobool = icmp eq %struct.VEC_rtx_gc* %0, null, !dbg !4844
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4844

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %0, i64 0, i32 0, !dbg !4844
  br label %cond.end, !dbg !4844

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4844
  %call = tail call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %cond) #7, !dbg !4844
  call void @llvm.dbg.value(metadata i32 %call, metadata !4842, metadata !DIExpression()), !dbg !4843
  tail call fastcc void @VEC_rtx_gc_safe_grow(%struct.VEC_rtx_gc** nonnull @reg_base_value, i32 %size_) #7, !dbg !4844
  %1 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !4844
  %tobool1 = icmp eq %struct.VEC_rtx_gc* %1, null, !dbg !4844
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !4844

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %1, i64 0, i32 0, !dbg !4844
  br label %cond.end5, !dbg !4844

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_rtx_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !4844
  %call7 = tail call fastcc %struct.rtx_def** @VEC_rtx_base_address(%struct.VEC_rtx_base* %cond6) #7, !dbg !4844
  %idxprom = sext i32 %call to i64, !dbg !4844
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %call7, i64 %idxprom, !dbg !4844
  %2 = bitcast %struct.rtx_def** %arrayidx to i8*, !dbg !4844
  %sub = sub nsw i32 %size_, %call, !dbg !4844
  %conv = sext i32 %sub to i64, !dbg !4844
  %mul = shl nsw i64 %conv, 3, !dbg !4844
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !4844
  ret void, !dbg !4844
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #1

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #1

declare dso_local i32 @prologue_epilogue_contains(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @record_set(%struct.rtx_def* %dest, %struct.rtx_def* %set, i8* %data) #4 !dbg !4845 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !4847, metadata !DIExpression()), !dbg !4857
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set, metadata !4848, metadata !DIExpression()), !dbg !4857
  call void @llvm.dbg.value(metadata i8* %data, metadata !4849, metadata !DIExpression()), !dbg !4857
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest, i64 0, i32 0, !dbg !4858
  %bf.load = load i32, i32* %0, align 8, !dbg !4858
  %bf.clear = and i32 %bf.load, 65535, !dbg !4858
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !4858
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !4860

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %dest) #7, !dbg !4861
  call void @llvm.dbg.value(metadata i32 %call, metadata !4850, metadata !DIExpression()), !dbg !4857
  %1 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !4862
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %1, i64 0, i32 0, !dbg !4862
  %call1 = tail call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %base) #7, !dbg !4862
  %cmp2 = icmp ult i32 %call, %call1, !dbg !4862
  br i1 %cmp2, label %cond.end5, label %cond.true3, !dbg !4862

cond.true3:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 1131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4862
  br label %cond.end5, !dbg !4862

cond.end5:                                        ; preds = %if.end, %cond.true3
  %cmp7 = icmp ult i32 %call, 53, !dbg !4863
  br i1 %cmp7, label %if.then8, label %if.end13, !dbg !4865

if.then8:                                         ; preds = %cond.end5
  %idxprom = zext i32 %call to i64, !dbg !4866
  %bf.load9 = load i32, i32* %0, align 8, !dbg !4867
  %bf.lshr = lshr i32 %bf.load9, 16, !dbg !4867
  %bf.clear10 = and i32 %bf.lshr, 255, !dbg !4867
  %idxprom11 = zext i32 %bf.clear10 to i64, !dbg !4866
  %arrayidx12 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom11, !dbg !4866
  %2 = load i8, i8* %arrayidx12, align 1, !dbg !4866
  %conv = zext i8 %2 to i32, !dbg !4866
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4852, metadata !DIExpression()), !dbg !4857
  br label %if.end13, !dbg !4868

if.end13:                                         ; preds = %cond.end5, %if.then8
  %n.0 = phi i32 [ %conv, %if.then8 ], [ 1, %cond.end5 ], !dbg !4869
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !4852, metadata !DIExpression()), !dbg !4857
  %cmp14 = icmp eq i32 %n.0, 1, !dbg !4870
  br i1 %cmp14, label %if.end24, label %while.cond.preheader, !dbg !4872

while.cond.preheader:                             ; preds = %if.end13
  %3 = zext i32 %n.0 to i64, !dbg !4873
  br label %while.cond, !dbg !4873

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %indvars.iv = phi i64 [ %3, %while.cond.preheader ], [ %indvars.iv.next, %while.body ], !dbg !4857
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4852, metadata !DIExpression()), !dbg !4857
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4875
  call void @llvm.dbg.value(metadata i32 undef, metadata !4852, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4857
  %cmp17 = icmp sgt i64 %indvars.iv, 0, !dbg !4876
  br i1 %cmp17, label %while.body, label %cleanup.cont.loopexit, !dbg !4873

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** @reg_seen, align 8, !dbg !4877
  %5 = trunc i64 %indvars.iv.next to i32, !dbg !4879
  %add = add i32 %call, %5, !dbg !4879
  %idxprom19 = zext i32 %add to i64, !dbg !4877
  %arrayidx20 = getelementptr inbounds i8, i8* %4, i64 %idxprom19, !dbg !4877
  store i8 1, i8* %arrayidx20, align 1, !dbg !4880
  %6 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4881
  %arrayidx23 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %6, i64 %idxprom19, !dbg !4881
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx23, align 8, !dbg !4882
  br label %while.cond, !dbg !4873, !llvm.loop !4883

if.end24:                                         ; preds = %if.end13
  %tobool25 = icmp eq %struct.rtx_def* %set, null, !dbg !4885
  br i1 %tobool25, label %if.else36, label %if.then26, !dbg !4887

if.then26:                                        ; preds = %if.end24
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set, i64 0, i32 0, !dbg !4888
  %bf.load27 = load i32, i32* %7, align 8, !dbg !4888
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !4888
  %cmp29 = icmp eq i32 %bf.clear28, 25, !dbg !4891
  br i1 %cmp29, label %if.then31, label %if.end34, !dbg !4892

if.then31:                                        ; preds = %if.then26
  %8 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4893
  %idxprom32 = zext i32 %call to i64, !dbg !4893
  %arrayidx33 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom32, !dbg !4893
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx33, align 8, !dbg !4895
  br label %cleanup.cont, !dbg !4896

if.end34:                                         ; preds = %if.then26
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4897
  %rt_rtx = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !4897
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4897
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !4851, metadata !DIExpression()), !dbg !4857
  %11 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4898
  %idxprom52 = zext i32 %call to i64, !dbg !4898
  %arrayidx53 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %11, i64 %idxprom52, !dbg !4898
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx53, align 8, !dbg !4898
  %cmp54 = icmp eq %struct.rtx_def* %12, null, !dbg !4899
  br i1 %cmp54, label %if.else136, label %land.lhs.true, !dbg !4900

if.else36:                                        ; preds = %if.end24
  %13 = load i8*, i8** @reg_seen, align 8, !dbg !4901
  %idxprom37 = zext i32 %call to i64, !dbg !4901
  %arrayidx38 = getelementptr inbounds i8, i8* %13, i64 %idxprom37, !dbg !4901
  %14 = load i8, i8* %arrayidx38, align 1, !dbg !4901
  %tobool39 = icmp eq i8 %14, 0, !dbg !4901
  br i1 %tobool39, label %if.end43, label %if.then40, !dbg !4904

if.then40:                                        ; preds = %if.else36
  %15 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4905
  %arrayidx42 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %15, i64 %idxprom37, !dbg !4905
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx42, align 8, !dbg !4907
  br label %cleanup.cont, !dbg !4908

if.end43:                                         ; preds = %if.else36
  store i8 1, i8* %arrayidx38, align 1, !dbg !4909
  %16 = load i32, i32* @unique_id, align 4, !dbg !4910
  %inc = add nsw i32 %16, 1, !dbg !4910
  store i32 %inc, i32* @unique_id, align 4, !dbg !4910
  %conv46 = sext i32 %16 to i64, !dbg !4910
  %call47 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv46) #6, !dbg !4910
  %call48 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 6, i32 16, %struct.rtx_def* %call47) #6, !dbg !4910
  %17 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4911
  %arrayidx50 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %17, i64 %idxprom37, !dbg !4911
  store %struct.rtx_def* %call48, %struct.rtx_def** %arrayidx50, align 8, !dbg !4912
  br label %cleanup.cont, !dbg !4913

land.lhs.true:                                    ; preds = %if.end34
  %call56 = tail call fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %10) #7, !dbg !4914
  %18 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4915
  %arrayidx58 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %18, i64 %idxprom52, !dbg !4915
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx58, align 8, !dbg !4915
  %cmp59 = icmp eq %struct.rtx_def* %call56, %19, !dbg !4916
  br i1 %cmp59, label %if.else136, label %if.then61, !dbg !4917

if.then61:                                        ; preds = %land.lhs.true
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !4918
  %bf.load62 = load i32, i32* %20, align 8, !dbg !4918
  %trunc = trunc i32 %bf.load62 to i16, !dbg !4919
  switch i16 %trunc, label %sw.default [
    i16 122, label %sw.bb
    i16 50, label %sw.bb
    i16 49, label %sw.bb81
    i16 61, label %sw.bb114
  ], !dbg !4919

sw.bb:                                            ; preds = %if.then61, %if.then61
  %arrayidx66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4920
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !4920
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx67, align 8, !dbg !4920
  %cmp68 = icmp eq %struct.rtx_def* %21, %dest, !dbg !4922
  br i1 %cmp68, label %if.end157, label %land.lhs.true70, !dbg !4923

land.lhs.true70:                                  ; preds = %sw.bb
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4924
  %rt_rtx74 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !4924
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !4924
  %cmp75 = icmp eq %struct.rtx_def* %23, %dest, !dbg !4925
  br i1 %cmp75, label %if.end157, label %if.then77, !dbg !4926

if.then77:                                        ; preds = %land.lhs.true70
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx58, align 8, !dbg !4927
  br label %if.end157, !dbg !4928

sw.bb81:                                          ; preds = %if.then61
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4853, metadata !DIExpression()), !dbg !4929
  %arrayidx84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4930
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !4930
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !4930
  %cmp86 = icmp eq %struct.rtx_def* %24, %dest, !dbg !4932
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4933
  %rt_rtx92 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !4933
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx92, align 8, !dbg !4933
  br i1 %cmp86, label %if.end106, label %if.else93, !dbg !4934

if.else93:                                        ; preds = %sw.bb81
  %cmp98 = icmp eq %struct.rtx_def* %26, %dest, !dbg !4935
  br i1 %cmp98, label %if.then100, label %if.end106, !dbg !4937

if.then100:                                       ; preds = %if.else93
  call void @llvm.dbg.value(metadata %struct.rtx_def* %24, metadata !4853, metadata !DIExpression()), !dbg !4929
  br label %if.end106, !dbg !4938

if.end106:                                        ; preds = %if.else93, %if.then100, %sw.bb81
  %other.1 = phi %struct.rtx_def* [ %26, %sw.bb81 ], [ %24, %if.then100 ], [ null, %if.else93 ], !dbg !4933
  call void @llvm.dbg.value(metadata %struct.rtx_def* %other.1, metadata !4853, metadata !DIExpression()), !dbg !4929
  %tobool107 = icmp eq %struct.rtx_def* %other.1, null, !dbg !4939
  br i1 %tobool107, label %if.then110, label %lor.lhs.false, !dbg !4941

lor.lhs.false:                                    ; preds = %if.end106
  %call108 = tail call fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* nonnull %other.1) #7, !dbg !4942
  %tobool109 = icmp eq %struct.rtx_def* %call108, null, !dbg !4942
  br i1 %tobool109, label %if.end157, label %lor.lhs.false.if.then110_crit_edge, !dbg !4943

lor.lhs.false.if.then110_crit_edge:               ; preds = %lor.lhs.false
  %.pre = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4944
  br label %if.then110, !dbg !4943

if.then110:                                       ; preds = %lor.lhs.false.if.then110_crit_edge, %if.end106
  %27 = phi %struct.rtx_def** [ %.pre, %lor.lhs.false.if.then110_crit_edge ], [ %18, %if.end106 ], !dbg !4944
  %arrayidx112 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %27, i64 %idxprom52, !dbg !4944
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx112, align 8, !dbg !4945
  br label %if.end157, !dbg !4944

sw.bb114:                                         ; preds = %if.then61
  %arrayidx117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4946
  %rt_rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**, !dbg !4946
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx118, align 8, !dbg !4946
  %cmp119 = icmp eq %struct.rtx_def* %28, %dest, !dbg !4948
  br i1 %cmp119, label %lor.lhs.false121, label %if.then130, !dbg !4949

lor.lhs.false121:                                 ; preds = %sw.bb114
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4950
  %30 = bitcast %union.rtunion_def* %29 to i32**, !dbg !4950
  %31 = load i32*, i32** %30, align 8, !dbg !4950
  %bf.load126 = load i32, i32* %31, align 8, !dbg !4950
  %bf.clear127 = and i32 %bf.load126, 65535, !dbg !4950
  %cmp128 = icmp eq i32 %bf.clear127, 30, !dbg !4950
  br i1 %cmp128, label %if.end157, label %if.then130, !dbg !4951

if.then130:                                       ; preds = %sw.bb114, %lor.lhs.false121
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx58, align 8, !dbg !4952
  br label %if.end157, !dbg !4953

sw.default:                                       ; preds = %if.then61
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx58, align 8, !dbg !4954
  br label %if.end157, !dbg !4955

if.else136:                                       ; preds = %land.lhs.true, %if.end34
  %32 = phi %struct.rtx_def* [ %call56, %land.lhs.true ], [ null, %if.end34 ]
  %cmp137 = icmp ugt i32 %call, 52, !dbg !4956
  br i1 %cmp137, label %land.lhs.true143, label %lor.lhs.false139, !dbg !4958

lor.lhs.false139:                                 ; preds = %if.else136
  %arrayidx141 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom52, !dbg !4959
  %33 = load i8, i8* %arrayidx141, align 1, !dbg !4959
  %tobool142 = icmp eq i8 %33, 0, !dbg !4959
  br i1 %tobool142, label %land.lhs.true143, label %if.end157, !dbg !4960

land.lhs.true143:                                 ; preds = %lor.lhs.false139, %if.else136
  %34 = load i8*, i8** @reg_seen, align 8, !dbg !4961
  %arrayidx145 = getelementptr inbounds i8, i8* %34, i64 %idxprom52, !dbg !4961
  %35 = load i8, i8* %arrayidx145, align 1, !dbg !4961
  %tobool146 = icmp eq i8 %35, 0, !dbg !4961
  br i1 %tobool146, label %land.lhs.true147, label %if.end157, !dbg !4962

land.lhs.true147:                                 ; preds = %land.lhs.true143
  %cmp150 = icmp eq %struct.rtx_def* %32, null, !dbg !4963
  br i1 %cmp150, label %if.then152, label %if.end157, !dbg !4964

if.then152:                                       ; preds = %land.lhs.true147
  %call153 = tail call fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %10) #7, !dbg !4965
  %36 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !4966
  %arrayidx155 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %36, i64 %idxprom52, !dbg !4966
  store %struct.rtx_def* %call153, %struct.rtx_def** %arrayidx155, align 8, !dbg !4967
  br label %if.end157, !dbg !4966

if.end157:                                        ; preds = %land.lhs.true70, %sw.bb, %lor.lhs.false, %land.lhs.true143, %lor.lhs.false139, %land.lhs.true147, %if.then152, %sw.default, %if.then77, %if.then110, %if.then130, %lor.lhs.false121
  %37 = load i8*, i8** @reg_seen, align 8, !dbg !4968
  %arrayidx159 = getelementptr inbounds i8, i8* %37, i64 %idxprom52, !dbg !4968
  store i8 1, i8* %arrayidx159, align 1, !dbg !4969
  br label %cleanup.cont, !dbg !4970

cleanup.cont.loopexit:                            ; preds = %while.cond
  br label %cleanup.cont, !dbg !4970

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.then31, %if.then40, %if.end43, %if.end157, %entry
  ret void, !dbg !4970
}

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @rtx_varies_p(%struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @set_reg_known_value(i32 %regno, %struct.rtx_def* %val) unnamed_addr #4 !dbg !4971 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !4975, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata %struct.rtx_def* %val, metadata !4976, metadata !DIExpression()), !dbg !4977
  %cmp = icmp ugt i32 %regno, 52, !dbg !4978
  br i1 %cmp, label %if.then, label %if.end3, !dbg !4980

if.then:                                          ; preds = %entry
  %sub = add i32 %regno, -53, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %sub, metadata !4975, metadata !DIExpression()), !dbg !4977
  %0 = load i32, i32* @reg_known_value_size, align 4, !dbg !4983
  %cmp1 = icmp ult i32 %sub, %0, !dbg !4985
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4986

if.then2:                                         ; preds = %if.then
  %1 = load %struct.rtx_def**, %struct.rtx_def*** @reg_known_value, align 8, !dbg !4987
  %idxprom = zext i32 %sub to i64, !dbg !4987
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %idxprom, !dbg !4987
  store %struct.rtx_def* %val, %struct.rtx_def** %arrayidx, align 8, !dbg !4988
  br label %if.end3, !dbg !4987

if.end3:                                          ; preds = %if.then, %if.then2, %entry
  ret void, !dbg !4989
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_reg_known_equiv_p(i32 %regno, i8 zeroext %val) unnamed_addr #4 !dbg !4990 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !4994, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i8 %val, metadata !4995, metadata !DIExpression()), !dbg !4996
  %cmp = icmp ugt i32 %regno, 52, !dbg !4997
  br i1 %cmp, label %if.then, label %if.end3, !dbg !4999

if.then:                                          ; preds = %entry
  %sub = add i32 %regno, -53, !dbg !5000
  call void @llvm.dbg.value(metadata i32 %sub, metadata !4994, metadata !DIExpression()), !dbg !4996
  %0 = load i32, i32* @reg_known_value_size, align 4, !dbg !5002
  %cmp1 = icmp ult i32 %sub, %0, !dbg !5004
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5005

if.then2:                                         ; preds = %if.then
  %1 = load i8*, i8** @reg_known_equiv_p, align 8, !dbg !5006
  %idxprom = zext i32 %sub to i64, !dbg !5006
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !5006
  store i8 %val, i8* %arrayidx, align 1, !dbg !5007
  br label %if.end3, !dbg !5006

if.end3:                                          ; preds = %if.then, %if.then2, %entry
  ret void, !dbg !5008
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @VEC_rtx_base_replace(%struct.VEC_rtx_base* %vec_, i32 %ix_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !5009 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !5013, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5014, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !5015, metadata !DIExpression()), !dbg !5017
  %idxprom = zext i32 %ix_ to i64, !dbg !5018
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5018
  %0 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !5018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5016, metadata !DIExpression()), !dbg !5017
  store %struct.rtx_def* %obj_, %struct.rtx_def** %arrayidx, align 8, !dbg !5018
  ret %struct.rtx_def* %0, !dbg !5018
}

declare dso_local void @free(i8*) local_unnamed_addr #1

declare dso_local void @timevar_pop_1(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @end_alias_analysis() local_unnamed_addr #4 !dbg !5019 {
entry:
  %0 = load i64, i64* bitcast (%struct.VEC_rtx_gc** @reg_base_value to i64*), align 8, !dbg !5020
  store i64 %0, i64* bitcast (%struct.VEC_rtx_gc** @old_reg_base_value to i64*), align 8, !dbg !5021
  %1 = load i8*, i8** bitcast (%struct.rtx_def*** @reg_known_value to i8**), align 8, !dbg !5022
  tail call void @ggc_free(i8* %1) #6, !dbg !5023
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_known_value, align 8, !dbg !5024
  store i32 0, i32* @reg_known_value_size, align 4, !dbg !5025
  %2 = load i8*, i8** @reg_known_equiv_p, align 8, !dbg !5026
  tail call void @free(i8* %2) #6, !dbg !5027
  store i8* null, i8** @reg_known_equiv_p, align 8, !dbg !5028
  ret void, !dbg !5029
}

declare dso_local void @ggc_free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_VEC_alias_set_entry_gc(i8* %x_p) #4 !dbg !5030 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5032, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5033, metadata !DIExpression()), !dbg !5040
  %cmp = icmp ne i8* %x_p, null, !dbg !5041
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !5041
  %or.cond = and i1 %cmp, %cmp1, !dbg !5041
  br i1 %or.cond, label %land.lhs.true2, label %if.end12, !dbg !5041

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !5041
  %tobool = icmp eq i32 %call, 0, !dbg !5041
  br i1 %tobool, label %if.then, label %if.end12, !dbg !5042

if.then:                                          ; preds = %land.lhs.true2
  %num = bitcast i8* %x_p to i32*, !dbg !5043
  %0 = load i32, i32* %num, align 8, !dbg !5043
  %conv = zext i32 %0 to i64, !dbg !5044
  call void @llvm.dbg.value(metadata i64 %conv, metadata !5039, metadata !DIExpression()), !dbg !5045
  call void @llvm.dbg.value(metadata i64 0, metadata !5035, metadata !DIExpression()), !dbg !5045
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !5046
  %1 = bitcast i8* %vec to [1 x %struct.alias_set_entry_d*]*, !dbg !5046
  br label %for.cond, !dbg !5052

for.cond:                                         ; preds = %for.inc, %if.then
  %i0.0 = phi i64 [ 0, %if.then ], [ %inc, %for.inc ], !dbg !5053
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !5035, metadata !DIExpression()), !dbg !5045
  %cmp3 = icmp eq i64 %i0.0, %conv, !dbg !5054
  br i1 %cmp3, label %if.end12.loopexit, label %do.body, !dbg !5055

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds [1 x %struct.alias_set_entry_d*], [1 x %struct.alias_set_entry_d*]* %1, i64 0, i64 %i0.0, !dbg !5056
  %2 = load %struct.alias_set_entry_d*, %struct.alias_set_entry_d** %arrayidx, align 8, !dbg !5056
  %cmp6 = icmp eq %struct.alias_set_entry_d* %2, null, !dbg !5056
  br i1 %cmp6, label %for.inc, label %if.then8, !dbg !5057

if.then8:                                         ; preds = %do.body
  %3 = bitcast %struct.alias_set_entry_d* %2 to i8*, !dbg !5057
  tail call void @gt_ggc_mx_alias_set_entry_d(i8* nonnull %3) #7, !dbg !5056
  br label %for.inc, !dbg !5056

for.inc:                                          ; preds = %do.body, %if.then8
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !5058
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5035, metadata !DIExpression()), !dbg !5045
  br label %for.cond, !dbg !5059, !llvm.loop !5060

if.end12.loopexit:                                ; preds = %for.cond
  br label %if.end12, !dbg !5062

if.end12:                                         ; preds = %if.end12.loopexit, %land.lhs.true2, %entry
  ret void, !dbg !5062
}

declare dso_local i32 @ggc_set_mark(i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_alias_set_entry_d(i8* %x_p) local_unnamed_addr #4 !dbg !5063 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5065, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5066, metadata !DIExpression()), !dbg !5068
  %cmp = icmp ne i8* %x_p, null, !dbg !5069
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !5069
  %or.cond = and i1 %cmp, %cmp1, !dbg !5069
  br i1 %or.cond, label %land.lhs.true2, label %if.end, !dbg !5069

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !5069
  %tobool = icmp eq i32 %call, 0, !dbg !5069
  br i1 %tobool, label %if.then, label %if.end, !dbg !5071

if.then:                                          ; preds = %land.lhs.true2
  %children = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !5072
  %0 = bitcast i8* %children to i8**, !dbg !5072
  %1 = load i8*, i8** %0, align 8, !dbg !5072
  tail call void @gt_ggc_m_II12splay_tree_s(i8* %1) #6, !dbg !5074
  br label %if.end, !dbg !5075

if.end:                                           ; preds = %land.lhs.true2, %if.then, %entry
  ret void, !dbg !5076
}

declare dso_local void @gt_ggc_m_II12splay_tree_s(i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_VEC_alias_set_entry_gc(i8* %x_p) #4 !dbg !5077 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5079, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5080, metadata !DIExpression()), !dbg !5086
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_22VEC_alias_set_entry_gc, i32 93) #6, !dbg !5087
  %tobool = icmp eq i32 %call, 0, !dbg !5087
  br i1 %tobool, label %if.end9, label %if.then, !dbg !5088

if.then:                                          ; preds = %entry
  %num = bitcast i8* %x_p to i32*, !dbg !5089
  %0 = load i32, i32* %num, align 8, !dbg !5089
  %conv = zext i32 %0 to i64, !dbg !5090
  call void @llvm.dbg.value(metadata i64 %conv, metadata !5085, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata i64 0, metadata !5081, metadata !DIExpression()), !dbg !5091
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !5092
  %1 = bitcast i8* %vec to [1 x %struct.alias_set_entry_d*]*, !dbg !5092
  br label %for.cond, !dbg !5098

for.cond:                                         ; preds = %for.inc, %if.then
  %i0.0 = phi i64 [ 0, %if.then ], [ %inc, %for.inc ], !dbg !5099
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !5081, metadata !DIExpression()), !dbg !5091
  %cmp = icmp eq i64 %i0.0, %conv, !dbg !5100
  br i1 %cmp, label %if.end9.loopexit, label %do.body, !dbg !5101

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds [1 x %struct.alias_set_entry_d*], [1 x %struct.alias_set_entry_d*]* %1, i64 0, i64 %i0.0, !dbg !5102
  %2 = load %struct.alias_set_entry_d*, %struct.alias_set_entry_d** %arrayidx, align 8, !dbg !5102
  %cmp3 = icmp eq %struct.alias_set_entry_d* %2, null, !dbg !5102
  br i1 %cmp3, label %for.inc, label %if.then5, !dbg !5103

if.then5:                                         ; preds = %do.body
  %3 = bitcast %struct.alias_set_entry_d* %2 to i8*, !dbg !5103
  tail call void @gt_pch_nx_alias_set_entry_d(i8* nonnull %3) #7, !dbg !5102
  br label %for.inc, !dbg !5102

for.inc:                                          ; preds = %do.body, %if.then5
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !5104
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5081, metadata !DIExpression()), !dbg !5091
  br label %for.cond, !dbg !5105, !llvm.loop !5106

if.end9.loopexit:                                 ; preds = %for.cond
  br label %if.end9, !dbg !5108

if.end9:                                          ; preds = %if.end9.loopexit, %entry
  ret void, !dbg !5108
}

declare dso_local i32 @gt_pch_note_object(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_22VEC_alias_set_entry_gc(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #4 !dbg !5109 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !5114, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5115, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !5116, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !5117, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5118, metadata !DIExpression()), !dbg !5122
  %num = bitcast i8* %x_p to i32*, !dbg !5123
  %0 = load i32, i32* %num, align 8, !dbg !5123
  %conv = zext i32 %0 to i64, !dbg !5124
  call void @llvm.dbg.value(metadata i64 %conv, metadata !5121, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i64 0, metadata !5119, metadata !DIExpression()), !dbg !5125
  %cmp2 = icmp eq i8* %x_p, %this_obj, !dbg !5126
  %vec = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !5126
  %1 = bitcast i8* %vec to [1 x %struct.alias_set_entry_d*]*, !dbg !5126
  br i1 %cmp2, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !5131

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.end.us-lcssa, !dbg !5131

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !5131

for.cond.us:                                      ; preds = %for.body.us, %entry.split.us
  %i0.0.us = phi i64 [ 0, %entry.split.us ], [ %inc.us, %for.body.us ], !dbg !5132
  call void @llvm.dbg.value(metadata i64 %i0.0.us, metadata !5119, metadata !DIExpression()), !dbg !5125
  %cmp.us = icmp eq i64 %i0.0.us, %conv, !dbg !5133
  br i1 %cmp.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !5134

for.body.us:                                      ; preds = %for.cond.us
  %arrayidx.us = getelementptr inbounds [1 x %struct.alias_set_entry_d*], [1 x %struct.alias_set_entry_d*]* %1, i64 0, i64 %i0.0.us, !dbg !5135
  %2 = bitcast %struct.alias_set_entry_d** %arrayidx.us to i8*, !dbg !5136
  tail call void %op(i8* nonnull %2, i8* %cookie) #6, !dbg !5137
  %inc.us = add nuw nsw i64 %i0.0.us, 1, !dbg !5138
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !5119, metadata !DIExpression()), !dbg !5125
  br label %for.cond.us, !dbg !5139, !llvm.loop !5140

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !5142

for.end.us-lcssa:                                 ; preds = %entry.entry.split_crit_edge
  call void @llvm.dbg.value(metadata i32 undef, metadata !5119, metadata !DIExpression()), !dbg !5125
  br label %for.end, !dbg !5142

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  ret void, !dbg !5142
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_alias_set_entry_d(i8* %x_p) local_unnamed_addr #4 !dbg !5143 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5145, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5146, metadata !DIExpression()), !dbg !5147
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_17alias_set_entry_d, i32 94) #6, !dbg !5148
  %tobool = icmp eq i32 %call, 0, !dbg !5148
  br i1 %tobool, label %if.end, label %if.then, !dbg !5150

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5146, metadata !DIExpression()), !dbg !5147
  %children = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !5151
  %0 = bitcast i8* %children to i8**, !dbg !5151
  %1 = load i8*, i8** %0, align 8, !dbg !5151
  tail call void @gt_pch_n_II12splay_tree_s(i8* %1) #6, !dbg !5153
  br label %if.end, !dbg !5154

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !5155
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_17alias_set_entry_d(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #4 !dbg !5156 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !5158, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5159, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !5160, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !5161, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5162, metadata !DIExpression()), !dbg !5163
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !5164
  br i1 %cmp, label %if.then, label %if.end, !dbg !5166

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5162, metadata !DIExpression()), !dbg !5163
  %children = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !5167
  tail call void %op(i8* nonnull %children, i8* %cookie) #6, !dbg !5168
  br label %if.end, !dbg !5168

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5169
}

declare dso_local void @gt_pch_n_II12splay_tree_s(i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @gt_ggc_ma_reg_known_value(i8* %x_p) #4 !dbg !5170 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5172, metadata !DIExpression()), !dbg !5179
  %0 = load %struct.rtx_def**, %struct.rtx_def*** @reg_known_value, align 8, !dbg !5180
  %cmp = icmp eq %struct.rtx_def** %0, null, !dbg !5181
  br i1 %cmp, label %if.end16, label %for.cond.preheader, !dbg !5182

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5183

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi %struct.rtx_def** [ %.pre, %for.inc ], [ %0, %for.cond.preheader ]
  %1 = phi %struct.rtx_def** [ %.pre, %for.inc ], [ %0, %for.cond.preheader ], !dbg !5185
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5186
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !5173, metadata !DIExpression()), !dbg !5185
  %2 = load i32, i32* @reg_known_value_size, align 4, !dbg !5187
  %conv = zext i32 %2 to i64, !dbg !5189
  %cmp1 = icmp eq i64 %i0.0, %conv, !dbg !5190
  br i1 %cmp1, label %do.body7, label %do.body, !dbg !5183

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %i0.0, !dbg !5191
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !5191
  %cmp3 = icmp eq %struct.rtx_def* %3, null, !dbg !5191
  br i1 %cmp3, label %for.inc, label %if.then5, !dbg !5195

if.then5:                                         ; preds = %do.body
  %4 = bitcast %struct.rtx_def* %3 to i8*, !dbg !5195
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %4) #6, !dbg !5191
  %.pre.pre = load %struct.rtx_def**, %struct.rtx_def*** @reg_known_value, align 8, !dbg !5185
  br label %for.inc, !dbg !5191

for.inc:                                          ; preds = %do.body, %if.then5
  %.pre = phi %struct.rtx_def** [ %.pre1, %do.body ], [ %.pre.pre, %if.then5 ], !dbg !5185
  %inc = add i64 %i0.0, 1, !dbg !5196
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5173, metadata !DIExpression()), !dbg !5185
  br label %for.cond, !dbg !5197, !llvm.loop !5198

do.body7:                                         ; preds = %for.cond
  %.lcssa = phi %struct.rtx_def** [ %1, %for.cond ], !dbg !5185
  call void @llvm.dbg.value(metadata %struct.rtx_def** %.lcssa, metadata !5176, metadata !DIExpression()), !dbg !5200
  %switch = icmp ult %struct.rtx_def** %.lcssa, inttoptr (i64 2 to %struct.rtx_def**), !dbg !5201
  br i1 %switch, label %if.end16, label %if.then12, !dbg !5201

if.then12:                                        ; preds = %do.body7
  %5 = bitcast %struct.rtx_def** %.lcssa to i8*, !dbg !5203
  call void @llvm.dbg.value(metadata i8* %5, metadata !5176, metadata !DIExpression()), !dbg !5200
  %call = tail call i32 @ggc_set_mark(i8* %5) #6, !dbg !5201
  br label %if.end16, !dbg !5201

if.end16:                                         ; preds = %entry, %do.body7, %if.then12
  ret void, !dbg !5204
}

; Function Attrs: nounwind uwtable
define internal void @gt_pch_na_reg_known_value(i8* %x_p) #4 !dbg !5205 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5207, metadata !DIExpression()), !dbg !5211
  %0 = load %struct.rtx_def**, %struct.rtx_def*** @reg_known_value, align 8, !dbg !5212
  %cmp = icmp eq %struct.rtx_def** %0, null, !dbg !5213
  br i1 %cmp, label %if.end7, label %for.cond.preheader, !dbg !5214

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5215

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi %struct.rtx_def** [ %.pre, %for.inc ], [ %0, %for.cond.preheader ]
  %1 = phi %struct.rtx_def** [ %.pre, %for.inc ], [ %0, %for.cond.preheader ], !dbg !5217
  %i1.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5218
  call void @llvm.dbg.value(metadata i64 %i1.0, metadata !5208, metadata !DIExpression()), !dbg !5217
  %2 = load i32, i32* @reg_known_value_size, align 4, !dbg !5219
  %conv = zext i32 %2 to i64, !dbg !5221
  %cmp1 = icmp eq i64 %i1.0, %conv, !dbg !5222
  br i1 %cmp1, label %for.end, label %do.body, !dbg !5215

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %i1.0, !dbg !5223
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !5223
  %cmp3 = icmp eq %struct.rtx_def* %3, null, !dbg !5223
  br i1 %cmp3, label %for.inc, label %if.then5, !dbg !5227

if.then5:                                         ; preds = %do.body
  %4 = bitcast %struct.rtx_def* %3 to i8*, !dbg !5227
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %4) #6, !dbg !5223
  %.pre.pre = load %struct.rtx_def**, %struct.rtx_def*** @reg_known_value, align 8, !dbg !5217
  br label %for.inc, !dbg !5223

for.inc:                                          ; preds = %do.body, %if.then5
  %.pre = phi %struct.rtx_def** [ %.pre1, %do.body ], [ %.pre.pre, %if.then5 ], !dbg !5217
  %inc = add i64 %i1.0, 1, !dbg !5228
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5208, metadata !DIExpression()), !dbg !5217
  br label %for.cond, !dbg !5229, !llvm.loop !5230

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.rtx_def** [ %1, %for.cond ], !dbg !5217
  %5 = bitcast %struct.rtx_def** %.lcssa to i8*, !dbg !5232
  %call = tail call i32 @gt_pch_note_object(i8* %5, i8* bitcast (%struct.rtx_def*** @reg_known_value to i8*), void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_pa_reg_known_value, i32 217) #6, !dbg !5233
  br label %if.end7, !dbg !5234

if.end7:                                          ; preds = %entry, %for.end
  ret void, !dbg !5235
}

declare dso_local void @gt_ggc_mx_rtx_def(i8*) #1

declare dso_local void @gt_pch_nx_rtx_def(i8*) #1

declare dso_local void @gt_ggc_mx_VEC_rtx_gc(i8*) #1

declare dso_local void @gt_pch_nx_VEC_rtx_gc(i8*) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.alias_set_entry_d* @VEC_alias_set_entry_base_index(%struct.VEC_alias_set_entry_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5236 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_set_entry_base* %vec_, metadata !5240, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5241, metadata !DIExpression()), !dbg !5242
  br label %land.end, !dbg !5243

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5243
  %arrayidx = getelementptr inbounds %struct.VEC_alias_set_entry_base, %struct.VEC_alias_set_entry_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5243
  %0 = load %struct.alias_set_entry_d*, %struct.alias_set_entry_d** %arrayidx, align 8, !dbg !5243
  ret %struct.alias_set_entry_d* %0, !dbg !5243
}

; Function Attrs: nounwind uwtable
define internal i32 @walk_mems_2(%struct.rtx_def** %x, %struct.rtx_def* %mem) #4 !dbg !5244 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %x, metadata !5248, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !5249, metadata !DIExpression()), !dbg !5250
  %0 = bitcast %struct.rtx_def** %x to i32**, !dbg !5251
  %1 = load i32*, i32** %0, align 8, !dbg !5251
  %bf.load = load i32, i32* %1, align 8, !dbg !5251
  %bf.clear = and i32 %bf.load, 65535, !dbg !5251
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !5251
  br i1 %cmp, label %if.then, label %return, !dbg !5253

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds i32, i32* %1, i64 4, !dbg !5254
  %rt_mem = bitcast i32* %2 to %struct.mem_attrs**, !dbg !5254
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5254
  %cmp1 = icmp eq %struct.mem_attrs* %3, null, !dbg !5254
  br i1 %cmp1, label %cond.end, label %cond.false, !dbg !5254

cond.false:                                       ; preds = %if.then
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i64 0, i32 3, !dbg !5254
  %4 = load i32, i32* %alias, align 8, !dbg !5254
  br label %cond.end, !dbg !5254

cond.end:                                         ; preds = %if.then, %cond.false
  %cond = phi i32 [ %4, %cond.false ], [ 0, %if.then ], !dbg !5254
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5257
  %rt_mem9 = bitcast %union.rtunion_def* %5 to %struct.mem_attrs**, !dbg !5257
  %6 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem9, align 8, !dbg !5257
  %cmp10 = icmp eq %struct.mem_attrs* %6, null, !dbg !5257
  br i1 %cmp10, label %cond.end18, label %cond.false12, !dbg !5257

cond.false12:                                     ; preds = %cond.end
  %alias17 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %6, i64 0, i32 3, !dbg !5257
  %7 = load i32, i32* %alias17, align 8, !dbg !5257
  br label %cond.end18, !dbg !5257

cond.end18:                                       ; preds = %cond.end, %cond.false12
  %cond19 = phi i32 [ %7, %cond.false12 ], [ 0, %cond.end ], !dbg !5257
  %call = tail call i32 @alias_sets_conflict_p(i32 %cond, i32 %cond19) #7, !dbg !5258
  %tobool = icmp eq i32 %call, 0, !dbg !5258
  %. = select i1 %tobool, i32 -1, i32 1, !dbg !5259
  br label %return, !dbg !5259

return:                                           ; preds = %entry, %cond.end18
  %retval.0 = phi i32 [ %., %cond.end18 ], [ 0, %entry ], !dbg !5250
  ret i32 %retval.0, !dbg !5260
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alias_set_entry_gc_reserve(%struct.VEC_alias_set_entry_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5261 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_set_entry_gc** @alias_sets, metadata !5265, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.value(metadata i32 1, metadata !5266, metadata !DIExpression()), !dbg !5268
  %0 = load %struct.VEC_alias_set_entry_gc*, %struct.VEC_alias_set_entry_gc** @alias_sets, align 8, !dbg !5269
  %tobool = icmp eq %struct.VEC_alias_set_entry_gc* %0, null, !dbg !5269
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5269

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_alias_set_entry_gc, %struct.VEC_alias_set_entry_gc* %0, i64 0, i32 0, !dbg !5269
  br label %cond.end, !dbg !5269

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_alias_set_entry_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5269
  %call = tail call fastcc i32 @VEC_alias_set_entry_base_space(%struct.VEC_alias_set_entry_base* %cond, i32 1) #7, !dbg !5269
  %tobool1 = icmp eq i32 %call, 0, !dbg !5269
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5269
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5267, metadata !DIExpression()), !dbg !5268
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5269

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_alias_set_entry_gc** @alias_sets to i8**), align 8, !dbg !5270
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %1, i32 1) #6, !dbg !5270
  store i8* %call3, i8** bitcast (%struct.VEC_alias_set_entry_gc** @alias_sets to i8**), align 8, !dbg !5270
  br label %if.end, !dbg !5270

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5269
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.alias_set_entry_d** @VEC_alias_set_entry_base_quick_push(%struct.VEC_alias_set_entry_base* %vec_, %struct.alias_set_entry_d* %obj_) unnamed_addr #0 !dbg !5272 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_set_entry_base* %vec_, metadata !5276, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d* null, metadata !5277, metadata !DIExpression()), !dbg !5279
  %num1 = getelementptr inbounds %struct.VEC_alias_set_entry_base, %struct.VEC_alias_set_entry_base* %vec_, i64 0, i32 0, !dbg !5280
  %0 = load i32, i32* %num1, align 8, !dbg !5280
  %inc = add i32 %0, 1, !dbg !5280
  store i32 %inc, i32* %num1, align 8, !dbg !5280
  %idxprom = zext i32 %0 to i64, !dbg !5280
  %arrayidx = getelementptr inbounds %struct.VEC_alias_set_entry_base, %struct.VEC_alias_set_entry_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5280
  call void @llvm.dbg.value(metadata %struct.alias_set_entry_d** %arrayidx, metadata !5278, metadata !DIExpression()), !dbg !5279
  store %struct.alias_set_entry_d* null, %struct.alias_set_entry_d** %arrayidx, align 8, !dbg !5280
  ret %struct.alias_set_entry_d** %arrayidx, !dbg !5280
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alias_set_entry_base_space(%struct.VEC_alias_set_entry_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5281 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_set_entry_base* %vec_, metadata !5285, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata i32 1, metadata !5286, metadata !DIExpression()), !dbg !5287
  %tobool = icmp eq %struct.VEC_alias_set_entry_base* %vec_, null, !dbg !5288
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5288

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_alias_set_entry_base, %struct.VEC_alias_set_entry_base* %vec_, i64 0, i32 1, !dbg !5288
  %0 = load i32, i32* %alloc, align 4, !dbg !5288
  %num = getelementptr inbounds %struct.VEC_alias_set_entry_base, %struct.VEC_alias_set_entry_base* %vec_, i64 0, i32 0, !dbg !5288
  %1 = load i32, i32* %num, align 8, !dbg !5288
  %cmp1 = icmp ne i32 %0, %1, !dbg !5288
  %phitmp = zext i1 %cmp1 to i32, !dbg !5288
  br label %cond.end, !dbg !5288

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5288

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5288
}

declare dso_local i8* @vec_gc_p_reserve(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #5

declare dso_local %union.tree_node* @component_ref_field_offset(%union.tree_node*) local_unnamed_addr #1

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #1

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @addr_side_effect_eval(%struct.rtx_def* %addr, i32 %size, i32 %n_refs) unnamed_addr #4 !dbg !5289 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !5293, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata i32 %size, metadata !5294, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata i32 0, metadata !5295, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata i32 0, metadata !5296, metadata !DIExpression()), !dbg !5297
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 0, !dbg !5298
  %bf.load = load i32, i32* %0, align 8, !dbg !5298
  %trunc = trunc i32 %bf.load to i16, !dbg !5299
  switch i16 %trunc, label %cleanup [
    i16 75, label %sw.bb
    i16 74, label %sw.bb1
    i16 77, label %sw.bb4
    i16 76, label %sw.bb6
  ], !dbg !5299

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %size, metadata !5296, metadata !DIExpression()), !dbg !5297
  br label %sw.epilog, !dbg !5300

sw.bb1:                                           ; preds = %entry
  %mul3 = sub nsw i32 0, %size, !dbg !5302
  call void @llvm.dbg.value(metadata i32 %mul3, metadata !5296, metadata !DIExpression()), !dbg !5297
  br label %sw.epilog, !dbg !5303

sw.bb4:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !5296, metadata !DIExpression()), !dbg !5297
  br label %sw.epilog, !dbg !5304

sw.bb6:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !5296, metadata !DIExpression()), !dbg !5297
  br label %sw.epilog, !dbg !5305

sw.epilog:                                        ; preds = %sw.bb6, %sw.bb4, %sw.bb1, %sw.bb
  %offset.0 = phi i32 [ 0, %sw.bb6 ], [ 0, %sw.bb4 ], [ %mul3, %sw.bb1 ], [ %size, %sw.bb ], !dbg !5306
  call void @llvm.dbg.value(metadata i32 %offset.0, metadata !5296, metadata !DIExpression()), !dbg !5297
  %tobool = icmp eq i32 %offset.0, 0, !dbg !5307
  br i1 %tobool, label %if.else, label %if.then, !dbg !5309

if.then:                                          ; preds = %sw.epilog
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5310
  %bf.clear10 = and i32 %bf.lshr, 255, !dbg !5310
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5310
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5310
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5310
  %conv = sext i32 %offset.0 to i64, !dbg !5310
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #6, !dbg !5310
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %bf.clear10, %struct.rtx_def* %1, %struct.rtx_def* %call) #6, !dbg !5310
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call11, metadata !5293, metadata !DIExpression()), !dbg !5297
  br label %if.end, !dbg !5311

if.else:                                          ; preds = %sw.epilog
  %arrayidx14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5312
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !5312
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !5312
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !5293, metadata !DIExpression()), !dbg !5297
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %addr.addr.0 = phi %struct.rtx_def* [ %call11, %if.then ], [ %2, %if.else ], !dbg !5313
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.addr.0, metadata !5293, metadata !DIExpression()), !dbg !5297
  %call16 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %addr.addr.0) #7, !dbg !5314
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call16, metadata !5293, metadata !DIExpression()), !dbg !5297
  br label %cleanup, !dbg !5315

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call16, %if.end ], [ %addr, %entry ], !dbg !5297
  ret %struct.rtx_def* %retval.0, !dbg !5316
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %x, %struct.rtx_def* %y) unnamed_addr #4 !dbg !5317 {
entry:
  br label %tailrecurse, !dbg !5330

tailrecurse:                                      ; preds = %if.then172, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %call177, %if.then172 ]
  %y.tr = phi %struct.rtx_def* [ %y, %entry ], [ %call182, %if.then172 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr, metadata !5320, metadata !DIExpression()), !dbg !5333
  %cmp = icmp eq %struct.rtx_def* %x.tr, null, !dbg !5334
  %cmp1 = icmp eq %struct.rtx_def* %y.tr, null, !dbg !5336
  %or.cond = and i1 %cmp, %cmp1, !dbg !5337
  br i1 %or.cond, label %cleanup.loopexit6, label %if.end, !dbg !5337

if.end:                                           ; preds = %tailrecurse
  %or.cond1 = or i1 %cmp, %cmp1, !dbg !5338
  br i1 %or.cond1, label %cleanup.loopexit6, label %if.end5, !dbg !5338

if.end5:                                          ; preds = %if.end
  %cmp6 = icmp eq %struct.rtx_def* %x.tr, %y.tr, !dbg !5340
  br i1 %cmp6, label %cleanup.loopexit6, label %if.end8, !dbg !5342

if.end8:                                          ; preds = %if.end5
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !5343
  %bf.load = load i32, i32* %0, align 8, !dbg !5343
  %bf.clear = and i32 %bf.load, 65535, !dbg !5343
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5323, metadata !DIExpression()), !dbg !5333
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr, i64 0, i32 0, !dbg !5344
  %bf.load9 = load i32, i32* %1, align 8, !dbg !5344
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !5344
  %cmp11 = icmp eq i32 %bf.clear, %bf.clear10, !dbg !5346
  br i1 %cmp11, label %if.end13, label %cleanup.loopexit6, !dbg !5347

if.end13:                                         ; preds = %if.end8
  %bf.lshr4 = xor i32 %bf.load, %bf.load9, !dbg !5348
  %2 = and i32 %bf.lshr4, 16711680, !dbg !5348
  %cmp19 = icmp eq i32 %2, 0, !dbg !5348
  br i1 %cmp19, label %if.end21, label %cleanup.loopexit6, !dbg !5350

if.end21:                                         ; preds = %if.end13
  %trunc = trunc i32 %bf.load to i16, !dbg !5351
  switch i16 %trunc, label %if.end85 [
    i16 37, label %sw.bb
    i16 44, label %sw.bb24
    i16 45, label %sw.bb31
    i16 1, label %cleanup.loopexit6
    i16 30, label %cleanup.loopexit6
    i16 32, label %cleanup.loopexit6
    i16 31, label %cleanup.loopexit6
    i16 49, label %if.then44
  ], !dbg !5351

sw.bb:                                            ; preds = %if.end21
  %x.tr.lcssa54 = phi %struct.rtx_def* [ %x.tr, %if.end21 ]
  %y.tr.lcssa47 = phi %struct.rtx_def* [ %y.tr, %if.end21 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa54, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa47, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa54, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa47, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa54, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa47, metadata !5320, metadata !DIExpression()), !dbg !5333
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.tr.lcssa54) #7, !dbg !5352
  %call22 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %y.tr.lcssa47) #7, !dbg !5354
  %cmp23 = icmp eq i32 %call, %call22, !dbg !5355
  %conv = zext i1 %cmp23 to i32, !dbg !5355
  br label %cleanup, !dbg !5356

sw.bb24:                                          ; preds = %if.end21
  %x.tr.lcssa55 = phi %struct.rtx_def* [ %x.tr, %if.end21 ]
  %y.tr.lcssa48 = phi %struct.rtx_def* [ %y.tr, %if.end21 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa55, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa48, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa55, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa48, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa55, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa48, metadata !5320, metadata !DIExpression()), !dbg !5333
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa55, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5357
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5357
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5357
  %arrayidx27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr.lcssa48, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5358
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !5358
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !5358
  %cmp29 = icmp eq %struct.rtx_def* %3, %4, !dbg !5359
  %conv30 = zext i1 %cmp29 to i32, !dbg !5359
  br label %cleanup, !dbg !5360

sw.bb31:                                          ; preds = %if.end21
  %x.tr.lcssa56 = phi %struct.rtx_def* [ %x.tr, %if.end21 ]
  %y.tr.lcssa49 = phi %struct.rtx_def* [ %y.tr, %if.end21 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa56, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa49, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa56, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa49, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa56, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa49, metadata !5320, metadata !DIExpression()), !dbg !5333
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa56, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !5361
  %5 = load i8*, i8** %rt_str, align 8, !dbg !5361
  %rt_str38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr.lcssa49, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !5362
  %6 = load i8*, i8** %rt_str38, align 8, !dbg !5362
  %cmp39 = icmp eq i8* %5, %6, !dbg !5363
  %conv40 = zext i1 %cmp39 to i32, !dbg !5363
  br label %cleanup, !dbg !5364

if.then44:                                        ; preds = %if.end21
  %x.tr.lcssa57 = phi %struct.rtx_def* [ %x.tr, %if.end21 ]
  %y.tr.lcssa50 = phi %struct.rtx_def* [ %y.tr, %if.end21 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa57, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa50, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa57, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa50, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa57, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa50, metadata !5320, metadata !DIExpression()), !dbg !5333
  %arrayidx47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa57, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5365
  %rt_rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**, !dbg !5365
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx48, align 8, !dbg !5365
  %arrayidx51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr.lcssa50, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5367
  %rt_rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !5367
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !5367
  %call53 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %7, %struct.rtx_def* %8) #7, !dbg !5368
  %tobool = icmp eq i32 %call53, 0, !dbg !5368
  br i1 %tobool, label %if.then44.lor.rhs_crit_edge, label %land.lhs.true54, !dbg !5369

if.then44.lor.rhs_crit_edge:                      ; preds = %if.then44
  br label %lor.rhs, !dbg !5369

land.lhs.true54:                                  ; preds = %if.then44
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa57, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5370
  %rt_rtx58 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !5370
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !5370
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr.lcssa50, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5371
  %rt_rtx62 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !5371
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !5371
  %call63 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %10, %struct.rtx_def* %12) #7, !dbg !5372
  %tobool64 = icmp eq i32 %call63, 0, !dbg !5372
  br i1 %tobool64, label %lor.rhs, label %lor.end, !dbg !5373

lor.rhs:                                          ; preds = %if.then44.lor.rhs_crit_edge, %land.lhs.true54
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx48, align 8, !dbg !5374
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr.lcssa50, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5375
  %rt_rtx72 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !5375
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx72, align 8, !dbg !5375
  %call73 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %13, %struct.rtx_def* %15) #7, !dbg !5376
  %tobool74 = icmp eq i32 %call73, 0, !dbg !5376
  br i1 %tobool74, label %lor.end, label %land.rhs, !dbg !5377

land.rhs:                                         ; preds = %lor.rhs
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa57, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5378
  %rt_rtx78 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !5378
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !5378
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !5379
  %call83 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %17, %struct.rtx_def* %18) #7, !dbg !5380
  %tobool84 = icmp ne i32 %call83, 0, !dbg !5377
  %phitmp = zext i1 %tobool84 to i32
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true54, %lor.rhs, %land.rhs
  %19 = phi i32 [ 1, %land.lhs.true54 ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !5381

if.end85:                                         ; preds = %if.end21
  %idxprom = zext i32 %bf.clear to i64, !dbg !5382
  %arrayidx88 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5382
  %20 = load i32, i32* %arrayidx88, align 4, !dbg !5382
  %and = and i32 %20, -3, !dbg !5382
  %cmp89 = icmp eq i32 %and, 1, !dbg !5382
  br i1 %cmp89, label %if.then91, label %if.else, !dbg !5383

if.then91:                                        ; preds = %if.end85
  %x.tr.lcssa58 = phi %struct.rtx_def* [ %x.tr, %if.end85 ]
  %y.tr.lcssa51 = phi %struct.rtx_def* [ %y.tr, %if.end85 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa58, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa51, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa58, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa51, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa58, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa51, metadata !5320, metadata !DIExpression()), !dbg !5333
  %arrayidx94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa58, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5384
  %rt_rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**, !dbg !5384
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !5384
  %call96 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %21) #7, !dbg !5385
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call96, metadata !5325, metadata !DIExpression()), !dbg !5386
  %arrayidx99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr.lcssa51, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5387
  %rt_rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**, !dbg !5387
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx100, align 8, !dbg !5387
  %call101 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %22) #7, !dbg !5388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call101, metadata !5328, metadata !DIExpression()), !dbg !5386
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr.lcssa51, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5389
  %rt_rtx105 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !5389
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx105, align 8, !dbg !5389
  %call106 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %24) #7, !dbg !5390
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call106, metadata !5329, metadata !DIExpression()), !dbg !5386
  %call107 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call96, %struct.rtx_def* %call101) #7, !dbg !5391
  %tobool108 = icmp eq i32 %call107, 0, !dbg !5391
  br i1 %tobool108, label %lor.rhs117, label %land.lhs.true109, !dbg !5392

land.lhs.true109:                                 ; preds = %if.then91
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa58, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5393
  %rt_rtx113 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !5393
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx113, align 8, !dbg !5393
  %call114 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %26) #7, !dbg !5394
  %call115 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call114, %struct.rtx_def* %call106) #7, !dbg !5395
  %tobool116 = icmp eq i32 %call115, 0, !dbg !5395
  br i1 %tobool116, label %lor.rhs117, label %lor.end129, !dbg !5396

lor.rhs117:                                       ; preds = %land.lhs.true109, %if.then91
  %call118 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call96, %struct.rtx_def* %call106) #7, !dbg !5397
  %tobool119 = icmp eq i32 %call118, 0, !dbg !5397
  br i1 %tobool119, label %lor.end129, label %land.rhs120, !dbg !5398

land.rhs120:                                      ; preds = %lor.rhs117
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa58, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5399
  %rt_rtx124 = bitcast %union.rtunion_def* %27 to %struct.rtx_def**, !dbg !5399
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx124, align 8, !dbg !5399
  %call125 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %28) #7, !dbg !5400
  %call126 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call125, %struct.rtx_def* %call101) #7, !dbg !5401
  %tobool127 = icmp ne i32 %call126, 0, !dbg !5398
  %phitmp3 = zext i1 %tobool127 to i32
  br label %lor.end129

lor.end129:                                       ; preds = %land.lhs.true109, %lor.rhs117, %land.rhs120
  %29 = phi i32 [ 1, %land.lhs.true109 ], [ 0, %lor.rhs117 ], [ %phitmp3, %land.rhs120 ]
  br label %cleanup

if.else:                                          ; preds = %if.end85
  %cmp136 = icmp eq i32 %and, 0, !dbg !5402
  br i1 %cmp136, label %if.then138, label %if.else165, !dbg !5403

if.then138:                                       ; preds = %if.else
  %x.tr.lcssa59 = phi %struct.rtx_def* [ %x.tr, %if.else ]
  %y.tr.lcssa52 = phi %struct.rtx_def* [ %y.tr, %if.else ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa59, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa52, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa59, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa52, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa59, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa52, metadata !5320, metadata !DIExpression()), !dbg !5333
  %arrayidx141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa59, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5404
  %rt_rtx142 = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtx_def**, !dbg !5404
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx142, align 8, !dbg !5404
  %call143 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %30) #7, !dbg !5406
  %arrayidx146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr.lcssa52, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5407
  %rt_rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**, !dbg !5407
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx147, align 8, !dbg !5407
  %call148 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %31) #7, !dbg !5408
  %call149 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call143, %struct.rtx_def* %call148) #7, !dbg !5409
  %tobool150 = icmp eq i32 %call149, 0, !dbg !5409
  br i1 %tobool150, label %land.end164, label %land.rhs151, !dbg !5410

land.rhs151:                                      ; preds = %if.then138
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa59, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5411
  %rt_rtx155 = bitcast %union.rtunion_def* %32 to %struct.rtx_def**, !dbg !5411
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx155, align 8, !dbg !5411
  %call156 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %33) #7, !dbg !5412
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr.lcssa52, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5413
  %rt_rtx160 = bitcast %union.rtunion_def* %34 to %struct.rtx_def**, !dbg !5413
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx160, align 8, !dbg !5413
  %call161 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %35) #7, !dbg !5414
  %call162 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call156, %struct.rtx_def* %call161) #7, !dbg !5415
  %tobool163 = icmp ne i32 %call162, 0, !dbg !5410
  %phitmp2 = zext i1 %tobool163 to i32
  br label %land.end164

land.end164:                                      ; preds = %if.then138, %land.rhs151
  %36 = phi i32 [ 0, %if.then138 ], [ %phitmp2, %land.rhs151 ]
  br label %cleanup, !dbg !5416

if.else165:                                       ; preds = %if.else
  %cmp170 = icmp eq i32 %20, 4, !dbg !5417
  br i1 %cmp170, label %if.then172, label %if.end186, !dbg !5418

if.then172:                                       ; preds = %if.else165
  %arrayidx175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5419
  %rt_rtx176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**, !dbg !5419
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx176, align 8, !dbg !5419
  %call177 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %37) #7, !dbg !5420
  %arrayidx180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5421
  %rt_rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**, !dbg !5421
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx181, align 8, !dbg !5421
  %call182 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %38) #7, !dbg !5422
  br label %tailrecurse, !dbg !5330

if.end186:                                        ; preds = %if.else165
  %idxprom.lcssa62 = phi i64 [ %idxprom, %if.else165 ], !dbg !5382
  %x.tr.lcssa60 = phi %struct.rtx_def* [ %x.tr, %if.else165 ]
  %y.tr.lcssa53 = phi %struct.rtx_def* [ %y.tr, %if.else165 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa60, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa53, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa60, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa53, metadata !5320, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa60, metadata !5319, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y.tr.lcssa53, metadata !5320, metadata !DIExpression()), !dbg !5333
  %arrayidx188 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom.lcssa62, !dbg !5423
  %39 = load i8*, i8** %arrayidx188, align 8, !dbg !5423
  call void @llvm.dbg.value(metadata i8* %39, metadata !5324, metadata !DIExpression()), !dbg !5333
  %arrayidx190 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom.lcssa62, !dbg !5424
  %40 = load i8, i8* %arrayidx190, align 1, !dbg !5424
  call void @llvm.dbg.value(metadata i8 %40, metadata !5321, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5333
  %u277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa60, i64 0, i32 1, !dbg !5426
  %fld278 = bitcast %union.u* %u277 to [1 x %union.rtunion_def]*, !dbg !5426
  %u282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y.tr.lcssa53, i64 0, i32 1, !dbg !5426
  %fld283 = bitcast %union.u* %u282 to [1 x %union.rtunion_def]*, !dbg !5426
  %41 = zext i8 %40 to i64, !dbg !5431
  br label %for.cond, !dbg !5431

for.cond:                                         ; preds = %for.inc293, %if.end186
  %indvars.iv45 = phi i64 [ %indvars.iv.next46, %for.inc293 ], [ %41, %if.end186 ]
  %indvars.iv.next46 = add nsw i64 %indvars.iv45, -1, !dbg !5432
  call void @llvm.dbg.value(metadata i32 undef, metadata !5321, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5333
  %cmp192 = icmp sgt i64 %indvars.iv45, 0, !dbg !5433
  br i1 %cmp192, label %for.body, label %cleanup.loopexit5, !dbg !5434

for.body:                                         ; preds = %for.cond
  %arrayidx195 = getelementptr inbounds i8, i8* %39, i64 %indvars.iv.next46, !dbg !5435
  %42 = load i8, i8* %arrayidx195, align 1, !dbg !5435
  %conv196 = sext i8 %42 to i32, !dbg !5435
  switch i32 %conv196, label %sw.default291 [
    i32 105, label %sw.bb197
    i32 69, label %sw.bb211
    i32 101, label %sw.bb258
    i32 115, label %sw.bb276
    i32 48, label %for.inc293
  ], !dbg !5436

sw.bb197:                                         ; preds = %for.body
  %arrayidx201 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i64 0, i64 %indvars.iv.next46, !dbg !5437
  %rt_int = bitcast %union.rtunion_def* %arrayidx201 to i32*, !dbg !5437
  %43 = load i32, i32* %rt_int, align 8, !dbg !5437
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i64 0, i64 %indvars.iv.next46, !dbg !5439
  %rt_int206 = bitcast %union.rtunion_def* %arrayidx205 to i32*, !dbg !5439
  %44 = load i32, i32* %rt_int206, align 8, !dbg !5439
  %cmp207 = icmp eq i32 %43, %44, !dbg !5440
  br i1 %cmp207, label %for.inc293, label %cleanup.loopexit5, !dbg !5441

sw.bb211:                                         ; preds = %for.body
  %arrayidx215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i64 0, i64 %indvars.iv.next46, !dbg !5442
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtvec_def**, !dbg !5442
  %45 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5442
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %45, i64 0, i32 0, !dbg !5442
  %46 = load i32, i32* %num_elem, align 8, !dbg !5442
  %arrayidx219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i64 0, i64 %indvars.iv.next46, !dbg !5444
  %rt_rtvec220 = bitcast %union.rtunion_def* %arrayidx219 to %struct.rtvec_def**, !dbg !5444
  %47 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec220, align 8, !dbg !5444
  %num_elem221 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %47, i64 0, i32 0, !dbg !5444
  %48 = load i32, i32* %num_elem221, align 8, !dbg !5444
  %cmp222 = icmp eq i32 %46, %48, !dbg !5445
  br i1 %cmp222, label %for.cond226.preheader, label %cleanup.loopexit5, !dbg !5446

for.cond226.preheader:                            ; preds = %sw.bb211
  br label %for.cond226, !dbg !5447

for.cond226:                                      ; preds = %for.cond226.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond226.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !5449
  %49 = phi i32 [ %46, %for.cond226.preheader ], [ %.pre28, %for.inc ], !dbg !5449
  %50 = phi %struct.rtvec_def* [ %45, %for.cond226.preheader ], [ %.pre, %for.inc ], !dbg !5449
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5322, metadata !DIExpression()), !dbg !5333
  %51 = sext i32 %49 to i64, !dbg !5451
  %cmp233 = icmp slt i64 %indvars.iv, %51, !dbg !5451
  br i1 %cmp233, label %for.body235, label %for.inc293.loopexit, !dbg !5447

for.body235:                                      ; preds = %for.cond226
  %arrayidx242 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %50, i64 0, i32 1, i64 %indvars.iv, !dbg !5452
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx242, align 8, !dbg !5452
  %call243 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %52) #7, !dbg !5454
  %53 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec220, align 8, !dbg !5455
  %arrayidx251 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %53, i64 0, i32 1, i64 %indvars.iv, !dbg !5455
  %54 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx251, align 8, !dbg !5455
  %call252 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %54) #7, !dbg !5456
  %call253 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call243, %struct.rtx_def* %call252) #7, !dbg !5457
  %cmp254 = icmp eq i32 %call253, 0, !dbg !5458
  br i1 %cmp254, label %cleanup.loopexit, label %for.inc, !dbg !5459

for.inc:                                          ; preds = %for.body235
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5460
  call void @llvm.dbg.value(metadata i32 undef, metadata !5322, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5333
  %.pre = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5449
  %num_elem232.phi.trans.insert = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %.pre, i64 0, i32 0, !dbg !5461
  %.pre28 = load i32, i32* %num_elem232.phi.trans.insert, align 8, !dbg !5449
  br label %for.cond226, !dbg !5462, !llvm.loop !5463

sw.bb258:                                         ; preds = %for.body
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i64 0, i64 %indvars.iv.next46, !dbg !5465
  %rt_rtx263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtx_def**, !dbg !5465
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx263, align 8, !dbg !5465
  %call264 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %55) #7, !dbg !5467
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i64 0, i64 %indvars.iv.next46, !dbg !5468
  %rt_rtx269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.rtx_def**, !dbg !5468
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx269, align 8, !dbg !5468
  %call270 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %56) #7, !dbg !5469
  %call271 = tail call fastcc i32 @rtx_equal_for_memref_p(%struct.rtx_def* %call264, %struct.rtx_def* %call270) #7, !dbg !5470
  %cmp272 = icmp eq i32 %call271, 0, !dbg !5471
  br i1 %cmp272, label %cleanup.loopexit5, label %for.inc293, !dbg !5472

sw.bb276:                                         ; preds = %for.body
  %rt_str281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i64 0, i64 %indvars.iv.next46, i32 0, !dbg !5473
  %57 = load i8*, i8** %rt_str281, align 8, !dbg !5473
  %rt_str286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i64 0, i64 %indvars.iv.next46, i32 0, !dbg !5474
  %58 = load i8*, i8** %rt_str286, align 8, !dbg !5474
  %call287 = tail call i32 @strcmp(i8* %57, i8* %58) #6, !dbg !5475
  %tobool288 = icmp eq i32 %call287, 0, !dbg !5475
  br i1 %tobool288, label %for.inc293, label %cleanup.loopexit5, !dbg !5476

sw.default291:                                    ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 1462, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5477
  br label %for.inc293, !dbg !5478

for.inc293.loopexit:                              ; preds = %for.cond226
  br label %for.inc293, !dbg !5479

for.inc293:                                       ; preds = %for.inc293.loopexit, %sw.bb197, %sw.bb276, %for.body, %sw.default291, %sw.bb258
  call void @llvm.dbg.value(metadata i32 undef, metadata !5321, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5333
  br label %for.cond, !dbg !5479, !llvm.loop !5480

cleanup.loopexit:                                 ; preds = %for.body235
  br label %cleanup, !dbg !5482

cleanup.loopexit5:                                ; preds = %sw.bb258, %for.cond, %sw.bb276, %sw.bb211, %sw.bb197
  %retval.0.ph = phi i32 [ 1, %for.cond ], [ 0, %sw.bb276 ], [ 0, %sw.bb258 ], [ 0, %sw.bb211 ], [ 0, %sw.bb197 ]
  br label %cleanup, !dbg !5482

cleanup.loopexit6:                                ; preds = %tailrecurse, %if.end, %if.end5, %if.end21, %if.end21, %if.end21, %if.end21, %if.end8, %if.end13
  %retval.0.ph7 = phi i32 [ 0, %if.end21 ], [ 0, %if.end21 ], [ 0, %if.end21 ], [ 0, %if.end21 ], [ 0, %if.end13 ], [ 0, %if.end8 ], [ 1, %if.end5 ], [ 0, %if.end ], [ 1, %tailrecurse ]
  br label %cleanup, !dbg !5482

cleanup:                                          ; preds = %cleanup.loopexit6, %cleanup.loopexit5, %cleanup.loopexit, %land.end164, %lor.end129, %lor.end, %sw.bb31, %sw.bb24, %sw.bb
  %retval.0 = phi i32 [ %19, %lor.end ], [ %29, %lor.end129 ], [ %36, %land.end164 ], [ %conv40, %sw.bb31 ], [ %conv30, %sw.bb24 ], [ %conv, %sw.bb ], [ 0, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit5 ], [ %retval.0.ph7, %cleanup.loopexit6 ], !dbg !5333
  ret i32 %retval.0, !dbg !5482
}

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ao_ref_from_mem(%struct.ao_ref_s* %ref, %struct.rtx_def* %mem) unnamed_addr #4 !dbg !5483 {
entry:
  call void @llvm.dbg.value(metadata %struct.ao_ref_s* %ref, metadata !5488, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !5489, metadata !DIExpression()), !dbg !5495
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5496
  %rt_mem = bitcast %union.rtunion_def* %0 to %struct.mem_attrs**, !dbg !5496
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5496
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !5496
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !5496

cond.false:                                       ; preds = %entry
  %expr5 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 0, !dbg !5496
  %2 = load %union.tree_node*, %union.tree_node** %expr5, align 8, !dbg !5496
  br label %cond.end, !dbg !5496

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %2, %cond.false ], [ null, %entry ], !dbg !5496
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !5490, metadata !DIExpression()), !dbg !5495
  %tobool = icmp eq %union.tree_node* %cond, null, !dbg !5497
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5499

if.end:                                           ; preds = %cond.end
  br i1 %cmp, label %cleanup, label %cond.false12, !dbg !5500

cond.false12:                                     ; preds = %if.end
  %offset = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 1, !dbg !5502
  %3 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8, !dbg !5502
  %tobool17 = icmp eq %struct.rtx_def* %3, null, !dbg !5502
  br i1 %tobool17, label %cleanup, label %lor.lhs.false, !dbg !5500

lor.lhs.false:                                    ; preds = %cond.false12
  br i1 false, label %cond.false29, label %cond.true23, !dbg !5503

cond.true23:                                      ; preds = %lor.lhs.false
  %size = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %1, i64 0, i32 2, !dbg !5504
  %4 = load %struct.rtx_def*, %struct.rtx_def** %size, align 8, !dbg !5504
  %tobool28 = icmp eq %struct.rtx_def* %4, null, !dbg !5504
  br i1 %tobool28, label %cleanup, label %if.end40, !dbg !5504

cond.false29:                                     ; preds = %lor.lhs.false
  br i1 undef, label %cond.false29.cleanup_crit_edge, label %cond.true31, !dbg !5503

cond.false29.cleanup_crit_edge:                   ; preds = %cond.false29
  br label %cleanup, !dbg !5503

cond.true31:                                      ; preds = %cond.false29
  br i1 undef, label %cond.true31.cleanup_crit_edge, label %cond.true31.if.end40_crit_edge, !dbg !5504

cond.true31.if.end40_crit_edge:                   ; preds = %cond.true31
  br label %if.end40, !dbg !5504

cond.true31.cleanup_crit_edge:                    ; preds = %cond.true31
  br label %cleanup, !dbg !5504

if.end40:                                         ; preds = %cond.true31.if.end40_crit_edge, %cond.true23
  tail call void @ao_ref_init(%struct.ao_ref_s* %ref, %union.tree_node* nonnull %cond) #6, !dbg !5505
  %call41 = tail call %union.tree_node* @ao_ref_base(%struct.ao_ref_s* %ref) #6, !dbg !5506
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !5491, metadata !DIExpression()), !dbg !5495
  %cmp42 = icmp eq %union.tree_node* %call41, null, !dbg !5507
  br i1 %cmp42, label %cleanup, label %if.end45, !dbg !5509

if.end45:                                         ; preds = %if.end40
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5510
  %bf.load47 = load i64, i64* %5, align 8, !dbg !5510
  %bf.cast1 = and i64 %bf.load47, 65535, !dbg !5510
  %cmp49 = icmp eq i64 %bf.cast1, 47, !dbg !5510
  br i1 %cmp49, label %land.lhs.true, label %lor.lhs.false51, !dbg !5510

lor.lhs.false51:                                  ; preds = %if.end45
  %cmp56 = icmp eq i64 %bf.cast1, 48, !dbg !5510
  br i1 %cmp56, label %land.lhs.true, label %lor.lhs.false58, !dbg !5510

lor.lhs.false58:                                  ; preds = %lor.lhs.false51
  %cmp63 = icmp eq i64 %bf.cast1, 49, !dbg !5510
  br i1 %cmp63, label %land.lhs.true, label %if.end73, !dbg !5512

land.lhs.true:                                    ; preds = %lor.lhs.false58, %lor.lhs.false51, %if.end45
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5513
  %6 = bitcast %union.tree_node** %operands to i64**, !dbg !5513
  %7 = load i64*, i64** %6, align 8, !dbg !5513
  %bf.load67 = load i64, i64* %7, align 8, !dbg !5513
  %bf.cast698 = and i64 %bf.load67, 65535, !dbg !5514
  %cmp70 = icmp eq i64 %bf.cast698, 141, !dbg !5514
  br i1 %cmp70, label %if.end73, label %cleanup, !dbg !5515

if.end73:                                         ; preds = %land.lhs.true, %lor.lhs.false58
  %cmp78 = icmp eq i64 %bf.cast1, 29, !dbg !5516
  br i1 %cmp78, label %cleanup, label %lor.lhs.false80, !dbg !5518

lor.lhs.false80:                                  ; preds = %if.end73
  %cmp85 = icmp eq i64 %bf.cast1, 30, !dbg !5519
  br i1 %cmp85, label %cleanup, label %if.end88, !dbg !5520

if.end88:                                         ; preds = %lor.lhs.false80
  %cmp93 = icmp eq i64 %bf.cast1, 32, !dbg !5521
  br i1 %cmp93, label %land.lhs.true95, label %if.end116, !dbg !5522

land.lhs.true95:                                  ; preds = %if.end88
  %bf.cast1007 = and i64 %bf.load47, 67108864, !dbg !5523
  %tobool101 = icmp eq i64 %bf.cast1007, 0, !dbg !5523
  br i1 %tobool101, label %land.lhs.true102, label %if.end116, !dbg !5524

land.lhs.true102:                                 ; preds = %land.lhs.true95
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5525
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 3, !dbg !5526
  %9 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !5526
  %decls_to_pointers = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %9, i64 0, i32 6, !dbg !5527
  %10 = load %struct.pointer_map_t*, %struct.pointer_map_t** %decls_to_pointers, align 8, !dbg !5527
  %cmp103 = icmp eq %struct.pointer_map_t* %10, null, !dbg !5528
  br i1 %cmp103, label %if.end116, label %if.then105, !dbg !5529

if.then105:                                       ; preds = %land.lhs.true102
  %11 = bitcast %union.tree_node* %call41 to i8*, !dbg !5530
  %call109 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* nonnull %10, i8* nonnull %11) #6, !dbg !5531
  call void @llvm.dbg.value(metadata i8** %call109, metadata !5492, metadata !DIExpression()), !dbg !5532
  %tobool110 = icmp eq i8** %call109, null, !dbg !5533
  br i1 %tobool110, label %if.end116, label %if.then111, !dbg !5535

if.then111:                                       ; preds = %if.then105
  call void @llvm.dbg.value(metadata i8** %call109, metadata !5492, metadata !DIExpression()), !dbg !5532
  %call112 = tail call i32 @get_alias_set(%union.tree_node* nonnull %call41) #7, !dbg !5536
  %base_alias_set = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 6, !dbg !5538
  store i32 %call112, i32* %base_alias_set, align 4, !dbg !5539
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5540
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5540
  %13 = bitcast i8** %call109 to %union.tree_node**, !dbg !5540
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !5540
  %call113 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %12, %union.tree_node* %14) #6, !dbg !5540
  %base114 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 1, !dbg !5541
  store %union.tree_node* %call113, %union.tree_node** %base114, align 8, !dbg !5542
  br label %if.end116, !dbg !5543

if.end116:                                        ; preds = %if.then105, %land.lhs.true102, %land.lhs.true95, %if.then111, %if.end88
  %15 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5544
  %cmp121 = icmp eq %struct.mem_attrs* %15, null, !dbg !5544
  br i1 %cmp121, label %cond.end129, label %cond.false124, !dbg !5544

cond.false124:                                    ; preds = %if.end116
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %15, i64 0, i32 3, !dbg !5544
  %16 = load i32, i32* %alias, align 8, !dbg !5544
  br label %cond.end129, !dbg !5544

cond.end129:                                      ; preds = %if.end116, %cond.false124
  %cond130 = phi i32 [ %16, %cond.false124 ], [ 0, %if.end116 ], !dbg !5544
  %ref_alias_set = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 5, !dbg !5545
  store i32 %cond130, i32* %ref_alias_set, align 8, !dbg !5546
  %17 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5547
  %offset143 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %17, i64 0, i32 1, !dbg !5547
  %18 = load %struct.rtx_def*, %struct.rtx_def** %offset143, align 8, !dbg !5547
  %u146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, !dbg !5547
  %arrayidx147 = bitcast %union.u* %u146 to i64*, !dbg !5547
  %19 = load i64, i64* %arrayidx147, align 8, !dbg !5547
  %cmp148 = icmp slt i64 %19, 0, !dbg !5549
  br i1 %cmp148, label %land.lhs.true150, label %if.end208, !dbg !5550

land.lhs.true150:                                 ; preds = %cond.end129
  %cmp155 = icmp eq %struct.mem_attrs* %17, null, !dbg !5551
  br i1 %cmp155, label %cond.false163, label %cond.true157, !dbg !5551

cond.true157:                                     ; preds = %land.lhs.true150
  %size162 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %17, i64 0, i32 2, !dbg !5551
  %20 = load %struct.rtx_def*, %struct.rtx_def** %size162, align 8, !dbg !5551
  br label %cond.end181, !dbg !5551

cond.false163:                                    ; preds = %land.lhs.true150
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !5551
  %bf.load170 = load i32, i32* %21, align 8, !dbg !5551
  %bf.lshr171 = lshr i32 %bf.load170, 16, !dbg !5551
  %bf.clear172 = and i32 %bf.lshr171, 255, !dbg !5551
  %idxprom173 = zext i32 %bf.clear172 to i64, !dbg !5551
  %arrayidx174 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom173, !dbg !5551
  %22 = load i8, i8* %arrayidx174, align 1, !dbg !5551
  %conv176 = zext i8 %22 to i64, !dbg !5551
  %call177 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv176) #6, !dbg !5551
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5552
  %offset198.phi.trans.insert = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %.pre, i64 0, i32 1, !dbg !5553
  %.pre9 = load %struct.rtx_def*, %struct.rtx_def** %offset198.phi.trans.insert, align 8, !dbg !5552
  %u201.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pre9, i64 0, i32 1, !dbg !5553
  %arrayidx203.phi.trans.insert = bitcast %union.u* %u201.phi.trans.insert to i64*, !dbg !5553
  %.pre10 = load i64, i64* %arrayidx203.phi.trans.insert, align 8, !dbg !5552
  br label %cond.end181, !dbg !5551

cond.end181:                                      ; preds = %cond.false163, %cond.true157
  %23 = phi i64 [ %19, %cond.true157 ], [ %.pre10, %cond.false163 ], !dbg !5552
  %cond182 = phi %struct.rtx_def* [ %20, %cond.true157 ], [ %call177, %cond.false163 ], !dbg !5551
  %u183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond182, i64 0, i32 1, !dbg !5551
  %arrayidx185 = bitcast %union.u* %u183 to i64*, !dbg !5551
  %24 = load i64, i64* %arrayidx185, align 8, !dbg !5551
  %add = add nsw i64 %24, %23, !dbg !5554
  %mul = shl nsw i64 %add, 3, !dbg !5555
  %size204 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 3, !dbg !5556
  %25 = load i64, i64* %size204, align 8, !dbg !5556
  %cmp205 = icmp eq i64 %mul, %25, !dbg !5557
  br i1 %cmp205, label %cleanup, label %if.end208, !dbg !5558

if.end208:                                        ; preds = %cond.end181, %cond.end129
  %26 = phi i64 [ %23, %cond.end181 ], [ %19, %cond.end129 ], !dbg !5559
  %mul227 = shl nsw i64 %26, 3, !dbg !5560
  %offset228 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 2, !dbg !5561
  %27 = load i64, i64* %offset228, align 8, !dbg !5562
  %add229 = add nsw i64 %27, %mul227, !dbg !5562
  store i64 %add229, i64* %offset228, align 8, !dbg !5562
  %28 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5563
  %cmp234 = icmp eq %struct.mem_attrs* %28, null, !dbg !5563
  br i1 %cmp234, label %cond.false242, label %cond.true236, !dbg !5563

cond.true236:                                     ; preds = %if.end208
  %size241 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %28, i64 0, i32 2, !dbg !5563
  %29 = load %struct.rtx_def*, %struct.rtx_def** %size241, align 8, !dbg !5563
  br label %cond.end260, !dbg !5563

cond.false242:                                    ; preds = %if.end208
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !5563
  %bf.load249 = load i32, i32* %30, align 8, !dbg !5563
  %bf.lshr250 = lshr i32 %bf.load249, 16, !dbg !5563
  %bf.clear251 = and i32 %bf.lshr250, 255, !dbg !5563
  %idxprom252 = zext i32 %bf.clear251 to i64, !dbg !5563
  %arrayidx253 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom252, !dbg !5563
  %31 = load i8, i8* %arrayidx253, align 1, !dbg !5563
  %conv255 = zext i8 %31 to i64, !dbg !5563
  %call256 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv255) #6, !dbg !5563
  br label %cond.end260, !dbg !5563

cond.end260:                                      ; preds = %cond.false242, %cond.true236
  %cond261 = phi %struct.rtx_def* [ %29, %cond.true236 ], [ %call256, %cond.false242 ], !dbg !5563
  %u262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond261, i64 0, i32 1, !dbg !5563
  %arrayidx264 = bitcast %union.u* %u262 to i64*, !dbg !5563
  %32 = load i64, i64* %arrayidx264, align 8, !dbg !5563
  %mul265 = shl nsw i64 %32, 3, !dbg !5564
  %size266 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 3, !dbg !5565
  store i64 %mul265, i64* %size266, align 8, !dbg !5566
  %max_size = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 4, !dbg !5567
  %33 = load i64, i64* %max_size, align 8, !dbg !5567
  %cmp267 = icmp eq i64 %33, -1, !dbg !5569
  br i1 %cmp267, label %if.end277, label %land.lhs.true269, !dbg !5570

land.lhs.true269:                                 ; preds = %cond.end260
  %cmp272 = icmp sgt i64 %mul265, %33, !dbg !5571
  br i1 %cmp272, label %if.then274, label %if.end277, !dbg !5572

if.then274:                                       ; preds = %land.lhs.true269
  store i64 %mul265, i64* %max_size, align 8, !dbg !5573
  br label %if.end277, !dbg !5574

if.end277:                                        ; preds = %cond.end260, %if.then274, %land.lhs.true269
  %34 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5575
  %cmp282 = icmp eq %struct.mem_attrs* %34, null, !dbg !5575
  br i1 %cmp282, label %cond.end291, label %cond.false285, !dbg !5575

cond.false285:                                    ; preds = %if.end277
  %expr290 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %34, i64 0, i32 0, !dbg !5575
  %35 = load %union.tree_node*, %union.tree_node** %expr290, align 8, !dbg !5575
  br label %cond.end291, !dbg !5575

cond.end291:                                      ; preds = %if.end277, %cond.false285
  %cond292 = phi %union.tree_node* [ %35, %cond.false285 ], [ null, %if.end277 ], !dbg !5575
  %call293 = tail call %union.tree_node* @get_spill_slot_decl(i8 zeroext 0) #6, !dbg !5577
  %cmp294 = icmp eq %union.tree_node* %cond292, %call293, !dbg !5578
  br i1 %cmp294, label %if.end326, label %land.lhs.true296, !dbg !5579

land.lhs.true296:                                 ; preds = %cond.end291
  %36 = load i64, i64* %offset228, align 8, !dbg !5580
  %cmp298 = icmp slt i64 %36, 0, !dbg !5581
  br i1 %cmp298, label %cleanup, label %lor.lhs.false300, !dbg !5582

lor.lhs.false300:                                 ; preds = %land.lhs.true296
  %base301 = getelementptr inbounds %struct.ao_ref_s, %struct.ao_ref_s* %ref, i64 0, i32 1, !dbg !5583
  %37 = bitcast %union.tree_node** %base301 to i64**, !dbg !5583
  %38 = load i64*, i64** %37, align 8, !dbg !5583
  %bf.load303 = load i64, i64* %38, align 8, !dbg !5583
  %bf.cast305 = and i64 %bf.load303, 65535, !dbg !5583
  %arrayidx307 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast305, !dbg !5583
  %39 = load i32, i32* %arrayidx307, align 4, !dbg !5583
  %cmp308 = icmp eq i32 %39, 3, !dbg !5583
  br i1 %cmp308, label %land.lhs.true310, label %if.end326, !dbg !5584

land.lhs.true310:                                 ; preds = %lor.lhs.false300
  %size312 = getelementptr inbounds i64, i64* %38, i64 6, !dbg !5585
  %40 = bitcast i64* %size312 to %union.tree_node**, !dbg !5585
  %41 = load %union.tree_node*, %union.tree_node** %40, align 8, !dbg !5585
  %call313 = tail call i32 @host_integerp(%union.tree_node* %41, i32 1) #6, !dbg !5586
  %tobool314 = icmp eq i32 %call313, 0, !dbg !5586
  br i1 %tobool314, label %cleanup, label %lor.lhs.false315, !dbg !5587

lor.lhs.false315:                                 ; preds = %land.lhs.true310
  %42 = bitcast %union.tree_node** %base301 to %struct.tree_decl_common**, !dbg !5585
  %43 = load %struct.tree_decl_common*, %struct.tree_decl_common** %42, align 8, !dbg !5588
  %size318 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %43, i64 0, i32 1, !dbg !5588
  %44 = bitcast %union.tree_node** %size318 to %struct.tree_int_cst**, !dbg !5588
  %45 = load %struct.tree_int_cst*, %struct.tree_int_cst** %44, align 8, !dbg !5588
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %45, i64 0, i32 1, i32 0, !dbg !5588
  %46 = load i64, i64* %low, align 8, !dbg !5588
  %47 = load i64, i64* %offset228, align 8, !dbg !5589
  %48 = load i64, i64* %size266, align 8, !dbg !5590
  %add322 = add nsw i64 %47, %48, !dbg !5591
  %cmp323 = icmp ult i64 %46, %add322, !dbg !5592
  br i1 %cmp323, label %cleanup, label %if.end326, !dbg !5593

if.end326:                                        ; preds = %cond.end291, %lor.lhs.false315, %lor.lhs.false300
  br label %cleanup, !dbg !5594

cleanup:                                          ; preds = %cond.false29.cleanup_crit_edge, %cond.true31.cleanup_crit_edge, %cond.true23, %land.lhs.true, %land.lhs.true310, %cond.false12, %cond.end, %land.lhs.true296, %lor.lhs.false315, %cond.end181, %if.end73, %lor.lhs.false80, %if.end40, %if.end, %if.end326
  %retval.0 = phi i8 [ 1, %if.end326 ], [ 0, %cond.end ], [ undef, %cond.false29.cleanup_crit_edge ], [ 0, %if.end ], [ undef, %cond.true31.cleanup_crit_edge ], [ 0, %cond.true23 ], [ 0, %cond.false12 ], [ 0, %if.end40 ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false80 ], [ 0, %if.end73 ], [ 1, %cond.end181 ], [ 0, %lor.lhs.false315 ], [ 0, %land.lhs.true310 ], [ 0, %land.lhs.true296 ], !dbg !5495
  ret i8 %retval.0, !dbg !5595
}

declare dso_local zeroext i8 @refs_may_alias_p_1(%struct.ao_ref_s*, %struct.ao_ref_s*, i8 zeroext) local_unnamed_addr #1

declare dso_local void @ao_ref_init(%struct.ao_ref_s*, %union.tree_node*) local_unnamed_addr #1

declare dso_local %union.tree_node* @ao_ref_base(%struct.ao_ref_s*) local_unnamed_addr #1

declare dso_local i8** @pointer_map_contains(%struct.pointer_map_t*, i8*) local_unnamed_addr #1

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local zeroext i8 @rtx_addr_varies_p(%struct.rtx_def*, i8 zeroext) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_rtx_gc_safe_grow(%struct.VEC_rtx_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !5596 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** @reg_base_value, metadata !5598, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.value(metadata i32 %size_, metadata !5599, metadata !DIExpression()), !dbg !5600
  %cmp = icmp sgt i32 %size_, -1, !dbg !5601
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5601

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !5601
  %tobool = icmp eq %struct.VEC_rtx_gc* %0, null, !dbg !5601
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5601

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %0, i64 0, i32 0, !dbg !5601
  br label %cond.end, !dbg !5601

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !5601
  %call = tail call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %cond) #7, !dbg !5601
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !5601
  %tobool2 = icmp eq %struct.VEC_rtx_gc* %1, null, !dbg !5601
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !5601

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %1, i64 0, i32 0, i32 0, !dbg !5601
  %2 = load i32, i32* %num, align 8, !dbg !5601
  br label %cond.end11, !dbg !5601

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !5601
  %sub = sub nsw i32 %size_, %cond12, !dbg !5601
  %call13 = tail call fastcc i32 @VEC_rtx_gc_reserve_exact(%struct.VEC_rtx_gc** nonnull @reg_base_value, i32 %sub) #7, !dbg !5601
  %3 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !5601
  %num20 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %3, i64 0, i32 0, i32 0, !dbg !5601
  store i32 %size_, i32* %num20, align 8, !dbg !5601
  ret void, !dbg !5601
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_base_address(%struct.VEC_rtx_base* %vec_) unnamed_addr #0 !dbg !5602 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !5606, metadata !DIExpression()), !dbg !5607
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !5608
  %arraydecay = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 0, !dbg !5608
  %cond = select i1 %tobool, %struct.rtx_def** null, %struct.rtx_def** %arraydecay, !dbg !5608
  ret %struct.rtx_def** %cond, !dbg !5608
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_gc_reserve_exact(%struct.VEC_rtx_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5609 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** @reg_base_value, metadata !5613, metadata !DIExpression()), !dbg !5616
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5614, metadata !DIExpression()), !dbg !5616
  %0 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !5617
  %tobool = icmp eq %struct.VEC_rtx_gc* %0, null, !dbg !5617
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5617

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %0, i64 0, i32 0, !dbg !5617
  br label %cond.end, !dbg !5617

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5617
  %call = tail call fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %cond, i32 %alloc_) #7, !dbg !5617
  %tobool1 = icmp eq i32 %call, 0, !dbg !5617
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5617
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5615, metadata !DIExpression()), !dbg !5616
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5617

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_rtx_gc** @reg_base_value to i8**), align 8, !dbg !5618
  %call3 = tail call i8* @vec_gc_p_reserve_exact(i8* %1, i32 %alloc_) #6, !dbg !5618
  store i8* %call3, i8** bitcast (%struct.VEC_rtx_gc** @reg_base_value to i8**), align 8, !dbg !5618
  br label %if.end, !dbg !5618

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5617
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5620 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !5624, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5625, metadata !DIExpression()), !dbg !5626
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !5627
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5627

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 1, !dbg !5627
  %0 = load i32, i32* %alloc, align 4, !dbg !5627
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !5627
  %1 = load i32, i32* %num, align 8, !dbg !5627
  %sub = sub i32 %0, %1, !dbg !5627
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !5627
  br label %cond.end, !dbg !5627

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !5627
  br label %cond.end, !dbg !5627

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !5627
  ret i32 %cond, !dbg !5627
}

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %src) unnamed_addr #4 !dbg !5628 {
entry:
  br label %tailrecurse, !dbg !5639

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %src.tr = phi %struct.rtx_def* [ %src, %entry ], [ %src.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.tr, metadata !5630, metadata !DIExpression()), !dbg !5640
  %call = tail call %struct.rtx_def* @ix86_find_base_term(%struct.rtx_def* %src.tr) #6, !dbg !5641
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5630, metadata !DIExpression()), !dbg !5640
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !5642
  %bf.load = load i32, i32* %0, align 8, !dbg !5642
  %trunc = trunc i32 %bf.load to i16, !dbg !5643
  switch i16 %trunc, label %sw.epilog.loopexit [
    i16 45, label %cleanup306.loopexit
    i16 44, label %cleanup306.loopexit
    i16 37, label %sw.bb1
    i16 43, label %sw.bb47
    i16 35, label %sw.bb77
    i16 49, label %sw.bb93
    i16 50, label %sw.bb93
    i16 122, label %sw.bb227
    i16 61, label %sw.bb233
    i16 100, label %sw.bb258
    i16 121, label %sw.bb276
    i16 75, label %sw.bb276
    i16 74, label %sw.bb276
    i16 77, label %sw.bb276
    i16 76, label %sw.bb276
    i16 78, label %sw.bb276
    i16 79, label %sw.bb276
    i16 99, label %sw.bb282
    i16 98, label %sw.bb282
  ], !dbg !5643

sw.bb1:                                           ; preds = %tailrecurse
  %call.lcssa15 = phi %struct.rtx_def* [ %call, %tailrecurse ], !dbg !5641
  %call2 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %call.lcssa15) #7, !dbg !5644
  call void @llvm.dbg.value(metadata i32 %call2, metadata !5631, metadata !DIExpression()), !dbg !5640
  %cmp = icmp ult i32 %call2, 53, !dbg !5645
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5647

land.lhs.true:                                    ; preds = %sw.bb1
  %.b7 = load i1, i1* @copying_arguments, align 1, !dbg !5648
  br i1 %.b7, label %if.then, label %if.end, !dbg !5649

if.then:                                          ; preds = %land.lhs.true
  %1 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !5650
  %idxprom = zext i32 %call2 to i64, !dbg !5650
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %idxprom, !dbg !5650
  %2 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !5650
  br label %cleanup306, !dbg !5651

if.end:                                           ; preds = %land.lhs.true, %sw.bb1
  %cmp3 = icmp ugt i32 %call2, 52, !dbg !5652
  br i1 %cmp3, label %land.lhs.true9, label %lor.lhs.false, !dbg !5654

lor.lhs.false:                                    ; preds = %if.end
  %idxprom5 = zext i32 %call2 to i64, !dbg !5655
  %arrayidx6 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom5, !dbg !5655
  %3 = load i8, i8* %arrayidx6, align 1, !dbg !5655
  %tobool8 = icmp eq i8 %3, 0, !dbg !5655
  br i1 %tobool8, label %cleanup306, label %land.lhs.true9, !dbg !5656

land.lhs.true9:                                   ; preds = %lor.lhs.false, %if.end
  %4 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !5657
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %4, i64 0, i32 0, !dbg !5657
  %call11 = tail call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %base) #7, !dbg !5657
  %cmp12 = icmp ult i32 %call2, %call11, !dbg !5658
  br i1 %cmp12, label %if.then14, label %cleanup306, !dbg !5659

if.then14:                                        ; preds = %land.lhs.true9
  %5 = load %struct.rtx_def**, %struct.rtx_def*** @new_reg_base_value, align 8, !dbg !5660
  %tobool15 = icmp eq %struct.rtx_def** %5, null, !dbg !5660
  br i1 %tobool15, label %if.end28, label %land.lhs.true16, !dbg !5663

land.lhs.true16:                                  ; preds = %if.then14
  %idxprom17 = zext i32 %call2 to i64, !dbg !5664
  %arrayidx18 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %5, i64 %idxprom17, !dbg !5664
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8, !dbg !5664
  %tobool19 = icmp eq %struct.rtx_def* %6, null, !dbg !5664
  br i1 %tobool19, label %if.end28, label %land.lhs.true20, !dbg !5665

land.lhs.true20:                                  ; preds = %land.lhs.true16
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !5666
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %7, i64 0, i32 5, !dbg !5666
  %8 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !5666
  %arrayidx22 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %8, i64 %idxprom17, !dbg !5666
  %9 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx22, align 8, !dbg !5666
  %n_refs = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %9, i64 0, i32 1, !dbg !5666
  %10 = load i32, i32* %n_refs, align 8, !dbg !5666
  %cmp23 = icmp eq i32 %10, 1, !dbg !5667
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !5668

if.then25:                                        ; preds = %land.lhs.true20
  br label %cleanup306, !dbg !5669

if.end28:                                         ; preds = %land.lhs.true16, %if.then14, %land.lhs.true20
  %11 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !5670
  %base31 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %11, i64 0, i32 0, !dbg !5670
  %call35 = tail call fastcc %struct.rtx_def* @VEC_rtx_base_index(%struct.VEC_rtx_base* %base31, i32 %call2) #7, !dbg !5670
  %tobool36 = icmp eq %struct.rtx_def* %call35, null, !dbg !5670
  br i1 %tobool36, label %cleanup306, label %if.then37, !dbg !5672

if.then37:                                        ; preds = %if.end28
  %12 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_base_value, align 8, !dbg !5673
  %base40 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %12, i64 0, i32 0, !dbg !5673
  %call44 = tail call fastcc %struct.rtx_def* @VEC_rtx_base_index(%struct.VEC_rtx_base* %base40, i32 %call2) #7, !dbg !5673
  br label %cleanup306, !dbg !5674

sw.bb47:                                          ; preds = %tailrecurse
  %call.lcssa16 = phi %struct.rtx_def* [ %call, %tailrecurse ], !dbg !5641
  %.b = load i1, i1* @copying_arguments, align 1, !dbg !5675
  br i1 %.b, label %land.lhs.true50, label %cleanup306, !dbg !5677

land.lhs.true50:                                  ; preds = %sw.bb47
  %arrayidx51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call.lcssa16, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5678
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !5678
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5678
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !5679
  %cmp52 = icmp eq %struct.rtx_def* %13, %14, !dbg !5680
  br i1 %cmp52, label %if.then74, label %lor.lhs.false54, !dbg !5681

lor.lhs.false54:                                  ; preds = %land.lhs.true50
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 0, !dbg !5681
  %bf.load59 = load i32, i32* %15, align 8, !dbg !5682
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !5682
  %cmp61 = icmp eq i32 %bf.clear60, 49, !dbg !5683
  br i1 %cmp61, label %land.lhs.true63, label %cleanup306, !dbg !5684

land.lhs.true63:                                  ; preds = %lor.lhs.false54
  %arrayidx70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5685
  %rt_rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !5685
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !5685
  %cmp72 = icmp eq %struct.rtx_def* %16, %14, !dbg !5686
  br i1 %cmp72, label %if.then74, label %cleanup306, !dbg !5687

if.then74:                                        ; preds = %land.lhs.true63, %land.lhs.true50
  %call75 = tail call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 6, i32 0, %struct.rtx_def* %call.lcssa16) #6, !dbg !5688
  br label %cleanup306, !dbg !5689

sw.bb77:                                          ; preds = %tailrecurse
  %arrayidx80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5690
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !5690
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !5690
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !5630, metadata !DIExpression()), !dbg !5640
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 0, !dbg !5691
  %bf.load82 = load i32, i32* %18, align 8, !dbg !5691
  %bf.clear83 = and i32 %bf.load82, 65535, !dbg !5691
  %cmp84 = icmp eq i32 %bf.clear83, 49, !dbg !5693
  br i1 %cmp84, label %sw.bb93, label %land.lhs.true86, !dbg !5694

land.lhs.true86:                                  ; preds = %sw.bb77
  %cmp89 = icmp eq i32 %bf.clear83, 50, !dbg !5695
  br i1 %cmp89, label %sw.bb93, label %sw.epilog.loopexit, !dbg !5696

sw.bb93:                                          ; preds = %land.lhs.true86, %sw.bb77, %tailrecurse, %tailrecurse
  %src.addr.0 = phi %struct.rtx_def* [ %call, %tailrecurse ], [ %call, %tailrecurse ], [ %17, %land.lhs.true86 ], [ %17, %sw.bb77 ], !dbg !5640
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.addr.0, metadata !5630, metadata !DIExpression()), !dbg !5640
  %arrayidx96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src.addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5697
  %rt_rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**, !dbg !5697
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !5697
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !5635, metadata !DIExpression()), !dbg !5698
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src.addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5699
  %rt_rtx101 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !5699
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !5699
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !5636, metadata !DIExpression()), !dbg !5698
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 0, !dbg !5700
  %bf.load102 = load i32, i32* %22, align 8, !dbg !5700
  %bf.clear103 = and i32 %bf.load102, 65535, !dbg !5700
  %cmp104 = icmp eq i32 %bf.clear103, 37, !dbg !5700
  br i1 %cmp104, label %land.lhs.true106, label %if.end112, !dbg !5702

land.lhs.true106:                                 ; preds = %sw.bb93
  %bf.clear108 = and i32 %bf.load102, 1073741824, !dbg !5703
  %tobool109 = icmp eq i32 %bf.clear108, 0, !dbg !5703
  br i1 %tobool109, label %if.end112, label %if.then110, !dbg !5704

if.then110:                                       ; preds = %land.lhs.true106
  br label %tailrecurse.backedge, !dbg !5705

if.end112:                                        ; preds = %land.lhs.true106, %sw.bb93
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 0, !dbg !5706
  %bf.load113 = load i32, i32* %23, align 8, !dbg !5706
  %bf.clear114 = and i32 %bf.load113, 65535, !dbg !5706
  %cmp115 = icmp eq i32 %bf.clear114, 37, !dbg !5706
  br i1 %cmp115, label %land.lhs.true117, label %if.end124, !dbg !5708

land.lhs.true117:                                 ; preds = %if.end112
  %bf.clear120 = and i32 %bf.load113, 1073741824, !dbg !5709
  %tobool121 = icmp eq i32 %bf.clear120, 0, !dbg !5709
  br i1 %tobool121, label %if.end124, label %if.then122, !dbg !5710

if.then122:                                       ; preds = %land.lhs.true117
  br label %tailrecurse.backedge, !dbg !5711

if.end124:                                        ; preds = %land.lhs.true117, %if.end112
  br i1 %cmp104, label %if.then129, label %if.end135, !dbg !5712

if.then129:                                       ; preds = %if.end124
  %call130 = tail call fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %19) #7, !dbg !5713
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call130, metadata !5632, metadata !DIExpression()), !dbg !5698
  %cmp131 = icmp eq %struct.rtx_def* %call130, null, !dbg !5716
  %spec.select = select i1 %cmp131, %struct.rtx_def* %19, %struct.rtx_def* %call130, !dbg !5718
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !5635, metadata !DIExpression()), !dbg !5698
  %bf.load136.pre = load i32, i32* %23, align 8, !dbg !5719
  br label %if.end135, !dbg !5721

if.end135:                                        ; preds = %if.then129, %if.end124
  %bf.load136 = phi i32 [ %bf.load136.pre, %if.then129 ], [ %bf.load113, %if.end124 ], !dbg !5719
  %src_0.1 = phi %struct.rtx_def* [ %spec.select, %if.then129 ], [ %19, %if.end124 ], !dbg !5698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src_0.1, metadata !5635, metadata !DIExpression()), !dbg !5698
  %bf.clear137 = and i32 %bf.load136, 65535, !dbg !5719
  %cmp138 = icmp eq i32 %bf.clear137, 37, !dbg !5719
  br i1 %cmp138, label %if.then140, label %if.end146, !dbg !5722

if.then140:                                       ; preds = %if.end135
  %call141 = tail call fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %21) #7, !dbg !5723
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call141, metadata !5632, metadata !DIExpression()), !dbg !5698
  %cmp142 = icmp eq %struct.rtx_def* %call141, null, !dbg !5725
  %spec.select1 = select i1 %cmp142, %struct.rtx_def* %21, %struct.rtx_def* %call141, !dbg !5727
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select1, metadata !5636, metadata !DIExpression()), !dbg !5698
  br label %if.end146, !dbg !5728

if.end146:                                        ; preds = %if.then140, %if.end135
  %src_1.1 = phi %struct.rtx_def* [ %spec.select1, %if.then140 ], [ %21, %if.end135 ], !dbg !5698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src_1.1, metadata !5636, metadata !DIExpression()), !dbg !5698
  %cmp147 = icmp eq %struct.rtx_def* %src_0.1, null, !dbg !5729
  br i1 %cmp147, label %if.end171, label %land.lhs.true149, !dbg !5731

land.lhs.true149:                                 ; preds = %if.end146
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src_0.1, i64 0, i32 0, !dbg !5732
  %bf.load150 = load i32, i32* %24, align 8, !dbg !5732
  %bf.clear151 = and i32 %bf.load150, 65535, !dbg !5732
  %cmp152 = icmp eq i32 %bf.clear151, 45, !dbg !5733
  br i1 %cmp152, label %cleanup306.loopexit, label %lor.lhs.false154, !dbg !5734

lor.lhs.false154:                                 ; preds = %land.lhs.true149
  %cmp157 = icmp eq i32 %bf.clear151, 44, !dbg !5735
  br i1 %cmp157, label %cleanup306.loopexit, label %lor.lhs.false159, !dbg !5736

lor.lhs.false159:                                 ; preds = %lor.lhs.false154
  %cmp162 = icmp eq i32 %bf.clear151, 6, !dbg !5737
  br i1 %cmp162, label %land.lhs.true164, label %if.end171, !dbg !5738

land.lhs.true164:                                 ; preds = %lor.lhs.false159
  %bf.clear167 = and i32 %bf.load150, 16711680, !dbg !5739
  %cmp168 = icmp eq i32 %bf.clear167, 0, !dbg !5740
  br i1 %cmp168, label %if.end171, label %cleanup306.loopexit, !dbg !5741

if.end171:                                        ; preds = %land.lhs.true164, %if.end146, %lor.lhs.false159
  %cmp172 = icmp eq %struct.rtx_def* %src_1.1, null, !dbg !5742
  br i1 %cmp172, label %if.end171.if.end196_crit_edge, label %land.lhs.true174, !dbg !5744

if.end171.if.end196_crit_edge:                    ; preds = %if.end171
  store i32 undef, i32* null, align 536870912, !dbg !5745
  br label %if.end196, !dbg !5744

land.lhs.true174:                                 ; preds = %if.end171
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src_1.1, i64 0, i32 0, !dbg !5747
  %bf.load175 = load i32, i32* %25, align 8, !dbg !5747
  %bf.clear176 = and i32 %bf.load175, 65535, !dbg !5747
  %cmp177 = icmp eq i32 %bf.clear176, 45, !dbg !5748
  br i1 %cmp177, label %cleanup306.loopexit, label %lor.lhs.false179, !dbg !5749

lor.lhs.false179:                                 ; preds = %land.lhs.true174
  %cmp182 = icmp eq i32 %bf.clear176, 44, !dbg !5750
  br i1 %cmp182, label %cleanup306.loopexit, label %lor.lhs.false184, !dbg !5751

lor.lhs.false184:                                 ; preds = %lor.lhs.false179
  %cmp187 = icmp eq i32 %bf.clear176, 6, !dbg !5752
  br i1 %cmp187, label %land.lhs.true189, label %if.end196, !dbg !5753

land.lhs.true189:                                 ; preds = %lor.lhs.false184
  %bf.clear192 = and i32 %bf.load175, 16711680, !dbg !5754
  %cmp193 = icmp eq i32 %bf.clear192, 0, !dbg !5755
  br i1 %cmp193, label %if.end196, label %cleanup306.loopexit, !dbg !5756

if.end196:                                        ; preds = %if.end171.if.end196_crit_edge, %land.lhs.true189, %lor.lhs.false184
  %bf.clear198.pre-phi = phi i32 [ 0, %if.end171.if.end196_crit_edge ], [ 6, %land.lhs.true189 ], [ %bf.clear176, %lor.lhs.false184 ], !dbg !5745
  %cmp199 = icmp eq i32 %bf.clear198.pre-phi, 30, !dbg !5745
  br i1 %cmp199, label %if.then208, label %lor.lhs.false201, !dbg !5757

lor.lhs.false201:                                 ; preds = %if.end196
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src_0.1, i64 0, i32 0, !dbg !5758
  %bf.load202 = load i32, i32* %26, align 8, !dbg !5758
  %bf.clear203 = and i32 %bf.load202, 65535, !dbg !5758
  %idxprom204 = zext i32 %bf.clear203 to i64, !dbg !5758
  %arrayidx205 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom204, !dbg !5758
  %27 = load i32, i32* %arrayidx205, align 4, !dbg !5758
  %cmp206 = icmp eq i32 %27, 9, !dbg !5758
  br i1 %cmp206, label %if.then208, label %if.else, !dbg !5759

if.then208:                                       ; preds = %lor.lhs.false201, %if.end196
  br label %tailrecurse.backedge, !dbg !5760

if.else:                                          ; preds = %lor.lhs.false201
  %cmp212 = icmp eq i32 %bf.clear203, 30, !dbg !5761
  br i1 %cmp212, label %if.then221, label %lor.lhs.false214, !dbg !5763

lor.lhs.false214:                                 ; preds = %if.else
  %idxprom217 = zext i32 %bf.clear198.pre-phi to i64, !dbg !5764
  %arrayidx218 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom217, !dbg !5764
  %28 = load i32, i32* %arrayidx218, align 4, !dbg !5764
  %cmp219 = icmp eq i32 %28, 9, !dbg !5764
  br i1 %cmp219, label %if.then221, label %cleanup306.loopexit, !dbg !5765

if.then221:                                       ; preds = %lor.lhs.false214, %if.else
  br label %tailrecurse.backedge, !dbg !5766

sw.bb227:                                         ; preds = %tailrecurse
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5767
  %rt_rtx231 = bitcast %union.rtunion_def* %29 to %struct.rtx_def**, !dbg !5767
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx231, align 8, !dbg !5767
  br label %tailrecurse.backedge, !dbg !5639

tailrecurse.backedge:                             ; preds = %sw.bb227, %if.then251, %sw.bb276, %if.then221, %if.then208, %if.then122, %if.then110
  %src.tr.be = phi %struct.rtx_def* [ %30, %sw.bb227 ], [ %35, %if.then251 ], [ %38, %sw.bb276 ], [ %src_1.1, %if.then221 ], [ %src_0.1, %if.then208 ], [ %21, %if.then122 ], [ %19, %if.then110 ]
  br label %tailrecurse, !dbg !5640

sw.bb233:                                         ; preds = %tailrecurse
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5768
  %32 = bitcast %union.rtunion_def* %31 to i32**, !dbg !5768
  %33 = load i32*, i32** %32, align 8, !dbg !5768
  %bf.load238 = load i32, i32* %33, align 8, !dbg !5768
  %bf.clear239 = and i32 %bf.load238, 65535, !dbg !5768
  %cmp240 = icmp eq i32 %bf.clear239, 30, !dbg !5768
  br i1 %cmp240, label %land.lhs.true242, label %cleanup306.loopexit, !dbg !5770

land.lhs.true242:                                 ; preds = %sw.bb233
  %u247 = getelementptr inbounds i32, i32* %33, i64 2, !dbg !5771
  %arrayidx248 = bitcast i32* %u247 to i64*, !dbg !5771
  %34 = load i64, i64* %arrayidx248, align 8, !dbg !5771
  %cmp249 = icmp eq i64 %34, 0, !dbg !5772
  br i1 %cmp249, label %cleanup306.loopexit, label %if.then251, !dbg !5773

if.then251:                                       ; preds = %land.lhs.true242
  %arrayidx254 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5774
  %rt_rtx255 = bitcast %union.rtunion_def* %arrayidx254 to %struct.rtx_def**, !dbg !5774
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx255, align 8, !dbg !5774
  br label %tailrecurse.backedge, !dbg !5775

sw.bb258:                                         ; preds = %tailrecurse
  %call259 = tail call zeroext i8 @target_default_pointer_address_modes_p() #6, !dbg !5776
  %tobool260 = icmp eq i8 %call259, 0, !dbg !5776
  br i1 %tobool260, label %sw.epilog.loopexit, label %if.end262, !dbg !5778

if.end262:                                        ; preds = %sw.bb258
  %bf.load263 = load i32, i32* %0, align 8, !dbg !5779
  %bf.lshr264 = lshr i32 %bf.load263, 16, !dbg !5779
  %bf.clear265 = and i32 %bf.lshr264, 255, !dbg !5779
  %idxprom266 = zext i32 %bf.clear265 to i64, !dbg !5779
  %arrayidx267 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom266, !dbg !5779
  %36 = load i8, i8* %arrayidx267, align 1, !dbg !5779
  %37 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 16), align 16, !dbg !5781
  %cmp272 = icmp ult i8 %36, %37, !dbg !5782
  br i1 %cmp272, label %sw.epilog.loopexit, label %sw.bb276, !dbg !5783

sw.bb276:                                         ; preds = %if.end262, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %arrayidx279 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5784
  %rt_rtx280 = bitcast %union.rtunion_def* %arrayidx279 to %struct.rtx_def**, !dbg !5784
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx280, align 8, !dbg !5784
  br label %tailrecurse.backedge, !dbg !5785

sw.bb282:                                         ; preds = %tailrecurse, %tailrecurse
  %call.lcssa17 = phi %struct.rtx_def* [ %call, %tailrecurse ], [ %call, %tailrecurse ], !dbg !5641
  %call283 = tail call zeroext i8 @target_default_pointer_address_modes_p() #6, !dbg !5786
  %tobool284 = icmp eq i8 %call283, 0, !dbg !5786
  br i1 %tobool284, label %sw.epilog, label %if.end286, !dbg !5788

if.end286:                                        ; preds = %sw.bb282
  %arrayidx290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call.lcssa17, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5789
  %rt_rtx291 = bitcast %union.rtunion_def* %arrayidx290 to %struct.rtx_def**, !dbg !5789
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx291, align 8, !dbg !5789
  %call292 = tail call fastcc %struct.rtx_def* @find_base_value(%struct.rtx_def* %39) #7, !dbg !5790
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call292, metadata !5637, metadata !DIExpression()), !dbg !5791
  %cmp293 = icmp eq %struct.rtx_def* %call292, null, !dbg !5792
  br i1 %cmp293, label %cleanup306, label %land.lhs.true295, !dbg !5794

land.lhs.true295:                                 ; preds = %if.end286
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call292, i64 0, i32 0, !dbg !5795
  %bf.load296 = load i32, i32* %40, align 8, !dbg !5795
  %bf.clear297 = and i32 %bf.load296, 65535, !dbg !5795
  %idxprom298 = zext i32 %bf.clear297 to i64, !dbg !5795
  %arrayidx299 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom298, !dbg !5795
  %41 = load i32, i32* %arrayidx299, align 4, !dbg !5795
  %cmp300 = icmp eq i32 %41, 9, !dbg !5795
  br i1 %cmp300, label %if.then302, label %cleanup306, !dbg !5796

if.then302:                                       ; preds = %land.lhs.true295
  %call303 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* nonnull %call292, i8 zeroext 0) #6, !dbg !5797
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call303, metadata !5637, metadata !DIExpression()), !dbg !5791
  br label %cleanup306, !dbg !5798

sw.epilog.loopexit:                               ; preds = %if.end262, %tailrecurse, %sw.bb258, %land.lhs.true86
  br label %sw.epilog, !dbg !5799

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.bb282
  br label %cleanup306, !dbg !5799

cleanup306.loopexit:                              ; preds = %tailrecurse, %tailrecurse, %lor.lhs.false214, %land.lhs.true174, %lor.lhs.false179, %land.lhs.true149, %lor.lhs.false154, %sw.bb233, %land.lhs.true242, %land.lhs.true189, %land.lhs.true164
  %retval.1.ph = phi %struct.rtx_def* [ null, %sw.bb233 ], [ null, %land.lhs.true242 ], [ null, %lor.lhs.false214 ], [ %src_1.1, %land.lhs.true174 ], [ %src_1.1, %lor.lhs.false179 ], [ %src_1.1, %land.lhs.true189 ], [ %src_0.1, %land.lhs.true149 ], [ %src_0.1, %lor.lhs.false154 ], [ %src_0.1, %land.lhs.true164 ], [ %call, %tailrecurse ], [ %call, %tailrecurse ]
  br label %cleanup306, !dbg !5800

cleanup306:                                       ; preds = %sw.bb47, %cleanup306.loopexit, %if.end28, %lor.lhs.false, %if.end286, %land.lhs.true295, %if.then302, %lor.lhs.false54, %land.lhs.true63, %land.lhs.true9, %sw.epilog, %if.then74, %if.then37, %if.then25, %if.then
  %retval.1 = phi %struct.rtx_def* [ null, %sw.epilog ], [ %call75, %if.then74 ], [ %2, %if.then ], [ %6, %if.then25 ], [ %call44, %if.then37 ], [ null, %if.end28 ], [ null, %land.lhs.true9 ], [ null, %lor.lhs.false ], [ null, %land.lhs.true63 ], [ null, %lor.lhs.false54 ], [ null, %sw.bb47 ], [ %call303, %if.then302 ], [ %call292, %land.lhs.true295 ], [ null, %if.end286 ], [ %retval.1.ph, %cleanup306.loopexit ], !dbg !5640
  ret %struct.rtx_def* %retval.1, !dbg !5800
}

; Function Attrs: nounwind uwtable
define internal void @gt_pch_pa_reg_known_value(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #4 !dbg !5801 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !5803, metadata !DIExpression()), !dbg !5810
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !5804, metadata !DIExpression()), !dbg !5810
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !5805, metadata !DIExpression()), !dbg !5810
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !5806, metadata !DIExpression()), !dbg !5810
  %0 = load %struct.rtx_def**, %struct.rtx_def*** @reg_known_value, align 8, !dbg !5811
  %cmp = icmp eq %struct.rtx_def** %0, null, !dbg !5812
  br i1 %cmp, label %if.end10, label %for.cond.preheader, !dbg !5813

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5814

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5816
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !5807, metadata !DIExpression()), !dbg !5817
  %1 = load i32, i32* @reg_known_value_size, align 4, !dbg !5818
  %conv = zext i32 %1 to i64, !dbg !5820
  %cmp1 = icmp eq i64 %i0.0, %conv, !dbg !5821
  br i1 %cmp1, label %for.end, label %for.body, !dbg !5814

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** bitcast (%struct.rtx_def*** @reg_known_value to i8**), align 8, !dbg !5822
  %cmp3 = icmp eq i8* %2, %this_obj, !dbg !5825
  br i1 %cmp3, label %if.then5, label %for.inc, !dbg !5826

if.then5:                                         ; preds = %for.body
  %3 = bitcast i8* %2 to %struct.rtx_def**, !dbg !5826
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %i0.0, !dbg !5827
  %4 = bitcast %struct.rtx_def** %arrayidx to i8*, !dbg !5828
  tail call void %op(i8* %4, i8* %cookie) #6, !dbg !5829
  br label %for.inc, !dbg !5829

for.inc:                                          ; preds = %for.body, %if.then5
  %inc = add i64 %i0.0, 1, !dbg !5830
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5807, metadata !DIExpression()), !dbg !5817
  br label %for.cond, !dbg !5831, !llvm.loop !5832

for.end:                                          ; preds = %for.cond
  %cmp6 = icmp eq i8* %this_obj, bitcast (%struct.rtx_def*** @reg_known_value to i8*), !dbg !5834
  br i1 %cmp6, label %if.then8, label %if.end10, !dbg !5836

if.then8:                                         ; preds = %for.end
  tail call void %op(i8* bitcast (%struct.rtx_def*** @reg_known_value to i8*), i8* %cookie) #6, !dbg !5837
  br label %if.end10, !dbg !5837

if.end10:                                         ; preds = %entry, %for.end, %if.then8
  ret void, !dbg !5838
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2037, !2038, !2039}
!llvm.ident = !{!2040}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "alias_sets", scope: !2, file: !3, line: 253, type: !1980, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !554, globals: !1983, nameTableKind: None)
!3 = !DIFile(filename: "alias.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !335, !340, !345, !363, !370, !377, !520}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !330, line: 363, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334}
!332 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !330, line: 355, baseType: !7, size: 32, elements: !336)
!336 = !{!337, !338, !339}
!337 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!338 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!339 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !341, line: 474, baseType: !7, size: 32, elements: !342)
!341 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!342 = !{!343, !344}
!343 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!344 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362}
!347 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!363 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !364)
!364 = !{!365, !366, !367, !368, !369}
!365 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !378, line: 45, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519}
!380 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!387 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!388 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!390 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!391 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!392 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!393 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!394 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!395 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!396 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!397 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!398 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!399 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!400 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!401 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!402 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!403 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!404 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!405 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!406 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!407 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!408 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!409 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!410 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!411 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!412 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!413 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!414 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!415 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!416 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!417 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!418 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!419 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!420 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!421 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!422 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!423 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!424 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!425 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!426 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!427 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!428 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!429 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!430 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!431 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!432 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!433 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!434 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!435 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!436 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!437 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!438 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!439 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!440 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!441 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!442 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!443 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!444 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!445 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!446 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!447 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!448 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!449 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!450 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!451 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!452 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!453 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!454 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!455 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!456 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!457 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!458 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!459 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!460 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!461 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!462 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!463 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!464 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!465 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!466 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!467 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!468 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!469 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!470 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!471 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!472 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!473 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!474 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!475 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!476 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!477 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!478 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!479 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!480 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!481 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!482 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!483 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!484 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!485 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!486 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!487 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!488 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!489 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!490 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!491 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!492 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!493 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!494 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!495 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!496 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!497 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!498 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!499 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!500 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!501 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!502 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!503 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!504 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!505 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!506 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!507 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!508 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!509 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!510 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!511 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!512 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!513 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!514 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!515 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!517 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!518 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!519 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!520 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !378, line: 836, baseType: !7, size: 32, elements: !521)
!521 = !{!522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553}
!522 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!523 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!524 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!525 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!526 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!527 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!528 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!529 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!530 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!531 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!532 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!533 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!534 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!535 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!536 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!537 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!538 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!539 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!540 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!541 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!542 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!543 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!544 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!545 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!546 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!547 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!548 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!549 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!550 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!551 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!552 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!553 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!554 = !{!555, !556, !557, !558, !561, !562, !564, !568, !134, !710, !1920, !377, !709, !1922, !5, !1965, !1508, !575, !1966, !572, !559, !573, !520, !7, !1968, !1159, !1980, !1928, !1048, !567, !1982, !1905}
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!557 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !560)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_key", file: !565, line: 62, baseType: !566)
!565 = !DIFile(filename: "./include/splay-tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "libi_uhostptr_t", file: !565, line: 41, baseType: !567)
!567 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx_function", file: !378, line: 1875, baseType: !569)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DISubroutineType(types: !571)
!571 = !{!557, !572, !561}
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !574, line: 50, baseType: !575)
!574 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !378, line: 240, size: 384, elements: !577)
!577 = !{!578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !576, file: !378, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !576, file: !378, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !576, file: !378, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !576, file: !378, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !576, file: !378, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !576, file: !378, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !576, file: !378, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !576, file: !378, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !576, file: !378, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !576, file: !378, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !576, file: !378, line: 321, baseType: !589, size: 320, offset: 64)
!589 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !378, line: 315, size: 320, elements: !590)
!590 = !{!591, !1855, !1857, !1918, !1919}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !589, file: !378, line: 316, baseType: !592, size: 64)
!592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !593, size: 64, elements: !608)
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !378, line: 183, baseType: !594)
!594 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !378, line: 166, size: 64, elements: !595)
!595 = !{!596, !597, !598, !599, !600, !610, !611, !623, !647, !708, !1833, !1834, !1845, !1852}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !594, file: !378, line: 168, baseType: !557, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !594, file: !378, line: 169, baseType: !7, size: 32)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !594, file: !378, line: 170, baseType: !562, size: 64)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !594, file: !378, line: 171, baseType: !573, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !594, file: !378, line: 172, baseType: !601, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !574, line: 53, baseType: !602)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !378, line: 359, size: 128, elements: !604)
!604 = !{!605, !606}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !603, file: !378, line: 360, baseType: !557, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !603, file: !378, line: 361, baseType: !607, size: 64, offset: 64)
!607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !573, size: 64, elements: !608)
!608 = !{!609}
!609 = !DISubrange(count: 1)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !594, file: !378, line: 173, baseType: !5, size: 32)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !594, file: !378, line: 174, baseType: !612, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !378, line: 133, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 115, size: 32, elements: !614)
!614 = !{!615, !616, !617, !618, !619, !620, !621, !622}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !613, file: !378, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !613, file: !378, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !613, file: !378, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !613, file: !378, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !613, file: !378, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !613, file: !378, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !613, file: !378, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !613, file: !378, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !594, file: !378, line: 175, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !626, line: 23, size: 320, elements: !627)
!626 = !DIFile(filename: "./cselib.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!627 = !{!628, !629, !630, !631, !638, !646}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !625, file: !626, line: 25, baseType: !7, size: 32)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !625, file: !626, line: 28, baseType: !557, size: 32, offset: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "val_rtx", scope: !625, file: !626, line: 31, baseType: !573, size: 64, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "locs", scope: !625, file: !626, line: 35, baseType: !632, size: 64, offset: 128)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_loc_list", file: !626, line: 45, size: 192, elements: !634)
!634 = !{!635, !636, !637}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !633, file: !626, line: 47, baseType: !632, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !633, file: !626, line: 49, baseType: !573, size: 64, offset: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "setting_insn", scope: !633, file: !626, line: 51, baseType: !573, size: 64, offset: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !625, file: !626, line: 39, baseType: !639, size: 64, offset: 192)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_list", file: !626, line: 55, size: 128, elements: !641)
!641 = !{!642, !643}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !640, file: !626, line: 56, baseType: !639, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "elt", scope: !640, file: !626, line: 57, baseType: !644, size: 64, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "cselib_val", file: !626, line: 42, baseType: !625)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "next_containing_mem", scope: !625, file: !626, line: 41, baseType: !624, size: 64, offset: 256)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !594, file: !378, line: 176, baseType: !648, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !650, line: 75, size: 256, elements: !651)
!650 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!651 = !{!652, !666, !667, !668}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !649, file: !650, line: 76, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !650, line: 68, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !650, line: 63, size: 320, elements: !656)
!656 = !{!657, !659, !660, !661}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !655, file: !650, line: 64, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !655, file: !650, line: 65, baseType: !658, size: 64, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !655, file: !650, line: 66, baseType: !7, size: 32, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !655, file: !650, line: 67, baseType: !662, size: 128, offset: 192)
!662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !663, size: 128, elements: !664)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !650, line: 29, baseType: !567)
!664 = !{!665}
!665 = !DISubrange(count: 2)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !649, file: !650, line: 77, baseType: !653, size: 64, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !649, file: !650, line: 78, baseType: !7, size: 32, offset: 128)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !649, file: !650, line: 79, baseType: !669, size: 64, offset: 192)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !650, line: 49, baseType: !671)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !650, line: 45, size: 832, elements: !672)
!672 = !{!673, !674, !675}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !671, file: !650, line: 46, baseType: !658, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !671, file: !650, line: 47, baseType: !648, size: 64, offset: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !671, file: !650, line: 48, baseType: !676, size: 704, offset: 128)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !677, line: 164, size: 704, elements: !678)
!677 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!678 = !{!679, !681, !691, !692, !693, !694, !695, !696, !700, !704, !705, !706, !707}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !676, file: !677, line: 166, baseType: !680, size: 64)
!680 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !676, file: !677, line: 167, baseType: !682, size: 64, offset: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !677, line: 157, size: 192, elements: !684)
!684 = !{!685, !686, !687}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !683, file: !677, line: 159, baseType: !559, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !683, file: !677, line: 160, baseType: !682, size: 64, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !683, file: !677, line: 161, baseType: !688, size: 32, offset: 128)
!688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !560, size: 32, elements: !689)
!689 = !{!690}
!690 = !DISubrange(count: 4)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !676, file: !677, line: 168, baseType: !559, size: 64, offset: 128)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !676, file: !677, line: 169, baseType: !559, size: 64, offset: 192)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !676, file: !677, line: 170, baseType: !559, size: 64, offset: 256)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !676, file: !677, line: 171, baseType: !680, size: 64, offset: 320)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !676, file: !677, line: 172, baseType: !557, size: 32, offset: 384)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !676, file: !677, line: 176, baseType: !697, size: 64, offset: 448)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DISubroutineType(types: !699)
!699 = !{!682, !561, !680}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !676, file: !677, line: 177, baseType: !701, size: 64, offset: 512)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DISubroutineType(types: !703)
!703 = !{null, !561, !682}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !676, file: !677, line: 178, baseType: !561, size: 64, offset: 576)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !676, file: !677, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !676, file: !677, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !676, file: !677, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !594, file: !378, line: 177, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !574, line: 56, baseType: !710)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !712)
!712 = !{!713, !746, !752, !763, !782, !793, !798, !805, !811, !824, !836, !874, !879, !907, !924, !925, !930, !939, !945, !950, !954, !958, !1482, !1531, !1537, !1543, !1550, !1563, !1577, !1594, !1606, !1628, !1643, !1815}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !711, file: !135, line: 3372, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !715)
!715 = !{!716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !714, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !714, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !714, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !714, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !714, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !714, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !714, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !714, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !714, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !714, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !714, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !714, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !714, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !714, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !714, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !714, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !714, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !714, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !714, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !714, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !714, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !714, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !714, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !714, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !714, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !714, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !714, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !714, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !714, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !714, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !711, file: !135, line: 3373, baseType: !747, size: 192)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !748)
!748 = !{!749, !750, !751}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !747, file: !135, line: 403, baseType: !714, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !747, file: !135, line: 404, baseType: !709, size: 64, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !747, file: !135, line: 405, baseType: !709, size: 64, offset: 128)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !711, file: !135, line: 3374, baseType: !753, size: 320)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !754)
!754 = !{!755, !756}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !753, file: !135, line: 1385, baseType: !747, size: 192)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !753, file: !135, line: 1386, baseType: !757, size: 128, offset: 192)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !758, line: 58, baseType: !759)
!758 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !758, line: 54, size: 128, elements: !760)
!760 = !{!761, !762}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !759, file: !758, line: 56, baseType: !567, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !759, file: !758, line: 57, baseType: !680, size: 64, offset: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !711, file: !135, line: 3375, baseType: !764, size: 256)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !765)
!765 = !{!766, !767}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !764, file: !135, line: 1398, baseType: !747, size: 192)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !764, file: !135, line: 1399, baseType: !768, size: 64, offset: 192)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !770, line: 52, size: 256, elements: !771)
!770 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!771 = !{!772, !773, !774, !775, !776, !777, !778}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !769, file: !770, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !769, file: !770, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !769, file: !770, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !769, file: !770, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !769, file: !770, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !769, file: !770, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !769, file: !770, line: 62, baseType: !779, size: 192, offset: 64)
!779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 192, elements: !780)
!780 = !{!781}
!781 = !DISubrange(count: 3)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !711, file: !135, line: 3376, baseType: !783, size: 256)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !784)
!784 = !{!785, !786}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !783, file: !135, line: 1409, baseType: !747, size: 192)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !783, file: !135, line: 1410, baseType: !787, size: 64, offset: 192)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !789, line: 27, size: 192, elements: !790)
!789 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!790 = !{!791, !792}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !788, file: !789, line: 29, baseType: !757, size: 128)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !788, file: !789, line: 30, baseType: !5, size: 32, offset: 128)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !711, file: !135, line: 3377, baseType: !794, size: 256)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !795)
!795 = !{!796, !797}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !794, file: !135, line: 1438, baseType: !747, size: 192)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !794, file: !135, line: 1439, baseType: !709, size: 64, offset: 192)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !711, file: !135, line: 3378, baseType: !799, size: 256)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !800)
!800 = !{!801, !802, !803}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !799, file: !135, line: 1419, baseType: !747, size: 192)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !799, file: !135, line: 1420, baseType: !557, size: 32, offset: 192)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !799, file: !135, line: 1421, baseType: !804, size: 8, offset: 224)
!804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !560, size: 8, elements: !608)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !711, file: !135, line: 3379, baseType: !806, size: 320)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !807)
!807 = !{!808, !809, !810}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !806, file: !135, line: 1429, baseType: !747, size: 192)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !806, file: !135, line: 1430, baseType: !709, size: 64, offset: 192)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !806, file: !135, line: 1431, baseType: !709, size: 64, offset: 256)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !711, file: !135, line: 3380, baseType: !812, size: 320)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !813)
!813 = !{!814, !815}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !812, file: !135, line: 1461, baseType: !747, size: 192)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !812, file: !135, line: 1462, baseType: !816, size: 128, offset: 192)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !817, line: 31, size: 128, elements: !818)
!817 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!818 = !{!819, !822, !823}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !816, file: !817, line: 32, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !556)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !816, file: !817, line: 33, baseType: !7, size: 32, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !816, file: !817, line: 34, baseType: !7, size: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !711, file: !135, line: 3381, baseType: !825, size: 384)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !826)
!826 = !{!827, !828, !833, !834, !835}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !825, file: !135, line: 2508, baseType: !747, size: 192)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !825, file: !135, line: 2509, baseType: !829, size: 32, offset: 192)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !830, line: 58, baseType: !831)
!830 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !832, line: 44, baseType: !7)
!832 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!833 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !825, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !825, file: !135, line: 2511, baseType: !709, size: 64, offset: 256)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !825, file: !135, line: 2512, baseType: !709, size: 64, offset: 320)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !711, file: !135, line: 3382, baseType: !837, size: 896)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !838)
!838 = !{!839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !837, file: !135, line: 2653, baseType: !825, size: 384)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !837, file: !135, line: 2654, baseType: !709, size: 64, offset: 384)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !837, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !837, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !837, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !837, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !837, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !837, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !837, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !837, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !837, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !837, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !837, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !837, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !837, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !837, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !837, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !837, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !837, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !837, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !837, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !837, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !837, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !837, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !837, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !837, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !837, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !837, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !837, file: !135, line: 2705, baseType: !709, size: 64, offset: 576)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !837, file: !135, line: 2706, baseType: !709, size: 64, offset: 640)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !837, file: !135, line: 2707, baseType: !709, size: 64, offset: 704)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !837, file: !135, line: 2708, baseType: !709, size: 64, offset: 768)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !837, file: !135, line: 2711, baseType: !872, size: 64, offset: 832)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !711, file: !135, line: 3383, baseType: !875, size: 960)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !876)
!876 = !{!877, !878}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !875, file: !135, line: 2757, baseType: !837, size: 896)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !875, file: !135, line: 2758, baseType: !573, size: 64, offset: 896)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !711, file: !135, line: 3384, baseType: !880, size: 1472)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !881)
!881 = !{!882, !903, !904, !905, !906}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !880, file: !135, line: 3115, baseType: !883, size: 1216)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !884)
!884 = !{!885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !883, file: !135, line: 2985, baseType: !875, size: 960)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !883, file: !135, line: 2986, baseType: !709, size: 64, offset: 960)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !883, file: !135, line: 2987, baseType: !709, size: 64, offset: 1024)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !883, file: !135, line: 2988, baseType: !709, size: 64, offset: 1088)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !883, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !883, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !883, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !883, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !883, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !883, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !883, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !883, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !883, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !883, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !883, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !883, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !883, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !883, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !880, file: !135, line: 3117, baseType: !709, size: 64, offset: 1216)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !880, file: !135, line: 3119, baseType: !709, size: 64, offset: 1280)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !880, file: !135, line: 3121, baseType: !709, size: 64, offset: 1344)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !880, file: !135, line: 3123, baseType: !709, size: 64, offset: 1408)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !711, file: !135, line: 3385, baseType: !908, size: 1088)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !909)
!909 = !{!910, !911, !912}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !908, file: !135, line: 2875, baseType: !875, size: 960)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !908, file: !135, line: 2876, baseType: !573, size: 64, offset: 960)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !908, file: !135, line: 2877, baseType: !913, size: 64, offset: 1024)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !915, line: 172, size: 128, elements: !916)
!915 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!916 = !{!917, !918, !919, !920, !921, !922, !923}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !914, file: !915, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !914, file: !915, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !914, file: !915, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !914, file: !915, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !914, file: !915, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !914, file: !915, line: 195, baseType: !7, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !914, file: !915, line: 199, baseType: !709, size: 64, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !711, file: !135, line: 3386, baseType: !883, size: 1216)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !711, file: !135, line: 3387, baseType: !926, size: 1280)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !927)
!927 = !{!928, !929}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !926, file: !135, line: 3094, baseType: !883, size: 1216)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !926, file: !135, line: 3095, baseType: !913, size: 64, offset: 1216)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !711, file: !135, line: 3388, baseType: !931, size: 1216)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !932)
!932 = !{!933, !934, !935, !936, !937, !938}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !931, file: !135, line: 2825, baseType: !837, size: 896)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !931, file: !135, line: 2827, baseType: !709, size: 64, offset: 896)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !931, file: !135, line: 2828, baseType: !709, size: 64, offset: 960)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !931, file: !135, line: 2829, baseType: !709, size: 64, offset: 1024)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !931, file: !135, line: 2830, baseType: !709, size: 64, offset: 1088)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !931, file: !135, line: 2831, baseType: !709, size: 64, offset: 1152)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !711, file: !135, line: 3389, baseType: !940, size: 1024)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !941)
!941 = !{!942, !943, !944}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !940, file: !135, line: 2851, baseType: !875, size: 960)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !940, file: !135, line: 2852, baseType: !557, size: 32, offset: 960)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !940, file: !135, line: 2853, baseType: !557, size: 32, offset: 992)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !711, file: !135, line: 3390, baseType: !946, size: 1024)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !947)
!947 = !{!948, !949}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !946, file: !135, line: 2858, baseType: !875, size: 960)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !946, file: !135, line: 2859, baseType: !913, size: 64, offset: 960)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !711, file: !135, line: 3391, baseType: !951, size: 960)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !952)
!952 = !{!953}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !951, file: !135, line: 2863, baseType: !875, size: 960)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !711, file: !135, line: 3392, baseType: !955, size: 1472)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !956)
!956 = !{!957}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !955, file: !135, line: 3305, baseType: !880, size: 1472)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !711, file: !135, line: 3393, baseType: !959, size: 1792)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !960)
!960 = !{!961, !962, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !959, file: !135, line: 3249, baseType: !880, size: 1472)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !959, file: !135, line: 3251, baseType: !963, size: 64, offset: 1472)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !965, line: 463, size: 1152, elements: !966)
!965 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!966 = !{!967, !970, !1286, !1287, !1402, !1405, !1406, !1407, !1408, !1409, !1410, !1434, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !964, file: !965, line: 464, baseType: !968, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !965, line: 464, flags: DIFlagFwdDecl)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !964, file: !965, line: 467, baseType: !971, size: 64, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !330, line: 374, size: 640, elements: !973)
!973 = !{!974, !1261, !1262, !1275, !1276, !1277, !1278, !1279, !1280, !1282, !1284, !1285}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !972, file: !330, line: 377, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !574, line: 111, baseType: !976)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !330, line: 217, size: 832, elements: !978)
!978 = !{!979, !1226, !1227, !1228, !1231, !1235, !1236, !1237, !1255, !1256, !1257, !1258, !1259, !1260}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !977, file: !330, line: 219, baseType: !980, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !330, line: 151, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !330, line: 151, size: 128, elements: !983)
!983 = !{!984}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !982, file: !330, line: 151, baseType: !985, size: 128)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !330, line: 150, baseType: !986)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !330, line: 150, size: 128, elements: !987)
!987 = !{!988, !989, !990}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !986, file: !330, line: 150, baseType: !7, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !986, file: !330, line: 150, baseType: !7, size: 32, offset: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !986, file: !330, line: 150, baseType: !991, size: 64, offset: 64)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 64, elements: !608)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !574, line: 108, baseType: !993)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !330, line: 122, size: 512, elements: !995)
!995 = !{!996, !997, !998, !1218, !1219, !1220, !1221, !1222, !1223, !1224}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !994, file: !330, line: 124, baseType: !976, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !994, file: !330, line: 125, baseType: !976, size: 64, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !994, file: !330, line: 131, baseType: !999, size: 64, offset: 128)
!999 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !330, line: 128, size: 64, elements: !1000)
!1000 = !{!1001, !1217}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !999, file: !330, line: 129, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !574, line: 66, baseType: !1003)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !1005, line: 143, size: 192, elements: !1006)
!1005 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1006 = !{!1007, !1215, !1216}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1004, file: !1005, line: 145, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !574, line: 69, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !1005, line: 136, size: 192, elements: !1011)
!1011 = !{!1012, !1213, !1214}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1010, file: !1005, line: 137, baseType: !1013, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !574, line: 58, baseType: !1014)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !1005, line: 737, size: 768, elements: !1016)
!1016 = !{!1017, !1034, !1068, !1074, !1079, !1084, !1091, !1097, !1103, !1108, !1122, !1127, !1133, !1138, !1148, !1153, !1171, !1178, !1185, !1191, !1196, !1202, !1208}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1015, file: !1005, line: 738, baseType: !1018, size: 256)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !1005, line: 271, size: 256, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1018, file: !1005, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1018, file: !1005, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1018, file: !1005, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1018, file: !1005, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1018, file: !1005, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1018, file: !1005, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1018, file: !1005, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1018, file: !1005, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1018, file: !1005, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1018, file: !1005, line: 312, baseType: !7, size: 32, offset: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1018, file: !1005, line: 316, baseType: !829, size: 32, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1018, file: !1005, line: 319, baseType: !7, size: 32, offset: 96)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1018, file: !1005, line: 323, baseType: !976, size: 64, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1018, file: !1005, line: 327, baseType: !709, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1015, file: !1005, line: 739, baseType: !1035, size: 448)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !1005, line: 350, size: 448, elements: !1036)
!1036 = !{!1037, !1066}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1035, file: !1005, line: 353, baseType: !1038, size: 384)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !1005, line: 333, size: 384, elements: !1039)
!1039 = !{!1040, !1041, !1049}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1038, file: !1005, line: 336, baseType: !1018, size: 256)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1038, file: !1005, line: 343, baseType: !1042, size: 64, offset: 256)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1044, line: 37, size: 128, elements: !1045)
!1044 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1045 = !{!1046, !1047}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1043, file: !1044, line: 39, baseType: !1042, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1043, file: !1044, line: 40, baseType: !1048, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1038, file: !1005, line: 344, baseType: !1050, size: 64, offset: 320)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1044, line: 45, size: 320, elements: !1052)
!1052 = !{!1053, !1054}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1051, file: !1044, line: 47, baseType: !1050, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1051, file: !1044, line: 48, baseType: !1055, size: 256, offset: 64)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !1056)
!1056 = !{!1057, !1059, !1060, !1065}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1055, file: !135, line: 1884, baseType: !1058, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1055, file: !135, line: 1885, baseType: !1058, size: 64, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1055, file: !135, line: 1891, baseType: !1061, size: 64, offset: 128)
!1061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1055, file: !135, line: 1891, size: 64, elements: !1062)
!1062 = !{!1063, !1064}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1061, file: !135, line: 1891, baseType: !1013, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1061, file: !135, line: 1891, baseType: !709, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1055, file: !135, line: 1892, baseType: !1048, size: 64, offset: 192)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1035, file: !1005, line: 359, baseType: !1067, size: 64, offset: 384)
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 64, elements: !608)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1015, file: !1005, line: 740, baseType: !1069, size: 512)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !1005, line: 365, size: 512, elements: !1070)
!1070 = !{!1071, !1072, !1073}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1069, file: !1005, line: 368, baseType: !1038, size: 384)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1069, file: !1005, line: 373, baseType: !709, size: 64, offset: 384)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1069, file: !1005, line: 374, baseType: !709, size: 64, offset: 448)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1015, file: !1005, line: 741, baseType: !1075, size: 576)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !1005, line: 380, size: 576, elements: !1076)
!1076 = !{!1077, !1078}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1075, file: !1005, line: 383, baseType: !1069, size: 512)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1075, file: !1005, line: 389, baseType: !1067, size: 64, offset: 512)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1015, file: !1005, line: 742, baseType: !1080, size: 320)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !1005, line: 395, size: 320, elements: !1081)
!1081 = !{!1082, !1083}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1080, file: !1005, line: 397, baseType: !1018, size: 256)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1080, file: !1005, line: 400, baseType: !1002, size: 64, offset: 256)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1015, file: !1005, line: 743, baseType: !1085, size: 448)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !1005, line: 406, size: 448, elements: !1086)
!1086 = !{!1087, !1088, !1089, !1090}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1085, file: !1005, line: 408, baseType: !1018, size: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1085, file: !1005, line: 412, baseType: !709, size: 64, offset: 256)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1085, file: !1005, line: 420, baseType: !709, size: 64, offset: 320)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1085, file: !1005, line: 423, baseType: !1002, size: 64, offset: 384)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1015, file: !1005, line: 744, baseType: !1092, size: 384)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !1005, line: 429, size: 384, elements: !1093)
!1093 = !{!1094, !1095, !1096}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1092, file: !1005, line: 431, baseType: !1018, size: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1092, file: !1005, line: 434, baseType: !709, size: 64, offset: 256)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1092, file: !1005, line: 437, baseType: !1002, size: 64, offset: 320)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1015, file: !1005, line: 745, baseType: !1098, size: 384)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !1005, line: 443, size: 384, elements: !1099)
!1099 = !{!1100, !1101, !1102}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1098, file: !1005, line: 445, baseType: !1018, size: 256)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1098, file: !1005, line: 449, baseType: !709, size: 64, offset: 256)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1098, file: !1005, line: 453, baseType: !1002, size: 64, offset: 320)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1015, file: !1005, line: 746, baseType: !1104, size: 320)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !1005, line: 459, size: 320, elements: !1105)
!1105 = !{!1106, !1107}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1104, file: !1005, line: 461, baseType: !1018, size: 256)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1104, file: !1005, line: 464, baseType: !709, size: 64, offset: 256)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1015, file: !1005, line: 747, baseType: !1109, size: 768)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !1005, line: 469, size: 768, elements: !1110)
!1110 = !{!1111, !1112, !1113, !1114, !1115}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1109, file: !1005, line: 471, baseType: !1018, size: 256)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1109, file: !1005, line: 474, baseType: !7, size: 32, offset: 256)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1109, file: !1005, line: 475, baseType: !7, size: 32, offset: 288)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1109, file: !1005, line: 478, baseType: !709, size: 64, offset: 320)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1109, file: !1005, line: 481, baseType: !1116, size: 384, offset: 384)
!1116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1117, size: 384, elements: !608)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !1118)
!1118 = !{!1119, !1120, !1121}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1117, file: !135, line: 1920, baseType: !1055, size: 256)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1117, file: !135, line: 1921, baseType: !709, size: 64, offset: 256)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1117, file: !135, line: 1922, baseType: !829, size: 32, offset: 320)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1015, file: !1005, line: 748, baseType: !1123, size: 320)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !1005, line: 487, size: 320, elements: !1124)
!1124 = !{!1125, !1126}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1123, file: !1005, line: 490, baseType: !1018, size: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1123, file: !1005, line: 494, baseType: !557, size: 32, offset: 256)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1015, file: !1005, line: 749, baseType: !1128, size: 384)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !1005, line: 500, size: 384, elements: !1129)
!1129 = !{!1130, !1131, !1132}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1128, file: !1005, line: 502, baseType: !1018, size: 256)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1128, file: !1005, line: 506, baseType: !1002, size: 64, offset: 256)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1128, file: !1005, line: 510, baseType: !1002, size: 64, offset: 320)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1015, file: !1005, line: 750, baseType: !1134, size: 320)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !1005, line: 529, size: 320, elements: !1135)
!1135 = !{!1136, !1137}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1134, file: !1005, line: 531, baseType: !1018, size: 256)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1134, file: !1005, line: 540, baseType: !1002, size: 64, offset: 256)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1015, file: !1005, line: 751, baseType: !1139, size: 704)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !1005, line: 546, size: 704, elements: !1140)
!1140 = !{!1141, !1142, !1143, !1144, !1145, !1146, !1147}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1139, file: !1005, line: 549, baseType: !1069, size: 512)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1139, file: !1005, line: 553, baseType: !562, size: 64, offset: 512)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1139, file: !1005, line: 557, baseType: !556, size: 8, offset: 576)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1139, file: !1005, line: 558, baseType: !556, size: 8, offset: 584)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1139, file: !1005, line: 559, baseType: !556, size: 8, offset: 592)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1139, file: !1005, line: 560, baseType: !556, size: 8, offset: 600)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1139, file: !1005, line: 566, baseType: !1067, size: 64, offset: 640)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1015, file: !1005, line: 752, baseType: !1149, size: 384)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !1005, line: 571, size: 384, elements: !1150)
!1150 = !{!1151, !1152}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1149, file: !1005, line: 573, baseType: !1080, size: 320)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1149, file: !1005, line: 577, baseType: !709, size: 64, offset: 320)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1015, file: !1005, line: 753, baseType: !1154, size: 576)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !1005, line: 600, size: 576, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1161, !1170}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1154, file: !1005, line: 602, baseType: !1080, size: 320)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1154, file: !1005, line: 605, baseType: !709, size: 64, offset: 320)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1154, file: !1005, line: 609, baseType: !1159, size: 64, offset: 384)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1160, line: 46, baseType: !567)
!1160 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1154, file: !1005, line: 612, baseType: !1162, size: 64, offset: 448)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !1005, line: 581, size: 320, elements: !1164)
!1164 = !{!1165, !1166, !1167, !1168, !1169}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1163, file: !1005, line: 583, baseType: !134, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1163, file: !1005, line: 586, baseType: !709, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1163, file: !1005, line: 589, baseType: !709, size: 64, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1163, file: !1005, line: 592, baseType: !709, size: 64, offset: 192)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1163, file: !1005, line: 595, baseType: !709, size: 64, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1154, file: !1005, line: 616, baseType: !1002, size: 64, offset: 512)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1015, file: !1005, line: 754, baseType: !1172, size: 512)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !1005, line: 622, size: 512, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1172, file: !1005, line: 624, baseType: !1080, size: 320)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1172, file: !1005, line: 628, baseType: !709, size: 64, offset: 320)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1172, file: !1005, line: 632, baseType: !709, size: 64, offset: 384)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1172, file: !1005, line: 636, baseType: !709, size: 64, offset: 448)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1015, file: !1005, line: 755, baseType: !1179, size: 704)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !1005, line: 642, size: 704, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1179, file: !1005, line: 644, baseType: !1172, size: 512)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1179, file: !1005, line: 648, baseType: !709, size: 64, offset: 512)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1179, file: !1005, line: 652, baseType: !709, size: 64, offset: 576)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1179, file: !1005, line: 653, baseType: !709, size: 64, offset: 640)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1015, file: !1005, line: 756, baseType: !1186, size: 448)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !1005, line: 663, size: 448, elements: !1187)
!1187 = !{!1188, !1189, !1190}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1186, file: !1005, line: 665, baseType: !1080, size: 320)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1186, file: !1005, line: 668, baseType: !709, size: 64, offset: 320)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1186, file: !1005, line: 673, baseType: !709, size: 64, offset: 384)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1015, file: !1005, line: 757, baseType: !1192, size: 384)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !1005, line: 694, size: 384, elements: !1193)
!1193 = !{!1194, !1195}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1192, file: !1005, line: 696, baseType: !1080, size: 320)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1192, file: !1005, line: 699, baseType: !709, size: 64, offset: 320)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1015, file: !1005, line: 758, baseType: !1197, size: 384)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !1005, line: 681, size: 384, elements: !1198)
!1198 = !{!1199, !1200, !1201}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1197, file: !1005, line: 683, baseType: !1018, size: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1197, file: !1005, line: 686, baseType: !709, size: 64, offset: 256)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1197, file: !1005, line: 689, baseType: !709, size: 64, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1015, file: !1005, line: 759, baseType: !1203, size: 384)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !1005, line: 707, size: 384, elements: !1204)
!1204 = !{!1205, !1206, !1207}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1203, file: !1005, line: 709, baseType: !1018, size: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1203, file: !1005, line: 712, baseType: !709, size: 64, offset: 256)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1203, file: !1005, line: 712, baseType: !709, size: 64, offset: 320)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1015, file: !1005, line: 760, baseType: !1209, size: 320)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !1005, line: 718, size: 320, elements: !1210)
!1210 = !{!1211, !1212}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1209, file: !1005, line: 720, baseType: !1018, size: 256)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1209, file: !1005, line: 723, baseType: !709, size: 64, offset: 256)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1010, file: !1005, line: 138, baseType: !1009, size: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1010, file: !1005, line: 139, baseType: !1009, size: 64, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1004, file: !1005, line: 146, baseType: !1008, size: 64, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1004, file: !1005, line: 152, baseType: !1002, size: 64, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !999, file: !330, line: 130, baseType: !573, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !994, file: !330, line: 134, baseType: !561, size: 64, offset: 192)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !994, file: !330, line: 137, baseType: !709, size: 64, offset: 256)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !994, file: !330, line: 138, baseType: !829, size: 32, offset: 320)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !994, file: !330, line: 142, baseType: !7, size: 32, offset: 352)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !994, file: !330, line: 144, baseType: !557, size: 32, offset: 384)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !994, file: !330, line: 145, baseType: !557, size: 32, offset: 416)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !994, file: !330, line: 146, baseType: !1225, size: 64, offset: 448)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !330, line: 119, baseType: !680)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !977, file: !330, line: 220, baseType: !980, size: 64, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !977, file: !330, line: 223, baseType: !561, size: 64, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !977, file: !330, line: 226, baseType: !1229, size: 64, offset: 192)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !330, line: 185, flags: DIFlagFwdDecl)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !977, file: !330, line: 229, baseType: !1232, size: 128, offset: 256)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1233, size: 128, elements: !664)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !330, line: 229, flags: DIFlagFwdDecl)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !977, file: !330, line: 232, baseType: !976, size: 64, offset: 384)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !977, file: !330, line: 233, baseType: !976, size: 64, offset: 448)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !977, file: !330, line: 238, baseType: !1238, size: 64, offset: 512)
!1238 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !330, line: 235, size: 64, elements: !1239)
!1239 = !{!1240, !1246}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1238, file: !330, line: 236, baseType: !1241, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !330, line: 273, size: 128, elements: !1243)
!1243 = !{!1244, !1245}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1242, file: !330, line: 275, baseType: !1002, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1242, file: !330, line: 278, baseType: !1002, size: 64, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1238, file: !330, line: 237, baseType: !1247, size: 64)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !330, line: 259, size: 320, elements: !1249)
!1249 = !{!1250, !1251, !1252, !1253, !1254}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1248, file: !330, line: 261, baseType: !573, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1248, file: !330, line: 262, baseType: !573, size: 64, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1248, file: !330, line: 266, baseType: !573, size: 64, offset: 128)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1248, file: !330, line: 267, baseType: !573, size: 64, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1248, file: !330, line: 270, baseType: !557, size: 32, offset: 256)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !977, file: !330, line: 241, baseType: !1225, size: 64, offset: 576)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !977, file: !330, line: 244, baseType: !557, size: 32, offset: 640)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !977, file: !330, line: 247, baseType: !557, size: 32, offset: 672)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !977, file: !330, line: 250, baseType: !557, size: 32, offset: 704)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !977, file: !330, line: 253, baseType: !557, size: 32, offset: 736)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !977, file: !330, line: 256, baseType: !557, size: 32, offset: 768)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !972, file: !330, line: 378, baseType: !975, size: 64, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !972, file: !330, line: 381, baseType: !1263, size: 64, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !330, line: 282, baseType: !1265)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !330, line: 282, size: 128, elements: !1266)
!1266 = !{!1267}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1265, file: !330, line: 282, baseType: !1268, size: 128)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !330, line: 281, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !330, line: 281, size: 128, elements: !1270)
!1270 = !{!1271, !1272, !1273}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1269, file: !330, line: 281, baseType: !7, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1269, file: !330, line: 281, baseType: !7, size: 32, offset: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1269, file: !330, line: 281, baseType: !1274, size: 64, offset: 64)
!1274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !975, size: 64, elements: !608)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !972, file: !330, line: 384, baseType: !557, size: 32, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !972, file: !330, line: 387, baseType: !557, size: 32, offset: 224)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !972, file: !330, line: 390, baseType: !557, size: 32, offset: 256)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !972, file: !330, line: 394, baseType: !1263, size: 64, offset: 320)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !972, file: !330, line: 396, baseType: !329, size: 32, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !972, file: !330, line: 399, baseType: !1281, size: 64, offset: 416)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 64, elements: !664)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !972, file: !330, line: 402, baseType: !1283, size: 64, offset: 480)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !664)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !972, file: !330, line: 406, baseType: !557, size: 32, offset: 544)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !972, file: !330, line: 409, baseType: !557, size: 32, offset: 576)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !964, file: !965, line: 470, baseType: !1003, size: 64, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !964, file: !965, line: 473, baseType: !1288, size: 64, offset: 192)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !915, line: 39, size: 1152, elements: !1290)
!1290 = !{!1291, !1341, !1354, !1366, !1367, !1379, !1380, !1384, !1385, !1386, !1387, !1388}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1289, file: !915, line: 41, baseType: !1292, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1293, line: 144, baseType: !1294)
!1293 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1293, line: 100, size: 896, elements: !1296)
!1296 = !{!1297, !1305, !1310, !1315, !1317, !1318, !1319, !1320, !1321, !1322, !1327, !1329, !1330, !1335, !1340}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1295, file: !1293, line: 102, baseType: !1298, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1293, line: 52, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!1302, !1303}
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1293, line: 47, baseType: !7)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1295, file: !1293, line: 105, baseType: !1306, size: 64, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1293, line: 59, baseType: !1307)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!557, !1303, !1303}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1295, file: !1293, line: 108, baseType: !1311, size: 64, offset: 128)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1293, line: 63, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !561}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1295, file: !1293, line: 111, baseType: !1316, size: 64, offset: 192)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1295, file: !1293, line: 114, baseType: !1159, size: 64, offset: 256)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1295, file: !1293, line: 117, baseType: !1159, size: 64, offset: 320)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1295, file: !1293, line: 120, baseType: !1159, size: 64, offset: 384)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1295, file: !1293, line: 124, baseType: !7, size: 32, offset: 448)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1295, file: !1293, line: 128, baseType: !7, size: 32, offset: 480)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1295, file: !1293, line: 131, baseType: !1323, size: 64, offset: 512)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1293, line: 75, baseType: !1324)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!561, !1159, !1159}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1295, file: !1293, line: 132, baseType: !1328, size: 64, offset: 576)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1293, line: 78, baseType: !1312)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1295, file: !1293, line: 135, baseType: !561, size: 64, offset: 640)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1295, file: !1293, line: 136, baseType: !1331, size: 64, offset: 704)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1293, line: 82, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!561, !561, !1159, !1159}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1295, file: !1293, line: 137, baseType: !1336, size: 64, offset: 768)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1293, line: 83, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{null, !561, !561}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1295, file: !1293, line: 141, baseType: !7, size: 32, offset: 832)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1289, file: !915, line: 48, baseType: !1342, size: 64, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !1005, line: 35, baseType: !1344)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !1005, line: 35, size: 128, elements: !1345)
!1345 = !{!1346}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1344, file: !1005, line: 35, baseType: !1347, size: 128)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !1005, line: 33, baseType: !1348)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !1005, line: 33, size: 128, elements: !1349)
!1349 = !{!1350, !1351, !1352}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1348, file: !1005, line: 33, baseType: !7, size: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1348, file: !1005, line: 33, baseType: !7, size: 32, offset: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1348, file: !1005, line: 33, baseType: !1353, size: 64, offset: 64)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1013, size: 64, elements: !608)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1289, file: !915, line: 51, baseType: !1355, size: 64, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !1358)
!1358 = !{!1359}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1357, file: !135, line: 183, baseType: !1360, size: 128)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !1361)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !1362)
!1362 = !{!1363, !1364, !1365}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1361, file: !135, line: 182, baseType: !7, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1361, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1361, file: !135, line: 182, baseType: !1067, size: 64, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1289, file: !915, line: 54, baseType: !709, size: 64, offset: 192)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1289, file: !915, line: 57, baseType: !1368, size: 128, offset: 256)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1369, line: 31, size: 128, elements: !1370)
!1369 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1370 = !{!1371, !1372, !1373, !1374, !1375, !1376, !1377}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1368, file: !1369, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1368, file: !1369, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1368, file: !1369, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1368, file: !1369, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1368, file: !1369, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1368, file: !1369, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1368, file: !1369, line: 56, baseType: !1378, size: 64, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !574, line: 47, baseType: !648)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1289, file: !915, line: 60, baseType: !1368, size: 128, offset: 384)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1289, file: !915, line: 64, baseType: !1381, size: 64, offset: 512)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1383, line: 33, flags: DIFlagFwdDecl)
!1383 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1289, file: !915, line: 67, baseType: !709, size: 64, offset: 576)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1289, file: !915, line: 73, baseType: !1292, size: 64, offset: 640)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1289, file: !915, line: 77, baseType: !1378, size: 64, offset: 704)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1289, file: !915, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1289, file: !915, line: 82, baseType: !1389, size: 320, offset: 832)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !1044, line: 62, size: 320, elements: !1390)
!1390 = !{!1391, !1397, !1398, !1399, !1400, !1401}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1389, file: !1044, line: 63, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !1044, line: 56, size: 128, elements: !1394)
!1394 = !{!1395, !1396}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1393, file: !1044, line: 57, baseType: !1392, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1393, file: !1044, line: 58, baseType: !804, size: 8, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1389, file: !1044, line: 64, baseType: !7, size: 32, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1389, file: !1044, line: 66, baseType: !7, size: 32, offset: 96)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1389, file: !1044, line: 68, baseType: !556, size: 8, offset: 128)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1389, file: !1044, line: 70, baseType: !1042, size: 64, offset: 192)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1389, file: !1044, line: 71, baseType: !1050, size: 64, offset: 256)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !964, file: !965, line: 476, baseType: !1403, size: 64, offset: 256)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !965, line: 476, flags: DIFlagFwdDecl)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !964, file: !965, line: 479, baseType: !1292, size: 64, offset: 320)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !964, file: !965, line: 484, baseType: !709, size: 64, offset: 384)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !964, file: !965, line: 488, baseType: !709, size: 64, offset: 448)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !964, file: !965, line: 493, baseType: !709, size: 64, offset: 512)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !964, file: !965, line: 496, baseType: !709, size: 64, offset: 576)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !964, file: !965, line: 501, baseType: !1411, size: 64, offset: 640)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !341, line: 2355, size: 576, elements: !1413)
!1413 = !{!1414, !1417, !1418, !1419, !1420, !1422, !1423, !1428, !1429, !1430, !1431, !1432, !1433}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1412, file: !341, line: 2356, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !341, line: 2356, flags: DIFlagFwdDecl)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1412, file: !341, line: 2357, baseType: !562, size: 64, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1412, file: !341, line: 2358, baseType: !557, size: 32, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1412, file: !341, line: 2359, baseType: !557, size: 32, offset: 160)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1412, file: !341, line: 2360, baseType: !1421, size: 128, offset: 192)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 128, elements: !689)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1412, file: !341, line: 2364, baseType: !557, size: 32, offset: 320)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1412, file: !341, line: 2367, baseType: !1424, size: 128, offset: 384)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !341, line: 2349, size: 128, elements: !1425)
!1425 = !{!1426, !1427}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1424, file: !341, line: 2351, baseType: !573, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1424, file: !341, line: 2352, baseType: !680, size: 64, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1412, file: !341, line: 2371, baseType: !340, size: 32, offset: 512)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1412, file: !341, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1412, file: !341, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1412, file: !341, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1412, file: !341, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1412, file: !341, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !964, file: !965, line: 504, baseType: !1435, size: 64, offset: 704)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!1436 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !965, line: 504, flags: DIFlagFwdDecl)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !964, file: !965, line: 507, baseType: !1292, size: 64, offset: 768)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !964, file: !965, line: 510, baseType: !557, size: 32, offset: 832)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !964, file: !965, line: 513, baseType: !557, size: 32, offset: 864)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !964, file: !965, line: 516, baseType: !829, size: 32, offset: 896)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !964, file: !965, line: 519, baseType: !829, size: 32, offset: 928)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !964, file: !965, line: 522, baseType: !7, size: 32, offset: 960)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !964, file: !965, line: 523, baseType: !7, size: 32, offset: 992)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !964, file: !965, line: 528, baseType: !562, size: 64, offset: 1024)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !964, file: !965, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !964, file: !965, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !964, file: !965, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !964, file: !965, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !964, file: !965, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !964, file: !965, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !964, file: !965, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !964, file: !965, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !964, file: !965, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !964, file: !965, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !964, file: !965, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !964, file: !965, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !964, file: !965, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !964, file: !965, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !964, file: !965, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !964, file: !965, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !959, file: !135, line: 3254, baseType: !709, size: 64, offset: 1536)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !959, file: !135, line: 3257, baseType: !709, size: 64, offset: 1600)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !959, file: !135, line: 3258, baseType: !709, size: 64, offset: 1664)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !959, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !959, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !959, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !959, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !959, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !959, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !959, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !959, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !959, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !959, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !959, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !959, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !959, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !959, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !959, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !959, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !959, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !959, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !711, file: !135, line: 3394, baseType: !1483, size: 1344)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !1484)
!1484 = !{!1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1510, !1511, !1512, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1483, file: !135, line: 2280, baseType: !747, size: 192)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1483, file: !135, line: 2281, baseType: !709, size: 64, offset: 192)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1483, file: !135, line: 2282, baseType: !709, size: 64, offset: 256)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1483, file: !135, line: 2283, baseType: !709, size: 64, offset: 320)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1483, file: !135, line: 2284, baseType: !709, size: 64, offset: 384)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1483, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1483, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1483, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1483, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1483, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1483, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1483, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1483, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1483, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1483, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1483, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1483, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1483, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1483, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1483, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1483, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1483, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1483, file: !135, line: 2306, baseType: !1508, size: 32, offset: 544)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1509, line: 31, baseType: !557)
!1509 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1483, file: !135, line: 2307, baseType: !709, size: 64, offset: 576)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1483, file: !135, line: 2308, baseType: !709, size: 64, offset: 640)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1483, file: !135, line: 2314, baseType: !1513, size: 64, offset: 704)
!1513 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !1514)
!1514 = !{!1515, !1516, !1517}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1513, file: !135, line: 2310, baseType: !557, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1513, file: !135, line: 2311, baseType: !562, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1513, file: !135, line: 2312, baseType: !1518, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1483, file: !135, line: 2315, baseType: !709, size: 64, offset: 768)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1483, file: !135, line: 2316, baseType: !709, size: 64, offset: 832)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1483, file: !135, line: 2317, baseType: !709, size: 64, offset: 896)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1483, file: !135, line: 2318, baseType: !709, size: 64, offset: 960)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1483, file: !135, line: 2319, baseType: !709, size: 64, offset: 1024)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1483, file: !135, line: 2320, baseType: !709, size: 64, offset: 1088)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1483, file: !135, line: 2321, baseType: !709, size: 64, offset: 1152)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1483, file: !135, line: 2322, baseType: !709, size: 64, offset: 1216)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1483, file: !135, line: 2324, baseType: !1529, size: 64, offset: 1280)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !711, file: !135, line: 3395, baseType: !1532, size: 320)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !1533)
!1533 = !{!1534, !1535, !1536}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1532, file: !135, line: 1470, baseType: !747, size: 192)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1532, file: !135, line: 1471, baseType: !709, size: 64, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1532, file: !135, line: 1472, baseType: !709, size: 64, offset: 256)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !711, file: !135, line: 3396, baseType: !1538, size: 320)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !1539)
!1539 = !{!1540, !1541, !1542}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1538, file: !135, line: 1483, baseType: !747, size: 192)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1538, file: !135, line: 1484, baseType: !557, size: 32, offset: 192)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1538, file: !135, line: 1485, baseType: !1067, size: 64, offset: 256)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !711, file: !135, line: 3397, baseType: !1544, size: 384)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !1545)
!1545 = !{!1546, !1547, !1548, !1549}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1544, file: !135, line: 1830, baseType: !747, size: 192)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1544, file: !135, line: 1831, baseType: !829, size: 32, offset: 192)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1544, file: !135, line: 1832, baseType: !709, size: 64, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1544, file: !135, line: 1835, baseType: !1067, size: 64, offset: 320)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !711, file: !135, line: 3398, baseType: !1551, size: 704)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !1552)
!1552 = !{!1553, !1554, !1555, !1556, !1557, !1562}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1551, file: !135, line: 1899, baseType: !747, size: 192)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1551, file: !135, line: 1902, baseType: !709, size: 64, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1551, file: !135, line: 1905, baseType: !1013, size: 64, offset: 256)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1551, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1551, file: !135, line: 1911, baseType: !1558, size: 64, offset: 384)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !915, line: 117, size: 128, elements: !1560)
!1560 = !{!1561}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1559, file: !915, line: 120, baseType: !1368, size: 128)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1551, file: !135, line: 1914, baseType: !1055, size: 256, offset: 448)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !711, file: !135, line: 3399, baseType: !1564, size: 704)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !1565)
!1565 = !{!1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1564, file: !135, line: 2009, baseType: !747, size: 192)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1564, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1564, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1564, file: !135, line: 2014, baseType: !829, size: 32, offset: 224)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1564, file: !135, line: 2016, baseType: !709, size: 64, offset: 256)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1564, file: !135, line: 2017, baseType: !1355, size: 64, offset: 320)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1564, file: !135, line: 2019, baseType: !709, size: 64, offset: 384)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1564, file: !135, line: 2020, baseType: !709, size: 64, offset: 448)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1564, file: !135, line: 2021, baseType: !709, size: 64, offset: 512)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1564, file: !135, line: 2022, baseType: !709, size: 64, offset: 576)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1564, file: !135, line: 2023, baseType: !709, size: 64, offset: 640)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !711, file: !135, line: 3400, baseType: !1578, size: 832)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !1579)
!1579 = !{!1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1578, file: !135, line: 2431, baseType: !747, size: 192)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1578, file: !135, line: 2433, baseType: !709, size: 64, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1578, file: !135, line: 2434, baseType: !709, size: 64, offset: 256)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1578, file: !135, line: 2435, baseType: !709, size: 64, offset: 320)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1578, file: !135, line: 2436, baseType: !709, size: 64, offset: 384)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1578, file: !135, line: 2437, baseType: !1355, size: 64, offset: 448)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1578, file: !135, line: 2438, baseType: !709, size: 64, offset: 512)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1578, file: !135, line: 2440, baseType: !709, size: 64, offset: 576)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1578, file: !135, line: 2441, baseType: !709, size: 64, offset: 640)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1578, file: !135, line: 2443, baseType: !1590, size: 128, offset: 704)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !1592)
!1592 = !{!1593}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1591, file: !135, line: 182, baseType: !1360, size: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !711, file: !135, line: 3401, baseType: !1595, size: 320)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !1596)
!1596 = !{!1597, !1598, !1605}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1595, file: !135, line: 3329, baseType: !747, size: 192)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1595, file: !135, line: 3330, baseType: !1599, size: 64, offset: 192)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !1601)
!1601 = !{!1602, !1603, !1604}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1600, file: !135, line: 3322, baseType: !1599, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1600, file: !135, line: 3323, baseType: !1599, size: 64, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1600, file: !135, line: 3324, baseType: !709, size: 64, offset: 128)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1595, file: !135, line: 3331, baseType: !1599, size: 64, offset: 256)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !711, file: !135, line: 3402, baseType: !1607, size: 256)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !1608)
!1608 = !{!1609, !1610}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1607, file: !135, line: 1541, baseType: !747, size: 192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1607, file: !135, line: 1542, baseType: !1611, size: 64, offset: 192)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !1614)
!1614 = !{!1615}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1613, file: !135, line: 1538, baseType: !1616, size: 192)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !1618)
!1618 = !{!1619, !1620, !1621}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1617, file: !135, line: 1537, baseType: !7, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1617, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1617, file: !135, line: 1537, baseType: !1622, size: 128, offset: 64)
!1622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1623, size: 128, elements: !608)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !1624)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !1625)
!1625 = !{!1626, !1627}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1624, file: !135, line: 1533, baseType: !709, size: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1624, file: !135, line: 1534, baseType: !709, size: 64, offset: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !711, file: !135, line: 3403, baseType: !1629, size: 512)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !1630)
!1630 = !{!1631, !1632, !1633, !1634, !1640, !1641, !1642}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1629, file: !135, line: 1939, baseType: !747, size: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1629, file: !135, line: 1940, baseType: !829, size: 32, offset: 192)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1629, file: !135, line: 1941, baseType: !345, size: 32, offset: 224)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1629, file: !135, line: 1946, baseType: !1635, size: 32, offset: 256)
!1635 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !1636)
!1636 = !{!1637, !1638, !1639}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1635, file: !135, line: 1943, baseType: !363, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1635, file: !135, line: 1944, baseType: !370, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1635, file: !135, line: 1945, baseType: !134, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1629, file: !135, line: 1950, baseType: !1002, size: 64, offset: 320)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1629, file: !135, line: 1951, baseType: !1002, size: 64, offset: 384)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1629, file: !135, line: 1953, baseType: !1067, size: 64, offset: 448)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !711, file: !135, line: 3404, baseType: !1644, size: 1664)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !1645)
!1645 = !{!1646, !1647}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1644, file: !135, line: 3338, baseType: !747, size: 192)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1644, file: !135, line: 3341, baseType: !1648, size: 1472, offset: 192)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1649, line: 410, size: 1472, elements: !1650)
!1649 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1650 = !{!1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1648, file: !1649, line: 412, baseType: !557, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1648, file: !1649, line: 413, baseType: !557, size: 32, offset: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1648, file: !1649, line: 414, baseType: !557, size: 32, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1648, file: !1649, line: 415, baseType: !557, size: 32, offset: 96)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1648, file: !1649, line: 416, baseType: !557, size: 32, offset: 128)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1648, file: !1649, line: 417, baseType: !557, size: 32, offset: 160)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1648, file: !1649, line: 418, baseType: !556, size: 8, offset: 192)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1648, file: !1649, line: 419, baseType: !556, size: 8, offset: 200)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1648, file: !1649, line: 420, baseType: !1660, size: 8, offset: 208)
!1660 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1648, file: !1649, line: 421, baseType: !1660, size: 8, offset: 216)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1648, file: !1649, line: 422, baseType: !1660, size: 8, offset: 224)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1648, file: !1649, line: 423, baseType: !1660, size: 8, offset: 232)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1648, file: !1649, line: 424, baseType: !1660, size: 8, offset: 240)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1648, file: !1649, line: 425, baseType: !1660, size: 8, offset: 248)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1648, file: !1649, line: 426, baseType: !1660, size: 8, offset: 256)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1648, file: !1649, line: 427, baseType: !1660, size: 8, offset: 264)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1648, file: !1649, line: 428, baseType: !1660, size: 8, offset: 272)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1648, file: !1649, line: 429, baseType: !1660, size: 8, offset: 280)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1648, file: !1649, line: 430, baseType: !1660, size: 8, offset: 288)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1648, file: !1649, line: 431, baseType: !1660, size: 8, offset: 296)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1648, file: !1649, line: 432, baseType: !1660, size: 8, offset: 304)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1648, file: !1649, line: 433, baseType: !1660, size: 8, offset: 312)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1648, file: !1649, line: 434, baseType: !1660, size: 8, offset: 320)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1648, file: !1649, line: 435, baseType: !1660, size: 8, offset: 328)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1648, file: !1649, line: 436, baseType: !1660, size: 8, offset: 336)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1648, file: !1649, line: 437, baseType: !1660, size: 8, offset: 344)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1648, file: !1649, line: 438, baseType: !1660, size: 8, offset: 352)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1648, file: !1649, line: 439, baseType: !1660, size: 8, offset: 360)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1648, file: !1649, line: 440, baseType: !1660, size: 8, offset: 368)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1648, file: !1649, line: 441, baseType: !1660, size: 8, offset: 376)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1648, file: !1649, line: 442, baseType: !1660, size: 8, offset: 384)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1648, file: !1649, line: 443, baseType: !1660, size: 8, offset: 392)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1648, file: !1649, line: 444, baseType: !1660, size: 8, offset: 400)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1648, file: !1649, line: 445, baseType: !1660, size: 8, offset: 408)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1648, file: !1649, line: 446, baseType: !1660, size: 8, offset: 416)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1648, file: !1649, line: 447, baseType: !1660, size: 8, offset: 424)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1648, file: !1649, line: 448, baseType: !1660, size: 8, offset: 432)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1648, file: !1649, line: 449, baseType: !1660, size: 8, offset: 440)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1648, file: !1649, line: 450, baseType: !1660, size: 8, offset: 448)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1648, file: !1649, line: 451, baseType: !1660, size: 8, offset: 456)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1648, file: !1649, line: 452, baseType: !1660, size: 8, offset: 464)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1648, file: !1649, line: 453, baseType: !1660, size: 8, offset: 472)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1648, file: !1649, line: 454, baseType: !1660, size: 8, offset: 480)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1648, file: !1649, line: 455, baseType: !1660, size: 8, offset: 488)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1648, file: !1649, line: 456, baseType: !1660, size: 8, offset: 496)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1648, file: !1649, line: 457, baseType: !1660, size: 8, offset: 504)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1648, file: !1649, line: 458, baseType: !1660, size: 8, offset: 512)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1648, file: !1649, line: 459, baseType: !1660, size: 8, offset: 520)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1648, file: !1649, line: 460, baseType: !1660, size: 8, offset: 528)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1648, file: !1649, line: 461, baseType: !1660, size: 8, offset: 536)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1648, file: !1649, line: 462, baseType: !1660, size: 8, offset: 544)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1648, file: !1649, line: 463, baseType: !1660, size: 8, offset: 552)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1648, file: !1649, line: 464, baseType: !1660, size: 8, offset: 560)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1648, file: !1649, line: 465, baseType: !1660, size: 8, offset: 568)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1648, file: !1649, line: 466, baseType: !1660, size: 8, offset: 576)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1648, file: !1649, line: 467, baseType: !1660, size: 8, offset: 584)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1648, file: !1649, line: 468, baseType: !1660, size: 8, offset: 592)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1648, file: !1649, line: 469, baseType: !1660, size: 8, offset: 600)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1648, file: !1649, line: 470, baseType: !1660, size: 8, offset: 608)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1648, file: !1649, line: 471, baseType: !1660, size: 8, offset: 616)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1648, file: !1649, line: 472, baseType: !1660, size: 8, offset: 624)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1648, file: !1649, line: 473, baseType: !1660, size: 8, offset: 632)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1648, file: !1649, line: 474, baseType: !1660, size: 8, offset: 640)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1648, file: !1649, line: 475, baseType: !1660, size: 8, offset: 648)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1648, file: !1649, line: 476, baseType: !1660, size: 8, offset: 656)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1648, file: !1649, line: 477, baseType: !1660, size: 8, offset: 664)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1648, file: !1649, line: 478, baseType: !1660, size: 8, offset: 672)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1648, file: !1649, line: 479, baseType: !1660, size: 8, offset: 680)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1648, file: !1649, line: 480, baseType: !1660, size: 8, offset: 688)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1648, file: !1649, line: 481, baseType: !1660, size: 8, offset: 696)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1648, file: !1649, line: 482, baseType: !1660, size: 8, offset: 704)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1648, file: !1649, line: 483, baseType: !1660, size: 8, offset: 712)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1648, file: !1649, line: 484, baseType: !1660, size: 8, offset: 720)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1648, file: !1649, line: 485, baseType: !1660, size: 8, offset: 728)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1648, file: !1649, line: 486, baseType: !1660, size: 8, offset: 736)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1648, file: !1649, line: 487, baseType: !1660, size: 8, offset: 744)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1648, file: !1649, line: 488, baseType: !1660, size: 8, offset: 752)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1648, file: !1649, line: 489, baseType: !1660, size: 8, offset: 760)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1648, file: !1649, line: 490, baseType: !1660, size: 8, offset: 768)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1648, file: !1649, line: 491, baseType: !1660, size: 8, offset: 776)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1648, file: !1649, line: 492, baseType: !1660, size: 8, offset: 784)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1648, file: !1649, line: 493, baseType: !1660, size: 8, offset: 792)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1648, file: !1649, line: 494, baseType: !1660, size: 8, offset: 800)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1648, file: !1649, line: 495, baseType: !1660, size: 8, offset: 808)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1648, file: !1649, line: 496, baseType: !1660, size: 8, offset: 816)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1648, file: !1649, line: 497, baseType: !1660, size: 8, offset: 824)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1648, file: !1649, line: 498, baseType: !1660, size: 8, offset: 832)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1648, file: !1649, line: 499, baseType: !1660, size: 8, offset: 840)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1648, file: !1649, line: 500, baseType: !1660, size: 8, offset: 848)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1648, file: !1649, line: 501, baseType: !1660, size: 8, offset: 856)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1648, file: !1649, line: 502, baseType: !1660, size: 8, offset: 864)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1648, file: !1649, line: 503, baseType: !1660, size: 8, offset: 872)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1648, file: !1649, line: 504, baseType: !1660, size: 8, offset: 880)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1648, file: !1649, line: 505, baseType: !1660, size: 8, offset: 888)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1648, file: !1649, line: 506, baseType: !1660, size: 8, offset: 896)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1648, file: !1649, line: 507, baseType: !1660, size: 8, offset: 904)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1648, file: !1649, line: 508, baseType: !1660, size: 8, offset: 912)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1648, file: !1649, line: 509, baseType: !1660, size: 8, offset: 920)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1648, file: !1649, line: 510, baseType: !1660, size: 8, offset: 928)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1648, file: !1649, line: 511, baseType: !1660, size: 8, offset: 936)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1648, file: !1649, line: 512, baseType: !1660, size: 8, offset: 944)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1648, file: !1649, line: 513, baseType: !1660, size: 8, offset: 952)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1648, file: !1649, line: 514, baseType: !1660, size: 8, offset: 960)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1648, file: !1649, line: 515, baseType: !1660, size: 8, offset: 968)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1648, file: !1649, line: 516, baseType: !1660, size: 8, offset: 976)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1648, file: !1649, line: 517, baseType: !1660, size: 8, offset: 984)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1648, file: !1649, line: 518, baseType: !1660, size: 8, offset: 992)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1648, file: !1649, line: 519, baseType: !1660, size: 8, offset: 1000)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1648, file: !1649, line: 520, baseType: !1660, size: 8, offset: 1008)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1648, file: !1649, line: 521, baseType: !1660, size: 8, offset: 1016)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1648, file: !1649, line: 522, baseType: !1660, size: 8, offset: 1024)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1648, file: !1649, line: 523, baseType: !1660, size: 8, offset: 1032)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1648, file: !1649, line: 524, baseType: !1660, size: 8, offset: 1040)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1648, file: !1649, line: 525, baseType: !1660, size: 8, offset: 1048)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1648, file: !1649, line: 526, baseType: !1660, size: 8, offset: 1056)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1648, file: !1649, line: 527, baseType: !1660, size: 8, offset: 1064)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1648, file: !1649, line: 528, baseType: !1660, size: 8, offset: 1072)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1648, file: !1649, line: 529, baseType: !1660, size: 8, offset: 1080)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1648, file: !1649, line: 530, baseType: !1660, size: 8, offset: 1088)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1648, file: !1649, line: 531, baseType: !1660, size: 8, offset: 1096)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1648, file: !1649, line: 532, baseType: !1660, size: 8, offset: 1104)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1648, file: !1649, line: 533, baseType: !1660, size: 8, offset: 1112)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1648, file: !1649, line: 534, baseType: !1660, size: 8, offset: 1120)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1648, file: !1649, line: 535, baseType: !1660, size: 8, offset: 1128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1648, file: !1649, line: 536, baseType: !1660, size: 8, offset: 1136)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1648, file: !1649, line: 537, baseType: !1660, size: 8, offset: 1144)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1648, file: !1649, line: 538, baseType: !1660, size: 8, offset: 1152)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1648, file: !1649, line: 539, baseType: !1660, size: 8, offset: 1160)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1648, file: !1649, line: 540, baseType: !1660, size: 8, offset: 1168)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1648, file: !1649, line: 541, baseType: !1660, size: 8, offset: 1176)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1648, file: !1649, line: 542, baseType: !1660, size: 8, offset: 1184)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1648, file: !1649, line: 543, baseType: !1660, size: 8, offset: 1192)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1648, file: !1649, line: 544, baseType: !1660, size: 8, offset: 1200)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1648, file: !1649, line: 545, baseType: !1660, size: 8, offset: 1208)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1648, file: !1649, line: 546, baseType: !1660, size: 8, offset: 1216)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1648, file: !1649, line: 547, baseType: !1660, size: 8, offset: 1224)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1648, file: !1649, line: 548, baseType: !1660, size: 8, offset: 1232)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1648, file: !1649, line: 549, baseType: !1660, size: 8, offset: 1240)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1648, file: !1649, line: 550, baseType: !1660, size: 8, offset: 1248)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1648, file: !1649, line: 551, baseType: !1660, size: 8, offset: 1256)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1648, file: !1649, line: 552, baseType: !1660, size: 8, offset: 1264)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1648, file: !1649, line: 553, baseType: !1660, size: 8, offset: 1272)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1648, file: !1649, line: 554, baseType: !1660, size: 8, offset: 1280)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1648, file: !1649, line: 555, baseType: !1660, size: 8, offset: 1288)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1648, file: !1649, line: 556, baseType: !1660, size: 8, offset: 1296)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1648, file: !1649, line: 557, baseType: !1660, size: 8, offset: 1304)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1648, file: !1649, line: 558, baseType: !1660, size: 8, offset: 1312)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1648, file: !1649, line: 559, baseType: !1660, size: 8, offset: 1320)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1648, file: !1649, line: 560, baseType: !1660, size: 8, offset: 1328)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1648, file: !1649, line: 561, baseType: !1660, size: 8, offset: 1336)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1648, file: !1649, line: 562, baseType: !1660, size: 8, offset: 1344)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1648, file: !1649, line: 563, baseType: !1660, size: 8, offset: 1352)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1648, file: !1649, line: 564, baseType: !1660, size: 8, offset: 1360)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1648, file: !1649, line: 565, baseType: !1660, size: 8, offset: 1368)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1648, file: !1649, line: 566, baseType: !1660, size: 8, offset: 1376)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1648, file: !1649, line: 567, baseType: !1660, size: 8, offset: 1384)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1648, file: !1649, line: 568, baseType: !1660, size: 8, offset: 1392)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1648, file: !1649, line: 569, baseType: !1660, size: 8, offset: 1400)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1648, file: !1649, line: 570, baseType: !1660, size: 8, offset: 1408)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1648, file: !1649, line: 571, baseType: !1660, size: 8, offset: 1416)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1648, file: !1649, line: 572, baseType: !1660, size: 8, offset: 1424)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1648, file: !1649, line: 573, baseType: !1660, size: 8, offset: 1432)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1648, file: !1649, line: 574, baseType: !1660, size: 8, offset: 1440)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !711, file: !135, line: 3405, baseType: !1816, size: 384)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !1817)
!1817 = !{!1818, !1819}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1816, file: !135, line: 3353, baseType: !747, size: 192)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1816, file: !135, line: 3356, baseType: !1820, size: 192, offset: 192)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1649, line: 578, size: 192, elements: !1821)
!1821 = !{!1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1820, file: !1649, line: 580, baseType: !557, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1820, file: !1649, line: 581, baseType: !557, size: 32, offset: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1820, file: !1649, line: 582, baseType: !557, size: 32, offset: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1820, file: !1649, line: 583, baseType: !557, size: 32, offset: 96)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1820, file: !1649, line: 584, baseType: !556, size: 8, offset: 128)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1820, file: !1649, line: 585, baseType: !556, size: 8, offset: 136)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1820, file: !1649, line: 586, baseType: !556, size: 8, offset: 144)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1820, file: !1649, line: 587, baseType: !556, size: 8, offset: 152)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1820, file: !1649, line: 588, baseType: !556, size: 8, offset: 160)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1820, file: !1649, line: 589, baseType: !556, size: 8, offset: 168)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1820, file: !1649, line: 590, baseType: !556, size: 8, offset: 176)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !594, file: !378, line: 178, baseType: !976, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !594, file: !378, line: 179, baseType: !1835, size: 64)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !378, line: 150, baseType: !1837)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !378, line: 142, size: 320, elements: !1838)
!1838 = !{!1839, !1840, !1841, !1842, !1843, !1844}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1837, file: !378, line: 144, baseType: !709, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1837, file: !378, line: 145, baseType: !573, size: 64, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1837, file: !378, line: 146, baseType: !573, size: 64, offset: 128)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1837, file: !378, line: 147, baseType: !1508, size: 32, offset: 192)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1837, file: !378, line: 148, baseType: !7, size: 32, offset: 224)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1837, file: !378, line: 149, baseType: !556, size: 8, offset: 256)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !594, file: !378, line: 180, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !378, line: 162, baseType: !1848)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !378, line: 159, size: 128, elements: !1849)
!1849 = !{!1850, !1851}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1848, file: !378, line: 160, baseType: !709, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1848, file: !378, line: 161, baseType: !680, size: 64, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !594, file: !378, line: 181, baseType: !1853, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !378, line: 181, flags: DIFlagFwdDecl)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !589, file: !378, line: 317, baseType: !1856, size: 64)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !680, size: 64, elements: !608)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !589, file: !378, line: 318, baseType: !1858, size: 320)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !378, line: 188, size: 320, elements: !1859)
!1859 = !{!1860, !1862, !1917}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1858, file: !378, line: 190, baseType: !1861, size: 192)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !593, size: 192, elements: !780)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1858, file: !378, line: 193, baseType: !1863, size: 64, offset: 192)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !378, line: 206, size: 320, elements: !1865)
!1865 = !{!1866, !1902, !1903, !1904, !1916}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1864, file: !378, line: 208, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !574, line: 62, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1870, line: 538, size: 256, elements: !1871)
!1870 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1871 = !{!1872, !1876, !1882, !1893}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1869, file: !1870, line: 539, baseType: !1873, size: 32)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1870, line: 482, size: 32, elements: !1874)
!1874 = !{!1875}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1873, file: !1870, line: 484, baseType: !7, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1869, file: !1870, line: 540, baseType: !1877, size: 192)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1870, line: 488, size: 192, elements: !1878)
!1878 = !{!1879, !1880, !1881}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1877, file: !1870, line: 489, baseType: !1873, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1877, file: !1870, line: 492, baseType: !562, size: 64, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1877, file: !1870, line: 496, baseType: !709, size: 64, offset: 128)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1869, file: !1870, line: 541, baseType: !1883, size: 256)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1870, line: 504, size: 256, elements: !1884)
!1884 = !{!1885, !1886, !1891, !1892}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1883, file: !1870, line: 505, baseType: !1873, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1883, file: !1870, line: 509, baseType: !1887, size: 64, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1870, line: 501, baseType: !1888)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{null, !1303}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1883, file: !1870, line: 510, baseType: !1303, size: 64, offset: 128)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1883, file: !1870, line: 513, baseType: !1867, size: 64, offset: 192)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1869, file: !1870, line: 542, baseType: !1894, size: 128)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1870, line: 530, size: 128, elements: !1895)
!1895 = !{!1896, !1897}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1894, file: !1870, line: 531, baseType: !1873, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1894, file: !1870, line: 534, baseType: !1898, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1870, line: 525, baseType: !1899)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{!556, !709, !562, !567, !567}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1864, file: !378, line: 211, baseType: !7, size: 32, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1864, file: !378, line: 214, baseType: !680, size: 64, offset: 128)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1864, file: !378, line: 224, baseType: !1905, size: 64, offset: 192)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !378, line: 202, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !378, line: 202, size: 128, elements: !1908)
!1908 = !{!1909}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1907, file: !378, line: 202, baseType: !1910, size: 128)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !378, line: 200, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !378, line: 200, size: 128, elements: !1912)
!1912 = !{!1913, !1914, !1915}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1911, file: !378, line: 200, baseType: !7, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1911, file: !378, line: 200, baseType: !7, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1911, file: !378, line: 200, baseType: !607, size: 64, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1864, file: !378, line: 234, baseType: !1905, size: 64, offset: 256)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1858, file: !378, line: 197, baseType: !680, size: 64, offset: 256)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !589, file: !378, line: 319, baseType: !769, size: 256)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !589, file: !378, line: 320, baseType: !788, size: 192)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !711)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alias_set_entry_d", file: !3, line: 134, size: 128, elements: !1924)
!1924 = !{!1925, !1926, !1927}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1923, file: !3, line: 136, baseType: !1508, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "has_zero_child", scope: !1923, file: !3, line: 140, baseType: !557, size: 32, offset: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1923, file: !3, line: 149, baseType: !1928, size: 64, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree", file: !565, line: 128, baseType: !1929)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_s", file: !565, line: 109, size: 448, elements: !1931)
!1931 = !{!1932, !1942, !1947, !1952, !1957, !1962, !1964}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1930, file: !565, line: 111, baseType: !1933, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_node", file: !565, line: 66, baseType: !1934)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_node_s", file: !565, line: 96, size: 256, elements: !1936)
!1936 = !{!1937, !1938, !1940, !1941}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1935, file: !565, line: 98, baseType: !564, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1935, file: !565, line: 101, baseType: !1939, size: 64, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_value", file: !565, line: 63, baseType: !566)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1935, file: !565, line: 104, baseType: !1933, size: 64, offset: 128)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1935, file: !565, line: 105, baseType: !1933, size: 64, offset: 192)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !1930, file: !565, line: 114, baseType: !1943, size: 64, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_compare_fn", file: !565, line: 70, baseType: !1944)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = !DISubroutineType(types: !1946)
!1946 = !{!557, !564, !564}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "delete_key", scope: !1930, file: !565, line: 117, baseType: !1948, size: 64, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_key_fn", file: !565, line: 74, baseType: !1949)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{null, !564}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "delete_value", scope: !1930, file: !565, line: 120, baseType: !1953, size: 64, offset: 192)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_value_fn", file: !565, line: 78, baseType: !1954)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DISubroutineType(types: !1956)
!1956 = !{null, !1939}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "allocate", scope: !1930, file: !565, line: 123, baseType: !1958, size: 64, offset: 256)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_allocate_fn", file: !565, line: 87, baseType: !1959)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DISubroutineType(types: !1961)
!1961 = !{!561, !557, !561}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "deallocate", scope: !1930, file: !565, line: 124, baseType: !1963, size: 64, offset: 320)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_deallocate_fn", file: !565, line: 93, baseType: !1337)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_data", scope: !1930, file: !565, line: 125, baseType: !561, size: 64, offset: 384)
!1965 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !576)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_alias_set_entry_gc", file: !3, line: 250, size: 128, elements: !1970)
!1970 = !{!1971}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1969, file: !3, line: 250, baseType: !1972, size: 128)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_alias_set_entry_base", file: !3, line: 249, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_alias_set_entry_base", file: !3, line: 249, size: 128, elements: !1974)
!1974 = !{!1975, !1976, !1977}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1973, file: !3, line: 249, baseType: !7, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1973, file: !3, line: 249, baseType: !7, size: 32, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1973, file: !3, line: 249, baseType: !1978, size: 64, offset: 64)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1979, size: 64, elements: !608)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_entry", file: !3, line: 151, baseType: !1922)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_alias_set_entry_gc", file: !3, line: 250, baseType: !1969)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !574, line: 51, baseType: !1966)
!1983 = !{!1984, !2000, !2003, !2006, !2008, !2010, !2012, !2017, !2019, !2021, !2023, !0, !2025, !2027, !2029, !2031, !2033}
!1984 = !DIGlobalVariableExpression(var: !1985, expr: !DIExpression())
!1985 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_alias_h", scope: !2, file: !1986, line: 148, type: !1987, isLocal: false, isDefinition: true)
!1986 = !DIFile(filename: "./gt-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1988, size: 1600, elements: !1998)
!1988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !1990, line: 69, size: 320, elements: !1991)
!1990 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1991 = !{!1992, !1993, !1994, !1995, !1997}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1989, file: !1990, line: 70, baseType: !561, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !1989, file: !1990, line: 71, baseType: !1159, size: 64, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !1989, file: !1990, line: 72, baseType: !1159, size: 64, offset: 128)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1989, file: !1990, line: 73, baseType: !1996, size: 64, offset: 192)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !1990, line: 65, baseType: !1312)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !1989, file: !1990, line: 74, baseType: !1996, size: 64, offset: 256)
!1998 = !{!1999}
!1999 = !DISubrange(count: 5)
!2000 = !DIGlobalVariableExpression(var: !2001, expr: !DIExpression())
!2001 = distinct !DIGlobalVariable(name: "gt_ggc_rd_gt_alias_h", scope: !2, file: !1986, line: 180, type: !2002, isLocal: false, isDefinition: true)
!2002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1988, size: 640, elements: !664)
!2003 = !DIGlobalVariableExpression(var: !2004, expr: !DIExpression())
!2004 = distinct !DIGlobalVariable(name: "gt_pch_rs_gt_alias_h", scope: !2, file: !1986, line: 185, type: !2005, isLocal: false, isDefinition: true)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1988, size: 1280, elements: !689)
!2006 = !DIGlobalVariableExpression(var: !2007, expr: !DIExpression())
!2007 = distinct !DIGlobalVariable(name: "reg_base_value", scope: !2, file: !3, line: 207, type: !1905, isLocal: true, isDefinition: true)
!2008 = !DIGlobalVariableExpression(var: !2009, expr: !DIExpression())
!2009 = distinct !DIGlobalVariable(name: "new_reg_base_value", scope: !2, file: !3, line: 208, type: !572, isLocal: true, isDefinition: true)
!2010 = !DIGlobalVariableExpression(var: !2011, expr: !DIExpression())
!2011 = distinct !DIGlobalVariable(name: "old_reg_base_value", scope: !2, file: !3, line: 213, type: !1905, isLocal: true, isDefinition: true)
!2012 = !DIGlobalVariableExpression(var: !2013, expr: !DIExpression())
!2013 = distinct !DIGlobalVariable(name: "static_reg_base_value", scope: !2, file: !3, line: 217, type: !2014, isLocal: true, isDefinition: true)
!2014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !573, size: 3392, elements: !2015)
!2015 = !{!2016}
!2016 = !DISubrange(count: 53)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "reg_known_value", scope: !2, file: !3, line: 226, type: !572, isLocal: true, isDefinition: true)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "reg_known_value_size", scope: !2, file: !3, line: 229, type: !7, isLocal: true, isDefinition: true)
!2021 = !DIGlobalVariableExpression(var: !2022, expr: !DIExpression())
!2022 = distinct !DIGlobalVariable(name: "reg_known_equiv_p", scope: !2, file: !3, line: 243, type: !555, isLocal: true, isDefinition: true)
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "copying_arguments", scope: !2, file: !3, line: 247, type: !556, isLocal: true, isDefinition: true)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "reg_seen", scope: !2, file: !3, line: 1113, type: !559, isLocal: true, isDefinition: true)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "unique_id", scope: !2, file: !3, line: 1117, type: !557, isLocal: true, isDefinition: true)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "memory_modified", scope: !2, file: !3, line: 2579, type: !556, isLocal: true, isDefinition: true)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "frame_set", scope: !2, file: !3, line: 922, type: !1508, isLocal: true, isDefinition: true)
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "varargs_set", scope: !2, file: !3, line: 900, type: !1508, isLocal: true, isDefinition: true)
!2035 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2036 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2037 = !{i32 2, !"Dwarf Version", i32 4}
!2038 = !{i32 2, !"Debug Info Version", i32 3}
!2039 = !{i32 1, !"wchar_size", i32 4}
!2040 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2041 = distinct !DISubprogram(name: "vprintf", scope: !2042, file: !2042, line: 39, type: !2043, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2053)
!2042 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2043 = !DISubroutineType(types: !2044)
!2044 = !{!557, !2045, !2046}
!2045 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !562)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2048)
!2048 = !{!2049, !2050, !2051, !2052}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2047, file: !3, baseType: !7, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2047, file: !3, baseType: !7, size: 32, offset: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2047, file: !3, baseType: !561, size: 64, offset: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2047, file: !3, baseType: !561, size: 64, offset: 128)
!2053 = !{!2054, !2055}
!2054 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2041, file: !2042, line: 39, type: !2045)
!2055 = !DILocalVariable(name: "__arg", arg: 2, scope: !2041, file: !2042, line: 39, type: !2046)
!2056 = !DILocation(line: 0, scope: !2041)
!2057 = !DILocation(line: 41, column: 20, scope: !2041)
!2058 = !DILocation(line: 41, column: 10, scope: !2041)
!2059 = !DILocation(line: 41, column: 3, scope: !2041)
!2060 = distinct !DISubprogram(name: "getchar", scope: !2042, file: !2042, line: 47, type: !2061, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2063)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{!557}
!2063 = !{}
!2064 = !DILocation(line: 49, column: 16, scope: !2060)
!2065 = !DILocation(line: 49, column: 10, scope: !2060)
!2066 = !DILocation(line: 49, column: 3, scope: !2060)
!2067 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2042, file: !2042, line: 56, type: !2068, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2120)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!557, !2070}
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2072, line: 7, baseType: !2073)
!2072 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2074, line: 49, size: 1728, elements: !2075)
!2074 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2075 = !{!2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2091, !2093, !2094, !2095, !2098, !2099, !2100, !2101, !2104, !2106, !2109, !2112, !2113, !2114, !2115, !2116}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2073, file: !2074, line: 51, baseType: !557, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2073, file: !2074, line: 54, baseType: !559, size: 64, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2073, file: !2074, line: 55, baseType: !559, size: 64, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2073, file: !2074, line: 56, baseType: !559, size: 64, offset: 192)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2073, file: !2074, line: 57, baseType: !559, size: 64, offset: 256)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2073, file: !2074, line: 58, baseType: !559, size: 64, offset: 320)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2073, file: !2074, line: 59, baseType: !559, size: 64, offset: 384)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2073, file: !2074, line: 60, baseType: !559, size: 64, offset: 448)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2073, file: !2074, line: 61, baseType: !559, size: 64, offset: 512)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2073, file: !2074, line: 64, baseType: !559, size: 64, offset: 576)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2073, file: !2074, line: 65, baseType: !559, size: 64, offset: 640)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2073, file: !2074, line: 66, baseType: !559, size: 64, offset: 704)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2073, file: !2074, line: 68, baseType: !2089, size: 64, offset: 768)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2074, line: 36, flags: DIFlagFwdDecl)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2073, file: !2074, line: 70, baseType: !2092, size: 64, offset: 832)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2073, file: !2074, line: 72, baseType: !557, size: 32, offset: 896)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2073, file: !2074, line: 73, baseType: !557, size: 32, offset: 928)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2073, file: !2074, line: 74, baseType: !2096, size: 64, offset: 960)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2097, line: 152, baseType: !680)
!2097 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2073, file: !2074, line: 77, baseType: !1965, size: 16, offset: 1024)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2073, file: !2074, line: 78, baseType: !1660, size: 8, offset: 1040)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2073, file: !2074, line: 79, baseType: !804, size: 8, offset: 1048)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2073, file: !2074, line: 81, baseType: !2102, size: 64, offset: 1088)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2074, line: 43, baseType: null)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2073, file: !2074, line: 89, baseType: !2105, size: 64, offset: 1152)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2097, line: 153, baseType: !680)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2073, file: !2074, line: 91, baseType: !2107, size: 64, offset: 1216)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2074, line: 37, flags: DIFlagFwdDecl)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2073, file: !2074, line: 92, baseType: !2110, size: 64, offset: 1280)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2074, line: 38, flags: DIFlagFwdDecl)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2073, file: !2074, line: 93, baseType: !2092, size: 64, offset: 1344)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2073, file: !2074, line: 94, baseType: !561, size: 64, offset: 1408)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2073, file: !2074, line: 95, baseType: !1159, size: 64, offset: 1472)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2073, file: !2074, line: 96, baseType: !557, size: 32, offset: 1536)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2073, file: !2074, line: 98, baseType: !2117, size: 160, offset: 1568)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !560, size: 160, elements: !2118)
!2118 = !{!2119}
!2119 = !DISubrange(count: 20)
!2120 = !{!2121}
!2121 = !DILocalVariable(name: "__fp", arg: 1, scope: !2067, file: !2042, line: 56, type: !2070)
!2122 = !DILocation(line: 0, scope: !2067)
!2123 = !DILocation(line: 58, column: 10, scope: !2067)
!2124 = !DILocation(line: 58, column: 3, scope: !2067)
!2125 = distinct !DISubprogram(name: "getc_unlocked", scope: !2042, file: !2042, line: 66, type: !2068, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2126)
!2126 = !{!2127}
!2127 = !DILocalVariable(name: "__fp", arg: 1, scope: !2125, file: !2042, line: 66, type: !2070)
!2128 = !DILocation(line: 0, scope: !2125)
!2129 = !DILocation(line: 68, column: 10, scope: !2125)
!2130 = !DILocation(line: 68, column: 3, scope: !2125)
!2131 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2042, file: !2042, line: 73, type: !2061, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2063)
!2132 = !DILocation(line: 75, column: 10, scope: !2131)
!2133 = !DILocation(line: 75, column: 3, scope: !2131)
!2134 = distinct !DISubprogram(name: "putchar", scope: !2042, file: !2042, line: 82, type: !2135, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2137)
!2135 = !DISubroutineType(types: !2136)
!2136 = !{!557, !557}
!2137 = !{!2138}
!2138 = !DILocalVariable(name: "__c", arg: 1, scope: !2134, file: !2042, line: 82, type: !557)
!2139 = !DILocation(line: 0, scope: !2134)
!2140 = !DILocation(line: 84, column: 21, scope: !2134)
!2141 = !DILocation(line: 84, column: 10, scope: !2134)
!2142 = !DILocation(line: 84, column: 3, scope: !2134)
!2143 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2042, file: !2042, line: 91, type: !2144, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2146)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!557, !557, !2070}
!2146 = !{!2147, !2148}
!2147 = !DILocalVariable(name: "__c", arg: 1, scope: !2143, file: !2042, line: 91, type: !557)
!2148 = !DILocalVariable(name: "__stream", arg: 2, scope: !2143, file: !2042, line: 91, type: !2070)
!2149 = !DILocation(line: 0, scope: !2143)
!2150 = !DILocation(line: 93, column: 10, scope: !2143)
!2151 = !DILocation(line: 93, column: 3, scope: !2143)
!2152 = distinct !DISubprogram(name: "putc_unlocked", scope: !2042, file: !2042, line: 101, type: !2144, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2153)
!2153 = !{!2154, !2155}
!2154 = !DILocalVariable(name: "__c", arg: 1, scope: !2152, file: !2042, line: 101, type: !557)
!2155 = !DILocalVariable(name: "__stream", arg: 2, scope: !2152, file: !2042, line: 101, type: !2070)
!2156 = !DILocation(line: 0, scope: !2152)
!2157 = !DILocation(line: 103, column: 10, scope: !2152)
!2158 = !DILocation(line: 103, column: 3, scope: !2152)
!2159 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2042, file: !2042, line: 108, type: !2135, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2160)
!2160 = !{!2161}
!2161 = !DILocalVariable(name: "__c", arg: 1, scope: !2159, file: !2042, line: 108, type: !557)
!2162 = !DILocation(line: 0, scope: !2159)
!2163 = !DILocation(line: 110, column: 10, scope: !2159)
!2164 = !DILocation(line: 110, column: 3, scope: !2159)
!2165 = distinct !DISubprogram(name: "getline", scope: !2042, file: !2042, line: 118, type: !2166, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2170)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!2168, !558, !2169, !2070}
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2097, line: 193, baseType: !680)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!2170 = !{!2171, !2172, !2173}
!2171 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2165, file: !2042, line: 118, type: !558)
!2172 = !DILocalVariable(name: "__n", arg: 2, scope: !2165, file: !2042, line: 118, type: !2169)
!2173 = !DILocalVariable(name: "__stream", arg: 3, scope: !2165, file: !2042, line: 118, type: !2070)
!2174 = !DILocation(line: 0, scope: !2165)
!2175 = !DILocation(line: 120, column: 10, scope: !2165)
!2176 = !DILocation(line: 120, column: 3, scope: !2165)
!2177 = distinct !DISubprogram(name: "feof_unlocked", scope: !2042, file: !2042, line: 128, type: !2068, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2178)
!2178 = !{!2179}
!2179 = !DILocalVariable(name: "__stream", arg: 1, scope: !2177, file: !2042, line: 128, type: !2070)
!2180 = !DILocation(line: 0, scope: !2177)
!2181 = !DILocation(line: 130, column: 10, scope: !2177)
!2182 = !DILocation(line: 130, column: 3, scope: !2177)
!2183 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2042, file: !2042, line: 135, type: !2068, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2184)
!2184 = !{!2185}
!2185 = !DILocalVariable(name: "__stream", arg: 1, scope: !2183, file: !2042, line: 135, type: !2070)
!2186 = !DILocation(line: 0, scope: !2183)
!2187 = !DILocation(line: 137, column: 10, scope: !2183)
!2188 = !DILocation(line: 137, column: 3, scope: !2183)
!2189 = distinct !DISubprogram(name: "tolower", scope: !2190, file: !2190, line: 207, type: !2135, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2191)
!2190 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2191 = !{!2192}
!2192 = !DILocalVariable(name: "__c", arg: 1, scope: !2189, file: !2190, line: 207, type: !557)
!2193 = !DILocation(line: 0, scope: !2189)
!2194 = !DILocation(line: 209, column: 22, scope: !2189)
!2195 = !DILocation(line: 209, column: 39, scope: !2189)
!2196 = !DILocation(line: 209, column: 38, scope: !2189)
!2197 = !DILocation(line: 209, column: 37, scope: !2189)
!2198 = !DILocation(line: 209, column: 10, scope: !2189)
!2199 = !DILocation(line: 209, column: 3, scope: !2189)
!2200 = distinct !DISubprogram(name: "toupper", scope: !2190, file: !2190, line: 213, type: !2135, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2201)
!2201 = !{!2202}
!2202 = !DILocalVariable(name: "__c", arg: 1, scope: !2200, file: !2190, line: 213, type: !557)
!2203 = !DILocation(line: 0, scope: !2200)
!2204 = !DILocation(line: 215, column: 22, scope: !2200)
!2205 = !DILocation(line: 215, column: 39, scope: !2200)
!2206 = !DILocation(line: 215, column: 38, scope: !2200)
!2207 = !DILocation(line: 215, column: 37, scope: !2200)
!2208 = !DILocation(line: 215, column: 10, scope: !2200)
!2209 = !DILocation(line: 215, column: 3, scope: !2200)
!2210 = distinct !DISubprogram(name: "atoi", scope: !2211, file: !2211, line: 361, type: !2212, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2214)
!2211 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2212 = !DISubroutineType(types: !2213)
!2213 = !{!557, !562}
!2214 = !{!2215}
!2215 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2210, file: !2211, line: 361, type: !562)
!2216 = !DILocation(line: 0, scope: !2210)
!2217 = !DILocation(line: 363, column: 16, scope: !2210)
!2218 = !DILocation(line: 363, column: 10, scope: !2210)
!2219 = !DILocation(line: 363, column: 3, scope: !2210)
!2220 = distinct !DISubprogram(name: "atol", scope: !2211, file: !2211, line: 366, type: !2221, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2223)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{!680, !562}
!2223 = !{!2224}
!2224 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2220, file: !2211, line: 366, type: !562)
!2225 = !DILocation(line: 0, scope: !2220)
!2226 = !DILocation(line: 368, column: 10, scope: !2220)
!2227 = !DILocation(line: 368, column: 3, scope: !2220)
!2228 = distinct !DISubprogram(name: "atoll", scope: !2211, file: !2211, line: 373, type: !2229, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2232)
!2229 = !DISubroutineType(types: !2230)
!2230 = !{!2231, !562}
!2231 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2232 = !{!2233}
!2233 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2228, file: !2211, line: 373, type: !562)
!2234 = !DILocation(line: 0, scope: !2228)
!2235 = !DILocation(line: 375, column: 10, scope: !2228)
!2236 = !DILocation(line: 375, column: 3, scope: !2228)
!2237 = distinct !DISubprogram(name: "bsearch", scope: !2238, file: !2238, line: 20, type: !2239, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2242)
!2238 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2239 = !DISubroutineType(types: !2240)
!2240 = !{!561, !1303, !1303, !1159, !1159, !2241}
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2211, line: 808, baseType: !1307)
!2242 = !{!2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252}
!2243 = !DILocalVariable(name: "__key", arg: 1, scope: !2237, file: !2238, line: 20, type: !1303)
!2244 = !DILocalVariable(name: "__base", arg: 2, scope: !2237, file: !2238, line: 20, type: !1303)
!2245 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2237, file: !2238, line: 20, type: !1159)
!2246 = !DILocalVariable(name: "__size", arg: 4, scope: !2237, file: !2238, line: 20, type: !1159)
!2247 = !DILocalVariable(name: "__compar", arg: 5, scope: !2237, file: !2238, line: 21, type: !2241)
!2248 = !DILocalVariable(name: "__l", scope: !2237, file: !2238, line: 23, type: !1159)
!2249 = !DILocalVariable(name: "__u", scope: !2237, file: !2238, line: 23, type: !1159)
!2250 = !DILocalVariable(name: "__idx", scope: !2237, file: !2238, line: 23, type: !1159)
!2251 = !DILocalVariable(name: "__p", scope: !2237, file: !2238, line: 24, type: !1303)
!2252 = !DILocalVariable(name: "__comparison", scope: !2237, file: !2238, line: 25, type: !557)
!2253 = !DILocation(line: 0, scope: !2237)
!2254 = !DILocation(line: 29, column: 3, scope: !2237)
!2255 = !DILocation(line: 27, column: 7, scope: !2237)
!2256 = !DILocation(line: 29, column: 14, scope: !2237)
!2257 = !DILocation(line: 31, column: 20, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2237, file: !2238, line: 30, column: 5)
!2259 = !DILocation(line: 31, column: 27, scope: !2258)
!2260 = !DILocation(line: 32, column: 56, scope: !2258)
!2261 = !DILocation(line: 32, column: 47, scope: !2258)
!2262 = !DILocation(line: 33, column: 22, scope: !2258)
!2263 = !DILocation(line: 34, column: 24, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2258, file: !2238, line: 34, column: 11)
!2265 = !DILocation(line: 34, column: 11, scope: !2258)
!2266 = !DILocation(line: 36, column: 29, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2264, file: !2238, line: 36, column: 16)
!2268 = !DILocation(line: 36, column: 16, scope: !2264)
!2269 = !DILocation(line: 37, column: 14, scope: !2267)
!2270 = distinct !{!2270, !2254, !2271}
!2271 = !DILocation(line: 40, column: 5, scope: !2237)
!2272 = !DILocation(line: 43, column: 1, scope: !2237)
!2273 = distinct !DISubprogram(name: "atof", scope: !2274, file: !2274, line: 25, type: !2275, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2278)
!2274 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2275 = !DISubroutineType(types: !2276)
!2276 = !{!2277, !562}
!2277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2278 = !{!2279}
!2279 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2273, file: !2274, line: 25, type: !562)
!2280 = !DILocation(line: 0, scope: !2273)
!2281 = !DILocation(line: 27, column: 10, scope: !2273)
!2282 = !DILocation(line: 27, column: 3, scope: !2273)
!2283 = distinct !DISubprogram(name: "strtoimax", scope: !2284, file: !2284, line: 324, type: !2285, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2291)
!2284 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!2287, !2045, !2290, !557}
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2288, line: 101, baseType: !2289)
!2288 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2097, line: 72, baseType: !680)
!2290 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !558)
!2291 = !{!2292, !2293, !2294}
!2292 = !DILocalVariable(name: "nptr", arg: 1, scope: !2283, file: !2284, line: 324, type: !2045)
!2293 = !DILocalVariable(name: "endptr", arg: 2, scope: !2283, file: !2284, line: 324, type: !2290)
!2294 = !DILocalVariable(name: "base", arg: 3, scope: !2283, file: !2284, line: 324, type: !557)
!2295 = !DILocation(line: 0, scope: !2283)
!2296 = !DILocation(line: 327, column: 10, scope: !2283)
!2297 = !DILocation(line: 327, column: 3, scope: !2283)
!2298 = distinct !DISubprogram(name: "strtoumax", scope: !2284, file: !2284, line: 336, type: !2299, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2303)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!2301, !2045, !2290, !557}
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2288, line: 102, baseType: !2302)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2097, line: 73, baseType: !567)
!2303 = !{!2304, !2305, !2306}
!2304 = !DILocalVariable(name: "nptr", arg: 1, scope: !2298, file: !2284, line: 336, type: !2045)
!2305 = !DILocalVariable(name: "endptr", arg: 2, scope: !2298, file: !2284, line: 336, type: !2290)
!2306 = !DILocalVariable(name: "base", arg: 3, scope: !2298, file: !2284, line: 336, type: !557)
!2307 = !DILocation(line: 0, scope: !2298)
!2308 = !DILocation(line: 339, column: 10, scope: !2298)
!2309 = !DILocation(line: 339, column: 3, scope: !2298)
!2310 = distinct !DISubprogram(name: "wcstoimax", scope: !2284, file: !2284, line: 348, type: !2311, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2320)
!2311 = !DISubroutineType(types: !2312)
!2312 = !{!2287, !2313, !2317, !557}
!2313 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2314)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2316)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2284, line: 34, baseType: !557)
!2317 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2318)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2320 = !{!2321, !2322, !2323}
!2321 = !DILocalVariable(name: "nptr", arg: 1, scope: !2310, file: !2284, line: 348, type: !2313)
!2322 = !DILocalVariable(name: "endptr", arg: 2, scope: !2310, file: !2284, line: 348, type: !2317)
!2323 = !DILocalVariable(name: "base", arg: 3, scope: !2310, file: !2284, line: 348, type: !557)
!2324 = !DILocation(line: 0, scope: !2310)
!2325 = !DILocation(line: 351, column: 10, scope: !2310)
!2326 = !DILocation(line: 351, column: 3, scope: !2310)
!2327 = distinct !DISubprogram(name: "wcstoumax", scope: !2284, file: !2284, line: 362, type: !2328, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2330)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{!2301, !2313, !2317, !557}
!2330 = !{!2331, !2332, !2333}
!2331 = !DILocalVariable(name: "nptr", arg: 1, scope: !2327, file: !2284, line: 362, type: !2313)
!2332 = !DILocalVariable(name: "endptr", arg: 2, scope: !2327, file: !2284, line: 362, type: !2317)
!2333 = !DILocalVariable(name: "base", arg: 3, scope: !2327, file: !2284, line: 362, type: !557)
!2334 = !DILocation(line: 0, scope: !2327)
!2335 = !DILocation(line: 365, column: 10, scope: !2327)
!2336 = !DILocation(line: 365, column: 3, scope: !2327)
!2337 = distinct !DISubprogram(name: "stat", scope: !2338, file: !2338, line: 453, type: !2339, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2376)
!2338 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2339 = !DISubroutineType(types: !2340)
!2340 = !{!557, !562, !2341}
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2343, line: 46, size: 1152, elements: !2344)
!2343 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2344 = !{!2345, !2347, !2349, !2351, !2353, !2355, !2357, !2358, !2359, !2360, !2362, !2364, !2372, !2373, !2374}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2342, file: !2343, line: 48, baseType: !2346, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2097, line: 145, baseType: !567)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2342, file: !2343, line: 53, baseType: !2348, size: 64, offset: 64)
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2097, line: 148, baseType: !567)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2342, file: !2343, line: 61, baseType: !2350, size: 64, offset: 128)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2097, line: 151, baseType: !567)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2342, file: !2343, line: 62, baseType: !2352, size: 32, offset: 192)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2097, line: 150, baseType: !7)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2342, file: !2343, line: 64, baseType: !2354, size: 32, offset: 224)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2097, line: 146, baseType: !7)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2342, file: !2343, line: 65, baseType: !2356, size: 32, offset: 256)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2097, line: 147, baseType: !7)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2342, file: !2343, line: 67, baseType: !557, size: 32, offset: 288)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2342, file: !2343, line: 69, baseType: !2346, size: 64, offset: 320)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2342, file: !2343, line: 74, baseType: !2096, size: 64, offset: 384)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2342, file: !2343, line: 78, baseType: !2361, size: 64, offset: 448)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2097, line: 174, baseType: !680)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2342, file: !2343, line: 80, baseType: !2363, size: 64, offset: 512)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2097, line: 179, baseType: !680)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2342, file: !2343, line: 91, baseType: !2365, size: 128, offset: 576)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2366, line: 10, size: 128, elements: !2367)
!2366 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2367 = !{!2368, !2370}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2365, file: !2366, line: 12, baseType: !2369, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2097, line: 160, baseType: !680)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2365, file: !2366, line: 16, baseType: !2371, size: 64, offset: 64)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2097, line: 196, baseType: !680)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2342, file: !2343, line: 92, baseType: !2365, size: 128, offset: 704)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2342, file: !2343, line: 93, baseType: !2365, size: 128, offset: 832)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2342, file: !2343, line: 106, baseType: !2375, size: 192, offset: 960)
!2375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2371, size: 192, elements: !780)
!2376 = !{!2377, !2378}
!2377 = !DILocalVariable(name: "__path", arg: 1, scope: !2337, file: !2338, line: 453, type: !562)
!2378 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2337, file: !2338, line: 453, type: !2341)
!2379 = !DILocation(line: 0, scope: !2337)
!2380 = !DILocation(line: 455, column: 10, scope: !2337)
!2381 = !DILocation(line: 455, column: 3, scope: !2337)
!2382 = distinct !DISubprogram(name: "lstat", scope: !2338, file: !2338, line: 460, type: !2339, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2383)
!2383 = !{!2384, !2385}
!2384 = !DILocalVariable(name: "__path", arg: 1, scope: !2382, file: !2338, line: 460, type: !562)
!2385 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2382, file: !2338, line: 460, type: !2341)
!2386 = !DILocation(line: 0, scope: !2382)
!2387 = !DILocation(line: 462, column: 10, scope: !2382)
!2388 = !DILocation(line: 462, column: 3, scope: !2382)
!2389 = distinct !DISubprogram(name: "fstat", scope: !2338, file: !2338, line: 467, type: !2390, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2392)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{!557, !557, !2341}
!2392 = !{!2393, !2394}
!2393 = !DILocalVariable(name: "__fd", arg: 1, scope: !2389, file: !2338, line: 467, type: !557)
!2394 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2389, file: !2338, line: 467, type: !2341)
!2395 = !DILocation(line: 0, scope: !2389)
!2396 = !DILocation(line: 469, column: 10, scope: !2389)
!2397 = !DILocation(line: 469, column: 3, scope: !2389)
!2398 = distinct !DISubprogram(name: "fstatat", scope: !2338, file: !2338, line: 474, type: !2399, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2401)
!2399 = !DISubroutineType(types: !2400)
!2400 = !{!557, !557, !562, !2341, !557}
!2401 = !{!2402, !2403, !2404, !2405}
!2402 = !DILocalVariable(name: "__fd", arg: 1, scope: !2398, file: !2338, line: 474, type: !557)
!2403 = !DILocalVariable(name: "__filename", arg: 2, scope: !2398, file: !2338, line: 474, type: !562)
!2404 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2398, file: !2338, line: 474, type: !2341)
!2405 = !DILocalVariable(name: "__flag", arg: 4, scope: !2398, file: !2338, line: 474, type: !557)
!2406 = !DILocation(line: 0, scope: !2398)
!2407 = !DILocation(line: 477, column: 10, scope: !2398)
!2408 = !DILocation(line: 477, column: 3, scope: !2398)
!2409 = distinct !DISubprogram(name: "mknod", scope: !2338, file: !2338, line: 483, type: !2410, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2412)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{!557, !562, !2352, !2346}
!2412 = !{!2413, !2414, !2415}
!2413 = !DILocalVariable(name: "__path", arg: 1, scope: !2409, file: !2338, line: 483, type: !562)
!2414 = !DILocalVariable(name: "__mode", arg: 2, scope: !2409, file: !2338, line: 483, type: !2352)
!2415 = !DILocalVariable(name: "__dev", arg: 3, scope: !2409, file: !2338, line: 483, type: !2346)
!2416 = !DILocation(line: 0, scope: !2409)
!2417 = !DILocation(line: 485, column: 10, scope: !2409)
!2418 = !DILocation(line: 485, column: 3, scope: !2409)
!2419 = distinct !DISubprogram(name: "mknodat", scope: !2338, file: !2338, line: 491, type: !2420, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2422)
!2420 = !DISubroutineType(types: !2421)
!2421 = !{!557, !557, !562, !2352, !2346}
!2422 = !{!2423, !2424, !2425, !2426}
!2423 = !DILocalVariable(name: "__fd", arg: 1, scope: !2419, file: !2338, line: 491, type: !557)
!2424 = !DILocalVariable(name: "__path", arg: 2, scope: !2419, file: !2338, line: 491, type: !562)
!2425 = !DILocalVariable(name: "__mode", arg: 3, scope: !2419, file: !2338, line: 491, type: !2352)
!2426 = !DILocalVariable(name: "__dev", arg: 4, scope: !2419, file: !2338, line: 491, type: !2346)
!2427 = !DILocation(line: 0, scope: !2419)
!2428 = !DILocation(line: 494, column: 10, scope: !2419)
!2429 = !DILocation(line: 494, column: 3, scope: !2419)
!2430 = distinct !DISubprogram(name: "stat64", scope: !2338, file: !2338, line: 502, type: !2431, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2453)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!557, !562, !2433}
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2343, line: 119, size: 1152, elements: !2435)
!2435 = !{!2436, !2437, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2449, !2450, !2451, !2452}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2434, file: !2343, line: 121, baseType: !2346, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2434, file: !2343, line: 123, baseType: !2438, size: 64, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2097, line: 149, baseType: !567)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2434, file: !2343, line: 124, baseType: !2350, size: 64, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2434, file: !2343, line: 125, baseType: !2352, size: 32, offset: 192)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2434, file: !2343, line: 132, baseType: !2354, size: 32, offset: 224)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2434, file: !2343, line: 133, baseType: !2356, size: 32, offset: 256)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2434, file: !2343, line: 135, baseType: !557, size: 32, offset: 288)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2434, file: !2343, line: 136, baseType: !2346, size: 64, offset: 320)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2434, file: !2343, line: 137, baseType: !2096, size: 64, offset: 384)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2434, file: !2343, line: 143, baseType: !2361, size: 64, offset: 448)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2434, file: !2343, line: 144, baseType: !2448, size: 64, offset: 512)
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2097, line: 180, baseType: !680)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2434, file: !2343, line: 152, baseType: !2365, size: 128, offset: 576)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2434, file: !2343, line: 153, baseType: !2365, size: 128, offset: 704)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2434, file: !2343, line: 154, baseType: !2365, size: 128, offset: 832)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2434, file: !2343, line: 164, baseType: !2375, size: 192, offset: 960)
!2453 = !{!2454, !2455}
!2454 = !DILocalVariable(name: "__path", arg: 1, scope: !2430, file: !2338, line: 502, type: !562)
!2455 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2430, file: !2338, line: 502, type: !2433)
!2456 = !DILocation(line: 0, scope: !2430)
!2457 = !DILocation(line: 504, column: 10, scope: !2430)
!2458 = !DILocation(line: 504, column: 3, scope: !2430)
!2459 = distinct !DISubprogram(name: "lstat64", scope: !2338, file: !2338, line: 509, type: !2431, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2460)
!2460 = !{!2461, !2462}
!2461 = !DILocalVariable(name: "__path", arg: 1, scope: !2459, file: !2338, line: 509, type: !562)
!2462 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2459, file: !2338, line: 509, type: !2433)
!2463 = !DILocation(line: 0, scope: !2459)
!2464 = !DILocation(line: 511, column: 10, scope: !2459)
!2465 = !DILocation(line: 511, column: 3, scope: !2459)
!2466 = distinct !DISubprogram(name: "fstat64", scope: !2338, file: !2338, line: 516, type: !2467, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2469)
!2467 = !DISubroutineType(types: !2468)
!2468 = !{!557, !557, !2433}
!2469 = !{!2470, !2471}
!2470 = !DILocalVariable(name: "__fd", arg: 1, scope: !2466, file: !2338, line: 516, type: !557)
!2471 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2466, file: !2338, line: 516, type: !2433)
!2472 = !DILocation(line: 0, scope: !2466)
!2473 = !DILocation(line: 518, column: 10, scope: !2466)
!2474 = !DILocation(line: 518, column: 3, scope: !2466)
!2475 = distinct !DISubprogram(name: "fstatat64", scope: !2338, file: !2338, line: 523, type: !2476, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2478)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!557, !557, !562, !2433, !557}
!2478 = !{!2479, !2480, !2481, !2482}
!2479 = !DILocalVariable(name: "__fd", arg: 1, scope: !2475, file: !2338, line: 523, type: !557)
!2480 = !DILocalVariable(name: "__filename", arg: 2, scope: !2475, file: !2338, line: 523, type: !562)
!2481 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2475, file: !2338, line: 523, type: !2433)
!2482 = !DILocalVariable(name: "__flag", arg: 4, scope: !2475, file: !2338, line: 523, type: !557)
!2483 = !DILocation(line: 0, scope: !2475)
!2484 = !DILocation(line: 526, column: 10, scope: !2475)
!2485 = !DILocation(line: 526, column: 3, scope: !2475)
!2486 = distinct !DISubprogram(name: "alias_set_subset_of", scope: !3, file: !3, line: 398, type: !2487, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2489)
!2487 = !DISubroutineType(types: !2488)
!2488 = !{!556, !1508, !1508}
!2489 = !{!2490, !2491, !2492}
!2490 = !DILocalVariable(name: "set1", arg: 1, scope: !2486, file: !3, line: 398, type: !1508)
!2491 = !DILocalVariable(name: "set2", arg: 2, scope: !2486, file: !3, line: 398, type: !1508)
!2492 = !DILocalVariable(name: "ase", scope: !2486, file: !3, line: 400, type: !1979)
!2493 = !DILocation(line: 0, scope: !2486)
!2494 = !DILocation(line: 403, column: 12, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2486, file: !3, line: 403, column: 7)
!2496 = !DILocation(line: 403, column: 7, scope: !2486)
!2497 = !DILocation(line: 407, column: 9, scope: !2486)
!2498 = !DILocation(line: 408, column: 11, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2486, file: !3, line: 408, column: 7)
!2500 = !DILocation(line: 409, column: 7, scope: !2499)
!2501 = !DILocation(line: 409, column: 17, scope: !2499)
!2502 = !DILocation(line: 409, column: 12, scope: !2499)
!2503 = !DILocation(line: 409, column: 40, scope: !2499)
!2504 = !DILocation(line: 409, column: 32, scope: !2499)
!2505 = !DILocation(line: 410, column: 31, scope: !2499)
!2506 = !DILocation(line: 411, column: 12, scope: !2499)
!2507 = !DILocation(line: 410, column: 7, scope: !2499)
!2508 = !DILocation(line: 408, column: 7, scope: !2486)
!2509 = !DILocation(line: 413, column: 3, scope: !2486)
!2510 = !DILocation(line: 414, column: 1, scope: !2486)
!2511 = distinct !DISubprogram(name: "get_alias_set_entry", scope: !3, file: !3, line: 360, type: !2512, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2514)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{!1979, !1508}
!2514 = !{!2515}
!2515 = !DILocalVariable(name: "alias_set", arg: 1, scope: !2511, file: !3, line: 360, type: !1508)
!2516 = !DILocation(line: 0, scope: !2511)
!2517 = !DILocation(line: 362, column: 10, scope: !2511)
!2518 = !DILocation(line: 362, column: 3, scope: !2511)
!2519 = distinct !DISubprogram(name: "alias_sets_conflict_p", scope: !3, file: !3, line: 419, type: !2520, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2522)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{!557, !1508, !1508}
!2522 = !{!2523, !2524, !2525}
!2523 = !DILocalVariable(name: "set1", arg: 1, scope: !2519, file: !3, line: 419, type: !1508)
!2524 = !DILocalVariable(name: "set2", arg: 2, scope: !2519, file: !3, line: 419, type: !1508)
!2525 = !DILocalVariable(name: "ase", scope: !2519, file: !3, line: 421, type: !1979)
!2526 = !DILocation(line: 0, scope: !2519)
!2527 = !DILocation(line: 424, column: 7, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2519, file: !3, line: 424, column: 7)
!2529 = !DILocation(line: 424, column: 7, scope: !2519)
!2530 = !DILocation(line: 428, column: 9, scope: !2519)
!2531 = !DILocation(line: 429, column: 11, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2519, file: !3, line: 429, column: 7)
!2533 = !DILocation(line: 430, column: 7, scope: !2532)
!2534 = !DILocation(line: 430, column: 16, scope: !2532)
!2535 = !DILocation(line: 430, column: 11, scope: !2532)
!2536 = !DILocation(line: 431, column: 4, scope: !2532)
!2537 = !DILocation(line: 431, column: 31, scope: !2532)
!2538 = !DILocation(line: 432, column: 5, scope: !2532)
!2539 = !DILocation(line: 431, column: 7, scope: !2532)
!2540 = !DILocation(line: 429, column: 7, scope: !2519)
!2541 = !DILocation(line: 436, column: 9, scope: !2519)
!2542 = !DILocation(line: 437, column: 11, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2519, file: !3, line: 437, column: 7)
!2544 = !DILocation(line: 438, column: 7, scope: !2543)
!2545 = !DILocation(line: 438, column: 16, scope: !2543)
!2546 = !DILocation(line: 438, column: 11, scope: !2543)
!2547 = !DILocation(line: 439, column: 4, scope: !2543)
!2548 = !DILocation(line: 439, column: 31, scope: !2543)
!2549 = !DILocation(line: 440, column: 5, scope: !2543)
!2550 = !DILocation(line: 439, column: 7, scope: !2543)
!2551 = !DILocation(line: 437, column: 7, scope: !2519)
!2552 = !DILocation(line: 445, column: 3, scope: !2519)
!2553 = !DILocation(line: 446, column: 1, scope: !2519)
!2554 = distinct !DISubprogram(name: "alias_sets_must_conflict_p", scope: !3, file: !3, line: 488, type: !2520, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2555)
!2555 = !{!2556, !2557}
!2556 = !DILocalVariable(name: "set1", arg: 1, scope: !2554, file: !3, line: 488, type: !1508)
!2557 = !DILocalVariable(name: "set2", arg: 2, scope: !2554, file: !3, line: 488, type: !1508)
!2558 = !DILocation(line: 0, scope: !2554)
!2559 = !DILocation(line: 490, column: 12, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2554, file: !3, line: 490, column: 7)
!2561 = !DILocation(line: 490, column: 25, scope: !2560)
!2562 = !DILocation(line: 490, column: 17, scope: !2560)
!2563 = !DILocation(line: 490, column: 38, scope: !2560)
!2564 = !DILocation(line: 494, column: 1, scope: !2554)
!2565 = distinct !DISubprogram(name: "insn_alias_sets_conflict_p", scope: !3, file: !3, line: 478, type: !2566, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2568)
!2566 = !DISubroutineType(types: !2567)
!2567 = !{!556, !573, !573}
!2568 = !{!2569, !2570}
!2569 = !DILocalVariable(name: "insn1", arg: 1, scope: !2565, file: !3, line: 478, type: !573)
!2570 = !DILocalVariable(name: "insn2", arg: 2, scope: !2565, file: !3, line: 478, type: !573)
!2571 = !DILocation(line: 0, scope: !2565)
!2572 = !DILocation(line: 481, column: 26, scope: !2565)
!2573 = !DILocation(line: 482, column: 6, scope: !2565)
!2574 = !DILocation(line: 482, column: 5, scope: !2565)
!2575 = !DILocation(line: 481, column: 11, scope: !2565)
!2576 = !DILocation(line: 481, column: 3, scope: !2565)
!2577 = distinct !DISubprogram(name: "walk_mems_1", scope: !3, file: !3, line: 462, type: !2578, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2580)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!557, !572, !572}
!2580 = !{!2581, !2582}
!2581 = !DILocalVariable(name: "x", arg: 1, scope: !2577, file: !3, line: 462, type: !572)
!2582 = !DILocalVariable(name: "pat", arg: 2, scope: !2577, file: !3, line: 462, type: !572)
!2583 = !DILocation(line: 0, scope: !2577)
!2584 = !DILocation(line: 464, column: 7, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 464, column: 7)
!2586 = !DILocation(line: 464, column: 7, scope: !2577)
!2587 = !DILocation(line: 467, column: 11, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2589, file: !3, line: 467, column: 11)
!2589 = distinct !DILexicalBlock(scope: !2585, file: !3, line: 465, column: 5)
!2590 = !DILocation(line: 0, scope: !2589)
!2591 = !DILocation(line: 474, column: 1, scope: !2577)
!2592 = distinct !DISubprogram(name: "objects_must_conflict_p", scope: !3, file: !3, line: 502, type: !2593, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2595)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!557, !709, !709}
!2595 = !{!2596, !2597, !2598, !2599}
!2596 = !DILocalVariable(name: "t1", arg: 1, scope: !2592, file: !3, line: 502, type: !709)
!2597 = !DILocalVariable(name: "t2", arg: 2, scope: !2592, file: !3, line: 502, type: !709)
!2598 = !DILocalVariable(name: "set1", scope: !2592, file: !3, line: 504, type: !1508)
!2599 = !DILocalVariable(name: "set2", scope: !2592, file: !3, line: 504, type: !1508)
!2600 = !DILocation(line: 0, scope: !2592)
!2601 = !DILocation(line: 509, column: 10, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 509, column: 7)
!2603 = !DILocation(line: 509, column: 21, scope: !2602)
!2604 = !DILocation(line: 509, column: 15, scope: !2602)
!2605 = !DILocation(line: 513, column: 10, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 513, column: 7)
!2607 = !DILocation(line: 515, column: 7, scope: !2606)
!2608 = !DILocation(line: 515, column: 19, scope: !2606)
!2609 = !DILocation(line: 515, column: 22, scope: !2606)
!2610 = !DILocation(line: 515, column: 47, scope: !2606)
!2611 = !DILocation(line: 515, column: 41, scope: !2606)
!2612 = !DILocation(line: 515, column: 55, scope: !2606)
!2613 = !DILocation(line: 513, column: 7, scope: !2592)
!2614 = !DILocation(line: 518, column: 15, scope: !2592)
!2615 = !DILocation(line: 518, column: 10, scope: !2592)
!2616 = !DILocation(line: 519, column: 10, scope: !2592)
!2617 = !DILocation(line: 519, column: 15, scope: !2592)
!2618 = !DILocation(line: 525, column: 10, scope: !2592)
!2619 = !DILocation(line: 525, column: 3, scope: !2592)
!2620 = !DILocation(line: 526, column: 1, scope: !2592)
!2621 = distinct !DISubprogram(name: "get_alias_set", scope: !3, file: !3, line: 624, type: !2622, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2624)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{!1508, !709}
!2624 = !{!2625, !2626, !2627}
!2625 = !DILocalVariable(name: "t", arg: 1, scope: !2621, file: !3, line: 624, type: !709)
!2626 = !DILocalVariable(name: "set", scope: !2621, file: !3, line: 626, type: !1508)
!2627 = !DILocalVariable(name: "inner", scope: !2628, file: !3, line: 643, type: !709)
!2628 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 642, column: 5)
!2629 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 641, column: 7)
!2630 = !DILocation(line: 722, column: 9, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2632, file: !3, line: 721, column: 11)
!2632 = distinct !DILexicalBlock(scope: !2633, file: !3, line: 718, column: 5)
!2633 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 717, column: 7)
!2634 = !DILocation(line: 0, scope: !2621)
!2635 = !DILocation(line: 631, column: 9, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 631, column: 7)
!2637 = !DILocation(line: 631, column: 38, scope: !2636)
!2638 = !DILocation(line: 631, column: 35, scope: !2636)
!2639 = !DILocation(line: 631, column: 30, scope: !2636)
!2640 = !DILocation(line: 632, column: 13, scope: !2636)
!2641 = !DILocation(line: 633, column: 4, scope: !2636)
!2642 = !DILocation(line: 633, column: 8, scope: !2636)
!2643 = !DILocation(line: 633, column: 22, scope: !2636)
!2644 = !DILocation(line: 633, column: 27, scope: !2636)
!2645 = !DILocation(line: 633, column: 44, scope: !2636)
!2646 = !DILocation(line: 631, column: 7, scope: !2621)
!2647 = !DILocation(line: 641, column: 7, scope: !2621)
!2648 = !DILocation(line: 647, column: 7, scope: !2628)
!2649 = !DILocation(line: 648, column: 24, scope: !2628)
!2650 = !DILocation(line: 648, column: 13, scope: !2628)
!2651 = !DILocation(line: 649, column: 15, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2628, file: !3, line: 649, column: 11)
!2653 = !DILocation(line: 649, column: 11, scope: !2628)
!2654 = !DILocation(line: 653, column: 11, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2628, file: !3, line: 653, column: 11)
!2656 = !DILocation(line: 653, column: 25, scope: !2655)
!2657 = !DILocation(line: 653, column: 11, scope: !2628)
!2658 = !DILocation(line: 654, column: 6, scope: !2655)
!2659 = !DILocation(line: 654, column: 2, scope: !2655)
!2660 = !DILocation(line: 0, scope: !2628)
!2661 = !DILocation(line: 659, column: 7, scope: !2628)
!2662 = !DILocation(line: 659, column: 14, scope: !2628)
!2663 = !DILocation(line: 661, column: 12, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2628, file: !3, line: 660, column: 2)
!2665 = !DILocation(line: 662, column: 4, scope: !2664)
!2666 = distinct !{!2666, !2661, !2667}
!2667 = !DILocation(line: 663, column: 2, scope: !2628)
!2668 = !DILocation(line: 665, column: 11, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !2628, file: !3, line: 665, column: 11)
!2670 = !DILocation(line: 665, column: 11, scope: !2628)
!2671 = !DILocation(line: 667, column: 33, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2669, file: !3, line: 666, column: 2)
!2673 = !DILocation(line: 667, column: 10, scope: !2672)
!2674 = !DILocation(line: 668, column: 12, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2672, file: !3, line: 668, column: 8)
!2676 = !DILocation(line: 668, column: 8, scope: !2672)
!2677 = !DILocation(line: 674, column: 7, scope: !2628)
!2678 = !DILocation(line: 674, column: 14, scope: !2628)
!2679 = !DILocation(line: 676, column: 8, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2628, file: !3, line: 675, column: 2)
!2681 = !DILocation(line: 677, column: 4, scope: !2680)
!2682 = distinct !{!2682, !2677, !2683}
!2683 = !DILocation(line: 678, column: 2, scope: !2628)
!2684 = !DILocation(line: 683, column: 11, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2628, file: !3, line: 683, column: 11)
!2686 = !DILocation(line: 683, column: 25, scope: !2685)
!2687 = !DILocation(line: 684, column: 4, scope: !2685)
!2688 = !DILocation(line: 684, column: 7, scope: !2685)
!2689 = !DILocation(line: 684, column: 26, scope: !2685)
!2690 = !DILocation(line: 684, column: 29, scope: !2685)
!2691 = !DILocation(line: 683, column: 11, scope: !2628)
!2692 = !DILocation(line: 685, column: 9, scope: !2685)
!2693 = !DILocation(line: 0, scope: !2685)
!2694 = !DILocation(line: 688, column: 11, scope: !2628)
!2695 = !DILocation(line: 689, column: 5, scope: !2629)
!2696 = !DILocation(line: 693, column: 7, scope: !2621)
!2697 = !DILocation(line: 698, column: 7, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 698, column: 7)
!2699 = !DILocation(line: 698, column: 7, scope: !2621)
!2700 = !DILocation(line: 702, column: 24, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2698, file: !3, line: 699, column: 5)
!2702 = !DILocation(line: 702, column: 13, scope: !2701)
!2703 = !DILocation(line: 703, column: 15, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2701, file: !3, line: 703, column: 11)
!2705 = !DILocation(line: 0, scope: !2701)
!2706 = !DILocation(line: 710, column: 3, scope: !2621)
!2707 = !DILocation(line: 713, column: 7, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 713, column: 7)
!2709 = !DILocation(line: 713, column: 7, scope: !2621)
!2710 = !DILocation(line: 714, column: 5, scope: !2708)
!2711 = !DILocation(line: 717, column: 8, scope: !2633)
!2712 = !DILocation(line: 717, column: 7, scope: !2621)
!2713 = !DILocation(line: 721, column: 11, scope: !2631)
!2714 = !DILocation(line: 721, column: 25, scope: !2631)
!2715 = !DILocation(line: 721, column: 11, scope: !2632)
!2716 = !DILocation(line: 722, column: 24, scope: !2631)
!2717 = !DILocation(line: 729, column: 20, scope: !2621)
!2718 = !DILocation(line: 729, column: 9, scope: !2621)
!2719 = !DILocation(line: 730, column: 11, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 730, column: 7)
!2721 = !DILocation(line: 730, column: 7, scope: !2621)
!2722 = !DILocation(line: 736, column: 12, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2720, file: !3, line: 736, column: 12)
!2724 = !DILocation(line: 736, column: 26, scope: !2723)
!2725 = !DILocation(line: 737, column: 5, scope: !2723)
!2726 = !DILocation(line: 737, column: 22, scope: !2723)
!2727 = !DILocation(line: 736, column: 12, scope: !2720)
!2728 = !DILocation(line: 744, column: 26, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2723, file: !3, line: 744, column: 12)
!2730 = !DILocation(line: 744, column: 12, scope: !2723)
!2731 = !DILocation(line: 745, column: 26, scope: !2729)
!2732 = !DILocation(line: 745, column: 11, scope: !2729)
!2733 = !DILocation(line: 745, column: 5, scope: !2729)
!2734 = !DILocation(line: 755, column: 26, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2729, file: !3, line: 755, column: 12)
!2736 = !DILocation(line: 756, column: 5, scope: !2735)
!2737 = !DILocation(line: 756, column: 9, scope: !2735)
!2738 = !DILocation(line: 755, column: 12, scope: !2729)
!2739 = !DILocation(line: 757, column: 26, scope: !2735)
!2740 = !DILocation(line: 757, column: 11, scope: !2735)
!2741 = !DILocation(line: 757, column: 5, scope: !2735)
!2742 = !DILocation(line: 761, column: 11, scope: !2735)
!2743 = !DILocation(line: 0, scope: !2723)
!2744 = !DILocation(line: 763, column: 22, scope: !2621)
!2745 = !DILocation(line: 767, column: 7, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 767, column: 7)
!2747 = !DILocation(line: 767, column: 28, scope: !2746)
!2748 = !DILocation(line: 767, column: 45, scope: !2746)
!2749 = !DILocation(line: 767, column: 7, scope: !2621)
!2750 = !DILocation(line: 768, column: 5, scope: !2746)
!2751 = !DILocation(line: 771, column: 1, scope: !2621)
!2752 = distinct !DISubprogram(name: "component_uses_parent_alias_set", scope: !3, file: !3, line: 539, type: !2753, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2756)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!556, !2755}
!2755 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !574, line: 59, baseType: !1920)
!2756 = !{!2757}
!2757 = !DILocalVariable(name: "t", arg: 1, scope: !2752, file: !3, line: 539, type: !2755)
!2758 = !DILocation(line: 0, scope: !2752)
!2759 = !DILocation(line: 541, column: 3, scope: !2752)
!2760 = !DILocation(line: 544, column: 12, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 544, column: 11)
!2762 = distinct !DILexicalBlock(scope: !2752, file: !3, line: 542, column: 5)
!2763 = !DILocation(line: 544, column: 11, scope: !2762)
!2764 = !DILocation(line: 547, column: 15, scope: !2762)
!2765 = !DILocation(line: 547, column: 7, scope: !2762)
!2766 = !DILocation(line: 550, column: 8, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 550, column: 8)
!2768 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 548, column: 2)
!2769 = !DILocation(line: 550, column: 8, scope: !2768)
!2770 = !DILocation(line: 556, column: 8, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 556, column: 8)
!2772 = !DILocation(line: 556, column: 8, scope: !2768)
!2773 = !DILocation(line: 569, column: 11, scope: !2762)
!2774 = !DILocation(line: 570, column: 26, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 570, column: 11)
!2776 = !DILocation(line: 570, column: 11, scope: !2775)
!2777 = !DILocation(line: 570, column: 41, scope: !2775)
!2778 = !DILocation(line: 570, column: 11, scope: !2762)
!2779 = distinct !{!2779, !2759, !2780}
!2780 = !DILocation(line: 572, column: 5, scope: !2752)
!2781 = !DILocation(line: 0, scope: !2762)
!2782 = !DILocation(line: 573, column: 1, scope: !2752)
!2783 = distinct !DISubprogram(name: "handled_component_p", scope: !135, file: !135, line: 4551, type: !2753, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2784)
!2784 = !{!2785}
!2785 = !DILocalVariable(name: "t", arg: 1, scope: !2783, file: !135, line: 4551, type: !2755)
!2786 = !DILocation(line: 0, scope: !2783)
!2787 = !DILocation(line: 4553, column: 11, scope: !2783)
!2788 = !DILocation(line: 4553, column: 3, scope: !2783)
!2789 = !DILocation(line: 4565, column: 7, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2783, file: !135, line: 4554, column: 5)
!2791 = !DILocation(line: 0, scope: !2790)
!2792 = !DILocation(line: 4567, column: 1, scope: !2783)
!2793 = distinct !DISubprogram(name: "get_deref_alias_set", scope: !3, file: !3, line: 605, type: !2622, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2794)
!2794 = !{!2795, !2796}
!2795 = !DILocalVariable(name: "t", arg: 1, scope: !2793, file: !3, line: 605, type: !709)
!2796 = !DILocalVariable(name: "set", scope: !2793, file: !3, line: 607, type: !1508)
!2797 = !DILocation(line: 0, scope: !2793)
!2798 = !DILocation(line: 607, column: 24, scope: !2793)
!2799 = !DILocation(line: 610, column: 11, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 610, column: 7)
!2801 = !DILocation(line: 610, column: 7, scope: !2793)
!2802 = !DILocation(line: 612, column: 13, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 612, column: 11)
!2804 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 611, column: 5)
!2805 = !DILocation(line: 612, column: 11, scope: !2804)
!2806 = !DILocation(line: 613, column: 6, scope: !2803)
!2807 = !DILocation(line: 613, column: 2, scope: !2803)
!2808 = !DILocation(line: 614, column: 28, scope: !2804)
!2809 = !DILocation(line: 614, column: 13, scope: !2804)
!2810 = !DILocation(line: 615, column: 5, scope: !2804)
!2811 = !DILocation(line: 617, column: 3, scope: !2793)
!2812 = distinct !DISubprogram(name: "get_deref_alias_set_1", scope: !3, file: !3, line: 580, type: !2622, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2813)
!2813 = !{!2814}
!2814 = !DILocalVariable(name: "t", arg: 1, scope: !2812, file: !3, line: 580, type: !709)
!2815 = !DILocation(line: 0, scope: !2812)
!2816 = !DILocation(line: 584, column: 8, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 584, column: 7)
!2818 = !DILocation(line: 584, column: 7, scope: !2812)
!2819 = !DILocation(line: 588, column: 9, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 588, column: 7)
!2821 = !DILocation(line: 588, column: 7, scope: !2812)
!2822 = !DILocation(line: 589, column: 9, scope: !2820)
!2823 = !DILocation(line: 589, column: 5, scope: !2820)
!2824 = !DILocation(line: 594, column: 7, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 594, column: 7)
!2826 = !DILocation(line: 594, column: 33, scope: !2825)
!2827 = !DILocation(line: 595, column: 7, scope: !2825)
!2828 = !DILocation(line: 595, column: 10, scope: !2825)
!2829 = !DILocation(line: 594, column: 7, scope: !2812)
!2830 = !DILocation(line: 599, column: 1, scope: !2812)
!2831 = distinct !DISubprogram(name: "new_alias_set", scope: !3, file: !3, line: 776, type: !2832, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2063)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{!1508}
!2834 = !DILocation(line: 778, column: 7, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2831, file: !3, line: 778, column: 7)
!2836 = !DILocation(line: 778, column: 7, scope: !2831)
!2837 = !DILocation(line: 780, column: 11, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 780, column: 11)
!2839 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 779, column: 5)
!2840 = !DILocation(line: 780, column: 22, scope: !2838)
!2841 = !DILocation(line: 780, column: 11, scope: !2839)
!2842 = !DILocation(line: 781, column: 2, scope: !2838)
!2843 = !DILocation(line: 782, column: 7, scope: !2839)
!2844 = !DILocation(line: 783, column: 14, scope: !2839)
!2845 = !DILocation(line: 783, column: 55, scope: !2839)
!2846 = !DILocation(line: 783, column: 7, scope: !2839)
!2847 = !DILocation(line: 0, scope: !2835)
!2848 = !DILocation(line: 787, column: 1, scope: !2831)
!2849 = distinct !DISubprogram(name: "record_component_aliases", scope: !3, file: !3, line: 856, type: !2850, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2852)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{null, !709}
!2852 = !{!2853, !2854, !2855, !2856, !2860, !2861}
!2853 = !DILocalVariable(name: "type", arg: 1, scope: !2849, file: !3, line: 856, type: !709)
!2854 = !DILocalVariable(name: "superset", scope: !2849, file: !3, line: 858, type: !1508)
!2855 = !DILocalVariable(name: "field", scope: !2849, file: !3, line: 859, type: !709)
!2856 = !DILocalVariable(name: "i", scope: !2857, file: !3, line: 872, type: !557)
!2857 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 871, column: 2)
!2858 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 870, column: 11)
!2859 = distinct !DILexicalBlock(scope: !2849, file: !3, line: 865, column: 5)
!2860 = !DILocalVariable(name: "binfo", scope: !2857, file: !3, line: 873, type: !709)
!2861 = !DILocalVariable(name: "base_binfo", scope: !2857, file: !3, line: 873, type: !709)
!2862 = !DILocation(line: 0, scope: !2849)
!2863 = !DILocation(line: 858, column: 29, scope: !2849)
!2864 = !DILocation(line: 861, column: 16, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2849, file: !3, line: 861, column: 7)
!2866 = !DILocation(line: 861, column: 7, scope: !2849)
!2867 = !DILocation(line: 864, column: 11, scope: !2849)
!2868 = !DILocation(line: 864, column: 3, scope: !2849)
!2869 = !DILocation(line: 870, column: 11, scope: !2858)
!2870 = !DILocation(line: 870, column: 11, scope: !2859)
!2871 = !DILocation(line: 873, column: 4, scope: !2857)
!2872 = !DILocation(line: 0, scope: !2857)
!2873 = !DILocation(line: 0, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2875, file: !3, line: 875, column: 4)
!2875 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 875, column: 4)
!2876 = !DILocation(line: 875, column: 9, scope: !2875)
!2877 = !DILocation(line: 0, scope: !2875)
!2878 = !DILocation(line: 876, column: 9, scope: !2874)
!2879 = !DILocation(line: 875, column: 4, scope: !2875)
!2880 = !DILocation(line: 878, column: 21, scope: !2874)
!2881 = !DILocation(line: 878, column: 6, scope: !2874)
!2882 = !DILocation(line: 877, column: 6, scope: !2874)
!2883 = !DILocation(line: 876, column: 53, scope: !2874)
!2884 = !DILocation(line: 875, column: 4, scope: !2874)
!2885 = distinct !{!2885, !2879, !2886}
!2886 = !DILocation(line: 878, column: 45, scope: !2875)
!2887 = !DILocation(line: 879, column: 2, scope: !2858)
!2888 = !DILocation(line: 879, column: 2, scope: !2857)
!2889 = !DILocation(line: 880, column: 20, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 880, column: 7)
!2891 = !DILocation(line: 880, column: 12, scope: !2890)
!2892 = !DILocation(line: 0, scope: !2890)
!2893 = !DILocation(line: 880, column: 46, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 880, column: 7)
!2895 = !DILocation(line: 880, column: 7, scope: !2890)
!2896 = !DILocation(line: 881, column: 6, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 881, column: 6)
!2898 = !DILocation(line: 881, column: 24, scope: !2897)
!2899 = !DILocation(line: 881, column: 38, scope: !2897)
!2900 = !DILocation(line: 881, column: 42, scope: !2897)
!2901 = !DILocation(line: 881, column: 6, scope: !2894)
!2902 = !DILocation(line: 882, column: 50, scope: !2897)
!2903 = !DILocation(line: 882, column: 35, scope: !2897)
!2904 = !DILocation(line: 882, column: 4, scope: !2897)
!2905 = !DILocation(line: 880, column: 60, scope: !2894)
!2906 = !DILocation(line: 880, column: 7, scope: !2894)
!2907 = distinct !{!2907, !2895, !2908}
!2908 = !DILocation(line: 882, column: 68, scope: !2890)
!2909 = !DILocation(line: 886, column: 53, scope: !2859)
!2910 = !DILocation(line: 886, column: 38, scope: !2859)
!2911 = !DILocation(line: 886, column: 7, scope: !2859)
!2912 = !DILocation(line: 887, column: 7, scope: !2859)
!2913 = !DILocation(line: 895, column: 1, scope: !2849)
!2914 = distinct !DISubprogram(name: "VEC_alias_set_entry_gc_safe_push", scope: !3, file: !3, line: 250, type: !2915, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2919)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!2917, !2918, !1979}
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!2919 = !{!2920, !2921}
!2920 = !DILocalVariable(name: "vec_", arg: 1, scope: !2914, file: !3, line: 250, type: !2918)
!2921 = !DILocalVariable(name: "obj_", arg: 2, scope: !2914, file: !3, line: 250, type: !1979)
!2922 = !DILocation(line: 0, scope: !2914)
!2923 = !DILocation(line: 250, column: 1, scope: !2914)
!2924 = distinct !DISubprogram(name: "VEC_alias_set_entry_base_length", scope: !3, file: !3, line: 249, type: !2925, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2929)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!7, !2927}
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1972)
!2929 = !{!2930}
!2930 = !DILocalVariable(name: "vec_", arg: 1, scope: !2924, file: !3, line: 249, type: !2927)
!2931 = !DILocation(line: 0, scope: !2924)
!2932 = !DILocation(line: 249, column: 1, scope: !2924)
!2933 = distinct !DISubprogram(name: "record_alias_subset", scope: !3, file: !3, line: 803, type: !2934, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2936)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{null, !1508, !1508}
!2936 = !{!2937, !2938, !2939, !2940}
!2937 = !DILocalVariable(name: "superset", arg: 1, scope: !2933, file: !3, line: 803, type: !1508)
!2938 = !DILocalVariable(name: "subset", arg: 2, scope: !2933, file: !3, line: 803, type: !1508)
!2939 = !DILocalVariable(name: "superset_entry", scope: !2933, file: !3, line: 805, type: !1979)
!2940 = !DILocalVariable(name: "subset_entry", scope: !2933, file: !3, line: 806, type: !1979)
!2941 = !DILocation(line: 0, scope: !2933)
!2942 = !DILocation(line: 810, column: 16, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 810, column: 7)
!2944 = !DILocation(line: 810, column: 7, scope: !2933)
!2945 = !DILocation(line: 813, column: 3, scope: !2933)
!2946 = !DILocation(line: 815, column: 20, scope: !2933)
!2947 = !DILocation(line: 816, column: 22, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 816, column: 7)
!2949 = !DILocation(line: 816, column: 7, scope: !2933)
!2950 = !DILocation(line: 820, column: 24, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 817, column: 5)
!2952 = !DILocation(line: 821, column: 23, scope: !2951)
!2953 = !DILocation(line: 821, column: 33, scope: !2951)
!2954 = !DILocation(line: 823, column: 4, scope: !2951)
!2955 = !DILocation(line: 822, column: 23, scope: !2951)
!2956 = !DILocation(line: 823, column: 2, scope: !2951)
!2957 = !DILocation(line: 824, column: 23, scope: !2951)
!2958 = !DILocation(line: 824, column: 38, scope: !2951)
!2959 = !DILocation(line: 825, column: 7, scope: !2951)
!2960 = !DILocation(line: 826, column: 5, scope: !2951)
!2961 = !DILocation(line: 828, column: 14, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 828, column: 7)
!2963 = !DILocation(line: 828, column: 7, scope: !2933)
!2964 = !DILocation(line: 829, column: 21, scope: !2962)
!2965 = !DILocation(line: 829, column: 36, scope: !2962)
!2966 = !DILocation(line: 829, column: 5, scope: !2962)
!2967 = !DILocation(line: 832, column: 22, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 831, column: 5)
!2969 = !DILocation(line: 835, column: 11, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 835, column: 11)
!2971 = !DILocation(line: 835, column: 11, scope: !2968)
!2972 = !DILocation(line: 837, column: 22, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 837, column: 8)
!2974 = distinct !DILexicalBlock(scope: !2970, file: !3, line: 836, column: 2)
!2975 = !DILocation(line: 837, column: 8, scope: !2973)
!2976 = !DILocation(line: 837, column: 8, scope: !2974)
!2977 = !DILocation(line: 838, column: 22, scope: !2973)
!2978 = !DILocation(line: 838, column: 37, scope: !2973)
!2979 = !DILocation(line: 838, column: 6, scope: !2973)
!2980 = !DILocation(line: 840, column: 38, scope: !2974)
!2981 = !DILocation(line: 841, column: 26, scope: !2974)
!2982 = !DILocation(line: 840, column: 4, scope: !2974)
!2983 = !DILocation(line: 842, column: 2, scope: !2974)
!2984 = !DILocation(line: 845, column: 42, scope: !2968)
!2985 = !DILocation(line: 846, column: 5, scope: !2968)
!2986 = !DILocation(line: 845, column: 7, scope: !2968)
!2987 = !DILocation(line: 848, column: 1, scope: !2933)
!2988 = distinct !DISubprogram(name: "VEC_alias_set_entry_base_replace", scope: !3, file: !3, line: 249, type: !2989, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2992)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!1979, !2991, !7, !1979}
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!2992 = !{!2993, !2994, !2995, !2996}
!2993 = !DILocalVariable(name: "vec_", arg: 1, scope: !2988, file: !3, line: 249, type: !2991)
!2994 = !DILocalVariable(name: "ix_", arg: 2, scope: !2988, file: !3, line: 249, type: !7)
!2995 = !DILocalVariable(name: "obj_", arg: 3, scope: !2988, file: !3, line: 249, type: !1979)
!2996 = !DILocalVariable(name: "old_obj_", scope: !2988, file: !3, line: 249, type: !1979)
!2997 = !DILocation(line: 0, scope: !2988)
!2998 = !DILocation(line: 249, column: 1, scope: !2988)
!2999 = distinct !DISubprogram(name: "insert_subset_children", scope: !3, file: !3, line: 388, type: !3000, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3002)
!3000 = !DISubroutineType(types: !3001)
!3001 = !{!557, !1933, !561}
!3002 = !{!3003, !3004}
!3003 = !DILocalVariable(name: "node", arg: 1, scope: !2999, file: !3, line: 388, type: !1933)
!3004 = !DILocalVariable(name: "data", arg: 2, scope: !2999, file: !3, line: 388, type: !561)
!3005 = !DILocation(line: 0, scope: !2999)
!3006 = !DILocation(line: 390, column: 22, scope: !2999)
!3007 = !DILocation(line: 390, column: 47, scope: !2999)
!3008 = !DILocation(line: 390, column: 58, scope: !2999)
!3009 = !DILocation(line: 390, column: 3, scope: !2999)
!3010 = !DILocation(line: 392, column: 3, scope: !2999)
!3011 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !135, file: !135, line: 182, type: !3012, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3016)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{!557, !3014, !7, !1048}
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1360)
!3016 = !{!3017, !3018, !3019}
!3017 = !DILocalVariable(name: "vec_", arg: 1, scope: !3011, file: !135, line: 182, type: !3014)
!3018 = !DILocalVariable(name: "ix_", arg: 2, scope: !3011, file: !135, line: 182, type: !7)
!3019 = !DILocalVariable(name: "ptr", arg: 3, scope: !3011, file: !135, line: 182, type: !1048)
!3020 = !DILocation(line: 0, scope: !3011)
!3021 = !DILocation(line: 182, column: 1, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3011, file: !135, line: 182, column: 1)
!3023 = !DILocation(line: 182, column: 1, scope: !3011)
!3024 = !DILocation(line: 182, column: 1, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3022, file: !135, line: 182, column: 1)
!3026 = !DILocation(line: 182, column: 1, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3022, file: !135, line: 182, column: 1)
!3028 = !DILocation(line: 0, scope: !3022)
!3029 = distinct !DISubprogram(name: "get_varargs_alias_set", scope: !3, file: !3, line: 903, type: !2832, scopeLine: 904, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2063)
!3030 = !DILocation(line: 910, column: 3, scope: !3029)
!3031 = distinct !DISubprogram(name: "get_frame_alias_set", scope: !3, file: !3, line: 925, type: !2832, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2063)
!3032 = !DILocation(line: 927, column: 7, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 927, column: 7)
!3034 = !DILocation(line: 927, column: 17, scope: !3033)
!3035 = !DILocation(line: 927, column: 7, scope: !3031)
!3036 = !DILocation(line: 928, column: 17, scope: !3033)
!3037 = !DILocation(line: 928, column: 15, scope: !3033)
!3038 = !DILocation(line: 928, column: 5, scope: !3033)
!3039 = !DILocation(line: 930, column: 10, scope: !3031)
!3040 = !DILocation(line: 930, column: 3, scope: !3031)
!3041 = distinct !DISubprogram(name: "get_reg_known_value", scope: !3, file: !3, line: 1234, type: !3042, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3044)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!573, !7}
!3044 = !{!3045}
!3045 = !DILocalVariable(name: "regno", arg: 1, scope: !3041, file: !3, line: 1234, type: !7)
!3046 = !DILocation(line: 0, scope: !3041)
!3047 = !DILocation(line: 1236, column: 13, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 1236, column: 7)
!3049 = !DILocation(line: 1236, column: 7, scope: !3041)
!3050 = !DILocation(line: 1238, column: 13, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 1237, column: 5)
!3052 = !DILocation(line: 1239, column: 19, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 1239, column: 11)
!3054 = !DILocation(line: 1239, column: 17, scope: !3053)
!3055 = !DILocation(line: 1239, column: 11, scope: !3051)
!3056 = !DILocation(line: 1240, column: 9, scope: !3053)
!3057 = !DILocation(line: 1240, column: 2, scope: !3053)
!3058 = !DILocation(line: 1243, column: 1, scope: !3041)
!3059 = distinct !DISubprogram(name: "get_reg_known_equiv_p", scope: !3, file: !3, line: 1261, type: !3060, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3062)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!556, !7}
!3062 = !{!3063}
!3063 = !DILocalVariable(name: "regno", arg: 1, scope: !3059, file: !3, line: 1261, type: !7)
!3064 = !DILocation(line: 0, scope: !3059)
!3065 = !DILocation(line: 1263, column: 13, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 1263, column: 7)
!3067 = !DILocation(line: 1263, column: 7, scope: !3059)
!3068 = !DILocation(line: 1265, column: 13, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 1264, column: 5)
!3070 = !DILocation(line: 1266, column: 19, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3069, file: !3, line: 1266, column: 11)
!3072 = !DILocation(line: 1266, column: 17, scope: !3071)
!3073 = !DILocation(line: 1266, column: 11, scope: !3069)
!3074 = !DILocation(line: 1267, column: 9, scope: !3071)
!3075 = !DILocation(line: 1267, column: 2, scope: !3071)
!3076 = !DILocation(line: 1270, column: 1, scope: !3059)
!3077 = distinct !DISubprogram(name: "canon_rtx", scope: !3, file: !3, line: 1290, type: !3078, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3080)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{!573, !573}
!3080 = !{!3081, !3082, !3085, !3088}
!3081 = !DILocalVariable(name: "x", arg: 1, scope: !3077, file: !3, line: 1290, type: !573)
!3082 = !DILocalVariable(name: "t", scope: !3083, file: !3, line: 1295, type: !573)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 1294, column: 5)
!3084 = distinct !DILexicalBlock(scope: !3077, file: !3, line: 1293, column: 7)
!3085 = !DILocalVariable(name: "x0", scope: !3086, file: !3, line: 1304, type: !573)
!3086 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 1303, column: 5)
!3087 = distinct !DILexicalBlock(scope: !3077, file: !3, line: 1302, column: 7)
!3088 = !DILocalVariable(name: "x1", scope: !3086, file: !3, line: 1305, type: !573)
!3089 = !DILocation(line: 0, scope: !3077)
!3090 = !DILocation(line: 1293, column: 7, scope: !3084)
!3091 = !DILocation(line: 1293, column: 17, scope: !3084)
!3092 = !DILocation(line: 1293, column: 20, scope: !3084)
!3093 = !DILocation(line: 1293, column: 30, scope: !3084)
!3094 = !DILocation(line: 1293, column: 7, scope: !3077)
!3095 = !DILocation(line: 1295, column: 36, scope: !3083)
!3096 = !DILocation(line: 1295, column: 15, scope: !3083)
!3097 = !DILocation(line: 0, scope: !3083)
!3098 = !DILocation(line: 1296, column: 13, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 1296, column: 11)
!3100 = !DILocation(line: 1296, column: 11, scope: !3083)
!3101 = !DILocation(line: 1298, column: 11, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 1298, column: 11)
!3103 = !DILocation(line: 1298, column: 11, scope: !3083)
!3104 = !DILocation(line: 1299, column: 9, scope: !3102)
!3105 = !DILocation(line: 1299, column: 2, scope: !3102)
!3106 = !DILocation(line: 1302, column: 7, scope: !3087)
!3107 = !DILocation(line: 1302, column: 20, scope: !3087)
!3108 = !DILocation(line: 1302, column: 7, scope: !3077)
!3109 = !DILocation(line: 1304, column: 27, scope: !3086)
!3110 = !DILocation(line: 1304, column: 16, scope: !3086)
!3111 = !DILocation(line: 0, scope: !3086)
!3112 = !DILocation(line: 1305, column: 27, scope: !3086)
!3113 = !DILocation(line: 1305, column: 16, scope: !3086)
!3114 = !DILocation(line: 1307, column: 17, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 1307, column: 11)
!3116 = !DILocation(line: 1307, column: 14, scope: !3115)
!3117 = !DILocation(line: 1307, column: 29, scope: !3115)
!3118 = !DILocation(line: 1307, column: 38, scope: !3115)
!3119 = !DILocation(line: 1307, column: 35, scope: !3115)
!3120 = !DILocation(line: 1307, column: 11, scope: !3086)
!3121 = !DILocation(line: 1309, column: 8, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 1309, column: 8)
!3123 = distinct !DILexicalBlock(scope: !3115, file: !3, line: 1308, column: 2)
!3124 = !DILocation(line: 1309, column: 8, scope: !3123)
!3125 = !DILocation(line: 1310, column: 32, scope: !3122)
!3126 = !DILocation(line: 1310, column: 13, scope: !3122)
!3127 = !DILocation(line: 1310, column: 6, scope: !3122)
!3128 = !DILocation(line: 1311, column: 13, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 1311, column: 13)
!3130 = !DILocation(line: 1311, column: 13, scope: !3122)
!3131 = !DILocation(line: 1312, column: 32, scope: !3129)
!3132 = !DILocation(line: 1312, column: 13, scope: !3129)
!3133 = !DILocation(line: 1312, column: 6, scope: !3129)
!3134 = !DILocation(line: 1313, column: 11, scope: !3123)
!3135 = !DILocation(line: 1313, column: 4, scope: !3123)
!3136 = !DILocation(line: 1321, column: 12, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 1321, column: 12)
!3138 = !DILocation(line: 1321, column: 12, scope: !3087)
!3139 = !DILocation(line: 1322, column: 49, scope: !3137)
!3140 = !DILocation(line: 1322, column: 38, scope: !3137)
!3141 = !DILocation(line: 1322, column: 9, scope: !3137)
!3142 = !DILocation(line: 1322, column: 5, scope: !3137)
!3143 = !DILocation(line: 1324, column: 3, scope: !3077)
!3144 = !DILocation(line: 1325, column: 1, scope: !3077)
!3145 = distinct !DISubprogram(name: "rhs_regno", scope: !378, file: !378, line: 1051, type: !3146, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3148)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{!7, !1982}
!3148 = !{!3149}
!3149 = !DILocalVariable(name: "x", arg: 1, scope: !3145, file: !378, line: 1051, type: !1982)
!3150 = !DILocation(line: 0, scope: !3145)
!3151 = !DILocation(line: 1053, column: 10, scope: !3145)
!3152 = !DILocation(line: 1053, column: 3, scope: !3145)
!3153 = distinct !DISubprogram(name: "find_base_term", scope: !3, file: !3, line: 1469, type: !3078, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3154)
!3154 = !{!3155, !3156, !3157, !3158, !3161, !3163, !3164, !3167}
!3155 = !DILocalVariable(name: "x", arg: 1, scope: !3153, file: !3, line: 1469, type: !573)
!3156 = !DILocalVariable(name: "val", scope: !3153, file: !3, line: 1471, type: !644)
!3157 = !DILocalVariable(name: "l", scope: !3153, file: !3, line: 1472, type: !632)
!3158 = !DILocalVariable(name: "temp", scope: !3159, file: !3, line: 1511, type: !573)
!3159 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 1510, column: 7)
!3160 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 1480, column: 5)
!3161 = !DILocalVariable(name: "tmp1", scope: !3162, file: !3, line: 1541, type: !573)
!3162 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 1540, column: 7)
!3163 = !DILocalVariable(name: "tmp2", scope: !3162, file: !3, line: 1542, type: !573)
!3164 = !DILocalVariable(name: "base", scope: !3165, file: !3, line: 1563, type: !573)
!3165 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 1562, column: 4)
!3166 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1561, column: 6)
!3167 = !DILocalVariable(name: "base", scope: !3168, file: !3, line: 1570, type: !573)
!3168 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 1569, column: 4)
!3169 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1568, column: 6)
!3170 = !DILocation(line: 1500, column: 14, scope: !3160)
!3171 = !DILocation(line: 0, scope: !3153)
!3172 = !DILocation(line: 1476, column: 7, scope: !3153)
!3173 = !DILocation(line: 1479, column: 11, scope: !3153)
!3174 = !DILocation(line: 1479, column: 3, scope: !3153)
!3175 = !DILocation(line: 1482, column: 14, scope: !3160)
!3176 = !DILocation(line: 1488, column: 12, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 1488, column: 11)
!3178 = !DILocation(line: 1488, column: 11, scope: !3160)
!3179 = !DILocation(line: 1490, column: 11, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 1490, column: 11)
!3181 = !DILocation(line: 1490, column: 42, scope: !3180)
!3182 = !DILocation(line: 1490, column: 40, scope: !3180)
!3183 = !DILocation(line: 1490, column: 11, scope: !3160)
!3184 = !DILocation(line: 1500, column: 30, scope: !3160)
!3185 = !DILocation(line: 1507, column: 12, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 1507, column: 11)
!3187 = !DILocation(line: 1507, column: 11, scope: !3160)
!3188 = !DILocation(line: 1511, column: 29, scope: !3159)
!3189 = !DILocation(line: 1511, column: 13, scope: !3159)
!3190 = !DILocation(line: 0, scope: !3159)
!3191 = !DILocation(line: 1513, column: 11, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3159, file: !3, line: 1513, column: 6)
!3193 = !DILocation(line: 1513, column: 16, scope: !3192)
!3194 = !DILocation(line: 1513, column: 19, scope: !3192)
!3195 = !DILocation(line: 1513, column: 6, scope: !3159)
!3196 = !DILocation(line: 1514, column: 11, scope: !3192)
!3197 = !DILocation(line: 1514, column: 4, scope: !3192)
!3198 = !DILocation(line: 1520, column: 13, scope: !3160)
!3199 = !DILocation(line: 1521, column: 12, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 1521, column: 11)
!3201 = !DILocation(line: 1521, column: 11, scope: !3160)
!3202 = !DILocation(line: 1523, column: 21, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 1523, column: 7)
!3204 = !DILocation(line: 1523, column: 12, scope: !3203)
!3205 = !DILocation(line: 0, scope: !3203)
!3206 = !DILocation(line: 1523, column: 7, scope: !3203)
!3207 = !DILocation(line: 1524, column: 30, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 1524, column: 6)
!3209 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 1523, column: 7)
!3210 = !DILocation(line: 1524, column: 11, scope: !3208)
!3211 = !DILocation(line: 1524, column: 36, scope: !3208)
!3212 = !DILocation(line: 1524, column: 6, scope: !3209)
!3213 = !DILocation(line: 1523, column: 37, scope: !3209)
!3214 = !DILocation(line: 1523, column: 7, scope: !3209)
!3215 = distinct !{!3215, !3206, !3216}
!3216 = !DILocation(line: 1525, column: 11, scope: !3203)
!3217 = !DILocation(line: 1531, column: 30, scope: !3160)
!3218 = !DILocation(line: 1531, column: 14, scope: !3160)
!3219 = !DILocation(line: 1534, column: 11, scope: !3160)
!3220 = !DILocation(line: 1535, column: 11, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 1535, column: 11)
!3222 = !DILocation(line: 1535, column: 24, scope: !3221)
!3223 = !DILocation(line: 1535, column: 32, scope: !3221)
!3224 = !DILocation(line: 1535, column: 48, scope: !3221)
!3225 = !DILocation(line: 1535, column: 11, scope: !3160)
!3226 = !DILocation(line: 1541, column: 13, scope: !3162)
!3227 = !DILocation(line: 0, scope: !3162)
!3228 = !DILocation(line: 1542, column: 13, scope: !3162)
!3229 = !DILocation(line: 1556, column: 14, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1556, column: 6)
!3231 = !DILocation(line: 1556, column: 11, scope: !3230)
!3232 = !DILocation(line: 1556, column: 35, scope: !3230)
!3233 = !DILocation(line: 1556, column: 38, scope: !3230)
!3234 = !DILocation(line: 1556, column: 6, scope: !3162)
!3235 = !DILocation(line: 1557, column: 11, scope: !3230)
!3236 = !DILocation(line: 1561, column: 6, scope: !3166)
!3237 = !DILocation(line: 1561, column: 19, scope: !3166)
!3238 = !DILocation(line: 1561, column: 22, scope: !3166)
!3239 = !DILocation(line: 1561, column: 6, scope: !3162)
!3240 = !DILocation(line: 1563, column: 17, scope: !3165)
!3241 = !DILocation(line: 0, scope: !3165)
!3242 = !DILocation(line: 1564, column: 10, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3165, file: !3, line: 1564, column: 10)
!3244 = !DILocation(line: 1568, column: 6, scope: !3169)
!3245 = !DILocation(line: 1568, column: 19, scope: !3169)
!3246 = !DILocation(line: 1568, column: 22, scope: !3169)
!3247 = !DILocation(line: 1568, column: 6, scope: !3162)
!3248 = !DILocation(line: 1570, column: 17, scope: !3168)
!3249 = !DILocation(line: 0, scope: !3168)
!3250 = !DILocation(line: 1571, column: 10, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 1571, column: 10)
!3252 = !DILocation(line: 1577, column: 9, scope: !3162)
!3253 = !DILocation(line: 1578, column: 9, scope: !3162)
!3254 = !DILocation(line: 1583, column: 11, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1583, column: 6)
!3256 = !DILocation(line: 1584, column: 6, scope: !3255)
!3257 = !DILocation(line: 1584, column: 10, scope: !3255)
!3258 = !DILocation(line: 1584, column: 26, scope: !3255)
!3259 = !DILocation(line: 1585, column: 3, scope: !3255)
!3260 = !DILocation(line: 1585, column: 22, scope: !3255)
!3261 = !DILocation(line: 1586, column: 3, scope: !3255)
!3262 = !DILocation(line: 1586, column: 23, scope: !3255)
!3263 = !DILocation(line: 1587, column: 7, scope: !3255)
!3264 = !DILocation(line: 1587, column: 10, scope: !3255)
!3265 = !DILocation(line: 1587, column: 26, scope: !3255)
!3266 = !DILocation(line: 1583, column: 6, scope: !3162)
!3267 = !DILocation(line: 1590, column: 11, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1590, column: 6)
!3269 = !DILocation(line: 1591, column: 6, scope: !3268)
!3270 = !DILocation(line: 1591, column: 10, scope: !3268)
!3271 = !DILocation(line: 1591, column: 26, scope: !3268)
!3272 = !DILocation(line: 1592, column: 3, scope: !3268)
!3273 = !DILocation(line: 1592, column: 22, scope: !3268)
!3274 = !DILocation(line: 1593, column: 3, scope: !3268)
!3275 = !DILocation(line: 1593, column: 23, scope: !3268)
!3276 = !DILocation(line: 1594, column: 7, scope: !3268)
!3277 = !DILocation(line: 1594, column: 10, scope: !3268)
!3278 = !DILocation(line: 1594, column: 26, scope: !3268)
!3279 = !DILocation(line: 1590, column: 6, scope: !3162)
!3280 = !DILocation(line: 1600, column: 2, scope: !3162)
!3281 = !DILocation(line: 1604, column: 11, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 1604, column: 11)
!3283 = !DILocation(line: 1604, column: 37, scope: !3282)
!3284 = !DILocation(line: 1604, column: 40, scope: !3282)
!3285 = !DILocation(line: 1604, column: 61, scope: !3282)
!3286 = !DILocation(line: 1604, column: 11, scope: !3160)
!3287 = !DILocation(line: 1605, column: 25, scope: !3282)
!3288 = !DILocation(line: 1605, column: 9, scope: !3282)
!3289 = !DILocation(line: 1613, column: 7, scope: !3160)
!3290 = !DILocation(line: 1615, column: 1, scope: !3153)
!3291 = !DILocation(line: 0, scope: !3160)
!3292 = distinct !DISubprogram(name: "VEC_rtx_base_length", scope: !378, file: !378, line: 200, type: !3293, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3297)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{!7, !3295}
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!3297 = !{!3298}
!3298 = !DILocalVariable(name: "vec_", arg: 1, scope: !3292, file: !378, line: 200, type: !3295)
!3299 = !DILocation(line: 0, scope: !3292)
!3300 = !DILocation(line: 200, column: 1, scope: !3292)
!3301 = distinct !DISubprogram(name: "VEC_rtx_base_index", scope: !378, file: !378, line: 200, type: !3302, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3304)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{!573, !3295, !7}
!3304 = !{!3305, !3306}
!3305 = !DILocalVariable(name: "vec_", arg: 1, scope: !3301, file: !378, line: 200, type: !3295)
!3306 = !DILocalVariable(name: "ix_", arg: 2, scope: !3301, file: !378, line: 200, type: !7)
!3307 = !DILocation(line: 0, scope: !3301)
!3308 = !DILocation(line: 200, column: 1, scope: !3301)
!3309 = distinct !DISubprogram(name: "get_addr", scope: !3, file: !3, line: 1702, type: !3078, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3310)
!3310 = !{!3311, !3312, !3313}
!3311 = !DILocalVariable(name: "x", arg: 1, scope: !3309, file: !3, line: 1702, type: !573)
!3312 = !DILocalVariable(name: "v", scope: !3309, file: !3, line: 1704, type: !644)
!3313 = !DILocalVariable(name: "l", scope: !3309, file: !3, line: 1705, type: !632)
!3314 = !DILocation(line: 0, scope: !3309)
!3315 = !DILocation(line: 1707, column: 7, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 1707, column: 7)
!3317 = !DILocation(line: 1707, column: 20, scope: !3316)
!3318 = !DILocation(line: 1707, column: 7, scope: !3309)
!3319 = !DILocation(line: 1709, column: 7, scope: !3309)
!3320 = !DILocation(line: 1710, column: 7, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 1710, column: 7)
!3322 = !DILocation(line: 1710, column: 7, scope: !3309)
!3323 = !DILocation(line: 1712, column: 19, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 1712, column: 7)
!3325 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 1711, column: 5)
!3326 = !DILocation(line: 1712, column: 12, scope: !3324)
!3327 = !DILocation(line: 0, scope: !3324)
!3328 = !DILocation(line: 1712, column: 7, scope: !3324)
!3329 = !DILocation(line: 1713, column: 6, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 1713, column: 6)
!3331 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 1712, column: 7)
!3332 = !DILocation(line: 1713, column: 6, scope: !3331)
!3333 = !DILocation(line: 1714, column: 4, scope: !3330)
!3334 = !DILocation(line: 1712, column: 35, scope: !3331)
!3335 = !DILocation(line: 1712, column: 7, scope: !3331)
!3336 = distinct !{!3336, !3328, !3337}
!3337 = !DILocation(line: 1714, column: 14, scope: !3324)
!3338 = !DILocation(line: 1715, column: 12, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 1715, column: 7)
!3340 = !DILocation(line: 0, scope: !3339)
!3341 = !DILocation(line: 1715, column: 7, scope: !3339)
!3342 = !DILocation(line: 1716, column: 7, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 1716, column: 6)
!3344 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 1715, column: 7)
!3345 = !DILocation(line: 1716, column: 22, scope: !3343)
!3346 = !DILocation(line: 1716, column: 26, scope: !3343)
!3347 = !DILocation(line: 1716, column: 6, scope: !3344)
!3348 = !DILocation(line: 1717, column: 4, scope: !3343)
!3349 = !DILocation(line: 1715, column: 35, scope: !3344)
!3350 = !DILocation(line: 1715, column: 7, scope: !3344)
!3351 = distinct !{!3351, !3341, !3352}
!3352 = !DILocation(line: 1717, column: 14, scope: !3339)
!3353 = !DILocation(line: 1718, column: 14, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 1718, column: 11)
!3355 = !DILocation(line: 1718, column: 11, scope: !3354)
!3356 = !DILocation(line: 1718, column: 11, scope: !3325)
!3357 = !DILocation(line: 1719, column: 18, scope: !3354)
!3358 = !DILocation(line: 1719, column: 2, scope: !3354)
!3359 = !DILocation(line: 1722, column: 1, scope: !3309)
!3360 = distinct !DISubprogram(name: "read_dependence", scope: !3, file: !3, line: 1979, type: !3361, scopeLine: 1980, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3363)
!3361 = !DISubroutineType(types: !3362)
!3362 = !{!557, !1982, !1982}
!3363 = !{!3364, !3365}
!3364 = !DILocalVariable(name: "mem", arg: 1, scope: !3360, file: !3, line: 1979, type: !1982)
!3365 = !DILocalVariable(name: "x", arg: 2, scope: !3360, file: !3, line: 1979, type: !1982)
!3366 = !DILocation(line: 0, scope: !3360)
!3367 = !DILocation(line: 1981, column: 10, scope: !3360)
!3368 = !DILocation(line: 1981, column: 29, scope: !3360)
!3369 = !DILocation(line: 1981, column: 32, scope: !3360)
!3370 = !DILocation(line: 1981, column: 3, scope: !3360)
!3371 = distinct !DISubprogram(name: "nonoverlapping_memrefs_p", scope: !3, file: !3, line: 2138, type: !3361, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3372)
!3372 = !{!3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3393, !3394, !3396, !3401, !3402}
!3373 = !DILocalVariable(name: "x", arg: 1, scope: !3371, file: !3, line: 2138, type: !1982)
!3374 = !DILocalVariable(name: "y", arg: 2, scope: !3371, file: !3, line: 2138, type: !1982)
!3375 = !DILocalVariable(name: "exprx", scope: !3371, file: !3, line: 2140, type: !709)
!3376 = !DILocalVariable(name: "expry", scope: !3371, file: !3, line: 2140, type: !709)
!3377 = !DILocalVariable(name: "rtlx", scope: !3371, file: !3, line: 2141, type: !573)
!3378 = !DILocalVariable(name: "rtly", scope: !3371, file: !3, line: 2141, type: !573)
!3379 = !DILocalVariable(name: "basex", scope: !3371, file: !3, line: 2142, type: !573)
!3380 = !DILocalVariable(name: "basey", scope: !3371, file: !3, line: 2142, type: !573)
!3381 = !DILocalVariable(name: "moffsetx", scope: !3371, file: !3, line: 2143, type: !573)
!3382 = !DILocalVariable(name: "moffsety", scope: !3371, file: !3, line: 2143, type: !573)
!3383 = !DILocalVariable(name: "offsetx", scope: !3371, file: !3, line: 2144, type: !680)
!3384 = !DILocalVariable(name: "offsety", scope: !3371, file: !3, line: 2144, type: !680)
!3385 = !DILocalVariable(name: "sizex", scope: !3371, file: !3, line: 2144, type: !680)
!3386 = !DILocalVariable(name: "sizey", scope: !3371, file: !3, line: 2144, type: !680)
!3387 = !DILocalVariable(name: "tem", scope: !3371, file: !3, line: 2144, type: !680)
!3388 = !DILocalVariable(name: "field", scope: !3389, file: !3, line: 2171, type: !709)
!3389 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 2170, column: 2)
!3390 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 2168, column: 11)
!3391 = distinct !DILexicalBlock(scope: !3392, file: !3, line: 2167, column: 5)
!3392 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2166, column: 7)
!3393 = !DILocalVariable(name: "fieldcontext", scope: !3389, file: !3, line: 2172, type: !709)
!3394 = !DILocalVariable(name: "t", scope: !3395, file: !3, line: 2178, type: !709)
!3395 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 2177, column: 7)
!3396 = !DILocalVariable(name: "field", scope: !3397, file: !3, line: 2199, type: !709)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 2198, column: 2)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 2196, column: 11)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 2195, column: 5)
!3400 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2194, column: 7)
!3401 = !DILocalVariable(name: "fieldcontext", scope: !3397, file: !3, line: 2200, type: !709)
!3402 = !DILocalVariable(name: "t", scope: !3403, file: !3, line: 2206, type: !709)
!3403 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 2205, column: 7)
!3404 = !DILocation(line: 0, scope: !3371)
!3405 = !DILocation(line: 2140, column: 16, scope: !3371)
!3406 = !DILocation(line: 2140, column: 38, scope: !3371)
!3407 = !DILocation(line: 2147, column: 13, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2147, column: 7)
!3409 = !DILocation(line: 2147, column: 27, scope: !3408)
!3410 = !DILocation(line: 2147, column: 18, scope: !3408)
!3411 = !DILocation(line: 2151, column: 17, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2151, column: 7)
!3413 = !DILocation(line: 2151, column: 14, scope: !3412)
!3414 = !DILocation(line: 2152, column: 8, scope: !3412)
!3415 = !DILocation(line: 2152, column: 13, scope: !3412)
!3416 = !DILocation(line: 2153, column: 7, scope: !3412)
!3417 = !DILocation(line: 2153, column: 20, scope: !3412)
!3418 = !DILocation(line: 2153, column: 17, scope: !3412)
!3419 = !DILocation(line: 2154, column: 4, scope: !3412)
!3420 = !DILocation(line: 2154, column: 9, scope: !3412)
!3421 = !DILocation(line: 2151, column: 7, scope: !3371)
!3422 = !DILocation(line: 2158, column: 7, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2158, column: 7)
!3424 = !DILocation(line: 2158, column: 25, scope: !3423)
!3425 = !DILocation(line: 2159, column: 7, scope: !3423)
!3426 = !DILocation(line: 2159, column: 10, scope: !3423)
!3427 = !DILocation(line: 2159, column: 28, scope: !3423)
!3428 = !DILocation(line: 2160, column: 7, scope: !3423)
!3429 = !DILocation(line: 2160, column: 10, scope: !3423)
!3430 = !DILocation(line: 2158, column: 7, scope: !3371)
!3431 = !DILocation(line: 2165, column: 14, scope: !3371)
!3432 = !DILocation(line: 2166, column: 7, scope: !3392)
!3433 = !DILocation(line: 2166, column: 25, scope: !3392)
!3434 = !DILocation(line: 2166, column: 7, scope: !3371)
!3435 = !DILocation(line: 2168, column: 11, scope: !3390)
!3436 = !DILocation(line: 2168, column: 29, scope: !3390)
!3437 = !DILocation(line: 2169, column: 4, scope: !3390)
!3438 = !DILocation(line: 2169, column: 7, scope: !3390)
!3439 = !DILocation(line: 2168, column: 11, scope: !3391)
!3440 = !DILocation(line: 2171, column: 16, scope: !3389)
!3441 = !DILocation(line: 0, scope: !3389)
!3442 = !DILocation(line: 2172, column: 23, scope: !3389)
!3443 = !DILocation(line: 2174, column: 14, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 2173, column: 7)
!3445 = !DILocation(line: 2173, column: 7, scope: !3444)
!3446 = !DILocation(line: 2178, column: 11, scope: !3395)
!3447 = !DILocation(line: 0, scope: !3395)
!3448 = !DILocation(line: 2179, column: 8, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 2179, column: 6)
!3450 = !DILocation(line: 2179, column: 6, scope: !3395)
!3451 = !DILocation(line: 2181, column: 13, scope: !3395)
!3452 = !DILocation(line: 2183, column: 7, scope: !3391)
!3453 = !DILocation(line: 0, scope: !3391)
!3454 = !DILocation(line: 2185, column: 12, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3392, file: !3, line: 2185, column: 12)
!3456 = !DILocation(line: 2185, column: 12, scope: !3392)
!3457 = !DILocation(line: 2187, column: 15, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 2186, column: 5)
!3459 = !DILocation(line: 2188, column: 11, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 2188, column: 11)
!3461 = !DILocation(line: 2188, column: 33, scope: !3460)
!3462 = !DILocation(line: 2189, column: 4, scope: !3460)
!3463 = !DILocation(line: 2189, column: 7, scope: !3460)
!3464 = !DILocation(line: 2189, column: 25, scope: !3460)
!3465 = !DILocation(line: 2188, column: 11, scope: !3458)
!3466 = !DILocation(line: 0, scope: !3392)
!3467 = !DILocation(line: 2193, column: 14, scope: !3371)
!3468 = !DILocation(line: 2194, column: 7, scope: !3400)
!3469 = !DILocation(line: 2194, column: 25, scope: !3400)
!3470 = !DILocation(line: 2194, column: 7, scope: !3371)
!3471 = !DILocation(line: 2196, column: 11, scope: !3398)
!3472 = !DILocation(line: 2196, column: 29, scope: !3398)
!3473 = !DILocation(line: 2197, column: 4, scope: !3398)
!3474 = !DILocation(line: 2197, column: 7, scope: !3398)
!3475 = !DILocation(line: 2196, column: 11, scope: !3399)
!3476 = !DILocation(line: 2199, column: 16, scope: !3397)
!3477 = !DILocation(line: 0, scope: !3397)
!3478 = !DILocation(line: 2200, column: 23, scope: !3397)
!3479 = !DILocation(line: 2202, column: 14, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 2201, column: 7)
!3481 = !DILocation(line: 2201, column: 7, scope: !3480)
!3482 = !DILocation(line: 0, scope: !3398)
!3483 = !DILocation(line: 2206, column: 11, scope: !3403)
!3484 = !DILocation(line: 0, scope: !3403)
!3485 = !DILocation(line: 2207, column: 8, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 2207, column: 6)
!3487 = !DILocation(line: 2207, column: 6, scope: !3403)
!3488 = !DILocation(line: 2209, column: 13, scope: !3403)
!3489 = !DILocation(line: 2211, column: 7, scope: !3399)
!3490 = !DILocation(line: 0, scope: !3399)
!3491 = !DILocation(line: 2213, column: 12, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 2213, column: 12)
!3493 = !DILocation(line: 2213, column: 12, scope: !3400)
!3494 = !DILocation(line: 2215, column: 15, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 2214, column: 5)
!3496 = !DILocation(line: 2216, column: 11, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 2216, column: 11)
!3498 = !DILocation(line: 2216, column: 33, scope: !3497)
!3499 = !DILocation(line: 2217, column: 4, scope: !3497)
!3500 = !DILocation(line: 2217, column: 7, scope: !3497)
!3501 = !DILocation(line: 2217, column: 25, scope: !3497)
!3502 = !DILocation(line: 2216, column: 11, scope: !3495)
!3503 = !DILocation(line: 0, scope: !3400)
!3504 = !DILocation(line: 2221, column: 9, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2221, column: 7)
!3506 = !DILocation(line: 2221, column: 24, scope: !3505)
!3507 = !DILocation(line: 2221, column: 29, scope: !3505)
!3508 = !DILocation(line: 2221, column: 7, scope: !3371)
!3509 = !DILocation(line: 2227, column: 25, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2227, column: 7)
!3511 = !DILocation(line: 2228, column: 7, scope: !3510)
!3512 = !DILocation(line: 2228, column: 28, scope: !3510)
!3513 = !DILocation(line: 2227, column: 7, scope: !3371)
!3514 = !DILocation(line: 2231, column: 10, scope: !3371)
!3515 = !DILocation(line: 2232, column: 10, scope: !3371)
!3516 = !DILocation(line: 2237, column: 9, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2237, column: 7)
!3518 = !DILocation(line: 2237, column: 22, scope: !3517)
!3519 = !DILocation(line: 2237, column: 26, scope: !3517)
!3520 = !DILocation(line: 2238, column: 7, scope: !3517)
!3521 = !DILocation(line: 2238, column: 12, scope: !3517)
!3522 = !DILocation(line: 2237, column: 7, scope: !3371)
!3523 = !DILocation(line: 2244, column: 7, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2244, column: 7)
!3525 = !DILocation(line: 2244, column: 20, scope: !3524)
!3526 = !DILocation(line: 2244, column: 23, scope: !3524)
!3527 = !DILocation(line: 2245, column: 7, scope: !3524)
!3528 = !DILocation(line: 2245, column: 10, scope: !3524)
!3529 = !DILocation(line: 2245, column: 35, scope: !3524)
!3530 = !DILocation(line: 2245, column: 32, scope: !3524)
!3531 = !DILocation(line: 2244, column: 7, scope: !3371)
!3532 = !DILocation(line: 2252, column: 11, scope: !3371)
!3533 = !DILocation(line: 2252, column: 26, scope: !3371)
!3534 = !DILocation(line: 0, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2253, column: 7)
!3536 = !DILocation(line: 2253, column: 7, scope: !3535)
!3537 = !DILocation(line: 2253, column: 24, scope: !3535)
!3538 = !DILocation(line: 2253, column: 32, scope: !3535)
!3539 = !DILocation(line: 2253, column: 35, scope: !3535)
!3540 = !DILocation(line: 2253, column: 7, scope: !3371)
!3541 = !DILocation(line: 2254, column: 15, scope: !3535)
!3542 = !DILocation(line: 2254, column: 49, scope: !3535)
!3543 = !DILocation(line: 2254, column: 5, scope: !3535)
!3544 = !DILocation(line: 2256, column: 11, scope: !3371)
!3545 = !DILocation(line: 2256, column: 26, scope: !3371)
!3546 = !DILocation(line: 0, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2257, column: 7)
!3548 = !DILocation(line: 2257, column: 7, scope: !3547)
!3549 = !DILocation(line: 2257, column: 24, scope: !3547)
!3550 = !DILocation(line: 2257, column: 32, scope: !3547)
!3551 = !DILocation(line: 2257, column: 35, scope: !3547)
!3552 = !DILocation(line: 2257, column: 7, scope: !3371)
!3553 = !DILocation(line: 2258, column: 15, scope: !3547)
!3554 = !DILocation(line: 2258, column: 49, scope: !3547)
!3555 = !DILocation(line: 2258, column: 5, scope: !3547)
!3556 = !DILocation(line: 2264, column: 9, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2264, column: 7)
!3558 = !DILocation(line: 2264, column: 7, scope: !3371)
!3559 = !DILocation(line: 2265, column: 14, scope: !3557)
!3560 = !DILocation(line: 2265, column: 33, scope: !3557)
!3561 = !DILocation(line: 2265, column: 36, scope: !3557)
!3562 = !DILocation(line: 2266, column: 6, scope: !3557)
!3563 = !DILocation(line: 2266, column: 29, scope: !3557)
!3564 = !DILocation(line: 2266, column: 32, scope: !3557)
!3565 = !DILocation(line: 2267, column: 3, scope: !3557)
!3566 = !DILocation(line: 2267, column: 6, scope: !3557)
!3567 = !DILocation(line: 2268, column: 6, scope: !3557)
!3568 = !DILocation(line: 2268, column: 10, scope: !3557)
!3569 = !DILocation(line: 2268, column: 29, scope: !3557)
!3570 = !DILocation(line: 2268, column: 32, scope: !3557)
!3571 = !DILocation(line: 2269, column: 3, scope: !3557)
!3572 = !DILocation(line: 2269, column: 6, scope: !3557)
!3573 = !DILocation(line: 2265, column: 5, scope: !3557)
!3574 = !DILocation(line: 2271, column: 13, scope: !3371)
!3575 = !DILocation(line: 2271, column: 12, scope: !3371)
!3576 = !DILocation(line: 2271, column: 34, scope: !3371)
!3577 = !DILocation(line: 2271, column: 28, scope: !3371)
!3578 = !DILocation(line: 2272, column: 7, scope: !3371)
!3579 = !DILocation(line: 2272, column: 25, scope: !3371)
!3580 = !DILocation(line: 2274, column: 13, scope: !3371)
!3581 = !DILocation(line: 2274, column: 12, scope: !3371)
!3582 = !DILocation(line: 2274, column: 34, scope: !3371)
!3583 = !DILocation(line: 2274, column: 28, scope: !3371)
!3584 = !DILocation(line: 2275, column: 7, scope: !3371)
!3585 = !DILocation(line: 2275, column: 25, scope: !3371)
!3586 = !DILocation(line: 2280, column: 7, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2280, column: 7)
!3588 = !DILocation(line: 2280, column: 7, scope: !3371)
!3589 = !DILocation(line: 2281, column: 16, scope: !3587)
!3590 = !DILocation(line: 2281, column: 13, scope: !3587)
!3591 = !DILocation(line: 2281, column: 41, scope: !3587)
!3592 = !DILocation(line: 2281, column: 5, scope: !3587)
!3593 = !DILocation(line: 2282, column: 7, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2282, column: 7)
!3595 = !DILocation(line: 2282, column: 7, scope: !3371)
!3596 = !DILocation(line: 2283, column: 16, scope: !3594)
!3597 = !DILocation(line: 2283, column: 13, scope: !3594)
!3598 = !DILocation(line: 2283, column: 41, scope: !3594)
!3599 = !DILocation(line: 2283, column: 5, scope: !3594)
!3600 = !DILocation(line: 2288, column: 7, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2288, column: 7)
!3602 = !DILocation(line: 2288, column: 20, scope: !3601)
!3603 = !DILocation(line: 2288, column: 23, scope: !3601)
!3604 = !DILocation(line: 2289, column: 13, scope: !3601)
!3605 = !DILocation(line: 2289, column: 5, scope: !3601)
!3606 = !DILocation(line: 2290, column: 7, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2290, column: 7)
!3608 = !DILocation(line: 2290, column: 20, scope: !3607)
!3609 = !DILocation(line: 2290, column: 23, scope: !3607)
!3610 = !DILocation(line: 2291, column: 13, scope: !3607)
!3611 = !DILocation(line: 2291, column: 5, scope: !3607)
!3612 = !DILocation(line: 2294, column: 15, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 2294, column: 7)
!3614 = !DILocation(line: 2294, column: 7, scope: !3371)
!3615 = !DILocation(line: 2302, column: 16, scope: !3371)
!3616 = !DILocation(line: 2302, column: 21, scope: !3371)
!3617 = !DILocation(line: 2302, column: 3, scope: !3371)
!3618 = !DILocation(line: 2303, column: 1, scope: !3371)
!3619 = distinct !DISubprogram(name: "nonoverlapping_component_refs_p", scope: !3, file: !3, line: 2035, type: !3620, scopeLine: 2036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3622)
!3620 = !DISubroutineType(types: !3621)
!3621 = !{!556, !2755, !2755}
!3622 = !{!3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630}
!3623 = !DILocalVariable(name: "x", arg: 1, scope: !3619, file: !3, line: 2035, type: !2755)
!3624 = !DILocalVariable(name: "y", arg: 2, scope: !3619, file: !3, line: 2035, type: !2755)
!3625 = !DILocalVariable(name: "fieldx", scope: !3619, file: !3, line: 2037, type: !2755)
!3626 = !DILocalVariable(name: "fieldy", scope: !3619, file: !3, line: 2037, type: !2755)
!3627 = !DILocalVariable(name: "typex", scope: !3619, file: !3, line: 2037, type: !2755)
!3628 = !DILocalVariable(name: "typey", scope: !3619, file: !3, line: 2037, type: !2755)
!3629 = !DILocalVariable(name: "orig_y", scope: !3619, file: !3, line: 2037, type: !2755)
!3630 = !DILabel(scope: !3631, name: "found", file: !3, line: 2071)
!3631 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 2043, column: 5)
!3632 = !DILocation(line: 0, scope: !3619)
!3633 = !DILocation(line: 2039, column: 8, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 2039, column: 7)
!3635 = !DILocation(line: 2039, column: 7, scope: !3619)
!3636 = !DILocation(line: 2042, column: 3, scope: !3619)
!3637 = !DILocation(line: 2047, column: 7, scope: !3631)
!3638 = !DILocation(line: 2049, column: 13, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 2048, column: 2)
!3640 = !DILocation(line: 2050, column: 12, scope: !3639)
!3641 = !DILocation(line: 2053, column: 4, scope: !3639)
!3642 = !DILocation(line: 0, scope: !3639)
!3643 = !DILocation(line: 2055, column: 17, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 2054, column: 6)
!3645 = !DILocation(line: 2056, column: 16, scope: !3644)
!3646 = !DILocation(line: 2058, column: 18, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3644, file: !3, line: 2058, column: 12)
!3648 = !DILocation(line: 2058, column: 12, scope: !3644)
!3649 = !DILocation(line: 2061, column: 12, scope: !3644)
!3650 = !DILocation(line: 2063, column: 11, scope: !3639)
!3651 = !DILocation(line: 2063, column: 13, scope: !3639)
!3652 = !DILocation(line: 2063, column: 16, scope: !3639)
!3653 = !DILocation(line: 2063, column: 30, scope: !3639)
!3654 = !DILocation(line: 2062, column: 6, scope: !3644)
!3655 = distinct !{!3655, !3641, !3656}
!3656 = !DILocation(line: 2063, column: 46, scope: !3639)
!3657 = !DILocation(line: 2065, column: 8, scope: !3639)
!3658 = !DILocation(line: 2067, column: 14, scope: !3631)
!3659 = !DILocation(line: 2067, column: 16, scope: !3631)
!3660 = !DILocation(line: 2067, column: 19, scope: !3631)
!3661 = !DILocation(line: 2067, column: 33, scope: !3631)
!3662 = !DILocation(line: 2066, column: 2, scope: !3639)
!3663 = distinct !{!3663, !3637, !3664}
!3664 = !DILocation(line: 2067, column: 49, scope: !3631)
!3665 = !DILocation(line: 2071, column: 5, scope: !3631)
!3666 = !DILocation(line: 2074, column: 11, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 2074, column: 11)
!3668 = !DILocation(line: 2074, column: 29, scope: !3667)
!3669 = !DILocation(line: 2075, column: 14, scope: !3667)
!3670 = !DILocation(line: 2075, column: 4, scope: !3667)
!3671 = !DILocation(line: 2080, column: 11, scope: !3631)
!3672 = !DILocation(line: 2081, column: 11, scope: !3631)
!3673 = !DILocation(line: 2083, column: 10, scope: !3619)
!3674 = !DILocation(line: 2083, column: 15, scope: !3619)
!3675 = !DILocation(line: 2083, column: 12, scope: !3619)
!3676 = !DILocation(line: 2084, column: 6, scope: !3619)
!3677 = !DILocation(line: 2084, column: 20, scope: !3619)
!3678 = !DILocation(line: 2085, column: 3, scope: !3619)
!3679 = !DILocation(line: 2085, column: 6, scope: !3619)
!3680 = !DILocation(line: 2085, column: 20, scope: !3619)
!3681 = !DILocation(line: 2082, column: 5, scope: !3631)
!3682 = distinct !{!3682, !3636, !3683}
!3683 = !DILocation(line: 2085, column: 36, scope: !3619)
!3684 = !DILocation(line: 2088, column: 1, scope: !3619)
!3685 = distinct !DISubprogram(name: "decl_for_component_ref", scope: !3, file: !3, line: 2093, type: !3686, scopeLine: 2094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3688)
!3686 = !DISubroutineType(types: !3687)
!3687 = !{!709, !709}
!3688 = !{!3689}
!3689 = !DILocalVariable(name: "x", arg: 1, scope: !3685, file: !3, line: 2093, type: !709)
!3690 = !DILocation(line: 0, scope: !3685)
!3691 = !DILocation(line: 2095, column: 3, scope: !3685)
!3692 = !DILocation(line: 2097, column: 11, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 2096, column: 5)
!3694 = !DILocation(line: 2099, column: 12, scope: !3685)
!3695 = !DILocation(line: 2099, column: 15, scope: !3685)
!3696 = !DILocation(line: 2099, column: 29, scope: !3685)
!3697 = !DILocation(line: 2098, column: 5, scope: !3693)
!3698 = distinct !{!3698, !3691, !3699}
!3699 = !DILocation(line: 2099, column: 45, scope: !3685)
!3700 = !DILocation(line: 2101, column: 15, scope: !3685)
!3701 = !DILocation(line: 2101, column: 10, scope: !3685)
!3702 = !DILocation(line: 2101, column: 3, scope: !3685)
!3703 = distinct !DISubprogram(name: "adjust_offset_for_component_ref", scope: !3, file: !3, line: 2108, type: !3704, scopeLine: 2109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3706)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!573, !709, !573}
!3706 = !{!3707, !3708, !3709, !3710, !3712}
!3707 = !DILocalVariable(name: "x", arg: 1, scope: !3703, file: !3, line: 2108, type: !709)
!3708 = !DILocalVariable(name: "offset", arg: 2, scope: !3703, file: !3, line: 2108, type: !573)
!3709 = !DILocalVariable(name: "ioffset", scope: !3703, file: !3, line: 2110, type: !680)
!3710 = !DILocalVariable(name: "offset", scope: !3711, file: !3, line: 2118, type: !709)
!3711 = distinct !DILexicalBlock(scope: !3703, file: !3, line: 2117, column: 5)
!3712 = !DILocalVariable(name: "field", scope: !3711, file: !3, line: 2119, type: !709)
!3713 = !DILocation(line: 0, scope: !3703)
!3714 = !DILocation(line: 2112, column: 9, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3703, file: !3, line: 2112, column: 7)
!3716 = !DILocation(line: 2112, column: 7, scope: !3703)
!3717 = !DILocation(line: 2115, column: 13, scope: !3703)
!3718 = !DILocation(line: 2116, column: 3, scope: !3703)
!3719 = !DILocation(line: 2118, column: 21, scope: !3711)
!3720 = !DILocation(line: 0, scope: !3711)
!3721 = !DILocation(line: 2119, column: 20, scope: !3711)
!3722 = !DILocation(line: 2121, column: 13, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 2121, column: 11)
!3724 = !DILocation(line: 2121, column: 11, scope: !3711)
!3725 = !DILocation(line: 2123, column: 19, scope: !3711)
!3726 = !DILocation(line: 2124, column: 22, scope: !3711)
!3727 = !DILocation(line: 2124, column: 8, scope: !3711)
!3728 = !DILocation(line: 2125, column: 8, scope: !3711)
!3729 = !DILocation(line: 2124, column: 5, scope: !3711)
!3730 = !DILocation(line: 2123, column: 15, scope: !3711)
!3731 = !DILocation(line: 2127, column: 11, scope: !3711)
!3732 = !DILocation(line: 2128, column: 5, scope: !3703)
!3733 = !DILocation(line: 2129, column: 10, scope: !3703)
!3734 = !DILocation(line: 2129, column: 12, scope: !3703)
!3735 = !DILocation(line: 2129, column: 15, scope: !3703)
!3736 = !DILocation(line: 2129, column: 29, scope: !3703)
!3737 = !DILocation(line: 2128, column: 5, scope: !3711)
!3738 = distinct !{!3738, !3718, !3739}
!3739 = !DILocation(line: 2129, column: 45, scope: !3703)
!3740 = !DILocation(line: 2131, column: 10, scope: !3703)
!3741 = !DILocation(line: 2131, column: 3, scope: !3703)
!3742 = !DILocation(line: 2132, column: 1, scope: !3703)
!3743 = distinct !DISubprogram(name: "true_dependence", scope: !3, file: !3, line: 2308, type: !3744, scopeLine: 2310, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3749)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{!557, !1982, !5, !1982, !3746}
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{!556, !1982, !556}
!3749 = !{!3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757}
!3750 = !DILocalVariable(name: "mem", arg: 1, scope: !3743, file: !3, line: 2308, type: !1982)
!3751 = !DILocalVariable(name: "mem_mode", arg: 2, scope: !3743, file: !3, line: 2308, type: !5)
!3752 = !DILocalVariable(name: "x", arg: 3, scope: !3743, file: !3, line: 2308, type: !1982)
!3753 = !DILocalVariable(name: "varies", arg: 4, scope: !3743, file: !3, line: 2309, type: !3746)
!3754 = !DILocalVariable(name: "x_addr", scope: !3743, file: !3, line: 2311, type: !573)
!3755 = !DILocalVariable(name: "mem_addr", scope: !3743, file: !3, line: 2311, type: !573)
!3756 = !DILocalVariable(name: "base", scope: !3743, file: !3, line: 2312, type: !573)
!3757 = !DILocalVariable(name: "ret", scope: !3743, file: !3, line: 2313, type: !557)
!3758 = !DILocation(line: 0, scope: !3743)
!3759 = !DILocation(line: 2315, column: 7, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2315, column: 7)
!3761 = !DILocation(line: 2315, column: 26, scope: !3760)
!3762 = !DILocation(line: 2315, column: 29, scope: !3760)
!3763 = !DILocation(line: 2315, column: 7, scope: !3743)
!3764 = !DILocation(line: 2320, column: 7, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2320, column: 7)
!3766 = !DILocation(line: 2320, column: 20, scope: !3765)
!3767 = !DILocation(line: 2320, column: 31, scope: !3765)
!3768 = !DILocation(line: 2320, column: 34, scope: !3765)
!3769 = !DILocation(line: 2320, column: 57, scope: !3765)
!3770 = !DILocation(line: 2320, column: 7, scope: !3743)
!3771 = !DILocation(line: 2322, column: 7, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2322, column: 7)
!3773 = !DILocation(line: 2322, column: 22, scope: !3772)
!3774 = !DILocation(line: 2322, column: 33, scope: !3772)
!3775 = !DILocation(line: 2322, column: 36, scope: !3772)
!3776 = !DILocation(line: 2322, column: 61, scope: !3772)
!3777 = !DILocation(line: 2322, column: 7, scope: !3743)
!3778 = !DILocation(line: 2324, column: 7, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2324, column: 7)
!3780 = !DILocation(line: 2325, column: 7, scope: !3779)
!3781 = !DILocation(line: 2325, column: 10, scope: !3779)
!3782 = !DILocation(line: 2324, column: 7, scope: !3743)
!3783 = !DILocation(line: 2331, column: 7, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2331, column: 7)
!3785 = !DILocation(line: 2331, column: 7, scope: !3743)
!3786 = !DILocation(line: 2337, column: 7, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2337, column: 7)
!3788 = !DILocation(line: 2337, column: 31, scope: !3787)
!3789 = !DILocation(line: 2337, column: 28, scope: !3787)
!3790 = !DILocation(line: 2337, column: 7, scope: !3743)
!3791 = !DILocation(line: 2340, column: 16, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2340, column: 7)
!3793 = !DILocation(line: 2340, column: 7, scope: !3743)
!3794 = !DILocation(line: 2341, column: 16, scope: !3792)
!3795 = !DILocation(line: 2341, column: 5, scope: !3792)
!3796 = !DILocation(line: 2343, column: 22, scope: !3743)
!3797 = !DILocation(line: 2343, column: 12, scope: !3743)
!3798 = !DILocation(line: 2344, column: 24, scope: !3743)
!3799 = !DILocation(line: 2344, column: 14, scope: !3743)
!3800 = !DILocation(line: 2346, column: 10, scope: !3743)
!3801 = !DILocation(line: 2347, column: 7, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2347, column: 7)
!3803 = !DILocation(line: 2347, column: 12, scope: !3802)
!3804 = !DILocation(line: 2347, column: 16, scope: !3802)
!3805 = !DILocation(line: 2347, column: 32, scope: !3802)
!3806 = !DILocation(line: 2348, column: 9, scope: !3802)
!3807 = !DILocation(line: 2348, column: 29, scope: !3802)
!3808 = !DILocation(line: 2349, column: 6, scope: !3802)
!3809 = !DILocation(line: 2349, column: 9, scope: !3802)
!3810 = !DILocation(line: 2347, column: 7, scope: !3743)
!3811 = !DILocation(line: 2352, column: 45, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2352, column: 7)
!3813 = !DILocation(line: 2352, column: 9, scope: !3812)
!3814 = !DILocation(line: 2352, column: 7, scope: !3743)
!3815 = !DILocation(line: 2355, column: 12, scope: !3743)
!3816 = !DILocation(line: 2356, column: 14, scope: !3743)
!3817 = !DILocation(line: 2358, column: 34, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2358, column: 7)
!3819 = !DILocation(line: 2359, column: 6, scope: !3818)
!3820 = !DILocation(line: 2358, column: 14, scope: !3818)
!3821 = !DILocation(line: 2359, column: 37, scope: !3818)
!3822 = !DILocation(line: 2358, column: 7, scope: !3743)
!3823 = !DILocation(line: 2362, column: 7, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2362, column: 7)
!3825 = !DILocation(line: 2362, column: 7, scope: !3743)
!3826 = !DILocation(line: 2365, column: 7, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2365, column: 7)
!3828 = !DILocation(line: 2365, column: 7, scope: !3743)
!3829 = !DILocation(line: 2368, column: 7, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2368, column: 7)
!3831 = !DILocation(line: 2373, column: 16, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2373, column: 7)
!3833 = !DILocation(line: 2368, column: 7, scope: !3743)
!3834 = !DILocation(line: 2373, column: 29, scope: !3832)
!3835 = !DILocation(line: 2373, column: 49, scope: !3832)
!3836 = !DILocation(line: 2378, column: 16, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2378, column: 7)
!3838 = !DILocation(line: 2373, column: 7, scope: !3743)
!3839 = !DILocation(line: 2378, column: 30, scope: !3837)
!3840 = !DILocation(line: 2378, column: 43, scope: !3837)
!3841 = !DILocation(line: 2378, column: 7, scope: !3743)
!3842 = !DILocation(line: 2381, column: 7, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2381, column: 7)
!3844 = !DILocation(line: 2381, column: 7, scope: !3743)
!3845 = !DILocation(line: 2384, column: 10, scope: !3743)
!3846 = !DILocation(line: 2384, column: 3, scope: !3743)
!3847 = !DILocation(line: 2385, column: 1, scope: !3743)
!3848 = distinct !DISubprogram(name: "base_alias_check", scope: !3, file: !3, line: 1621, type: !3849, scopeLine: 1623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3851)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!557, !573, !573, !5, !5}
!3851 = !{!3852, !3853, !3854, !3855, !3856, !3857, !3858, !3861}
!3852 = !DILocalVariable(name: "x", arg: 1, scope: !3848, file: !3, line: 1621, type: !573)
!3853 = !DILocalVariable(name: "y", arg: 2, scope: !3848, file: !3, line: 1621, type: !573)
!3854 = !DILocalVariable(name: "x_mode", arg: 3, scope: !3848, file: !3, line: 1621, type: !5)
!3855 = !DILocalVariable(name: "y_mode", arg: 4, scope: !3848, file: !3, line: 1622, type: !5)
!3856 = !DILocalVariable(name: "x_base", scope: !3848, file: !3, line: 1624, type: !573)
!3857 = !DILocalVariable(name: "y_base", scope: !3848, file: !3, line: 1625, type: !573)
!3858 = !DILocalVariable(name: "x_c", scope: !3859, file: !3, line: 1632, type: !573)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 1631, column: 5)
!3860 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1630, column: 7)
!3861 = !DILocalVariable(name: "y_c", scope: !3862, file: !3, line: 1644, type: !573)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 1643, column: 5)
!3863 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1642, column: 7)
!3864 = !DILocation(line: 0, scope: !3848)
!3865 = !DILocation(line: 1624, column: 16, scope: !3848)
!3866 = !DILocation(line: 1625, column: 16, scope: !3848)
!3867 = !DILocation(line: 1630, column: 14, scope: !3860)
!3868 = !DILocation(line: 1630, column: 7, scope: !3848)
!3869 = !DILocation(line: 1634, column: 13, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1634, column: 11)
!3871 = !DILocation(line: 1634, column: 42, scope: !3870)
!3872 = !DILocation(line: 1634, column: 52, scope: !3870)
!3873 = !DILocation(line: 0, scope: !3859)
!3874 = !DILocation(line: 1634, column: 67, scope: !3870)
!3875 = !DILocation(line: 1634, column: 11, scope: !3859)
!3876 = !DILocation(line: 1637, column: 16, scope: !3859)
!3877 = !DILocation(line: 1638, column: 18, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1638, column: 11)
!3879 = !DILocation(line: 0, scope: !3860)
!3880 = !DILocation(line: 1624, column: 7, scope: !3848)
!3881 = !DILocation(line: 1642, column: 14, scope: !3863)
!3882 = !DILocation(line: 1642, column: 7, scope: !3848)
!3883 = !DILocation(line: 1645, column: 13, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 1645, column: 11)
!3885 = !DILocation(line: 1645, column: 42, scope: !3884)
!3886 = !DILocation(line: 1645, column: 52, scope: !3884)
!3887 = !DILocation(line: 0, scope: !3862)
!3888 = !DILocation(line: 1645, column: 67, scope: !3884)
!3889 = !DILocation(line: 1645, column: 11, scope: !3862)
!3890 = !DILocation(line: 1648, column: 16, scope: !3862)
!3891 = !DILocation(line: 1649, column: 18, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 1649, column: 11)
!3893 = !DILocation(line: 0, scope: !3863)
!3894 = !DILocation(line: 1625, column: 7, scope: !3848)
!3895 = !DILocation(line: 1654, column: 7, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1654, column: 7)
!3897 = !DILocation(line: 1654, column: 7, scope: !3848)
!3898 = !DILocation(line: 1664, column: 7, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1664, column: 7)
!3900 = !DILocation(line: 1664, column: 20, scope: !3899)
!3901 = !DILocation(line: 1664, column: 27, scope: !3899)
!3902 = !DILocation(line: 1664, column: 30, scope: !3899)
!3903 = !DILocation(line: 1664, column: 43, scope: !3899)
!3904 = !DILocation(line: 1664, column: 7, scope: !3848)
!3905 = !DILocation(line: 1667, column: 7, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1666, column: 7)
!3907 = !DILocation(line: 1667, column: 12, scope: !3906)
!3908 = !DILocation(line: 1668, column: 4, scope: !3906)
!3909 = !DILocation(line: 1668, column: 13, scope: !3906)
!3910 = !DILocation(line: 1668, column: 44, scope: !3906)
!3911 = !DILocation(line: 1668, column: 43, scope: !3906)
!3912 = !DILocation(line: 1668, column: 41, scope: !3906)
!3913 = !DILocation(line: 1666, column: 7, scope: !3848)
!3914 = !DILocation(line: 1670, column: 7, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1670, column: 7)
!3916 = !DILocation(line: 1670, column: 20, scope: !3915)
!3917 = !DILocation(line: 1671, column: 7, scope: !3915)
!3918 = !DILocation(line: 1671, column: 12, scope: !3915)
!3919 = !DILocation(line: 1672, column: 4, scope: !3915)
!3920 = !DILocation(line: 1672, column: 13, scope: !3915)
!3921 = !DILocation(line: 1672, column: 44, scope: !3915)
!3922 = !DILocation(line: 1672, column: 43, scope: !3915)
!3923 = !DILocation(line: 1672, column: 41, scope: !3915)
!3924 = !DILocation(line: 1670, column: 7, scope: !3848)
!3925 = !DILocation(line: 1676, column: 7, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1676, column: 7)
!3927 = !DILocation(line: 1676, column: 25, scope: !3926)
!3928 = !DILocation(line: 1676, column: 36, scope: !3926)
!3929 = !DILocation(line: 1676, column: 39, scope: !3926)
!3930 = !DILocation(line: 1676, column: 57, scope: !3926)
!3931 = !DILocation(line: 1676, column: 7, scope: !3848)
!3932 = !DILocation(line: 1683, column: 37, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1683, column: 7)
!3934 = !DILocation(line: 1683, column: 40, scope: !3933)
!3935 = !DILocation(line: 1683, column: 58, scope: !3933)
!3936 = !DILocation(line: 1684, column: 7, scope: !3933)
!3937 = !DILocation(line: 1684, column: 11, scope: !3933)
!3938 = !DILocation(line: 1684, column: 29, scope: !3933)
!3939 = !DILocation(line: 1684, column: 40, scope: !3933)
!3940 = !DILocation(line: 1684, column: 43, scope: !3933)
!3941 = !DILocation(line: 1684, column: 61, scope: !3933)
!3942 = !DILocation(line: 1683, column: 7, scope: !3848)
!3943 = !DILocation(line: 1687, column: 9, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1687, column: 7)
!3945 = !DILocation(line: 1687, column: 7, scope: !3848)
!3946 = !DILocation(line: 1690, column: 29, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1690, column: 7)
!3948 = !DILocation(line: 1690, column: 7, scope: !3848)
!3949 = !DILocation(line: 1694, column: 13, scope: !3848)
!3950 = !DILocation(line: 1694, column: 31, scope: !3848)
!3951 = !DILocation(line: 1694, column: 43, scope: !3848)
!3952 = !DILocation(line: 1694, column: 46, scope: !3848)
!3953 = !DILocation(line: 1694, column: 64, scope: !3848)
!3954 = !DILocation(line: 1694, column: 3, scope: !3848)
!3955 = !DILocation(line: 1695, column: 1, scope: !3848)
!3956 = distinct !DISubprogram(name: "memrefs_conflict_p", scope: !3, file: !3, line: 1789, type: !3957, scopeLine: 1790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3959)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!557, !557, !573, !557, !573, !680}
!3959 = !{!3960, !3961, !3962, !3963, !3964, !3965, !3968, !3969, !3972, !3973, !3976, !3977, !3981, !3982, !3983}
!3960 = !DILocalVariable(name: "xsize", arg: 1, scope: !3956, file: !3, line: 1789, type: !557)
!3961 = !DILocalVariable(name: "x", arg: 2, scope: !3956, file: !3, line: 1789, type: !573)
!3962 = !DILocalVariable(name: "ysize", arg: 3, scope: !3956, file: !3, line: 1789, type: !557)
!3963 = !DILocalVariable(name: "y", arg: 4, scope: !3956, file: !3, line: 1789, type: !573)
!3964 = !DILocalVariable(name: "c", arg: 5, scope: !3956, file: !3, line: 1789, type: !680)
!3965 = !DILocalVariable(name: "x0", scope: !3966, file: !3, line: 1826, type: !573)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1823, column: 5)
!3967 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1822, column: 7)
!3968 = !DILocalVariable(name: "x1", scope: !3966, file: !3, line: 1827, type: !573)
!3969 = !DILocalVariable(name: "y0", scope: !3970, file: !3, line: 1833, type: !573)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 1830, column: 2)
!3971 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 1829, column: 11)
!3972 = !DILocalVariable(name: "y1", scope: !3970, file: !3, line: 1834, type: !573)
!3973 = !DILocalVariable(name: "y0", scope: !3974, file: !3, line: 1861, type: !573)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 1858, column: 5)
!3975 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1857, column: 12)
!3976 = !DILocalVariable(name: "y1", scope: !3974, file: !3, line: 1862, type: !573)
!3977 = !DILocalVariable(name: "x0", scope: !3978, file: !3, line: 1878, type: !573)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 1874, column: 2)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 1872, column: 7)
!3980 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1870, column: 7)
!3981 = !DILocalVariable(name: "y0", scope: !3978, file: !3, line: 1878, type: !573)
!3982 = !DILocalVariable(name: "x1", scope: !3978, file: !3, line: 1879, type: !573)
!3983 = !DILocalVariable(name: "y1", scope: !3978, file: !3, line: 1880, type: !573)
!3984 = !DILocation(line: 1910, column: 14, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 1907, column: 5)
!3986 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1906, column: 7)
!3987 = !DILocation(line: 0, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 1918, column: 11)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 1913, column: 5)
!3990 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1912, column: 7)
!3991 = !DILocation(line: 1791, column: 7, scope: !3956)
!3992 = !DILocation(line: 0, scope: !3956)
!3993 = !DILocation(line: 1791, column: 7, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1791, column: 7)
!3995 = !DILocation(line: 1791, column: 20, scope: !3994)
!3996 = !DILocation(line: 1792, column: 9, scope: !3994)
!3997 = !DILocation(line: 1792, column: 5, scope: !3994)
!3998 = !DILocation(line: 1793, column: 7, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1793, column: 7)
!4000 = !DILocation(line: 1793, column: 20, scope: !3999)
!4001 = !DILocation(line: 1793, column: 7, scope: !3956)
!4002 = !DILocation(line: 1794, column: 9, scope: !3999)
!4003 = !DILocation(line: 1794, column: 5, scope: !3999)
!4004 = !DILocation(line: 1795, column: 7, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1795, column: 7)
!4006 = !DILocation(line: 1795, column: 20, scope: !4005)
!4007 = !DILocation(line: 1795, column: 7, scope: !3956)
!4008 = !DILocation(line: 1796, column: 9, scope: !4005)
!4009 = !DILocation(line: 1796, column: 5, scope: !4005)
!4010 = !DILocation(line: 1797, column: 25, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 1797, column: 12)
!4012 = !DILocation(line: 1797, column: 12, scope: !4005)
!4013 = !DILocation(line: 1798, column: 9, scope: !4011)
!4014 = !DILocation(line: 1798, column: 5, scope: !4011)
!4015 = !DILocation(line: 1800, column: 9, scope: !4011)
!4016 = !DILocation(line: 0, scope: !4005)
!4017 = !DILocation(line: 1801, column: 7, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1801, column: 7)
!4019 = !DILocation(line: 1801, column: 20, scope: !4018)
!4020 = !DILocation(line: 1801, column: 7, scope: !3956)
!4021 = !DILocation(line: 1802, column: 9, scope: !4018)
!4022 = !DILocation(line: 1802, column: 5, scope: !4018)
!4023 = !DILocation(line: 1803, column: 25, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4018, file: !3, line: 1803, column: 12)
!4025 = !DILocation(line: 1803, column: 12, scope: !4018)
!4026 = !DILocation(line: 1804, column: 9, scope: !4024)
!4027 = !DILocation(line: 1804, column: 5, scope: !4024)
!4028 = !DILocation(line: 1806, column: 9, scope: !4024)
!4029 = !DILocation(line: 0, scope: !4018)
!4030 = !DILocation(line: 1808, column: 7, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1808, column: 7)
!4032 = !DILocation(line: 1808, column: 7, scope: !3956)
!4033 = !DILocation(line: 1810, column: 17, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 1810, column: 11)
!4035 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 1809, column: 5)
!4036 = !DILocation(line: 1810, column: 31, scope: !4034)
!4037 = !DILocation(line: 1810, column: 22, scope: !4034)
!4038 = !DILocation(line: 1812, column: 13, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 1812, column: 11)
!4040 = !DILocation(line: 1812, column: 27, scope: !4039)
!4041 = !DILocation(line: 1812, column: 18, scope: !4039)
!4042 = !DILocation(line: 1814, column: 13, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 1814, column: 11)
!4044 = !DILocation(line: 1814, column: 17, scope: !4043)
!4045 = !DILocation(line: 1814, column: 20, scope: !4043)
!4046 = !DILocation(line: 1814, column: 25, scope: !4043)
!4047 = !DILocation(line: 1814, column: 28, scope: !4043)
!4048 = !DILocation(line: 1814, column: 11, scope: !4035)
!4049 = !DILocation(line: 1816, column: 7, scope: !4035)
!4050 = !DILocation(line: 1822, column: 7, scope: !3967)
!4051 = !DILocation(line: 1822, column: 20, scope: !3967)
!4052 = !DILocation(line: 1822, column: 7, scope: !3956)
!4053 = !DILocation(line: 1826, column: 16, scope: !3966)
!4054 = !DILocation(line: 0, scope: !3966)
!4055 = !DILocation(line: 1827, column: 16, scope: !3966)
!4056 = !DILocation(line: 1829, column: 11, scope: !3971)
!4057 = !DILocation(line: 1829, column: 24, scope: !3971)
!4058 = !DILocation(line: 1829, column: 11, scope: !3966)
!4059 = !DILocation(line: 1833, column: 13, scope: !3970)
!4060 = !DILocation(line: 0, scope: !3970)
!4061 = !DILocation(line: 1834, column: 13, scope: !3970)
!4062 = !DILocation(line: 1836, column: 8, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1836, column: 8)
!4064 = !DILocation(line: 1836, column: 8, scope: !3970)
!4065 = !DILocation(line: 1837, column: 13, scope: !4063)
!4066 = !DILocation(line: 1837, column: 6, scope: !4063)
!4067 = !DILocation(line: 1838, column: 8, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1838, column: 8)
!4069 = !DILocation(line: 1838, column: 8, scope: !3970)
!4070 = !DILocation(line: 1839, column: 13, scope: !4068)
!4071 = !DILocation(line: 1839, column: 6, scope: !4068)
!4072 = !DILocation(line: 1840, column: 8, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1840, column: 8)
!4074 = !DILocation(line: 0, scope: !4073)
!4075 = !DILocation(line: 1840, column: 8, scope: !3970)
!4076 = !DILocation(line: 0, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 1842, column: 12)
!4078 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 1841, column: 6)
!4079 = !DILocation(line: 1842, column: 12, scope: !4078)
!4080 = !DILocation(line: 1844, column: 27, scope: !4077)
!4081 = !DILocation(line: 1844, column: 25, scope: !4077)
!4082 = !DILocation(line: 1843, column: 10, scope: !4077)
!4083 = !DILocation(line: 1843, column: 3, scope: !4077)
!4084 = !DILocation(line: 1846, column: 10, scope: !4077)
!4085 = !DILocation(line: 1846, column: 3, scope: !4077)
!4086 = !DILocation(line: 1849, column: 13, scope: !4073)
!4087 = !DILocation(line: 1850, column: 58, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 1849, column: 13)
!4089 = !DILocation(line: 1850, column: 56, scope: !4088)
!4090 = !DILocation(line: 1850, column: 13, scope: !4088)
!4091 = !DILocation(line: 1850, column: 6, scope: !4088)
!4092 = !DILocation(line: 1854, column: 16, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 1854, column: 16)
!4094 = !DILocation(line: 1854, column: 16, scope: !3971)
!4095 = !DILocation(line: 1855, column: 54, scope: !4093)
!4096 = !DILocation(line: 1855, column: 52, scope: !4093)
!4097 = !DILocation(line: 1855, column: 9, scope: !4093)
!4098 = !DILocation(line: 1855, column: 2, scope: !4093)
!4099 = !DILocation(line: 1870, column: 7, scope: !3980)
!4100 = !DILocation(line: 1870, column: 23, scope: !3980)
!4101 = !DILocation(line: 1857, column: 12, scope: !3975)
!4102 = !DILocation(line: 1857, column: 25, scope: !3975)
!4103 = !DILocation(line: 1857, column: 12, scope: !3967)
!4104 = !DILocation(line: 0, scope: !3974)
!4105 = !DILocation(line: 1862, column: 16, scope: !3974)
!4106 = !DILocation(line: 1864, column: 11, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 1864, column: 11)
!4108 = !DILocation(line: 1864, column: 11, scope: !3974)
!4109 = !DILocation(line: 1861, column: 16, scope: !3974)
!4110 = !DILocation(line: 1865, column: 54, scope: !4107)
!4111 = !DILocation(line: 1865, column: 52, scope: !4107)
!4112 = !DILocation(line: 1865, column: 9, scope: !4107)
!4113 = !DILocation(line: 1870, column: 20, scope: !3980)
!4114 = !DILocation(line: 1870, column: 7, scope: !3956)
!4115 = !DILocation(line: 1906, column: 7, scope: !3986)
!4116 = !DILocation(line: 1871, column: 13, scope: !3980)
!4117 = !DILocation(line: 1871, column: 5, scope: !3980)
!4118 = !DILocation(line: 1879, column: 24, scope: !3978)
!4119 = !DILocation(line: 1879, column: 13, scope: !3978)
!4120 = !DILocation(line: 0, scope: !3978)
!4121 = !DILocation(line: 1880, column: 24, scope: !3978)
!4122 = !DILocation(line: 1880, column: 13, scope: !3978)
!4123 = !DILocation(line: 1881, column: 10, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 1881, column: 8)
!4125 = !DILocation(line: 1881, column: 8, scope: !3978)
!4126 = !DILocation(line: 1883, column: 20, scope: !3978)
!4127 = !DILocation(line: 1883, column: 9, scope: !3978)
!4128 = !DILocation(line: 1884, column: 20, scope: !3978)
!4129 = !DILocation(line: 1884, column: 9, scope: !3978)
!4130 = !DILocation(line: 1885, column: 8, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 1885, column: 8)
!4132 = !DILocation(line: 1885, column: 8, scope: !3978)
!4133 = !DILocation(line: 1886, column: 20, scope: !4131)
!4134 = !DILocation(line: 1886, column: 34, scope: !4131)
!4135 = !DILocation(line: 1886, column: 25, scope: !4131)
!4136 = !DILocation(line: 1887, column: 13, scope: !4131)
!4137 = !DILocation(line: 1887, column: 27, scope: !4131)
!4138 = !DILocation(line: 1887, column: 18, scope: !4131)
!4139 = !DILocation(line: 1887, column: 38, scope: !4131)
!4140 = !DILocation(line: 1887, column: 42, scope: !4131)
!4141 = !DILocation(line: 1887, column: 45, scope: !4131)
!4142 = !DILocation(line: 1887, column: 50, scope: !4131)
!4143 = !DILocation(line: 1887, column: 53, scope: !4131)
!4144 = !DILocation(line: 1886, column: 6, scope: !4131)
!4145 = !DILocation(line: 1890, column: 9, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 1890, column: 8)
!4147 = !DILocation(line: 1890, column: 8, scope: !3978)
!4148 = !DILocation(line: 1892, column: 13, scope: !3978)
!4149 = !DILocation(line: 1892, column: 10, scope: !3978)
!4150 = !DILocation(line: 1893, column: 10, scope: !3978)
!4151 = !DILocation(line: 1894, column: 6, scope: !3978)
!4152 = !DILocation(line: 1895, column: 11, scope: !3978)
!4153 = !DILocation(line: 1906, column: 20, scope: !3986)
!4154 = !DILocation(line: 1906, column: 27, scope: !3986)
!4155 = !DILocation(line: 1906, column: 30, scope: !3986)
!4156 = !DILocation(line: 1906, column: 7, scope: !3956)
!4157 = !DILocation(line: 1908, column: 11, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 1908, column: 11)
!4159 = !DILocation(line: 1908, column: 24, scope: !4158)
!4160 = !DILocation(line: 1908, column: 31, scope: !4158)
!4161 = !DILocation(line: 1908, column: 34, scope: !4158)
!4162 = !DILocation(line: 1908, column: 43, scope: !4158)
!4163 = !DILocation(line: 1908, column: 42, scope: !4158)
!4164 = !DILocation(line: 1908, column: 40, scope: !4158)
!4165 = !DILocation(line: 1908, column: 11, scope: !3985)
!4166 = !DILocation(line: 1909, column: 2, scope: !4158)
!4167 = !DILocation(line: 1910, column: 52, scope: !3985)
!4168 = !DILocation(line: 1910, column: 41, scope: !3985)
!4169 = !DILocation(line: 1912, column: 7, scope: !3990)
!4170 = !DILocation(line: 1912, column: 20, scope: !3990)
!4171 = !DILocation(line: 1912, column: 27, scope: !3990)
!4172 = !DILocation(line: 1912, column: 30, scope: !3990)
!4173 = !DILocation(line: 1912, column: 7, scope: !3956)
!4174 = !DILocation(line: 1918, column: 31, scope: !3988)
!4175 = !DILocation(line: 1918, column: 43, scope: !3988)
!4176 = !DILocation(line: 1918, column: 42, scope: !3988)
!4177 = !DILocation(line: 1918, column: 40, scope: !3988)
!4178 = !DILocation(line: 1918, column: 11, scope: !3989)
!4179 = !DILocation(line: 1919, column: 2, scope: !3988)
!4180 = !DILocation(line: 1920, column: 62, scope: !3989)
!4181 = !DILocation(line: 1920, column: 51, scope: !3989)
!4182 = !DILocation(line: 1920, column: 14, scope: !3989)
!4183 = !DILocation(line: 1923, column: 7, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1923, column: 7)
!4185 = !DILocation(line: 1923, column: 7, scope: !3956)
!4186 = !DILocation(line: 1925, column: 11, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 1925, column: 11)
!4188 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 1924, column: 5)
!4189 = !DILocation(line: 1925, column: 27, scope: !4187)
!4190 = !DILocation(line: 1925, column: 30, scope: !4187)
!4191 = !DILocation(line: 1925, column: 11, scope: !4188)
!4192 = !DILocation(line: 1927, column: 10, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4187, file: !3, line: 1926, column: 2)
!4194 = !DILocation(line: 1927, column: 23, scope: !4193)
!4195 = !DILocation(line: 1927, column: 21, scope: !4193)
!4196 = !DILocation(line: 1927, column: 6, scope: !4193)
!4197 = !DILocation(line: 1928, column: 18, scope: !4193)
!4198 = !DILocation(line: 1928, column: 32, scope: !4193)
!4199 = !DILocation(line: 1928, column: 23, scope: !4193)
!4200 = !DILocation(line: 1929, column: 11, scope: !4193)
!4201 = !DILocation(line: 1929, column: 25, scope: !4193)
!4202 = !DILocation(line: 1929, column: 16, scope: !4193)
!4203 = !DILocation(line: 1929, column: 36, scope: !4193)
!4204 = !DILocation(line: 1929, column: 40, scope: !4193)
!4205 = !DILocation(line: 1929, column: 43, scope: !4193)
!4206 = !DILocation(line: 1929, column: 48, scope: !4193)
!4207 = !DILocation(line: 1929, column: 51, scope: !4193)
!4208 = !DILocation(line: 1928, column: 4, scope: !4193)
!4209 = !DILocation(line: 1932, column: 24, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 1932, column: 11)
!4211 = !DILocation(line: 0, scope: !4188)
!4212 = !DILocation(line: 1932, column: 11, scope: !4188)
!4213 = !DILocation(line: 0, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 1934, column: 8)
!4215 = distinct !DILexicalBlock(scope: !4210, file: !3, line: 1933, column: 2)
!4216 = !DILocation(line: 1934, column: 8, scope: !4215)
!4217 = !DILocation(line: 1936, column: 30, scope: !4214)
!4218 = !DILocation(line: 1936, column: 19, scope: !4214)
!4219 = !DILocation(line: 1935, column: 13, scope: !4214)
!4220 = !DILocation(line: 1938, column: 13, scope: !4214)
!4221 = !DILocation(line: 1941, column: 11, scope: !4188)
!4222 = !DILocation(line: 1943, column: 19, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 1941, column: 11)
!4224 = !DILocation(line: 1943, column: 8, scope: !4223)
!4225 = !DILocation(line: 1942, column: 9, scope: !4223)
!4226 = !DILocation(line: 1945, column: 11, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 1945, column: 11)
!4228 = !DILocation(line: 1945, column: 11, scope: !4188)
!4229 = !DILocation(line: 1946, column: 16, scope: !4227)
!4230 = !DILocation(line: 1946, column: 30, scope: !4227)
!4231 = !DILocation(line: 1946, column: 21, scope: !4227)
!4232 = !DILocation(line: 1947, column: 7, scope: !4227)
!4233 = !DILocation(line: 1948, column: 7, scope: !4227)
!4234 = !DILocation(line: 1948, column: 14, scope: !4227)
!4235 = !DILocation(line: 1948, column: 28, scope: !4227)
!4236 = !DILocation(line: 1948, column: 19, scope: !4227)
!4237 = !DILocation(line: 1948, column: 39, scope: !4227)
!4238 = !DILocation(line: 1948, column: 43, scope: !4227)
!4239 = !DILocation(line: 1948, column: 46, scope: !4227)
!4240 = !DILocation(line: 1948, column: 51, scope: !4227)
!4241 = !DILocation(line: 1948, column: 54, scope: !4227)
!4242 = !DILocation(line: 1946, column: 2, scope: !4227)
!4243 = !DILocation(line: 1954, column: 1, scope: !3956)
!4244 = distinct !DISubprogram(name: "mems_in_disjoint_alias_sets_p", scope: !3, file: !3, line: 369, type: !3361, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4245)
!4245 = !{!4246, !4247}
!4246 = !DILocalVariable(name: "mem1", arg: 1, scope: !4244, file: !3, line: 369, type: !1982)
!4247 = !DILocalVariable(name: "mem2", arg: 2, scope: !4244, file: !3, line: 369, type: !1982)
!4248 = !DILocation(line: 0, scope: !4244)
!4249 = !DILocation(line: 378, column: 3, scope: !4244)
!4250 = !DILocation(line: 381, column: 35, scope: !4244)
!4251 = !DILocation(line: 381, column: 57, scope: !4244)
!4252 = !DILocation(line: 381, column: 12, scope: !4244)
!4253 = !DILocation(line: 381, column: 10, scope: !4244)
!4254 = !DILocation(line: 381, column: 3, scope: !4244)
!4255 = distinct !DISubprogram(name: "aliases_everything_p", scope: !3, file: !3, line: 2021, type: !4256, scopeLine: 2022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4258)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{!557, !1982}
!4258 = !{!4259}
!4259 = !DILocalVariable(name: "mem", arg: 1, scope: !4255, file: !3, line: 2021, type: !1982)
!4260 = !DILocation(line: 0, scope: !4255)
!4261 = !DILocation(line: 2023, column: 7, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 2023, column: 7)
!4263 = !DILocation(line: 2023, column: 32, scope: !4262)
!4264 = !DILocation(line: 2029, column: 1, scope: !4255)
!4265 = distinct !DISubprogram(name: "fixed_scalar_and_varying_struct_p", scope: !3, file: !3, line: 1993, type: !4266, scopeLine: 1996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4268)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{!1982, !1982, !1982, !573, !573, !3746}
!4268 = !{!4269, !4270, !4271, !4272, !4273}
!4269 = !DILocalVariable(name: "mem1", arg: 1, scope: !4265, file: !3, line: 1993, type: !1982)
!4270 = !DILocalVariable(name: "mem2", arg: 2, scope: !4265, file: !3, line: 1993, type: !1982)
!4271 = !DILocalVariable(name: "mem1_addr", arg: 3, scope: !4265, file: !3, line: 1993, type: !573)
!4272 = !DILocalVariable(name: "mem2_addr", arg: 4, scope: !4265, file: !3, line: 1994, type: !573)
!4273 = !DILocalVariable(name: "varies_p", arg: 5, scope: !4265, file: !3, line: 1995, type: !3746)
!4274 = !DILocation(line: 0, scope: !4265)
!4275 = !DILocation(line: 1997, column: 9, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 1997, column: 7)
!4277 = !DILocation(line: 1997, column: 7, scope: !4265)
!4278 = !DILocation(line: 2000, column: 7, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 2000, column: 7)
!4280 = !DILocation(line: 2001, column: 7, scope: !4279)
!4281 = !DILocation(line: 2001, column: 10, scope: !4279)
!4282 = !DILocation(line: 2001, column: 30, scope: !4279)
!4283 = !DILocation(line: 2001, column: 33, scope: !4279)
!4284 = !DILocation(line: 2002, column: 7, scope: !4279)
!4285 = !DILocation(line: 2002, column: 11, scope: !4279)
!4286 = !DILocation(line: 2002, column: 35, scope: !4279)
!4287 = !DILocation(line: 2002, column: 38, scope: !4279)
!4288 = !DILocation(line: 2000, column: 7, scope: !4265)
!4289 = !DILocation(line: 2007, column: 7, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 2007, column: 7)
!4291 = !DILocation(line: 2008, column: 7, scope: !4290)
!4292 = !DILocation(line: 2008, column: 10, scope: !4290)
!4293 = !DILocation(line: 2008, column: 33, scope: !4290)
!4294 = !DILocation(line: 2008, column: 36, scope: !4290)
!4295 = !DILocation(line: 2009, column: 7, scope: !4290)
!4296 = !DILocation(line: 2009, column: 10, scope: !4290)
!4297 = !DILocation(line: 2009, column: 34, scope: !4290)
!4298 = !DILocation(line: 2009, column: 38, scope: !4290)
!4299 = !DILocation(line: 2007, column: 7, scope: !4265)
!4300 = !DILocation(line: 2014, column: 3, scope: !4265)
!4301 = !DILocation(line: 2015, column: 1, scope: !4265)
!4302 = distinct !DISubprogram(name: "rtx_refs_may_alias_p", scope: !3, file: !3, line: 345, type: !4303, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4305)
!4303 = !DISubroutineType(types: !4304)
!4304 = !{!556, !1982, !1982, !556}
!4305 = !{!4306, !4307, !4308, !4309, !4320}
!4306 = !DILocalVariable(name: "x", arg: 1, scope: !4302, file: !3, line: 345, type: !1982)
!4307 = !DILocalVariable(name: "mem", arg: 2, scope: !4302, file: !3, line: 345, type: !1982)
!4308 = !DILocalVariable(name: "tbaa_p", arg: 3, scope: !4302, file: !3, line: 345, type: !556)
!4309 = !DILocalVariable(name: "ref1", scope: !4302, file: !3, line: 347, type: !4310)
!4310 = !DIDerivedType(tag: DW_TAG_typedef, name: "ao_ref", file: !1369, line: 86, baseType: !4311)
!4311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ao_ref_s", file: !1369, line: 63, size: 384, elements: !4312)
!4312 = !{!4313, !4314, !4315, !4316, !4317, !4318, !4319}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4311, file: !1369, line: 67, baseType: !709, size: 64)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4311, file: !1369, line: 73, baseType: !709, size: 64, offset: 64)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4311, file: !1369, line: 75, baseType: !680, size: 64, offset: 128)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4311, file: !1369, line: 77, baseType: !680, size: 64, offset: 192)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !4311, file: !1369, line: 79, baseType: !680, size: 64, offset: 256)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "ref_alias_set", scope: !4311, file: !1369, line: 82, baseType: !1508, size: 32, offset: 320)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "base_alias_set", scope: !4311, file: !1369, line: 85, baseType: !1508, size: 32, offset: 352)
!4320 = !DILocalVariable(name: "ref2", scope: !4302, file: !3, line: 347, type: !4310)
!4321 = !DILocation(line: 0, scope: !4302)
!4322 = !DILocation(line: 347, column: 3, scope: !4302)
!4323 = !DILocation(line: 349, column: 8, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 349, column: 7)
!4325 = !DILocation(line: 350, column: 7, scope: !4324)
!4326 = !DILocation(line: 350, column: 11, scope: !4324)
!4327 = !DILocation(line: 349, column: 7, scope: !4302)
!4328 = !DILocation(line: 353, column: 10, scope: !4302)
!4329 = !DILocation(line: 353, column: 3, scope: !4302)
!4330 = !DILocation(line: 354, column: 1, scope: !4302)
!4331 = distinct !DISubprogram(name: "canon_true_dependence", scope: !3, file: !3, line: 2395, type: !4332, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4334)
!4332 = !DISubroutineType(types: !4333)
!4333 = !{!557, !1982, !5, !573, !1982, !573, !3746}
!4334 = !{!4335, !4336, !4337, !4338, !4339, !4340, !4341}
!4335 = !DILocalVariable(name: "mem", arg: 1, scope: !4331, file: !3, line: 2395, type: !1982)
!4336 = !DILocalVariable(name: "mem_mode", arg: 2, scope: !4331, file: !3, line: 2395, type: !5)
!4337 = !DILocalVariable(name: "mem_addr", arg: 3, scope: !4331, file: !3, line: 2395, type: !573)
!4338 = !DILocalVariable(name: "x", arg: 4, scope: !4331, file: !3, line: 2396, type: !1982)
!4339 = !DILocalVariable(name: "x_addr", arg: 5, scope: !4331, file: !3, line: 2396, type: !573)
!4340 = !DILocalVariable(name: "varies", arg: 6, scope: !4331, file: !3, line: 2396, type: !3746)
!4341 = !DILocalVariable(name: "ret", scope: !4331, file: !3, line: 2398, type: !557)
!4342 = !DILocation(line: 0, scope: !4331)
!4343 = !DILocation(line: 2400, column: 7, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2400, column: 7)
!4345 = !DILocation(line: 2400, column: 26, scope: !4344)
!4346 = !DILocation(line: 2400, column: 29, scope: !4344)
!4347 = !DILocation(line: 2400, column: 7, scope: !4331)
!4348 = !DILocation(line: 2405, column: 7, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2405, column: 7)
!4350 = !DILocation(line: 2405, column: 20, scope: !4349)
!4351 = !DILocation(line: 2405, column: 31, scope: !4349)
!4352 = !DILocation(line: 2405, column: 34, scope: !4349)
!4353 = !DILocation(line: 2405, column: 57, scope: !4349)
!4354 = !DILocation(line: 2405, column: 7, scope: !4331)
!4355 = !DILocation(line: 2407, column: 7, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2407, column: 7)
!4357 = !DILocation(line: 2407, column: 22, scope: !4356)
!4358 = !DILocation(line: 2407, column: 33, scope: !4356)
!4359 = !DILocation(line: 2407, column: 36, scope: !4356)
!4360 = !DILocation(line: 2407, column: 61, scope: !4356)
!4361 = !DILocation(line: 2407, column: 7, scope: !4331)
!4362 = !DILocation(line: 2409, column: 7, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2409, column: 7)
!4364 = !DILocation(line: 2410, column: 7, scope: !4363)
!4365 = !DILocation(line: 2410, column: 10, scope: !4363)
!4366 = !DILocation(line: 2409, column: 7, scope: !4331)
!4367 = !DILocation(line: 2416, column: 7, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2416, column: 7)
!4369 = !DILocation(line: 2416, column: 7, scope: !4331)
!4370 = !DILocation(line: 2422, column: 7, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2422, column: 7)
!4372 = !DILocation(line: 2422, column: 31, scope: !4371)
!4373 = !DILocation(line: 2422, column: 28, scope: !4371)
!4374 = !DILocation(line: 2422, column: 7, scope: !4331)
!4375 = !DILocation(line: 2425, column: 9, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2425, column: 7)
!4377 = !DILocation(line: 2425, column: 7, scope: !4331)
!4378 = !DILocation(line: 2426, column: 24, scope: !4376)
!4379 = !DILocation(line: 2426, column: 14, scope: !4376)
!4380 = !DILocation(line: 2428, column: 45, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2428, column: 7)
!4382 = !DILocation(line: 2426, column: 5, scope: !4376)
!4383 = !DILocation(line: 2428, column: 9, scope: !4381)
!4384 = !DILocation(line: 2428, column: 7, scope: !4331)
!4385 = !DILocation(line: 2431, column: 12, scope: !4331)
!4386 = !DILocation(line: 2432, column: 34, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2432, column: 7)
!4388 = !DILocation(line: 2433, column: 6, scope: !4387)
!4389 = !DILocation(line: 2432, column: 14, scope: !4387)
!4390 = !DILocation(line: 2433, column: 37, scope: !4387)
!4391 = !DILocation(line: 2432, column: 7, scope: !4331)
!4392 = !DILocation(line: 2436, column: 7, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2436, column: 7)
!4394 = !DILocation(line: 2436, column: 7, scope: !4331)
!4395 = !DILocation(line: 2439, column: 7, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2439, column: 7)
!4397 = !DILocation(line: 2439, column: 7, scope: !4331)
!4398 = !DILocation(line: 2442, column: 7, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2442, column: 7)
!4400 = !DILocation(line: 2447, column: 16, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2447, column: 7)
!4402 = !DILocation(line: 2442, column: 7, scope: !4331)
!4403 = !DILocation(line: 2447, column: 29, scope: !4401)
!4404 = !DILocation(line: 2447, column: 49, scope: !4401)
!4405 = !DILocation(line: 2452, column: 16, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2452, column: 7)
!4407 = !DILocation(line: 2447, column: 7, scope: !4331)
!4408 = !DILocation(line: 2452, column: 30, scope: !4406)
!4409 = !DILocation(line: 2452, column: 43, scope: !4406)
!4410 = !DILocation(line: 2452, column: 7, scope: !4331)
!4411 = !DILocation(line: 2455, column: 7, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2455, column: 7)
!4413 = !DILocation(line: 2455, column: 7, scope: !4331)
!4414 = !DILocation(line: 2458, column: 10, scope: !4331)
!4415 = !DILocation(line: 2458, column: 3, scope: !4331)
!4416 = !DILocation(line: 2459, column: 1, scope: !4331)
!4417 = distinct !DISubprogram(name: "anti_dependence", scope: !3, file: !3, line: 2535, type: !3361, scopeLine: 2536, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4418)
!4418 = !{!4419, !4420}
!4419 = !DILocalVariable(name: "mem", arg: 1, scope: !4417, file: !3, line: 2535, type: !1982)
!4420 = !DILocalVariable(name: "x", arg: 2, scope: !4417, file: !3, line: 2535, type: !1982)
!4421 = !DILocation(line: 0, scope: !4417)
!4422 = !DILocation(line: 2537, column: 10, scope: !4417)
!4423 = !DILocation(line: 2537, column: 3, scope: !4417)
!4424 = distinct !DISubprogram(name: "write_dependence_p", scope: !3, file: !3, line: 2465, type: !4425, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4427)
!4425 = !DISubroutineType(types: !4426)
!4426 = !{!557, !1982, !1982, !557}
!4427 = !{!4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435}
!4428 = !DILocalVariable(name: "mem", arg: 1, scope: !4424, file: !3, line: 2465, type: !1982)
!4429 = !DILocalVariable(name: "x", arg: 2, scope: !4424, file: !3, line: 2465, type: !1982)
!4430 = !DILocalVariable(name: "writep", arg: 3, scope: !4424, file: !3, line: 2465, type: !557)
!4431 = !DILocalVariable(name: "x_addr", scope: !4424, file: !3, line: 2467, type: !573)
!4432 = !DILocalVariable(name: "mem_addr", scope: !4424, file: !3, line: 2467, type: !573)
!4433 = !DILocalVariable(name: "fixed_scalar", scope: !4424, file: !3, line: 2468, type: !1982)
!4434 = !DILocalVariable(name: "base", scope: !4424, file: !3, line: 2469, type: !573)
!4435 = !DILocalVariable(name: "ret", scope: !4424, file: !3, line: 2470, type: !557)
!4436 = !DILocation(line: 0, scope: !4424)
!4437 = !DILocation(line: 2472, column: 7, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2472, column: 7)
!4439 = !DILocation(line: 2472, column: 26, scope: !4438)
!4440 = !DILocation(line: 2472, column: 29, scope: !4438)
!4441 = !DILocation(line: 2472, column: 7, scope: !4424)
!4442 = !DILocation(line: 2477, column: 7, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2477, column: 7)
!4444 = !DILocation(line: 2477, column: 20, scope: !4443)
!4445 = !DILocation(line: 2477, column: 31, scope: !4443)
!4446 = !DILocation(line: 2477, column: 34, scope: !4443)
!4447 = !DILocation(line: 2477, column: 57, scope: !4443)
!4448 = !DILocation(line: 2477, column: 7, scope: !4424)
!4449 = !DILocation(line: 2479, column: 7, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2479, column: 7)
!4451 = !DILocation(line: 2479, column: 22, scope: !4450)
!4452 = !DILocation(line: 2479, column: 33, scope: !4450)
!4453 = !DILocation(line: 2479, column: 36, scope: !4450)
!4454 = !DILocation(line: 2479, column: 61, scope: !4450)
!4455 = !DILocation(line: 2479, column: 7, scope: !4424)
!4456 = !DILocation(line: 2481, column: 7, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2481, column: 7)
!4458 = !DILocation(line: 2482, column: 7, scope: !4457)
!4459 = !DILocation(line: 2482, column: 10, scope: !4457)
!4460 = !DILocation(line: 2481, column: 7, scope: !4424)
!4461 = !DILocation(line: 2486, column: 8, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2486, column: 7)
!4463 = !DILocation(line: 2486, column: 15, scope: !4462)
!4464 = !DILocation(line: 2486, column: 18, scope: !4462)
!4465 = !DILocation(line: 2486, column: 7, scope: !4424)
!4466 = !DILocation(line: 2492, column: 7, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2492, column: 7)
!4468 = !DILocation(line: 2492, column: 31, scope: !4467)
!4469 = !DILocation(line: 2492, column: 28, scope: !4467)
!4470 = !DILocation(line: 2492, column: 7, scope: !4424)
!4471 = !DILocation(line: 2495, column: 22, scope: !4424)
!4472 = !DILocation(line: 2495, column: 12, scope: !4424)
!4473 = !DILocation(line: 2496, column: 24, scope: !4424)
!4474 = !DILocation(line: 2496, column: 14, scope: !4424)
!4475 = !DILocation(line: 2498, column: 7, scope: !4424)
!4476 = !DILocation(line: 2500, column: 14, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 2499, column: 5)
!4478 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2498, column: 7)
!4479 = !DILocation(line: 2501, column: 11, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 2501, column: 11)
!4481 = !DILocation(line: 2501, column: 16, scope: !4480)
!4482 = !DILocation(line: 2501, column: 20, scope: !4480)
!4483 = !DILocation(line: 2501, column: 36, scope: !4480)
!4484 = !DILocation(line: 2502, column: 6, scope: !4480)
!4485 = !DILocation(line: 2502, column: 26, scope: !4480)
!4486 = !DILocation(line: 2503, column: 10, scope: !4480)
!4487 = !DILocation(line: 2503, column: 13, scope: !4480)
!4488 = !DILocation(line: 2501, column: 11, scope: !4477)
!4489 = !DILocation(line: 2507, column: 45, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2507, column: 7)
!4491 = !DILocation(line: 2508, column: 6, scope: !4490)
!4492 = !DILocation(line: 2507, column: 9, scope: !4490)
!4493 = !DILocation(line: 2507, column: 7, scope: !4424)
!4494 = !DILocation(line: 2511, column: 12, scope: !4424)
!4495 = !DILocation(line: 2512, column: 14, scope: !4424)
!4496 = !DILocation(line: 2514, column: 34, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2514, column: 7)
!4498 = !DILocation(line: 2515, column: 6, scope: !4497)
!4499 = !DILocation(line: 2514, column: 14, scope: !4497)
!4500 = !DILocation(line: 2515, column: 37, scope: !4497)
!4501 = !DILocation(line: 2514, column: 7, scope: !4424)
!4502 = !DILocation(line: 2518, column: 7, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2518, column: 7)
!4504 = !DILocation(line: 2518, column: 7, scope: !4424)
!4505 = !DILocation(line: 2522, column: 7, scope: !4424)
!4506 = !DILocation(line: 2525, column: 21, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 2525, column: 7)
!4508 = !DILocation(line: 2525, column: 28, scope: !4507)
!4509 = !DILocation(line: 2525, column: 32, scope: !4507)
!4510 = !DILocation(line: 2526, column: 7, scope: !4507)
!4511 = !DILocation(line: 2526, column: 24, scope: !4507)
!4512 = !DILocation(line: 2526, column: 29, scope: !4507)
!4513 = !DILocation(line: 2526, column: 33, scope: !4507)
!4514 = !DILocation(line: 2525, column: 7, scope: !4424)
!4515 = !DILocation(line: 2529, column: 10, scope: !4424)
!4516 = !DILocation(line: 2529, column: 3, scope: !4424)
!4517 = !DILocation(line: 2530, column: 1, scope: !4424)
!4518 = distinct !DISubprogram(name: "output_dependence", scope: !3, file: !3, line: 2543, type: !3361, scopeLine: 2544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4519)
!4519 = !{!4520, !4521}
!4520 = !DILocalVariable(name: "mem", arg: 1, scope: !4518, file: !3, line: 2543, type: !1982)
!4521 = !DILocalVariable(name: "x", arg: 2, scope: !4518, file: !3, line: 2543, type: !1982)
!4522 = !DILocation(line: 0, scope: !4518)
!4523 = !DILocation(line: 2545, column: 10, scope: !4518)
!4524 = !DILocation(line: 2545, column: 3, scope: !4518)
!4525 = distinct !DISubprogram(name: "init_alias_target", scope: !3, file: !3, line: 2550, type: !4526, scopeLine: 2551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4528)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{null}
!4528 = !{!4529}
!4529 = !DILocalVariable(name: "i", scope: !4525, file: !3, line: 2552, type: !557)
!4530 = !DILocation(line: 2554, column: 3, scope: !4525)
!4531 = !DILocation(line: 0, scope: !4525)
!4532 = !DILocation(line: 2556, column: 8, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 2556, column: 3)
!4534 = !DILocation(line: 0, scope: !4533)
!4535 = !DILocation(line: 2556, column: 17, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 2556, column: 3)
!4537 = !DILocation(line: 2556, column: 3, scope: !4533)
!4538 = !DILocation(line: 2560, column: 9, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 2560, column: 9)
!4540 = !DILocation(line: 2561, column: 2, scope: !4539)
!4541 = !DILocation(line: 2561, column: 5, scope: !4539)
!4542 = !DILocation(line: 2560, column: 9, scope: !4536)
!4543 = !DILocation(line: 2563, column: 4, scope: !4539)
!4544 = !DILocation(line: 2562, column: 7, scope: !4539)
!4545 = !DILocation(line: 2563, column: 2, scope: !4539)
!4546 = !DILocation(line: 2556, column: 43, scope: !4536)
!4547 = !DILocation(line: 2556, column: 3, scope: !4536)
!4548 = distinct !{!4548, !4537, !4549}
!4549 = !DILocation(line: 2563, column: 4, scope: !4533)
!4550 = !DILocation(line: 2566, column: 7, scope: !4525)
!4551 = !DILocation(line: 2566, column: 5, scope: !4525)
!4552 = !DILocation(line: 2568, column: 7, scope: !4525)
!4553 = !DILocation(line: 2568, column: 5, scope: !4525)
!4554 = !DILocation(line: 2570, column: 7, scope: !4525)
!4555 = !DILocation(line: 2570, column: 5, scope: !4525)
!4556 = !DILocation(line: 2573, column: 7, scope: !4525)
!4557 = !DILocation(line: 2573, column: 5, scope: !4525)
!4558 = !DILocation(line: 2575, column: 1, scope: !4525)
!4559 = distinct !DISubprogram(name: "memory_modified_in_insn_p", scope: !3, file: !3, line: 2594, type: !4560, scopeLine: 2595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4562)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!556, !1982, !1982}
!4562 = !{!4563, !4564}
!4563 = !DILocalVariable(name: "mem", arg: 1, scope: !4559, file: !3, line: 2594, type: !1982)
!4564 = !DILocalVariable(name: "insn", arg: 2, scope: !4559, file: !3, line: 2594, type: !1982)
!4565 = !DILocation(line: 0, scope: !4559)
!4566 = !DILocation(line: 2596, column: 8, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 2596, column: 7)
!4568 = !DILocation(line: 2596, column: 7, scope: !4559)
!4569 = !DILocation(line: 2598, column: 19, scope: !4559)
!4570 = !DILocation(line: 2599, column: 16, scope: !4559)
!4571 = !DILocation(line: 2599, column: 51, scope: !4559)
!4572 = !DILocation(line: 2599, column: 3, scope: !4559)
!4573 = !DILocation(line: 2600, column: 10, scope: !4559)
!4574 = !DILocation(line: 2600, column: 3, scope: !4559)
!4575 = !DILocation(line: 2601, column: 1, scope: !4559)
!4576 = distinct !DISubprogram(name: "memory_modified_1", scope: !3, file: !3, line: 2581, type: !4577, scopeLine: 2582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4579)
!4577 = !DISubroutineType(types: !4578)
!4578 = !{null, !573, !1982, !561}
!4579 = !{!4580, !4581, !4582}
!4580 = !DILocalVariable(name: "x", arg: 1, scope: !4576, file: !3, line: 2581, type: !573)
!4581 = !DILocalVariable(name: "pat", arg: 2, scope: !4576, file: !3, line: 2581, type: !1982)
!4582 = !DILocalVariable(name: "data", arg: 3, scope: !4576, file: !3, line: 2581, type: !561)
!4583 = !DILocation(line: 0, scope: !4576)
!4584 = !DILocation(line: 2583, column: 7, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 2583, column: 7)
!4586 = !DILocation(line: 2583, column: 7, scope: !4576)
!4587 = !DILocation(line: 2585, column: 31, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 2585, column: 11)
!4589 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 2584, column: 5)
!4590 = !DILocation(line: 2585, column: 11, scope: !4588)
!4591 = !DILocation(line: 2585, column: 48, scope: !4588)
!4592 = !DILocation(line: 2585, column: 51, scope: !4588)
!4593 = !DILocation(line: 2585, column: 11, scope: !4589)
!4594 = !DILocation(line: 2586, column: 18, scope: !4588)
!4595 = !DILocation(line: 2586, column: 2, scope: !4588)
!4596 = !DILocation(line: 2588, column: 1, scope: !4576)
!4597 = distinct !DISubprogram(name: "init_alias_analysis", scope: !3, file: !3, line: 2607, type: !4526, scopeLine: 2608, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4598)
!4598 = !{!4599, !4600, !4601, !4602, !4603, !4604, !4605, !4612, !4613, !4616, !4617}
!4599 = !DILocalVariable(name: "maxreg", scope: !4597, file: !3, line: 2609, type: !7)
!4600 = !DILocalVariable(name: "changed", scope: !4597, file: !3, line: 2610, type: !557)
!4601 = !DILocalVariable(name: "pass", scope: !4597, file: !3, line: 2610, type: !557)
!4602 = !DILocalVariable(name: "i", scope: !4597, file: !3, line: 2611, type: !557)
!4603 = !DILocalVariable(name: "ui", scope: !4597, file: !3, line: 2612, type: !7)
!4604 = !DILocalVariable(name: "insn", scope: !4597, file: !3, line: 2613, type: !573)
!4605 = !DILocalVariable(name: "note", scope: !4606, file: !3, line: 2688, type: !573)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 2687, column: 6)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2686, column: 8)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 2685, column: 2)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 2684, column: 7)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 2684, column: 7)
!4611 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 2654, column: 5)
!4612 = !DILocalVariable(name: "set", scope: !4606, file: !3, line: 2688, type: !573)
!4613 = !DILocalVariable(name: "regno", scope: !4614, file: !3, line: 2717, type: !7)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 2716, column: 3)
!4615 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 2713, column: 12)
!4616 = !DILocalVariable(name: "src", scope: !4614, file: !3, line: 2718, type: !573)
!4617 = !DILocalVariable(name: "t", scope: !4614, file: !3, line: 2719, type: !573)
!4618 = !DILocation(line: 2609, column: 25, scope: !4597)
!4619 = !DILocation(line: 0, scope: !4597)
!4620 = !DILocation(line: 2615, column: 3, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 2615, column: 3)
!4622 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 2615, column: 3)
!4623 = !DILocation(line: 2615, column: 3, scope: !4622)
!4624 = !DILocation(line: 2617, column: 33, scope: !4597)
!4625 = !DILocation(line: 2617, column: 24, scope: !4597)
!4626 = !DILocation(line: 2618, column: 21, scope: !4597)
!4627 = !DILocation(line: 2618, column: 19, scope: !4597)
!4628 = !DILocation(line: 2619, column: 23, scope: !4597)
!4629 = !DILocation(line: 2619, column: 21, scope: !4597)
!4630 = !DILocation(line: 2622, column: 7, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 2622, column: 7)
!4632 = !DILocation(line: 2622, column: 7, scope: !4597)
!4633 = !DILocation(line: 2625, column: 7, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 2625, column: 7)
!4635 = !DILocation(line: 2623, column: 20, scope: !4631)
!4636 = !DILocation(line: 2623, column: 5, scope: !4631)
!4637 = !DILocation(line: 2625, column: 7, scope: !4597)
!4638 = !DILocation(line: 2626, column: 5, scope: !4634)
!4639 = !DILocation(line: 2628, column: 3, scope: !4597)
!4640 = !DILocation(line: 2630, column: 24, scope: !4597)
!4641 = !DILocation(line: 2630, column: 22, scope: !4597)
!4642 = !DILocation(line: 2631, column: 14, scope: !4597)
!4643 = !DILocation(line: 2631, column: 12, scope: !4597)
!4644 = !DILocation(line: 2653, column: 3, scope: !4597)
!4645 = !DILocation(line: 2660, column: 17, scope: !4611)
!4646 = !DILocation(line: 2664, column: 25, scope: !4611)
!4647 = !DILocation(line: 2667, column: 15, scope: !4611)
!4648 = !DILocation(line: 2667, column: 7, scope: !4611)
!4649 = !DILocation(line: 2670, column: 15, scope: !4611)
!4650 = !DILocation(line: 2670, column: 7, scope: !4611)
!4651 = !DILocation(line: 2680, column: 15, scope: !4611)
!4652 = !DILocation(line: 2680, column: 7, scope: !4611)
!4653 = !DILocation(line: 2684, column: 19, scope: !4610)
!4654 = !DILocation(line: 2684, column: 12, scope: !4610)
!4655 = !DILocation(line: 0, scope: !4610)
!4656 = !DILocation(line: 2684, column: 7, scope: !4610)
!4657 = !DILocation(line: 2686, column: 8, scope: !4607)
!4658 = !DILocation(line: 2686, column: 8, scope: !4608)
!4659 = !DILocation(line: 2695, column: 12, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 2695, column: 12)
!4661 = !DILocation(line: 2696, column: 5, scope: !4660)
!4662 = !DILocation(line: 2696, column: 8, scope: !4660)
!4663 = !DILocation(line: 2695, column: 12, scope: !4606)
!4664 = !DILocation(line: 2704, column: 12, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 2704, column: 12)
!4666 = !DILocation(line: 2704, column: 38, scope: !4665)
!4667 = !DILocation(line: 2705, column: 5, scope: !4665)
!4668 = !DILocation(line: 2705, column: 8, scope: !4665)
!4669 = !DILocation(line: 2705, column: 25, scope: !4665)
!4670 = !DILocation(line: 2706, column: 5, scope: !4665)
!4671 = !DILocation(line: 2706, column: 8, scope: !4665)
!4672 = !DILocation(line: 2704, column: 12, scope: !4606)
!4673 = !DILocation(line: 0, scope: !4665)
!4674 = !DILocation(line: 2709, column: 16, scope: !4665)
!4675 = !DILocation(line: 2707, column: 15, scope: !4665)
!4676 = !DILocation(line: 2707, column: 3, scope: !4665)
!4677 = !DILocation(line: 2709, column: 3, scope: !4665)
!4678 = !DILocation(line: 2711, column: 14, scope: !4606)
!4679 = !DILocation(line: 0, scope: !4606)
!4680 = !DILocation(line: 2713, column: 16, scope: !4615)
!4681 = !DILocation(line: 2714, column: 5, scope: !4615)
!4682 = !DILocation(line: 2714, column: 8, scope: !4615)
!4683 = !DILocation(line: 2715, column: 5, scope: !4615)
!4684 = !DILocation(line: 2715, column: 8, scope: !4615)
!4685 = !DILocation(line: 2715, column: 31, scope: !4615)
!4686 = !DILocation(line: 2713, column: 12, scope: !4606)
!4687 = !DILocation(line: 2717, column: 26, scope: !4614)
!4688 = !DILocation(line: 0, scope: !4614)
!4689 = !DILocation(line: 2718, column: 15, scope: !4614)
!4690 = !DILocation(line: 2721, column: 12, scope: !4614)
!4691 = !DILocation(line: 2722, column: 9, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 2722, column: 9)
!4693 = !DILocation(line: 2722, column: 14, scope: !4692)
!4694 = !DILocation(line: 2722, column: 17, scope: !4692)
!4695 = !DILocation(line: 2722, column: 38, scope: !4692)
!4696 = !DILocation(line: 2723, column: 9, scope: !4692)
!4697 = !DILocation(line: 2723, column: 12, scope: !4692)
!4698 = !DILocation(line: 2723, column: 37, scope: !4692)
!4699 = !DILocation(line: 2722, column: 9, scope: !4614)
!4700 = !DILocation(line: 2726, column: 14, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 2726, column: 9)
!4702 = !DILocation(line: 2727, column: 9, scope: !4701)
!4703 = !DILocation(line: 2727, column: 12, scope: !4701)
!4704 = !DILocation(line: 2727, column: 38, scope: !4701)
!4705 = !DILocation(line: 2728, column: 9, scope: !4701)
!4706 = !DILocation(line: 2728, column: 28, scope: !4701)
!4707 = !DILocation(line: 2728, column: 14, scope: !4701)
!4708 = !DILocation(line: 2729, column: 9, scope: !4701)
!4709 = !DILocation(line: 2729, column: 39, scope: !4701)
!4710 = !DILocation(line: 2730, column: 11, scope: !4701)
!4711 = !DILocation(line: 2729, column: 14, scope: !4701)
!4712 = !DILocation(line: 2726, column: 9, scope: !4614)
!4713 = !DILocation(line: 2732, column: 37, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4701, file: !3, line: 2731, column: 7)
!4715 = !DILocation(line: 2732, column: 9, scope: !4714)
!4716 = !DILocation(line: 2734, column: 4, scope: !4714)
!4717 = !DILocation(line: 2734, column: 25, scope: !4714)
!4718 = !DILocation(line: 2733, column: 9, scope: !4714)
!4719 = !DILocation(line: 2735, column: 7, scope: !4714)
!4720 = !DILocation(line: 2736, column: 14, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4701, file: !3, line: 2736, column: 14)
!4722 = !DILocation(line: 2736, column: 39, scope: !4721)
!4723 = !DILocation(line: 2737, column: 7, scope: !4721)
!4724 = !DILocation(line: 2737, column: 10, scope: !4721)
!4725 = !DILocation(line: 2737, column: 25, scope: !4721)
!4726 = !DILocation(line: 2738, column: 7, scope: !4721)
!4727 = !DILocation(line: 2738, column: 10, scope: !4721)
!4728 = !DILocation(line: 2739, column: 7, scope: !4721)
!4729 = !DILocation(line: 2739, column: 36, scope: !4721)
!4730 = !DILocation(line: 2739, column: 15, scope: !4721)
!4731 = !DILocation(line: 2739, column: 13, scope: !4721)
!4732 = !DILocation(line: 2740, column: 7, scope: !4721)
!4733 = !DILocation(line: 2740, column: 10, scope: !4721)
!4734 = !DILocation(line: 2736, column: 14, scope: !4701)
!4735 = !DILocation(line: 2742, column: 31, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 2741, column: 7)
!4737 = !DILocation(line: 2742, column: 13, scope: !4736)
!4738 = !DILocation(line: 2743, column: 9, scope: !4736)
!4739 = !DILocation(line: 2744, column: 9, scope: !4736)
!4740 = !DILocation(line: 2745, column: 7, scope: !4736)
!4741 = !DILocation(line: 2746, column: 14, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 2746, column: 14)
!4743 = !DILocation(line: 2746, column: 39, scope: !4742)
!4744 = !DILocation(line: 2747, column: 7, scope: !4742)
!4745 = !DILocation(line: 2747, column: 12, scope: !4742)
!4746 = !DILocation(line: 2746, column: 14, scope: !4721)
!4747 = !DILocation(line: 2749, column: 9, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 2748, column: 7)
!4749 = !DILocation(line: 2750, column: 9, scope: !4748)
!4750 = !DILocation(line: 2751, column: 7, scope: !4748)
!4751 = !DILocation(line: 2754, column: 13, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 2754, column: 13)
!4753 = !DILocation(line: 2755, column: 6, scope: !4752)
!4754 = !DILocation(line: 2755, column: 9, scope: !4752)
!4755 = !DILocation(line: 2755, column: 26, scope: !4752)
!4756 = !DILocation(line: 2754, column: 13, scope: !4607)
!4757 = !DILocation(line: 2756, column: 24, scope: !4752)
!4758 = !DILocation(line: 2756, column: 6, scope: !4752)
!4759 = !DILocation(line: 2684, column: 46, scope: !4609)
!4760 = !DILocation(line: 2684, column: 7, scope: !4609)
!4761 = distinct !{!4761, !4656, !4762}
!4762 = !DILocation(line: 2757, column: 2, scope: !4610)
!4763 = !DILocation(line: 2760, column: 7, scope: !4611)
!4764 = !DILocation(line: 2762, column: 23, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 2762, column: 7)
!4766 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 2762, column: 7)
!4767 = !DILocation(line: 2762, column: 12, scope: !4766)
!4768 = !DILocation(line: 0, scope: !4766)
!4769 = !DILocation(line: 2656, column: 15, scope: !4611)
!4770 = !DILocation(line: 2762, column: 7, scope: !4766)
!4771 = !DILocation(line: 2764, column: 8, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !3, line: 2764, column: 8)
!4773 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 2763, column: 2)
!4774 = !DILocation(line: 2765, column: 8, scope: !4772)
!4775 = !DILocation(line: 2765, column: 37, scope: !4772)
!4776 = !DILocation(line: 2765, column: 34, scope: !4772)
!4777 = !DILocation(line: 2766, column: 8, scope: !4772)
!4778 = !DILocation(line: 2766, column: 26, scope: !4772)
!4779 = !DILocation(line: 2767, column: 5, scope: !4772)
!4780 = !DILocation(line: 2766, column: 13, scope: !4772)
!4781 = !DILocation(line: 2764, column: 8, scope: !4773)
!4782 = !DILocation(line: 2769, column: 8, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 2768, column: 6)
!4784 = !DILocation(line: 2771, column: 6, scope: !4783)
!4785 = !DILocation(line: 0, scope: !4611)
!4786 = !DILocation(line: 2762, column: 35, scope: !4765)
!4787 = !DILocation(line: 2762, column: 7, scope: !4765)
!4788 = distinct !{!4788, !4770, !4789}
!4789 = !DILocation(line: 2772, column: 2, scope: !4766)
!4790 = !DILocation(line: 2774, column: 10, scope: !4597)
!4791 = !DILocation(line: 2774, column: 18, scope: !4597)
!4792 = !DILocation(line: 2773, column: 5, scope: !4611)
!4793 = distinct !{!4793, !4644, !4794}
!4794 = !DILocation(line: 2774, column: 51, scope: !4597)
!4795 = !DILocation(line: 0, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 2777, column: 3)
!4797 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 2777, column: 3)
!4798 = !DILocation(line: 2777, column: 3, scope: !4797)
!4799 = !DILocation(line: 0, scope: !4797)
!4800 = !DILocation(line: 2777, column: 17, scope: !4796)
!4801 = !DILocation(line: 2778, column: 9, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 2778, column: 9)
!4803 = !DILocation(line: 2778, column: 28, scope: !4802)
!4804 = !DILocation(line: 2778, column: 9, scope: !4796)
!4805 = !DILocation(line: 2779, column: 28, scope: !4802)
!4806 = !DILocation(line: 2779, column: 44, scope: !4802)
!4807 = !DILocation(line: 2779, column: 26, scope: !4802)
!4808 = !DILocation(line: 2779, column: 7, scope: !4802)
!4809 = !DILocation(line: 2777, column: 47, scope: !4796)
!4810 = !DILocation(line: 2777, column: 3, scope: !4796)
!4811 = distinct !{!4811, !4798, !4812}
!4812 = !DILocation(line: 2779, column: 67, scope: !4797)
!4813 = !DILocation(line: 2782, column: 9, scope: !4597)
!4814 = !DILocation(line: 2782, column: 3, scope: !4597)
!4815 = !DILocation(line: 2783, column: 22, scope: !4597)
!4816 = !DILocation(line: 2784, column: 9, scope: !4597)
!4817 = !DILocation(line: 2784, column: 3, scope: !4597)
!4818 = !DILocation(line: 2785, column: 12, scope: !4597)
!4819 = !DILocation(line: 2786, column: 3, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 2786, column: 3)
!4821 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 2786, column: 3)
!4822 = !DILocation(line: 2786, column: 3, scope: !4821)
!4823 = !DILocation(line: 2787, column: 1, scope: !4597)
!4824 = distinct !DISubprogram(name: "VEC_rtx_base_truncate", scope: !378, file: !378, line: 200, type: !4825, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4828)
!4825 = !DISubroutineType(types: !4826)
!4826 = !{null, !4827, !7}
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!4828 = !{!4829, !4830}
!4829 = !DILocalVariable(name: "vec_", arg: 1, scope: !4824, file: !378, line: 200, type: !4827)
!4830 = !DILocalVariable(name: "size_", arg: 2, scope: !4824, file: !378, line: 200, type: !7)
!4831 = !DILocation(line: 0, scope: !4824)
!4832 = !DILocation(line: 200, column: 1, scope: !4824)
!4833 = !DILocation(line: 200, column: 1, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4824, file: !378, line: 200, column: 1)
!4835 = distinct !DISubprogram(name: "VEC_rtx_gc_safe_grow_cleared", scope: !378, file: !378, line: 202, type: !4836, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4839)
!4836 = !DISubroutineType(types: !4837)
!4837 = !{null, !4838, !557}
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!4839 = !{!4840, !4841, !4842}
!4840 = !DILocalVariable(name: "vec_", arg: 1, scope: !4835, file: !378, line: 202, type: !4838)
!4841 = !DILocalVariable(name: "size_", arg: 2, scope: !4835, file: !378, line: 202, type: !557)
!4842 = !DILocalVariable(name: "oldsize", scope: !4835, file: !378, line: 202, type: !557)
!4843 = !DILocation(line: 0, scope: !4835)
!4844 = !DILocation(line: 202, column: 1, scope: !4835)
!4845 = distinct !DISubprogram(name: "record_set", scope: !3, file: !3, line: 1120, type: !4577, scopeLine: 1121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4846)
!4846 = !{!4847, !4848, !4849, !4850, !4851, !4852, !4853}
!4847 = !DILocalVariable(name: "dest", arg: 1, scope: !4845, file: !3, line: 1120, type: !573)
!4848 = !DILocalVariable(name: "set", arg: 2, scope: !4845, file: !3, line: 1120, type: !1982)
!4849 = !DILocalVariable(name: "data", arg: 3, scope: !4845, file: !3, line: 1120, type: !561)
!4850 = !DILocalVariable(name: "regno", scope: !4845, file: !3, line: 1122, type: !7)
!4851 = !DILocalVariable(name: "src", scope: !4845, file: !3, line: 1123, type: !573)
!4852 = !DILocalVariable(name: "n", scope: !4845, file: !3, line: 1124, type: !557)
!4853 = !DILocalVariable(name: "other", scope: !4854, file: !3, line: 1204, type: !573)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 1203, column: 2)
!4855 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 1193, column: 7)
!4856 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 1190, column: 7)
!4857 = !DILocation(line: 0, scope: !4845)
!4858 = !DILocation(line: 1126, column: 8, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 1126, column: 7)
!4860 = !DILocation(line: 1126, column: 7, scope: !4845)
!4861 = !DILocation(line: 1129, column: 11, scope: !4845)
!4862 = !DILocation(line: 1131, column: 3, scope: !4845)
!4863 = !DILocation(line: 1135, column: 13, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 1135, column: 7)
!4865 = !DILocation(line: 1135, column: 7, scope: !4845)
!4866 = !DILocation(line: 1136, column: 9, scope: !4864)
!4867 = !DILocation(line: 1136, column: 33, scope: !4864)
!4868 = !DILocation(line: 1136, column: 5, scope: !4864)
!4869 = !DILocation(line: 0, scope: !4864)
!4870 = !DILocation(line: 1139, column: 9, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 1139, column: 7)
!4872 = !DILocation(line: 1139, column: 7, scope: !4845)
!4873 = !DILocation(line: 1141, column: 7, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 1140, column: 5)
!4875 = !DILocation(line: 1141, column: 14, scope: !4874)
!4876 = !DILocation(line: 1141, column: 18, scope: !4874)
!4877 = !DILocation(line: 1143, column: 4, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1142, column: 2)
!4879 = !DILocation(line: 1143, column: 19, scope: !4878)
!4880 = !DILocation(line: 1143, column: 24, scope: !4878)
!4881 = !DILocation(line: 1144, column: 4, scope: !4878)
!4882 = !DILocation(line: 1144, column: 34, scope: !4878)
!4883 = distinct !{!4883, !4873, !4884}
!4884 = !DILocation(line: 1145, column: 2, scope: !4874)
!4885 = !DILocation(line: 1149, column: 7, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 1149, column: 7)
!4887 = !DILocation(line: 1149, column: 7, scope: !4845)
!4888 = !DILocation(line: 1154, column: 11, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 1154, column: 11)
!4890 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 1150, column: 5)
!4891 = !DILocation(line: 1154, column: 26, scope: !4889)
!4892 = !DILocation(line: 1154, column: 11, scope: !4890)
!4893 = !DILocation(line: 1156, column: 4, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 1155, column: 2)
!4895 = !DILocation(line: 1156, column: 30, scope: !4894)
!4896 = !DILocation(line: 1157, column: 4, scope: !4894)
!4897 = !DILocation(line: 1159, column: 13, scope: !4890)
!4898 = !DILocation(line: 1190, column: 7, scope: !4856)
!4899 = !DILocation(line: 1190, column: 33, scope: !4856)
!4900 = !DILocation(line: 1191, column: 7, scope: !4856)
!4901 = !DILocation(line: 1163, column: 11, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 1163, column: 11)
!4903 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 1162, column: 5)
!4904 = !DILocation(line: 1163, column: 11, scope: !4903)
!4905 = !DILocation(line: 1165, column: 4, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 1164, column: 2)
!4907 = !DILocation(line: 1165, column: 30, scope: !4906)
!4908 = !DILocation(line: 1166, column: 4, scope: !4906)
!4909 = !DILocation(line: 1168, column: 23, scope: !4903)
!4910 = !DILocation(line: 1169, column: 35, scope: !4903)
!4911 = !DILocation(line: 1169, column: 7, scope: !4903)
!4912 = !DILocation(line: 1169, column: 33, scope: !4903)
!4913 = !DILocation(line: 1171, column: 7, scope: !4903)
!4914 = !DILocation(line: 1191, column: 10, scope: !4856)
!4915 = !DILocation(line: 1191, column: 35, scope: !4856)
!4916 = !DILocation(line: 1191, column: 32, scope: !4856)
!4917 = !DILocation(line: 1190, column: 7, scope: !4845)
!4918 = !DILocation(line: 1192, column: 13, scope: !4856)
!4919 = !DILocation(line: 1192, column: 5, scope: !4856)
!4920 = !DILocation(line: 1196, column: 6, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 1196, column: 6)
!4922 = !DILocation(line: 1196, column: 20, scope: !4921)
!4923 = !DILocation(line: 1196, column: 28, scope: !4921)
!4924 = !DILocation(line: 1196, column: 31, scope: !4921)
!4925 = !DILocation(line: 1196, column: 45, scope: !4921)
!4926 = !DILocation(line: 1196, column: 6, scope: !4855)
!4927 = !DILocation(line: 1197, column: 30, scope: !4921)
!4928 = !DILocation(line: 1197, column: 4, scope: !4921)
!4929 = !DILocation(line: 0, scope: !4854)
!4930 = !DILocation(line: 1206, column: 8, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1206, column: 8)
!4932 = !DILocation(line: 1206, column: 22, scope: !4931)
!4933 = !DILocation(line: 0, scope: !4931)
!4934 = !DILocation(line: 1206, column: 8, scope: !4854)
!4935 = !DILocation(line: 1208, column: 27, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 1208, column: 13)
!4937 = !DILocation(line: 1208, column: 13, scope: !4931)
!4938 = !DILocation(line: 1209, column: 6, scope: !4936)
!4939 = !DILocation(line: 1211, column: 10, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1211, column: 8)
!4941 = !DILocation(line: 1211, column: 16, scope: !4940)
!4942 = !DILocation(line: 1211, column: 19, scope: !4940)
!4943 = !DILocation(line: 1211, column: 8, scope: !4854)
!4944 = !DILocation(line: 1212, column: 6, scope: !4940)
!4945 = !DILocation(line: 1212, column: 32, scope: !4940)
!4946 = !DILocation(line: 1216, column: 6, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 1216, column: 6)
!4948 = !DILocation(line: 1216, column: 20, scope: !4947)
!4949 = !DILocation(line: 1216, column: 28, scope: !4947)
!4950 = !DILocation(line: 1216, column: 32, scope: !4947)
!4951 = !DILocation(line: 1216, column: 6, scope: !4855)
!4952 = !DILocation(line: 1217, column: 30, scope: !4947)
!4953 = !DILocation(line: 1217, column: 4, scope: !4947)
!4954 = !DILocation(line: 1220, column: 28, scope: !4855)
!4955 = !DILocation(line: 1221, column: 2, scope: !4855)
!4956 = !DILocation(line: 1224, column: 19, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 1224, column: 12)
!4958 = !DILocation(line: 1224, column: 44, scope: !4957)
!4959 = !DILocation(line: 1224, column: 49, scope: !4957)
!4960 = !DILocation(line: 1225, column: 5, scope: !4957)
!4961 = !DILocation(line: 1225, column: 10, scope: !4957)
!4962 = !DILocation(line: 1225, column: 26, scope: !4957)
!4963 = !DILocation(line: 1225, column: 55, scope: !4957)
!4964 = !DILocation(line: 1224, column: 12, scope: !4856)
!4965 = !DILocation(line: 1226, column: 33, scope: !4957)
!4966 = !DILocation(line: 1226, column: 5, scope: !4957)
!4967 = !DILocation(line: 1226, column: 31, scope: !4957)
!4968 = !DILocation(line: 1228, column: 3, scope: !4845)
!4969 = !DILocation(line: 1228, column: 19, scope: !4845)
!4970 = !DILocation(line: 1229, column: 1, scope: !4845)
!4971 = distinct !DISubprogram(name: "set_reg_known_value", scope: !3, file: !3, line: 1248, type: !4972, scopeLine: 1249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4974)
!4972 = !DISubroutineType(types: !4973)
!4973 = !{null, !7, !573}
!4974 = !{!4975, !4976}
!4975 = !DILocalVariable(name: "regno", arg: 1, scope: !4971, file: !3, line: 1248, type: !7)
!4976 = !DILocalVariable(name: "val", arg: 2, scope: !4971, file: !3, line: 1248, type: !573)
!4977 = !DILocation(line: 0, scope: !4971)
!4978 = !DILocation(line: 1250, column: 13, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 1250, column: 7)
!4980 = !DILocation(line: 1250, column: 7, scope: !4971)
!4981 = !DILocation(line: 1252, column: 13, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 1251, column: 5)
!4983 = !DILocation(line: 1253, column: 19, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 1253, column: 11)
!4985 = !DILocation(line: 1253, column: 17, scope: !4984)
!4986 = !DILocation(line: 1253, column: 11, scope: !4982)
!4987 = !DILocation(line: 1254, column: 2, scope: !4984)
!4988 = !DILocation(line: 1254, column: 25, scope: !4984)
!4989 = !DILocation(line: 1256, column: 1, scope: !4971)
!4990 = distinct !DISubprogram(name: "set_reg_known_equiv_p", scope: !3, file: !3, line: 1273, type: !4991, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4993)
!4991 = !DISubroutineType(types: !4992)
!4992 = !{null, !7, !556}
!4993 = !{!4994, !4995}
!4994 = !DILocalVariable(name: "regno", arg: 1, scope: !4990, file: !3, line: 1273, type: !7)
!4995 = !DILocalVariable(name: "val", arg: 2, scope: !4990, file: !3, line: 1273, type: !556)
!4996 = !DILocation(line: 0, scope: !4990)
!4997 = !DILocation(line: 1275, column: 13, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 1275, column: 7)
!4999 = !DILocation(line: 1275, column: 7, scope: !4990)
!5000 = !DILocation(line: 1277, column: 13, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 1276, column: 5)
!5002 = !DILocation(line: 1278, column: 19, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 1278, column: 11)
!5004 = !DILocation(line: 1278, column: 17, scope: !5003)
!5005 = !DILocation(line: 1278, column: 11, scope: !5001)
!5006 = !DILocation(line: 1279, column: 2, scope: !5003)
!5007 = !DILocation(line: 1279, column: 27, scope: !5003)
!5008 = !DILocation(line: 1281, column: 1, scope: !4990)
!5009 = distinct !DISubprogram(name: "VEC_rtx_base_replace", scope: !378, file: !378, line: 200, type: !5010, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5012)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{!573, !4827, !7, !573}
!5012 = !{!5013, !5014, !5015, !5016}
!5013 = !DILocalVariable(name: "vec_", arg: 1, scope: !5009, file: !378, line: 200, type: !4827)
!5014 = !DILocalVariable(name: "ix_", arg: 2, scope: !5009, file: !378, line: 200, type: !7)
!5015 = !DILocalVariable(name: "obj_", arg: 3, scope: !5009, file: !378, line: 200, type: !573)
!5016 = !DILocalVariable(name: "old_obj_", scope: !5009, file: !378, line: 200, type: !573)
!5017 = !DILocation(line: 0, scope: !5009)
!5018 = !DILocation(line: 200, column: 1, scope: !5009)
!5019 = distinct !DISubprogram(name: "end_alias_analysis", scope: !3, file: !3, line: 2790, type: !4526, scopeLine: 2791, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2063)
!5020 = !DILocation(line: 2792, column: 24, scope: !5019)
!5021 = !DILocation(line: 2792, column: 22, scope: !5019)
!5022 = !DILocation(line: 2793, column: 13, scope: !5019)
!5023 = !DILocation(line: 2793, column: 3, scope: !5019)
!5024 = !DILocation(line: 2794, column: 19, scope: !5019)
!5025 = !DILocation(line: 2795, column: 24, scope: !5019)
!5026 = !DILocation(line: 2796, column: 9, scope: !5019)
!5027 = !DILocation(line: 2796, column: 3, scope: !5019)
!5028 = !DILocation(line: 2797, column: 21, scope: !5019)
!5029 = !DILocation(line: 2798, column: 1, scope: !5019)
!5030 = distinct !DISubprogram(name: "gt_ggc_mx_VEC_alias_set_entry_gc", scope: !1986, file: !1986, line: 23, type: !1313, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5031)
!5031 = !{!5032, !5033, !5035, !5039}
!5032 = !DILocalVariable(name: "x_p", arg: 1, scope: !5030, file: !1986, line: 23, type: !561)
!5033 = !DILocalVariable(name: "x", scope: !5030, file: !1986, line: 25, type: !5034)
!5034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1968)
!5035 = !DILocalVariable(name: "i0", scope: !5036, file: !1986, line: 29, type: !1159)
!5036 = distinct !DILexicalBlock(scope: !5037, file: !1986, line: 28, column: 7)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !1986, line: 27, column: 5)
!5038 = distinct !DILexicalBlock(scope: !5030, file: !1986, line: 26, column: 7)
!5039 = !DILocalVariable(name: "l0", scope: !5036, file: !1986, line: 30, type: !1159)
!5040 = !DILocation(line: 0, scope: !5030)
!5041 = !DILocation(line: 26, column: 7, scope: !5038)
!5042 = !DILocation(line: 26, column: 7, scope: !5030)
!5043 = !DILocation(line: 30, column: 42, scope: !5036)
!5044 = !DILocation(line: 30, column: 21, scope: !5036)
!5045 = !DILocation(line: 0, scope: !5036)
!5046 = !DILocation(line: 0, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5048, file: !1986, line: 32, column: 11)
!5048 = distinct !DILexicalBlock(scope: !5049, file: !1986, line: 32, column: 11)
!5049 = distinct !DILexicalBlock(scope: !5050, file: !1986, line: 31, column: 38)
!5050 = distinct !DILexicalBlock(scope: !5051, file: !1986, line: 31, column: 9)
!5051 = distinct !DILexicalBlock(scope: !5036, file: !1986, line: 31, column: 9)
!5052 = !DILocation(line: 31, column: 14, scope: !5051)
!5053 = !DILocation(line: 0, scope: !5051)
!5054 = !DILocation(line: 31, column: 25, scope: !5050)
!5055 = !DILocation(line: 31, column: 9, scope: !5051)
!5056 = !DILocation(line: 32, column: 11, scope: !5047)
!5057 = !DILocation(line: 32, column: 11, scope: !5048)
!5058 = !DILocation(line: 31, column: 34, scope: !5050)
!5059 = !DILocation(line: 31, column: 9, scope: !5050)
!5060 = distinct !{!5060, !5055, !5061}
!5061 = !DILocation(line: 33, column: 9, scope: !5051)
!5062 = !DILocation(line: 36, column: 1, scope: !5030)
!5063 = distinct !DISubprogram(name: "gt_ggc_mx_alias_set_entry_d", scope: !1986, file: !1986, line: 39, type: !1313, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5064)
!5064 = !{!5065, !5066}
!5065 = !DILocalVariable(name: "x_p", arg: 1, scope: !5063, file: !1986, line: 39, type: !561)
!5066 = !DILocalVariable(name: "x", scope: !5063, file: !1986, line: 41, type: !5067)
!5067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1922)
!5068 = !DILocation(line: 0, scope: !5063)
!5069 = !DILocation(line: 42, column: 7, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5063, file: !1986, line: 42, column: 7)
!5071 = !DILocation(line: 42, column: 7, scope: !5063)
!5072 = !DILocation(line: 44, column: 39, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5070, file: !1986, line: 43, column: 5)
!5074 = !DILocation(line: 44, column: 7, scope: !5073)
!5075 = !DILocation(line: 45, column: 5, scope: !5073)
!5076 = !DILocation(line: 46, column: 1, scope: !5063)
!5077 = distinct !DISubprogram(name: "gt_pch_nx_VEC_alias_set_entry_gc", scope: !1986, file: !1986, line: 49, type: !1313, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5078)
!5078 = !{!5079, !5080, !5081, !5085}
!5079 = !DILocalVariable(name: "x_p", arg: 1, scope: !5077, file: !1986, line: 49, type: !561)
!5080 = !DILocalVariable(name: "x", scope: !5077, file: !1986, line: 51, type: !5034)
!5081 = !DILocalVariable(name: "i0", scope: !5082, file: !1986, line: 55, type: !1159)
!5082 = distinct !DILexicalBlock(scope: !5083, file: !1986, line: 54, column: 7)
!5083 = distinct !DILexicalBlock(scope: !5084, file: !1986, line: 53, column: 5)
!5084 = distinct !DILexicalBlock(scope: !5077, file: !1986, line: 52, column: 7)
!5085 = !DILocalVariable(name: "l0", scope: !5082, file: !1986, line: 56, type: !1159)
!5086 = !DILocation(line: 0, scope: !5077)
!5087 = !DILocation(line: 52, column: 7, scope: !5084)
!5088 = !DILocation(line: 52, column: 7, scope: !5077)
!5089 = !DILocation(line: 56, column: 42, scope: !5082)
!5090 = !DILocation(line: 56, column: 21, scope: !5082)
!5091 = !DILocation(line: 0, scope: !5082)
!5092 = !DILocation(line: 0, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !1986, line: 58, column: 11)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !1986, line: 58, column: 11)
!5095 = distinct !DILexicalBlock(scope: !5096, file: !1986, line: 57, column: 38)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !1986, line: 57, column: 9)
!5097 = distinct !DILexicalBlock(scope: !5082, file: !1986, line: 57, column: 9)
!5098 = !DILocation(line: 57, column: 14, scope: !5097)
!5099 = !DILocation(line: 0, scope: !5097)
!5100 = !DILocation(line: 57, column: 25, scope: !5096)
!5101 = !DILocation(line: 57, column: 9, scope: !5097)
!5102 = !DILocation(line: 58, column: 11, scope: !5093)
!5103 = !DILocation(line: 58, column: 11, scope: !5094)
!5104 = !DILocation(line: 57, column: 34, scope: !5096)
!5105 = !DILocation(line: 57, column: 9, scope: !5096)
!5106 = distinct !{!5106, !5101, !5107}
!5107 = !DILocation(line: 59, column: 9, scope: !5097)
!5108 = !DILocation(line: 62, column: 1, scope: !5077)
!5109 = distinct !DISubprogram(name: "gt_pch_p_22VEC_alias_set_entry_gc", scope: !1986, file: !1986, line: 75, type: !5110, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5113)
!5110 = !DISubroutineType(types: !5111)
!5111 = !{null, !561, !561, !5112, !561}
!5112 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_operator", file: !1990, line: 38, baseType: !1337)
!5113 = !{!5114, !5115, !5116, !5117, !5118, !5119, !5121}
!5114 = !DILocalVariable(name: "this_obj", arg: 1, scope: !5109, file: !1986, line: 75, type: !561)
!5115 = !DILocalVariable(name: "x_p", arg: 2, scope: !5109, file: !1986, line: 76, type: !561)
!5116 = !DILocalVariable(name: "op", arg: 3, scope: !5109, file: !1986, line: 77, type: !5112)
!5117 = !DILocalVariable(name: "cookie", arg: 4, scope: !5109, file: !1986, line: 78, type: !561)
!5118 = !DILocalVariable(name: "x", scope: !5109, file: !1986, line: 80, type: !5034)
!5119 = !DILocalVariable(name: "i0", scope: !5120, file: !1986, line: 82, type: !1159)
!5120 = distinct !DILexicalBlock(scope: !5109, file: !1986, line: 81, column: 3)
!5121 = !DILocalVariable(name: "l0", scope: !5120, file: !1986, line: 83, type: !1159)
!5122 = !DILocation(line: 0, scope: !5109)
!5123 = !DILocation(line: 83, column: 38, scope: !5120)
!5124 = !DILocation(line: 83, column: 17, scope: !5120)
!5125 = !DILocation(line: 0, scope: !5120)
!5126 = !DILocation(line: 0, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !1986, line: 85, column: 11)
!5128 = distinct !DILexicalBlock(scope: !5129, file: !1986, line: 84, column: 34)
!5129 = distinct !DILexicalBlock(scope: !5130, file: !1986, line: 84, column: 5)
!5130 = distinct !DILexicalBlock(scope: !5120, file: !1986, line: 84, column: 5)
!5131 = !DILocation(line: 84, column: 10, scope: !5130)
!5132 = !DILocation(line: 0, scope: !5130)
!5133 = !DILocation(line: 84, column: 21, scope: !5129)
!5134 = !DILocation(line: 84, column: 5, scope: !5130)
!5135 = !DILocation(line: 86, column: 15, scope: !5127)
!5136 = !DILocation(line: 86, column: 13, scope: !5127)
!5137 = !DILocation(line: 86, column: 9, scope: !5127)
!5138 = !DILocation(line: 84, column: 30, scope: !5129)
!5139 = !DILocation(line: 84, column: 5, scope: !5129)
!5140 = distinct !{!5140, !5134, !5141}
!5141 = !DILocation(line: 87, column: 5, scope: !5130)
!5142 = !DILocation(line: 89, column: 1, scope: !5109)
!5143 = distinct !DISubprogram(name: "gt_pch_nx_alias_set_entry_d", scope: !1986, file: !1986, line: 65, type: !1313, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5144)
!5144 = !{!5145, !5146}
!5145 = !DILocalVariable(name: "x_p", arg: 1, scope: !5143, file: !1986, line: 65, type: !561)
!5146 = !DILocalVariable(name: "x", scope: !5143, file: !1986, line: 67, type: !5067)
!5147 = !DILocation(line: 0, scope: !5143)
!5148 = !DILocation(line: 68, column: 7, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5143, file: !1986, line: 68, column: 7)
!5150 = !DILocation(line: 68, column: 7, scope: !5143)
!5151 = !DILocation(line: 70, column: 39, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5149, file: !1986, line: 69, column: 5)
!5153 = !DILocation(line: 70, column: 7, scope: !5152)
!5154 = !DILocation(line: 71, column: 5, scope: !5152)
!5155 = !DILocation(line: 72, column: 1, scope: !5143)
!5156 = distinct !DISubprogram(name: "gt_pch_p_17alias_set_entry_d", scope: !1986, file: !1986, line: 92, type: !5110, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5157)
!5157 = !{!5158, !5159, !5160, !5161, !5162}
!5158 = !DILocalVariable(name: "this_obj", arg: 1, scope: !5156, file: !1986, line: 92, type: !561)
!5159 = !DILocalVariable(name: "x_p", arg: 2, scope: !5156, file: !1986, line: 93, type: !561)
!5160 = !DILocalVariable(name: "op", arg: 3, scope: !5156, file: !1986, line: 94, type: !5112)
!5161 = !DILocalVariable(name: "cookie", arg: 4, scope: !5156, file: !1986, line: 95, type: !561)
!5162 = !DILocalVariable(name: "x", scope: !5156, file: !1986, line: 97, type: !5067)
!5163 = !DILocation(line: 0, scope: !5156)
!5164 = !DILocation(line: 98, column: 19, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5156, file: !1986, line: 98, column: 7)
!5166 = !DILocation(line: 98, column: 7, scope: !5156)
!5167 = !DILocation(line: 99, column: 16, scope: !5165)
!5168 = !DILocation(line: 99, column: 5, scope: !5165)
!5169 = !DILocation(line: 100, column: 1, scope: !5156)
!5170 = distinct !DISubprogram(name: "gt_ggc_ma_reg_known_value", scope: !1986, file: !1986, line: 106, type: !1313, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5171)
!5171 = !{!5172, !5173, !5176}
!5172 = !DILocalVariable(name: "x_p", arg: 1, scope: !5170, file: !1986, line: 106, type: !561)
!5173 = !DILocalVariable(name: "i0", scope: !5174, file: !1986, line: 109, type: !1159)
!5174 = distinct !DILexicalBlock(scope: !5175, file: !1986, line: 108, column: 32)
!5175 = distinct !DILexicalBlock(scope: !5170, file: !1986, line: 108, column: 7)
!5176 = !DILocalVariable(name: "a__", scope: !5177, file: !1986, line: 113, type: !5178)
!5177 = distinct !DILexicalBlock(scope: !5174, file: !1986, line: 113, column: 5)
!5178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1303)
!5179 = !DILocation(line: 0, scope: !5170)
!5180 = !DILocation(line: 108, column: 7, scope: !5175)
!5181 = !DILocation(line: 108, column: 23, scope: !5175)
!5182 = !DILocation(line: 108, column: 7, scope: !5170)
!5183 = !DILocation(line: 110, column: 5, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5174, file: !1986, line: 110, column: 5)
!5185 = !DILocation(line: 0, scope: !5174)
!5186 = !DILocation(line: 0, scope: !5184)
!5187 = !DILocation(line: 110, column: 33, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5184, file: !1986, line: 110, column: 5)
!5189 = !DILocation(line: 110, column: 24, scope: !5188)
!5190 = !DILocation(line: 110, column: 21, scope: !5188)
!5191 = !DILocation(line: 111, column: 7, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !1986, line: 111, column: 7)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !1986, line: 111, column: 7)
!5194 = distinct !DILexicalBlock(scope: !5188, file: !1986, line: 110, column: 62)
!5195 = !DILocation(line: 111, column: 7, scope: !5193)
!5196 = !DILocation(line: 110, column: 58, scope: !5188)
!5197 = !DILocation(line: 110, column: 5, scope: !5188)
!5198 = distinct !{!5198, !5183, !5199}
!5199 = !DILocation(line: 112, column: 5, scope: !5184)
!5200 = !DILocation(line: 0, scope: !5177)
!5201 = !DILocation(line: 113, column: 5, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5177, file: !1986, line: 113, column: 5)
!5203 = !DILocation(line: 113, column: 5, scope: !5177)
!5204 = !DILocation(line: 115, column: 1, scope: !5170)
!5205 = distinct !DISubprogram(name: "gt_pch_na_reg_known_value", scope: !1986, file: !1986, line: 137, type: !1313, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5206)
!5206 = !{!5207, !5208}
!5207 = !DILocalVariable(name: "x_p", arg: 1, scope: !5205, file: !1986, line: 137, type: !561)
!5208 = !DILocalVariable(name: "i1", scope: !5209, file: !1986, line: 140, type: !1159)
!5209 = distinct !DILexicalBlock(scope: !5210, file: !1986, line: 139, column: 32)
!5210 = distinct !DILexicalBlock(scope: !5205, file: !1986, line: 139, column: 7)
!5211 = !DILocation(line: 0, scope: !5205)
!5212 = !DILocation(line: 139, column: 7, scope: !5210)
!5213 = !DILocation(line: 139, column: 23, scope: !5210)
!5214 = !DILocation(line: 139, column: 7, scope: !5205)
!5215 = !DILocation(line: 141, column: 5, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5209, file: !1986, line: 141, column: 5)
!5217 = !DILocation(line: 0, scope: !5209)
!5218 = !DILocation(line: 0, scope: !5216)
!5219 = !DILocation(line: 141, column: 33, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5216, file: !1986, line: 141, column: 5)
!5221 = !DILocation(line: 141, column: 24, scope: !5220)
!5222 = !DILocation(line: 141, column: 21, scope: !5220)
!5223 = !DILocation(line: 142, column: 7, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5225, file: !1986, line: 142, column: 7)
!5225 = distinct !DILexicalBlock(scope: !5226, file: !1986, line: 142, column: 7)
!5226 = distinct !DILexicalBlock(scope: !5220, file: !1986, line: 141, column: 62)
!5227 = !DILocation(line: 142, column: 7, scope: !5225)
!5228 = !DILocation(line: 141, column: 58, scope: !5220)
!5229 = !DILocation(line: 141, column: 5, scope: !5220)
!5230 = distinct !{!5230, !5215, !5231}
!5231 = !DILocation(line: 143, column: 5, scope: !5216)
!5232 = !DILocation(line: 144, column: 25, scope: !5209)
!5233 = !DILocation(line: 144, column: 5, scope: !5209)
!5234 = !DILocation(line: 145, column: 3, scope: !5209)
!5235 = !DILocation(line: 146, column: 1, scope: !5205)
!5236 = distinct !DISubprogram(name: "VEC_alias_set_entry_base_index", scope: !3, file: !3, line: 249, type: !5237, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5239)
!5237 = !DISubroutineType(types: !5238)
!5238 = !{!1979, !2927, !7}
!5239 = !{!5240, !5241}
!5240 = !DILocalVariable(name: "vec_", arg: 1, scope: !5236, file: !3, line: 249, type: !2927)
!5241 = !DILocalVariable(name: "ix_", arg: 2, scope: !5236, file: !3, line: 249, type: !7)
!5242 = !DILocation(line: 0, scope: !5236)
!5243 = !DILocation(line: 249, column: 1, scope: !5236)
!5244 = distinct !DISubprogram(name: "walk_mems_2", scope: !3, file: !3, line: 449, type: !5245, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5247)
!5245 = !DISubroutineType(types: !5246)
!5246 = !{!557, !572, !573}
!5247 = !{!5248, !5249}
!5248 = !DILocalVariable(name: "x", arg: 1, scope: !5244, file: !3, line: 449, type: !572)
!5249 = !DILocalVariable(name: "mem", arg: 2, scope: !5244, file: !3, line: 449, type: !573)
!5250 = !DILocation(line: 0, scope: !5244)
!5251 = !DILocation(line: 451, column: 7, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 451, column: 7)
!5253 = !DILocation(line: 451, column: 7, scope: !5244)
!5254 = !DILocation(line: 453, column: 34, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 453, column: 11)
!5256 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 452, column: 5)
!5257 = !DILocation(line: 453, column: 53, scope: !5255)
!5258 = !DILocation(line: 453, column: 11, scope: !5255)
!5259 = !DILocation(line: 0, scope: !5256)
!5260 = !DILocation(line: 459, column: 1, scope: !5244)
!5261 = distinct !DISubprogram(name: "VEC_alias_set_entry_gc_reserve", scope: !3, file: !3, line: 250, type: !5262, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5264)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{!557, !2918, !557}
!5264 = !{!5265, !5266, !5267}
!5265 = !DILocalVariable(name: "vec_", arg: 1, scope: !5261, file: !3, line: 250, type: !2918)
!5266 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5261, file: !3, line: 250, type: !557)
!5267 = !DILocalVariable(name: "extend", scope: !5261, file: !3, line: 250, type: !557)
!5268 = !DILocation(line: 0, scope: !5261)
!5269 = !DILocation(line: 250, column: 1, scope: !5261)
!5270 = !DILocation(line: 250, column: 1, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 250, column: 1)
!5272 = distinct !DISubprogram(name: "VEC_alias_set_entry_base_quick_push", scope: !3, file: !3, line: 249, type: !5273, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5275)
!5273 = !DISubroutineType(types: !5274)
!5274 = !{!2917, !2991, !1979}
!5275 = !{!5276, !5277, !5278}
!5276 = !DILocalVariable(name: "vec_", arg: 1, scope: !5272, file: !3, line: 249, type: !2991)
!5277 = !DILocalVariable(name: "obj_", arg: 2, scope: !5272, file: !3, line: 249, type: !1979)
!5278 = !DILocalVariable(name: "slot_", scope: !5272, file: !3, line: 249, type: !2917)
!5279 = !DILocation(line: 0, scope: !5272)
!5280 = !DILocation(line: 249, column: 1, scope: !5272)
!5281 = distinct !DISubprogram(name: "VEC_alias_set_entry_base_space", scope: !3, file: !3, line: 249, type: !5282, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5284)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{!557, !2991, !557}
!5284 = !{!5285, !5286}
!5285 = !DILocalVariable(name: "vec_", arg: 1, scope: !5281, file: !3, line: 249, type: !2991)
!5286 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5281, file: !3, line: 249, type: !557)
!5287 = !DILocation(line: 0, scope: !5281)
!5288 = !DILocation(line: 249, column: 1, scope: !5281)
!5289 = distinct !DISubprogram(name: "addr_side_effect_eval", scope: !3, file: !3, line: 1729, type: !5290, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5292)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{!573, !573, !557, !557}
!5292 = !{!5293, !5294, !5295, !5296}
!5293 = !DILocalVariable(name: "addr", arg: 1, scope: !5289, file: !3, line: 1729, type: !573)
!5294 = !DILocalVariable(name: "size", arg: 2, scope: !5289, file: !3, line: 1729, type: !557)
!5295 = !DILocalVariable(name: "n_refs", arg: 3, scope: !5289, file: !3, line: 1729, type: !557)
!5296 = !DILocalVariable(name: "offset", scope: !5289, file: !3, line: 1731, type: !557)
!5297 = !DILocation(line: 0, scope: !5289)
!5298 = !DILocation(line: 1733, column: 11, scope: !5289)
!5299 = !DILocation(line: 1733, column: 3, scope: !5289)
!5300 = !DILocation(line: 1737, column: 7, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 1734, column: 5)
!5302 = !DILocation(line: 1739, column: 30, scope: !5301)
!5303 = !DILocation(line: 1740, column: 7, scope: !5301)
!5304 = !DILocation(line: 1743, column: 7, scope: !5301)
!5305 = !DILocation(line: 1746, column: 7, scope: !5301)
!5306 = !DILocation(line: 0, scope: !5301)
!5307 = !DILocation(line: 1752, column: 7, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 1752, column: 7)
!5309 = !DILocation(line: 1752, column: 7, scope: !5289)
!5310 = !DILocation(line: 1753, column: 12, scope: !5308)
!5311 = !DILocation(line: 1753, column: 5, scope: !5308)
!5312 = !DILocation(line: 1756, column: 12, scope: !5308)
!5313 = !DILocation(line: 0, scope: !5308)
!5314 = !DILocation(line: 1757, column: 10, scope: !5289)
!5315 = !DILocation(line: 1759, column: 3, scope: !5289)
!5316 = !DILocation(line: 1760, column: 1, scope: !5289)
!5317 = distinct !DISubprogram(name: "rtx_equal_for_memref_p", scope: !3, file: !3, line: 1334, type: !3361, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5318)
!5318 = !{!5319, !5320, !5321, !5322, !5323, !5324, !5325, !5328, !5329}
!5319 = !DILocalVariable(name: "x", arg: 1, scope: !5317, file: !3, line: 1334, type: !1982)
!5320 = !DILocalVariable(name: "y", arg: 2, scope: !5317, file: !3, line: 1334, type: !1982)
!5321 = !DILocalVariable(name: "i", scope: !5317, file: !3, line: 1336, type: !557)
!5322 = !DILocalVariable(name: "j", scope: !5317, file: !3, line: 1337, type: !557)
!5323 = !DILocalVariable(name: "code", scope: !5317, file: !3, line: 1338, type: !377)
!5324 = !DILocalVariable(name: "fmt", scope: !5317, file: !3, line: 1339, type: !562)
!5325 = !DILocalVariable(name: "xop0", scope: !5326, file: !3, line: 1395, type: !573)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 1394, column: 5)
!5327 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1393, column: 7)
!5328 = !DILocalVariable(name: "yop0", scope: !5326, file: !3, line: 1396, type: !573)
!5329 = !DILocalVariable(name: "yop1", scope: !5326, file: !3, line: 1397, type: !573)
!5330 = !DILocation(line: 1412, column: 12, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 1411, column: 12)
!5332 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 1404, column: 12)
!5333 = !DILocation(line: 0, scope: !5317)
!5334 = !DILocation(line: 1341, column: 9, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1341, column: 7)
!5336 = !DILocation(line: 1341, column: 19, scope: !5335)
!5337 = !DILocation(line: 1341, column: 14, scope: !5335)
!5338 = !DILocation(line: 1343, column: 14, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1343, column: 7)
!5340 = !DILocation(line: 1346, column: 9, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1346, column: 7)
!5342 = !DILocation(line: 1346, column: 7, scope: !5317)
!5343 = !DILocation(line: 1349, column: 10, scope: !5317)
!5344 = !DILocation(line: 1351, column: 15, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1351, column: 7)
!5346 = !DILocation(line: 1351, column: 12, scope: !5345)
!5347 = !DILocation(line: 1351, column: 7, scope: !5317)
!5348 = !DILocation(line: 1357, column: 20, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1357, column: 7)
!5350 = !DILocation(line: 1357, column: 7, scope: !5317)
!5351 = !DILocation(line: 1361, column: 3, scope: !5317)
!5352 = !DILocation(line: 1364, column: 14, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1362, column: 5)
!5354 = !DILocation(line: 1364, column: 27, scope: !5353)
!5355 = !DILocation(line: 1364, column: 24, scope: !5353)
!5356 = !DILocation(line: 1364, column: 7, scope: !5353)
!5357 = !DILocation(line: 1367, column: 14, scope: !5353)
!5358 = !DILocation(line: 1367, column: 29, scope: !5353)
!5359 = !DILocation(line: 1367, column: 26, scope: !5353)
!5360 = !DILocation(line: 1367, column: 7, scope: !5353)
!5361 = !DILocation(line: 1370, column: 14, scope: !5353)
!5362 = !DILocation(line: 1370, column: 29, scope: !5353)
!5363 = !DILocation(line: 1370, column: 26, scope: !5353)
!5364 = !DILocation(line: 1370, column: 7, scope: !5353)
!5365 = !DILocation(line: 1387, column: 38, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1386, column: 7)
!5367 = !DILocation(line: 1387, column: 51, scope: !5366)
!5368 = !DILocation(line: 1387, column: 14, scope: !5366)
!5369 = !DILocation(line: 1388, column: 7, scope: !5366)
!5370 = !DILocation(line: 1388, column: 34, scope: !5366)
!5371 = !DILocation(line: 1388, column: 47, scope: !5366)
!5372 = !DILocation(line: 1388, column: 10, scope: !5366)
!5373 = !DILocation(line: 1389, column: 6, scope: !5366)
!5374 = !DILocation(line: 1389, column: 34, scope: !5366)
!5375 = !DILocation(line: 1389, column: 47, scope: !5366)
!5376 = !DILocation(line: 1389, column: 10, scope: !5366)
!5377 = !DILocation(line: 1390, column: 3, scope: !5366)
!5378 = !DILocation(line: 1390, column: 30, scope: !5366)
!5379 = !DILocation(line: 1390, column: 43, scope: !5366)
!5380 = !DILocation(line: 1390, column: 6, scope: !5366)
!5381 = !DILocation(line: 1387, column: 5, scope: !5366)
!5382 = !DILocation(line: 1393, column: 7, scope: !5327)
!5383 = !DILocation(line: 1393, column: 7, scope: !5317)
!5384 = !DILocation(line: 1395, column: 29, scope: !5326)
!5385 = !DILocation(line: 1395, column: 18, scope: !5326)
!5386 = !DILocation(line: 0, scope: !5326)
!5387 = !DILocation(line: 1396, column: 29, scope: !5326)
!5388 = !DILocation(line: 1396, column: 18, scope: !5326)
!5389 = !DILocation(line: 1397, column: 29, scope: !5326)
!5390 = !DILocation(line: 1397, column: 18, scope: !5326)
!5391 = !DILocation(line: 1399, column: 16, scope: !5326)
!5392 = !DILocation(line: 1400, column: 9, scope: !5326)
!5393 = !DILocation(line: 1400, column: 47, scope: !5326)
!5394 = !DILocation(line: 1400, column: 36, scope: !5326)
!5395 = !DILocation(line: 1400, column: 12, scope: !5326)
!5396 = !DILocation(line: 1401, column: 8, scope: !5326)
!5397 = !DILocation(line: 1401, column: 12, scope: !5326)
!5398 = !DILocation(line: 1402, column: 5, scope: !5326)
!5399 = !DILocation(line: 1402, column: 43, scope: !5326)
!5400 = !DILocation(line: 1402, column: 32, scope: !5326)
!5401 = !DILocation(line: 1402, column: 8, scope: !5326)
!5402 = !DILocation(line: 1404, column: 12, scope: !5332)
!5403 = !DILocation(line: 1404, column: 12, scope: !5327)
!5404 = !DILocation(line: 1406, column: 50, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 1405, column: 5)
!5406 = !DILocation(line: 1406, column: 39, scope: !5405)
!5407 = !DILocation(line: 1407, column: 22, scope: !5405)
!5408 = !DILocation(line: 1407, column: 11, scope: !5405)
!5409 = !DILocation(line: 1406, column: 15, scope: !5405)
!5410 = !DILocation(line: 1408, column: 8, scope: !5405)
!5411 = !DILocation(line: 1408, column: 46, scope: !5405)
!5412 = !DILocation(line: 1408, column: 35, scope: !5405)
!5413 = !DILocation(line: 1409, column: 18, scope: !5405)
!5414 = !DILocation(line: 1409, column: 7, scope: !5405)
!5415 = !DILocation(line: 1408, column: 11, scope: !5405)
!5416 = !DILocation(line: 1406, column: 7, scope: !5405)
!5417 = !DILocation(line: 1411, column: 12, scope: !5331)
!5418 = !DILocation(line: 1411, column: 12, scope: !5332)
!5419 = !DILocation(line: 1412, column: 47, scope: !5331)
!5420 = !DILocation(line: 1412, column: 36, scope: !5331)
!5421 = !DILocation(line: 1413, column: 19, scope: !5331)
!5422 = !DILocation(line: 1413, column: 8, scope: !5331)
!5423 = !DILocation(line: 1420, column: 9, scope: !5317)
!5424 = !DILocation(line: 1421, column: 12, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1421, column: 3)
!5426 = !DILocation(line: 0, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 1450, column: 8)
!5428 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 1424, column: 2)
!5429 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 1422, column: 5)
!5430 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 1421, column: 3)
!5431 = !DILocation(line: 1421, column: 8, scope: !5425)
!5432 = !DILocation(line: 0, scope: !5425)
!5433 = !DILocation(line: 1421, column: 41, scope: !5430)
!5434 = !DILocation(line: 1421, column: 3, scope: !5425)
!5435 = !DILocation(line: 1423, column: 15, scope: !5429)
!5436 = !DILocation(line: 1423, column: 7, scope: !5429)
!5437 = !DILocation(line: 1426, column: 8, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 1426, column: 8)
!5439 = !DILocation(line: 1426, column: 23, scope: !5438)
!5440 = !DILocation(line: 1426, column: 20, scope: !5438)
!5441 = !DILocation(line: 1426, column: 8, scope: !5428)
!5442 = !DILocation(line: 1432, column: 8, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 1432, column: 8)
!5444 = !DILocation(line: 1432, column: 26, scope: !5443)
!5445 = !DILocation(line: 1432, column: 23, scope: !5443)
!5446 = !DILocation(line: 1432, column: 8, scope: !5428)
!5447 = !DILocation(line: 1436, column: 4, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 1436, column: 4)
!5449 = !DILocation(line: 1436, column: 20, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1436, column: 4)
!5451 = !DILocation(line: 1436, column: 18, scope: !5450)
!5452 = !DILocation(line: 1437, column: 45, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 1437, column: 10)
!5454 = !DILocation(line: 1437, column: 34, scope: !5453)
!5455 = !DILocation(line: 1438, column: 17, scope: !5453)
!5456 = !DILocation(line: 1438, column: 6, scope: !5453)
!5457 = !DILocation(line: 1437, column: 10, scope: !5453)
!5458 = !DILocation(line: 1438, column: 37, scope: !5453)
!5459 = !DILocation(line: 1437, column: 10, scope: !5450)
!5460 = !DILocation(line: 1436, column: 37, scope: !5450)
!5461 = !DILocation(line: 0, scope: !5450)
!5462 = !DILocation(line: 1436, column: 4, scope: !5450)
!5463 = distinct !{!5463, !5447, !5464}
!5464 = !DILocation(line: 1439, column: 15, scope: !5448)
!5465 = !DILocation(line: 1443, column: 43, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 1443, column: 8)
!5467 = !DILocation(line: 1443, column: 32, scope: !5466)
!5468 = !DILocation(line: 1444, column: 22, scope: !5466)
!5469 = !DILocation(line: 1444, column: 11, scope: !5466)
!5470 = !DILocation(line: 1443, column: 8, scope: !5466)
!5471 = !DILocation(line: 1444, column: 36, scope: !5466)
!5472 = !DILocation(line: 1443, column: 8, scope: !5428)
!5473 = !DILocation(line: 1450, column: 16, scope: !5427)
!5474 = !DILocation(line: 1450, column: 29, scope: !5427)
!5475 = !DILocation(line: 1450, column: 8, scope: !5427)
!5476 = !DILocation(line: 1450, column: 8, scope: !5428)
!5477 = !DILocation(line: 1462, column: 4, scope: !5428)
!5478 = !DILocation(line: 1463, column: 2, scope: !5428)
!5479 = !DILocation(line: 1421, column: 3, scope: !5430)
!5480 = distinct !{!5480, !5434, !5481}
!5481 = !DILocation(line: 1464, column: 5, scope: !5425)
!5482 = !DILocation(line: 1466, column: 1, scope: !5317)
!5483 = distinct !DISubprogram(name: "ao_ref_from_mem", scope: !3, file: !3, line: 260, type: !5484, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5487)
!5484 = !DISubroutineType(types: !5485)
!5485 = !{!556, !5486, !1982}
!5486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!5487 = !{!5488, !5489, !5490, !5491, !5492}
!5488 = !DILocalVariable(name: "ref", arg: 1, scope: !5483, file: !3, line: 260, type: !5486)
!5489 = !DILocalVariable(name: "mem", arg: 2, scope: !5483, file: !3, line: 260, type: !1982)
!5490 = !DILocalVariable(name: "expr", scope: !5483, file: !3, line: 262, type: !709)
!5491 = !DILocalVariable(name: "base", scope: !5483, file: !3, line: 263, type: !709)
!5492 = !DILocalVariable(name: "namep", scope: !5493, file: !3, line: 299, type: !561)
!5493 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 298, column: 5)
!5494 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 295, column: 7)
!5495 = !DILocation(line: 0, scope: !5483)
!5496 = !DILocation(line: 262, column: 15, scope: !5483)
!5497 = !DILocation(line: 265, column: 8, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 265, column: 7)
!5499 = !DILocation(line: 265, column: 7, scope: !5483)
!5500 = !DILocation(line: 270, column: 7, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 269, column: 7)
!5502 = !DILocation(line: 269, column: 8, scope: !5501)
!5503 = !DILocation(line: 269, column: 7, scope: !5483)
!5504 = !DILocation(line: 270, column: 11, scope: !5501)
!5505 = !DILocation(line: 273, column: 3, scope: !5483)
!5506 = !DILocation(line: 277, column: 10, scope: !5483)
!5507 = !DILocation(line: 278, column: 12, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 278, column: 7)
!5509 = !DILocation(line: 278, column: 7, scope: !5483)
!5510 = !DILocation(line: 283, column: 7, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 283, column: 7)
!5512 = !DILocation(line: 284, column: 7, scope: !5511)
!5513 = !DILocation(line: 284, column: 10, scope: !5511)
!5514 = !DILocation(line: 284, column: 45, scope: !5511)
!5515 = !DILocation(line: 283, column: 7, scope: !5483)
!5516 = !DILocation(line: 288, column: 24, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 288, column: 7)
!5518 = !DILocation(line: 289, column: 7, scope: !5517)
!5519 = !DILocation(line: 289, column: 27, scope: !5517)
!5520 = !DILocation(line: 288, column: 7, scope: !5483)
!5521 = !DILocation(line: 295, column: 24, scope: !5494)
!5522 = !DILocation(line: 296, column: 7, scope: !5494)
!5523 = !DILocation(line: 296, column: 12, scope: !5494)
!5524 = !DILocation(line: 297, column: 7, scope: !5494)
!5525 = !DILocation(line: 297, column: 10, scope: !5494)
!5526 = !DILocation(line: 297, column: 16, scope: !5494)
!5527 = !DILocation(line: 297, column: 27, scope: !5494)
!5528 = !DILocation(line: 297, column: 45, scope: !5494)
!5529 = !DILocation(line: 295, column: 7, scope: !5483)
!5530 = !DILocation(line: 300, column: 73, scope: !5493)
!5531 = !DILocation(line: 300, column: 15, scope: !5493)
!5532 = !DILocation(line: 0, scope: !5493)
!5533 = !DILocation(line: 301, column: 11, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 301, column: 11)
!5535 = !DILocation(line: 301, column: 11, scope: !5493)
!5536 = !DILocation(line: 303, column: 26, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 302, column: 2)
!5538 = !DILocation(line: 303, column: 9, scope: !5537)
!5539 = !DILocation(line: 303, column: 24, scope: !5537)
!5540 = !DILocation(line: 304, column: 16, scope: !5537)
!5541 = !DILocation(line: 304, column: 9, scope: !5537)
!5542 = !DILocation(line: 304, column: 14, scope: !5537)
!5543 = !DILocation(line: 305, column: 2, scope: !5537)
!5544 = !DILocation(line: 308, column: 24, scope: !5483)
!5545 = !DILocation(line: 308, column: 8, scope: !5483)
!5546 = !DILocation(line: 308, column: 22, scope: !5483)
!5547 = !DILocation(line: 313, column: 7, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 313, column: 7)
!5549 = !DILocation(line: 313, column: 33, scope: !5548)
!5550 = !DILocation(line: 314, column: 7, scope: !5548)
!5551 = !DILocation(line: 314, column: 12, scope: !5548)
!5552 = !DILocation(line: 314, column: 38, scope: !5548)
!5553 = !DILocation(line: 0, scope: !5548)
!5554 = !DILocation(line: 314, column: 36, scope: !5548)
!5555 = !DILocation(line: 315, column: 4, scope: !5548)
!5556 = !DILocation(line: 315, column: 29, scope: !5548)
!5557 = !DILocation(line: 315, column: 21, scope: !5548)
!5558 = !DILocation(line: 313, column: 7, scope: !5483)
!5559 = !DILocation(line: 318, column: 18, scope: !5483)
!5560 = !DILocation(line: 318, column: 44, scope: !5483)
!5561 = !DILocation(line: 318, column: 8, scope: !5483)
!5562 = !DILocation(line: 318, column: 15, scope: !5483)
!5563 = !DILocation(line: 319, column: 15, scope: !5483)
!5564 = !DILocation(line: 319, column: 39, scope: !5483)
!5565 = !DILocation(line: 319, column: 8, scope: !5483)
!5566 = !DILocation(line: 319, column: 13, scope: !5483)
!5567 = !DILocation(line: 323, column: 12, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 323, column: 7)
!5569 = !DILocation(line: 323, column: 21, scope: !5568)
!5570 = !DILocation(line: 324, column: 7, scope: !5568)
!5571 = !DILocation(line: 324, column: 20, scope: !5568)
!5572 = !DILocation(line: 323, column: 7, scope: !5483)
!5573 = !DILocation(line: 325, column: 19, scope: !5568)
!5574 = !DILocation(line: 325, column: 5, scope: !5568)
!5575 = !DILocation(line: 329, column: 7, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 329, column: 7)
!5577 = !DILocation(line: 329, column: 25, scope: !5576)
!5578 = !DILocation(line: 329, column: 22, scope: !5576)
!5579 = !DILocation(line: 330, column: 7, scope: !5576)
!5580 = !DILocation(line: 330, column: 16, scope: !5576)
!5581 = !DILocation(line: 330, column: 23, scope: !5576)
!5582 = !DILocation(line: 331, column: 4, scope: !5576)
!5583 = !DILocation(line: 331, column: 8, scope: !5576)
!5584 = !DILocation(line: 332, column: 8, scope: !5576)
!5585 = !DILocation(line: 332, column: 28, scope: !5576)
!5586 = !DILocation(line: 332, column: 13, scope: !5576)
!5587 = !DILocation(line: 333, column: 5, scope: !5576)
!5588 = !DILocation(line: 333, column: 9, scope: !5576)
!5589 = !DILocation(line: 334, column: 41, scope: !5576)
!5590 = !DILocation(line: 334, column: 55, scope: !5576)
!5591 = !DILocation(line: 334, column: 48, scope: !5576)
!5592 = !DILocation(line: 334, column: 9, scope: !5576)
!5593 = !DILocation(line: 329, column: 7, scope: !5483)
!5594 = !DILocation(line: 337, column: 3, scope: !5483)
!5595 = !DILocation(line: 338, column: 1, scope: !5483)
!5596 = distinct !DISubprogram(name: "VEC_rtx_gc_safe_grow", scope: !378, file: !378, line: 202, type: !4836, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5597)
!5597 = !{!5598, !5599}
!5598 = !DILocalVariable(name: "vec_", arg: 1, scope: !5596, file: !378, line: 202, type: !4838)
!5599 = !DILocalVariable(name: "size_", arg: 2, scope: !5596, file: !378, line: 202, type: !557)
!5600 = !DILocation(line: 0, scope: !5596)
!5601 = !DILocation(line: 202, column: 1, scope: !5596)
!5602 = distinct !DISubprogram(name: "VEC_rtx_base_address", scope: !378, file: !378, line: 200, type: !5603, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5605)
!5603 = !DISubroutineType(types: !5604)
!5604 = !{!572, !4827}
!5605 = !{!5606}
!5606 = !DILocalVariable(name: "vec_", arg: 1, scope: !5602, file: !378, line: 200, type: !4827)
!5607 = !DILocation(line: 0, scope: !5602)
!5608 = !DILocation(line: 200, column: 1, scope: !5602)
!5609 = distinct !DISubprogram(name: "VEC_rtx_gc_reserve_exact", scope: !378, file: !378, line: 202, type: !5610, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5612)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{!557, !4838, !557}
!5612 = !{!5613, !5614, !5615}
!5613 = !DILocalVariable(name: "vec_", arg: 1, scope: !5609, file: !378, line: 202, type: !4838)
!5614 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5609, file: !378, line: 202, type: !557)
!5615 = !DILocalVariable(name: "extend", scope: !5609, file: !378, line: 202, type: !557)
!5616 = !DILocation(line: 0, scope: !5609)
!5617 = !DILocation(line: 202, column: 1, scope: !5609)
!5618 = !DILocation(line: 202, column: 1, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5609, file: !378, line: 202, column: 1)
!5620 = distinct !DISubprogram(name: "VEC_rtx_base_space", scope: !378, file: !378, line: 200, type: !5621, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5623)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{!557, !4827, !557}
!5623 = !{!5624, !5625}
!5624 = !DILocalVariable(name: "vec_", arg: 1, scope: !5620, file: !378, line: 200, type: !4827)
!5625 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5620, file: !378, line: 200, type: !557)
!5626 = !DILocation(line: 0, scope: !5620)
!5627 = !DILocation(line: 200, column: 1, scope: !5620)
!5628 = distinct !DISubprogram(name: "find_base_value", scope: !3, file: !3, line: 936, type: !3078, scopeLine: 937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5629)
!5629 = !{!5630, !5631, !5632, !5635, !5636, !5637}
!5630 = !DILocalVariable(name: "src", arg: 1, scope: !5628, file: !3, line: 936, type: !573)
!5631 = !DILocalVariable(name: "regno", scope: !5628, file: !3, line: 938, type: !7)
!5632 = !DILocalVariable(name: "temp", scope: !5633, file: !3, line: 1002, type: !573)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1001, column: 7)
!5634 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 946, column: 5)
!5635 = !DILocalVariable(name: "src_0", scope: !5633, file: !3, line: 1002, type: !573)
!5636 = !DILocalVariable(name: "src_1", scope: !5633, file: !3, line: 1002, type: !573)
!5637 = !DILocalVariable(name: "temp", scope: !5638, file: !3, line: 1094, type: !573)
!5638 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1093, column: 7)
!5639 = !DILocation(line: 1058, column: 14, scope: !5634)
!5640 = !DILocation(line: 0, scope: !5628)
!5641 = !DILocation(line: 942, column: 9, scope: !5628)
!5642 = !DILocation(line: 945, column: 11, scope: !5628)
!5643 = !DILocation(line: 945, column: 3, scope: !5628)
!5644 = !DILocation(line: 952, column: 15, scope: !5634)
!5645 = !DILocation(line: 957, column: 17, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 957, column: 11)
!5647 = !DILocation(line: 957, column: 41, scope: !5646)
!5648 = !DILocation(line: 957, column: 44, scope: !5646)
!5649 = !DILocation(line: 957, column: 11, scope: !5634)
!5650 = !DILocation(line: 958, column: 9, scope: !5646)
!5651 = !DILocation(line: 958, column: 2, scope: !5646)
!5652 = !DILocation(line: 966, column: 18, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 966, column: 11)
!5654 = !DILocation(line: 966, column: 43, scope: !5653)
!5655 = !DILocation(line: 966, column: 46, scope: !5653)
!5656 = !DILocation(line: 967, column: 4, scope: !5653)
!5657 = !DILocation(line: 967, column: 15, scope: !5653)
!5658 = !DILocation(line: 967, column: 13, scope: !5653)
!5659 = !DILocation(line: 966, column: 11, scope: !5634)
!5660 = !DILocation(line: 971, column: 8, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 971, column: 8)
!5662 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 968, column: 2)
!5663 = !DILocation(line: 971, column: 27, scope: !5661)
!5664 = !DILocation(line: 971, column: 30, scope: !5661)
!5665 = !DILocation(line: 972, column: 8, scope: !5661)
!5666 = !DILocation(line: 972, column: 11, scope: !5661)
!5667 = !DILocation(line: 972, column: 36, scope: !5661)
!5668 = !DILocation(line: 971, column: 8, scope: !5662)
!5669 = !DILocation(line: 973, column: 6, scope: !5661)
!5670 = !DILocation(line: 975, column: 8, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 975, column: 8)
!5672 = !DILocation(line: 975, column: 8, scope: !5662)
!5673 = !DILocation(line: 976, column: 13, scope: !5671)
!5674 = !DILocation(line: 976, column: 6, scope: !5671)
!5675 = !DILocation(line: 985, column: 11, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 985, column: 11)
!5677 = !DILocation(line: 986, column: 4, scope: !5676)
!5678 = !DILocation(line: 986, column: 8, scope: !5676)
!5679 = !DILocation(line: 986, column: 25, scope: !5676)
!5680 = !DILocation(line: 986, column: 22, scope: !5676)
!5681 = !DILocation(line: 987, column: 8, scope: !5676)
!5682 = !DILocation(line: 987, column: 12, scope: !5676)
!5683 = !DILocation(line: 987, column: 37, scope: !5676)
!5684 = !DILocation(line: 988, column: 5, scope: !5676)
!5685 = !DILocation(line: 988, column: 8, scope: !5676)
!5686 = !DILocation(line: 988, column: 32, scope: !5676)
!5687 = !DILocation(line: 985, column: 11, scope: !5634)
!5688 = !DILocation(line: 989, column: 9, scope: !5676)
!5689 = !DILocation(line: 989, column: 2, scope: !5676)
!5690 = !DILocation(line: 993, column: 13, scope: !5634)
!5691 = !DILocation(line: 994, column: 11, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 994, column: 11)
!5693 = !DILocation(line: 994, column: 26, scope: !5692)
!5694 = !DILocation(line: 994, column: 34, scope: !5692)
!5695 = !DILocation(line: 994, column: 52, scope: !5692)
!5696 = !DILocation(line: 994, column: 11, scope: !5634)
!5697 = !DILocation(line: 1002, column: 20, scope: !5633)
!5698 = !DILocation(line: 0, scope: !5633)
!5699 = !DILocation(line: 1002, column: 43, scope: !5633)
!5700 = !DILocation(line: 1006, column: 6, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1006, column: 6)
!5702 = !DILocation(line: 1006, column: 20, scope: !5701)
!5703 = !DILocation(line: 1006, column: 23, scope: !5701)
!5704 = !DILocation(line: 1006, column: 6, scope: !5633)
!5705 = !DILocation(line: 1007, column: 11, scope: !5701)
!5706 = !DILocation(line: 1008, column: 6, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1008, column: 6)
!5708 = !DILocation(line: 1008, column: 20, scope: !5707)
!5709 = !DILocation(line: 1008, column: 23, scope: !5707)
!5710 = !DILocation(line: 1008, column: 6, scope: !5633)
!5711 = !DILocation(line: 1009, column: 11, scope: !5707)
!5712 = !DILocation(line: 1013, column: 6, scope: !5633)
!5713 = !DILocation(line: 1015, column: 13, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 1014, column: 4)
!5715 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1013, column: 6)
!5716 = !DILocation(line: 1016, column: 15, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 1016, column: 10)
!5718 = !DILocation(line: 1016, column: 10, scope: !5714)
!5719 = !DILocation(line: 1020, column: 6, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1020, column: 6)
!5721 = !DILocation(line: 1018, column: 4, scope: !5714)
!5722 = !DILocation(line: 1020, column: 6, scope: !5633)
!5723 = !DILocation(line: 1022, column: 13, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1021, column: 4)
!5725 = !DILocation(line: 1023, column: 14, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 1023, column: 10)
!5727 = !DILocation(line: 1023, column: 10, scope: !5724)
!5728 = !DILocation(line: 1025, column: 4, scope: !5724)
!5729 = !DILocation(line: 1030, column: 12, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1030, column: 6)
!5731 = !DILocation(line: 1031, column: 6, scope: !5730)
!5732 = !DILocation(line: 1031, column: 10, scope: !5730)
!5733 = !DILocation(line: 1031, column: 27, scope: !5730)
!5734 = !DILocation(line: 1032, column: 3, scope: !5730)
!5735 = !DILocation(line: 1032, column: 23, scope: !5730)
!5736 = !DILocation(line: 1033, column: 3, scope: !5730)
!5737 = !DILocation(line: 1033, column: 24, scope: !5730)
!5738 = !DILocation(line: 1034, column: 7, scope: !5730)
!5739 = !DILocation(line: 1034, column: 10, scope: !5730)
!5740 = !DILocation(line: 1034, column: 27, scope: !5730)
!5741 = !DILocation(line: 1030, column: 6, scope: !5633)
!5742 = !DILocation(line: 1037, column: 12, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1037, column: 6)
!5744 = !DILocation(line: 1038, column: 6, scope: !5743)
!5745 = !DILocation(line: 1047, column: 6, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1047, column: 6)
!5747 = !DILocation(line: 1038, column: 10, scope: !5743)
!5748 = !DILocation(line: 1038, column: 27, scope: !5743)
!5749 = !DILocation(line: 1039, column: 3, scope: !5743)
!5750 = !DILocation(line: 1039, column: 23, scope: !5743)
!5751 = !DILocation(line: 1040, column: 3, scope: !5743)
!5752 = !DILocation(line: 1040, column: 24, scope: !5743)
!5753 = !DILocation(line: 1041, column: 7, scope: !5743)
!5754 = !DILocation(line: 1041, column: 10, scope: !5743)
!5755 = !DILocation(line: 1041, column: 27, scope: !5743)
!5756 = !DILocation(line: 1037, column: 6, scope: !5633)
!5757 = !DILocation(line: 1047, column: 26, scope: !5746)
!5758 = !DILocation(line: 1047, column: 29, scope: !5746)
!5759 = !DILocation(line: 1047, column: 6, scope: !5633)
!5760 = !DILocation(line: 1048, column: 11, scope: !5746)
!5761 = !DILocation(line: 1049, column: 11, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 1049, column: 11)
!5763 = !DILocation(line: 1049, column: 31, scope: !5762)
!5764 = !DILocation(line: 1049, column: 34, scope: !5762)
!5765 = !DILocation(line: 1049, column: 11, scope: !5746)
!5766 = !DILocation(line: 1050, column: 11, scope: !5762)
!5767 = !DILocation(line: 1058, column: 31, scope: !5634)
!5768 = !DILocation(line: 1063, column: 11, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1063, column: 11)
!5770 = !DILocation(line: 1063, column: 39, scope: !5769)
!5771 = !DILocation(line: 1063, column: 42, scope: !5769)
!5772 = !DILocation(line: 1063, column: 65, scope: !5769)
!5773 = !DILocation(line: 1063, column: 11, scope: !5634)
!5774 = !DILocation(line: 1064, column: 26, scope: !5769)
!5775 = !DILocation(line: 1064, column: 9, scope: !5769)
!5776 = !DILocation(line: 1071, column: 12, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1071, column: 11)
!5778 = !DILocation(line: 1071, column: 11, scope: !5634)
!5779 = !DILocation(line: 1073, column: 11, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1073, column: 11)
!5781 = !DILocation(line: 1073, column: 44, scope: !5780)
!5782 = !DILocation(line: 1073, column: 42, scope: !5780)
!5783 = !DILocation(line: 1073, column: 11, scope: !5634)
!5784 = !DILocation(line: 1083, column: 31, scope: !5634)
!5785 = !DILocation(line: 1083, column: 14, scope: !5634)
!5786 = !DILocation(line: 1090, column: 12, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1090, column: 11)
!5788 = !DILocation(line: 1090, column: 11, scope: !5634)
!5789 = !DILocation(line: 1094, column: 30, scope: !5638)
!5790 = !DILocation(line: 1094, column: 13, scope: !5638)
!5791 = !DILocation(line: 0, scope: !5638)
!5792 = !DILocation(line: 1096, column: 11, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 1096, column: 6)
!5794 = !DILocation(line: 1096, column: 16, scope: !5793)
!5795 = !DILocation(line: 1096, column: 19, scope: !5793)
!5796 = !DILocation(line: 1096, column: 6, scope: !5638)
!5797 = !DILocation(line: 1097, column: 11, scope: !5793)
!5798 = !DILocation(line: 1097, column: 4, scope: !5793)
!5799 = !DILocation(line: 1106, column: 3, scope: !5628)
!5800 = !DILocation(line: 1107, column: 1, scope: !5628)
!5801 = distinct !DISubprogram(name: "gt_pch_pa_reg_known_value", scope: !1986, file: !1986, line: 119, type: !5110, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5802)
!5802 = !{!5803, !5804, !5805, !5806, !5807}
!5803 = !DILocalVariable(name: "this_obj", arg: 1, scope: !5801, file: !1986, line: 119, type: !561)
!5804 = !DILocalVariable(name: "x_p", arg: 2, scope: !5801, file: !1986, line: 120, type: !561)
!5805 = !DILocalVariable(name: "op", arg: 3, scope: !5801, file: !1986, line: 121, type: !5112)
!5806 = !DILocalVariable(name: "cookie", arg: 4, scope: !5801, file: !1986, line: 122, type: !561)
!5807 = !DILocalVariable(name: "i0", scope: !5808, file: !1986, line: 125, type: !1159)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !1986, line: 124, column: 32)
!5809 = distinct !DILexicalBlock(scope: !5801, file: !1986, line: 124, column: 7)
!5810 = !DILocation(line: 0, scope: !5801)
!5811 = !DILocation(line: 124, column: 7, scope: !5809)
!5812 = !DILocation(line: 124, column: 23, scope: !5809)
!5813 = !DILocation(line: 124, column: 7, scope: !5801)
!5814 = !DILocation(line: 126, column: 5, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5808, file: !1986, line: 126, column: 5)
!5816 = !DILocation(line: 0, scope: !5815)
!5817 = !DILocation(line: 0, scope: !5808)
!5818 = !DILocation(line: 126, column: 33, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5815, file: !1986, line: 126, column: 5)
!5820 = !DILocation(line: 126, column: 24, scope: !5819)
!5821 = !DILocation(line: 126, column: 21, scope: !5819)
!5822 = !DILocation(line: 127, column: 20, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !1986, line: 127, column: 11)
!5824 = distinct !DILexicalBlock(scope: !5819, file: !1986, line: 126, column: 62)
!5825 = !DILocation(line: 127, column: 37, scope: !5823)
!5826 = !DILocation(line: 127, column: 11, scope: !5824)
!5827 = !DILocation(line: 128, column: 15, scope: !5823)
!5828 = !DILocation(line: 128, column: 13, scope: !5823)
!5829 = !DILocation(line: 128, column: 9, scope: !5823)
!5830 = !DILocation(line: 126, column: 58, scope: !5819)
!5831 = !DILocation(line: 126, column: 5, scope: !5819)
!5832 = distinct !{!5832, !5814, !5833}
!5833 = !DILocation(line: 129, column: 5, scope: !5815)
!5834 = !DILocation(line: 130, column: 36, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5808, file: !1986, line: 130, column: 9)
!5836 = !DILocation(line: 130, column: 9, scope: !5808)
!5837 = !DILocation(line: 131, column: 7, scope: !5835)
!5838 = !DILocation(line: 133, column: 1, scope: !5801)
