; ModuleID = 'tree-ssa-loop-im.bc'
source_filename = "tree-ssa-loop-im.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.anon = type { %struct.htab*, %struct.VEC_mem_ref_p_heap*, %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap*, %struct.VEC_htab_t_heap*, %struct.pointer_map_t* }
%struct.VEC_mem_ref_p_heap = type { %struct.VEC_mem_ref_p_base }
%struct.VEC_mem_ref_p_base = type { i32, i32, [1 x %struct.mem_ref*] }
%struct.mem_ref = type { %union.tree_node*, i32, i32, %struct.bitmap_head_def*, %struct.VEC_mem_ref_locs_p_heap*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_mem_ref_locs_p_heap = type { %struct.VEC_mem_ref_locs_p_base }
%struct.VEC_mem_ref_locs_p_base = type { i32, i32, [1 x %struct.mem_ref_locs*] }
%struct.mem_ref_locs = type { %struct.VEC_mem_ref_loc_p_heap* }
%struct.VEC_mem_ref_loc_p_heap = type { %struct.VEC_mem_ref_loc_p_base }
%struct.VEC_mem_ref_loc_p_base = type { i32, i32, [1 x %struct.mem_ref_loc*] }
%struct.mem_ref_loc = type { %union.tree_node**, %union.gimple_statement_d* }
%struct.VEC_bitmap_heap = type { %struct.VEC_bitmap_base }
%struct.VEC_bitmap_base = type { i32, i32, [1 x %struct.bitmap_head_def*] }
%struct.VEC_htab_t_heap = type { %struct.VEC_htab_t_base }
%struct.VEC_htab_t_base = type { i32, i32, [1 x %struct.htab*] }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.real_value = type { i32, [3 x i64] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.dom_walk_data = type { i8, void (%struct.dom_walk_data*, %struct.basic_block_def*, i8)*, void (%struct.dom_walk_data*, %struct.basic_block_def*)*, void (%struct.dom_walk_data*, %struct.basic_block_def*)*, i8*, %struct.VEC_void_p_heap*, i64, %struct.VEC_void_p_heap* }
%struct.VEC_void_p_heap = type { %struct.VEC_void_p_base }
%struct.VEC_void_p_base = type { i32, i32, [1 x i8*] }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.loop_iterator = type { %struct.VEC_int_heap*, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.lim_aux_data = type { %struct.loop*, %struct.loop*, %struct.loop*, i32, %struct.depend* }
%struct.depend = type { %union.gimple_statement_d*, %struct.depend* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.affine_tree_combination = type { %union.tree_node*, %struct.double_int, i32, [8 x %struct.aff_comb_elt], %union.tree_node* }
%struct.aff_comb_elt = type { %union.tree_node*, %struct.double_int }
%struct.VEC_edge_heap = type { %struct.VEC_edge_base }
%struct.fmt_data = type { %struct.loop*, %struct.loop* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [19 x i8] c"tree-ssa-loop-im.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@flag_unswitch_loops = external dso_local local_unnamed_addr global i32, align 4
@lsm_tmp_name_length = internal unnamed_addr global i32 0, align 4, !dbg !0
@.str.2 = private unnamed_addr constant [5 x i8] c"_lsm\00", align 1
@lsm_tmp_name = internal global [41 x i8] zeroinitializer, align 16, !dbg !2004
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.3 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.4 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"_RE\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"_IM\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"_I\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@lim_aux_data_map = internal unnamed_addr global %struct.pointer_map_t* null, align 8, !dbg !2009
@.str.12 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@memory_accesses = internal global %struct.anon zeroinitializer, align 8, !dbg !2011
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.13 = private unnamed_addr constant [22 x i8] c"Memory reference %u: \00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.15 = private unnamed_addr constant [40 x i8] c"Basic block %d (loop %d -- depth %d):\0A\0A\00", align 1
@flag_unsafe_math_optimizations = external dso_local local_unnamed_addr global i32, align 4
@flag_trapping_math = external dso_local local_unnamed_addr global i32, align 4
@.str.16 = private unnamed_addr constant [39 x i8] c"  invariant up to level %d, cost %d.\0A\0A\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.17 = private unnamed_addr constant [9 x i8] c"reciptmp\00", align 1
@dconst1 = external dso_local global %struct.real_value, align 8
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@.str.18 = private unnamed_addr constant [9 x i8] c"shifttmp\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@.str.20 = private unnamed_addr constant [48 x i8] c"Querying dependencies of ref %u in loop %d: %s\0A\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"independent\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"dependent\00", align 1
@.str.23 = private unnamed_addr constant [40 x i8] c"Querying dependency of refs %u and %u: \00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"dependent.\0A\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"independent.\0A\00", align 1
@optimize = external dso_local local_unnamed_addr global i32, align 4
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.26 = private unnamed_addr constant [27 x i8] c"Executing store motion of \00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c" from loop %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"Moving statement\0A\00", align 1
@.str.29 = private unnamed_addr constant [28 x i8] c"(cost %u) out of loop %d.\0A\0A\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2026 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2039, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2040, metadata !DIExpression()), !dbg !2041
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2042
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2043
  ret i32 %call, !dbg !2044
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2045 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2049
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2050
  ret i32 %call, !dbg !2051
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2052 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2107, metadata !DIExpression()), !dbg !2108
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2109
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2109
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2109
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2109
  %cmp = icmp uge i8* %0, %1, !dbg !2109
  %conv1 = zext i1 %cmp to i64, !dbg !2109
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2109
  %tobool = icmp eq i64 %expval, 0, !dbg !2109
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2109

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2109
  br label %cond.end, !dbg !2109

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2109
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2109
  %2 = load i8, i8* %0, align 1, !dbg !2109
  %conv3 = zext i8 %2 to i32, !dbg !2109
  br label %cond.end, !dbg !2109

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2109
  ret i32 %cond, !dbg !2110
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2111 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2113, metadata !DIExpression()), !dbg !2114
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2115
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2115
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2115
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2115
  %cmp = icmp uge i8* %0, %1, !dbg !2115
  %conv1 = zext i1 %cmp to i64, !dbg !2115
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2115
  %tobool = icmp eq i64 %expval, 0, !dbg !2115
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2115

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2115
  br label %cond.end, !dbg !2115

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2115
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2115
  %2 = load i8, i8* %0, align 1, !dbg !2115
  %conv3 = zext i8 %2 to i32, !dbg !2115
  br label %cond.end, !dbg !2115

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2115
  ret i32 %cond, !dbg !2116
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2117 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2118
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2118
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2118
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2118
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2118
  %cmp = icmp uge i8* %1, %2, !dbg !2118
  %conv1 = zext i1 %cmp to i64, !dbg !2118
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2118
  %tobool = icmp eq i64 %expval, 0, !dbg !2118
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2118

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2118
  br label %cond.end, !dbg !2118

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2118
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2118
  %3 = load i8, i8* %1, align 1, !dbg !2118
  %conv3 = zext i8 %3 to i32, !dbg !2118
  br label %cond.end, !dbg !2118

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2118
  ret i32 %cond, !dbg !2119
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2120 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2124, metadata !DIExpression()), !dbg !2125
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2126
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2127
  ret i32 %call, !dbg !2128
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2129 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2133, metadata !DIExpression()), !dbg !2135
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2134, metadata !DIExpression()), !dbg !2135
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2136
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2136
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2136
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2136
  %cmp = icmp uge i8* %0, %1, !dbg !2136
  %conv1 = zext i1 %cmp to i64, !dbg !2136
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2136
  %tobool = icmp eq i64 %expval, 0, !dbg !2136
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2136

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2136
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2136
  br label %cond.end, !dbg !2136

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2136
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2136
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2136
  store i8 %conv2, i8* %0, align 1, !dbg !2136
  %conv6 = and i32 %__c, 255, !dbg !2136
  br label %cond.end, !dbg !2136

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2136
  ret i32 %cond, !dbg !2137
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2138 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2140, metadata !DIExpression()), !dbg !2142
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2141, metadata !DIExpression()), !dbg !2142
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2143
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2143
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2143
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2143
  %cmp = icmp uge i8* %0, %1, !dbg !2143
  %conv1 = zext i1 %cmp to i64, !dbg !2143
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2143
  %tobool = icmp eq i64 %expval, 0, !dbg !2143
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2143

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2143
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2143
  br label %cond.end, !dbg !2143

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2143
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2143
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2143
  store i8 %conv2, i8* %0, align 1, !dbg !2143
  %conv6 = and i32 %__c, 255, !dbg !2143
  br label %cond.end, !dbg !2143

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2143
  ret i32 %cond, !dbg !2144
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2145 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2147, metadata !DIExpression()), !dbg !2148
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2149
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2149
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2149
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2149
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2149
  %cmp = icmp uge i8* %1, %2, !dbg !2149
  %conv1 = zext i1 %cmp to i64, !dbg !2149
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2149
  %tobool = icmp eq i64 %expval, 0, !dbg !2149
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2149

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2149
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2149
  br label %cond.end, !dbg !2149

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2149
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2149
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2149
  store i8 %conv4, i8* %1, align 1, !dbg !2149
  %conv6 = and i32 %__c, 255, !dbg !2149
  br label %cond.end, !dbg !2149

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2149
  ret i32 %cond, !dbg !2150
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2151 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2157, metadata !DIExpression()), !dbg !2160
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2158, metadata !DIExpression()), !dbg !2160
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2159, metadata !DIExpression()), !dbg !2160
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2161
  ret i64 %call, !dbg !2162
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2163 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2165, metadata !DIExpression()), !dbg !2166
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2167
  %0 = load i32, i32* %_flags, align 8, !dbg !2167
  %and = lshr i32 %0, 4, !dbg !2167
  %and.lobit = and i32 %and, 1, !dbg !2167
  ret i32 %and.lobit, !dbg !2168
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2169 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2171, metadata !DIExpression()), !dbg !2172
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2173
  %0 = load i32, i32* %_flags, align 8, !dbg !2173
  %and = lshr i32 %0, 5, !dbg !2173
  %and.lobit = and i32 %and, 1, !dbg !2173
  ret i32 %and.lobit, !dbg !2174
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2175 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2178, metadata !DIExpression()), !dbg !2179
  %__c.off = add i32 %__c, 128, !dbg !2180
  %0 = icmp ult i32 %__c.off, 384, !dbg !2180
  br i1 %0, label %cond.true, label %cond.end, !dbg !2180

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2181
  %1 = load i32*, i32** %call, align 8, !dbg !2182
  %idxprom = sext i32 %__c to i64, !dbg !2183
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2183
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2183
  br label %cond.end, !dbg !2184

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2184
  ret i32 %cond, !dbg !2185
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2186 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2188, metadata !DIExpression()), !dbg !2189
  %__c.off = add i32 %__c, 128, !dbg !2190
  %0 = icmp ult i32 %__c.off, 384, !dbg !2190
  br i1 %0, label %cond.true, label %cond.end, !dbg !2190

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2191
  %1 = load i32*, i32** %call, align 8, !dbg !2192
  %idxprom = sext i32 %__c to i64, !dbg !2193
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2193
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2193
  br label %cond.end, !dbg !2194

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2194
  ret i32 %cond, !dbg !2195
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2196 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2201, metadata !DIExpression()), !dbg !2202
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2203
  %conv = trunc i64 %call to i32, !dbg !2204
  ret i32 %conv, !dbg !2205
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2206 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2210, metadata !DIExpression()), !dbg !2211
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2212
  ret i64 %call, !dbg !2213
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2214 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2219, metadata !DIExpression()), !dbg !2220
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2221
  ret i64 %call, !dbg !2222
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2223 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2229, metadata !DIExpression()), !dbg !2239
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2230, metadata !DIExpression()), !dbg !2239
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2231, metadata !DIExpression()), !dbg !2239
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2232, metadata !DIExpression()), !dbg !2239
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2233, metadata !DIExpression()), !dbg !2239
  call void @llvm.dbg.value(metadata i64 0, metadata !2234, metadata !DIExpression()), !dbg !2239
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2235, metadata !DIExpression()), !dbg !2239
  br label %while.cond, !dbg !2240

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2241
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2239
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2235, metadata !DIExpression()), !dbg !2239
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2234, metadata !DIExpression()), !dbg !2239
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2242
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2240

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2243
  %div = lshr i64 %add, 1, !dbg !2245
  call void @llvm.dbg.value(metadata i64 %div, metadata !2236, metadata !DIExpression()), !dbg !2239
  %mul = mul i64 %div, %__size, !dbg !2246
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2247
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2237, metadata !DIExpression()), !dbg !2239
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2248
  call void @llvm.dbg.value(metadata i32 %call, metadata !2238, metadata !DIExpression()), !dbg !2239
  %cmp1 = icmp slt i32 %call, 0, !dbg !2249
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2251

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2252
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2254

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2255
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2234, metadata !DIExpression()), !dbg !2239
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2239
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2239
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2235, metadata !DIExpression()), !dbg !2239
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2234, metadata !DIExpression()), !dbg !2239
  br label %while.cond, !dbg !2240, !llvm.loop !2256

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2239
  ret i8* %retval.0, !dbg !2258
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2259 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2265, metadata !DIExpression()), !dbg !2266
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2267
  ret double %call, !dbg !2268
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2269 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2278, metadata !DIExpression()), !dbg !2281
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2279, metadata !DIExpression()), !dbg !2281
  call void @llvm.dbg.value(metadata i32 %base, metadata !2280, metadata !DIExpression()), !dbg !2281
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2282
  ret i64 %call, !dbg !2283
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2284 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2290, metadata !DIExpression()), !dbg !2293
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2291, metadata !DIExpression()), !dbg !2293
  call void @llvm.dbg.value(metadata i32 %base, metadata !2292, metadata !DIExpression()), !dbg !2293
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2294
  ret i64 %call, !dbg !2295
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2296 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2307, metadata !DIExpression()), !dbg !2310
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2308, metadata !DIExpression()), !dbg !2310
  call void @llvm.dbg.value(metadata i32 %base, metadata !2309, metadata !DIExpression()), !dbg !2310
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2311
  ret i64 %call, !dbg !2312
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2313 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2317, metadata !DIExpression()), !dbg !2320
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2318, metadata !DIExpression()), !dbg !2320
  call void @llvm.dbg.value(metadata i32 %base, metadata !2319, metadata !DIExpression()), !dbg !2320
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2321
  ret i64 %call, !dbg !2322
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2323 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2363, metadata !DIExpression()), !dbg !2365
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2364, metadata !DIExpression()), !dbg !2365
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2366
  ret i32 %call, !dbg !2367
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2368 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2370, metadata !DIExpression()), !dbg !2372
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2371, metadata !DIExpression()), !dbg !2372
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2373
  ret i32 %call, !dbg !2374
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2375 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2379, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2380, metadata !DIExpression()), !dbg !2381
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2382
  ret i32 %call, !dbg !2383
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2384 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2388, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2389, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2390, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2391, metadata !DIExpression()), !dbg !2392
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2393
  ret i32 %call, !dbg !2394
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2395 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2399, metadata !DIExpression()), !dbg !2402
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2400, metadata !DIExpression()), !dbg !2402
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2401, metadata !DIExpression()), !dbg !2402
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2401, metadata !DIExpression(DW_OP_deref)), !dbg !2402
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2403
  ret i32 %call, !dbg !2404
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2405 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2409, metadata !DIExpression()), !dbg !2413
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2410, metadata !DIExpression()), !dbg !2413
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2411, metadata !DIExpression()), !dbg !2413
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2412, metadata !DIExpression()), !dbg !2413
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2412, metadata !DIExpression(DW_OP_deref)), !dbg !2413
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2414
  ret i32 %call, !dbg !2415
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2416 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2440, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2441, metadata !DIExpression()), !dbg !2442
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2443
  ret i32 %call, !dbg !2444
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2445 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2447, metadata !DIExpression()), !dbg !2449
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2448, metadata !DIExpression()), !dbg !2449
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2450
  ret i32 %call, !dbg !2451
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2452 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2456, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2457, metadata !DIExpression()), !dbg !2458
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2459
  ret i32 %call, !dbg !2460
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2461 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2465, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2466, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2467, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2468, metadata !DIExpression()), !dbg !2469
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2470
  ret i32 %call, !dbg !2471
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @for_each_index(%union.tree_node** %addr_p, i8 (%union.tree_node*, %union.tree_node**, i8*)* %cbck, i8* %data) local_unnamed_addr #5 !dbg !2472 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %addr_p, metadata !2479, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.value(metadata i8 (%union.tree_node*, %union.tree_node**, i8*)* %cbck, metadata !2480, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.value(metadata i8* %data, metadata !2481, metadata !DIExpression()), !dbg !2484
  br label %for.cond, !dbg !2485

for.cond:                                         ; preds = %for.inc, %entry
  %nxt.0 = phi %union.tree_node** [ undef, %entry ], [ %nxt.1, %for.inc ]
  %addr_p.addr.0 = phi %union.tree_node** [ %addr_p, %entry ], [ %nxt.1, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node** %addr_p.addr.0, metadata !2479, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.value(metadata %union.tree_node** %nxt.0, metadata !2482, metadata !DIExpression()), !dbg !2484
  %0 = bitcast %union.tree_node** %addr_p.addr.0 to i64**, !dbg !2486
  %1 = load i64*, i64** %0, align 8, !dbg !2486
  %bf.load = load i64, i64* %1, align 8, !dbg !2486
  %2 = trunc i64 %bf.load to i16, !dbg !2486
  %3 = bitcast i64* %1 to %struct.tree_exp*, !dbg !2490
  %4 = bitcast i64* %1 to %union.tree_node*, !dbg !2490
  switch i16 %2, label %sw.default [
    i16 141, label %sw.bb
    i16 49, label %sw.bb1
    i16 48, label %sw.bb1
    i16 47, label %sw.bb1
    i16 42, label %sw.bb3
    i16 118, label %sw.bb3
    i16 43, label %sw.bb3
    i16 44, label %sw.bb3
    i16 41, label %sw.bb7
    i16 45, label %sw.bb16
    i16 46, label %sw.bb16
    i16 32, label %cleanup.loopexit
    i16 34, label %cleanup.loopexit
    i16 28, label %cleanup.loopexit
    i16 36, label %cleanup.loopexit
    i16 27, label %cleanup.loopexit
    i16 26, label %cleanup.loopexit
    i16 23, label %cleanup.loopexit
    i16 24, label %cleanup.loopexit
    i16 25, label %cleanup.loopexit
    i16 51, label %cleanup.loopexit
    i16 121, label %sw.bb28
    i16 152, label %sw.bb31
  ], !dbg !2490

sw.bb:                                            ; preds = %for.cond
  %addr_p.addr.0.lcssa = phi %union.tree_node** [ %addr_p.addr.0, %for.cond ]
  %.lcssa = phi %union.tree_node* [ %4, %for.cond ], !dbg !2490
  call void @llvm.dbg.value(metadata %union.tree_node** %addr_p.addr.0.lcssa, metadata !2479, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.value(metadata %union.tree_node** %addr_p.addr.0.lcssa, metadata !2479, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.value(metadata %union.tree_node** %addr_p.addr.0.lcssa, metadata !2479, metadata !DIExpression()), !dbg !2484
  %call = tail call zeroext i8 %cbck(%union.tree_node* %.lcssa, %union.tree_node** %addr_p.addr.0.lcssa, i8* %data) #6, !dbg !2491
  br label %cleanup, !dbg !2493

sw.bb1:                                           ; preds = %for.cond, %for.cond, %for.cond
  %.lcssa30 = phi i64* [ %1, %for.cond ], [ %1, %for.cond ], [ %1, %for.cond ], !dbg !2486
  %arrayidx = getelementptr inbounds i64, i64* %.lcssa30, i64 5, !dbg !2494
  %5 = bitcast i64* %arrayidx to %union.tree_node**, !dbg !2494
  call void @llvm.dbg.value(metadata %union.tree_node** %5, metadata !2482, metadata !DIExpression()), !dbg !2484
  %.cast1 = bitcast i64* %.lcssa30 to %union.tree_node*, !dbg !2495
  %call2 = tail call zeroext i8 %cbck(%union.tree_node* %.cast1, %union.tree_node** nonnull %5, i8* %data) #6, !dbg !2496
  br label %cleanup, !dbg !2497

sw.bb3:                                           ; preds = %for.cond, %for.cond, %for.cond, %for.cond
  %arrayidx6 = getelementptr inbounds i64, i64* %1, i64 5, !dbg !2498
  %6 = bitcast i64* %arrayidx6 to %union.tree_node**, !dbg !2498
  call void @llvm.dbg.value(metadata %union.tree_node** %6, metadata !2482, metadata !DIExpression()), !dbg !2484
  br label %for.inc, !dbg !2499

sw.bb7:                                           ; preds = %for.cond
  %7 = bitcast %union.tree_node** %addr_p.addr.0 to %struct.tree_exp**, !dbg !2500
  %arrayidx10 = getelementptr inbounds i64, i64* %1, i64 7, !dbg !2500
  %8 = bitcast i64* %arrayidx10 to %union.tree_node**, !dbg !2500
  call void @llvm.dbg.value(metadata %union.tree_node** %8, metadata !2483, metadata !DIExpression()), !dbg !2484
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !2501
  %tobool = icmp eq %union.tree_node* %9, null, !dbg !2501
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !2503

land.lhs.true:                                    ; preds = %sw.bb7
  %call11 = tail call zeroext i8 %cbck(%union.tree_node* %4, %union.tree_node** nonnull %8, i8* %data) #6, !dbg !2504
  %tobool12 = icmp eq i8 %call11, 0, !dbg !2504
  br i1 %tobool12, label %cleanup.loopexit, label %land.lhs.true.if.end_crit_edge, !dbg !2505

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  %.pre6 = load %struct.tree_exp*, %struct.tree_exp** %7, align 8, !dbg !2506
  br label %if.end, !dbg !2505

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %sw.bb7
  %10 = phi %struct.tree_exp* [ %.pre6, %land.lhs.true.if.end_crit_edge ], [ %3, %sw.bb7 ], !dbg !2506
  %arrayidx15 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 0, !dbg !2506
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx15, metadata !2482, metadata !DIExpression()), !dbg !2484
  br label %for.inc, !dbg !2507

sw.bb16:                                          ; preds = %for.cond, %for.cond
  %arrayidx19 = getelementptr inbounds i64, i64* %1, i64 5, !dbg !2508
  %11 = bitcast i64* %arrayidx19 to %union.tree_node**, !dbg !2508
  call void @llvm.dbg.value(metadata %union.tree_node** %11, metadata !2482, metadata !DIExpression()), !dbg !2484
  %.cast = bitcast i64* %1 to %union.tree_node*, !dbg !2509
  %arrayidx22 = getelementptr inbounds i64, i64* %1, i64 6, !dbg !2511
  %12 = bitcast i64* %arrayidx22 to %union.tree_node**, !dbg !2511
  %call23 = tail call zeroext i8 %cbck(%union.tree_node* %.cast, %union.tree_node** nonnull %12, i8* %data) #6, !dbg !2512
  %tobool24 = icmp eq i8 %call23, 0, !dbg !2512
  br i1 %tobool24, label %cleanup.loopexit, label %for.inc, !dbg !2513

sw.bb28:                                          ; preds = %for.cond
  %.lcssa22 = phi %union.tree_node* [ %4, %for.cond ], !dbg !2490
  %call29 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %.lcssa22) #6, !dbg !2514
  %tobool30 = icmp eq i8 %call29, 0, !dbg !2514
  br i1 %tobool30, label %cond.true, label %cleanup, !dbg !2514

cond.true:                                        ; preds = %sw.bb28
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i32 321, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2514
  br label %cleanup, !dbg !2514

sw.bb31:                                          ; preds = %for.cond
  %addr_p.addr.0.lcssa37 = phi %union.tree_node** [ %addr_p.addr.0, %for.cond ]
  %.lcssa33 = phi i64* [ %1, %for.cond ], !dbg !2486
  %.lcssa28 = phi %struct.tree_exp* [ %3, %for.cond ], !dbg !2490
  %.lcssa23 = phi %union.tree_node* [ %4, %for.cond ], !dbg !2490
  call void @llvm.dbg.value(metadata %union.tree_node** %addr_p.addr.0.lcssa37, metadata !2479, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.value(metadata %union.tree_node** %addr_p.addr.0.lcssa37, metadata !2479, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.value(metadata %union.tree_node** %addr_p.addr.0.lcssa37, metadata !2479, metadata !DIExpression()), !dbg !2484
  %13 = bitcast %union.tree_node** %addr_p.addr.0.lcssa37 to %struct.tree_exp**, !dbg !2515
  %arrayidx34 = getelementptr inbounds i64, i64* %.lcssa33, i64 6, !dbg !2515
  %14 = bitcast i64* %arrayidx34 to %union.tree_node**, !dbg !2515
  call void @llvm.dbg.value(metadata %union.tree_node** %14, metadata !2483, metadata !DIExpression()), !dbg !2484
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !2516
  %tobool35 = icmp eq %union.tree_node* %15, null, !dbg !2516
  br i1 %tobool35, label %if.end40, label %land.lhs.true36, !dbg !2518

land.lhs.true36:                                  ; preds = %sw.bb31
  %call37 = tail call zeroext i8 %cbck(%union.tree_node* %.lcssa23, %union.tree_node** nonnull %14, i8* %data) #6, !dbg !2519
  %tobool38 = icmp eq i8 %call37, 0, !dbg !2519
  br i1 %tobool38, label %cleanup, label %land.lhs.true36.if.end40_crit_edge, !dbg !2520

land.lhs.true36.if.end40_crit_edge:               ; preds = %land.lhs.true36
  %.pre = load %struct.tree_exp*, %struct.tree_exp** %13, align 8, !dbg !2521
  %16 = bitcast %struct.tree_exp* %.pre to %union.tree_node*, !dbg !2520
  br label %if.end40, !dbg !2520

if.end40:                                         ; preds = %land.lhs.true36.if.end40_crit_edge, %sw.bb31
  %17 = phi %union.tree_node* [ %16, %land.lhs.true36.if.end40_crit_edge ], [ %.lcssa23, %sw.bb31 ]
  %18 = phi %struct.tree_exp* [ %.pre, %land.lhs.true36.if.end40_crit_edge ], [ %.lcssa28, %sw.bb31 ], !dbg !2521
  %arrayidx43 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %18, i64 0, i32 3, i64 2, !dbg !2521
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx43, metadata !2483, metadata !DIExpression()), !dbg !2484
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx43, align 8, !dbg !2522
  %tobool44 = icmp eq %union.tree_node* %19, null, !dbg !2522
  br i1 %tobool44, label %if.end49, label %land.lhs.true45, !dbg !2524

land.lhs.true45:                                  ; preds = %if.end40
  %call46 = tail call zeroext i8 %cbck(%union.tree_node* %17, %union.tree_node** nonnull %arrayidx43, i8* %data) #6, !dbg !2525
  %tobool47 = icmp eq i8 %call46, 0, !dbg !2525
  br i1 %tobool47, label %cleanup, label %if.end49, !dbg !2526

if.end49:                                         ; preds = %land.lhs.true45, %if.end40
  br label %cleanup, !dbg !2527

sw.default:                                       ; preds = %for.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i32 336, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2528
  br label %for.inc, !dbg !2529

for.inc:                                          ; preds = %sw.bb16, %sw.bb3, %if.end, %sw.default
  %nxt.1 = phi %union.tree_node** [ %nxt.0, %sw.default ], [ %arrayidx15, %if.end ], [ %6, %sw.bb3 ], [ %11, %sw.bb16 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %nxt.1, metadata !2482, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.value(metadata %union.tree_node** %nxt.1, metadata !2479, metadata !DIExpression()), !dbg !2484
  br label %for.cond, !dbg !2530, !llvm.loop !2531

cleanup.loopexit:                                 ; preds = %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %sw.bb16, %land.lhs.true
  %retval.0.ph = phi i8 [ 1, %for.cond ], [ 1, %for.cond ], [ 1, %for.cond ], [ 1, %for.cond ], [ 1, %for.cond ], [ 1, %for.cond ], [ 1, %for.cond ], [ 1, %for.cond ], [ 1, %for.cond ], [ 1, %for.cond ], [ 0, %sw.bb16 ], [ 0, %land.lhs.true ]
  br label %cleanup, !dbg !2534

cleanup:                                          ; preds = %cleanup.loopexit, %sw.bb28, %land.lhs.true36, %land.lhs.true45, %cond.true, %if.end49, %sw.bb1, %sw.bb
  %retval.0 = phi i8 [ 1, %if.end49 ], [ %call2, %sw.bb1 ], [ %call, %sw.bb ], [ 1, %sw.bb28 ], [ 1, %cond.true ], [ 0, %land.lhs.true36 ], [ 0, %land.lhs.true45 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !2535
  ret i8 %retval.0, !dbg !2534
}

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @movement_possibility(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !2536 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2540, metadata !DIExpression()), !dbg !2543
  call void @llvm.dbg.value(metadata i32 2, metadata !2542, metadata !DIExpression()), !dbg !2543
  %0 = load i32, i32* @flag_unswitch_loops, align 4, !dbg !2544
  %tobool = icmp eq i32 %0, 0, !dbg !2544
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !2546

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !2547
  %cmp = icmp eq i32 %call, 1, !dbg !2548
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2549

if.end:                                           ; preds = %entry, %land.lhs.true
  %call1 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !2550
  %cmp2 = icmp eq %union.tree_node* %call1, null, !dbg !2552
  br i1 %cmp2, label %cleanup, label %if.end4, !dbg !2553

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !2554
  %tobool6 = icmp eq %union.tree_node* %call5, null, !dbg !2554
  br i1 %tobool6, label %if.end8, label %cleanup, !dbg !2556

if.end8:                                          ; preds = %if.end4
  %call9 = tail call zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d* %stmt) #6, !dbg !2557
  %tobool10 = icmp eq i8 %call9, 0, !dbg !2557
  br i1 %tobool10, label %lor.lhs.false, label %cleanup, !dbg !2559

lor.lhs.false:                                    ; preds = %if.end8
  %call11 = tail call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) #7, !dbg !2560
  %tobool13 = icmp eq i8 %call11, 0, !dbg !2560
  br i1 %tobool13, label %lor.lhs.false14, label %cleanup, !dbg !2561

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %call15 = tail call zeroext i8 @gimple_has_side_effects(%union.gimple_statement_d* %stmt) #6, !dbg !2562
  %tobool17 = icmp eq i8 %call15, 0, !dbg !2562
  br i1 %tobool17, label %lor.lhs.false18, label %cleanup, !dbg !2563

lor.lhs.false18:                                  ; preds = %lor.lhs.false14
  %call19 = tail call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %stmt) #6, !dbg !2564
  %tobool21 = icmp eq i8 %call19, 0, !dbg !2564
  br i1 %tobool21, label %if.end23, label %cleanup, !dbg !2565

if.end23:                                         ; preds = %lor.lhs.false18
  %call24 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !2566
  %tobool25 = icmp eq i8 %call24, 0, !dbg !2566
  br i1 %tobool25, label %if.else, label %if.then26, !dbg !2568

if.then26:                                        ; preds = %if.end23
  call void @llvm.dbg.value(metadata i32 1, metadata !2542, metadata !DIExpression()), !dbg !2543
  %call27 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !2569
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !2541, metadata !DIExpression()), !dbg !2543
  br label %if.end34, !dbg !2571

if.else:                                          ; preds = %if.end23
  %call28 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !2572
  %tobool29 = icmp eq i8 %call28, 0, !dbg !2572
  br i1 %tobool29, label %cleanup, label %if.then30, !dbg !2574

if.then30:                                        ; preds = %if.else
  %call31 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !2575
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !2541, metadata !DIExpression()), !dbg !2543
  br label %if.end34

if.end34:                                         ; preds = %if.then30, %if.then26
  %ret.0 = phi i32 [ 1, %if.then26 ], [ 2, %if.then30 ], !dbg !2543
  %lhs.0 = phi %union.tree_node* [ %call27, %if.then26 ], [ %call31, %if.then30 ], !dbg !2576
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.0, metadata !2541, metadata !DIExpression()), !dbg !2543
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !2542, metadata !DIExpression()), !dbg !2543
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2577
  %bf.load = load i64, i64* %1, align 8, !dbg !2577
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2579
  %cmp35 = icmp eq i64 %bf.cast1, 141, !dbg !2579
  br i1 %cmp35, label %land.lhs.true37, label %if.end44, !dbg !2580

land.lhs.true37:                                  ; preds = %if.end34
  %bf.cast413 = and i64 %bf.load, 4194304, !dbg !2581
  %tobool42 = icmp eq i64 %bf.cast413, 0, !dbg !2581
  br i1 %tobool42, label %if.end44, label %cleanup, !dbg !2582

if.end44:                                         ; preds = %land.lhs.true37, %if.end34
  br i1 %cmp35, label %lor.lhs.false51, label %cleanup, !dbg !2583

lor.lhs.false51:                                  ; preds = %if.end44
  %call52 = tail call zeroext i8 @gimple_could_trap_p(%union.gimple_statement_d* %stmt) #6, !dbg !2585
  %tobool54 = icmp eq i8 %call52, 0, !dbg !2585
  %spec.select = select i1 %tobool54, i32 %ret.0, i32 1, !dbg !2586
  ret i32 %spec.select, !dbg !2586

cleanup:                                          ; preds = %land.lhs.true37, %if.end44, %if.else, %lor.lhs.false18, %lor.lhs.false14, %lor.lhs.false, %if.end8, %if.end4, %if.end, %land.lhs.true
  %retval.0 = phi i32 [ 2, %land.lhs.true ], [ 0, %if.end ], [ 0, %if.end4 ], [ 0, %lor.lhs.false18 ], [ 0, %lor.lhs.false14 ], [ 0, %lor.lhs.false ], [ 0, %if.end8 ], [ 0, %if.else ], [ 0, %land.lhs.true37 ], [ 1, %if.end44 ], !dbg !2543
  ret i32 %retval.0, !dbg !2587
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2588 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2593, metadata !DIExpression()), !dbg !2594
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !2595
  %bf.load = load i32, i32* %0, align 8, !dbg !2595
  %bf.clear = and i32 %bf.load, 255, !dbg !2595
  ret i32 %bf.clear, !dbg !2596
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2597 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2601, metadata !DIExpression()), !dbg !2602
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !2603
  %tobool = icmp eq i8 %call, 0, !dbg !2603
  br i1 %tobool, label %return, label %if.end, !dbg !2605

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !2606
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !2606
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !2606
  br label %return, !dbg !2607

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !2602
  ret %union.tree_node* %retval.0, !dbg !2608
}

declare dso_local zeroext i8 @stmt_ends_bb_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !2609 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2613, metadata !DIExpression()), !dbg !2614
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #7, !dbg !2615
  %tobool = icmp eq i8 %call, 0, !dbg !2615
  br i1 %tobool, label %return, label %if.then, !dbg !2617

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !2618
  %bf.load = load i32, i32* %0, align 8, !dbg !2618
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !2618
  %1 = trunc i32 %bf.lshr to i8, !dbg !2619
  %conv = and i8 %1, 1, !dbg !2619
  br label %return, !dbg !2620

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv, %if.then ], [ 0, %entry ], !dbg !2621
  ret i8 %retval.0, !dbg !2622
}

declare dso_local zeroext i8 @gimple_has_side_effects(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2623 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2625, metadata !DIExpression()), !dbg !2626
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !2627
  %cmp = icmp eq i32 %call, 8, !dbg !2628
  %conv1 = zext i1 %cmp to i8, !dbg !2627
  ret i8 %conv1, !dbg !2629
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2630 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2632, metadata !DIExpression()), !dbg !2633
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !2634
  ret %union.tree_node* %call, !dbg !2635
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2636 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2638, metadata !DIExpression()), !dbg !2639
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !2640
  %cmp = icmp eq i32 %call, 6, !dbg !2641
  %conv1 = zext i1 %cmp to i8, !dbg !2640
  ret i8 %conv1, !dbg !2642
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2643 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2645, metadata !DIExpression()), !dbg !2646
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !2647
  ret %union.tree_node* %call, !dbg !2648
}

declare dso_local zeroext i8 @gimple_could_trap_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i8* @get_lsm_tmp_name(%union.tree_node* %ref, i32 %n) local_unnamed_addr #5 !dbg !2649 {
entry:
  %ns = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !2653, metadata !DIExpression()), !dbg !2657
  call void @llvm.dbg.value(metadata i32 %n, metadata !2654, metadata !DIExpression()), !dbg !2657
  %0 = getelementptr inbounds [2 x i8], [2 x i8]* %ns, i64 0, i64 0, !dbg !2658
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %0) #8, !dbg !2658
  call void @llvm.dbg.declare(metadata [2 x i8]* %ns, metadata !2655, metadata !DIExpression()), !dbg !2659
  store i32 0, i32* @lsm_tmp_name_length, align 4, !dbg !2660
  tail call fastcc void @gen_lsm_tmp_name(%union.tree_node* %ref) #7, !dbg !2661
  tail call fastcc void @lsm_tmp_name_add(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #7, !dbg !2662
  %cmp = icmp ult i32 %n, 10, !dbg !2663
  br i1 %cmp, label %if.then, label %if.end, !dbg !2665

if.then:                                          ; preds = %entry
  %1 = trunc i32 %n to i8, !dbg !2666
  %conv = add i8 %1, 48, !dbg !2666
  store i8 %conv, i8* %0, align 1, !dbg !2668
  %arrayidx1 = getelementptr inbounds [2 x i8], [2 x i8]* %ns, i64 0, i64 1, !dbg !2669
  store i8 0, i8* %arrayidx1, align 1, !dbg !2670
  call fastcc void @lsm_tmp_name_add(i8* nonnull %0) #7, !dbg !2671
  br label %if.end, !dbg !2672

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %0) #8, !dbg !2673
  ret i8* getelementptr inbounds ([41 x i8], [41 x i8]* @lsm_tmp_name, i64 0, i64 0), !dbg !2674
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_lsm_tmp_name(%union.tree_node* %ref) unnamed_addr #5 !dbg !2675 {
entry:
  br label %tailrecurse, !dbg !2681

tailrecurse:                                      ; preds = %sw.bb1, %entry
  %ref.tr = phi %union.tree_node* [ %ref, %entry ], [ %3, %sw.bb1 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr, metadata !2679, metadata !DIExpression()), !dbg !2683
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2684
  %bf.load = load i64, i64* %0, align 8, !dbg !2684
  %1 = trunc i64 %bf.load to i16, !dbg !2684
  switch i16 %1, label %sw.default [
    i16 49, label %sw.bb
    i16 48, label %sw.bb
    i16 47, label %sw.bb
    i16 42, label %sw.bb1
    i16 118, label %sw.bb1
    i16 46, label %sw.bb1
    i16 43, label %sw.bb5
    i16 44, label %sw.bb9
    i16 41, label %sw.bb13
    i16 45, label %sw.bb20
    i16 141, label %sw.bb24
    i16 32, label %sw.bb25.loopexit
    i16 34, label %sw.bb25.loopexit
    i16 28, label %sw.bb30
    i16 36, label %sw.bb31
    i16 23, label %sw.epilog.loopexit
  ], !dbg !2685

sw.bb:                                            ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %ref.tr.lcssa22 = phi %union.tree_node* [ %ref.tr, %tailrecurse ], [ %ref.tr, %tailrecurse ], [ %ref.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa22, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa22, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa22, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa22, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa22, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa22, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa22, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa22, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa22, metadata !2679, metadata !DIExpression()), !dbg !2683
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr.lcssa22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2686
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !2686
  tail call fastcc void @gen_lsm_tmp_name(%union.tree_node* %2) #7, !dbg !2687
  tail call fastcc void @lsm_tmp_name_add(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #7, !dbg !2688
  ret void, !dbg !2689

sw.bb1:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %operands3 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2690
  %3 = load %union.tree_node*, %union.tree_node** %operands3, align 8, !dbg !2690
  br label %tailrecurse, !dbg !2681

sw.bb5:                                           ; preds = %tailrecurse
  %ref.tr.lcssa23 = phi %union.tree_node* [ %ref.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa23, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa23, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa23, metadata !2679, metadata !DIExpression()), !dbg !2683
  %operands7 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr.lcssa23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2691
  %4 = load %union.tree_node*, %union.tree_node** %operands7, align 8, !dbg !2691
  tail call fastcc void @gen_lsm_tmp_name(%union.tree_node* %4) #7, !dbg !2692
  tail call fastcc void @lsm_tmp_name_add(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #7, !dbg !2693
  ret void, !dbg !2689

sw.bb9:                                           ; preds = %tailrecurse
  %ref.tr.lcssa24 = phi %union.tree_node* [ %ref.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa24, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa24, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa24, metadata !2679, metadata !DIExpression()), !dbg !2683
  %operands11 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr.lcssa24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2694
  %5 = load %union.tree_node*, %union.tree_node** %operands11, align 8, !dbg !2694
  tail call fastcc void @gen_lsm_tmp_name(%union.tree_node* %5) #7, !dbg !2695
  tail call fastcc void @lsm_tmp_name_add(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)) #7, !dbg !2696
  ret void, !dbg !2689

sw.bb13:                                          ; preds = %tailrecurse
  %ref.tr.lcssa25 = phi %union.tree_node* [ %ref.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa25, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa25, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa25, metadata !2679, metadata !DIExpression()), !dbg !2683
  %operands15 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr.lcssa25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2697
  %6 = load %union.tree_node*, %union.tree_node** %operands15, align 8, !dbg !2697
  tail call fastcc void @gen_lsm_tmp_name(%union.tree_node* %6) #7, !dbg !2698
  tail call fastcc void @lsm_tmp_name_add(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #7, !dbg !2699
  %arrayidx19 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands15, i64 1, !dbg !2700
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx19, align 8, !dbg !2700
  %call = tail call i8* @get_name(%union.tree_node* %7) #6, !dbg !2701
  call void @llvm.dbg.value(metadata i8* %call, metadata !2680, metadata !DIExpression()), !dbg !2683
  %tobool = icmp eq i8* %call, null, !dbg !2702
  %spec.select = select i1 %tobool, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8* %call, !dbg !2704
  call void @llvm.dbg.value(metadata i8* %spec.select, metadata !2680, metadata !DIExpression()), !dbg !2683
  tail call fastcc void @lsm_tmp_name_add(i8* %spec.select) #7, !dbg !2705
  ret void, !dbg !2689

sw.bb20:                                          ; preds = %tailrecurse
  %ref.tr.lcssa26 = phi %union.tree_node* [ %ref.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa26, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa26, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa26, metadata !2679, metadata !DIExpression()), !dbg !2683
  %operands22 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr.lcssa26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2706
  %8 = load %union.tree_node*, %union.tree_node** %operands22, align 8, !dbg !2706
  tail call fastcc void @gen_lsm_tmp_name(%union.tree_node* %8) #7, !dbg !2707
  tail call fastcc void @lsm_tmp_name_add(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !2708
  ret void, !dbg !2689

sw.bb24:                                          ; preds = %tailrecurse
  %ref.tr.lcssa27 = phi %union.tree_node* [ %ref.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa27, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa27, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa27, metadata !2679, metadata !DIExpression()), !dbg !2683
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr.lcssa27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2709
  %9 = bitcast i32* %var to %union.tree_node**, !dbg !2709
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !2709
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !2679, metadata !DIExpression()), !dbg !2683
  br label %sw.bb25, !dbg !2710

sw.bb25.loopexit:                                 ; preds = %tailrecurse, %tailrecurse
  %ref.tr.lcssa28 = phi %union.tree_node* [ %ref.tr, %tailrecurse ], [ %ref.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa28, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa28, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa28, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa28, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa28, metadata !2679, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa28, metadata !2679, metadata !DIExpression()), !dbg !2683
  br label %sw.bb25, !dbg !2711

sw.bb25:                                          ; preds = %sw.bb25.loopexit, %sw.bb24
  %ref.addr.0 = phi %union.tree_node* [ %10, %sw.bb24 ], [ %ref.tr.lcssa28, %sw.bb25.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.addr.0, metadata !2679, metadata !DIExpression()), !dbg !2683
  %call26 = tail call i8* @get_name(%union.tree_node* %ref.addr.0) #6, !dbg !2711
  call void @llvm.dbg.value(metadata i8* %call26, metadata !2680, metadata !DIExpression()), !dbg !2683
  %tobool27 = icmp eq i8* %call26, null, !dbg !2712
  %spec.select1 = select i1 %tobool27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i8* %call26, !dbg !2714
  call void @llvm.dbg.value(metadata i8* %spec.select1, metadata !2680, metadata !DIExpression()), !dbg !2683
  tail call fastcc void @lsm_tmp_name_add(i8* %spec.select1) #7, !dbg !2715
  br label %sw.epilog, !dbg !2716

sw.bb30:                                          ; preds = %tailrecurse
  tail call fastcc void @lsm_tmp_name_add(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #7, !dbg !2717
  br label %sw.epilog, !dbg !2718

sw.bb31:                                          ; preds = %tailrecurse
  tail call fastcc void @lsm_tmp_name_add(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #7, !dbg !2719
  br label %sw.epilog, !dbg !2720

sw.default:                                       ; preds = %tailrecurse
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i32 1812, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2721
  br label %sw.epilog, !dbg !2722

sw.epilog.loopexit:                               ; preds = %tailrecurse
  br label %sw.epilog, !dbg !2689

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default, %sw.bb31, %sw.bb30, %sw.bb25
  ret void, !dbg !2689
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lsm_tmp_name_add(i8* %s) unnamed_addr #5 !dbg !2723 {
entry:
  call void @llvm.dbg.value(metadata i8* %s, metadata !2727, metadata !DIExpression()), !dbg !2729
  %call = tail call i64 @strlen(i8* %s) #6, !dbg !2730
  %0 = load i32, i32* @lsm_tmp_name_length, align 4, !dbg !2731
  %1 = trunc i64 %call to i32, !dbg !2730
  %conv1 = add i32 %0, %1, !dbg !2730
  call void @llvm.dbg.value(metadata i32 %conv1, metadata !2728, metadata !DIExpression()), !dbg !2729
  %cmp = icmp sgt i32 %conv1, 40, !dbg !2732
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !2734

if.end:                                           ; preds = %entry
  %idx.ext = sext i32 %0 to i64, !dbg !2735
  %add.ptr = getelementptr inbounds [41 x i8], [41 x i8]* @lsm_tmp_name, i64 0, i64 %idx.ext, !dbg !2735
  %call3 = tail call i8* @strcpy(i8* nonnull %add.ptr, i8* %s) #6, !dbg !2736
  store i32 %conv1, i32* @lsm_tmp_name_length, align 4, !dbg !2737
  br label %cleanup.cont, !dbg !2738

cleanup.cont:                                     ; preds = %if.end, %entry
  ret void, !dbg !2738
}

; Function Attrs: nounwind uwtable
define dso_local void @tree_ssa_lim() local_unnamed_addr #5 !dbg !2739 {
entry:
  tail call fastcc void @tree_ssa_lim_initialize() #7, !dbg !2742
  tail call fastcc void @analyze_memory_references() #7, !dbg !2743
  tail call fastcc void @determine_invariantness() #7, !dbg !2744
  tail call fastcc void @store_motion() #7, !dbg !2745
  tail call fastcc void @move_computations() #7, !dbg !2746
  tail call fastcc void @tree_ssa_lim_finalize() #7, !dbg !2747
  ret void, !dbg !2748
}

; Function Attrs: nounwind uwtable
define internal fastcc void @tree_ssa_lim_initialize() unnamed_addr #5 !dbg !2749 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2771
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2771
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2771
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !2771
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !2771
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %2) #6, !dbg !2772
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !2751, metadata !DIExpression()), !dbg !2773
  %3 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !2774
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !2774
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !2775
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2776
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !2776
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !2776
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !2776
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2776
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !2778
  br label %for.cond, !dbg !2776

for.cond:                                         ; preds = %for.inc15, %entry
  %8 = phi %struct.control_flow_graph* [ %5, %entry ], [ %.pre1, %for.inc15 ], !dbg !2782
  %9 = phi %struct.function* [ %4, %entry ], [ %.pre, %for.inc15 ], !dbg !2782
  %.pn = phi %struct.basic_block_def* [ %6, %entry ], [ %bb.0, %for.inc15 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2783
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2783
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2770, metadata !DIExpression()), !dbg !2773
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !2782
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2782
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %10, !dbg !2782
  br i1 %cmp, label %for.end17, label %for.body, !dbg !2776

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !2784
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !2784
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !2784
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !2784
  br label %for.cond5, !dbg !2785

for.cond5:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !2762, metadata !DIExpression(DW_OP_deref)), !dbg !2773
  %call6 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !2786
  %tobool = icmp eq i8 %call6, 0, !dbg !2788
  br i1 %tobool, label %for.body7, label %for.end, !dbg !2789

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !2762, metadata !DIExpression(DW_OP_deref)), !dbg !2773
  %call8 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !2790
  %call9 = call fastcc zeroext i8 @nonpure_call_p(%union.gimple_statement_d* %call8) #7, !dbg !2793
  %tobool10 = icmp eq i8 %call9, 0, !dbg !2793
  br i1 %tobool10, label %for.inc, label %for.end, !dbg !2794

for.inc:                                          ; preds = %for.body7
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !2762, metadata !DIExpression(DW_OP_deref)), !dbg !2773
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !2795
  br label %for.cond5, !dbg !2796, !llvm.loop !2797

for.end:                                          ; preds = %for.body7, %for.cond5
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !2762, metadata !DIExpression(DW_OP_deref)), !dbg !2773
  %call11 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !2799
  %tobool12 = icmp eq i8 %call11, 0, !dbg !2799
  br i1 %tobool12, label %if.then13, label %for.inc15, !dbg !2801

if.then13:                                        ; preds = %for.end
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !2802
  %11 = load i32, i32* %index, align 8, !dbg !2802
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call, i32 %11) #7, !dbg !2803
  br label %for.inc15, !dbg !2803

for.inc15:                                        ; preds = %for.end, %if.then13
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2782
  %cfg4.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !2804
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4.phi.trans.insert, align 8, !dbg !2782
  br label %for.cond, !dbg !2782, !llvm.loop !2805

for.end17:                                        ; preds = %for.cond
  %.lcssa = phi %struct.function* [ %9, %for.cond ], !dbg !2782
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %.lcssa, i64 0, i32 4, !dbg !2807
  %12 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !2807
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %12, i64 0, i32 3, !dbg !2809
  %13 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !2809
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %13, i64 0, i32 8, !dbg !2810
  br label %for.cond19, !dbg !2811

for.cond19:                                       ; preds = %for.body21, %for.end17
  %loop.0.in = phi %struct.loop** [ %inner, %for.end17 ], [ %next, %for.body21 ]
  %loop.0 = load %struct.loop*, %struct.loop** %loop.0.in, align 8, !dbg !2812
  call void @llvm.dbg.value(metadata %struct.loop* %loop.0, metadata !2769, metadata !DIExpression()), !dbg !2773
  %tobool20 = icmp eq %struct.loop* %loop.0, null, !dbg !2813
  br i1 %tobool20, label %for.end23, label %for.body21, !dbg !2813

for.body21:                                       ; preds = %for.cond19
  call fastcc void @fill_always_executed_in(%struct.loop* nonnull %loop.0, %struct.simple_bitmap_def* %call) #7, !dbg !2814
  %next = getelementptr inbounds %struct.loop, %struct.loop* %loop.0, i64 0, i32 9, !dbg !2816
  br label %for.cond19, !dbg !2817, !llvm.loop !2818

for.end23:                                        ; preds = %for.cond19
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !2820
  %14 = load i8*, i8** %popcount, align 8, !dbg !2820
  call void @free(i8* %14) #6, !dbg !2820
  %15 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !2820
  call void @free(i8* %15) #6, !dbg !2820
  %call24 = call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !2821
  store %struct.pointer_map_t* %call24, %struct.pointer_map_t** @lim_aux_data_map, align 8, !dbg !2822
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !2823
  ret void, !dbg !2823
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_memory_references() unnamed_addr #5 !dbg !2824 {
entry:
  %call = tail call %struct.htab* @htab_create(i64 100, i32 (i8*)* nonnull @memref_hash, i32 (i8*, i8*)* nonnull @memref_eq, void (i8*)* nonnull @memref_free) #6, !dbg !2829
  store %struct.htab* %call, %struct.htab** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 0), align 8, !dbg !2830
  store %struct.VEC_mem_ref_p_heap* null, %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), align 8, !dbg !2831
  %call1 = tail call fastcc i32 @number_of_loops() #7, !dbg !2832
  %call2 = tail call fastcc %struct.VEC_bitmap_heap* @VEC_bitmap_heap_alloc(i32 %call1) #7, !dbg !2832
  store %struct.VEC_bitmap_heap* %call2, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 2), align 8, !dbg !2833
  %call3 = tail call fastcc i32 @number_of_loops() #7, !dbg !2834
  %call4 = tail call fastcc %struct.VEC_bitmap_heap* @VEC_bitmap_heap_alloc(i32 %call3) #7, !dbg !2834
  store %struct.VEC_bitmap_heap* %call4, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 3), align 8, !dbg !2835
  %call5 = tail call fastcc i32 @number_of_loops() #7, !dbg !2836
  %call6 = tail call fastcc %struct.VEC_bitmap_heap* @VEC_bitmap_heap_alloc(i32 %call5) #7, !dbg !2836
  store %struct.VEC_bitmap_heap* %call6, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 4), align 8, !dbg !2837
  %call7 = tail call fastcc i32 @number_of_loops() #7, !dbg !2838
  %call8 = tail call fastcc %struct.VEC_htab_t_heap* @VEC_htab_t_heap_alloc(i32 %call7) #7, !dbg !2838
  store %struct.VEC_htab_t_heap* %call8, %struct.VEC_htab_t_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 5), align 8, !dbg !2839
  call void @llvm.dbg.value(metadata i32 0, metadata !2826, metadata !DIExpression()), !dbg !2840
  br label %for.cond, !dbg !2841

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2843
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2826, metadata !DIExpression()), !dbg !2840
  %call9 = tail call fastcc i32 @number_of_loops() #7, !dbg !2844
  %cmp = icmp ult i32 %i.0, %call9, !dbg !2846
  br i1 %cmp, label %for.body, label %for.end, !dbg !2847

for.body:                                         ; preds = %for.cond
  %call10 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2848
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call10, metadata !2827, metadata !DIExpression()), !dbg !2840
  %0 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 2), align 8, !dbg !2850
  %base = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %0, i64 0, i32 0, !dbg !2850
  %call11 = tail call fastcc %struct.bitmap_head_def** @VEC_bitmap_base_quick_push(%struct.VEC_bitmap_base* %base, %struct.bitmap_head_def* %call10) #7, !dbg !2850
  %call12 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2851
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call12, metadata !2827, metadata !DIExpression()), !dbg !2840
  %1 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 3), align 8, !dbg !2852
  %base15 = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %1, i64 0, i32 0, !dbg !2852
  %call19 = tail call fastcc %struct.bitmap_head_def** @VEC_bitmap_base_quick_push(%struct.VEC_bitmap_base* %base15, %struct.bitmap_head_def* %call12) #7, !dbg !2852
  %call20 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2853
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call20, metadata !2827, metadata !DIExpression()), !dbg !2840
  %2 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 4), align 8, !dbg !2854
  %base23 = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %2, i64 0, i32 0, !dbg !2854
  %call27 = tail call fastcc %struct.bitmap_head_def** @VEC_bitmap_base_quick_push(%struct.VEC_bitmap_base* %base23, %struct.bitmap_head_def* %call20) #7, !dbg !2854
  %call28 = tail call %struct.htab* @htab_create(i64 10, i32 (i8*)* nonnull @vtoe_hash, i32 (i8*, i8*)* nonnull @vtoe_eq, void (i8*)* nonnull @vtoe_free) #6, !dbg !2855
  call void @llvm.dbg.value(metadata %struct.htab* %call28, metadata !2828, metadata !DIExpression()), !dbg !2840
  %3 = load %struct.VEC_htab_t_heap*, %struct.VEC_htab_t_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 5), align 8, !dbg !2856
  %base31 = getelementptr inbounds %struct.VEC_htab_t_heap, %struct.VEC_htab_t_heap* %3, i64 0, i32 0, !dbg !2856
  %call35 = tail call fastcc %struct.htab** @VEC_htab_t_base_quick_push(%struct.VEC_htab_t_base* %base31, %struct.htab* %call28) #7, !dbg !2856
  %inc = add i32 %i.0, 1, !dbg !2857
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2826, metadata !DIExpression()), !dbg !2840
  br label %for.cond, !dbg !2858, !llvm.loop !2859

for.end:                                          ; preds = %for.cond
  store %struct.pointer_map_t* null, %struct.pointer_map_t** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 6), align 8, !dbg !2861
  tail call fastcc void @gather_mem_refs_in_loops() #7, !dbg !2862
  tail call fastcc void @create_vop_ref_mapping() #7, !dbg !2863
  ret void, !dbg !2864
}

; Function Attrs: nounwind uwtable
define internal fastcc void @determine_invariantness() unnamed_addr #5 !dbg !2865 {
entry:
  %walk_data = alloca %struct.dom_walk_data, align 8
  %0 = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 0, !dbg !2899
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #8, !dbg !2899
  %call = call i8* @memset(i8* nonnull %0, i32 0, i64 64) #6, !dbg !2900
  %bf.load = load i8, i8* %0, align 8, !dbg !2901
  %bf.clear = and i8 %bf.load, -4, !dbg !2901
  %bf.set = or i8 %bf.clear, 1, !dbg !2901
  store i8 %bf.set, i8* %0, align 8, !dbg !2901
  %before_dom_children = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 2, !dbg !2902
  store void (%struct.dom_walk_data*, %struct.basic_block_def*)* @determine_invariantness_stmt, void (%struct.dom_walk_data*, %struct.basic_block_def*)** %before_dom_children, align 8, !dbg !2903
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !2867, metadata !DIExpression(DW_OP_deref)), !dbg !2904
  call void @init_walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data) #6, !dbg !2905
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2906
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !2906
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2906
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !2906
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2906
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !2867, metadata !DIExpression(DW_OP_deref)), !dbg !2904
  call void @walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data, %struct.basic_block_def* %3) #6, !dbg !2907
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !2867, metadata !DIExpression(DW_OP_deref)), !dbg !2904
  call void @fini_walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data) #6, !dbg !2908
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #8, !dbg !2909
  ret void, !dbg !2909
}

; Function Attrs: nounwind uwtable
define internal fastcc void @store_motion() unnamed_addr #5 !dbg !2910 {
entry:
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2914
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !2913, metadata !DIExpression()), !dbg !2915
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2916
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !2916
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !2916
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 3, !dbg !2918
  %2 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !2918
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %2, i64 0, i32 8, !dbg !2919
  br label %for.cond, !dbg !2920

for.cond:                                         ; preds = %for.body, %entry
  %loop.0.in = phi %struct.loop** [ %inner, %entry ], [ %next, %for.body ]
  %loop.0 = load %struct.loop*, %struct.loop** %loop.0.in, align 8, !dbg !2921
  call void @llvm.dbg.value(metadata %struct.loop* %loop.0, metadata !2912, metadata !DIExpression()), !dbg !2915
  %cmp = icmp eq %struct.loop* %loop.0, null, !dbg !2922
  br i1 %cmp, label %for.end, label %for.body, !dbg !2924

for.body:                                         ; preds = %for.cond
  tail call fastcc void @store_motion_loop(%struct.loop* nonnull %loop.0, %struct.bitmap_head_def* %call) #7, !dbg !2925
  %next = getelementptr inbounds %struct.loop, %struct.loop* %loop.0, i64 0, i32 9, !dbg !2926
  br label %for.cond, !dbg !2927, !llvm.loop !2928

for.end:                                          ; preds = %for.cond
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !2930
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2913, metadata !DIExpression()), !dbg !2915
  tail call void @gsi_commit_edge_inserts() #6, !dbg !2931
  ret void, !dbg !2932
}

; Function Attrs: nounwind uwtable
define internal fastcc void @move_computations() unnamed_addr #5 !dbg !2933 {
entry:
  %walk_data = alloca %struct.dom_walk_data, align 8
  %0 = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 0, !dbg !2936
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #8, !dbg !2936
  %call = call i8* @memset(i8* nonnull %0, i32 0, i64 64) #6, !dbg !2937
  %bf.load = load i8, i8* %0, align 8, !dbg !2938
  %bf.clear = and i8 %bf.load, -4, !dbg !2938
  %bf.set = or i8 %bf.clear, 1, !dbg !2938
  store i8 %bf.set, i8* %0, align 8, !dbg !2938
  %before_dom_children = getelementptr inbounds %struct.dom_walk_data, %struct.dom_walk_data* %walk_data, i64 0, i32 2, !dbg !2939
  store void (%struct.dom_walk_data*, %struct.basic_block_def*)* @move_computations_stmt, void (%struct.dom_walk_data*, %struct.basic_block_def*)** %before_dom_children, align 8, !dbg !2940
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !2935, metadata !DIExpression(DW_OP_deref)), !dbg !2941
  call void @init_walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data) #6, !dbg !2942
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2943
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !2943
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2943
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !2943
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2943
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !2935, metadata !DIExpression(DW_OP_deref)), !dbg !2941
  call void @walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data, %struct.basic_block_def* %3) #6, !dbg !2944
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %walk_data, metadata !2935, metadata !DIExpression(DW_OP_deref)), !dbg !2941
  call void @fini_walk_dominator_tree(%struct.dom_walk_data* nonnull %walk_data) #6, !dbg !2945
  call void @gsi_commit_edge_inserts() #6, !dbg !2946
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2947
  %call2 = call zeroext i8 @need_ssa_update_p(%struct.function* %4) #6, !dbg !2949
  %tobool = icmp eq i8 %call2, 0, !dbg !2949
  br i1 %tobool, label %if.end, label %if.then, !dbg !2950

if.then:                                          ; preds = %entry
  call void @rewrite_into_loop_closed_ssa(%struct.bitmap_head_def* null, i32 2048) #6, !dbg !2951
  br label %if.end, !dbg !2951

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #8, !dbg !2952
  ret void, !dbg !2952
}

; Function Attrs: nounwind uwtable
define internal fastcc void @tree_ssa_lim_finalize() unnamed_addr #5 !dbg !2953 {
entry:
  %b = alloca %struct.bitmap_head_def*, align 8
  %h = alloca %struct.htab*, align 8
  %0 = bitcast %struct.bitmap_head_def** %b to i8*, !dbg !2959
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2959
  %1 = bitcast %struct.htab** %h to i8*, !dbg !2960
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2960
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2961
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !2961
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2961
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !2961
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2961
  br label %for.cond, !dbg !2961

for.cond:                                         ; preds = %for.body, %entry
  %5 = phi %struct.control_flow_graph* [ %3, %entry ], [ %.pre, %for.body ], !dbg !2963
  %.pn = phi %struct.basic_block_def* [ %4, %entry ], [ %bb.0, %for.body ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2965
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2965
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2955, metadata !DIExpression()), !dbg !2966
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !2963
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2963
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %6, !dbg !2963
  br i1 %cmp, label %for.end, label %for.body, !dbg !2961

for.body:                                         ; preds = %for.cond
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 2, !dbg !2967
  store i8* null, i8** %aux, align 8, !dbg !2969
  %.pre = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2963
  br label %for.cond, !dbg !2963, !llvm.loop !2970

for.end:                                          ; preds = %for.cond
  %7 = load %struct.pointer_map_t*, %struct.pointer_map_t** @lim_aux_data_map, align 8, !dbg !2972
  tail call void @pointer_map_destroy(%struct.pointer_map_t* %7) #6, !dbg !2973
  tail call fastcc void @VEC_mem_ref_p_heap_free(%struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1)) #7, !dbg !2974
  %8 = load %struct.htab*, %struct.htab** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 0), align 8, !dbg !2975
  tail call void @htab_delete(%struct.htab* %8) #6, !dbg !2976
  call void @llvm.dbg.value(metadata i32 0, metadata !2956, metadata !DIExpression()), !dbg !2966
  br label %for.cond4, !dbg !2977

for.cond4:                                        ; preds = %for.body6, %for.end
  %i.0 = phi i32 [ 0, %for.end ], [ %inc, %for.body6 ], !dbg !2979
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2956, metadata !DIExpression()), !dbg !2966
  %9 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 2), align 8, !dbg !2980
  %base = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %9, i64 0, i32 0, !dbg !2980
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %b, metadata !2957, metadata !DIExpression(DW_OP_deref)), !dbg !2966
  %call = call fastcc i32 @VEC_bitmap_base_iterate(%struct.VEC_bitmap_base* %base, i32 %i.0, %struct.bitmap_head_def** nonnull %b) #7, !dbg !2980
  %tobool5 = icmp eq i32 %call, 0, !dbg !2982
  br i1 %tobool5, label %for.end8, label %for.body6, !dbg !2982

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %b, align 8, !dbg !2983
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %10, metadata !2957, metadata !DIExpression()), !dbg !2966
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %10) #6, !dbg !2983
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2957, metadata !DIExpression()), !dbg !2966
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %b, align 8, !dbg !2983
  %inc = add i32 %i.0, 1, !dbg !2984
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2956, metadata !DIExpression()), !dbg !2966
  br label %for.cond4, !dbg !2985, !llvm.loop !2986

for.end8:                                         ; preds = %for.cond4
  call fastcc void @VEC_bitmap_heap_free(%struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 2)) #7, !dbg !2988
  call void @llvm.dbg.value(metadata i32 0, metadata !2956, metadata !DIExpression()), !dbg !2966
  br label %for.cond9, !dbg !2989

for.cond9:                                        ; preds = %for.body18, %for.end8
  %i.1 = phi i32 [ 0, %for.end8 ], [ %inc20, %for.body18 ], !dbg !2991
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !2956, metadata !DIExpression()), !dbg !2966
  %11 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 3), align 8, !dbg !2992
  %base12 = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %11, i64 0, i32 0, !dbg !2992
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %b, metadata !2957, metadata !DIExpression(DW_OP_deref)), !dbg !2966
  %call16 = call fastcc i32 @VEC_bitmap_base_iterate(%struct.VEC_bitmap_base* %base12, i32 %i.1, %struct.bitmap_head_def** nonnull %b) #7, !dbg !2992
  %tobool17 = icmp eq i32 %call16, 0, !dbg !2994
  br i1 %tobool17, label %for.end21, label %for.body18, !dbg !2994

for.body18:                                       ; preds = %for.cond9
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %b, align 8, !dbg !2995
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %12, metadata !2957, metadata !DIExpression()), !dbg !2966
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %12) #6, !dbg !2995
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2957, metadata !DIExpression()), !dbg !2966
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %b, align 8, !dbg !2995
  %inc20 = add i32 %i.1, 1, !dbg !2996
  call void @llvm.dbg.value(metadata i32 %inc20, metadata !2956, metadata !DIExpression()), !dbg !2966
  br label %for.cond9, !dbg !2997, !llvm.loop !2998

for.end21:                                        ; preds = %for.cond9
  call fastcc void @VEC_bitmap_heap_free(%struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 3)) #7, !dbg !3000
  call void @llvm.dbg.value(metadata i32 0, metadata !2956, metadata !DIExpression()), !dbg !2966
  br label %for.cond22, !dbg !3001

for.cond22:                                       ; preds = %for.body31, %for.end21
  %i.2 = phi i32 [ 0, %for.end21 ], [ %inc33, %for.body31 ], !dbg !3003
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !2956, metadata !DIExpression()), !dbg !2966
  %13 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 4), align 8, !dbg !3004
  %base25 = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %13, i64 0, i32 0, !dbg !3004
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %b, metadata !2957, metadata !DIExpression(DW_OP_deref)), !dbg !2966
  %call29 = call fastcc i32 @VEC_bitmap_base_iterate(%struct.VEC_bitmap_base* %base25, i32 %i.2, %struct.bitmap_head_def** nonnull %b) #7, !dbg !3004
  %tobool30 = icmp eq i32 %call29, 0, !dbg !3006
  br i1 %tobool30, label %for.end34, label %for.body31, !dbg !3006

for.body31:                                       ; preds = %for.cond22
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %b, align 8, !dbg !3007
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %14, metadata !2957, metadata !DIExpression()), !dbg !2966
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %14) #6, !dbg !3007
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2957, metadata !DIExpression()), !dbg !2966
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %b, align 8, !dbg !3007
  %inc33 = add i32 %i.2, 1, !dbg !3008
  call void @llvm.dbg.value(metadata i32 %inc33, metadata !2956, metadata !DIExpression()), !dbg !2966
  br label %for.cond22, !dbg !3009, !llvm.loop !3010

for.end34:                                        ; preds = %for.cond22
  call fastcc void @VEC_bitmap_heap_free(%struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 4)) #7, !dbg !3012
  call void @llvm.dbg.value(metadata i32 0, metadata !2956, metadata !DIExpression()), !dbg !2966
  br label %for.cond35, !dbg !3013

for.cond35:                                       ; preds = %for.body44, %for.end34
  %i.3 = phi i32 [ 0, %for.end34 ], [ %inc46, %for.body44 ], !dbg !3015
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !2956, metadata !DIExpression()), !dbg !2966
  %15 = load %struct.VEC_htab_t_heap*, %struct.VEC_htab_t_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 5), align 8, !dbg !3016
  %base38 = getelementptr inbounds %struct.VEC_htab_t_heap, %struct.VEC_htab_t_heap* %15, i64 0, i32 0, !dbg !3016
  call void @llvm.dbg.value(metadata %struct.htab** %h, metadata !2958, metadata !DIExpression(DW_OP_deref)), !dbg !2966
  %call42 = call fastcc i32 @VEC_htab_t_base_iterate(%struct.VEC_htab_t_base* %base38, i32 %i.3, %struct.htab** nonnull %h) #7, !dbg !3016
  %tobool43 = icmp eq i32 %call42, 0, !dbg !3018
  br i1 %tobool43, label %for.end47, label %for.body44, !dbg !3018

for.body44:                                       ; preds = %for.cond35
  %16 = load %struct.htab*, %struct.htab** %h, align 8, !dbg !3019
  call void @llvm.dbg.value(metadata %struct.htab* %16, metadata !2958, metadata !DIExpression()), !dbg !2966
  call void @htab_delete(%struct.htab* %16) #6, !dbg !3020
  %inc46 = add i32 %i.3, 1, !dbg !3021
  call void @llvm.dbg.value(metadata i32 %inc46, metadata !2956, metadata !DIExpression()), !dbg !2966
  br label %for.cond35, !dbg !3022, !llvm.loop !3023

for.end47:                                        ; preds = %for.cond35
  call fastcc void @VEC_htab_t_heap_free(%struct.VEC_htab_t_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 5)) #7, !dbg !3025
  %17 = load %struct.pointer_map_t*, %struct.pointer_map_t** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 6), align 8, !dbg !3026
  %tobool48 = icmp eq %struct.pointer_map_t* %17, null, !dbg !3028
  br i1 %tobool48, label %if.end, label %if.then, !dbg !3029

if.then:                                          ; preds = %for.end47
  call void @pointer_map_destroy(%struct.pointer_map_t* nonnull %17) #6, !dbg !3030
  br label %if.end, !dbg !3030

if.end:                                           ; preds = %for.end47, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3031
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3031
  ret void, !dbg !3031
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3032 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3034, metadata !DIExpression()), !dbg !3035
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3036
  %cmp = icmp ugt i32 %call, 5, !dbg !3037
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3038

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3039
  %cmp2 = icmp ult i32 %call1, 10, !dbg !3040
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !3041
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !3042 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3046, metadata !DIExpression()), !dbg !3048
  call void @llvm.dbg.value(metadata i32 %i, metadata !3047, metadata !DIExpression()), !dbg !3048
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !3049
  %tobool = icmp eq i8 %call, 0, !dbg !3049
  br i1 %tobool, label %return, label %if.then, !dbg !3051

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !3052
  %idxprom = zext i32 %i to i64, !dbg !3052
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !3052
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3052
  br label %return, !dbg !3054

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !3055
  ret %union.tree_node* %retval.0, !dbg !3056
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3057 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3059, metadata !DIExpression()), !dbg !3060
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3061
  %cmp = icmp eq i32 %call, 0, !dbg !3062
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !3063

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !3064
  %cmp2 = icmp ult i32 %call1, 10, !dbg !3065
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !3066
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3067 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3071, metadata !DIExpression()), !dbg !3073
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !3074
  %idxprom = zext i32 %call to i64, !dbg !3075
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !3075
  %0 = load i64, i64* %arrayidx, align 8, !dbg !3075
  call void @llvm.dbg.value(metadata i64 %0, metadata !3072, metadata !DIExpression()), !dbg !3073
  %cmp = icmp eq i64 %0, 0, !dbg !3076
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3076

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3076
  br label %cond.end, !dbg !3076

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !3077
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !3078
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !3079
  ret %union.tree_node** %2, !dbg !3080
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3081 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3085, metadata !DIExpression()), !dbg !3086
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !3087
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !3088
  ret i32 %call1, !dbg !3089
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !3090 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !3094, metadata !DIExpression()), !dbg !3095
  %idxprom = zext i32 %code to i64, !dbg !3096
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !3096
  %0 = load i32, i32* %arrayidx, align 4, !dbg !3096
  ret i32 %0, !dbg !3097
}

declare dso_local i8* @get_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local i8* @strcpy(i8*, i8*) local_unnamed_addr #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3098 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3102, metadata !DIExpression()), !dbg !3105
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !3103, metadata !DIExpression()), !dbg !3106
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !3107
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !3104, metadata !DIExpression()), !dbg !3105
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !3108
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !3109
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3110
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !3111
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !3112
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !3113
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !3114
  ret void, !dbg !3115
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3116 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3120, metadata !DIExpression()), !dbg !3121
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3122
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3122
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !3123
  %conv1 = zext i1 %cmp to i8, !dbg !3124
  ret i8 %conv1, !dbg !3125
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @nonpure_call_p(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !3126 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3130, metadata !DIExpression()), !dbg !3131
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !3132
  %cmp = icmp eq i32 %call, 8, !dbg !3134
  br i1 %cmp, label %if.end, label %return, !dbg !3135

if.end:                                           ; preds = %entry
  %call1 = tail call zeroext i8 @gimple_has_side_effects(%union.gimple_statement_d* %stmt) #6, !dbg !3136
  br label %return, !dbg !3137

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i8 [ %call1, %if.end ], [ 0, %entry ], !dbg !3131
  ret i8 %retval.0, !dbg !3138
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3139 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3143, metadata !DIExpression()), !dbg !3144
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3145
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3145
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !3146
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3146
  ret %union.gimple_statement_d* %1, !dbg !3147
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !3148 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3153, metadata !DIExpression()), !dbg !3154
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3155
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3155
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !3156
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !3156
  %2 = load i64, i64* %1, align 8, !dbg !3156
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !3157
  store i64 %2, i64* %3, align 8, !dbg !3157
  ret void, !dbg !3158
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !3159 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !3163, metadata !DIExpression()), !dbg !3168
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !3164, metadata !DIExpression()), !dbg !3168
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !3169
  %0 = load i8*, i8** %popcount, align 8, !dbg !3169
  %tobool = icmp eq i8* %0, null, !dbg !3170
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !3171

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !3172
  %.pre2 = zext i32 %.pre to i64, !dbg !3173
  %.pre3 = shl i64 1, %.pre2, !dbg !3173
  %.pre4 = lshr i32 %bitno, 6, !dbg !3174
  %.pre5 = zext i32 %.pre4 to i64, !dbg !3175
  br label %if.end7, !dbg !3171

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !3176
  %idxprom = zext i32 %div to i64, !dbg !3176
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !3176
  %1 = load i64, i64* %arrayidx, align 8, !dbg !3176
  %rem = and i32 %bitno, 63, !dbg !3176
  %sh_prom = zext i32 %rem to i64, !dbg !3176
  %2 = shl i64 1, %sh_prom, !dbg !3177
  %3 = and i64 %1, %2, !dbg !3177
  %tobool1 = icmp eq i64 %3, 0, !dbg !3177
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !3179

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !3180
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !3181
  %inc = add i8 %4, 1, !dbg !3181
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !3181
  br label %if.end7, !dbg !3180

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !3175
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !3173
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !3175
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !3182
  %or = or i64 %5, %shl.pre-phi, !dbg !3182
  store i64 %or, i64* %arrayidx13, align 8, !dbg !3182
  ret void, !dbg !3183
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fill_always_executed_in(%struct.loop* %loop, %struct.simple_bitmap_def* %contains_call) unnamed_addr #5 !dbg !3184 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3188, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %contains_call, metadata !3189, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !3190, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !3193, metadata !DIExpression()), !dbg !3209
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !3210
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3210
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3196, metadata !DIExpression()), !dbg !3209
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3211
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3211
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 2, !dbg !3212
  %2 = load i8*, i8** %aux, align 8, !dbg !3212
  %tobool = icmp eq i8* %2, null, !dbg !3213
  br i1 %tobool, label %if.then, label %if.end48, !dbg !3214

if.then:                                          ; preds = %entry
  %call = tail call %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop* %loop) #6, !dbg !3215
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !3191, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata i32 0, metadata !3194, metadata !DIExpression()), !dbg !3209
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !3216
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3217
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !3218
  %4 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3220
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3220
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3220
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3222
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3222
  br label %for.cond, !dbg !3224

for.cond:                                         ; preds = %for.inc40, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc40 ], [ 0, %if.then ], !dbg !3225
  %last.0 = phi %struct.basic_block_def* [ %spec.select, %for.inc40 ], [ null, %if.then ], !dbg !3209
  %inn_loop.0 = phi %struct.loop* [ %inn_loop.2, %for.inc40 ], [ %loop, %if.then ], !dbg !3226
  call void @llvm.dbg.value(metadata %struct.loop* %inn_loop.0, metadata !3196, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.0, metadata !3193, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3194, metadata !DIExpression()), !dbg !3209
  %9 = load i32, i32* %num_nodes, align 4, !dbg !3227
  %10 = zext i32 %9 to i64, !dbg !3228
  %cmp = icmp ult i64 %indvars.iv, %10, !dbg !3228
  br i1 %cmp, label %for.body, label %for.end41, !dbg !3229

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !3230
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %indvars.iv, !dbg !3231
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3231
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %11, metadata !3190, metadata !DIExpression()), !dbg !3209
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3232
  %call1 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %12, %struct.basic_block_def* %11) #6, !dbg !3233
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3233
  %spec.select = select i1 %tobool2, %struct.basic_block_def* %last.0, %struct.basic_block_def* %11, !dbg !3234
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %spec.select, metadata !3193, metadata !DIExpression()), !dbg !3209
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 9, !dbg !3235
  %13 = load i32, i32* %index, align 8, !dbg !3235
  %div = lshr i32 %13, 6, !dbg !3235
  %idxprom4 = zext i32 %div to i64, !dbg !3235
  %arrayidx5 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %contains_call, i64 0, i32 3, i64 %idxprom4, !dbg !3235
  %14 = load i64, i64* %arrayidx5, align 8, !dbg !3235
  %rem = and i32 %13, 63, !dbg !3235
  %sh_prom = zext i32 %rem to i64, !dbg !3235
  %15 = shl i64 1, %sh_prom, !dbg !3235
  %16 = and i64 %14, %15, !dbg !3235
  %tobool7 = icmp eq i64 %16, 0, !dbg !3235
  br i1 %tobool7, label %if.end9, label %cleanup, !dbg !3237

if.end9:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !3238
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 1, !dbg !3238
  %call10 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3238
  %17 = extractvalue { i32, %struct.VEC_edge_gc** } %call10, 0, !dbg !3238
  store i32 %17, i32* %5, align 8, !dbg !3238
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call10, 1, !dbg !3238
  store %struct.VEC_edge_gc** %18, %struct.VEC_edge_gc*** %6, align 8, !dbg !3238
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !3238
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !3238
  br label %for.cond11, !dbg !3238

for.cond11:                                       ; preds = %for.inc, %if.end9
  %19 = load i32, i32* %7, align 8, !dbg !3239
  %20 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !3239
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3195, metadata !DIExpression(DW_OP_deref)), !dbg !3209
  %call12 = call fastcc zeroext i8 @ei_cond(i32 %19, %struct.VEC_edge_gc** %20, %struct.edge_def** nonnull %e) #7, !dbg !3239
  %tobool13 = icmp eq i8 %call12, 0, !dbg !3238
  br i1 %tobool13, label %for.end, label %for.body14, !dbg !3238

for.body14:                                       ; preds = %for.cond11
  %21 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3240
  call void @llvm.dbg.value(metadata %struct.edge_def* %21, metadata !3195, metadata !DIExpression()), !dbg !3209
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %21, i64 0, i32 1, !dbg !3242
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3242
  %call15 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %loop, %struct.basic_block_def* %22) #6, !dbg !3243
  %tobool16 = icmp eq i8 %call15, 0, !dbg !3243
  br i1 %tobool16, label %for.end, label %for.inc, !dbg !3244

for.inc:                                          ; preds = %for.body14
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3197, metadata !DIExpression(DW_OP_deref)), !dbg !3217
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3239
  br label %for.cond11, !dbg !3239, !llvm.loop !3245

for.end:                                          ; preds = %for.body14, %for.cond11
  %23 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3247
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !3195, metadata !DIExpression()), !dbg !3209
  %tobool19 = icmp eq %struct.edge_def* %23, null, !dbg !3247
  br i1 %tobool19, label %if.end21, label %cleanup, !dbg !3249

if.end21:                                         ; preds = %for.end
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 13, !dbg !3250
  %24 = load i32, i32* %flags, align 8, !dbg !3250
  %and22 = and i32 %24, 4, !dbg !3252
  %tobool23 = icmp eq i32 %and22, 0, !dbg !3252
  br i1 %tobool23, label %if.end25, label %cleanup, !dbg !3253

if.end25:                                         ; preds = %if.end21
  %call26 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %inn_loop.0, %struct.basic_block_def* %11) #6, !dbg !3254
  %tobool27 = icmp eq i8 %call26, 0, !dbg !3254
  br i1 %tobool27, label %cleanup, label %if.end29, !dbg !3256

if.end29:                                         ; preds = %if.end25
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 3, !dbg !3257
  %25 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !3257
  %header30 = getelementptr inbounds %struct.loop, %struct.loop* %25, i64 0, i32 2, !dbg !3259
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %header30, align 8, !dbg !3259
  %cmp31 = icmp eq %struct.basic_block_def* %26, %11, !dbg !3260
  br i1 %cmp31, label %if.then32, label %cleanup, !dbg !3261

if.then32:                                        ; preds = %if.end29
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3262
  %call34 = call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %27, %struct.basic_block_def* %11) #6, !dbg !3265
  %tobool35 = icmp eq i8 %call34, 0, !dbg !3265
  br i1 %tobool35, label %cleanup, label %if.end37, !dbg !3266

if.end37:                                         ; preds = %if.then32
  %28 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !3267
  call void @llvm.dbg.value(metadata %struct.loop* %28, metadata !3196, metadata !DIExpression()), !dbg !3209
  br label %cleanup, !dbg !3268

cleanup:                                          ; preds = %if.then32, %if.end25, %if.end21, %for.end, %for.body, %if.end29, %if.end37
  %inn_loop.2 = phi %struct.loop* [ %inn_loop.0, %for.body ], [ %inn_loop.0, %for.end ], [ %inn_loop.0, %if.end21 ], [ %inn_loop.0, %if.end25 ], [ %inn_loop.0, %if.then32 ], [ %28, %if.end37 ], [ %inn_loop.0, %if.end29 ], !dbg !3209
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body ], [ false, %for.end ], [ false, %if.end21 ], [ false, %if.end25 ], [ false, %if.then32 ], [ true, %if.end37 ], [ true, %if.end29 ]
  call void @llvm.dbg.value(metadata %struct.loop* %inn_loop.2, metadata !3196, metadata !DIExpression()), !dbg !3209
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !3269
  br i1 %cleanup.dest.slot.0, label %for.inc40, label %for.end41

for.inc40:                                        ; preds = %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3270
  br label %for.cond, !dbg !3271, !llvm.loop !3272

for.end41:                                        ; preds = %cleanup, %for.cond
  %last.2 = phi %struct.basic_block_def* [ %spec.select, %cleanup ], [ %last.0, %for.cond ], !dbg !3209
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.2, metadata !3193, metadata !DIExpression()), !dbg !3209
  br label %while.cond, !dbg !3274

while.cond:                                       ; preds = %if.end46, %for.end41
  %last.3 = phi %struct.basic_block_def* [ %last.2, %for.end41 ], [ %call47, %if.end46 ], !dbg !3275
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %last.3, metadata !3193, metadata !DIExpression()), !dbg !3209
  %aux42 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %last.3, i64 0, i32 2, !dbg !3276
  %29 = bitcast i8** %aux42 to %struct.loop**, !dbg !3278
  store %struct.loop* %loop, %struct.loop** %29, align 8, !dbg !3278
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3279
  %cmp44 = icmp eq %struct.basic_block_def* %last.3, %30, !dbg !3281
  br i1 %cmp44, label %while.end, label %if.end46, !dbg !3282

if.end46:                                         ; preds = %while.cond
  %call47 = call %struct.basic_block_def* @get_immediate_dominator(i32 1, %struct.basic_block_def* %last.3) #6, !dbg !3283
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call47, metadata !3193, metadata !DIExpression()), !dbg !3209
  br label %while.cond, !dbg !3274, !llvm.loop !3284

while.end:                                        ; preds = %while.cond
  %31 = bitcast %struct.basic_block_def** %call to i8*, !dbg !3286
  call void @free(i8* %31) #6, !dbg !3287
  br label %if.end48, !dbg !3288

if.end48:                                         ; preds = %entry, %while.end
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !3289
  br label %for.cond49, !dbg !3291

for.cond49:                                       ; preds = %for.body51, %if.end48
  %loop.addr.0.in = phi %struct.loop** [ %inner, %if.end48 ], [ %next, %for.body51 ]
  %loop.addr.0 = load %struct.loop*, %struct.loop** %loop.addr.0.in, align 8, !dbg !3292
  call void @llvm.dbg.value(metadata %struct.loop* %loop.addr.0, metadata !3188, metadata !DIExpression()), !dbg !3209
  %tobool50 = icmp eq %struct.loop* %loop.addr.0, null, !dbg !3293
  br i1 %tobool50, label %for.end53, label %for.body51, !dbg !3293

for.body51:                                       ; preds = %for.cond49
  call fastcc void @fill_always_executed_in(%struct.loop* nonnull %loop.addr.0, %struct.simple_bitmap_def* %contains_call) #7, !dbg !3294
  %next = getelementptr inbounds %struct.loop, %struct.loop* %loop.addr.0, i64 0, i32 9, !dbg !3296
  br label %for.cond49, !dbg !3297, !llvm.loop !3298

for.end53:                                        ; preds = %for.cond49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3300
  ret void, !dbg !3300
}

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local %struct.pointer_map_t* @pointer_map_create() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3301 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3308, metadata !DIExpression()), !dbg !3309
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !3310
  %0 = load i32, i32* %flags, align 8, !dbg !3310
  %and = and i32 %0, 512, !dbg !3311
  %tobool = icmp eq i32 %and, 0, !dbg !3311
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !3312

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !3313
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !3313
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !3314
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !3315

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !3316
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !3316
  br label %cond.end, !dbg !3315

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !3315
  ret %struct.gimple_seq_d* %cond, !dbg !3317
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !3318 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !3325, metadata !DIExpression()), !dbg !3326
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !3327
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3327

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !3328
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !3328
  br label %cond.end, !dbg !3327

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !3327
  ret %struct.gimple_seq_node_d* %cond, !dbg !3329
}

declare dso_local %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop*) local_unnamed_addr #2

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !3330 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !3334, metadata !DIExpression()), !dbg !3336
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !3337
  store i32 0, i32* %index, align 8, !dbg !3338
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !3339
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !3340
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !3341
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !3341
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !3341
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !3342 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !3348, metadata !DIExpression()), !dbg !3349
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !3350
  %tobool = icmp eq i8 %call, 0, !dbg !3350
  br i1 %tobool, label %if.then, label %if.else, !dbg !3352

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !3353
  br label %return, !dbg !3355

if.else:                                          ; preds = %entry
  br label %return, !dbg !3356

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !3358
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !3358
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !3358
  ret i8 %retval.0, !dbg !3359
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !3360 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !3365, metadata !DIExpression()), !dbg !3366
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !3367
  %0 = load i32, i32* %index, align 8, !dbg !3367
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !3367
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3367
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !3367
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3367
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3367

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !3367
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3367
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !3367
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3367
  br label %cond.end, !dbg !3367

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3367
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3367
  %cmp = icmp ult i32 %0, %call2, !dbg !3367
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !3367

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3367
  br label %cond.end5, !dbg !3367

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !3368
  %inc = add i32 %5, 1, !dbg !3368
  store i32 %inc, i32* %index, align 8, !dbg !3368
  ret void, !dbg !3369
}

declare dso_local %struct.basic_block_def* @get_immediate_dominator(i32, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !3370 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !3375
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3375
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3375

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !3375
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3375
  br label %cond.end, !dbg !3375

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3375
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3375
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !3376
  %conv3 = zext i1 %cmp to i8, !dbg !3377
  ret i8 %conv3, !dbg !3378
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !3379 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !3384
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3384
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3384

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !3384
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3384
  br label %cond.end, !dbg !3384

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3384
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !3384
  ret %struct.edge_def* %call2, !dbg !3385
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !3386 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !3392, metadata !DIExpression()), !dbg !3393
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !3394
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3394

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !3394
  %0 = load i32, i32* %num, align 8, !dbg !3394
  br label %cond.end, !dbg !3394

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3394
  ret i32 %cond, !dbg !3394
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !3395 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !3400
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3400

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3400
  br label %cond.end, !dbg !3400

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !3401
  ret %struct.VEC_edge_gc* %0, !dbg !3402
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3403 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !3407, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3408, metadata !DIExpression()), !dbg !3409
  br label %land.end, !dbg !3410

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3410
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3410
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !3410
  ret %struct.edge_def* %0, !dbg !3410
}

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @memref_hash(i8* %obj) #5 !dbg !3411 {
entry:
  call void @llvm.dbg.value(metadata i8* %obj, metadata !3413, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i8* %obj, metadata !3414, metadata !DIExpression()), !dbg !3416
  %hash = getelementptr inbounds i8, i8* %obj, i64 12, !dbg !3417
  %0 = bitcast i8* %hash to i32*, !dbg !3417
  %1 = load i32, i32* %0, align 4, !dbg !3417
  ret i32 %1, !dbg !3418
}

; Function Attrs: nounwind uwtable
define internal i32 @memref_eq(i8* %obj1, i8* %obj2) #5 !dbg !3419 {
entry:
  call void @llvm.dbg.value(metadata i8* %obj1, metadata !3421, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %obj2, metadata !3422, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %obj1, metadata !3423, metadata !DIExpression()), !dbg !3424
  %mem = bitcast i8* %obj1 to %union.tree_node**, !dbg !3425
  %0 = load %union.tree_node*, %union.tree_node** %mem, align 8, !dbg !3425
  %1 = bitcast i8* %obj2 to %union.tree_node*, !dbg !3426
  %call = tail call i32 @operand_equal_p(%union.tree_node* %0, %union.tree_node* %1, i32 0) #6, !dbg !3427
  ret i32 %call, !dbg !3428
}

; Function Attrs: nounwind uwtable
define internal void @memref_free(i8* %obj) #5 !dbg !3429 {
entry:
  %accs = alloca %struct.mem_ref_locs*, align 8
  call void @llvm.dbg.value(metadata i8* %obj, metadata !3431, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %obj, metadata !3432, metadata !DIExpression()), !dbg !3436
  %0 = bitcast %struct.mem_ref_locs** %accs to i8*, !dbg !3437
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3437
  %stored = getelementptr inbounds i8, i8* %obj, i64 16, !dbg !3438
  %1 = bitcast i8* %stored to %struct.bitmap_head_def**, !dbg !3438
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %1, align 8, !dbg !3438
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !3438
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %1, align 8, !dbg !3438
  %indep_loop = getelementptr inbounds i8, i8* %obj, i64 40, !dbg !3439
  %3 = bitcast i8* %indep_loop to %struct.bitmap_head_def**, !dbg !3439
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %3, align 8, !dbg !3439
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %4) #6, !dbg !3439
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %3, align 8, !dbg !3439
  %dep_loop = getelementptr inbounds i8, i8* %obj, i64 48, !dbg !3440
  %5 = bitcast i8* %dep_loop to %struct.bitmap_head_def**, !dbg !3440
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %5, align 8, !dbg !3440
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %6) #6, !dbg !3440
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %5, align 8, !dbg !3440
  %indep_ref = getelementptr inbounds i8, i8* %obj, i64 56, !dbg !3441
  %7 = bitcast i8* %indep_ref to %struct.bitmap_head_def**, !dbg !3441
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %7, align 8, !dbg !3441
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %8) #6, !dbg !3441
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %7, align 8, !dbg !3441
  %dep_ref = getelementptr inbounds i8, i8* %obj, i64 64, !dbg !3442
  %9 = bitcast i8* %dep_ref to %struct.bitmap_head_def**, !dbg !3442
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %9, align 8, !dbg !3442
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %10) #6, !dbg !3442
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %9, align 8, !dbg !3442
  call void @llvm.dbg.value(metadata i32 0, metadata !3434, metadata !DIExpression()), !dbg !3436
  %accesses_in_loop = getelementptr inbounds i8, i8* %obj, i64 24, !dbg !3443
  %11 = bitcast i8* %accesses_in_loop to %struct.VEC_mem_ref_locs_p_heap**, !dbg !3443
  br label %for.cond, !dbg !3446

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3447
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3434, metadata !DIExpression()), !dbg !3436
  %12 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %11, align 8, !dbg !3448
  %tobool = icmp eq %struct.VEC_mem_ref_locs_p_heap* %12, null, !dbg !3448
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3448

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %12, i64 0, i32 0, !dbg !3448
  br label %cond.end, !dbg !3448

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_mem_ref_locs_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3448
  call void @llvm.dbg.value(metadata %struct.mem_ref_locs** %accs, metadata !3435, metadata !DIExpression(DW_OP_deref)), !dbg !3436
  %call = call fastcc i32 @VEC_mem_ref_locs_p_base_iterate(%struct.VEC_mem_ref_locs_p_base* %cond, i32 %i.0, %struct.mem_ref_locs** nonnull %accs) #7, !dbg !3448
  %tobool7 = icmp eq i32 %call, 0, !dbg !3449
  br i1 %tobool7, label %for.end, label %for.body, !dbg !3449

for.body:                                         ; preds = %cond.end
  %13 = load %struct.mem_ref_locs*, %struct.mem_ref_locs** %accs, align 8, !dbg !3450
  call void @llvm.dbg.value(metadata %struct.mem_ref_locs* %13, metadata !3435, metadata !DIExpression()), !dbg !3436
  call fastcc void @free_mem_ref_locs(%struct.mem_ref_locs* %13) #7, !dbg !3451
  %inc = add i32 %i.0, 1, !dbg !3452
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3434, metadata !DIExpression()), !dbg !3436
  br label %for.cond, !dbg !3453, !llvm.loop !3454

for.end:                                          ; preds = %cond.end
  call fastcc void @VEC_mem_ref_locs_p_heap_free(%struct.VEC_mem_ref_locs_p_heap** nonnull %11) #7, !dbg !3456
  %vops = getelementptr inbounds i8, i8* %obj, i64 32, !dbg !3457
  %14 = bitcast i8* %vops to %struct.bitmap_head_def**, !dbg !3457
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %14, align 8, !dbg !3457
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %15) #6, !dbg !3457
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %14, align 8, !dbg !3457
  call void @free(i8* %obj) #6, !dbg !3458
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3459
  ret void, !dbg !3459
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_bitmap_heap* @VEC_bitmap_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3460 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3464, metadata !DIExpression()), !dbg !3465
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !3466
  %0 = bitcast i8* %call to %struct.VEC_bitmap_heap*, !dbg !3466
  ret %struct.VEC_bitmap_heap* %0, !dbg !3466
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @number_of_loops() unnamed_addr #0 !dbg !3467 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3470
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !3470
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3470
  %tobool = icmp eq %struct.loops* %1, null, !dbg !3470
  br i1 %tobool, label %return, label %if.end, !dbg !3472

if.end:                                           ; preds = %entry
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !3473
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !3473
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !3473
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3473

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !3473
  br label %cond.end, !dbg !3473

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3473
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !3473
  br label %return, !dbg !3474

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ %call, %cond.end ], [ 0, %entry ], !dbg !3475
  ret i32 %retval.0, !dbg !3476
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_htab_t_heap* @VEC_htab_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3477 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3481, metadata !DIExpression()), !dbg !3482
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !3483
  %0 = bitcast i8* %call to %struct.VEC_htab_t_heap*, !dbg !3483
  ret %struct.VEC_htab_t_heap* %0, !dbg !3483
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.bitmap_head_def** @VEC_bitmap_base_quick_push(%struct.VEC_bitmap_base* %vec_, %struct.bitmap_head_def* %obj_) unnamed_addr #0 !dbg !3484 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_base* %vec_, metadata !3490, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %obj_, metadata !3491, metadata !DIExpression()), !dbg !3493
  %num1 = getelementptr inbounds %struct.VEC_bitmap_base, %struct.VEC_bitmap_base* %vec_, i64 0, i32 0, !dbg !3494
  %0 = load i32, i32* %num1, align 8, !dbg !3494
  %inc = add i32 %0, 1, !dbg !3494
  store i32 %inc, i32* %num1, align 8, !dbg !3494
  %idxprom = zext i32 %0 to i64, !dbg !3494
  %arrayidx = getelementptr inbounds %struct.VEC_bitmap_base, %struct.VEC_bitmap_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3494
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %arrayidx, metadata !3492, metadata !DIExpression()), !dbg !3493
  store %struct.bitmap_head_def* %obj_, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !3494
  ret %struct.bitmap_head_def** %arrayidx, !dbg !3494
}

; Function Attrs: nounwind uwtable
define internal i32 @vtoe_hash(i8* %obj) #5 !dbg !3495 {
entry:
  call void @llvm.dbg.value(metadata i8* %obj, metadata !3497, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.value(metadata i8* %obj, metadata !3498, metadata !DIExpression()), !dbg !3500
  %uid = bitcast i8* %obj to i32*, !dbg !3501
  %0 = load i32, i32* %uid, align 8, !dbg !3501
  ret i32 %0, !dbg !3502
}

; Function Attrs: nounwind uwtable
define internal i32 @vtoe_eq(i8* %obj1, i8* %obj2) #5 !dbg !3503 {
entry:
  call void @llvm.dbg.value(metadata i8* %obj1, metadata !3505, metadata !DIExpression()), !dbg !3510
  call void @llvm.dbg.value(metadata i8* %obj2, metadata !3506, metadata !DIExpression()), !dbg !3510
  call void @llvm.dbg.value(metadata i8* %obj1, metadata !3507, metadata !DIExpression()), !dbg !3510
  %0 = bitcast i8* %obj2 to i32*, !dbg !3511
  call void @llvm.dbg.value(metadata i32* %0, metadata !3508, metadata !DIExpression()), !dbg !3510
  %uid1 = bitcast i8* %obj1 to i32*, !dbg !3512
  %1 = load i32, i32* %uid1, align 8, !dbg !3512
  %2 = load i32, i32* %0, align 4, !dbg !3513
  %cmp = icmp eq i32 %1, %2, !dbg !3514
  %conv = zext i1 %cmp to i32, !dbg !3514
  ret i32 %conv, !dbg !3515
}

; Function Attrs: nounwind uwtable
define internal void @vtoe_free(i8* %obj) #5 !dbg !3516 {
entry:
  call void @llvm.dbg.value(metadata i8* %obj, metadata !3518, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.value(metadata i8* %obj, metadata !3519, metadata !DIExpression()), !dbg !3521
  %refs_all = getelementptr inbounds i8, i8* %obj, i64 8, !dbg !3522
  %0 = bitcast i8* %refs_all to %struct.bitmap_head_def**, !dbg !3522
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, align 8, !dbg !3522
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !3522
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %0, align 8, !dbg !3522
  %refs_stored = getelementptr inbounds i8, i8* %obj, i64 16, !dbg !3523
  %2 = bitcast i8* %refs_stored to %struct.bitmap_head_def**, !dbg !3523
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %2, align 8, !dbg !3523
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %3) #6, !dbg !3523
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %2, align 8, !dbg !3523
  tail call void @free(i8* %obj) #6, !dbg !3524
  ret void, !dbg !3525
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.htab** @VEC_htab_t_base_quick_push(%struct.VEC_htab_t_base* %vec_, %struct.htab* %obj_) unnamed_addr #0 !dbg !3526 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_htab_t_base* %vec_, metadata !3532, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata %struct.htab* %obj_, metadata !3533, metadata !DIExpression()), !dbg !3535
  %num1 = getelementptr inbounds %struct.VEC_htab_t_base, %struct.VEC_htab_t_base* %vec_, i64 0, i32 0, !dbg !3536
  %0 = load i32, i32* %num1, align 8, !dbg !3536
  %inc = add i32 %0, 1, !dbg !3536
  store i32 %inc, i32* %num1, align 8, !dbg !3536
  %idxprom = zext i32 %0 to i64, !dbg !3536
  %arrayidx = getelementptr inbounds %struct.VEC_htab_t_base, %struct.VEC_htab_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3536
  call void @llvm.dbg.value(metadata %struct.htab** %arrayidx, metadata !3534, metadata !DIExpression()), !dbg !3535
  store %struct.htab* %obj_, %struct.htab** %arrayidx, align 8, !dbg !3536
  ret %struct.htab** %arrayidx, !dbg !3536
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gather_mem_refs_in_loops() unnamed_addr #5 !dbg !3537 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %loop = alloca %struct.loop*, align 8
  %li = alloca %struct.loop_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !3553
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3553
  %1 = bitcast %struct.loop** %loop to i8*, !dbg !3554
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3554
  %2 = bitcast %struct.loop_iterator* %li to i8*, !dbg !3555
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3555
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3556
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !3556
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3556
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !3556
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3556
  %6 = bitcast %struct.loop** %loop to i64*, !dbg !3558
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3561
  br label %for.cond, !dbg !3556

for.cond:                                         ; preds = %for.inc8, %entry
  %.pre2 = phi %struct.function* [ %3, %entry ], [ %.pre, %for.inc8 ]
  %8 = phi %struct.control_flow_graph* [ %4, %entry ], [ %.pre1, %for.inc8 ], !dbg !3563
  %9 = phi %struct.function* [ %3, %entry ], [ %.pre, %for.inc8 ], !dbg !3563
  %.pn = phi %struct.basic_block_def* [ %5, %entry ], [ %bb.0, %for.inc8 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3564
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3564
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3540, metadata !DIExpression()), !dbg !3565
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !3563
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3563
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %10, !dbg !3563
  br i1 %cmp, label %for.end10, label %for.body, !dbg !3556

for.body:                                         ; preds = %for.cond
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 3, !dbg !3566
  %11 = bitcast %struct.loop** %loop_father to i64*, !dbg !3566
  %12 = load i64, i64* %11, align 8, !dbg !3566
  store i64 %12, i64* %6, align 8, !dbg !3567
  %.cast = inttoptr i64 %12 to %struct.loop*, !dbg !3568
  call void @llvm.dbg.value(metadata %struct.loop* %.cast, metadata !3541, metadata !DIExpression()), !dbg !3565
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 4, !dbg !3570
  %13 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3570
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %13, i64 0, i32 3, !dbg !3571
  %14 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !3571
  %cmp4 = icmp eq %struct.loop* %14, %.cast, !dbg !3572
  br i1 %cmp4, label %for.inc8, label %if.end, !dbg !3573

if.end:                                           ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !3574
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !3574
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !3574
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !3574
  br label %for.cond5, !dbg !3575

for.cond5:                                        ; preds = %for.body6, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !3539, metadata !DIExpression(DW_OP_deref)), !dbg !3565
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !3576
  %tobool = icmp eq i8 %call, 0, !dbg !3578
  br i1 %tobool, label %for.body6, label %for.inc8.loopexit, !dbg !3579

for.body6:                                        ; preds = %for.cond5
  %15 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3580
  call void @llvm.dbg.value(metadata %struct.loop* %15, metadata !3541, metadata !DIExpression()), !dbg !3565
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !3539, metadata !DIExpression(DW_OP_deref)), !dbg !3565
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !3581
  call fastcc void @gather_mem_refs_stmt(%struct.loop* %15, %union.gimple_statement_d* %call7) #7, !dbg !3582
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !3539, metadata !DIExpression(DW_OP_deref)), !dbg !3565
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !3583
  br label %for.cond5, !dbg !3584, !llvm.loop !3585

for.inc8.loopexit:                                ; preds = %for.cond5
  %.pre.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3563
  br label %for.inc8, !dbg !3563

for.inc8:                                         ; preds = %for.inc8.loopexit, %for.body
  %.pre = phi %struct.function* [ %.pre.pre, %for.inc8.loopexit ], [ %.pre2, %for.body ], !dbg !3563
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3587
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3563
  br label %for.cond, !dbg !3563, !llvm.loop !3588

for.end10:                                        ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3541, metadata !DIExpression(DW_OP_deref)), !dbg !3565
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3542, metadata !DIExpression(DW_OP_deref)), !dbg !3565
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 2) #7, !dbg !3590
  br label %for.cond11, !dbg !3590

for.cond11:                                       ; preds = %for.inc60, %for.end10
  %16 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3592
  call void @llvm.dbg.value(metadata %struct.loop* %16, metadata !3541, metadata !DIExpression()), !dbg !3565
  %tobool12 = icmp eq %struct.loop* %16, null, !dbg !3590
  br i1 %tobool12, label %for.end61, label %for.body13, !dbg !3590

for.body13:                                       ; preds = %for.cond11
  %17 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 2), align 8, !dbg !3594
  %base = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %17, i64 0, i32 0, !dbg !3594
  call void @llvm.dbg.value(metadata %struct.loop* %16, metadata !3541, metadata !DIExpression()), !dbg !3565
  %num = getelementptr inbounds %struct.loop, %struct.loop* %16, i64 0, i32 0, !dbg !3594
  %18 = load i32, i32* %num, align 8, !dbg !3594
  %call15 = call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base, i32 %18) #7, !dbg !3594
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call15, metadata !3550, metadata !DIExpression()), !dbg !3565
  %19 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 3), align 8, !dbg !3596
  %base18 = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %19, i64 0, i32 0, !dbg !3596
  %20 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3596
  call void @llvm.dbg.value(metadata %struct.loop* %20, metadata !3541, metadata !DIExpression()), !dbg !3565
  %num22 = getelementptr inbounds %struct.loop, %struct.loop* %20, i64 0, i32 0, !dbg !3596
  %21 = load i32, i32* %num22, align 8, !dbg !3596
  %call23 = call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base18, i32 %21) #7, !dbg !3596
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call23, metadata !3551, metadata !DIExpression()), !dbg !3565
  %call24 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %call23, %struct.bitmap_head_def* %call15) #6, !dbg !3597
  %22 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3598
  call void @llvm.dbg.value(metadata %struct.loop* %22, metadata !3541, metadata !DIExpression()), !dbg !3565
  %call25 = call fastcc %struct.loop* @loop_outer(%struct.loop* %22) #7, !dbg !3600
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3601
  %x_current_loops27 = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, i32 4, !dbg !3601
  %24 = load %struct.loops*, %struct.loops** %x_current_loops27, align 8, !dbg !3601
  %tree_root28 = getelementptr inbounds %struct.loops, %struct.loops* %24, i64 0, i32 3, !dbg !3602
  %25 = load %struct.loop*, %struct.loop** %tree_root28, align 8, !dbg !3602
  %cmp29 = icmp eq %struct.loop* %call25, %25, !dbg !3603
  br i1 %cmp29, label %for.inc60, label %if.end31, !dbg !3604

if.end31:                                         ; preds = %for.body13
  %26 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 4), align 8, !dbg !3605
  %base34 = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %26, i64 0, i32 0, !dbg !3605
  %27 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3605
  call void @llvm.dbg.value(metadata %struct.loop* %27, metadata !3541, metadata !DIExpression()), !dbg !3565
  %num38 = getelementptr inbounds %struct.loop, %struct.loop* %27, i64 0, i32 0, !dbg !3605
  %28 = load i32, i32* %num38, align 8, !dbg !3605
  %call39 = call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base34, i32 %28) #7, !dbg !3605
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call39, metadata !3549, metadata !DIExpression()), !dbg !3565
  %29 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 4), align 8, !dbg !3606
  %base42 = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %29, i64 0, i32 0, !dbg !3606
  %30 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3606
  call void @llvm.dbg.value(metadata %struct.loop* %30, metadata !3541, metadata !DIExpression()), !dbg !3565
  %call46 = call fastcc %struct.loop* @loop_outer(%struct.loop* %30) #7, !dbg !3606
  %num47 = getelementptr inbounds %struct.loop, %struct.loop* %call46, i64 0, i32 0, !dbg !3606
  %31 = load i32, i32* %num47, align 8, !dbg !3606
  %call48 = call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base42, i32 %31) #7, !dbg !3606
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call48, metadata !3548, metadata !DIExpression()), !dbg !3565
  %call49 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %call48, %struct.bitmap_head_def* %call39) #6, !dbg !3607
  %32 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 3), align 8, !dbg !3608
  %base52 = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %32, i64 0, i32 0, !dbg !3608
  %33 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3608
  call void @llvm.dbg.value(metadata %struct.loop* %33, metadata !3541, metadata !DIExpression()), !dbg !3565
  %call56 = call fastcc %struct.loop* @loop_outer(%struct.loop* %33) #7, !dbg !3608
  %num57 = getelementptr inbounds %struct.loop, %struct.loop* %call56, i64 0, i32 0, !dbg !3608
  %34 = load i32, i32* %num57, align 8, !dbg !3608
  %call58 = call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base52, i32 %34) #7, !dbg !3608
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call58, metadata !3552, metadata !DIExpression()), !dbg !3565
  %call59 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %call58, %struct.bitmap_head_def* %call23) #6, !dbg !3609
  br label %for.inc60, !dbg !3610

for.inc60:                                        ; preds = %for.body13, %if.end31
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3541, metadata !DIExpression(DW_OP_deref)), !dbg !3565
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3542, metadata !DIExpression(DW_OP_deref)), !dbg !3565
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !3592
  br label %for.cond11, !dbg !3592, !llvm.loop !3611

for.end61:                                        ; preds = %for.cond11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3613
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3613
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3613
  ret void, !dbg !3613
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_vop_ref_mapping() unnamed_addr #5 !dbg !3614 {
entry:
  %li = alloca %struct.loop_iterator, align 8
  %loop = alloca %struct.loop*, align 8
  %0 = bitcast %struct.loop_iterator* %li to i8*, !dbg !3618
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3618
  %1 = bitcast %struct.loop** %loop to i8*, !dbg !3619
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3619
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3616, metadata !DIExpression(DW_OP_deref)), !dbg !3620
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3617, metadata !DIExpression(DW_OP_deref)), !dbg !3620
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 0) #7, !dbg !3621
  br label %for.cond, !dbg !3621

for.cond:                                         ; preds = %for.body, %entry
  %2 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3623
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !3617, metadata !DIExpression()), !dbg !3620
  %tobool = icmp eq %struct.loop* %2, null, !dbg !3621
  br i1 %tobool, label %for.end, label %for.body, !dbg !3621

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !3617, metadata !DIExpression()), !dbg !3620
  call fastcc void @create_vop_ref_mapping_loop(%struct.loop* nonnull %2) #7, !dbg !3625
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3616, metadata !DIExpression(DW_OP_deref)), !dbg !3620
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3617, metadata !DIExpression(DW_OP_deref)), !dbg !3620
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !3623
  br label %for.cond, !dbg !3623, !llvm.loop !3627

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3629
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3629
  ret void, !dbg !3629
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_mem_ref_locs_p_base_iterate(%struct.VEC_mem_ref_locs_p_base* %vec_, i32 %ix_, %struct.mem_ref_locs** %ptr) unnamed_addr #0 !dbg !3630 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_locs_p_base* %vec_, metadata !3637, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3638, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata %struct.mem_ref_locs** %ptr, metadata !3639, metadata !DIExpression()), !dbg !3640
  %tobool = icmp eq %struct.VEC_mem_ref_locs_p_base* %vec_, null, !dbg !3641
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3641

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_mem_ref_locs_p_base, %struct.VEC_mem_ref_locs_p_base* %vec_, i64 0, i32 0, !dbg !3641
  %0 = load i32, i32* %num, align 8, !dbg !3641
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3641
  br i1 %cmp, label %if.then, label %if.else, !dbg !3643

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3644
  %arrayidx = getelementptr inbounds %struct.VEC_mem_ref_locs_p_base, %struct.VEC_mem_ref_locs_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3644
  %1 = load %struct.mem_ref_locs*, %struct.mem_ref_locs** %arrayidx, align 8, !dbg !3644
  br label %return, !dbg !3644

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3646

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.mem_ref_locs* [ null, %if.else ], [ %1, %if.then ], !dbg !3648
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3648
  store %struct.mem_ref_locs* %storemerge, %struct.mem_ref_locs** %ptr, align 8, !dbg !3648
  ret i32 %retval.0, !dbg !3643
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_mem_ref_locs(%struct.mem_ref_locs* %accs) unnamed_addr #5 !dbg !3649 {
entry:
  %loc = alloca %struct.mem_ref_loc*, align 8
  call void @llvm.dbg.value(metadata %struct.mem_ref_locs* %accs, metadata !3653, metadata !DIExpression()), !dbg !3656
  %0 = bitcast %struct.mem_ref_loc** %loc to i8*, !dbg !3657
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3657
  %tobool = icmp eq %struct.mem_ref_locs* %accs, null, !dbg !3658
  br i1 %tobool, label %cleanup, label %for.cond.preheader, !dbg !3660

for.cond.preheader:                               ; preds = %entry
  %locs = getelementptr inbounds %struct.mem_ref_locs, %struct.mem_ref_locs* %accs, i64 0, i32 0, !dbg !3661
  %1 = bitcast %struct.mem_ref_loc** %loc to i8**, !dbg !3661
  br label %for.cond, !dbg !3664

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %i.0 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ], !dbg !3665
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3654, metadata !DIExpression()), !dbg !3656
  %2 = load %struct.VEC_mem_ref_loc_p_heap*, %struct.VEC_mem_ref_loc_p_heap** %locs, align 8, !dbg !3666
  %tobool1 = icmp eq %struct.VEC_mem_ref_loc_p_heap* %2, null, !dbg !3666
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !3666

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_mem_ref_loc_p_heap, %struct.VEC_mem_ref_loc_p_heap* %2, i64 0, i32 0, !dbg !3666
  br label %cond.end, !dbg !3666

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_mem_ref_loc_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3666
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc** %loc, metadata !3655, metadata !DIExpression(DW_OP_deref)), !dbg !3656
  %call = call fastcc i32 @VEC_mem_ref_loc_p_base_iterate(%struct.VEC_mem_ref_loc_p_base* %cond, i32 %i.0, %struct.mem_ref_loc** nonnull %loc) #7, !dbg !3666
  %tobool3 = icmp eq i32 %call, 0, !dbg !3664
  br i1 %tobool3, label %for.end, label %for.body, !dbg !3664

for.body:                                         ; preds = %cond.end
  %3 = load i8*, i8** %1, align 8, !dbg !3667
  call void @free(i8* %3) #6, !dbg !3668
  %inc = add i32 %i.0, 1, !dbg !3669
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3654, metadata !DIExpression()), !dbg !3656
  br label %for.cond, !dbg !3670, !llvm.loop !3671

for.end:                                          ; preds = %cond.end
  call fastcc void @VEC_mem_ref_loc_p_heap_free(%struct.VEC_mem_ref_loc_p_heap** nonnull %locs) #7, !dbg !3673
  %4 = bitcast %struct.mem_ref_locs* %accs to i8*, !dbg !3674
  call void @free(i8* nonnull %4) #6, !dbg !3675
  br label %cleanup, !dbg !3676

cleanup:                                          ; preds = %entry, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3676
  ret void, !dbg !3676
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_mem_ref_locs_p_heap_free(%struct.VEC_mem_ref_locs_p_heap** %vec_) unnamed_addr #0 !dbg !3677 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_locs_p_heap** %vec_, metadata !3682, metadata !DIExpression()), !dbg !3683
  %0 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %vec_, align 8, !dbg !3684
  %tobool = icmp eq %struct.VEC_mem_ref_locs_p_heap* %0, null, !dbg !3684
  br i1 %tobool, label %if.end, label %if.then, !dbg !3686

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_mem_ref_locs_p_heap* %0 to i8*, !dbg !3686
  tail call void @free(i8* nonnull %1) #6, !dbg !3684
  br label %if.end, !dbg !3684

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_mem_ref_locs_p_heap* null, %struct.VEC_mem_ref_locs_p_heap** %vec_, align 8, !dbg !3686
  ret void, !dbg !3686
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_mem_ref_loc_p_base_iterate(%struct.VEC_mem_ref_loc_p_base* %vec_, i32 %ix_, %struct.mem_ref_loc** %ptr) unnamed_addr #0 !dbg !3687 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_base* %vec_, metadata !3694, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3695, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc** %ptr, metadata !3696, metadata !DIExpression()), !dbg !3697
  %tobool = icmp eq %struct.VEC_mem_ref_loc_p_base* %vec_, null, !dbg !3698
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3698

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_mem_ref_loc_p_base, %struct.VEC_mem_ref_loc_p_base* %vec_, i64 0, i32 0, !dbg !3698
  %0 = load i32, i32* %num, align 8, !dbg !3698
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3698
  br i1 %cmp, label %if.then, label %if.else, !dbg !3700

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3701
  %arrayidx = getelementptr inbounds %struct.VEC_mem_ref_loc_p_base, %struct.VEC_mem_ref_loc_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3701
  %1 = load %struct.mem_ref_loc*, %struct.mem_ref_loc** %arrayidx, align 8, !dbg !3701
  br label %return, !dbg !3701

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3703

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.mem_ref_loc* [ null, %if.else ], [ %1, %if.then ], !dbg !3705
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3705
  store %struct.mem_ref_loc* %storemerge, %struct.mem_ref_loc** %ptr, align 8, !dbg !3705
  ret i32 %retval.0, !dbg !3700
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_mem_ref_loc_p_heap_free(%struct.VEC_mem_ref_loc_p_heap** %vec_) unnamed_addr #0 !dbg !3706 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap** %vec_, metadata !3711, metadata !DIExpression()), !dbg !3712
  %0 = load %struct.VEC_mem_ref_loc_p_heap*, %struct.VEC_mem_ref_loc_p_heap** %vec_, align 8, !dbg !3713
  %tobool = icmp eq %struct.VEC_mem_ref_loc_p_heap* %0, null, !dbg !3713
  br i1 %tobool, label %if.end, label %if.then, !dbg !3715

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_mem_ref_loc_p_heap* %0 to i8*, !dbg !3715
  tail call void @free(i8* nonnull %1) #6, !dbg !3713
  br label %if.end, !dbg !3713

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_mem_ref_loc_p_heap* null, %struct.VEC_mem_ref_loc_p_heap** %vec_, align 8, !dbg !3715
  ret void, !dbg !3715
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !3716 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !3722, metadata !DIExpression()), !dbg !3723
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !3724
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3724

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !3724
  %0 = load i32, i32* %num, align 8, !dbg !3724
  br label %cond.end, !dbg !3724

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3724
  ret i32 %cond, !dbg !3724
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gather_mem_refs_stmt(%struct.loop* %loop, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !3725 {
entry:
  %is_stored = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3729, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3730, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata %union.tree_node** null, metadata !3731, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i8* %is_stored, metadata !3736, metadata !DIExpression(DW_OP_deref)), !dbg !3740
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %is_stored) #8, !dbg !3741
  %call = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !3742
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !3742
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3744

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %is_stored, metadata !3736, metadata !DIExpression(DW_OP_deref)), !dbg !3740
  %call1 = call fastcc %union.tree_node** @simple_mem_ref_in_stmt(%union.gimple_statement_d* %stmt, i8* nonnull %is_stored) #7, !dbg !3745
  call void @llvm.dbg.value(metadata %union.tree_node** %call1, metadata !3731, metadata !DIExpression()), !dbg !3740
  %tobool2 = icmp eq %union.tree_node** %call1, null, !dbg !3746
  br i1 %tobool2, label %fail, label %if.end4, !dbg !3748

if.end4:                                          ; preds = %if.end
  %0 = load %union.tree_node*, %union.tree_node** %call1, align 8, !dbg !3749
  %call5 = call i32 @iterative_hash_expr(%union.tree_node* %0, i32 0) #6, !dbg !3750
  call void @llvm.dbg.value(metadata i32 %call5, metadata !3732, metadata !DIExpression()), !dbg !3740
  %1 = load %struct.htab*, %struct.htab** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 0), align 8, !dbg !3751
  %2 = bitcast %union.tree_node** %call1 to i8**, !dbg !3752
  %3 = load i8*, i8** %2, align 8, !dbg !3752
  %call6 = call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* %3, i32 %call5, i32 1) #6, !dbg !3753
  call void @llvm.dbg.value(metadata i8** %call6, metadata !3733, metadata !DIExpression()), !dbg !3740
  %4 = load i8*, i8** %call6, align 8, !dbg !3754
  %tobool7 = icmp eq i8* %4, null, !dbg !3754
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !3756

if.then8:                                         ; preds = %if.end4
  %5 = bitcast i8* %4 to %struct.mem_ref*, !dbg !3756
  call void @llvm.dbg.value(metadata %struct.mem_ref* %5, metadata !3734, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 undef, metadata !3738, metadata !DIExpression()), !dbg !3740
  br label %if.end21, !dbg !3757

if.else:                                          ; preds = %if.end4
  %6 = load %struct.VEC_mem_ref_p_heap*, %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), align 8, !dbg !3759
  %base = getelementptr inbounds %struct.VEC_mem_ref_p_heap, %struct.VEC_mem_ref_p_heap* %6, i64 0, i32 0, !dbg !3759
  %call11 = call fastcc i32 @VEC_mem_ref_p_base_length(%struct.VEC_mem_ref_p_base* %base) #7, !dbg !3759
  call void @llvm.dbg.value(metadata i32 %call11, metadata !3738, metadata !DIExpression()), !dbg !3740
  %7 = load %union.tree_node*, %union.tree_node** %call1, align 8, !dbg !3761
  %call12 = call fastcc %struct.mem_ref* @mem_ref_alloc(%union.tree_node* %7, i32 %call5, i32 %call11) #7, !dbg !3762
  call void @llvm.dbg.value(metadata %struct.mem_ref* %call12, metadata !3734, metadata !DIExpression()), !dbg !3740
  %call13 = call fastcc %struct.mem_ref** @VEC_mem_ref_p_heap_safe_push(%struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), %struct.mem_ref* %call12) #7, !dbg !3763
  %8 = bitcast i8** %call6 to %struct.mem_ref**, !dbg !3764
  store %struct.mem_ref* %call12, %struct.mem_ref** %8, align 8, !dbg !3764
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3765
  %tobool14 = icmp eq %struct._IO_FILE* %9, null, !dbg !3765
  br i1 %tobool14, label %if.end21, label %land.lhs.true, !dbg !3767

land.lhs.true:                                    ; preds = %if.else
  %10 = load i32, i32* @dump_flags, align 4, !dbg !3768
  %and = and i32 %10, 8, !dbg !3769
  %tobool15 = icmp eq i32 %and, 0, !dbg !3769
  br i1 %tobool15, label %if.end21, label %if.then16, !dbg !3770

if.then16:                                        ; preds = %land.lhs.true
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0), i32 %call11) #6, !dbg !3771
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3773
  %mem18 = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %call12, i64 0, i32 0, !dbg !3774
  %12 = load %union.tree_node*, %union.tree_node** %mem18, align 8, !dbg !3774
  call void @print_generic_expr(%struct._IO_FILE* %11, %union.tree_node* %12, i32 2) #6, !dbg !3775
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3776
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !3777
  br label %if.end21, !dbg !3778

if.end21:                                         ; preds = %land.lhs.true, %if.else, %if.then16, %if.then8
  %ref.0 = phi %struct.mem_ref* [ %5, %if.then8 ], [ %call12, %if.then16 ], [ %call12, %land.lhs.true ], [ %call12, %if.else ], !dbg !3779
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref.0, metadata !3734, metadata !DIExpression()), !dbg !3740
  %14 = load i8, i8* %is_stored, align 1, !dbg !3780
  call void @llvm.dbg.value(metadata i8 %14, metadata !3736, metadata !DIExpression()), !dbg !3740
  %tobool22 = icmp eq i8 %14, 0, !dbg !3780
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !3782

if.then23:                                        ; preds = %if.end21
  call fastcc void @mark_ref_stored(%struct.mem_ref* %ref.0, %struct.loop* %loop) #7, !dbg !3783
  br label %if.end24, !dbg !3783

if.end24:                                         ; preds = %if.end21, %if.then23
  %call25 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !3784
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !3735, metadata !DIExpression()), !dbg !3740
  %cmp = icmp eq %union.tree_node* %call25, null, !dbg !3786
  br i1 %cmp, label %if.end28, label %if.then26, !dbg !3787

if.then26:                                        ; preds = %if.end24
  %vops = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref.0, i64 0, i32 5, !dbg !3788
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vops, align 8, !dbg !3788
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3789
  %16 = bitcast i32* %var to %struct.tree_decl_minimal**, !dbg !3789
  %17 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %16, align 8, !dbg !3789
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %17, i64 0, i32 2, !dbg !3789
  %18 = load i32, i32* %uid, align 4, !dbg !3789
  %call27 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %15, i32 %18) #6, !dbg !3790
  br label %if.end28, !dbg !3790

if.end28:                                         ; preds = %if.end24, %if.then26
  call fastcc void @record_mem_ref_loc(%struct.mem_ref* %ref.0, %struct.loop* %loop, %union.gimple_statement_d* %stmt, %union.tree_node** nonnull %call1) #7, !dbg !3791
  br label %cleanup, !dbg !3792

fail:                                             ; preds = %if.end
  call void @llvm.dbg.label(metadata !3739), !dbg !3793
  %19 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 4), align 8, !dbg !3794
  %base31 = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %19, i64 0, i32 0, !dbg !3794
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !3794
  %20 = load i32, i32* %num, align 8, !dbg !3794
  %call35 = call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base31, i32 %20) #7, !dbg !3794
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call35, metadata !3737, metadata !DIExpression()), !dbg !3740
  %call36 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !3795
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !3735, metadata !DIExpression()), !dbg !3740
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !3797
  br i1 %cmp37, label %cleanup, label %if.then38, !dbg !3798

if.then38:                                        ; preds = %fail
  %var40 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3799
  %21 = bitcast i32* %var40 to %struct.tree_decl_minimal**, !dbg !3799
  %22 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %21, align 8, !dbg !3799
  %uid42 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %22, i64 0, i32 2, !dbg !3799
  %23 = load i32, i32* %uid42, align 4, !dbg !3799
  %call43 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call35, i32 %23) #6, !dbg !3800
  br label %cleanup, !dbg !3800

cleanup:                                          ; preds = %fail, %entry, %if.then38, %if.end28
  call void @llvm.dbg.value(metadata i8* %is_stored, metadata !3736, metadata !DIExpression(DW_OP_deref)), !dbg !3740
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %is_stored) #8, !dbg !3801
  ret void, !dbg !3801
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_init(%struct.loop_iterator* %li, %struct.loop** %loop, i32 %flags) unnamed_addr #0 !dbg !3802 {
entry:
  %aloop = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3808, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3809, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3810, metadata !DIExpression()), !dbg !3814
  %0 = bitcast %struct.loop** %aloop to i8*, !dbg !3815
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3815
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !3816
  store i32 0, i32* %idx, align 8, !dbg !3817
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3818
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 4, !dbg !3818
  %2 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3818
  %tobool = icmp eq %struct.loops* %2, null, !dbg !3818
  br i1 %tobool, label %if.then, label %if.end, !dbg !3820

if.then:                                          ; preds = %entry
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3821
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %to_visit, align 8, !dbg !3823
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !3824
  br label %cleanup, !dbg !3825

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @number_of_loops() #7, !dbg !3826
  %call1 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %call) #7, !dbg !3826
  %to_visit2 = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3827
  store %struct.VEC_int_heap* %call1, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3828
  %and = and i32 %flags, 1, !dbg !3829
  %3 = xor i32 %and, 1, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %3, metadata !3813, metadata !DIExpression()), !dbg !3814
  %and4 = and i32 %flags, 4, !dbg !3831
  %tobool5 = icmp eq i32 %and4, 0, !dbg !3831
  br i1 %tobool5, label %if.else, label %for.cond.preheader, !dbg !3833

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !3834

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !3837
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3812, metadata !DIExpression()), !dbg !3814
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3838
  %x_current_loops8 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 4, !dbg !3838
  %5 = load %struct.loops*, %struct.loops** %x_current_loops8, align 8, !dbg !3838
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %5, i64 0, i32 1, !dbg !3838
  %6 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !3838
  %tobool9 = icmp eq %struct.VEC_loop_p_gc* %6, null, !dbg !3838
  br i1 %tobool9, label %cond.end, label %cond.true, !dbg !3838

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %6, i64 0, i32 0, !dbg !3838
  br label %cond.end, !dbg !3838

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond13 = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3838
  call void @llvm.dbg.value(metadata %struct.loop** %aloop, metadata !3811, metadata !DIExpression(DW_OP_deref)), !dbg !3814
  %call14 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %cond13, i32 %i.0, %struct.loop** nonnull %aloop) #7, !dbg !3838
  %tobool15 = icmp eq i32 %call14, 0, !dbg !3834
  br i1 %tobool15, label %if.end114.loopexit2, label %for.body, !dbg !3834

for.body:                                         ; preds = %cond.end
  %7 = load %struct.loop*, %struct.loop** %aloop, align 8, !dbg !3840
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !3811, metadata !DIExpression()), !dbg !3814
  %cmp = icmp eq %struct.loop* %7, null, !dbg !3842
  br i1 %cmp, label %for.inc, label %land.lhs.true, !dbg !3843

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !3811, metadata !DIExpression()), !dbg !3814
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %7, i64 0, i32 8, !dbg !3844
  %8 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3844
  %cmp16 = icmp eq %struct.loop* %8, null, !dbg !3845
  br i1 %cmp16, label %land.lhs.true17, label %for.inc, !dbg !3846

land.lhs.true17:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !3811, metadata !DIExpression()), !dbg !3814
  %num = getelementptr inbounds %struct.loop, %struct.loop* %7, i64 0, i32 0, !dbg !3847
  %9 = load i32, i32* %num, align 8, !dbg !3847
  %cmp18 = icmp slt i32 %9, %3, !dbg !3848
  br i1 %cmp18, label %for.inc, label %if.then19, !dbg !3849

if.then19:                                        ; preds = %land.lhs.true17
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3850
  %tobool21 = icmp eq %struct.VEC_int_heap* %10, null, !dbg !3850
  br i1 %tobool21, label %cond.end26, label %cond.true22, !dbg !3850

cond.true22:                                      ; preds = %if.then19
  %base24 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i64 0, i32 0, !dbg !3850
  br label %cond.end26, !dbg !3850

cond.end26:                                       ; preds = %if.then19, %cond.true22
  %cond27 = phi %struct.VEC_int_base* [ %base24, %cond.true22 ], [ null, %if.then19 ], !dbg !3850
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !3811, metadata !DIExpression()), !dbg !3814
  %call29 = call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond27, i32 %9) #7, !dbg !3850
  br label %for.inc, !dbg !3850

for.inc:                                          ; preds = %land.lhs.true17, %for.body, %land.lhs.true, %cond.end26
  %inc = add i32 %i.0, 1, !dbg !3851
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3812, metadata !DIExpression()), !dbg !3814
  br label %for.cond, !dbg !3852, !llvm.loop !3853

if.else:                                          ; preds = %if.end
  %and31 = and i32 %flags, 2, !dbg !3855
  %tobool32 = icmp eq i32 %and31, 0, !dbg !3855
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3857
  %x_current_loops35 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 4, !dbg !3857
  %12 = load %struct.loops*, %struct.loops** %x_current_loops35, align 8, !dbg !3857
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %12, i64 0, i32 3, !dbg !3857
  %13 = bitcast %struct.loop** %tree_root to i64*, !dbg !3857
  %14 = load i64, i64* %13, align 8, !dbg !3857
  %15 = bitcast %struct.loop** %aloop to i64*, !dbg !3857
  store i64 %14, i64* %15, align 8, !dbg !3857
  %16 = inttoptr i64 %14 to %struct.loop*, !dbg !3858
  br i1 %tobool32, label %while.cond79.preheader, label %for.cond36.preheader, !dbg !3858

for.cond36.preheader:                             ; preds = %if.else
  br label %for.cond36, !dbg !3859

while.cond79.preheader:                           ; preds = %if.else
  br label %while.cond79, !dbg !3862

for.cond36:                                       ; preds = %for.cond36.preheader, %for.inc40
  %17 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %18 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %19 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %20 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %21 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ]
  %22 = phi %struct.loop* [ %16, %for.cond36.preheader ], [ %26, %for.inc40 ], !dbg !3864
  call void @llvm.dbg.value(metadata %struct.loop* %22, metadata !3811, metadata !DIExpression()), !dbg !3814
  %inner37 = getelementptr inbounds %struct.loop, %struct.loop* %22, i64 0, i32 8, !dbg !3866
  %23 = load %struct.loop*, %struct.loop** %inner37, align 8, !dbg !3866
  %cmp38 = icmp eq %struct.loop* %23, null, !dbg !3867
  br i1 %cmp38, label %while.cond.preheader, label %for.inc40, !dbg !3859

while.cond.preheader:                             ; preds = %for.cond36
  %.lcssa16 = phi %struct.loop* [ %17, %for.cond36 ]
  %.lcssa15 = phi %struct.loop* [ %18, %for.cond36 ]
  %.lcssa14 = phi %struct.loop* [ %19, %for.cond36 ]
  %.lcssa13 = phi %struct.loop* [ %20, %for.cond36 ]
  br label %while.cond, !dbg !3868

for.inc40:                                        ; preds = %for.cond36
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !3811, metadata !DIExpression()), !dbg !3814
  %inner41 = getelementptr inbounds %struct.loop, %struct.loop* %21, i64 0, i32 8, !dbg !3869
  %24 = bitcast %struct.loop** %inner41 to i64*, !dbg !3869
  %25 = load i64, i64* %24, align 8, !dbg !3869
  store i64 %25, i64* %15, align 8, !dbg !3870
  %26 = inttoptr i64 %25 to %struct.loop*, !dbg !3871
  br label %for.cond36, !dbg !3871, !llvm.loop !3872

while.cond:                                       ; preds = %while.cond.preheader, %if.end74
  %27 = phi %struct.loop* [ %.lcssa16, %while.cond.preheader ], [ %43, %if.end74 ]
  %28 = phi %struct.loop* [ %.lcssa15, %while.cond.preheader ], [ %44, %if.end74 ]
  %29 = phi %struct.loop* [ %.lcssa14, %while.cond.preheader ], [ %44, %if.end74 ]
  %30 = phi %struct.loop* [ %.lcssa13, %while.cond.preheader ], [ %44, %if.end74 ], !dbg !3874
  call void @llvm.dbg.value(metadata %struct.loop* %30, metadata !3811, metadata !DIExpression()), !dbg !3814
  %num43 = getelementptr inbounds %struct.loop, %struct.loop* %30, i64 0, i32 0, !dbg !3877
  %31 = load i32, i32* %num43, align 8, !dbg !3877
  %cmp44 = icmp slt i32 %31, %3, !dbg !3878
  br i1 %cmp44, label %if.end56, label %if.then45, !dbg !3879

if.then45:                                        ; preds = %while.cond
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3880
  %tobool47 = icmp eq %struct.VEC_int_heap* %32, null, !dbg !3880
  br i1 %tobool47, label %cond.end52, label %cond.true48, !dbg !3880

cond.true48:                                      ; preds = %if.then45
  %base50 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %32, i64 0, i32 0, !dbg !3880
  br label %cond.end52, !dbg !3880

cond.end52:                                       ; preds = %if.then45, %cond.true48
  %cond53 = phi %struct.VEC_int_base* [ %base50, %cond.true48 ], [ null, %if.then45 ], !dbg !3880
  call void @llvm.dbg.value(metadata %struct.loop* %29, metadata !3811, metadata !DIExpression()), !dbg !3814
  %num54 = getelementptr inbounds %struct.loop, %struct.loop* %29, i64 0, i32 0, !dbg !3880
  %33 = load i32, i32* %num54, align 8, !dbg !3880
  %call55 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond53, i32 %33) #7, !dbg !3880
  br label %if.end56, !dbg !3880

if.end56:                                         ; preds = %while.cond, %cond.end52
  call void @llvm.dbg.value(metadata %struct.loop* %28, metadata !3811, metadata !DIExpression()), !dbg !3814
  %next = getelementptr inbounds %struct.loop, %struct.loop* %28, i64 0, i32 9, !dbg !3881
  %34 = load %struct.loop*, %struct.loop** %next, align 8, !dbg !3881
  %tobool57 = icmp eq %struct.loop* %34, null, !dbg !3883
  call void @llvm.dbg.value(metadata %struct.loop* %28, metadata !3811, metadata !DIExpression()), !dbg !3814
  br i1 %tobool57, label %if.else67, label %if.then58, !dbg !3884

if.then58:                                        ; preds = %if.end56
  %35 = ptrtoint %struct.loop* %34 to i64, !dbg !3884
  store i64 %35, i64* %15, align 8, !dbg !3885
  br label %for.cond60, !dbg !3888

for.cond60:                                       ; preds = %for.inc64, %if.then58
  %36 = phi %struct.loop* [ %42, %for.inc64 ], [ %34, %if.then58 ]
  %37 = phi %struct.loop* [ %42, %for.inc64 ], [ %34, %if.then58 ]
  %38 = phi %struct.loop* [ %42, %for.inc64 ], [ %34, %if.then58 ], !dbg !3889
  call void @llvm.dbg.value(metadata %struct.loop* %38, metadata !3811, metadata !DIExpression()), !dbg !3814
  %inner61 = getelementptr inbounds %struct.loop, %struct.loop* %38, i64 0, i32 8, !dbg !3891
  %39 = load %struct.loop*, %struct.loop** %inner61, align 8, !dbg !3891
  %cmp62 = icmp eq %struct.loop* %39, null, !dbg !3892
  br i1 %cmp62, label %if.end74.loopexit, label %for.inc64, !dbg !3893

for.inc64:                                        ; preds = %for.cond60
  call void @llvm.dbg.value(metadata %struct.loop* %37, metadata !3811, metadata !DIExpression()), !dbg !3814
  %inner65 = getelementptr inbounds %struct.loop, %struct.loop* %37, i64 0, i32 8, !dbg !3894
  %40 = bitcast %struct.loop** %inner65 to i64*, !dbg !3894
  %41 = load i64, i64* %40, align 8, !dbg !3894
  store i64 %41, i64* %15, align 8, !dbg !3895
  %42 = inttoptr i64 %41 to %struct.loop*, !dbg !3896
  br label %for.cond60, !dbg !3896, !llvm.loop !3897

if.else67:                                        ; preds = %if.end56
  %call68 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %28) #7, !dbg !3899
  %tobool69 = icmp eq %struct.loop* %call68, null, !dbg !3899
  br i1 %tobool69, label %if.end114.loopexit1, label %if.else71, !dbg !3901

if.else71:                                        ; preds = %if.else67
  call void @llvm.dbg.value(metadata %struct.loop* %27, metadata !3811, metadata !DIExpression()), !dbg !3814
  %call72 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %27) #7, !dbg !3902
  call void @llvm.dbg.value(metadata %struct.loop* %call72, metadata !3811, metadata !DIExpression()), !dbg !3814
  store %struct.loop* %call72, %struct.loop** %aloop, align 8, !dbg !3903
  br label %if.end74

if.end74.loopexit:                                ; preds = %for.cond60
  %.lcssa12 = phi %struct.loop* [ %36, %for.cond60 ]
  %.lcssa11 = phi %struct.loop* [ %38, %for.cond60 ], !dbg !3889
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa11, metadata !3811, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa11, metadata !3811, metadata !DIExpression()), !dbg !3814
  br label %if.end74, !dbg !3868

if.end74:                                         ; preds = %if.end74.loopexit, %if.else71
  %43 = phi %struct.loop* [ %.lcssa12, %if.end74.loopexit ], [ %call72, %if.else71 ]
  %44 = phi %struct.loop* [ %.lcssa11, %if.end74.loopexit ], [ %call72, %if.else71 ]
  br label %while.cond, !dbg !3868, !llvm.loop !3904

while.cond79:                                     ; preds = %while.cond79.preheader, %if.end111
  %45 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %69, %if.end111 ]
  %46 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %70, %if.end111 ]
  %47 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %71, %if.end111 ]
  %48 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %72, %if.end111 ]
  %49 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %73, %if.end111 ]
  %50 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %74, %if.end111 ]
  %51 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %75, %if.end111 ]
  %52 = phi %struct.loop* [ %16, %while.cond79.preheader ], [ %76, %if.end111 ], !dbg !3906
  call void @llvm.dbg.value(metadata %struct.loop* %52, metadata !3811, metadata !DIExpression()), !dbg !3814
  %num81 = getelementptr inbounds %struct.loop, %struct.loop* %52, i64 0, i32 0, !dbg !3909
  %53 = load i32, i32* %num81, align 8, !dbg !3909
  %cmp82 = icmp slt i32 %53, %3, !dbg !3910
  br i1 %cmp82, label %if.end94, label %if.then83, !dbg !3911

if.then83:                                        ; preds = %while.cond79
  %54 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !3912
  %tobool85 = icmp eq %struct.VEC_int_heap* %54, null, !dbg !3912
  br i1 %tobool85, label %cond.end90, label %cond.true86, !dbg !3912

cond.true86:                                      ; preds = %if.then83
  %base88 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %54, i64 0, i32 0, !dbg !3912
  br label %cond.end90, !dbg !3912

cond.end90:                                       ; preds = %if.then83, %cond.true86
  %cond91 = phi %struct.VEC_int_base* [ %base88, %cond.true86 ], [ null, %if.then83 ], !dbg !3912
  call void @llvm.dbg.value(metadata %struct.loop* %51, metadata !3811, metadata !DIExpression()), !dbg !3814
  %num92 = getelementptr inbounds %struct.loop, %struct.loop* %51, i64 0, i32 0, !dbg !3912
  %55 = load i32, i32* %num92, align 8, !dbg !3912
  %call93 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond91, i32 %55) #7, !dbg !3912
  br label %if.end94, !dbg !3912

if.end94:                                         ; preds = %while.cond79, %cond.end90
  call void @llvm.dbg.value(metadata %struct.loop* %50, metadata !3811, metadata !DIExpression()), !dbg !3814
  %inner95 = getelementptr inbounds %struct.loop, %struct.loop* %50, i64 0, i32 8, !dbg !3913
  %56 = load %struct.loop*, %struct.loop** %inner95, align 8, !dbg !3913
  %cmp96 = icmp eq %struct.loop* %56, null, !dbg !3915
  br i1 %cmp96, label %while.cond100.preheader, label %if.then97, !dbg !3916

while.cond100.preheader:                          ; preds = %if.end94
  br label %while.cond100, !dbg !3917

if.then97:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.loop* %49, metadata !3811, metadata !DIExpression()), !dbg !3814
  %inner98 = getelementptr inbounds %struct.loop, %struct.loop* %49, i64 0, i32 8, !dbg !3919
  %57 = bitcast %struct.loop** %inner98 to i64*, !dbg !3919
  %58 = load i64, i64* %57, align 8, !dbg !3919
  store i64 %58, i64* %15, align 8, !dbg !3920
  %59 = inttoptr i64 %58 to %struct.loop*, !dbg !3921
  br label %if.end111, !dbg !3921

while.cond100:                                    ; preds = %while.cond100.preheader, %while.body104
  %60 = phi %struct.loop* [ %45, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %61 = phi %struct.loop* [ %46, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %62 = phi %struct.loop* [ %47, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %63 = phi %struct.loop* [ %48, %while.cond100.preheader ], [ %call105, %while.body104 ], !dbg !3922
  call void @llvm.dbg.value(metadata %struct.loop* %63, metadata !3811, metadata !DIExpression()), !dbg !3814
  %cmp101 = icmp eq %struct.loop* %63, null, !dbg !3923
  br i1 %cmp101, label %land.end, label %land.rhs, !dbg !3924

land.rhs:                                         ; preds = %while.cond100
  call void @llvm.dbg.value(metadata %struct.loop* %62, metadata !3811, metadata !DIExpression()), !dbg !3814
  %next102 = getelementptr inbounds %struct.loop, %struct.loop* %62, i64 0, i32 9, !dbg !3925
  %64 = load %struct.loop*, %struct.loop** %next102, align 8, !dbg !3925
  %cmp103 = icmp eq %struct.loop* %64, null, !dbg !3926
  br label %land.end

land.end:                                         ; preds = %while.cond100, %land.rhs
  %65 = phi i1 [ false, %while.cond100 ], [ %cmp103, %land.rhs ], !dbg !3927
  call void @llvm.dbg.value(metadata %struct.loop* %61, metadata !3811, metadata !DIExpression()), !dbg !3814
  br i1 %65, label %while.body104, label %while.end106, !dbg !3917

while.body104:                                    ; preds = %land.end
  %call105 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %61) #7, !dbg !3928
  call void @llvm.dbg.value(metadata %struct.loop* %call105, metadata !3811, metadata !DIExpression()), !dbg !3814
  store %struct.loop* %call105, %struct.loop** %aloop, align 8, !dbg !3929
  br label %while.cond100, !dbg !3917, !llvm.loop !3930

while.end106:                                     ; preds = %land.end
  %.lcssa10 = phi %struct.loop* [ %60, %land.end ]
  %.lcssa = phi %struct.loop* [ %61, %land.end ]
  %cmp107 = icmp eq %struct.loop* %.lcssa, null, !dbg !3932
  br i1 %cmp107, label %if.end114.loopexit, label %if.end109, !dbg !3934

if.end109:                                        ; preds = %while.end106
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa10, metadata !3811, metadata !DIExpression()), !dbg !3814
  %next110 = getelementptr inbounds %struct.loop, %struct.loop* %.lcssa10, i64 0, i32 9, !dbg !3935
  %66 = bitcast %struct.loop** %next110 to i64*, !dbg !3935
  %67 = load i64, i64* %66, align 8, !dbg !3935
  store i64 %67, i64* %15, align 8, !dbg !3936
  %68 = inttoptr i64 %67 to %struct.loop*
  br label %if.end111

if.end111:                                        ; preds = %if.end109, %if.then97
  %69 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %70 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %71 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %72 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %73 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %74 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %75 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  %76 = phi %struct.loop* [ %68, %if.end109 ], [ %59, %if.then97 ]
  br label %while.cond79, !dbg !3862, !llvm.loop !3937

if.end114.loopexit:                               ; preds = %while.end106
  br label %if.end114, !dbg !3939

if.end114.loopexit1:                              ; preds = %if.else67
  br label %if.end114, !dbg !3939

if.end114.loopexit2:                              ; preds = %cond.end
  br label %if.end114, !dbg !3939

if.end114:                                        ; preds = %if.end114.loopexit2, %if.end114.loopexit1, %if.end114.loopexit
  call fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) #7, !dbg !3939
  br label %cleanup, !dbg !3940

cleanup:                                          ; preds = %if.end114, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3940
  ret void, !dbg !3940
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3941 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_base* %vec_, metadata !3947, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3948, metadata !DIExpression()), !dbg !3949
  br label %land.end, !dbg !3950

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3950
  %arrayidx = getelementptr inbounds %struct.VEC_bitmap_base, %struct.VEC_bitmap_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3950
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !3950
  ret %struct.bitmap_head_def* %0, !dbg !3950
}

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !3951 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3957, metadata !DIExpression()), !dbg !3959
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !3960
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3960
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !3960
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3960

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !3960
  br label %cond.end, !dbg !3960

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3960
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !3960
  call void @llvm.dbg.value(metadata i32 %call, metadata !3958, metadata !DIExpression()), !dbg !3959
  %cmp = icmp eq i32 %call, 0, !dbg !3961
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3963

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3964
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !3964
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !3964

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !3964
  br label %cond.end8, !dbg !3964

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !3964
  %sub = add i32 %call, -1, !dbg !3964
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #7, !dbg !3964
  br label %cleanup, !dbg !3965

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !3959
  ret %struct.loop* %retval.0, !dbg !3966
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) unnamed_addr #0 !dbg !3967 {
entry:
  %anum = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3971, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3972, metadata !DIExpression()), !dbg !3974
  %0 = bitcast i32* %anum to i8*, !dbg !3975
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3975
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3974
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !3974
  br label %while.cond, !dbg !3976

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit, align 8, !dbg !3977
  %tobool = icmp eq %struct.VEC_int_heap* %1, null, !dbg !3977
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3977

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !3977
  br label %cond.end, !dbg !3977

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !3977
  %2 = load i32, i32* %idx, align 8, !dbg !3977
  call void @llvm.dbg.value(metadata i32* %anum, metadata !3973, metadata !DIExpression(DW_OP_deref)), !dbg !3974
  %call = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %cond, i32 %2, i32* nonnull %anum) #7, !dbg !3977
  %tobool2 = icmp eq i32 %call, 0, !dbg !3976
  br i1 %tobool2, label %while.end, label %while.body, !dbg !3976

while.body:                                       ; preds = %cond.end
  %3 = load i32, i32* %idx, align 8, !dbg !3978
  %inc = add i32 %3, 1, !dbg !3978
  store i32 %inc, i32* %idx, align 8, !dbg !3978
  %4 = load i32, i32* %anum, align 4, !dbg !3980
  call void @llvm.dbg.value(metadata i32 %4, metadata !3973, metadata !DIExpression()), !dbg !3974
  %call4 = call fastcc %struct.loop* @get_loop(i32 %4) #7, !dbg !3981
  store %struct.loop* %call4, %struct.loop** %loop, align 8, !dbg !3982
  %tobool5 = icmp eq %struct.loop* %call4, null, !dbg !3983
  br i1 %tobool5, label %while.cond, label %cleanup.loopexit, !dbg !3985, !llvm.loop !3986

while.end:                                        ; preds = %cond.end
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %to_visit) #7, !dbg !3988
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !3989
  br label %cleanup, !dbg !3990

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !3990

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3990
  ret void, !dbg !3990
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3991 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3993, metadata !DIExpression()), !dbg !3994
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !3995
  %tobool = icmp eq i8 %call, 0, !dbg !3995
  br i1 %tobool, label %return, label %if.end, !dbg !3997

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !3998
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !3998
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !3998
  br label %return, !dbg !3999

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !3994
  ret %union.tree_node* %retval.0, !dbg !4000
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node** @simple_mem_ref_in_stmt(%union.gimple_statement_d* %stmt, i8* %is_store) unnamed_addr #5 !dbg !4001 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4005, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.value(metadata i8* %is_store, metadata !4006, metadata !DIExpression()), !dbg !4009
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !4010
  %cmp = icmp eq i32 %call, 6, !dbg !4012
  br i1 %cmp, label %if.end, label %cleanup, !dbg !4013

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %call1, metadata !4008, metadata !DIExpression()), !dbg !4009
  %call2 = tail call fastcc %union.tree_node** @gimple_assign_lhs_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !4015
  call void @llvm.dbg.value(metadata %union.tree_node** %call2, metadata !4007, metadata !DIExpression()), !dbg !4009
  %0 = bitcast %union.tree_node** %call2 to i64**, !dbg !4016
  %1 = load i64*, i64** %0, align 8, !dbg !4016
  %bf.load = load i64, i64* %1, align 8, !dbg !4016
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4018
  %cmp3 = icmp eq i64 %bf.cast1, 141, !dbg !4018
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !4019

if.then4:                                         ; preds = %if.end
  %call5 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call1) #7, !dbg !4020
  %cmp6 = icmp eq i32 %call5, 3, !dbg !4023
  br i1 %cmp6, label %lor.lhs.false, label %cleanup, !dbg !4024

lor.lhs.false:                                    ; preds = %if.then4
  %call7 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !4025
  %call8 = tail call zeroext i8 @is_gimple_addressable(%union.tree_node* %call7) #6, !dbg !4026
  %tobool = icmp eq i8 %call8, 0, !dbg !4026
  br i1 %tobool, label %cleanup, label %if.end10, !dbg !4027

if.end10:                                         ; preds = %lor.lhs.false
  store i8 0, i8* %is_store, align 1, !dbg !4028
  %call11 = tail call fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %stmt) #7, !dbg !4029
  br label %cleanup, !dbg !4030

if.else:                                          ; preds = %if.end
  %cmp12 = icmp eq i32 %call1, 141, !dbg !4031
  br i1 %cmp12, label %if.then19, label %lor.lhs.false13, !dbg !4033

lor.lhs.false13:                                  ; preds = %if.else
  %call14 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call1) #7, !dbg !4034
  %cmp15 = icmp eq i32 %call14, 3, !dbg !4035
  br i1 %cmp15, label %land.lhs.true, label %cleanup, !dbg !4036

land.lhs.true:                                    ; preds = %lor.lhs.false13
  %call16 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !4037
  %call17 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %call16) #6, !dbg !4038
  %tobool18 = icmp eq i8 %call17, 0, !dbg !4038
  br i1 %tobool18, label %cleanup, label %if.then19, !dbg !4039

if.then19:                                        ; preds = %land.lhs.true, %if.else
  store i8 1, i8* %is_store, align 1, !dbg !4040
  br label %cleanup, !dbg !4042

cleanup:                                          ; preds = %lor.lhs.false, %if.then4, %land.lhs.true, %entry, %lor.lhs.false13, %if.then19, %if.end10
  %retval.0 = phi %union.tree_node** [ %call11, %if.end10 ], [ %call2, %if.then19 ], [ null, %entry ], [ null, %lor.lhs.false ], [ null, %if.then4 ], [ null, %land.lhs.true ], [ null, %lor.lhs.false13 ], !dbg !4009
  ret %union.tree_node** %retval.0, !dbg !4043
}

declare dso_local i32 @iterative_hash_expr(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_mem_ref_p_base_length(%struct.VEC_mem_ref_p_base* %vec_) unnamed_addr #0 !dbg !4044 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_p_base* %vec_, metadata !4050, metadata !DIExpression()), !dbg !4051
  %tobool = icmp eq %struct.VEC_mem_ref_p_base* %vec_, null, !dbg !4052
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4052

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_mem_ref_p_base, %struct.VEC_mem_ref_p_base* %vec_, i64 0, i32 0, !dbg !4052
  %0 = load i32, i32* %num, align 8, !dbg !4052
  br label %cond.end, !dbg !4052

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4052
  ret i32 %cond, !dbg !4052
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.mem_ref* @mem_ref_alloc(%union.tree_node* %mem, i32 %hash, i32 %id) unnamed_addr #5 !dbg !4053 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %mem, metadata !4057, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata i32 %hash, metadata !4058, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata i32 %id, metadata !4059, metadata !DIExpression()), !dbg !4061
  %call = tail call i8* @xmalloc(i64 72) #6, !dbg !4062
  %0 = bitcast i8* %call to %struct.mem_ref*, !dbg !4062
  call void @llvm.dbg.value(metadata %struct.mem_ref* %0, metadata !4060, metadata !DIExpression()), !dbg !4061
  %mem1 = bitcast i8* %call to %union.tree_node**, !dbg !4063
  store %union.tree_node* %mem, %union.tree_node** %mem1, align 8, !dbg !4064
  %id2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4065
  %1 = bitcast i8* %id2 to i32*, !dbg !4065
  store i32 %id, i32* %1, align 8, !dbg !4066
  %hash3 = getelementptr inbounds i8, i8* %call, i64 12, !dbg !4067
  %2 = bitcast i8* %hash3 to i32*, !dbg !4067
  store i32 %hash, i32* %2, align 4, !dbg !4068
  %call4 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4069
  %stored = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4070
  %3 = bitcast i8* %stored to %struct.bitmap_head_def**, !dbg !4070
  store %struct.bitmap_head_def* %call4, %struct.bitmap_head_def** %3, align 8, !dbg !4071
  %call5 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4072
  %indep_loop = getelementptr inbounds i8, i8* %call, i64 40, !dbg !4073
  %4 = bitcast i8* %indep_loop to %struct.bitmap_head_def**, !dbg !4073
  store %struct.bitmap_head_def* %call5, %struct.bitmap_head_def** %4, align 8, !dbg !4074
  %call6 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4075
  %dep_loop = getelementptr inbounds i8, i8* %call, i64 48, !dbg !4076
  %5 = bitcast i8* %dep_loop to %struct.bitmap_head_def**, !dbg !4076
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** %5, align 8, !dbg !4077
  %call7 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4078
  %indep_ref = getelementptr inbounds i8, i8* %call, i64 56, !dbg !4079
  %6 = bitcast i8* %indep_ref to %struct.bitmap_head_def**, !dbg !4079
  store %struct.bitmap_head_def* %call7, %struct.bitmap_head_def** %6, align 8, !dbg !4080
  %call8 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4081
  %dep_ref = getelementptr inbounds i8, i8* %call, i64 64, !dbg !4082
  %7 = bitcast i8* %dep_ref to %struct.bitmap_head_def**, !dbg !4082
  store %struct.bitmap_head_def* %call8, %struct.bitmap_head_def** %7, align 8, !dbg !4083
  %accesses_in_loop = getelementptr inbounds i8, i8* %call, i64 24, !dbg !4084
  %8 = bitcast i8* %accesses_in_loop to %struct.VEC_mem_ref_locs_p_heap**, !dbg !4084
  store %struct.VEC_mem_ref_locs_p_heap* null, %struct.VEC_mem_ref_locs_p_heap** %8, align 8, !dbg !4085
  %call9 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4086
  %vops = getelementptr inbounds i8, i8* %call, i64 32, !dbg !4087
  %9 = bitcast i8* %vops to %struct.bitmap_head_def**, !dbg !4087
  store %struct.bitmap_head_def* %call9, %struct.bitmap_head_def** %9, align 8, !dbg !4088
  ret %struct.mem_ref* %0, !dbg !4089
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.mem_ref** @VEC_mem_ref_p_heap_safe_push(%struct.VEC_mem_ref_p_heap** %vec_, %struct.mem_ref* %obj_) unnamed_addr #0 !dbg !4090 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), metadata !4096, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata %struct.mem_ref* %obj_, metadata !4097, metadata !DIExpression()), !dbg !4098
  %call = tail call fastcc i32 @VEC_mem_ref_p_heap_reserve(%struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), i32 1) #7, !dbg !4099
  %0 = load %struct.VEC_mem_ref_p_heap*, %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), align 8, !dbg !4099
  %tobool = icmp eq %struct.VEC_mem_ref_p_heap* %0, null, !dbg !4099
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4099

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_mem_ref_p_heap, %struct.VEC_mem_ref_p_heap* %0, i64 0, i32 0, !dbg !4099
  br label %cond.end, !dbg !4099

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_mem_ref_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4099
  %call1 = tail call fastcc %struct.mem_ref** @VEC_mem_ref_p_base_quick_push(%struct.VEC_mem_ref_p_base* %cond, %struct.mem_ref* %obj_) #7, !dbg !4099
  ret %struct.mem_ref** %call1, !dbg !4099
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_ref_stored(%struct.mem_ref* %ref, %struct.loop* %loop) unnamed_addr #5 !dbg !4100 {
entry:
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !4104, metadata !DIExpression()), !dbg !4106
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4105, metadata !DIExpression()), !dbg !4106
  %stored = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 3, !dbg !4107
  br label %for.cond, !dbg !4110

for.cond:                                         ; preds = %for.body, %entry
  %loop.addr.0 = phi %struct.loop* [ %loop, %entry ], [ %call4, %for.body ]
  call void @llvm.dbg.value(metadata %struct.loop* %loop.addr.0, metadata !4105, metadata !DIExpression()), !dbg !4106
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4111
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !4111
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !4111
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 3, !dbg !4112
  %2 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !4112
  %cmp = icmp eq %struct.loop* %loop.addr.0, %2, !dbg !4113
  br i1 %cmp, label %for.end, label %land.rhs, !dbg !4114

land.rhs:                                         ; preds = %for.cond
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %stored, align 8, !dbg !4107
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop.addr.0, i64 0, i32 0, !dbg !4115
  %4 = load i32, i32* %num, align 8, !dbg !4115
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %3, i32 %4) #6, !dbg !4116
  %tobool = icmp eq i32 %call, 0, !dbg !4117
  br i1 %tobool, label %for.body, label %for.end, !dbg !4118

for.body:                                         ; preds = %land.rhs
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %stored, align 8, !dbg !4119
  %6 = load i32, i32* %num, align 8, !dbg !4120
  %call3 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %5, i32 %6) #6, !dbg !4121
  %call4 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %loop.addr.0) #7, !dbg !4122
  call void @llvm.dbg.value(metadata %struct.loop* %call4, metadata !4105, metadata !DIExpression()), !dbg !4106
  br label %for.cond, !dbg !4123, !llvm.loop !4124

for.end:                                          ; preds = %for.cond, %land.rhs
  ret void, !dbg !4126
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @record_mem_ref_loc(%struct.mem_ref* %ref, %struct.loop* %loop, %union.gimple_statement_d* %stmt, %union.tree_node** %loc) unnamed_addr #5 !dbg !4127 {
entry:
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !4131, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4132, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4133, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata %union.tree_node** %loc, metadata !4134, metadata !DIExpression()), !dbg !4138
  %call = tail call i8* @xmalloc(i64 16) #6, !dbg !4139
  %0 = bitcast i8* %call to %struct.mem_ref_loc*, !dbg !4139
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc* %0, metadata !4135, metadata !DIExpression()), !dbg !4138
  %1 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 2), align 8, !dbg !4140
  %base = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %1, i64 0, i32 0, !dbg !4140
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !4140
  %2 = load i32, i32* %num, align 8, !dbg !4140
  %call1 = tail call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base, i32 %2) #7, !dbg !4140
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !4137, metadata !DIExpression()), !dbg !4138
  %accesses_in_loop = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 4, !dbg !4141
  %3 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %accesses_in_loop, align 8, !dbg !4141
  %tobool2 = icmp eq %struct.VEC_mem_ref_locs_p_heap* %3, null, !dbg !4141
  br i1 %tobool2, label %cond.end7, label %cond.true3, !dbg !4141

cond.true3:                                       ; preds = %entry
  %base5 = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %3, i64 0, i32 0, !dbg !4141
  br label %cond.end7, !dbg !4141

cond.end7:                                        ; preds = %entry, %cond.true3
  %cond8 = phi %struct.VEC_mem_ref_locs_p_base* [ %base5, %cond.true3 ], [ null, %entry ], !dbg !4141
  %call9 = tail call fastcc i32 @VEC_mem_ref_locs_p_base_length(%struct.VEC_mem_ref_locs_p_base* %cond8) #7, !dbg !4141
  %4 = load i32, i32* %num, align 8, !dbg !4143
  %cmp = icmp ugt i32 %call9, %4, !dbg !4144
  br i1 %cmp, label %if.end, label %if.then, !dbg !4145

if.then:                                          ; preds = %cond.end7
  %add = add nsw i32 %4, 1, !dbg !4146
  tail call fastcc void @VEC_mem_ref_locs_p_heap_safe_grow_cleared(%struct.VEC_mem_ref_locs_p_heap** nonnull %accesses_in_loop, i32 %add) #7, !dbg !4146
  br label %if.end, !dbg !4146

if.end:                                           ; preds = %cond.end7, %if.then
  %5 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %accesses_in_loop, align 8, !dbg !4147
  %tobool14 = icmp eq %struct.VEC_mem_ref_locs_p_heap* %5, null, !dbg !4147
  br i1 %tobool14, label %cond.end19, label %cond.true15, !dbg !4147

cond.true15:                                      ; preds = %if.end
  %base17 = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %5, i64 0, i32 0, !dbg !4147
  br label %cond.end19, !dbg !4147

cond.end19:                                       ; preds = %if.end, %cond.true15
  %cond20 = phi %struct.VEC_mem_ref_locs_p_base* [ %base17, %cond.true15 ], [ null, %if.end ], !dbg !4147
  %6 = load i32, i32* %num, align 8, !dbg !4147
  %call22 = tail call fastcc %struct.mem_ref_locs* @VEC_mem_ref_locs_p_base_index(%struct.VEC_mem_ref_locs_p_base* %cond20, i32 %6) #7, !dbg !4147
  call void @llvm.dbg.value(metadata %struct.mem_ref_locs* %call22, metadata !4136, metadata !DIExpression()), !dbg !4138
  %tobool23 = icmp eq %struct.mem_ref_locs* %call22, null, !dbg !4148
  br i1 %tobool23, label %if.then24, label %if.end36, !dbg !4150

if.then24:                                        ; preds = %cond.end19
  %call25 = tail call fastcc %struct.mem_ref_locs* @mem_ref_locs_alloc() #7, !dbg !4151
  call void @llvm.dbg.value(metadata %struct.mem_ref_locs* %call25, metadata !4136, metadata !DIExpression()), !dbg !4138
  %7 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %accesses_in_loop, align 8, !dbg !4153
  %tobool27 = icmp eq %struct.VEC_mem_ref_locs_p_heap* %7, null, !dbg !4153
  br i1 %tobool27, label %cond.end32, label %cond.true28, !dbg !4153

cond.true28:                                      ; preds = %if.then24
  %base30 = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %7, i64 0, i32 0, !dbg !4153
  br label %cond.end32, !dbg !4153

cond.end32:                                       ; preds = %if.then24, %cond.true28
  %cond33 = phi %struct.VEC_mem_ref_locs_p_base* [ %base30, %cond.true28 ], [ null, %if.then24 ], !dbg !4153
  %8 = load i32, i32* %num, align 8, !dbg !4153
  %call35 = tail call fastcc %struct.mem_ref_locs* @VEC_mem_ref_locs_p_base_replace(%struct.VEC_mem_ref_locs_p_base* %cond33, i32 %8, %struct.mem_ref_locs* %call25) #7, !dbg !4153
  br label %if.end36, !dbg !4154

if.end36:                                         ; preds = %cond.end19, %cond.end32
  %accs.0 = phi %struct.mem_ref_locs* [ %call22, %cond.end19 ], [ %call25, %cond.end32 ], !dbg !4138
  call void @llvm.dbg.value(metadata %struct.mem_ref_locs* %accs.0, metadata !4136, metadata !DIExpression()), !dbg !4138
  %stmt37 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4155
  %9 = bitcast i8* %stmt37 to %union.gimple_statement_d**, !dbg !4155
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %9, align 8, !dbg !4156
  %ref38 = bitcast i8* %call to %union.tree_node***, !dbg !4157
  store %union.tree_node** %loc, %union.tree_node*** %ref38, align 8, !dbg !4158
  %locs = getelementptr inbounds %struct.mem_ref_locs, %struct.mem_ref_locs* %accs.0, i64 0, i32 0, !dbg !4159
  %call39 = tail call fastcc %struct.mem_ref_loc** @VEC_mem_ref_loc_p_heap_safe_push(%struct.VEC_mem_ref_loc_p_heap** %locs, %struct.mem_ref_loc* %0) #7, !dbg !4159
  %id = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 1, !dbg !4160
  %10 = load i32, i32* %id, align 8, !dbg !4160
  %call40 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call1, i32 %10) #6, !dbg !4161
  ret void, !dbg !4162
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4163 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4167, metadata !DIExpression()), !dbg !4169
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %call, metadata !4168, metadata !DIExpression()), !dbg !4169
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !4171
  %cmp = icmp eq i32 %call1, 3, !dbg !4173
  br i1 %cmp, label %if.then, label %if.end, !dbg !4174

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !4175
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4175
  %bf.load = load i64, i64* %0, align 8, !dbg !4175
  %1 = trunc i64 %bf.load to i32, !dbg !4175
  %bf.cast = and i32 %1, 65535, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !4168, metadata !DIExpression()), !dbg !4169
  br label %if.end, !dbg !4176

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !4169
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !4168, metadata !DIExpression()), !dbg !4169
  ret i32 %code.0, !dbg !4177
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_assign_lhs_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4178 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4182, metadata !DIExpression()), !dbg !4183
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4184
  ret %union.tree_node** %call, !dbg !4185
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !4186 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4190, metadata !DIExpression()), !dbg !4191
  %idxprom = sext i32 %code to i64, !dbg !4192
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !4192
  %0 = load i8, i8* %arrayidx, align 1, !dbg !4192
  %conv = zext i8 %0 to i32, !dbg !4193
  ret i32 %conv, !dbg !4194
}

declare dso_local zeroext i8 @is_gimple_addressable(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4195 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4197, metadata !DIExpression()), !dbg !4198
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !4199
  ret %union.tree_node* %call, !dbg !4200
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4201 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4203, metadata !DIExpression()), !dbg !4204
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !4205
  ret %union.tree_node** %call, !dbg !4206
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !4207 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4209, metadata !DIExpression()), !dbg !4211
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !4212
  call void @llvm.dbg.value(metadata i32 %call, metadata !4210, metadata !DIExpression()), !dbg !4211
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !4213

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !4215
  %bf.load = load i32, i32* %0, align 8, !dbg !4215
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4215
  br label %cleanup, !dbg !4216

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4217
  br label %cleanup, !dbg !4219

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !4211
  ret i32 %retval.0, !dbg !4220
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4221 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4225, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.value(metadata i32 %i, metadata !4226, metadata !DIExpression()), !dbg !4227
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4228
  %tobool = icmp eq i8 %call, 0, !dbg !4228
  br i1 %tobool, label %return, label %if.then, !dbg !4230

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4231
  %idx.ext = zext i32 %i to i64, !dbg !4233
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idx.ext, !dbg !4233
  br label %return, !dbg !4234

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node** [ %add.ptr, %if.then ], [ null, %entry ], !dbg !4235
  ret %union.tree_node** %retval.0, !dbg !4236
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_mem_ref_p_heap_reserve(%struct.VEC_mem_ref_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4237 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), metadata !4241, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 1, metadata !4242, metadata !DIExpression()), !dbg !4244
  %0 = load %struct.VEC_mem_ref_p_heap*, %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), align 8, !dbg !4245
  %tobool = icmp eq %struct.VEC_mem_ref_p_heap* %0, null, !dbg !4245
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4245

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_mem_ref_p_heap, %struct.VEC_mem_ref_p_heap* %0, i64 0, i32 0, !dbg !4245
  br label %cond.end, !dbg !4245

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_mem_ref_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4245
  %call = tail call fastcc i32 @VEC_mem_ref_p_base_space(%struct.VEC_mem_ref_p_base* %cond, i32 1) #7, !dbg !4245
  %tobool1 = icmp eq i32 %call, 0, !dbg !4245
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4245
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4243, metadata !DIExpression()), !dbg !4244
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4245

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1) to i8**), align 8, !dbg !4246
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 1) #6, !dbg !4246
  store i8* %call3, i8** bitcast (%struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1) to i8**), align 8, !dbg !4246
  br label %if.end, !dbg !4246

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4245
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.mem_ref** @VEC_mem_ref_p_base_quick_push(%struct.VEC_mem_ref_p_base* %vec_, %struct.mem_ref* %obj_) unnamed_addr #0 !dbg !4248 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_p_base* %vec_, metadata !4253, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata %struct.mem_ref* %obj_, metadata !4254, metadata !DIExpression()), !dbg !4256
  %num1 = getelementptr inbounds %struct.VEC_mem_ref_p_base, %struct.VEC_mem_ref_p_base* %vec_, i64 0, i32 0, !dbg !4257
  %0 = load i32, i32* %num1, align 8, !dbg !4257
  %inc = add i32 %0, 1, !dbg !4257
  store i32 %inc, i32* %num1, align 8, !dbg !4257
  %idxprom = zext i32 %0 to i64, !dbg !4257
  %arrayidx = getelementptr inbounds %struct.VEC_mem_ref_p_base, %struct.VEC_mem_ref_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4257
  call void @llvm.dbg.value(metadata %struct.mem_ref** %arrayidx, metadata !4255, metadata !DIExpression()), !dbg !4256
  store %struct.mem_ref* %obj_, %struct.mem_ref** %arrayidx, align 8, !dbg !4257
  ret %struct.mem_ref** %arrayidx, !dbg !4257
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_mem_ref_p_base_space(%struct.VEC_mem_ref_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4258 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_p_base* %vec_, metadata !4262, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 1, metadata !4263, metadata !DIExpression()), !dbg !4264
  %tobool = icmp eq %struct.VEC_mem_ref_p_base* %vec_, null, !dbg !4265
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4265

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_mem_ref_p_base, %struct.VEC_mem_ref_p_base* %vec_, i64 0, i32 1, !dbg !4265
  %0 = load i32, i32* %alloc, align 4, !dbg !4265
  %num = getelementptr inbounds %struct.VEC_mem_ref_p_base, %struct.VEC_mem_ref_p_base* %vec_, i64 0, i32 0, !dbg !4265
  %1 = load i32, i32* %num, align 8, !dbg !4265
  %cmp1 = icmp ne i32 %0, %1, !dbg !4265
  %phitmp = zext i1 %cmp1 to i32, !dbg !4265
  br label %cond.end, !dbg !4265

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4265

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !4265
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_mem_ref_locs_p_base_length(%struct.VEC_mem_ref_locs_p_base* %vec_) unnamed_addr #0 !dbg !4266 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_locs_p_base* %vec_, metadata !4270, metadata !DIExpression()), !dbg !4271
  %tobool = icmp eq %struct.VEC_mem_ref_locs_p_base* %vec_, null, !dbg !4272
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4272

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_mem_ref_locs_p_base, %struct.VEC_mem_ref_locs_p_base* %vec_, i64 0, i32 0, !dbg !4272
  %0 = load i32, i32* %num, align 8, !dbg !4272
  br label %cond.end, !dbg !4272

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4272
  ret i32 %cond, !dbg !4272
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_mem_ref_locs_p_heap_safe_grow_cleared(%struct.VEC_mem_ref_locs_p_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !4273 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_locs_p_heap** %vec_, metadata !4277, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata i32 %size_, metadata !4278, metadata !DIExpression()), !dbg !4280
  %0 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %vec_, align 8, !dbg !4281
  %tobool = icmp eq %struct.VEC_mem_ref_locs_p_heap* %0, null, !dbg !4281
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4281

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %0, i64 0, i32 0, !dbg !4281
  br label %cond.end, !dbg !4281

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_mem_ref_locs_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4281
  %call = tail call fastcc i32 @VEC_mem_ref_locs_p_base_length(%struct.VEC_mem_ref_locs_p_base* %cond) #7, !dbg !4281
  call void @llvm.dbg.value(metadata i32 %call, metadata !4279, metadata !DIExpression()), !dbg !4280
  tail call fastcc void @VEC_mem_ref_locs_p_heap_safe_grow(%struct.VEC_mem_ref_locs_p_heap** %vec_, i32 %size_) #7, !dbg !4281
  %1 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %vec_, align 8, !dbg !4281
  %tobool1 = icmp eq %struct.VEC_mem_ref_locs_p_heap* %1, null, !dbg !4281
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !4281

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %1, i64 0, i32 0, !dbg !4281
  br label %cond.end5, !dbg !4281

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_mem_ref_locs_p_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !4281
  %call7 = tail call fastcc %struct.mem_ref_locs** @VEC_mem_ref_locs_p_base_address(%struct.VEC_mem_ref_locs_p_base* %cond6) #7, !dbg !4281
  %idxprom = sext i32 %call to i64, !dbg !4281
  %arrayidx = getelementptr inbounds %struct.mem_ref_locs*, %struct.mem_ref_locs** %call7, i64 %idxprom, !dbg !4281
  %2 = bitcast %struct.mem_ref_locs** %arrayidx to i8*, !dbg !4281
  %sub = sub nsw i32 %size_, %call, !dbg !4281
  %conv = sext i32 %sub to i64, !dbg !4281
  %mul = shl nsw i64 %conv, 3, !dbg !4281
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #6, !dbg !4281
  ret void, !dbg !4281
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.mem_ref_locs* @VEC_mem_ref_locs_p_base_index(%struct.VEC_mem_ref_locs_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4282 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_locs_p_base* %vec_, metadata !4286, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4287, metadata !DIExpression()), !dbg !4288
  br label %land.end, !dbg !4289

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4289
  %arrayidx = getelementptr inbounds %struct.VEC_mem_ref_locs_p_base, %struct.VEC_mem_ref_locs_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4289
  %0 = load %struct.mem_ref_locs*, %struct.mem_ref_locs** %arrayidx, align 8, !dbg !4289
  ret %struct.mem_ref_locs* %0, !dbg !4289
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.mem_ref_locs* @mem_ref_locs_alloc() unnamed_addr #5 !dbg !4290 {
entry:
  %call = tail call i8* @xmalloc(i64 8) #6, !dbg !4295
  %0 = bitcast i8* %call to %struct.mem_ref_locs*, !dbg !4295
  call void @llvm.dbg.value(metadata %struct.mem_ref_locs* %0, metadata !4294, metadata !DIExpression()), !dbg !4296
  %locs = bitcast i8* %call to %struct.VEC_mem_ref_loc_p_heap**, !dbg !4297
  store %struct.VEC_mem_ref_loc_p_heap* null, %struct.VEC_mem_ref_loc_p_heap** %locs, align 8, !dbg !4298
  ret %struct.mem_ref_locs* %0, !dbg !4299
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.mem_ref_locs* @VEC_mem_ref_locs_p_base_replace(%struct.VEC_mem_ref_locs_p_base* %vec_, i32 %ix_, %struct.mem_ref_locs* %obj_) unnamed_addr #0 !dbg !4300 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_locs_p_base* %vec_, metadata !4305, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4306, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.value(metadata %struct.mem_ref_locs* %obj_, metadata !4307, metadata !DIExpression()), !dbg !4309
  %idxprom = zext i32 %ix_ to i64, !dbg !4310
  %arrayidx = getelementptr inbounds %struct.VEC_mem_ref_locs_p_base, %struct.VEC_mem_ref_locs_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4310
  %0 = load %struct.mem_ref_locs*, %struct.mem_ref_locs** %arrayidx, align 8, !dbg !4310
  call void @llvm.dbg.value(metadata %struct.mem_ref_locs* %0, metadata !4308, metadata !DIExpression()), !dbg !4309
  store %struct.mem_ref_locs* %obj_, %struct.mem_ref_locs** %arrayidx, align 8, !dbg !4310
  ret %struct.mem_ref_locs* %0, !dbg !4310
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.mem_ref_loc** @VEC_mem_ref_loc_p_heap_safe_push(%struct.VEC_mem_ref_loc_p_heap** %vec_, %struct.mem_ref_loc* %obj_) unnamed_addr #0 !dbg !4311 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap** %vec_, metadata !4315, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc* %obj_, metadata !4316, metadata !DIExpression()), !dbg !4317
  %call = tail call fastcc i32 @VEC_mem_ref_loc_p_heap_reserve(%struct.VEC_mem_ref_loc_p_heap** %vec_, i32 1) #7, !dbg !4318
  %0 = load %struct.VEC_mem_ref_loc_p_heap*, %struct.VEC_mem_ref_loc_p_heap** %vec_, align 8, !dbg !4318
  %tobool = icmp eq %struct.VEC_mem_ref_loc_p_heap* %0, null, !dbg !4318
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4318

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_mem_ref_loc_p_heap, %struct.VEC_mem_ref_loc_p_heap* %0, i64 0, i32 0, !dbg !4318
  br label %cond.end, !dbg !4318

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_mem_ref_loc_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4318
  %call1 = tail call fastcc %struct.mem_ref_loc** @VEC_mem_ref_loc_p_base_quick_push(%struct.VEC_mem_ref_loc_p_base* %cond, %struct.mem_ref_loc* %obj_) #7, !dbg !4318
  ret %struct.mem_ref_loc** %call1, !dbg !4318
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_mem_ref_locs_p_heap_safe_grow(%struct.VEC_mem_ref_locs_p_heap** %vec_, i32 %size_) unnamed_addr #0 !dbg !4319 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_locs_p_heap** %vec_, metadata !4321, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.value(metadata i32 %size_, metadata !4322, metadata !DIExpression()), !dbg !4323
  %cmp = icmp sgt i32 %size_, -1, !dbg !4324
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4324

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %vec_, align 8, !dbg !4324
  %tobool = icmp eq %struct.VEC_mem_ref_locs_p_heap* %0, null, !dbg !4324
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4324

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %0, i64 0, i32 0, !dbg !4324
  br label %cond.end, !dbg !4324

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_mem_ref_locs_p_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !4324
  %call = tail call fastcc i32 @VEC_mem_ref_locs_p_base_length(%struct.VEC_mem_ref_locs_p_base* %cond) #7, !dbg !4324
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %vec_, align 8, !dbg !4324
  %tobool2 = icmp eq %struct.VEC_mem_ref_locs_p_heap* %1, null, !dbg !4324
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !4324

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %1, i64 0, i32 0, i32 0, !dbg !4324
  %2 = load i32, i32* %num, align 8, !dbg !4324
  br label %cond.end11, !dbg !4324

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !4324
  %sub = sub nsw i32 %size_, %cond12, !dbg !4324
  %call13 = tail call fastcc i32 @VEC_mem_ref_locs_p_heap_reserve_exact(%struct.VEC_mem_ref_locs_p_heap** %vec_, i32 %sub) #7, !dbg !4324
  %3 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %vec_, align 8, !dbg !4324
  %num20 = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %3, i64 0, i32 0, i32 0, !dbg !4324
  store i32 %size_, i32* %num20, align 8, !dbg !4324
  ret void, !dbg !4324
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.mem_ref_locs** @VEC_mem_ref_locs_p_base_address(%struct.VEC_mem_ref_locs_p_base* %vec_) unnamed_addr #0 !dbg !4325 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_locs_p_base* %vec_, metadata !4329, metadata !DIExpression()), !dbg !4330
  %tobool = icmp eq %struct.VEC_mem_ref_locs_p_base* %vec_, null, !dbg !4331
  %arraydecay = getelementptr inbounds %struct.VEC_mem_ref_locs_p_base, %struct.VEC_mem_ref_locs_p_base* %vec_, i64 0, i32 2, i64 0, !dbg !4331
  %cond = select i1 %tobool, %struct.mem_ref_locs** null, %struct.mem_ref_locs** %arraydecay, !dbg !4331
  ret %struct.mem_ref_locs** %cond, !dbg !4331
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_mem_ref_locs_p_heap_reserve_exact(%struct.VEC_mem_ref_locs_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4332 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_locs_p_heap** %vec_, metadata !4336, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4337, metadata !DIExpression()), !dbg !4339
  %0 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %vec_, align 8, !dbg !4340
  %tobool = icmp eq %struct.VEC_mem_ref_locs_p_heap* %0, null, !dbg !4340
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4340

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %0, i64 0, i32 0, !dbg !4340
  br label %cond.end, !dbg !4340

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_mem_ref_locs_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4340
  %call = tail call fastcc i32 @VEC_mem_ref_locs_p_base_space(%struct.VEC_mem_ref_locs_p_base* %cond, i32 %alloc_) #7, !dbg !4340
  %tobool1 = icmp eq i32 %call, 0, !dbg !4340
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4338, metadata !DIExpression()), !dbg !4339
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4340

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_mem_ref_locs_p_heap** %vec_ to i8**, !dbg !4341
  %2 = load i8*, i8** %1, align 8, !dbg !4341
  %call3 = tail call i8* @vec_heap_p_reserve_exact(i8* %2, i32 %alloc_) #6, !dbg !4341
  store i8* %call3, i8** %1, align 8, !dbg !4341
  br label %if.end, !dbg !4341

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4340
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_mem_ref_locs_p_base_space(%struct.VEC_mem_ref_locs_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4343 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_locs_p_base* %vec_, metadata !4347, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4348, metadata !DIExpression()), !dbg !4349
  %tobool = icmp eq %struct.VEC_mem_ref_locs_p_base* %vec_, null, !dbg !4350
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4350

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_mem_ref_locs_p_base, %struct.VEC_mem_ref_locs_p_base* %vec_, i64 0, i32 1, !dbg !4350
  %0 = load i32, i32* %alloc, align 4, !dbg !4350
  %num = getelementptr inbounds %struct.VEC_mem_ref_locs_p_base, %struct.VEC_mem_ref_locs_p_base* %vec_, i64 0, i32 0, !dbg !4350
  %1 = load i32, i32* %num, align 8, !dbg !4350
  %sub = sub i32 %0, %1, !dbg !4350
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !4350
  br label %cond.end, !dbg !4350

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !4350
  br label %cond.end, !dbg !4350

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !4350
  ret i32 %cond, !dbg !4350
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_mem_ref_loc_p_heap_reserve(%struct.VEC_mem_ref_loc_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4351 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap** %vec_, metadata !4355, metadata !DIExpression()), !dbg !4358
  call void @llvm.dbg.value(metadata i32 1, metadata !4356, metadata !DIExpression()), !dbg !4358
  %0 = load %struct.VEC_mem_ref_loc_p_heap*, %struct.VEC_mem_ref_loc_p_heap** %vec_, align 8, !dbg !4359
  %tobool = icmp eq %struct.VEC_mem_ref_loc_p_heap* %0, null, !dbg !4359
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4359

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_mem_ref_loc_p_heap, %struct.VEC_mem_ref_loc_p_heap* %0, i64 0, i32 0, !dbg !4359
  br label %cond.end, !dbg !4359

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_mem_ref_loc_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4359
  %call = tail call fastcc i32 @VEC_mem_ref_loc_p_base_space(%struct.VEC_mem_ref_loc_p_base* %cond, i32 1) #7, !dbg !4359
  %tobool1 = icmp eq i32 %call, 0, !dbg !4359
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4359
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4357, metadata !DIExpression()), !dbg !4358
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4359

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_mem_ref_loc_p_heap** %vec_ to i8**, !dbg !4360
  %2 = load i8*, i8** %1, align 8, !dbg !4360
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !4360
  store i8* %call3, i8** %1, align 8, !dbg !4360
  br label %if.end, !dbg !4360

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4359
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.mem_ref_loc** @VEC_mem_ref_loc_p_base_quick_push(%struct.VEC_mem_ref_loc_p_base* %vec_, %struct.mem_ref_loc* %obj_) unnamed_addr #0 !dbg !4362 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_base* %vec_, metadata !4367, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc* %obj_, metadata !4368, metadata !DIExpression()), !dbg !4370
  %num1 = getelementptr inbounds %struct.VEC_mem_ref_loc_p_base, %struct.VEC_mem_ref_loc_p_base* %vec_, i64 0, i32 0, !dbg !4371
  %0 = load i32, i32* %num1, align 8, !dbg !4371
  %inc = add i32 %0, 1, !dbg !4371
  store i32 %inc, i32* %num1, align 8, !dbg !4371
  %idxprom = zext i32 %0 to i64, !dbg !4371
  %arrayidx = getelementptr inbounds %struct.VEC_mem_ref_loc_p_base, %struct.VEC_mem_ref_loc_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4371
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc** %arrayidx, metadata !4369, metadata !DIExpression()), !dbg !4370
  store %struct.mem_ref_loc* %obj_, %struct.mem_ref_loc** %arrayidx, align 8, !dbg !4371
  ret %struct.mem_ref_loc** %arrayidx, !dbg !4371
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_mem_ref_loc_p_base_space(%struct.VEC_mem_ref_loc_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4372 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_base* %vec_, metadata !4376, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i32 1, metadata !4377, metadata !DIExpression()), !dbg !4378
  %tobool = icmp eq %struct.VEC_mem_ref_loc_p_base* %vec_, null, !dbg !4379
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4379

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_mem_ref_loc_p_base, %struct.VEC_mem_ref_loc_p_base* %vec_, i64 0, i32 1, !dbg !4379
  %0 = load i32, i32* %alloc, align 4, !dbg !4379
  %num = getelementptr inbounds %struct.VEC_mem_ref_loc_p_base, %struct.VEC_mem_ref_loc_p_base* %vec_, i64 0, i32 0, !dbg !4379
  %1 = load i32, i32* %num, align 8, !dbg !4379
  %cmp1 = icmp ne i32 %0, %1, !dbg !4379
  %phitmp = zext i1 %cmp1 to i32, !dbg !4379
  br label %cond.end, !dbg !4379

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4379

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !4379
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4380 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4384, metadata !DIExpression()), !dbg !4385
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #6, !dbg !4386
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !4386
  ret %struct.VEC_int_heap* %0, !dbg !4386
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !4387 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !4391, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4392, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.value(metadata %struct.loop** %ptr, metadata !4393, metadata !DIExpression()), !dbg !4394
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !4395
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4395

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !4395
  %0 = load i32, i32* %num, align 8, !dbg !4395
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4395
  br i1 %cmp, label %if.then, label %if.else, !dbg !4397

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4398
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4398
  %1 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !4398
  br label %return, !dbg !4398

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4400

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.loop* [ null, %if.else ], [ %1, %if.then ], !dbg !4402
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4402
  store %struct.loop* %storemerge, %struct.loop** %ptr, align 8, !dbg !4402
  ret i32 %retval.0, !dbg !4397
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !4403 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !4409, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !4410, metadata !DIExpression()), !dbg !4412
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !4413
  %0 = load i32, i32* %num1, align 4, !dbg !4413
  %inc = add i32 %0, 1, !dbg !4413
  store i32 %inc, i32* %num1, align 4, !dbg !4413
  %idxprom = zext i32 %0 to i64, !dbg !4413
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4413
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !4411, metadata !DIExpression()), !dbg !4412
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !4413
  ret i32* %arrayidx, !dbg !4413
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4414 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !4418, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4419, metadata !DIExpression()), !dbg !4420
  br label %land.end, !dbg !4421

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4421
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4421
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !4421
  ret %struct.loop* %0, !dbg !4421
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !4422 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !4428, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4429, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !4430, metadata !DIExpression()), !dbg !4431
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !4432
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4432

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !4432
  %0 = load i32, i32* %num, align 4, !dbg !4432
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4432
  br i1 %cmp, label %if.then, label %if.else, !dbg !4434

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4435
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4435
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4435
  br label %return, !dbg !4435

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4437

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !4439
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4439
  store i32 %storemerge, i32* %ptr, align 4, !dbg !4439
  ret i32 %retval.0, !dbg !4434
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_loop(i32 %num) unnamed_addr #0 !dbg !4440 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !4444, metadata !DIExpression()), !dbg !4445
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4446
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !4446
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !4446
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !4446
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !4446
  %tobool = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !4446
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4446

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !4446
  br label %cond.end, !dbg !4446

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4446
  %call = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 %num) #7, !dbg !4446
  ret %struct.loop* %call, !dbg !4447
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !4448 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !4453, metadata !DIExpression()), !dbg !4454
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !4455
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !4455
  br i1 %tobool, label %if.end, label %if.then, !dbg !4457

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !4457
  tail call void @free(i8* nonnull %1) #6, !dbg !4455
  br label %if.end, !dbg !4455

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !4457
  ret void, !dbg !4457
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_vop_ref_mapping_loop(%struct.loop* %loop) unnamed_addr #5 !dbg !4458 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4462, metadata !DIExpression()), !dbg !4475
  %0 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 2), align 8, !dbg !4476
  %base = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %0, i64 0, i32 0, !dbg !4476
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !4476
  %1 = load i32, i32* %num, align 8, !dbg !4476
  %call = tail call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base, i32 %1) #7, !dbg !4476
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !4463, metadata !DIExpression()), !dbg !4475
  %2 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4477
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4477
  %3 = bitcast i32* %i to i8*, !dbg !4478
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !4478
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4465, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  call void @llvm.dbg.value(metadata i32* %i, metadata !4473, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call, i32 0, i32* nonnull %i) #7, !dbg !4479
  br label %for.cond, !dbg !4479

for.cond:                                         ; preds = %for.inc13, %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4465, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  call void @llvm.dbg.value(metadata i32* %i, metadata !4473, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4481
  %tobool2 = icmp eq i8 %call1, 0, !dbg !4479
  br i1 %tobool2, label %for.end14, label %for.body, !dbg !4479

for.body:                                         ; preds = %for.cond
  %4 = load %struct.VEC_mem_ref_p_heap*, %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), align 8, !dbg !4483
  %base5 = getelementptr inbounds %struct.VEC_mem_ref_p_heap, %struct.VEC_mem_ref_p_heap* %4, i64 0, i32 0, !dbg !4483
  %5 = load i32, i32* %i, align 4, !dbg !4483
  call void @llvm.dbg.value(metadata i32 %5, metadata !4473, metadata !DIExpression()), !dbg !4475
  %call9 = call fastcc %struct.mem_ref* @VEC_mem_ref_p_base_index(%struct.VEC_mem_ref_p_base* %base5, i32 %5) #7, !dbg !4483
  call void @llvm.dbg.value(metadata %struct.mem_ref* %call9, metadata !4474, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4464, metadata !DIExpression()), !dbg !4475
  br label %for.cond10, !dbg !4485

for.cond10:                                       ; preds = %for.body11, %for.body
  %sloop.0 = phi %struct.loop* [ %loop, %for.body ], [ %call12, %for.body11 ], !dbg !4487
  call void @llvm.dbg.value(metadata %struct.loop* %sloop.0, metadata !4464, metadata !DIExpression()), !dbg !4475
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4488
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 4, !dbg !4488
  %7 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !4488
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %7, i64 0, i32 3, !dbg !4490
  %8 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !4490
  %cmp = icmp eq %struct.loop* %sloop.0, %8, !dbg !4491
  br i1 %cmp, label %for.inc13, label %for.body11, !dbg !4492

for.body11:                                       ; preds = %for.cond10
  call fastcc void @add_vop_ref_mapping(%struct.loop* %sloop.0, %struct.mem_ref* %call9) #7, !dbg !4493
  %call12 = call fastcc %struct.loop* @loop_outer(%struct.loop* %sloop.0) #7, !dbg !4494
  call void @llvm.dbg.value(metadata %struct.loop* %call12, metadata !4464, metadata !DIExpression()), !dbg !4475
  br label %for.cond10, !dbg !4495, !llvm.loop !4496

for.inc13:                                        ; preds = %for.cond10
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4465, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  call void @llvm.dbg.value(metadata i32* %i, metadata !4473, metadata !DIExpression(DW_OP_deref)), !dbg !4475
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4481
  br label %for.cond, !dbg !4481, !llvm.loop !4498

for.end14:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !4500
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4500
  ret void, !dbg !4500
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !4501 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4510, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !4511, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i32 0, metadata !4512, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4513, metadata !DIExpression()), !dbg !4514
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !4515
  %1 = load i64, i64* %0, align 8, !dbg !4515
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4516
  store i64 %1, i64* %2, align 8, !dbg !4516
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !4517
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !4518
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4519
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !4522
  br label %while.body, !dbg !4522

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !4523
  br i1 %tobool, label %if.then, label %if.end, !dbg !4524

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !4525
  br label %while.end, !dbg !4527

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !4528

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !4522, !llvm.loop !4529

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !4531

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !4531
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !4533
  %7 = load i32, i32* %indx9, align 8, !dbg !4533
  %cmp11 = icmp eq i32 %7, 0, !dbg !4534
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !4535

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !4536
  %8 = load i32, i32* %indx14, align 8, !dbg !4536
  %mul = shl i32 %8, 7, !dbg !4537
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4512, metadata !DIExpression()), !dbg !4514
  br label %if.end15, !dbg !4538

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !4512, metadata !DIExpression()), !dbg !4514
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4539
  store i32 0, i32* %word_no, align 8, !dbg !4540
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !4541
  %9 = load i64, i64* %arrayidx, align 8, !dbg !4541
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4542
  store i64 %9, i64* %bits21, align 8, !dbg !4543
  %tobool23 = icmp eq i64 %9, 0, !dbg !4544
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !4544
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %add, metadata !4512, metadata !DIExpression()), !dbg !4514
  store i32 %add, i32* %bit_no, align 4, !dbg !4546
  ret void, !dbg !4547
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4548 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4552, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4553, metadata !DIExpression()), !dbg !4557
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4558
  %0 = load i64, i64* %bits, align 8, !dbg !4558
  %tobool = icmp eq i64 %0, 0, !dbg !4559
  br i1 %tobool, label %if.end, label %next_bit, !dbg !4560

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !4561
  br label %next_bit, !dbg !4564

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !4554), !dbg !4565
  br label %while.cond, !dbg !4564

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !4566
  %and = and i64 %2, 1, !dbg !4567
  %tobool2 = icmp eq i64 %and, 0, !dbg !4568
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !4564

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !4569
  store i64 %shr, i64* %bits, align 8, !dbg !4569
  %3 = load i32, i32* %bit_no, align 4, !dbg !4571
  %add = add i32 %3, 1, !dbg !4571
  store i32 %add, i32* %bit_no, align 4, !dbg !4571
  %.pre = load i64, i64* %bits, align 8, !dbg !4566
  br label %while.cond, !dbg !4564, !llvm.loop !4572

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !4574
  %sub = add i32 %4, 63, !dbg !4575
  %div = and i32 %sub, -64, !dbg !4576
  store i32 %div, i32* %bit_no, align 4, !dbg !4577
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4578
  %5 = load i32, i32* %word_no, align 8, !dbg !4579
  %inc = add i32 %5, 1, !dbg !4579
  store i32 %inc, i32* %word_no, align 8, !dbg !4579
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4580
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4580
  br label %while.body6, !dbg !4581

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !4582

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !4583
  %cmp = icmp eq i32 %8, 2, !dbg !4584
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !4580
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !4582

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !4561
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !4561
  %10 = load i64, i64* %arrayidx, align 8, !dbg !4561
  store i64 %10, i64* %bits, align 8, !dbg !4585
  %tobool14 = icmp eq i64 %10, 0, !dbg !4586
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !4588

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !4589
  %add17 = add i32 %11, 64, !dbg !4589
  store i32 %add17, i32* %bit_no, align 4, !dbg !4589
  %12 = load i32, i32* %word_no, align 8, !dbg !4590
  %inc19 = add i32 %12, 1, !dbg !4590
  store i32 %inc19, i32* %word_no, align 8, !dbg !4590
  br label %while.cond7, !dbg !4582, !llvm.loop !4591

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !4580
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !4593
  %14 = load i64, i64* %13, align 8, !dbg !4593
  store i64 %14, i64* %6, align 8, !dbg !4594
  %tobool24 = icmp eq i64 %14, 0, !dbg !4595
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !4597

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !4597
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !4598
  %16 = load i32, i32* %indx, align 8, !dbg !4598
  %mul28 = shl i32 %16, 7, !dbg !4599
  store i32 %mul28, i32* %bit_no, align 4, !dbg !4600
  store i32 0, i32* %word_no, align 8, !dbg !4601
  br label %while.body6, !dbg !4581, !llvm.loop !4602

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !4604

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !4604

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !4557
  ret i8 %retval.0, !dbg !4604
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.mem_ref* @VEC_mem_ref_p_base_index(%struct.VEC_mem_ref_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4605 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_p_base* %vec_, metadata !4609, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4610, metadata !DIExpression()), !dbg !4611
  br label %land.end, !dbg !4612

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4612
  %arrayidx = getelementptr inbounds %struct.VEC_mem_ref_p_base, %struct.VEC_mem_ref_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4612
  %0 = load %struct.mem_ref*, %struct.mem_ref** %arrayidx, align 8, !dbg !4612
  ret %struct.mem_ref* %0, !dbg !4612
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_vop_ref_mapping(%struct.loop* %loop, %struct.mem_ref* %ref) unnamed_addr #5 !dbg !4613 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %vop = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4617, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !4618, metadata !DIExpression()), !dbg !4624
  %0 = load %struct.VEC_htab_t_heap*, %struct.VEC_htab_t_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 5), align 8, !dbg !4625
  %base = getelementptr inbounds %struct.VEC_htab_t_heap, %struct.VEC_htab_t_heap* %0, i64 0, i32 0, !dbg !4625
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !4625
  %1 = load i32, i32* %num, align 8, !dbg !4625
  %call = tail call fastcc %struct.htab* @VEC_htab_t_base_index(%struct.VEC_htab_t_base* %base, i32 %1) #7, !dbg !4625
  call void @llvm.dbg.value(metadata %struct.htab* %call, metadata !4619, metadata !DIExpression()), !dbg !4624
  %stored1 = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 3, !dbg !4626
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %stored1, align 8, !dbg !4626
  %3 = load i32, i32* %num, align 8, !dbg !4627
  %call3 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !4628
  %conv = trunc i32 %call3 to i8, !dbg !4628
  call void @llvm.dbg.value(metadata i8 %conv, metadata !4620, metadata !DIExpression()), !dbg !4624
  %4 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 4), align 8, !dbg !4629
  %base6 = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %4, i64 0, i32 0, !dbg !4629
  %5 = load i32, i32* %num, align 8, !dbg !4629
  %call11 = tail call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base6, i32 %5) #7, !dbg !4629
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call11, metadata !4621, metadata !DIExpression()), !dbg !4624
  %6 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4630
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8, !dbg !4630
  %7 = bitcast i32* %vop to i8*, !dbg !4631
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8, !dbg !4631
  %vops = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 5, !dbg !4632
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vops, align 8, !dbg !4632
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4622, metadata !DIExpression(DW_OP_deref)), !dbg !4624
  call void @llvm.dbg.value(metadata i32* %vop, metadata !4623, metadata !DIExpression(DW_OP_deref)), !dbg !4624
  call fastcc void @bmp_iter_and_compl_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %8, %struct.bitmap_head_def* %call11, i32 0, i32* nonnull %vop) #7, !dbg !4632
  %id = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 1, !dbg !4634
  br label %for.cond, !dbg !4632

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4622, metadata !DIExpression(DW_OP_deref)), !dbg !4624
  call void @llvm.dbg.value(metadata i32* %vop, metadata !4623, metadata !DIExpression(DW_OP_deref)), !dbg !4624
  %call12 = call fastcc zeroext i8 @bmp_iter_and_compl(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %vop) #7, !dbg !4637
  %tobool13 = icmp eq i8 %call12, 0, !dbg !4632
  br i1 %tobool13, label %for.end, label %for.body, !dbg !4632

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %vop, align 4, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %9, metadata !4623, metadata !DIExpression()), !dbg !4624
  %10 = load i32, i32* %id, align 8, !dbg !4639
  call fastcc void @record_vop_access(%struct.htab* %call, i32 %9, i32 %10, i8 zeroext %conv) #7, !dbg !4640
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4622, metadata !DIExpression(DW_OP_deref)), !dbg !4624
  call void @llvm.dbg.value(metadata i32* %vop, metadata !4623, metadata !DIExpression(DW_OP_deref)), !dbg !4624
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %vop) #7, !dbg !4637
  br label %for.cond, !dbg !4637, !llvm.loop !4641

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8, !dbg !4643
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8, !dbg !4643
  ret void, !dbg !4643
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4644 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4648, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4649, metadata !DIExpression()), !dbg !4650
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4651
  %0 = load i64, i64* %bits, align 8, !dbg !4652
  %shr = lshr i64 %0, 1, !dbg !4652
  store i64 %shr, i64* %bits, align 8, !dbg !4652
  %1 = load i32, i32* %bit_no, align 4, !dbg !4653
  %add = add i32 %1, 1, !dbg !4653
  store i32 %add, i32* %bit_no, align 4, !dbg !4653
  ret void, !dbg !4654
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.htab* @VEC_htab_t_base_index(%struct.VEC_htab_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4655 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_htab_t_base* %vec_, metadata !4661, metadata !DIExpression()), !dbg !4663
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4662, metadata !DIExpression()), !dbg !4663
  br label %land.end, !dbg !4664

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4664
  %arrayidx = getelementptr inbounds %struct.VEC_htab_t_base, %struct.VEC_htab_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4664
  %0 = load %struct.htab*, %struct.htab** %arrayidx, align 8, !dbg !4664
  ret %struct.htab* %0, !dbg !4664
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_and_compl_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map1, %struct.bitmap_head_def* %map2, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !4665 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4669, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map1, metadata !4670, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map2, metadata !4671, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 0, metadata !4672, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4673, metadata !DIExpression()), !dbg !4674
  %0 = bitcast %struct.bitmap_head_def* %map1 to i64*, !dbg !4675
  %1 = load i64, i64* %0, align 8, !dbg !4675
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4676
  store i64 %1, i64* %2, align 8, !dbg !4676
  %3 = bitcast %struct.bitmap_head_def* %map2 to i64*, !dbg !4677
  %4 = load i64, i64* %3, align 8, !dbg !4677
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !4678
  %5 = bitcast %struct.bitmap_element_def** %elt2 to i64*, !dbg !4679
  store i64 %4, i64* %5, align 8, !dbg !4679
  %elt12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4680
  %6 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !4683
  %7 = inttoptr i64 %4 to %struct.bitmap_element_def*, !dbg !4683
  br label %while.body, !dbg !4683

while.body:                                       ; preds = %entry, %if.end6
  %tobool = icmp eq i64 %1, 0, !dbg !4684
  br i1 %tobool, label %if.then, label %if.end, !dbg !4685

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt12, align 8, !dbg !4686
  br label %while.end, !dbg !4688

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end6, label %while.end.loopexit, !dbg !4689

if.end6:                                          ; preds = %if.end
  br label %while.body, !dbg !4683, !llvm.loop !4690

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !4692

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %8 = phi %struct.bitmap_element_def* [ %6, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %9 = phi %struct.bitmap_element_def* [ %6, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %10 = phi %struct.bitmap_element_def* [ %6, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %11 = phi %struct.bitmap_element_def* [ %6, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %12 = phi %struct.bitmap_element_def* [ %6, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  br label %while.cond, !dbg !4693

while.cond:                                       ; preds = %while.body16, %while.end
  %13 = phi %struct.bitmap_element_def* [ %22, %while.body16 ], [ %7, %while.end ]
  %14 = phi %struct.bitmap_element_def* [ %22, %while.body16 ], [ %7, %while.end ]
  %15 = phi %struct.bitmap_element_def* [ %22, %while.body16 ], [ %7, %while.end ]
  %.in = phi i64 [ %21, %while.body16 ], [ %4, %while.end ]
  %16 = phi %struct.bitmap_element_def* [ %22, %while.body16 ], [ %7, %while.end ]
  %17 = phi %struct.bitmap_element_def* [ %22, %while.body16 ], [ %7, %while.end ], !dbg !4694
  %18 = inttoptr i64 %.in to i64*, !dbg !4674
  %tobool10 = icmp eq %struct.bitmap_element_def* %17, null, !dbg !4695
  br i1 %tobool10, label %while.end20, label %land.rhs, !dbg !4696

land.rhs:                                         ; preds = %while.cond
  %indx12 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i64 0, i32 2, !dbg !4697
  %19 = load i32, i32* %indx12, align 8, !dbg !4697
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %12, i64 0, i32 2, !dbg !4698
  %20 = load i32, i32* %indx14, align 8, !dbg !4698
  %cmp15 = icmp ult i32 %19, %20, !dbg !4699
  br i1 %cmp15, label %while.body16, label %while.end20, !dbg !4693

while.body16:                                     ; preds = %land.rhs
  %21 = load i64, i64* %18, align 8, !dbg !4700
  store i64 %21, i64* %5, align 8, !dbg !4701
  %22 = inttoptr i64 %21 to %struct.bitmap_element_def*, !dbg !4693
  br label %while.cond, !dbg !4693, !llvm.loop !4702

while.end20:                                      ; preds = %while.cond, %land.rhs
  %.lcssa5 = phi %struct.bitmap_element_def* [ %13, %while.cond ], [ %13, %land.rhs ]
  %.lcssa4 = phi %struct.bitmap_element_def* [ %14, %while.cond ], [ %14, %land.rhs ]
  %.lcssa = phi %struct.bitmap_element_def* [ %15, %while.cond ], [ %15, %land.rhs ]
  %indx22 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %11, i64 0, i32 2, !dbg !4703
  %23 = load i32, i32* %indx22, align 8, !dbg !4703
  %cmp24 = icmp eq i32 %23, 0, !dbg !4705
  br i1 %cmp24, label %if.end28, label %if.then25, !dbg !4706

if.then25:                                        ; preds = %while.end20
  %indx27 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %10, i64 0, i32 2, !dbg !4707
  %24 = load i32, i32* %indx27, align 8, !dbg !4707
  %mul = shl i32 %24, 7, !dbg !4708
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4672, metadata !DIExpression()), !dbg !4674
  br label %if.end28, !dbg !4709

if.end28:                                         ; preds = %while.end20, %if.then25
  %start_bit.addr.0 = phi i32 [ %mul, %if.then25 ], [ 0, %while.end20 ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !4672, metadata !DIExpression()), !dbg !4674
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4710
  store i32 0, i32* %word_no, align 8, !dbg !4711
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 0, !dbg !4712
  %25 = load i64, i64* %arrayidx, align 8, !dbg !4712
  %bits32 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4713
  store i64 %25, i64* %bits32, align 8, !dbg !4714
  %tobool34 = icmp eq %struct.bitmap_element_def* %.lcssa, null, !dbg !4715
  br i1 %tobool34, label %if.end47, label %land.lhs.true, !dbg !4717

land.lhs.true:                                    ; preds = %if.end28
  %indx36 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %8, i64 0, i32 2, !dbg !4718
  %26 = load i32, i32* %indx36, align 8, !dbg !4718
  %indx38 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %.lcssa4, i64 0, i32 2, !dbg !4719
  %27 = load i32, i32* %indx38, align 8, !dbg !4719
  %cmp39 = icmp eq i32 %26, %27, !dbg !4720
  br i1 %cmp39, label %if.then40, label %if.end47, !dbg !4721

if.then40:                                        ; preds = %land.lhs.true
  %arrayidx45 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %.lcssa5, i64 0, i32 3, i64 0, !dbg !4722
  %28 = load i64, i64* %arrayidx45, align 8, !dbg !4722
  %neg = xor i64 %28, -1, !dbg !4723
  %and = and i64 %25, %neg, !dbg !4724
  store i64 %and, i64* %bits32, align 8, !dbg !4724
  br label %if.end47, !dbg !4725

if.end47:                                         ; preds = %if.end28, %if.then40, %land.lhs.true
  %29 = phi i64 [ %25, %if.end28 ], [ %and, %if.then40 ], [ %25, %land.lhs.true ], !dbg !4726
  store i64 %29, i64* %bits32, align 8, !dbg !4726
  %tobool51 = icmp eq i64 %29, 0, !dbg !4727
  %lnot.ext = zext i1 %tobool51 to i32, !dbg !4727
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !4728
  call void @llvm.dbg.value(metadata i32 %add, metadata !4672, metadata !DIExpression()), !dbg !4674
  store i32 %add, i32* %bit_no, align 4, !dbg !4729
  ret void, !dbg !4730
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_and_compl(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4731 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4733, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4734, metadata !DIExpression()), !dbg !4738
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4739
  %0 = load i64, i64* %bits, align 8, !dbg !4739
  %tobool = icmp eq i64 %0, 0, !dbg !4740
  br i1 %tobool, label %if.end, label %next_bit, !dbg !4741

next_bit.loopexit:                                ; preds = %if.end26
  %.lcssa7 = phi i64 [ %16, %if.end26 ], !dbg !4742
  br label %next_bit, !dbg !4746

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa7, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !4735), !dbg !4747
  br label %while.cond, !dbg !4746

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !4748
  %and = and i64 %2, 1, !dbg !4749
  %tobool2 = icmp eq i64 %and, 0, !dbg !4750
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !4746

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !4751
  store i64 %shr, i64* %bits, align 8, !dbg !4751
  %3 = load i32, i32* %bit_no, align 4, !dbg !4753
  %add = add i32 %3, 1, !dbg !4753
  store i32 %add, i32* %bit_no, align 4, !dbg !4753
  %.pre = load i64, i64* %bits, align 8, !dbg !4748
  br label %while.cond, !dbg !4746, !llvm.loop !4754

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !4756
  %sub = add i32 %4, 63, !dbg !4757
  %div = and i32 %sub, -64, !dbg !4758
  store i32 %div, i32* %bit_no, align 4, !dbg !4759
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4760
  %5 = load i32, i32* %word_no, align 8, !dbg !4761
  %inc = add i32 %5, 1, !dbg !4761
  store i32 %inc, i32* %word_no, align 8, !dbg !4761
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4762
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !4763
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4762
  %7 = bitcast %struct.bitmap_element_def** %elt2 to i64*, !dbg !4762
  br label %while.body6, !dbg !4765

while.body6:                                      ; preds = %if.end, %while.end53
  %8 = phi i32 [ %inc, %if.end ], [ 0, %while.end53 ]
  br label %while.cond7, !dbg !4766

while.cond7:                                      ; preds = %if.end30, %while.body6
  %9 = phi i32 [ %inc33, %if.end30 ], [ %8, %while.body6 ], !dbg !4767
  %cmp = icmp eq i32 %9, 2, !dbg !4768
  %10 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !4762
  br i1 %cmp, label %while.end34, label %while.body9, !dbg !4766

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %9 to i64, !dbg !4769
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %10, i64 0, i32 3, i64 %idxprom, !dbg !4769
  %11 = load i64, i64* %arrayidx, align 8, !dbg !4769
  store i64 %11, i64* %bits, align 8, !dbg !4770
  %12 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt2, align 8, !dbg !4771
  %tobool13 = icmp eq %struct.bitmap_element_def* %12, null, !dbg !4772
  br i1 %tobool13, label %if.end26, label %land.lhs.true, !dbg !4773

land.lhs.true:                                    ; preds = %while.body9
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %12, i64 0, i32 2, !dbg !4774
  %13 = load i32, i32* %indx, align 8, !dbg !4774
  %indx16 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %10, i64 0, i32 2, !dbg !4775
  %14 = load i32, i32* %indx16, align 8, !dbg !4775
  %cmp17 = icmp eq i32 %13, %14, !dbg !4776
  br i1 %cmp17, label %if.then18, label %if.end26, !dbg !4777

if.then18:                                        ; preds = %land.lhs.true
  %arrayidx23 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %12, i64 0, i32 3, i64 %idxprom, !dbg !4778
  %15 = load i64, i64* %arrayidx23, align 8, !dbg !4778
  %neg = xor i64 %15, -1, !dbg !4779
  %and25 = and i64 %11, %neg, !dbg !4780
  store i64 %and25, i64* %bits, align 8, !dbg !4780
  br label %if.end26, !dbg !4781

if.end26:                                         ; preds = %while.body9, %if.then18, %land.lhs.true
  %16 = phi i64 [ %11, %while.body9 ], [ %and25, %if.then18 ], [ %11, %land.lhs.true ], !dbg !4742
  %tobool28 = icmp eq i64 %16, 0, !dbg !4782
  br i1 %tobool28, label %if.end30, label %next_bit.loopexit, !dbg !4783

if.end30:                                         ; preds = %if.end26
  %17 = load i32, i32* %bit_no, align 4, !dbg !4784
  %add31 = add i32 %17, 64, !dbg !4784
  store i32 %add31, i32* %bit_no, align 4, !dbg !4784
  %18 = load i32, i32* %word_no, align 8, !dbg !4785
  %inc33 = add i32 %18, 1, !dbg !4785
  store i32 %inc33, i32* %word_no, align 8, !dbg !4785
  br label %while.cond7, !dbg !4766, !llvm.loop !4786

while.end34:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %10, %while.cond7 ], !dbg !4762
  %19 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !4788
  %20 = load i64, i64* %19, align 8, !dbg !4788
  store i64 %20, i64* %6, align 8, !dbg !4789
  %tobool38 = icmp eq i64 %20, 0, !dbg !4790
  %21 = inttoptr i64 %20 to %struct.bitmap_element_def*, !dbg !4792
  br i1 %tobool38, label %return.loopexit1, label %while.cond41.preheader, !dbg !4792

while.cond41.preheader:                           ; preds = %while.end34
  %.pre3 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt2, align 8, !dbg !4793
  %22 = bitcast %struct.bitmap_element_def* %.pre3 to i64*, !dbg !4794
  br label %while.cond41, !dbg !4794

while.cond41:                                     ; preds = %while.cond41.preheader, %while.body49
  %23 = phi i64* [ %22, %while.cond41.preheader ], [ %30, %while.body49 ]
  %24 = phi %struct.bitmap_element_def* [ %.pre3, %while.cond41.preheader ], [ %29, %while.body49 ]
  %25 = phi %struct.bitmap_element_def* [ %.pre3, %while.cond41.preheader ], [ %29, %while.body49 ], !dbg !4793
  %tobool43 = icmp eq %struct.bitmap_element_def* %25, null, !dbg !4795
  br i1 %tobool43, label %while.end53, label %land.rhs, !dbg !4796

land.rhs:                                         ; preds = %while.cond41
  %indx45 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %24, i64 0, i32 2, !dbg !4797
  %26 = load i32, i32* %indx45, align 8, !dbg !4797
  %indx47 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %21, i64 0, i32 2, !dbg !4798
  %27 = load i32, i32* %indx47, align 8, !dbg !4798
  %cmp48 = icmp ult i32 %26, %27, !dbg !4799
  br i1 %cmp48, label %while.body49, label %while.end53, !dbg !4794

while.body49:                                     ; preds = %land.rhs
  %28 = load i64, i64* %23, align 8, !dbg !4800
  store i64 %28, i64* %7, align 8, !dbg !4801
  %29 = inttoptr i64 %28 to %struct.bitmap_element_def*, !dbg !4794
  %30 = inttoptr i64 %28 to i64*, !dbg !4794
  br label %while.cond41, !dbg !4794, !llvm.loop !4802

while.end53:                                      ; preds = %while.cond41, %land.rhs
  %indx55 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %21, i64 0, i32 2, !dbg !4803
  %31 = load i32, i32* %indx55, align 8, !dbg !4803
  %mul56 = shl i32 %31, 7, !dbg !4804
  store i32 %mul56, i32* %bit_no, align 4, !dbg !4805
  store i32 0, i32* %word_no, align 8, !dbg !4806
  br label %while.body6, !dbg !4765, !llvm.loop !4807

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !4809

return.loopexit1:                                 ; preds = %while.end34
  br label %return, !dbg !4809

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !4738
  ret i8 %retval.0, !dbg !4809
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_vop_access(%struct.htab* %vop_to_refs, i32 %vop, i32 %ref, i8 zeroext %stored) unnamed_addr #5 !dbg !4810 {
entry:
  %vop.addr = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.htab* %vop_to_refs, metadata !4814, metadata !DIExpression()), !dbg !4820
  call void @llvm.dbg.value(metadata i32 %vop, metadata !4815, metadata !DIExpression()), !dbg !4820
  store i32 %vop, i32* %vop.addr, align 4
  call void @llvm.dbg.value(metadata i32 %ref, metadata !4816, metadata !DIExpression()), !dbg !4820
  call void @llvm.dbg.value(metadata i8 %stored, metadata !4817, metadata !DIExpression()), !dbg !4820
  %0 = bitcast i32* %vop.addr to i8*, !dbg !4821
  call void @llvm.dbg.value(metadata i32 %vop, metadata !4815, metadata !DIExpression()), !dbg !4820
  %call = call i8** @htab_find_slot_with_hash(%struct.htab* %vop_to_refs, i8* nonnull %0, i32 %vop, i32 1) #6, !dbg !4822
  call void @llvm.dbg.value(metadata i8** %call, metadata !4818, metadata !DIExpression()), !dbg !4820
  %1 = load i8*, i8** %call, align 8, !dbg !4823
  %tobool = icmp eq i8* %1, null, !dbg !4823
  br i1 %tobool, label %if.then, label %if.else, !dbg !4825

if.then:                                          ; preds = %entry
  %call1 = call i8* @xmalloc(i64 24) #6, !dbg !4826
  call void @llvm.dbg.value(metadata i8* %call1, metadata !4819, metadata !DIExpression()), !dbg !4820
  %2 = load i32, i32* %vop.addr, align 4, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %2, metadata !4815, metadata !DIExpression()), !dbg !4820
  %uid = bitcast i8* %call1 to i32*, !dbg !4829
  store i32 %2, i32* %uid, align 8, !dbg !4830
  %call2 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4831
  %refs_all = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !4832
  %3 = bitcast i8* %refs_all to %struct.bitmap_head_def**, !dbg !4832
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** %3, align 8, !dbg !4833
  %call3 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4834
  %refs_stored = getelementptr inbounds i8, i8* %call1, i64 16, !dbg !4835
  %4 = bitcast i8* %refs_stored to %struct.bitmap_head_def**, !dbg !4835
  store %struct.bitmap_head_def* %call3, %struct.bitmap_head_def** %4, align 8, !dbg !4836
  store i8* %call1, i8** %call, align 8, !dbg !4837
  br label %if.end, !dbg !4838

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %1, metadata !4819, metadata !DIExpression()), !dbg !4820
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %vtoe.0.in = phi i8* [ %1, %if.else ], [ %call1, %if.then ]
  call void @llvm.dbg.value(metadata i8* %vtoe.0.in, metadata !4819, metadata !DIExpression()), !dbg !4820
  %refs_all4 = getelementptr inbounds i8, i8* %vtoe.0.in, i64 8, !dbg !4839
  %5 = bitcast i8* %refs_all4 to %struct.bitmap_head_def**, !dbg !4839
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %5, align 8, !dbg !4839
  %call5 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 %ref) #6, !dbg !4840
  %tobool6 = icmp eq i8 %stored, 0, !dbg !4841
  br i1 %tobool6, label %if.end10, label %if.then7, !dbg !4843

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %vtoe.0.in, metadata !4819, metadata !DIExpression()), !dbg !4820
  %refs_stored8 = getelementptr inbounds i8, i8* %vtoe.0.in, i64 16, !dbg !4844
  %7 = bitcast i8* %refs_stored8 to %struct.bitmap_head_def**, !dbg !4844
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %7, align 8, !dbg !4844
  %call9 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %8, i32 %ref) #6, !dbg !4845
  br label %if.end10, !dbg !4845

if.end10:                                         ; preds = %if.end, %if.then7
  ret void, !dbg !4846
}

; Function Attrs: nounwind uwtable
define internal void @determine_invariantness_stmt(%struct.dom_walk_data* %dw_data, %struct.basic_block_def* %bb) #5 !dbg !4847 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %dw_data, metadata !4849, metadata !DIExpression()), !dbg !4871
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4850, metadata !DIExpression()), !dbg !4871
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !4872
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4872
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 2, !dbg !4873
  %1 = bitcast i8** %aux to %struct.loop**, !dbg !4873
  %2 = load %struct.loop*, %struct.loop** %1, align 8, !dbg !4873
  %cmp = icmp eq %struct.loop* %2, null, !dbg !4874
  %conv1 = zext i1 %cmp to i8, !dbg !4873
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !4854, metadata !DIExpression()), !dbg !4871
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !4855, metadata !DIExpression()), !dbg !4871
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 3, !dbg !4875
  %3 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !4875
  %call = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %3) #7, !dbg !4877
  %tobool = icmp eq %struct.loop* %call, null, !dbg !4877
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4878

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4879
  %tobool3 = icmp eq %struct._IO_FILE* %4, null, !dbg !4879
  br i1 %tobool3, label %if.end10, label %land.lhs.true, !dbg !4881

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* @dump_flags, align 4, !dbg !4882
  %and = and i32 %5, 8, !dbg !4883
  %tobool4 = icmp eq i32 %and, 0, !dbg !4883
  br i1 %tobool4, label %if.end10, label %if.then5, !dbg !4884

if.then5:                                         ; preds = %land.lhs.true
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4885
  %6 = load i32, i32* %index, align 8, !dbg !4885
  %7 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !4886
  %num = getelementptr inbounds %struct.loop, %struct.loop* %7, i64 0, i32 0, !dbg !4887
  %8 = load i32, i32* %num, align 8, !dbg !4887
  %call8 = tail call fastcc i32 @loop_depth(%struct.loop* %7) #7, !dbg !4888
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15, i64 0, i64 0), i32 %6, i32 %8, i32 %call8) #6, !dbg !4889
  br label %if.end10, !dbg !4889

if.end10:                                         ; preds = %land.lhs.true, %if.end, %if.then5
  %9 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4890
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4890
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !4890
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !4890
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4890
  br label %for.cond, !dbg !4891

for.cond:                                         ; preds = %for.inc, %if.end10
  %maybe_never.0 = phi i8 [ %conv1, %if.end10 ], [ %maybe_never.2, %for.inc ], !dbg !4871
  %outermost.0 = phi %struct.loop* [ %2, %if.end10 ], [ %outermost.2, %for.inc ], !dbg !4871
  call void @llvm.dbg.value(metadata %struct.loop* %outermost.0, metadata !4855, metadata !DIExpression()), !dbg !4871
  call void @llvm.dbg.value(metadata i8 %maybe_never.0, metadata !4854, metadata !DIExpression()), !dbg !4871
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4852, metadata !DIExpression(DW_OP_deref)), !dbg !4871
  %call11 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4892
  %tobool12 = icmp eq i8 %call11, 0, !dbg !4893
  br i1 %tobool12, label %for.body, label %cleanup.loopexit, !dbg !4894

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4852, metadata !DIExpression(DW_OP_deref)), !dbg !4871
  %call13 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4895
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call13, metadata !4853, metadata !DIExpression()), !dbg !4871
  %call14 = call i32 @movement_possibility(%union.gimple_statement_d* %call13) #7, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %call14, metadata !4851, metadata !DIExpression()), !dbg !4871
  %cmp15 = icmp eq i32 %call14, 0, !dbg !4897
  br i1 %cmp15, label %if.then17, label %if.end28, !dbg !4898

if.then17:                                        ; preds = %for.body
  %call18 = call fastcc zeroext i8 @nonpure_call_p(%union.gimple_statement_d* %call13) #7, !dbg !4899
  %tobool19 = icmp eq i8 %call18, 0, !dbg !4899
  br i1 %tobool19, label %if.else, label %for.inc, !dbg !4900

if.else:                                          ; preds = %if.then17
  %call21 = call zeroext i8 @stmt_makes_single_store(%union.gimple_statement_d* %call13) #6, !dbg !4901
  %tobool22 = icmp eq i8 %call21, 0, !dbg !4901
  br i1 %tobool22, label %for.inc, label %if.then23, !dbg !4902

if.then23:                                        ; preds = %if.else
  %call25 = call fastcc %struct.lim_aux_data* @init_lim_data(%union.gimple_statement_d* %call13) #7, !dbg !4903
  call void @llvm.dbg.value(metadata %struct.lim_aux_data* %call25, metadata !4857, metadata !DIExpression()), !dbg !4904
  %always_executed_in = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call25, i64 0, i32 2, !dbg !4905
  store %struct.loop* %outermost.0, %struct.loop** %always_executed_in, align 8, !dbg !4906
  br label %for.inc, !dbg !4907

if.end28:                                         ; preds = %for.body
  %call29 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %call13) #7, !dbg !4908
  %tobool31 = icmp eq i8 %call29, 0, !dbg !4908
  br i1 %tobool31, label %if.end81, label %land.lhs.true32, !dbg !4909

land.lhs.true32:                                  ; preds = %if.end28
  %call33 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %call13) #7, !dbg !4910
  %call34 = call fastcc i32 @get_gimple_rhs_class(i32 %call33) #7, !dbg !4911
  %cmp35 = icmp eq i32 %call34, 1, !dbg !4912
  br i1 %cmp35, label %if.then37, label %if.end81, !dbg !4913

if.then37:                                        ; preds = %land.lhs.true32
  %call38 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call13) #7, !dbg !4914
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !4866, metadata !DIExpression()), !dbg !4915
  %call39 = call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %call13) #7, !dbg !4916
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !4869, metadata !DIExpression()), !dbg !4915
  %call40 = call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %call13) #7, !dbg !4917
  %call41 = call fastcc %struct.loop* @outermost_invariant_loop(%union.tree_node* %call39, %struct.loop* %call40) #7, !dbg !4918
  call void @llvm.dbg.value(metadata %struct.loop* %call41, metadata !4870, metadata !DIExpression()), !dbg !4915
  %cmp42 = icmp eq i32 %call14, 2, !dbg !4919
  br i1 %cmp42, label %land.lhs.true44, label %if.end61, !dbg !4921

land.lhs.true44:                                  ; preds = %if.then37
  %call45 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %call13) #7, !dbg !4922
  %cmp46 = icmp ne i32 %call45, 75, !dbg !4923
  %10 = load i32, i32* @flag_unsafe_math_optimizations, align 4, !dbg !4924
  %tobool49 = icmp eq i32 %10, 0, !dbg !4924
  %or.cond.not = or i1 %tobool49, %cmp46, !dbg !4925
  %11 = load i32, i32* @flag_trapping_math, align 4, !dbg !4926
  %tobool51 = icmp ne i32 %11, 0, !dbg !4926
  %or.cond1 = or i1 %or.cond.not, %tobool51, !dbg !4925
  %or.cond1.not = xor i1 %or.cond1, true, !dbg !4925
  %cmp53 = icmp ne %struct.loop* %call41, null, !dbg !4927
  %or.cond2 = and i1 %cmp53, %or.cond1.not, !dbg !4925
  br i1 %or.cond2, label %land.lhs.true55, label %if.end61, !dbg !4925

land.lhs.true55:                                  ; preds = %land.lhs.true44
  %call56 = call fastcc %struct.loop* @outermost_invariant_loop(%union.tree_node* %call38, %struct.loop* nonnull %call41) #7, !dbg !4928
  %cmp57 = icmp eq %struct.loop* %call56, null, !dbg !4929
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !4930

if.then59:                                        ; preds = %land.lhs.true55
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4852, metadata !DIExpression(DW_OP_deref)), !dbg !4871
  %call60 = call fastcc %union.gimple_statement_d* @rewrite_reciprocal(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4931
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call60, metadata !4853, metadata !DIExpression()), !dbg !4871
  br label %if.end61, !dbg !4932

if.end61:                                         ; preds = %land.lhs.true44, %if.then59, %land.lhs.true55, %if.then37
  %stmt.0 = phi %union.gimple_statement_d* [ %call60, %if.then59 ], [ %call13, %land.lhs.true55 ], [ %call13, %land.lhs.true44 ], [ %call13, %if.then37 ], !dbg !4933
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !4853, metadata !DIExpression()), !dbg !4871
  br i1 %cmp42, label %land.lhs.true64, label %if.end81, !dbg !4934

land.lhs.true64:                                  ; preds = %if.end61
  %call65 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt.0) #7, !dbg !4936
  %cmp66 = icmp eq i32 %call65, 89, !dbg !4937
  br i1 %cmp66, label %land.lhs.true68, label %if.end81, !dbg !4938

land.lhs.true68:                                  ; preds = %land.lhs.true64
  %call69 = call i32 @integer_onep(%union.tree_node* %call39) #6, !dbg !4939
  %tobool70 = icmp eq i32 %call69, 0, !dbg !4939
  br i1 %tobool70, label %if.end81, label %land.lhs.true71, !dbg !4940

land.lhs.true71:                                  ; preds = %land.lhs.true68
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4941
  %bf.load = load i64, i64* %12, align 8, !dbg !4941
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !4942
  %cmp72 = icmp eq i64 %bf.cast4, 141, !dbg !4942
  br i1 %cmp72, label %land.lhs.true74, label %if.end81, !dbg !4943

land.lhs.true74:                                  ; preds = %land.lhs.true71
  %call75 = call fastcc zeroext i8 @has_single_use(%union.tree_node* %call38) #7, !dbg !4944
  %tobool77 = icmp eq i8 %call75, 0, !dbg !4944
  br i1 %tobool77, label %if.end81, label %if.then78, !dbg !4945

if.then78:                                        ; preds = %land.lhs.true74
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4852, metadata !DIExpression(DW_OP_deref)), !dbg !4871
  %call79 = call fastcc %union.gimple_statement_d* @rewrite_bittest(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4946
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call79, metadata !4853, metadata !DIExpression()), !dbg !4871
  br label %if.end81, !dbg !4947

if.end81:                                         ; preds = %land.lhs.true74, %land.lhs.true68, %if.end28, %if.end61, %land.lhs.true64, %land.lhs.true71, %if.then78, %land.lhs.true32
  %stmt.2 = phi %union.gimple_statement_d* [ %call13, %land.lhs.true32 ], [ %call13, %if.end28 ], [ %call79, %if.then78 ], [ %stmt.0, %land.lhs.true74 ], [ %stmt.0, %land.lhs.true71 ], [ %stmt.0, %land.lhs.true68 ], [ %stmt.0, %land.lhs.true64 ], [ %stmt.0, %if.end61 ], !dbg !4933
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.2, metadata !4853, metadata !DIExpression()), !dbg !4871
  %call82 = call fastcc %struct.lim_aux_data* @init_lim_data(%union.gimple_statement_d* %stmt.2) #7, !dbg !4948
  call void @llvm.dbg.value(metadata %struct.lim_aux_data* %call82, metadata !4856, metadata !DIExpression()), !dbg !4871
  %always_executed_in83 = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call82, i64 0, i32 2, !dbg !4949
  store %struct.loop* %outermost.0, %struct.loop** %always_executed_in83, align 8, !dbg !4950
  %tobool85 = icmp ne i8 %maybe_never.0, 0, !dbg !4951
  %cmp87 = icmp eq i32 %call14, 1, !dbg !4953
  %or.cond3 = and i1 %tobool85, %cmp87, !dbg !4954
  br i1 %or.cond3, label %for.inc, label %if.end90, !dbg !4954

if.end90:                                         ; preds = %if.end81
  %conv93 = zext i1 %cmp87 to i8, !dbg !4955
  %call94 = call fastcc zeroext i8 @determine_max_movement(%union.gimple_statement_d* %stmt.2, i8 zeroext %conv93) #7, !dbg !4957
  %tobool95 = icmp eq i8 %call94, 0, !dbg !4957
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !4958

if.then96:                                        ; preds = %if.end90
  %max_loop = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call82, i64 0, i32 0, !dbg !4959
  store %struct.loop* null, %struct.loop** %max_loop, align 8, !dbg !4961
  br label %for.inc, !dbg !4962

if.end97:                                         ; preds = %if.end90
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4963
  %tobool98 = icmp eq %struct._IO_FILE* %13, null, !dbg !4963
  br i1 %tobool98, label %if.end106, label %land.lhs.true99, !dbg !4965

land.lhs.true99:                                  ; preds = %if.end97
  %14 = load i32, i32* @dump_flags, align 4, !dbg !4966
  %and100 = and i32 %14, 8, !dbg !4967
  %tobool101 = icmp eq i32 %and100, 0, !dbg !4967
  br i1 %tobool101, label %if.end106, label %if.then102, !dbg !4968

if.then102:                                       ; preds = %land.lhs.true99
  call void @print_gimple_stmt(%struct._IO_FILE* nonnull %13, %union.gimple_statement_d* %stmt.2, i32 2, i32 0) #6, !dbg !4969
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4971
  %max_loop103 = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call82, i64 0, i32 0, !dbg !4972
  %16 = load %struct.loop*, %struct.loop** %max_loop103, align 8, !dbg !4972
  %call104 = call fastcc i32 @loop_depth(%struct.loop* %16) #7, !dbg !4973
  %cost = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call82, i64 0, i32 3, !dbg !4974
  %17 = load i32, i32* %cost, align 8, !dbg !4974
  %call105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16, i64 0, i64 0), i32 %call104, i32 %17) #6, !dbg !4975
  br label %if.end106, !dbg !4976

if.end106:                                        ; preds = %land.lhs.true99, %if.end97, %if.then102
  %cost107 = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call82, i64 0, i32 3, !dbg !4977
  %18 = load i32, i32* %cost107, align 8, !dbg !4977
  %19 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4979
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %19, i64 59, i32 1, !dbg !4979
  %20 = load i32, i32* %value, align 8, !dbg !4979
  %cmp108 = icmp ult i32 %18, %20, !dbg !4980
  br i1 %cmp108, label %for.inc, label %if.then110, !dbg !4981

if.then110:                                       ; preds = %if.end106
  call fastcc void @set_profitable_level(%union.gimple_statement_d* %stmt.2) #7, !dbg !4982
  br label %for.inc, !dbg !4982

for.inc:                                          ; preds = %if.else, %if.then17, %if.end106, %if.then110, %if.end81, %if.then23, %if.then96
  %maybe_never.2 = phi i8 [ %maybe_never.0, %if.then96 ], [ 1, %if.then17 ], [ %maybe_never.0, %if.then23 ], [ %maybe_never.0, %if.else ], [ %maybe_never.0, %if.end81 ], [ %maybe_never.0, %if.then110 ], [ %maybe_never.0, %if.end106 ], !dbg !4871
  %outermost.2 = phi %struct.loop* [ %outermost.0, %if.then96 ], [ null, %if.then17 ], [ %outermost.0, %if.then23 ], [ %outermost.0, %if.else ], [ %outermost.0, %if.end81 ], [ %outermost.0, %if.then110 ], [ %outermost.0, %if.end106 ], !dbg !4871
  call void @llvm.dbg.value(metadata %struct.loop* %outermost.2, metadata !4855, metadata !DIExpression()), !dbg !4871
  call void @llvm.dbg.value(metadata i8 %maybe_never.2, metadata !4854, metadata !DIExpression()), !dbg !4871
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4852, metadata !DIExpression(DW_OP_deref)), !dbg !4871
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4983
  br label %for.cond, !dbg !4984, !llvm.loop !4985

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4987

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4987
  ret void, !dbg !4987
}

declare dso_local void @init_walk_dominator_tree(%struct.dom_walk_data*) local_unnamed_addr #2

declare dso_local void @walk_dominator_tree(%struct.dom_walk_data*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @fini_walk_dominator_tree(%struct.dom_walk_data*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @loop_depth(%struct.loop* %loop) unnamed_addr #0 !dbg !4988 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4992, metadata !DIExpression()), !dbg !4993
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !4994
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !4994
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !4994
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4994

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !4994
  br label %cond.end, !dbg !4994

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4994
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !4994
  ret i32 %call, !dbg !4995
}

declare dso_local zeroext i8 @stmt_makes_single_store(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.lim_aux_data* @init_lim_data(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !4996 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5000, metadata !DIExpression()), !dbg !5002
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @lim_aux_data_map, align 8, !dbg !5003
  %1 = bitcast %union.gimple_statement_d* %stmt to i8*, !dbg !5004
  %call = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !5005
  call void @llvm.dbg.value(metadata i8** %call, metadata !5001, metadata !DIExpression()), !dbg !5002
  %call1 = tail call i8* @xcalloc(i64 1, i64 40) #6, !dbg !5006
  store i8* %call1, i8** %call, align 8, !dbg !5007
  %.cast = bitcast i8* %call1 to %struct.lim_aux_data*, !dbg !5008
  ret %struct.lim_aux_data* %.cast, !dbg !5009
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5010 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5012, metadata !DIExpression()), !dbg !5013
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5014
  %cmp = icmp ugt i32 %call, 2, !dbg !5016
  br i1 %cmp, label %if.then, label %return, !dbg !5017

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !5018
  br label %return, !dbg !5019

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !5020
  ret %union.tree_node* %retval.0, !dbg !5021
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.loop* @outermost_invariant_loop(%union.tree_node* %def, %struct.loop* %loop) unnamed_addr #5 !dbg !5022 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !5026, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5027, metadata !DIExpression()), !dbg !5032
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !5033
  br i1 %tobool, label %if.then, label %if.end, !dbg !5035

if.then:                                          ; preds = %entry
  %call = tail call %struct.loop* @superloop_at_depth(%struct.loop* %loop, i32 1) #6, !dbg !5036
  br label %cleanup, !dbg !5037

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5038
  %bf.load = load i64, i64* %0, align 8, !dbg !5038
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5040
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5040
  br i1 %cmp, label %if.end5, label %if.then1, !dbg !5041

if.then1:                                         ; preds = %if.end
  %call2 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %def) #6, !dbg !5042
  %tobool3 = icmp eq i8 %call2, 0, !dbg !5042
  br i1 %tobool3, label %cond.true, label %cond.end, !dbg !5042

cond.true:                                        ; preds = %if.then1
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i32 431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5042
  br label %cond.end, !dbg !5042

cond.end:                                         ; preds = %if.then1, %cond.true
  %call4 = tail call %struct.loop* @superloop_at_depth(%struct.loop* %loop, i32 1) #6, !dbg !5044
  br label %cleanup, !dbg !5045

if.end5:                                          ; preds = %if.end
  %def_stmt6 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5046
  %1 = bitcast %union.tree_node** %def_stmt6 to %union.gimple_statement_d**, !dbg !5046
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !5046
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !5028, metadata !DIExpression()), !dbg !5032
  %call7 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %2) #7, !dbg !5047
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call7, metadata !5029, metadata !DIExpression()), !dbg !5032
  %tobool8 = icmp eq %struct.basic_block_def* %call7, null, !dbg !5048
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !5050

if.then9:                                         ; preds = %if.end5
  %call10 = tail call %struct.loop* @superloop_at_depth(%struct.loop* %loop, i32 1) #6, !dbg !5051
  br label %cleanup, !dbg !5052

if.end11:                                         ; preds = %if.end5
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call7, i64 0, i32 3, !dbg !5053
  %3 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5053
  %call12 = tail call %struct.loop* @find_common_loop(%struct.loop* %loop, %struct.loop* %3) #6, !dbg !5054
  call void @llvm.dbg.value(metadata %struct.loop* %call12, metadata !5030, metadata !DIExpression()), !dbg !5032
  %call13 = tail call fastcc %struct.lim_aux_data* @get_lim_data(%union.gimple_statement_d* %2) #7, !dbg !5055
  call void @llvm.dbg.value(metadata %struct.lim_aux_data* %call13, metadata !5031, metadata !DIExpression()), !dbg !5032
  %cmp14 = icmp eq %struct.lim_aux_data* %call13, null, !dbg !5056
  br i1 %cmp14, label %if.end21, label %land.lhs.true, !dbg !5058

land.lhs.true:                                    ; preds = %if.end11
  %max_loop15 = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call13, i64 0, i32 0, !dbg !5059
  %4 = load %struct.loop*, %struct.loop** %max_loop15, align 8, !dbg !5059
  %cmp16 = icmp eq %struct.loop* %4, null, !dbg !5060
  br i1 %cmp16, label %if.end21, label %if.then17, !dbg !5061

if.then17:                                        ; preds = %land.lhs.true
  %call19 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* nonnull %4) #7, !dbg !5062
  %call20 = tail call %struct.loop* @find_common_loop(%struct.loop* %call12, %struct.loop* %call19) #6, !dbg !5063
  call void @llvm.dbg.value(metadata %struct.loop* %call20, metadata !5030, metadata !DIExpression()), !dbg !5032
  br label %if.end21, !dbg !5064

if.end21:                                         ; preds = %land.lhs.true, %if.end11, %if.then17
  %max_loop.0 = phi %struct.loop* [ %call20, %if.then17 ], [ %call12, %land.lhs.true ], [ %call12, %if.end11 ], !dbg !5032
  call void @llvm.dbg.value(metadata %struct.loop* %max_loop.0, metadata !5030, metadata !DIExpression()), !dbg !5032
  %cmp22 = icmp eq %struct.loop* %max_loop.0, %loop, !dbg !5065
  br i1 %cmp22, label %cleanup, label %if.end24, !dbg !5067

if.end24:                                         ; preds = %if.end21
  %call25 = tail call fastcc i32 @loop_depth(%struct.loop* %max_loop.0) #7, !dbg !5068
  %add = add i32 %call25, 1, !dbg !5069
  %call26 = tail call %struct.loop* @superloop_at_depth(%struct.loop* %loop, i32 %add) #6, !dbg !5070
  call void @llvm.dbg.value(metadata %struct.loop* %call26, metadata !5030, metadata !DIExpression()), !dbg !5032
  br label %cleanup, !dbg !5071

cleanup:                                          ; preds = %if.end21, %if.end24, %if.then9, %cond.end, %if.then
  %retval.0 = phi %struct.loop* [ %call4, %cond.end ], [ %call26, %if.end24 ], [ %call10, %if.then9 ], [ %call, %if.then ], [ null, %if.end21 ], !dbg !5032
  ret %struct.loop* %retval.0, !dbg !5072
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5073 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5078, metadata !DIExpression()), !dbg !5080
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !5081
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5079, metadata !DIExpression()), !dbg !5080
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !5082
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5084

if.end:                                           ; preds = %entry
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !5085
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5085
  br label %cleanup, !dbg !5086

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.loop* [ %0, %if.end ], [ null, %entry ], !dbg !5080
  ret %struct.loop* %retval.0, !dbg !5087
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @rewrite_reciprocal(%struct.gimple_stmt_iterator* %bsi) unnamed_addr #5 !dbg !5088 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5092, metadata !DIExpression()), !dbg !5107
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5108
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5108
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !5109
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5093, metadata !DIExpression()), !dbg !5107
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call) #7, !dbg !5110
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5098, metadata !DIExpression()), !dbg !5107
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5111
  %1 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !5111
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5099, metadata !DIExpression()), !dbg !5107
  %call3 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !5112
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5096, metadata !DIExpression()), !dbg !5107
  %call4 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call3) #6, !dbg !5113
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5114
  %2 = bitcast i40* %gimple_reg_flag to i64*, !dbg !5114
  %bf.load = load i64, i64* %2, align 8, !dbg !5115
  %bf.set = or i64 %bf.load, 134217728, !dbg !5115
  store i64 %bf.set, i64* %2, align 8, !dbg !5115
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5116
  %bf.load5 = load i64, i64* %3, align 8, !dbg !5116
  %bf.cast1 = and i64 %bf.load5, 65535, !dbg !5117
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !5117
  br i1 %cmp, label %if.then, label %if.else, !dbg !5118

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5106, metadata !DIExpression()), !dbg !5119
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5120
  %4 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !5120
  %call9 = tail call %union.tree_node* @build_real(%union.tree_node* %4, %struct.real_value* nonnull byval(%struct.real_value) align 8 @dconst1) #6, !dbg !5121
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5100, metadata !DIExpression()), !dbg !5107
  %type10 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !5122
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type10, i64 0, i32 6, !dbg !5122
  %bf.load11 = load i32, i32* %precision, align 4, !dbg !5122
  %bf.clear12 = and i32 %bf.load11, 1023, !dbg !5122
  %sh_prom = zext i32 %bf.clear12 to i64, !dbg !5122
  %shl = shl i64 1, %sh_prom, !dbg !5122
  %conv = trunc i64 %shl to i32, !dbg !5122
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5105, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i32 0, metadata !5102, metadata !DIExpression()), !dbg !5119
  br label %for.cond, !dbg !5123

for.cond:                                         ; preds = %for.body, %if.then
  %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.body ], !dbg !5125
  %list.0 = phi %union.tree_node* [ null, %if.then ], [ %call15, %for.body ], !dbg !5119
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !5106, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5102, metadata !DIExpression()), !dbg !5119
  %cmp13 = icmp slt i32 %i.0, %conv, !dbg !5126
  br i1 %cmp13, label %for.body, label %for.end, !dbg !5128

for.body:                                         ; preds = %for.cond
  %call15 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call9, %union.tree_node* %list.0) #6, !dbg !5129
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !5106, metadata !DIExpression()), !dbg !5119
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5130
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5102, metadata !DIExpression()), !dbg !5119
  br label %for.cond, !dbg !5131, !llvm.loop !5132

for.end:                                          ; preds = %for.cond
  %list.0.lcssa = phi %union.tree_node* [ %list.0, %for.cond ], !dbg !5119
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0.lcssa, metadata !5106, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0.lcssa, metadata !5106, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0.lcssa, metadata !5106, metadata !DIExpression()), !dbg !5119
  %call16 = tail call %union.tree_node* @build_vector(%union.tree_node* %1, %union.tree_node* %list.0.lcssa) #6, !dbg !5134
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !5100, metadata !DIExpression()), !dbg !5107
  br label %if.end, !dbg !5135

if.else:                                          ; preds = %entry
  %call17 = tail call %union.tree_node* @build_real(%union.tree_node* %1, %struct.real_value* nonnull byval(%struct.real_value) align 8 @dconst1) #6, !dbg !5136
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !5100, metadata !DIExpression()), !dbg !5107
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  %real_one.0 = phi %union.tree_node* [ %call16, %for.end ], [ %call17, %if.else ], !dbg !5137
  call void @llvm.dbg.value(metadata %union.tree_node* %real_one.0, metadata !5100, metadata !DIExpression()), !dbg !5107
  %call18 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %call) #7, !dbg !5138
  %call19 = tail call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 75, %union.tree_node* %call3, %union.tree_node* %real_one.0, %union.tree_node* %call18) #6, !dbg !5138
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !5094, metadata !DIExpression()), !dbg !5107
  %call20 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call3, %union.gimple_statement_d* %call19) #7, !dbg !5139
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !5097, metadata !DIExpression()), !dbg !5107
  tail call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call19, %union.tree_node* %call20) #7, !dbg !5140
  %call21 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !5141
  %call22 = tail call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 65, %union.tree_node* %call1, %union.tree_node* %call20, %union.tree_node* %call21) #6, !dbg !5141
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call22, metadata !5095, metadata !DIExpression()), !dbg !5107
  %5 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !5142
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %5, i64 24, i1 false), !dbg !5142
  tail call void @gsi_insert_before(%struct.gimple_stmt_iterator* %bsi, %union.gimple_statement_d* %call19, i32 0) #6, !dbg !5143
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5101, metadata !DIExpression(DW_OP_deref)), !dbg !5107
  call void @gsi_replace(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call22, i8 zeroext 1) #6, !dbg !5144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5145
  ret %union.gimple_statement_d* %call19, !dbg !5146
}

declare dso_local i32 @integer_onep(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @has_single_use(%union.tree_node* %var) unnamed_addr #0 !dbg !5147 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5151, metadata !DIExpression()), !dbg !5156
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5157
  %0 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !5157
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !5152, metadata !DIExpression()), !dbg !5156
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !5158
  %1 = bitcast i40* %next to %struct.ssa_use_operand_d**, !dbg !5158
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !5158
  %cmp = icmp eq %struct.ssa_use_operand_d* %2, %0, !dbg !5160
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5161

if.end:                                           ; preds = %entry
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %2, i64 0, i32 1, !dbg !5162
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next2, align 8, !dbg !5162
  %cmp3 = icmp eq %struct.ssa_use_operand_d* %3, %0, !dbg !5164
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !5165

if.then4:                                         ; preds = %if.end
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %2, i64 0, i32 2, i32 0, !dbg !5166
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5166
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %4) #7, !dbg !5167
  %tobool = icmp eq i8 %call, 0, !dbg !5168
  %conv = zext i1 %tobool to i8, !dbg !5168
  br label %cleanup, !dbg !5169

if.end6:                                          ; preds = %if.end
  %5 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5170
  %tobool7 = icmp eq i32 %5, 0, !dbg !5170
  br i1 %tobool7, label %cleanup, label %if.end9, !dbg !5172

if.end9:                                          ; preds = %if.end6
  %call10 = tail call zeroext i8 @single_imm_use_1(%struct.ssa_use_operand_d* nonnull %0, %struct.ssa_use_operand_d** null, %union.gimple_statement_d** null) #6, !dbg !5173
  br label %cleanup, !dbg !5174

cleanup:                                          ; preds = %if.end6, %entry, %if.end9, %if.then4
  %retval.0 = phi i8 [ %conv, %if.then4 ], [ %call10, %if.end9 ], [ 0, %entry ], [ 0, %if.end6 ], !dbg !5156
  ret i8 %retval.0, !dbg !5175
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @rewrite_bittest(%struct.gimple_stmt_iterator* %bsi) unnamed_addr #5 !dbg !5176 {
entry:
  %use_stmt = alloca %union.gimple_statement_d*, align 8
  %use = alloca %struct.ssa_use_operand_d*, align 8
  %rsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5178, metadata !DIExpression()), !dbg !5193
  %0 = bitcast %union.gimple_statement_d** %use_stmt to i8*, !dbg !5194
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5194
  %1 = bitcast %struct.ssa_use_operand_d** %use to i8*, !dbg !5195
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5195
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !5196
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5179, metadata !DIExpression()), !dbg !5193
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call) #7, !dbg !5197
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5183, metadata !DIExpression()), !dbg !5193
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5198
  %bf.load = load i64, i64* %2, align 8, !dbg !5198
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5200
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5200
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !5201

lor.lhs.false:                                    ; preds = %entry
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %use_stmt, metadata !5180, metadata !DIExpression(DW_OP_deref)), !dbg !5193
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d** %use, metadata !5189, metadata !DIExpression(DW_OP_deref)), !dbg !5193
  %call2 = call fastcc zeroext i8 @single_imm_use(%union.tree_node* %call1, %struct.ssa_use_operand_d** nonnull %use, %union.gimple_statement_d** nonnull %use_stmt) #7, !dbg !5202
  %tobool = icmp eq i8 %call2, 0, !dbg !5202
  br i1 %tobool, label %cleanup, label %lor.lhs.false3, !dbg !5203

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %use_stmt, align 8, !dbg !5204
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %3, metadata !5180, metadata !DIExpression()), !dbg !5193
  %call4 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %3) #7, !dbg !5205
  %cmp5 = icmp eq i32 %call4, 1, !dbg !5206
  br i1 %cmp5, label %if.end, label %cleanup, !dbg !5207

if.end:                                           ; preds = %lor.lhs.false3
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %use_stmt, align 8, !dbg !5208
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %4, metadata !5180, metadata !DIExpression()), !dbg !5193
  %call6 = call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %4) #7, !dbg !5210
  %cmp7 = icmp eq %union.tree_node* %call6, %call1, !dbg !5211
  br i1 %cmp7, label %lor.lhs.false8, label %cleanup, !dbg !5212

lor.lhs.false8:                                   ; preds = %if.end
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %use_stmt, align 8, !dbg !5213
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %5, metadata !5180, metadata !DIExpression()), !dbg !5193
  %call9 = call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %5) #7, !dbg !5214
  %cmp10 = icmp eq i32 %call9, 102, !dbg !5215
  br i1 %cmp10, label %lor.lhs.false13, label %land.lhs.true, !dbg !5216

land.lhs.true:                                    ; preds = %lor.lhs.false8
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %use_stmt, align 8, !dbg !5217
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %6, metadata !5180, metadata !DIExpression()), !dbg !5193
  %call11 = call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %6) #7, !dbg !5218
  %cmp12 = icmp eq i32 %call11, 101, !dbg !5219
  br i1 %cmp12, label %lor.lhs.false13, label %cleanup, !dbg !5220

lor.lhs.false13:                                  ; preds = %land.lhs.true, %lor.lhs.false8
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %use_stmt, align 8, !dbg !5221
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %7, metadata !5180, metadata !DIExpression()), !dbg !5193
  %call14 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %7) #7, !dbg !5222
  %call15 = call i32 @integer_zerop(%union.tree_node* %call14) #6, !dbg !5223
  %tobool16 = icmp eq i32 %call15, 0, !dbg !5223
  br i1 %tobool16, label %cleanup, label %if.end18, !dbg !5224

if.end18:                                         ; preds = %lor.lhs.false13
  %call19 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !5225
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5225
  %8 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5225
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %8, align 8, !dbg !5225
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %9, metadata !5181, metadata !DIExpression()), !dbg !5193
  %call20 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %9) #7, !dbg !5226
  %cmp21 = icmp eq i32 %call20, 6, !dbg !5228
  br i1 %cmp21, label %if.end23, label %cleanup, !dbg !5229

if.end23:                                         ; preds = %if.end18
  %call24 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %9) #7, !dbg !5230
  %cmp25 = icmp eq i32 %call24, 116, !dbg !5230
  br i1 %cmp25, label %if.then29, label %lor.lhs.false26, !dbg !5230

lor.lhs.false26:                                  ; preds = %if.end23
  %call27 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %9) #7, !dbg !5230
  %cmp28 = icmp eq i32 %call27, 113, !dbg !5230
  br i1 %cmp28, label %if.then29, label %if.end47, !dbg !5232

if.then29:                                        ; preds = %lor.lhs.false26, %if.end23
  %call30 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %9) #7, !dbg !5233
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !5186, metadata !DIExpression()), !dbg !5193
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5235
  %bf.load32 = load i64, i64* %10, align 8, !dbg !5235
  %bf.cast342 = and i64 %bf.load32, 65535, !dbg !5237
  %cmp35 = icmp eq i64 %bf.cast342, 141, !dbg !5237
  br i1 %cmp35, label %lor.lhs.false36, label %cleanup, !dbg !5238

lor.lhs.false36:                                  ; preds = %if.then29
  %call37 = call fastcc zeroext i8 @has_single_use(%union.tree_node* %call30) #7, !dbg !5239
  %tobool38 = icmp eq i8 %call37, 0, !dbg !5239
  br i1 %tobool38, label %cleanup, label %if.end40, !dbg !5240

if.end40:                                         ; preds = %lor.lhs.false36
  %def_stmt42 = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5241
  %11 = bitcast %union.tree_node** %def_stmt42 to %union.gimple_statement_d**, !dbg !5241
  %12 = load %union.gimple_statement_d*, %union.gimple_statement_d** %11, align 8, !dbg !5241
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %12, metadata !5181, metadata !DIExpression()), !dbg !5193
  %call43 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %12) #7, !dbg !5242
  %cmp44 = icmp eq i32 %call43, 6, !dbg !5244
  br i1 %cmp44, label %if.end47, label %cleanup, !dbg !5245

if.end47:                                         ; preds = %if.end40, %lor.lhs.false26
  %stmt1.0 = phi %union.gimple_statement_d* [ %9, %lor.lhs.false26 ], [ %12, %if.end40 ], !dbg !5193
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt1.0, metadata !5181, metadata !DIExpression()), !dbg !5193
  %call48 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt1.0) #7, !dbg !5246
  %cmp49 = icmp eq i32 %call48, 84, !dbg !5248
  br i1 %cmp49, label %lor.lhs.false50, label %cleanup, !dbg !5249

lor.lhs.false50:                                  ; preds = %if.end47
  %call51 = call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %stmt1.0) #7, !dbg !5250
  %call52 = call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %call) #7, !dbg !5251
  %cmp53 = icmp eq %struct.loop* %call51, %call52, !dbg !5252
  br i1 %cmp53, label %if.end55, label %cleanup, !dbg !5253

if.end55:                                         ; preds = %lor.lhs.false50
  %call56 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt1.0) #7, !dbg !5254
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !5187, metadata !DIExpression()), !dbg !5193
  %call57 = call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt1.0) #7, !dbg !5255
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !5188, metadata !DIExpression()), !dbg !5193
  %call58 = call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %stmt1.0) #7, !dbg !5256
  %call59 = call fastcc %struct.loop* @outermost_invariant_loop(%union.tree_node* %call57, %struct.loop* %call58) #7, !dbg !5257
  %cmp60 = icmp eq %struct.loop* %call59, null, !dbg !5258
  br i1 %cmp60, label %cleanup, label %land.lhs.true61, !dbg !5259

land.lhs.true61:                                  ; preds = %if.end55
  %call62 = call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %stmt1.0) #7, !dbg !5260
  %call63 = call fastcc %struct.loop* @outermost_invariant_loop(%union.tree_node* %call56, %struct.loop* %call62) #7, !dbg !5261
  %cmp64 = icmp eq %struct.loop* %call63, null, !dbg !5262
  br i1 %cmp64, label %if.then65, label %cleanup, !dbg !5263

if.then65:                                        ; preds = %land.lhs.true61
  %13 = bitcast %struct.gimple_stmt_iterator* %rsi to i8*, !dbg !5264
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8, !dbg !5264
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5265
  %14 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5265
  %call66 = call %union.tree_node* @create_tmp_var(%union.tree_node* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !5266
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !5184, metadata !DIExpression()), !dbg !5193
  %call67 = call zeroext i8 @add_referenced_var(%union.tree_node* %call66) #6, !dbg !5267
  %15 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5268
  %call72 = call %union.tree_node* @build_int_cst(%union.tree_node* %15, i64 1) #6, !dbg !5268
  %call73 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 83, %union.tree_node* %15, %union.tree_node* %call72, %union.tree_node* %call57) #6, !dbg !5268
  call void @llvm.dbg.value(metadata %union.tree_node* %call73, metadata !5186, metadata !DIExpression()), !dbg !5193
  %call74 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call66, %union.tree_node* %call73) #6, !dbg !5269
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call74, metadata !5181, metadata !DIExpression()), !dbg !5193
  %call75 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call66, %union.gimple_statement_d* %call74) #7, !dbg !5270
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !5185, metadata !DIExpression()), !dbg !5193
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call74, %union.tree_node* %call75) #7, !dbg !5271
  %16 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5272
  %call78 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 89, %union.tree_node* %16, %union.tree_node* %call56, %union.tree_node* %call75) #6, !dbg !5272
  call void @llvm.dbg.value(metadata %union.tree_node* %call78, metadata !5186, metadata !DIExpression()), !dbg !5193
  %call79 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call66, %union.tree_node* %call78) #6, !dbg !5273
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call79, metadata !5182, metadata !DIExpression()), !dbg !5193
  %call80 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call66, %union.gimple_statement_d* %call79) #7, !dbg !5274
  call void @llvm.dbg.value(metadata %union.tree_node* %call80, metadata !5185, metadata !DIExpression()), !dbg !5193
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call79, %union.tree_node* %call80) #7, !dbg !5275
  %17 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %use, align 8, !dbg !5276
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %17, metadata !5189, metadata !DIExpression()), !dbg !5193
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %17, %union.tree_node* %call80) #7, !dbg !5276
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %use_stmt, align 8, !dbg !5277
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %18, metadata !5180, metadata !DIExpression()), !dbg !5193
  %type82 = getelementptr inbounds %union.tree_node, %union.tree_node* %call80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5278
  %19 = load %union.tree_node*, %union.tree_node** %type82, align 8, !dbg !5278
  %call83 = call %union.tree_node* @build_int_cst_type(%union.tree_node* %19, i64 0) #6, !dbg !5279
  call fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %18, %union.tree_node* %call83) #7, !dbg !5280
  %20 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !5281
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %20, i64 24, i1 false), !dbg !5281
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* %bsi, %union.gimple_statement_d* %call74, i32 0) #6, !dbg !5282
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %rsi, metadata !5190, metadata !DIExpression(DW_OP_deref)), !dbg !5283
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %rsi, %union.gimple_statement_d* %call79, i32 1) #6, !dbg !5284
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %rsi, metadata !5190, metadata !DIExpression(DW_OP_deref)), !dbg !5283
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %rsi, i8 zeroext 1) #6, !dbg !5285
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8, !dbg !5286
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true, %if.end40, %lor.lhs.false36, %if.then29, %if.end55, %lor.lhs.false50, %if.end47, %if.end18, %lor.lhs.false13, %if.end, %lor.lhs.false3, %lor.lhs.false, %entry, %land.lhs.true61, %if.then65
  %retval.0 = phi %union.gimple_statement_d* [ %call74, %if.then65 ], [ %call, %lor.lhs.false3 ], [ %call, %lor.lhs.false ], [ %call, %entry ], [ %call, %lor.lhs.false13 ], [ %call, %land.lhs.true ], [ %call, %if.end ], [ %call, %if.end18 ], [ %call, %lor.lhs.false36 ], [ %call, %if.then29 ], [ %call, %if.end40 ], [ %call, %lor.lhs.false50 ], [ %call, %if.end47 ], [ %call, %land.lhs.true61 ], [ %call, %if.end55 ], !dbg !5193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5287
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5287
  ret %union.gimple_statement_d* %retval.0, !dbg !5287
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @determine_max_movement(%union.gimple_statement_d* %stmt, i8 zeroext %must_preserve_exec) unnamed_addr #5 !dbg !5288 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5292, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata i8 %must_preserve_exec, metadata !5293, metadata !DIExpression()), !dbg !5315
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !5316
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5294, metadata !DIExpression()), !dbg !5315
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !5317
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5317
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !5295, metadata !DIExpression()), !dbg !5315
  %call1 = tail call fastcc %struct.lim_aux_data* @get_lim_data(%union.gimple_statement_d* %stmt) #7, !dbg !5318
  call void @llvm.dbg.value(metadata %struct.lim_aux_data* %call1, metadata !5297, metadata !DIExpression()), !dbg !5315
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !5319
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #8, !dbg !5319
  %tobool = icmp eq i8 %must_preserve_exec, 0, !dbg !5320
  br i1 %tobool, label %if.else, label %if.then, !dbg !5322

if.then:                                          ; preds = %entry
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 2, !dbg !5323
  %2 = bitcast i8** %aux to %struct.loop**, !dbg !5323
  %3 = load %struct.loop*, %struct.loop** %2, align 8, !dbg !5323
  call void @llvm.dbg.value(metadata %struct.loop* %3, metadata !5296, metadata !DIExpression()), !dbg !5315
  br label %if.end, !dbg !5324

if.else:                                          ; preds = %entry
  %call2 = tail call %struct.loop* @superloop_at_depth(%struct.loop* %0, i32 1) #6, !dbg !5325
  call void @llvm.dbg.value(metadata %struct.loop* %call2, metadata !5296, metadata !DIExpression()), !dbg !5315
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %level.0 = phi %struct.loop* [ %3, %if.then ], [ %call2, %if.else ], !dbg !5326
  call void @llvm.dbg.value(metadata %struct.loop* %level.0, metadata !5296, metadata !DIExpression()), !dbg !5315
  %max_loop = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call1, i64 0, i32 0, !dbg !5327
  store %struct.loop* %level.0, %struct.loop** %max_loop, align 8, !dbg !5328
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5299, metadata !DIExpression(DW_OP_deref)), !dbg !5315
  %call3 = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !5329
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5298, metadata !DIExpression()), !dbg !5315
  br label %for.cond, !dbg !5329

for.cond:                                         ; preds = %for.inc, %if.end
  %val.0 = phi %union.tree_node* [ %call3, %if.end ], [ %call10, %for.inc ], !dbg !5331
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !5298, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5299, metadata !DIExpression(DW_OP_deref)), !dbg !5315
  %call4 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5332
  %tobool5 = icmp eq i8 %call4, 0, !dbg !5332
  br i1 %tobool5, label %for.body, label %for.end, !dbg !5329

for.body:                                         ; preds = %for.cond
  %call6 = call fastcc zeroext i8 @add_dependency(%union.tree_node* %val.0, %struct.lim_aux_data* %call1, %struct.loop* %0, i8 zeroext 1) #7, !dbg !5334
  %tobool7 = icmp eq i8 %call6, 0, !dbg !5334
  br i1 %tobool7, label %cleanup35.loopexit, label %for.inc, !dbg !5336

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5299, metadata !DIExpression(DW_OP_deref)), !dbg !5315
  %call10 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5332
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !5298, metadata !DIExpression()), !dbg !5315
  br label %for.cond, !dbg !5332, !llvm.loop !5337

for.end:                                          ; preds = %for.cond
  %call11 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !5339
  %tobool12 = icmp eq %union.tree_node* %call11, null, !dbg !5339
  br i1 %tobool12, label %if.end33, label %if.then13, !dbg !5340

if.then13:                                        ; preds = %for.end
  %call14 = call fastcc %struct.mem_ref* @mem_ref_in_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !5341
  call void @llvm.dbg.value(metadata %struct.mem_ref* %call14, metadata !5312, metadata !DIExpression()), !dbg !5342
  %tobool15 = icmp eq %struct.mem_ref* %call14, null, !dbg !5343
  br i1 %tobool15, label %if.else24, label %if.then16, !dbg !5345

if.then16:                                        ; preds = %if.then13
  %4 = load %struct.loop*, %struct.loop** %max_loop, align 8, !dbg !5346
  %call18 = call fastcc %struct.loop* @outermost_indep_loop(%struct.loop* %4, %struct.loop* %0, %struct.mem_ref* nonnull %call14) #7, !dbg !5348
  store %struct.loop* %call18, %struct.loop** %max_loop, align 8, !dbg !5349
  %tobool21 = icmp eq %struct.loop* %call18, null, !dbg !5350
  br i1 %tobool21, label %cleanup, label %if.end32, !dbg !5352

if.else24:                                        ; preds = %if.then13
  %call25 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !5353
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !5298, metadata !DIExpression()), !dbg !5315
  %cmp = icmp eq %union.tree_node* %call25, null, !dbg !5356
  br i1 %cmp, label %if.end32, label %if.then26, !dbg !5357

if.then26:                                        ; preds = %if.else24
  %call27 = call fastcc zeroext i8 @add_dependency(%union.tree_node* nonnull %call25, %struct.lim_aux_data* %call1, %struct.loop* %0, i8 zeroext 0) #7, !dbg !5358
  %tobool28 = icmp eq i8 %call27, 0, !dbg !5358
  br i1 %tobool28, label %cleanup, label %if.end32, !dbg !5361

if.end32:                                         ; preds = %if.then16, %if.then26, %if.else24
  br label %cleanup, !dbg !5362

cleanup:                                          ; preds = %if.then16, %if.then26, %if.end32
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end32 ], [ false, %if.then16 ], [ false, %if.then26 ]
  br i1 %cleanup.dest.slot.0, label %if.end33, label %cleanup35

if.end33:                                         ; preds = %for.end, %cleanup
  %call34 = call fastcc i32 @stmt_cost(%union.gimple_statement_d* %stmt) #7, !dbg !5363
  %cost = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call1, i64 0, i32 3, !dbg !5364
  %5 = load i32, i32* %cost, align 8, !dbg !5365
  %add = add i32 %5, %call34, !dbg !5365
  store i32 %add, i32* %cost, align 8, !dbg !5365
  br label %cleanup35, !dbg !5366

cleanup35.loopexit:                               ; preds = %for.body
  br label %cleanup35, !dbg !5367

cleanup35:                                        ; preds = %cleanup35.loopexit, %cleanup, %if.end33
  %retval.1 = phi i8 [ 0, %cleanup ], [ 1, %if.end33 ], [ 0, %cleanup35.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #8, !dbg !5367
  ret i8 %retval.1, !dbg !5367
}

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @set_profitable_level(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5368 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5372, metadata !DIExpression()), !dbg !5373
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !5374
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !5375
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5375
  %call1 = tail call fastcc %struct.lim_aux_data* @get_lim_data(%union.gimple_statement_d* %stmt) #7, !dbg !5376
  %max_loop = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call1, i64 0, i32 0, !dbg !5377
  %1 = load %struct.loop*, %struct.loop** %max_loop, align 8, !dbg !5377
  tail call fastcc void @set_level(%union.gimple_statement_d* %stmt, %struct.loop* %0, %struct.loop* %1) #7, !dbg !5378
  ret void, !dbg !5379
}

declare dso_local i8** @pointer_map_insert(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5380 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5384, metadata !DIExpression()), !dbg !5385
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !5386
  %0 = load i32, i32* %num_ops, align 4, !dbg !5386
  ret i32 %0, !dbg !5387
}

declare dso_local %struct.loop* @superloop_at_depth(%struct.loop*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5388 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5392, metadata !DIExpression()), !dbg !5393
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !5394
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5394
  ret %struct.basic_block_def* %0, !dbg !5395
}

declare dso_local %struct.loop* @find_common_loop(%struct.loop*, %struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.lim_aux_data* @get_lim_data(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5396 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5398, metadata !DIExpression()), !dbg !5400
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @lim_aux_data_map, align 8, !dbg !5401
  %1 = bitcast %union.gimple_statement_d* %stmt to i8*, !dbg !5402
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !5403
  call void @llvm.dbg.value(metadata i8** %call, metadata !5399, metadata !DIExpression()), !dbg !5400
  %tobool = icmp eq i8** %call, null, !dbg !5404
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5406

if.end:                                           ; preds = %entry
  %2 = bitcast i8** %call to %struct.lim_aux_data**, !dbg !5407
  %3 = load %struct.lim_aux_data*, %struct.lim_aux_data** %2, align 8, !dbg !5407
  br label %cleanup, !dbg !5408

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.lim_aux_data* [ %3, %if.end ], [ null, %entry ], !dbg !5400
  ret %struct.lim_aux_data* %retval.0, !dbg !5409
}

declare dso_local i8** @pointer_map_contains(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_real(%union.tree_node*, %struct.real_value* byval(%struct.real_value) align 8) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_vector(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5410 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5414, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5415, metadata !DIExpression()), !dbg !5416
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5417
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !5418
  ret %union.tree_node* %call, !dbg !5419
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !5420 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5424, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !5425, metadata !DIExpression()), !dbg !5426
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !5427
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !5428
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5430

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5431
  %bf.load = load i64, i64* %0, align 8, !dbg !5431
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5432
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5432
  br i1 %cmp, label %if.then, label %if.end, !dbg !5433

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5434
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5434
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !5435
  br label %if.end, !dbg !5434

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !5436
}

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local void @gsi_replace(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !5437 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5441, metadata !DIExpression()), !dbg !5444
  call void @llvm.dbg.value(metadata i32 %i, metadata !5442, metadata !DIExpression()), !dbg !5444
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5443, metadata !DIExpression()), !dbg !5444
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !5445
  %tobool = icmp eq i8 %call, 0, !dbg !5445
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !5445

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5445
  %cmp = icmp ugt i32 %call1, %i, !dbg !5445
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5445

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5445
  br label %cond.end, !dbg !5445

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !5446
  %idxprom = zext i32 %i to i64, !dbg !5446
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !5446
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !5447
  ret void, !dbg !5448
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5449 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5451, metadata !DIExpression()), !dbg !5452
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5453
  %cmp = icmp eq i32 %call, 2, !dbg !5454
  %conv1 = zext i1 %cmp to i8, !dbg !5453
  ret i8 %conv1, !dbg !5455
}

declare dso_local zeroext i8 @single_imm_use_1(%struct.ssa_use_operand_d*, %struct.ssa_use_operand_d**, %union.gimple_statement_d**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_imm_use(%union.tree_node* %var, %struct.ssa_use_operand_d** %use_p, %union.gimple_statement_d** %stmt) unnamed_addr #0 !dbg !5456 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5462, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d** %use_p, metadata !5463, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt, metadata !5464, metadata !DIExpression()), !dbg !5469
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5470
  %0 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !5470
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !5465, metadata !DIExpression()), !dbg !5469
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !5471
  %1 = bitcast i40* %next to %struct.ssa_use_operand_d**, !dbg !5471
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !5471
  %cmp = icmp eq %struct.ssa_use_operand_d* %2, %0, !dbg !5472
  br i1 %cmp, label %return_false, label %if.end, !dbg !5473

return_false:                                     ; preds = %if.then4, %if.end12, %entry
  call void @llvm.dbg.label(metadata !5466), !dbg !5474
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %use_p, align 8, !dbg !5475
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !5476
  br label %cleanup, !dbg !5477

if.end:                                           ; preds = %entry
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %2, i64 0, i32 1, !dbg !5478
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next2, align 8, !dbg !5478
  %cmp3 = icmp eq %struct.ssa_use_operand_d* %3, %0, !dbg !5480
  br i1 %cmp3, label %if.then4, label %if.end12, !dbg !5481

if.then4:                                         ; preds = %if.end
  %stmt6 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %2, i64 0, i32 2, i32 0, !dbg !5482
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt6, align 8, !dbg !5482
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %4) #7, !dbg !5485
  %tobool = icmp eq i8 %call, 0, !dbg !5485
  br i1 %tobool, label %if.then7, label %return_false, !dbg !5486

if.then7:                                         ; preds = %if.then4
  %5 = bitcast i40* %next to i64*, !dbg !5487
  %6 = load i64, i64* %5, align 8, !dbg !5487
  %7 = bitcast %struct.ssa_use_operand_d** %use_p to i64*, !dbg !5489
  store i64 %6, i64* %7, align 8, !dbg !5489
  %8 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !5490
  %stmt11 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %8, i64 0, i32 2, i32 0, !dbg !5491
  %9 = bitcast %union.gimple_statement_d** %stmt11 to i64*, !dbg !5491
  %10 = load i64, i64* %9, align 8, !dbg !5491
  %11 = bitcast %union.gimple_statement_d** %stmt to i64*, !dbg !5492
  store i64 %10, i64* %11, align 8, !dbg !5492
  br label %cleanup, !dbg !5493

if.end12:                                         ; preds = %if.end
  %12 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5494
  %tobool13 = icmp eq i32 %12, 0, !dbg !5494
  br i1 %tobool13, label %return_false, label %if.end15, !dbg !5496

if.end15:                                         ; preds = %if.end12
  %call16 = tail call zeroext i8 @single_imm_use_1(%struct.ssa_use_operand_d* nonnull %0, %struct.ssa_use_operand_d** %use_p, %union.gimple_statement_d** %stmt) #6, !dbg !5497
  br label %cleanup, !dbg !5498

cleanup:                                          ; preds = %if.end15, %if.then7, %return_false
  %retval.0 = phi i8 [ 0, %return_false ], [ 1, %if.then7 ], [ %call16, %if.end15 ], !dbg !5469
  ret i8 %retval.0, !dbg !5499
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5500 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5502, metadata !DIExpression()), !dbg !5503
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5504
  ret %union.tree_node* %call, !dbg !5505
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5506 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5508, metadata !DIExpression()), !dbg !5509
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !5510
  %bf.load = load i32, i32* %0, align 8, !dbg !5510
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5510
  ret i32 %bf.lshr, !dbg !5511
}

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5512 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5514, metadata !DIExpression()), !dbg !5515
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !5516
  ret %union.tree_node* %call, !dbg !5517
}

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !5518 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5522, metadata !DIExpression()), !dbg !5524
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !5523, metadata !DIExpression()), !dbg !5524
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #7, !dbg !5525
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5526
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5526
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !5527
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #7, !dbg !5528
  ret void, !dbg !5529
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_rhs(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !5530 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5532, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !5533, metadata !DIExpression()), !dbg !5534
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %rhs) #7, !dbg !5535
  ret void, !dbg !5536
}

declare dso_local %union.tree_node* @build_int_cst_type(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !5537 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !5541, metadata !DIExpression()), !dbg !5542
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !5543
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5543
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !5545
  br i1 %cmp, label %return, label %if.end, !dbg !5546

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !5547
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5547
  %2 = load i64, i64* %1, align 8, !dbg !5547
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !5548
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !5549
  store i64 %2, i64* %3, align 8, !dbg !5549
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !5550
  %5 = load i64, i64* %4, align 8, !dbg !5550
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !5551
  %7 = load i64*, i64** %6, align 8, !dbg !5551
  store i64 %5, i64* %7, align 8, !dbg !5552
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5553
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !5554
  br label %return, !dbg !5555

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !5555
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !5556 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !5560, metadata !DIExpression()), !dbg !5563
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !5561, metadata !DIExpression()), !dbg !5563
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !5564
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5566

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5567
  %bf.load = load i64, i64* %0, align 8, !dbg !5567
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5568
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5568
  br i1 %cmp, label %if.else, label %if.then, !dbg !5569

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !5570
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5571
  br label %if.end, !dbg !5572

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5573
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !5573
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !5562, metadata !DIExpression()), !dbg !5563
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #7, !dbg !5575
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5576
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !5577 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !5581, metadata !DIExpression()), !dbg !5583
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !5582, metadata !DIExpression()), !dbg !5583
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !5584
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5585
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !5586
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5586
  %1 = load i64, i64* %0, align 8, !dbg !5586
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !5587
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !5588
  store i64 %1, i64* %2, align 8, !dbg !5588
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !5589
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !5590
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !5591
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !5592
  ret void, !dbg !5593
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5594 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5599, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5600, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.value(metadata i32 1, metadata !5601, metadata !DIExpression()), !dbg !5602
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !5603
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5604
  store i32 1, i32* %iter_type, align 4, !dbg !5605
  %call = tail call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !5606
  ret %union.tree_node* %call, !dbg !5607
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5608 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5614, metadata !DIExpression()), !dbg !5615
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5616
  %0 = load i8, i8* %done, align 8, !dbg !5616
  ret i8 %0, !dbg !5617
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @add_dependency(%union.tree_node* %def, %struct.lim_aux_data* %data, %struct.loop* %loop, i8 zeroext %add_cost) unnamed_addr #5 !dbg !5618 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !5622, metadata !DIExpression()), !dbg !5631
  call void @llvm.dbg.value(metadata %struct.lim_aux_data* %data, metadata !5623, metadata !DIExpression()), !dbg !5631
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5624, metadata !DIExpression()), !dbg !5631
  call void @llvm.dbg.value(metadata i8 %add_cost, metadata !5625, metadata !DIExpression()), !dbg !5631
  %def_stmt1 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5632
  %0 = bitcast %union.tree_node** %def_stmt1 to %union.gimple_statement_d**, !dbg !5632
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !5632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !5626, metadata !DIExpression()), !dbg !5631
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %1) #7, !dbg !5633
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5627, metadata !DIExpression()), !dbg !5631
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !5634
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5636

if.end:                                           ; preds = %entry
  %call2 = tail call fastcc %struct.loop* @outermost_invariant_loop(%union.tree_node* %def, %struct.loop* %loop) #7, !dbg !5637
  call void @llvm.dbg.value(metadata %struct.loop* %call2, metadata !5628, metadata !DIExpression()), !dbg !5631
  %tobool3 = icmp eq %struct.loop* %call2, null, !dbg !5638
  br i1 %tobool3, label %cleanup, label %if.end5, !dbg !5640

if.end5:                                          ; preds = %if.end
  %max_loop6 = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %data, i64 0, i32 0, !dbg !5641
  %2 = load %struct.loop*, %struct.loop** %max_loop6, align 8, !dbg !5641
  %call7 = tail call zeroext i8 @flow_loop_nested_p(%struct.loop* %2, %struct.loop* nonnull %call2) #6, !dbg !5643
  %tobool8 = icmp eq i8 %call7, 0, !dbg !5643
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !5644

if.then9:                                         ; preds = %if.end5
  store %struct.loop* %call2, %struct.loop** %max_loop6, align 8, !dbg !5645
  br label %if.end11, !dbg !5646

if.end11:                                         ; preds = %if.end5, %if.then9
  %call12 = tail call fastcc %struct.lim_aux_data* @get_lim_data(%union.gimple_statement_d* %1) #7, !dbg !5647
  call void @llvm.dbg.value(metadata %struct.lim_aux_data* %call12, metadata !5630, metadata !DIExpression()), !dbg !5631
  %tobool13 = icmp eq %struct.lim_aux_data* %call12, null, !dbg !5648
  br i1 %tobool13, label %cleanup, label %if.end15, !dbg !5650

if.end15:                                         ; preds = %if.end11
  %tobool16 = icmp eq i8 %add_cost, 0, !dbg !5651
  br i1 %tobool16, label %if.end20, label %land.lhs.true, !dbg !5653

land.lhs.true:                                    ; preds = %if.end15
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !5654
  %3 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5654
  %cmp = icmp eq %struct.loop* %3, %loop, !dbg !5655
  br i1 %cmp, label %if.then18, label %if.end20, !dbg !5656

if.then18:                                        ; preds = %land.lhs.true
  %cost = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call12, i64 0, i32 3, !dbg !5657
  %4 = load i32, i32* %cost, align 8, !dbg !5657
  %cost19 = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %data, i64 0, i32 3, !dbg !5658
  %5 = load i32, i32* %cost19, align 8, !dbg !5659
  %add = add i32 %5, %4, !dbg !5659
  store i32 %add, i32* %cost19, align 8, !dbg !5659
  br label %if.end20, !dbg !5660

if.end20:                                         ; preds = %if.end15, %if.then18, %land.lhs.true
  %call21 = tail call i8* @xmalloc(i64 16) #6, !dbg !5661
  call void @llvm.dbg.value(metadata i8* %call21, metadata !5629, metadata !DIExpression()), !dbg !5631
  %stmt = bitcast i8* %call21 to %union.gimple_statement_d**, !dbg !5662
  store %union.gimple_statement_d* %1, %union.gimple_statement_d** %stmt, align 8, !dbg !5663
  %depends = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %data, i64 0, i32 4, !dbg !5664
  %6 = bitcast %struct.depend** %depends to i64*, !dbg !5664
  %7 = load i64, i64* %6, align 8, !dbg !5664
  %next = getelementptr inbounds i8, i8* %call21, i64 8, !dbg !5665
  %8 = bitcast i8* %next to i64*, !dbg !5666
  store i64 %7, i64* %8, align 8, !dbg !5666
  %9 = bitcast %struct.depend** %depends to i8**, !dbg !5667
  store i8* %call21, i8** %9, align 8, !dbg !5667
  br label %cleanup, !dbg !5668

cleanup:                                          ; preds = %if.end11, %if.end, %entry, %if.end20
  %retval.0 = phi i8 [ 1, %if.end20 ], [ 1, %entry ], [ 0, %if.end ], [ 1, %if.end11 ], !dbg !5631
  ret i8 %retval.0, !dbg !5669
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5670 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5674, metadata !DIExpression()), !dbg !5676
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5677
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !5677
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !5679
  br i1 %tobool, label %if.end, label %if.then, !dbg !5680

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !5681
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %use_ptr) #7, !dbg !5681
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5675, metadata !DIExpression()), !dbg !5676
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5683
  %2 = load i64*, i64** %1, align 8, !dbg !5683
  %3 = load i64, i64* %2, align 8, !dbg !5684
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5685
  store i64 %3, i64* %4, align 8, !dbg !5685
  br label %cleanup, !dbg !5686

if.end:                                           ; preds = %entry
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5687
  %5 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !5687
  %tobool4 = icmp eq %struct.def_optype_d* %5, null, !dbg !5689
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !5690

if.then5:                                         ; preds = %if.end
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %5, i64 0, i32 1, !dbg !5691
  %6 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !5691
  %call7 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %6) #7, !dbg !5691
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5675, metadata !DIExpression()), !dbg !5676
  %7 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !5693
  %8 = load i64*, i64** %7, align 8, !dbg !5693
  %9 = load i64, i64* %8, align 8, !dbg !5694
  %10 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5695
  store i64 %9, i64* %10, align 8, !dbg !5695
  br label %cleanup, !dbg !5696

if.end11:                                         ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5697
  store i8 1, i8* %done, align 8, !dbg !5698
  br label %cleanup, !dbg !5699

cleanup:                                          ; preds = %if.end11, %if.then5, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call7, %if.then5 ], [ null, %if.end11 ], !dbg !5676
  ret %union.tree_node* %retval.0, !dbg !5700
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.mem_ref* @mem_ref_in_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5701 {
entry:
  %store = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5705, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.value(metadata i8* %store, metadata !5706, metadata !DIExpression(DW_OP_deref)), !dbg !5710
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %store) #8, !dbg !5711
  call void @llvm.dbg.value(metadata i8* %store, metadata !5706, metadata !DIExpression(DW_OP_deref)), !dbg !5710
  %call = call fastcc %union.tree_node** @simple_mem_ref_in_stmt(%union.gimple_statement_d* %stmt, i8* nonnull %store) #7, !dbg !5712
  call void @llvm.dbg.value(metadata %union.tree_node** %call, metadata !5707, metadata !DIExpression()), !dbg !5710
  %tobool = icmp eq %union.tree_node** %call, null, !dbg !5713
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5715

if.end:                                           ; preds = %entry
  %0 = load i8, i8* %store, align 1, !dbg !5716
  call void @llvm.dbg.value(metadata i8 %0, metadata !5706, metadata !DIExpression()), !dbg !5710
  %tobool1 = icmp eq i8 %0, 0, !dbg !5716
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5716

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5716
  br label %cond.end, !dbg !5716

cond.end:                                         ; preds = %if.end, %cond.true
  %1 = load %union.tree_node*, %union.tree_node** %call, align 8, !dbg !5717
  %call2 = call i32 @iterative_hash_expr(%union.tree_node* %1, i32 0) #6, !dbg !5718
  call void @llvm.dbg.value(metadata i32 %call2, metadata !5708, metadata !DIExpression()), !dbg !5710
  %2 = load %struct.htab*, %struct.htab** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 0), align 8, !dbg !5719
  %3 = bitcast %union.tree_node** %call to i8**, !dbg !5720
  %4 = load i8*, i8** %3, align 8, !dbg !5720
  %call3 = call i8* @htab_find_with_hash(%struct.htab* %2, i8* %4, i32 %call2) #6, !dbg !5721
  %5 = bitcast i8* %call3 to %struct.mem_ref*, !dbg !5722
  call void @llvm.dbg.value(metadata %struct.mem_ref* %5, metadata !5709, metadata !DIExpression()), !dbg !5710
  %cmp = icmp eq i8* %call3, null, !dbg !5723
  br i1 %cmp, label %cond.true4, label %cleanup, !dbg !5723

cond.true4:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i32 650, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5723
  br label %cleanup, !dbg !5723

cleanup:                                          ; preds = %cond.end, %entry, %cond.true4
  %retval.0 = phi %struct.mem_ref* [ null, %entry ], [ %5, %cond.end ], [ %5, %cond.true4 ], !dbg !5710
  call void @llvm.dbg.value(metadata i8* %store, metadata !5706, metadata !DIExpression(DW_OP_deref)), !dbg !5710
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %store) #8, !dbg !5724
  ret %struct.mem_ref* %retval.0, !dbg !5724
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.loop* @outermost_indep_loop(%struct.loop* %outer, %struct.loop* %loop, %struct.mem_ref* %ref) unnamed_addr #5 !dbg !5725 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %outer, metadata !5729, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5730, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !5731, metadata !DIExpression()), !dbg !5733
  %stored = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 3, !dbg !5734
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %stored, align 8, !dbg !5734
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !5736
  %1 = load i32, i32* %num, align 8, !dbg !5736
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !5737
  %tobool = icmp eq i32 %call, 0, !dbg !5737
  br i1 %tobool, label %for.cond.preheader, label %cleanup, !dbg !5738

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5739

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %aloop.0 = phi %struct.loop* [ %call10, %for.inc ], [ %outer, %for.cond.preheader ], !dbg !5741
  call void @llvm.dbg.value(metadata %struct.loop* %aloop.0, metadata !5732, metadata !DIExpression()), !dbg !5733
  %cmp = icmp eq %struct.loop* %aloop.0, %loop, !dbg !5742
  br i1 %cmp, label %for.end, label %for.body, !dbg !5739

for.body:                                         ; preds = %for.cond
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %stored, align 8, !dbg !5744
  %num2 = getelementptr inbounds %struct.loop, %struct.loop* %aloop.0, i64 0, i32 0, !dbg !5746
  %3 = load i32, i32* %num2, align 8, !dbg !5746
  %call3 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !5747
  %tobool4 = icmp eq i32 %call3, 0, !dbg !5747
  br i1 %tobool4, label %land.lhs.true, label %for.inc, !dbg !5748

land.lhs.true:                                    ; preds = %for.body
  %call5 = tail call fastcc zeroext i8 @ref_indep_loop_p(%struct.loop* %aloop.0, %struct.mem_ref* %ref) #7, !dbg !5749
  %tobool6 = icmp eq i8 %call5, 0, !dbg !5749
  br i1 %tobool6, label %for.inc, label %cleanup.loopexit, !dbg !5750

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %call9 = tail call fastcc i32 @loop_depth(%struct.loop* %aloop.0) #7, !dbg !5751
  %add = add i32 %call9, 1, !dbg !5752
  %call10 = tail call %struct.loop* @superloop_at_depth(%struct.loop* %loop, i32 %add) #6, !dbg !5753
  call void @llvm.dbg.value(metadata %struct.loop* %call10, metadata !5732, metadata !DIExpression()), !dbg !5733
  br label %for.cond, !dbg !5754, !llvm.loop !5755

for.end:                                          ; preds = %for.cond
  %call11 = tail call fastcc zeroext i8 @ref_indep_loop_p(%struct.loop* %loop, %struct.mem_ref* %ref) #7, !dbg !5757
  %tobool12 = icmp eq i8 %call11, 0, !dbg !5757
  %loop. = select i1 %tobool12, %struct.loop* null, %struct.loop* %loop, !dbg !5759
  br label %cleanup, !dbg !5759

cleanup.loopexit:                                 ; preds = %land.lhs.true
  %aloop.0.lcssa3 = phi %struct.loop* [ %aloop.0, %land.lhs.true ], !dbg !5741
  call void @llvm.dbg.value(metadata %struct.loop* %aloop.0.lcssa3, metadata !5732, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata %struct.loop* %aloop.0.lcssa3, metadata !5732, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata %struct.loop* %aloop.0.lcssa3, metadata !5732, metadata !DIExpression()), !dbg !5733
  br label %cleanup, !dbg !5760

cleanup:                                          ; preds = %cleanup.loopexit, %entry, %for.end
  %retval.0 = phi %struct.loop* [ null, %entry ], [ %loop., %for.end ], [ %aloop.0.lcssa3, %cleanup.loopexit ], !dbg !5733
  ret %struct.loop* %retval.0, !dbg !5760
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @stmt_cost(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !5761 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5765, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i32 1, metadata !5767, metadata !DIExpression()), !dbg !5768
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5769
  %cmp = icmp eq i32 %call, 1, !dbg !5771
  br i1 %cmp, label %if.then, label %if.end, !dbg !5772

if.then:                                          ; preds = %entry
  %0 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !5773
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %0, i64 59, i32 1, !dbg !5773
  %1 = load i32, i32* %value, align 8, !dbg !5773
  br label %cleanup, !dbg !5774

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @gimple_references_memory_p(%union.gimple_statement_d* %stmt) #7, !dbg !5775
  %tobool = icmp eq i8 %call1, 0, !dbg !5775
  %spec.select = select i1 %tobool, i32 1, i32 21, !dbg !5777
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5767, metadata !DIExpression()), !dbg !5768
  %call4 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !5778
  %tobool5 = icmp eq i8 %call4, 0, !dbg !5778
  br i1 %tobool5, label %if.end18, label %if.then6, !dbg !5780

if.then6:                                         ; preds = %if.end
  %call7 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #7, !dbg !5781
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5766, metadata !DIExpression()), !dbg !5768
  %tobool8 = icmp eq %union.tree_node* %call7, null, !dbg !5783
  br i1 %tobool8, label %if.end16, label %land.lhs.true, !dbg !5785

land.lhs.true:                                    ; preds = %if.then6
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 5, !dbg !5786
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !5786
  %bf.clear = and i32 %bf.load, 6144, !dbg !5786
  %cmp9 = icmp eq i32 %bf.clear, 6144, !dbg !5787
  br i1 %cmp9, label %land.lhs.true10, label %if.end16, !dbg !5788

land.lhs.true10:                                  ; preds = %land.lhs.true
  %bf.clear13 = and i32 %bf.load, 2047, !dbg !5789
  %cmp14 = icmp eq i32 %bf.clear13, 428, !dbg !5790
  br i1 %cmp14, label %cleanup, label %if.end16, !dbg !5791

if.end16:                                         ; preds = %if.then6, %land.lhs.true10, %land.lhs.true
  %add17 = add nuw nsw i32 %spec.select, 20, !dbg !5792
  br label %cleanup, !dbg !5793

if.end18:                                         ; preds = %if.end
  %call19 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5794
  %cmp20 = icmp eq i32 %call19, 6, !dbg !5796
  br i1 %cmp20, label %if.end22, label %cleanup, !dbg !5797

if.end22:                                         ; preds = %if.end18
  %call23 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5798
  switch i32 %call23, label %cleanup [
    i32 65, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 76, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 71, label %sw.bb
    i32 75, label %sw.bb
    i32 83, label %sw.bb25
    i32 84, label %sw.bb25
  ], !dbg !5799

sw.bb:                                            ; preds = %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22
  %add24 = add nuw nsw i32 %spec.select, 20, !dbg !5800
  call void @llvm.dbg.value(metadata i32 %add24, metadata !5767, metadata !DIExpression()), !dbg !5768
  br label %cleanup, !dbg !5802

sw.bb25:                                          ; preds = %if.end22, %if.end22
  %add26 = add nuw nsw i32 %spec.select, 20, !dbg !5803
  call void @llvm.dbg.value(metadata i32 %add26, metadata !5767, metadata !DIExpression()), !dbg !5768
  br label %cleanup, !dbg !5804

cleanup:                                          ; preds = %if.end18, %sw.bb, %sw.bb25, %if.end22, %land.lhs.true10, %if.end16, %if.then
  %retval.0 = phi i32 [ %1, %if.then ], [ %add17, %if.end16 ], [ 0, %land.lhs.true10 ], [ %spec.select, %if.end18 ], [ %add26, %sw.bb25 ], [ %add24, %sw.bb ], [ %spec.select, %if.end22 ], !dbg !5768
  ret i32 %retval.0, !dbg !5805
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5806 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5810, metadata !DIExpression()), !dbg !5813
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5811, metadata !DIExpression()), !dbg !5813
  call void @llvm.dbg.value(metadata i32 1, metadata !5812, metadata !DIExpression()), !dbg !5813
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5814
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !5815
  br i1 true, label %land.lhs.true16, label %entry.if.end_crit_edge, !dbg !5816

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end, !dbg !5816

land.lhs.true16:                                  ; preds = %entry
  br i1 true, label %if.end, label %land.lhs.true19, !dbg !5818

land.lhs.true19:                                  ; preds = %land.lhs.true16
  br i1 undef, label %land.lhs.true19.if.end_crit_edge, label %if.then, !dbg !5819

land.lhs.true19.if.end_crit_edge:                 ; preds = %land.lhs.true19
  br label %if.end, !dbg !5819

if.then:                                          ; preds = %land.lhs.true19
  br label %if.end, !dbg !5820

if.end:                                           ; preds = %land.lhs.true19.if.end_crit_edge, %entry.if.end_crit_edge, %land.lhs.true16, %if.then
  br i1 false, label %if.end.cond.end28_crit_edge, label %cond.true25, !dbg !5821

if.end.cond.end28_crit_edge:                      ; preds = %if.end
  br label %cond.end28, !dbg !5821

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5822
  br label %cond.end28, !dbg !5821

cond.end28:                                       ; preds = %if.end.cond.end28_crit_edge, %cond.true25
  %0 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ undef, %if.end.cond.end28_crit_edge ], !dbg !5821
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5823
  store %struct.use_optype_d* %0, %struct.use_optype_d** %uses, align 8, !dbg !5824
  br i1 true, label %land.lhs.true32, label %cond.end28.if.end42_crit_edge, !dbg !5825

cond.end28.if.end42_crit_edge:                    ; preds = %cond.end28
  br label %if.end42, !dbg !5825

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %0, null, !dbg !5827
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !5828

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !5829
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !5830
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !5831

if.then38:                                        ; preds = %land.lhs.true35
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5832
  %2 = load i64*, i64** %1, align 8, !dbg !5832
  %3 = load i64, i64* %2, align 8, !dbg !5833
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5834
  store i64 %3, i64* %4, align 8, !dbg !5834
  br label %if.end42, !dbg !5835

if.end42:                                         ; preds = %cond.end28.if.end42_crit_edge, %land.lhs.true35, %land.lhs.true32, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5836
  store i8 0, i8* %done, align 8, !dbg !5837
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5838
  store i32 0, i32* %phi_i, align 8, !dbg !5839
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5840
  store i32 0, i32* %num_phi, align 4, !dbg !5841
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5842
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5843
  ret void, !dbg !5844
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5845 {
entry:
  unreachable, !dbg !5850
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5851 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5855, metadata !DIExpression()), !dbg !5856
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !5857
  %tobool = icmp eq i8 %call, 0, !dbg !5857
  br i1 %tobool, label %return, label %if.end, !dbg !5859

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !5860
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !5860
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !5860
  br label %return, !dbg !5861

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5856
  ret %struct.use_optype_d* %retval.0, !dbg !5862
}

declare dso_local zeroext i8 @flow_loop_nested_p(%struct.loop*, %struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !5863 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5867, metadata !DIExpression()), !dbg !5868
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5869
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5869
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5870
  ret %union.tree_node* %1, !dbg !5871
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !5872 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5877, metadata !DIExpression()), !dbg !5878
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5879
  ret %union.tree_node* %0, !dbg !5880
}

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ref_indep_loop_p(%struct.loop* %loop, %struct.mem_ref* %ref) unnamed_addr #5 !dbg !5881 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5885, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !5886, metadata !DIExpression()), !dbg !5888
  %indep_loop = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 6, !dbg !5889
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %indep_loop, align 8, !dbg !5889
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !5891
  %1 = load i32, i32* %num, align 8, !dbg !5891
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !5892
  %tobool = icmp eq i32 %call, 0, !dbg !5892
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5893

if.end:                                           ; preds = %entry
  %dep_loop = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 7, !dbg !5894
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dep_loop, align 8, !dbg !5894
  %3 = load i32, i32* %num, align 8, !dbg !5896
  %call2 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !5897
  %tobool3 = icmp eq i32 %call2, 0, !dbg !5897
  br i1 %tobool3, label %if.end5, label %cleanup, !dbg !5898

if.end5:                                          ; preds = %if.end
  %call6 = tail call fastcc zeroext i8 @ref_indep_loop_p_1(%struct.loop* %loop, %struct.mem_ref* %ref) #7, !dbg !5899
  call void @llvm.dbg.value(metadata i8 %call6, metadata !5887, metadata !DIExpression()), !dbg !5888
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5900
  %tobool7 = icmp eq %struct._IO_FILE* %4, null, !dbg !5900
  br i1 %tobool7, label %if.end13, label %land.lhs.true, !dbg !5902

land.lhs.true:                                    ; preds = %if.end5
  %5 = load i32, i32* @dump_flags, align 4, !dbg !5903
  %and = and i32 %5, 8, !dbg !5904
  %tobool8 = icmp eq i32 %and, 0, !dbg !5904
  br i1 %tobool8, label %if.end13, label %if.then9, !dbg !5905

if.then9:                                         ; preds = %land.lhs.true
  %id = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 1, !dbg !5906
  %6 = load i32, i32* %id, align 8, !dbg !5906
  %7 = load i32, i32* %num, align 8, !dbg !5907
  %tobool11 = icmp eq i8 %call6, 0, !dbg !5908
  %cond = select i1 %tobool11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), !dbg !5908
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20, i64 0, i64 0), i32 %6, i32 %7, i8* %cond) #6, !dbg !5909
  br label %if.end13, !dbg !5909

if.end13:                                         ; preds = %land.lhs.true, %if.end5, %if.then9
  tail call fastcc void @record_indep_loop(%struct.loop* %loop, %struct.mem_ref* %ref, i8 zeroext %call6) #7, !dbg !5910
  br label %cleanup, !dbg !5911

cleanup:                                          ; preds = %if.end, %entry, %if.end13
  %retval.0 = phi i8 [ %call6, %if.end13 ], [ 1, %entry ], [ 0, %if.end ], !dbg !5888
  ret i8 %retval.0, !dbg !5912
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ref_indep_loop_p_1(%struct.loop* %loop, %struct.mem_ref* %ref) unnamed_addr #5 !dbg !5913 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5915, metadata !DIExpression()), !dbg !5926
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !5916, metadata !DIExpression()), !dbg !5926
  %0 = bitcast i32* %i to i8*, !dbg !5927
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5927
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5928
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5928
  call void @llvm.dbg.value(metadata i8 1, metadata !5922, metadata !DIExpression()), !dbg !5926
  %stored1 = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 3, !dbg !5929
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %stored1, align 8, !dbg !5929
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !5930
  %3 = load i32, i32* %num, align 8, !dbg !5930
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !5931
  call void @llvm.dbg.value(metadata i8 undef, metadata !5923, metadata !DIExpression()), !dbg !5926
  %4 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 4), align 8, !dbg !5932
  %base = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %4, i64 0, i32 0, !dbg !5932
  %5 = load i32, i32* %num, align 8, !dbg !5932
  %call3 = tail call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base, i32 %5) #7, !dbg !5932
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call3, metadata !5917, metadata !DIExpression()), !dbg !5926
  %vops = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 5, !dbg !5933
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vops, align 8, !dbg !5933
  %call4 = tail call zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def* %6, %struct.bitmap_head_def* %call3) #6, !dbg !5935
  %tobool5 = icmp eq i8 %call4, 0, !dbg !5935
  br i1 %tobool5, label %if.end, label %cleanup, !dbg !5936

if.end:                                           ; preds = %entry
  %conv = trunc i32 %call to i8, !dbg !5931
  call void @llvm.dbg.value(metadata i8 %conv, metadata !5923, metadata !DIExpression()), !dbg !5926
  %call6 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5937
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call6, metadata !5918, metadata !DIExpression()), !dbg !5926
  %7 = load %struct.VEC_htab_t_heap*, %struct.VEC_htab_t_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 5), align 8, !dbg !5938
  %base9 = getelementptr inbounds %struct.VEC_htab_t_heap, %struct.VEC_htab_t_heap* %7, i64 0, i32 0, !dbg !5938
  %8 = load i32, i32* %num, align 8, !dbg !5938
  %call14 = tail call fastcc %struct.htab* @VEC_htab_t_base_index(%struct.VEC_htab_t_base* %base9, i32 %8) #7, !dbg !5938
  call void @llvm.dbg.value(metadata %struct.htab* %call14, metadata !5924, metadata !DIExpression()), !dbg !5926
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vops, align 8, !dbg !5939
  call void @llvm.dbg.value(metadata i32* %i, metadata !5920, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5921, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call fastcc void @bmp_iter_and_compl_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %9, %struct.bitmap_head_def* %call3, i32 0, i32* nonnull %i) #7, !dbg !5939
  %tobool18 = icmp eq i8 %conv, 0, !dbg !5941
  br i1 %tobool18, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !5939

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %for.cond, !dbg !5939

if.end.split.us:                                  ; preds = %if.end
  br label %for.cond.us, !dbg !5939

for.cond.us:                                      ; preds = %for.body.us, %if.end.split.us
  call void @llvm.dbg.value(metadata i32* %i, metadata !5920, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5921, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  %call16.us = call fastcc zeroext i8 @bmp_iter_and_compl(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5945
  %tobool17.us = icmp eq i8 %call16.us, 0, !dbg !5939
  br i1 %tobool17.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !5939

for.body.us:                                      ; preds = %for.cond.us
  call void @llvm.dbg.value(metadata i32 undef, metadata !5920, metadata !DIExpression()), !dbg !5926
  %10 = load i32, i32* %i, align 4, !dbg !5941
  call void @llvm.dbg.value(metadata i32 %10, metadata !5920, metadata !DIExpression()), !dbg !5926
  %call21.us = call fastcc %struct.bitmap_head_def* @get_vop_stores(%struct.htab* %call14, i32 %10) #7, !dbg !5946
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call21.us, metadata !5919, metadata !DIExpression()), !dbg !5926
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call21.us, metadata !5919, metadata !DIExpression()), !dbg !5926
  %call23.us = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %call6, %struct.bitmap_head_def* %call21.us) #6, !dbg !5947
  call void @llvm.dbg.value(metadata i32* %i, metadata !5920, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5921, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5945
  br label %for.cond.us, !dbg !5945, !llvm.loop !5948

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !5950

for.cond:                                         ; preds = %for.body, %if.end.if.end.split_crit_edge
  call void @llvm.dbg.value(metadata i32* %i, metadata !5920, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5921, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  %call16 = call fastcc zeroext i8 @bmp_iter_and_compl(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5945
  %tobool17 = icmp eq i8 %call16, 0, !dbg !5939
  br i1 %tobool17, label %for.end.us-lcssa, label %for.body, !dbg !5939

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 undef, metadata !5920, metadata !DIExpression()), !dbg !5926
  %11 = load i32, i32* %i, align 4, !dbg !5941
  call void @llvm.dbg.value(metadata i32 %11, metadata !5920, metadata !DIExpression()), !dbg !5926
  %call20 = call fastcc %struct.bitmap_head_def* @get_vop_accesses(%struct.htab* %call14, i32 %11) #7, !dbg !5952
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call20, metadata !5919, metadata !DIExpression()), !dbg !5926
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call20, metadata !5919, metadata !DIExpression()), !dbg !5926
  %call23 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %call6, %struct.bitmap_head_def* %call20) #6, !dbg !5947
  call void @llvm.dbg.value(metadata i32* %i, metadata !5920, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5921, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5945
  br label %for.cond, !dbg !5945, !llvm.loop !5948

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !5950

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  call void @llvm.dbg.value(metadata i32* %i, metadata !5920, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5921, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call6, i32 0, i32* nonnull %i) #7, !dbg !5950
  br label %for.cond24, !dbg !5950

for.cond24:                                       ; preds = %for.inc39, %for.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !5920, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5921, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  %call25 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5953
  %tobool26 = icmp eq i8 %call25, 0, !dbg !5950
  br i1 %tobool26, label %for.end40.loopexit, label %for.body27, !dbg !5950

for.body27:                                       ; preds = %for.cond24
  %12 = load %struct.VEC_mem_ref_p_heap*, %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), align 8, !dbg !5955
  %base30 = getelementptr inbounds %struct.VEC_mem_ref_p_heap, %struct.VEC_mem_ref_p_heap* %12, i64 0, i32 0, !dbg !5955
  %13 = load i32, i32* %i, align 4, !dbg !5955
  call void @llvm.dbg.value(metadata i32 %13, metadata !5920, metadata !DIExpression()), !dbg !5926
  %call34 = call fastcc %struct.mem_ref* @VEC_mem_ref_p_base_index(%struct.VEC_mem_ref_p_base* %base30, i32 %13) #7, !dbg !5955
  call void @llvm.dbg.value(metadata %struct.mem_ref* %call34, metadata !5925, metadata !DIExpression()), !dbg !5926
  %call35 = call fastcc zeroext i8 @refs_independent_p(%struct.mem_ref* %ref, %struct.mem_ref* %call34) #7, !dbg !5957
  %tobool36 = icmp eq i8 %call35, 0, !dbg !5957
  br i1 %tobool36, label %if.then37, label %for.inc39, !dbg !5959

if.then37:                                        ; preds = %for.body27
  %call34.lcssa = phi %struct.mem_ref* [ %call34, %for.body27 ], !dbg !5955
  call void @llvm.dbg.value(metadata i8 0, metadata !5922, metadata !DIExpression()), !dbg !5926
  call fastcc void @record_indep_loop(%struct.loop* %loop, %struct.mem_ref* %call34.lcssa, i8 zeroext 0) #7, !dbg !5960
  br label %for.end40, !dbg !5962

for.inc39:                                        ; preds = %for.body27
  call void @llvm.dbg.value(metadata i32* %i, metadata !5920, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5921, metadata !DIExpression(DW_OP_deref)), !dbg !5926
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5953
  br label %for.cond24, !dbg !5953, !llvm.loop !5963

for.end40.loopexit:                               ; preds = %for.cond24
  br label %for.end40, !dbg !5965

for.end40:                                        ; preds = %for.end40.loopexit, %if.then37
  %ret.0 = phi i8 [ 0, %if.then37 ], [ 1, %for.end40.loopexit ], !dbg !5926
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !5922, metadata !DIExpression()), !dbg !5926
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call6) #6, !dbg !5965
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5918, metadata !DIExpression()), !dbg !5926
  br label %cleanup, !dbg !5966

cleanup:                                          ; preds = %entry, %for.end40
  %retval.0 = phi i8 [ %ret.0, %for.end40 ], [ 0, %entry ], !dbg !5926
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5967
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5967
  ret i8 %retval.0, !dbg !5967
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_indep_loop(%struct.loop* %loop, %struct.mem_ref* %ref, i8 zeroext %indep) unnamed_addr #5 !dbg !5968 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5972, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !5973, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata i8 %indep, metadata !5974, metadata !DIExpression()), !dbg !5975
  %tobool = icmp eq i8 %indep, 0, !dbg !5976
  br i1 %tobool, label %if.else, label %if.then, !dbg !5978

if.then:                                          ; preds = %entry
  %indep_loop = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 6, !dbg !5979
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %indep_loop, align 8, !dbg !5979
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !5980
  %1 = load i32, i32* %num, align 8, !dbg !5980
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !5981
  br label %if.end, !dbg !5981

if.else:                                          ; preds = %entry
  %dep_loop = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 7, !dbg !5982
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dep_loop, align 8, !dbg !5982
  %num1 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !5983
  %3 = load i32, i32* %num1, align 8, !dbg !5983
  %call2 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !5984
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5985
}

declare dso_local zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.bitmap_head_def* @get_vop_accesses(%struct.htab* %vop_to_refs, i32 %vop) unnamed_addr #5 !dbg !5986 {
entry:
  %vop.addr = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.htab* %vop_to_refs, metadata !5990, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i32 %vop, metadata !5991, metadata !DIExpression()), !dbg !5993
  store i32 %vop, i32* %vop.addr, align 4
  %0 = bitcast i32* %vop.addr to i8*, !dbg !5994
  call void @llvm.dbg.value(metadata i32 %vop, metadata !5991, metadata !DIExpression()), !dbg !5993
  %call = call i8* @htab_find_with_hash(%struct.htab* %vop_to_refs, i8* nonnull %0, i32 %vop) #6, !dbg !5995
  call void @llvm.dbg.value(metadata i8* %call, metadata !5992, metadata !DIExpression()), !dbg !5993
  %refs_all = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5996
  %1 = bitcast i8* %refs_all to %struct.bitmap_head_def**, !dbg !5996
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %1, align 8, !dbg !5996
  ret %struct.bitmap_head_def* %2, !dbg !5997
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.bitmap_head_def* @get_vop_stores(%struct.htab* %vop_to_refs, i32 %vop) unnamed_addr #5 !dbg !5998 {
entry:
  %vop.addr = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.htab* %vop_to_refs, metadata !6000, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata i32 %vop, metadata !6001, metadata !DIExpression()), !dbg !6003
  store i32 %vop, i32* %vop.addr, align 4
  %0 = bitcast i32* %vop.addr to i8*, !dbg !6004
  call void @llvm.dbg.value(metadata i32 %vop, metadata !6001, metadata !DIExpression()), !dbg !6003
  %call = call i8* @htab_find_with_hash(%struct.htab* %vop_to_refs, i8* nonnull %0, i32 %vop) #6, !dbg !6005
  call void @llvm.dbg.value(metadata i8* %call, metadata !6002, metadata !DIExpression()), !dbg !6003
  %refs_stored = getelementptr inbounds i8, i8* %call, i64 16, !dbg !6006
  %1 = bitcast i8* %refs_stored to %struct.bitmap_head_def**, !dbg !6006
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %1, align 8, !dbg !6006
  ret %struct.bitmap_head_def* %2, !dbg !6007
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @refs_independent_p(%struct.mem_ref* %ref1, %struct.mem_ref* %ref2) unnamed_addr #5 !dbg !6008 {
entry:
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref1, metadata !6012, metadata !DIExpression()), !dbg !6014
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref2, metadata !6013, metadata !DIExpression()), !dbg !6014
  %cmp = icmp eq %struct.mem_ref* %ref1, %ref2, !dbg !6015
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !6017

lor.lhs.false:                                    ; preds = %entry
  %indep_ref = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref1, i64 0, i32 8, !dbg !6018
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %indep_ref, align 8, !dbg !6018
  %id = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref2, i64 0, i32 1, !dbg !6019
  %1 = load i32, i32* %id, align 8, !dbg !6019
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !6020
  %tobool = icmp eq i32 %call, 0, !dbg !6020
  br i1 %tobool, label %if.end, label %return, !dbg !6021

if.end:                                           ; preds = %lor.lhs.false
  %dep_ref = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref1, i64 0, i32 9, !dbg !6022
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dep_ref, align 8, !dbg !6022
  %3 = load i32, i32* %id, align 8, !dbg !6024
  %call2 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !6025
  %tobool3 = icmp eq i32 %call2, 0, !dbg !6025
  br i1 %tobool3, label %if.end5, label %return, !dbg !6026

if.end5:                                          ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6027
  %tobool6 = icmp eq %struct._IO_FILE* %4, null, !dbg !6027
  br i1 %tobool6, label %if.end12, label %land.lhs.true, !dbg !6029

land.lhs.true:                                    ; preds = %if.end5
  %5 = load i32, i32* @dump_flags, align 4, !dbg !6030
  %and = and i32 %5, 8, !dbg !6031
  %tobool7 = icmp eq i32 %and, 0, !dbg !6031
  br i1 %tobool7, label %if.end12, label %if.then8, !dbg !6032

if.then8:                                         ; preds = %land.lhs.true
  %id9 = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref1, i64 0, i32 1, !dbg !6033
  %6 = load i32, i32* %id9, align 8, !dbg !6033
  %7 = load i32, i32* %id, align 8, !dbg !6034
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0), i32 %6, i32 %7) #6, !dbg !6035
  br label %if.end12, !dbg !6035

if.end12:                                         ; preds = %land.lhs.true, %if.end5, %if.then8
  %mem = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref1, i64 0, i32 0, !dbg !6036
  %8 = load %union.tree_node*, %union.tree_node** %mem, align 8, !dbg !6036
  %mem13 = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref2, i64 0, i32 0, !dbg !6038
  %9 = load %union.tree_node*, %union.tree_node** %mem13, align 8, !dbg !6038
  %call14 = tail call fastcc zeroext i8 @mem_refs_may_alias_p(%union.tree_node* %8, %union.tree_node* %9, %struct.pointer_map_t** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 6)) #7, !dbg !6039
  %tobool15 = icmp eq i8 %call14, 0, !dbg !6039
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !6040

if.then16:                                        ; preds = %if.end12
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dep_ref, align 8, !dbg !6041
  %11 = load i32, i32* %id, align 8, !dbg !6043
  %call19 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %10, i32 %11) #6, !dbg !6044
  %dep_ref20 = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref2, i64 0, i32 9, !dbg !6045
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dep_ref20, align 8, !dbg !6045
  %id21 = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref1, i64 0, i32 1, !dbg !6046
  %13 = load i32, i32* %id21, align 8, !dbg !6046
  %call22 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %12, i32 %13) #6, !dbg !6047
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6048
  %tobool23 = icmp eq %struct._IO_FILE* %14, null, !dbg !6048
  br i1 %tobool23, label %return, label %land.lhs.true24, !dbg !6050

land.lhs.true24:                                  ; preds = %if.then16
  %15 = load i32, i32* @dump_flags, align 4, !dbg !6051
  %and25 = and i32 %15, 8, !dbg !6052
  %tobool26 = icmp eq i32 %and25, 0, !dbg !6052
  br i1 %tobool26, label %return, label %if.then27, !dbg !6053

if.then27:                                        ; preds = %land.lhs.true24
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !6054
  br label %return, !dbg !6054

if.else:                                          ; preds = %if.end12
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %indep_ref, align 8, !dbg !6055
  %17 = load i32, i32* %id, align 8, !dbg !6057
  %call32 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %16, i32 %17) #6, !dbg !6058
  %indep_ref33 = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref2, i64 0, i32 8, !dbg !6059
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %indep_ref33, align 8, !dbg !6059
  %id34 = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref1, i64 0, i32 1, !dbg !6060
  %19 = load i32, i32* %id34, align 8, !dbg !6060
  %call35 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %18, i32 %19) #6, !dbg !6061
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6062
  %tobool36 = icmp eq %struct._IO_FILE* %20, null, !dbg !6062
  br i1 %tobool36, label %return, label %land.lhs.true37, !dbg !6064

land.lhs.true37:                                  ; preds = %if.else
  %21 = load i32, i32* @dump_flags, align 4, !dbg !6065
  %and38 = and i32 %21, 8, !dbg !6066
  %tobool39 = icmp eq i32 %and38, 0, !dbg !6066
  br i1 %tobool39, label %return, label %if.then40, !dbg !6067

if.then40:                                        ; preds = %land.lhs.true37
  %call41 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !6068
  br label %return, !dbg !6068

return:                                           ; preds = %land.lhs.true24, %if.then16, %land.lhs.true37, %if.else, %if.end, %lor.lhs.false, %if.then40, %if.then27, %entry
  %retval.0 = phi i8 [ 1, %lor.lhs.false ], [ 1, %entry ], [ 0, %if.end ], [ 0, %if.then27 ], [ 0, %land.lhs.true24 ], [ 0, %if.then16 ], [ 1, %if.then40 ], [ 1, %land.lhs.true37 ], [ 1, %if.else ], !dbg !6014
  ret i8 %retval.0, !dbg !6069
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @mem_refs_may_alias_p(%union.tree_node* %mem1, %union.tree_node* %mem2, %struct.pointer_map_t** %ttae_cache) unnamed_addr #5 !dbg !6070 {
entry:
  %size1 = alloca %struct.double_int, align 8
  %size2 = alloca %struct.double_int, align 8
  %off1 = alloca %struct.affine_tree_combination, align 8
  %off2 = alloca %struct.affine_tree_combination, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %mem1, metadata !6075, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata %union.tree_node* %mem2, metadata !6076, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata %struct.pointer_map_t** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 6), metadata !6077, metadata !DIExpression()), !dbg !6098
  %0 = bitcast %struct.double_int* %size1 to i8*, !dbg !6099
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6099
  %1 = bitcast %struct.double_int* %size2 to i8*, !dbg !6099
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6099
  %2 = bitcast %struct.affine_tree_combination* %off1 to i8*, !dbg !6100
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %2) #8, !dbg !6100
  %3 = bitcast %struct.affine_tree_combination* %off2 to i8*, !dbg !6100
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %3) #8, !dbg !6100
  %call = tail call zeroext i8 @refs_may_alias_p(%union.tree_node* %mem1, %union.tree_node* %mem2) #6, !dbg !6101
  %tobool = icmp eq i8 %call, 0, !dbg !6101
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6103

if.end:                                           ; preds = %entry
  %4 = load i32, i32* @optimize, align 4, !dbg !6104
  %cmp = icmp slt i32 %4, 2, !dbg !6106
  br i1 %cmp, label %cleanup, label %if.end2, !dbg !6107

if.end2:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.double_int* %size1, metadata !6078, metadata !DIExpression(DW_OP_deref)), !dbg !6098
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %off1, metadata !6080, metadata !DIExpression(DW_OP_deref)), !dbg !6098
  call void @get_inner_reference_aff(%union.tree_node* %mem1, %struct.affine_tree_combination* nonnull %off1, %struct.double_int* nonnull %size1) #6, !dbg !6108
  call void @llvm.dbg.value(metadata %struct.double_int* %size2, metadata !6079, metadata !DIExpression(DW_OP_deref)), !dbg !6098
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %off2, metadata !6097, metadata !DIExpression(DW_OP_deref)), !dbg !6098
  call void @get_inner_reference_aff(%union.tree_node* %mem2, %struct.affine_tree_combination* nonnull %off2, %struct.double_int* nonnull %size2) #6, !dbg !6109
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %off1, metadata !6080, metadata !DIExpression(DW_OP_deref)), !dbg !6098
  call void @aff_combination_expand(%struct.affine_tree_combination* nonnull %off1, %struct.pointer_map_t** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 6)) #6, !dbg !6110
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %off2, metadata !6097, metadata !DIExpression(DW_OP_deref)), !dbg !6098
  call void @aff_combination_expand(%struct.affine_tree_combination* nonnull %off2, %struct.pointer_map_t** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 6)) #6, !dbg !6111
  %call3 = call fastcc { i64, i64 } @shwi_to_double_int(i64 -1) #7, !dbg !6112
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %off1, metadata !6080, metadata !DIExpression(DW_OP_deref)), !dbg !6098
  call void @aff_combination_scale(%struct.affine_tree_combination* nonnull %off1, i64 -1, i64 -1) #6, !dbg !6113
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %off1, metadata !6080, metadata !DIExpression(DW_OP_deref)), !dbg !6098
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %off2, metadata !6097, metadata !DIExpression(DW_OP_deref)), !dbg !6098
  call void @aff_combination_add(%struct.affine_tree_combination* nonnull %off2, %struct.affine_tree_combination* nonnull %off1) #6, !dbg !6114
  %5 = getelementptr inbounds %struct.double_int, %struct.double_int* %size1, i64 0, i32 0, !dbg !6115
  %6 = load i64, i64* %5, align 8, !dbg !6115
  %7 = getelementptr inbounds %struct.double_int, %struct.double_int* %size1, i64 0, i32 1, !dbg !6115
  %8 = load i64, i64* %7, align 8, !dbg !6115
  %9 = getelementptr inbounds %struct.double_int, %struct.double_int* %size2, i64 0, i32 0, !dbg !6115
  %10 = load i64, i64* %9, align 8, !dbg !6115
  %11 = getelementptr inbounds %struct.double_int, %struct.double_int* %size2, i64 0, i32 1, !dbg !6115
  %12 = load i64, i64* %11, align 8, !dbg !6115
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %off2, metadata !6097, metadata !DIExpression(DW_OP_deref)), !dbg !6098
  %call4 = call fastcc zeroext i8 @cannot_overlap_p(%struct.affine_tree_combination* nonnull %off2, i64 %6, i64 %8, i64 %10, i64 %12) #7, !dbg !6115
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6115
  %. = zext i1 %tobool5 to i8, !dbg !6098
  br label %cleanup, !dbg !6098

cleanup:                                          ; preds = %entry, %if.end2, %if.end
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %if.end ], [ %., %if.end2 ], !dbg !6098
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %3) #8, !dbg !6117
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %2) #8, !dbg !6117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6117
  ret i8 %retval.0, !dbg !6117
}

declare dso_local zeroext i8 @refs_may_alias_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @get_inner_reference_aff(%union.tree_node*, %struct.affine_tree_combination*, %struct.double_int*) local_unnamed_addr #2

declare dso_local void @aff_combination_expand(%struct.affine_tree_combination*, %struct.pointer_map_t**) local_unnamed_addr #2

declare dso_local void @aff_combination_scale(%struct.affine_tree_combination*, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i64, i64 } @shwi_to_double_int(i64 %cst) unnamed_addr #0 !dbg !6118 {
entry:
  call void @llvm.dbg.value(metadata i64 -1, metadata !6122, metadata !DIExpression()), !dbg !6124
  ret { i64, i64 } undef, !dbg !6125
}

declare dso_local void @aff_combination_add(%struct.affine_tree_combination*, %struct.affine_tree_combination*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @cannot_overlap_p(%struct.affine_tree_combination* %diff, i64 %size1.coerce0, i64 %size1.coerce1, i64 %size2.coerce0, i64 %size2.coerce1) unnamed_addr #5 !dbg !6126 {
entry:
  %d = alloca %struct.double_int, align 8
  %bound = alloca %struct.double_int, align 8
  %tmp = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %struct.affine_tree_combination* %diff, metadata !6131, metadata !DIExpression()), !dbg !6136
  %0 = bitcast %struct.double_int* %d to i8*, !dbg !6137
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6137
  %1 = bitcast %struct.double_int* %bound to i8*, !dbg !6137
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6137
  %n = getelementptr inbounds %struct.affine_tree_combination, %struct.affine_tree_combination* %diff, i64 0, i32 2, !dbg !6138
  %2 = load i32, i32* %n, align 8, !dbg !6138
  %cmp = icmp eq i32 %2, 0, !dbg !6140
  br i1 %cmp, label %if.end, label %cleanup, !dbg !6141

if.end:                                           ; preds = %entry
  %offset = getelementptr inbounds %struct.affine_tree_combination, %struct.affine_tree_combination* %diff, i64 0, i32 1, !dbg !6142
  %3 = bitcast %struct.double_int* %offset to i8*, !dbg !6142
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 16, i1 false), !dbg !6142
  %4 = getelementptr inbounds %struct.double_int, %struct.double_int* %d, i64 0, i32 0, !dbg !6143
  %5 = load i64, i64* %4, align 8, !dbg !6143
  %6 = getelementptr inbounds %struct.double_int, %struct.double_int* %d, i64 0, i32 1, !dbg !6143
  %7 = load i64, i64* %6, align 8, !dbg !6143
  %call = tail call zeroext i8 @double_int_negative_p(i64 %5, i64 %7) #6, !dbg !6143
  %tobool = icmp eq i8 %call, 0, !dbg !6143
  br i1 %tobool, label %if.else, label %if.then1, !dbg !6145

if.then1:                                         ; preds = %if.end
  %8 = bitcast %struct.double_int* %tmp to i8*, !dbg !6146
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !6146
  %call3 = tail call fastcc { i64, i64 } @shwi_to_double_int(i64 -1) #7, !dbg !6148
  %call4 = tail call { i64, i64 } @double_int_add(i64 %size2.coerce0, i64 %size2.coerce1, i64 -1, i64 -1) #6, !dbg !6149
  %9 = extractvalue { i64, i64 } %call4, 0, !dbg !6149
  %10 = extractvalue { i64, i64 } %call4, 1, !dbg !6149
  %call5 = tail call { i64, i64 } @double_int_add(i64 %5, i64 %7, i64 %9, i64 %10) #6, !dbg !6146
  %11 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 0, !dbg !6146
  %12 = extractvalue { i64, i64 } %call5, 0, !dbg !6146
  store i64 %12, i64* %11, align 8, !dbg !6146
  %13 = getelementptr inbounds %struct.double_int, %struct.double_int* %tmp, i64 0, i32 1, !dbg !6146
  %14 = extractvalue { i64, i64 } %call5, 1, !dbg !6146
  store i64 %14, i64* %13, align 8, !dbg !6146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !6146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !6146
  %15 = getelementptr inbounds %struct.double_int, %struct.double_int* %bound, i64 0, i32 0, !dbg !6150
  %16 = load i64, i64* %15, align 8, !dbg !6150
  %17 = getelementptr inbounds %struct.double_int, %struct.double_int* %bound, i64 0, i32 1, !dbg !6150
  %18 = load i64, i64* %17, align 8, !dbg !6150
  %call6 = tail call zeroext i8 @double_int_negative_p(i64 %16, i64 %18) #6, !dbg !6150
  br label %cleanup, !dbg !6151

if.else:                                          ; preds = %if.end
  %call7 = tail call i32 @double_int_scmp(i64 %size1.coerce0, i64 %size1.coerce1, i64 %5, i64 %7) #6, !dbg !6152
  %cmp8 = icmp slt i32 %call7, 1, !dbg !6154
  %conv9 = zext i1 %cmp8 to i8, !dbg !6152
  br label %cleanup, !dbg !6155

cleanup:                                          ; preds = %entry, %if.else, %if.then1
  %retval.0 = phi i8 [ %call6, %if.then1 ], [ %conv9, %if.else ], [ 0, %entry ], !dbg !6136
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6156
  ret i8 %retval.0, !dbg !6156
}

declare dso_local zeroext i8 @double_int_negative_p(i64, i64) local_unnamed_addr #2

declare dso_local { i64, i64 } @double_int_add(i64, i64, i64, i64) local_unnamed_addr #2

declare dso_local i32 @double_int_scmp(i64, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_references_memory_p(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6157 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6159, metadata !DIExpression()), !dbg !6160
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #7, !dbg !6161
  %tobool = icmp eq i8 %call, 0, !dbg !6161
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6162

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !6163
  %tobool2 = icmp ne %union.tree_node* %call1, null, !dbg !6162
  %phitmp = zext i1 %tobool2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6164
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6165 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6167, metadata !DIExpression()), !dbg !6169
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !6170
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6168, metadata !DIExpression()), !dbg !6169
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6171
  %bf.load = load i64, i64* %0, align 8, !dbg !6171
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6173
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !6173
  br i1 %cmp, label %if.then, label %cleanup, !dbg !6174

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6175
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6175
  br label %cleanup, !dbg !6176

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !6169
  ret %union.tree_node* %retval.0, !dbg !6177
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6178 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6180, metadata !DIExpression()), !dbg !6181
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !6182
  ret %union.tree_node* %call, !dbg !6183
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_level(%union.gimple_statement_d* %stmt, %struct.loop* %orig_loop, %struct.loop* %level) unnamed_addr #5 !dbg !6184 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6188, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata %struct.loop* %orig_loop, metadata !6189, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata %struct.loop* %level, metadata !6190, metadata !DIExpression()), !dbg !6194
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !6195
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !6196
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !6196
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !6191, metadata !DIExpression()), !dbg !6194
  %call1 = tail call %struct.loop* @find_common_loop(%struct.loop* %orig_loop, %struct.loop* %0) #6, !dbg !6197
  call void @llvm.dbg.value(metadata %struct.loop* %call1, metadata !6191, metadata !DIExpression()), !dbg !6194
  %call2 = tail call fastcc %struct.lim_aux_data* @get_lim_data(%union.gimple_statement_d* %stmt) #7, !dbg !6198
  call void @llvm.dbg.value(metadata %struct.lim_aux_data* %call2, metadata !6193, metadata !DIExpression()), !dbg !6194
  %cmp = icmp eq %struct.lim_aux_data* %call2, null, !dbg !6199
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !6201

land.lhs.true:                                    ; preds = %entry
  %tgt_loop = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call2, i64 0, i32 1, !dbg !6202
  %1 = load %struct.loop*, %struct.loop** %tgt_loop, align 8, !dbg !6202
  %cmp3 = icmp eq %struct.loop* %1, null, !dbg !6203
  br i1 %cmp3, label %if.end, label %if.then, !dbg !6204

if.then:                                          ; preds = %land.lhs.true
  %call5 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* nonnull %1) #7, !dbg !6205
  %call6 = tail call %struct.loop* @find_common_loop(%struct.loop* %call1, %struct.loop* %call5) #6, !dbg !6206
  call void @llvm.dbg.value(metadata %struct.loop* %call6, metadata !6191, metadata !DIExpression()), !dbg !6194
  br label %if.end, !dbg !6207

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %stmt_loop.0 = phi %struct.loop* [ %call6, %if.then ], [ %call1, %land.lhs.true ], [ %call1, %entry ], !dbg !6194
  call void @llvm.dbg.value(metadata %struct.loop* %stmt_loop.0, metadata !6191, metadata !DIExpression()), !dbg !6194
  %call7 = tail call zeroext i8 @flow_loop_nested_p(%struct.loop* %stmt_loop.0, %struct.loop* %level) #6, !dbg !6208
  %tobool = icmp eq i8 %call7, 0, !dbg !6208
  br i1 %tobool, label %if.end9, label %cleanup.cont, !dbg !6210

if.end9:                                          ; preds = %if.end
  %max_loop = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call2, i64 0, i32 0, !dbg !6211
  %2 = load %struct.loop*, %struct.loop** %max_loop, align 8, !dbg !6211
  %cmp10 = icmp eq %struct.loop* %2, %level, !dbg !6211
  br i1 %cmp10, label %cond.end, label %lor.lhs.false, !dbg !6211

lor.lhs.false:                                    ; preds = %if.end9
  %call12 = tail call zeroext i8 @flow_loop_nested_p(%struct.loop* %2, %struct.loop* %level) #6, !dbg !6211
  %tobool13 = icmp eq i8 %call12, 0, !dbg !6211
  br i1 %tobool13, label %cond.true, label %cond.end, !dbg !6211

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i32 731, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6211
  br label %cond.end, !dbg !6211

cond.end:                                         ; preds = %lor.lhs.false, %if.end9, %cond.true
  %tgt_loop14 = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call2, i64 0, i32 1, !dbg !6212
  store %struct.loop* %level, %struct.loop** %tgt_loop14, align 8, !dbg !6213
  %depends = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call2, i64 0, i32 4, !dbg !6214
  br label %for.cond, !dbg !6216

for.cond:                                         ; preds = %for.body, %cond.end
  %dep.0.in = phi %struct.depend** [ %depends, %cond.end ], [ %next, %for.body ]
  %dep.0 = load %struct.depend*, %struct.depend** %dep.0.in, align 8, !dbg !6217
  call void @llvm.dbg.value(metadata %struct.depend* %dep.0, metadata !6192, metadata !DIExpression()), !dbg !6194
  %tobool15 = icmp eq %struct.depend* %dep.0, null, !dbg !6218
  br i1 %tobool15, label %cleanup.cont.loopexit, label %for.body, !dbg !6218

for.body:                                         ; preds = %for.cond
  %stmt16 = getelementptr inbounds %struct.depend, %struct.depend* %dep.0, i64 0, i32 0, !dbg !6219
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt16, align 8, !dbg !6219
  tail call fastcc void @set_level(%union.gimple_statement_d* %3, %struct.loop* %orig_loop, %struct.loop* %level) #7, !dbg !6221
  %next = getelementptr inbounds %struct.depend, %struct.depend* %dep.0, i64 0, i32 1, !dbg !6222
  br label %for.cond, !dbg !6223, !llvm.loop !6224

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !6226

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end
  ret void, !dbg !6226
}

; Function Attrs: nounwind uwtable
define internal fastcc void @store_motion_loop(%struct.loop* %loop, %struct.bitmap_head_def* %sm_executed) unnamed_addr #5 !dbg !6227 {
entry:
  %exits = alloca %struct.VEC_edge_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6231, metadata !DIExpression()), !dbg !6241
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %sm_executed, metadata !6232, metadata !DIExpression()), !dbg !6241
  %0 = bitcast %struct.VEC_edge_heap** %exits to i8*, !dbg !6242
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6242
  %call = tail call %struct.VEC_edge_heap* @get_loop_exit_edges(%struct.loop* %loop) #6, !dbg !6243
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call, metadata !6233, metadata !DIExpression()), !dbg !6241
  store %struct.VEC_edge_heap* %call, %struct.VEC_edge_heap** %exits, align 8, !dbg !6244
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !6245
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !6240, metadata !DIExpression()), !dbg !6241
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call, metadata !6233, metadata !DIExpression()), !dbg !6241
  %call2 = tail call fastcc zeroext i8 @loop_suitable_for_sm(%struct.loop* %loop, %struct.VEC_edge_heap* %call) #7, !dbg !6246
  %tobool = icmp eq i8 %call2, 0, !dbg !6246
  br i1 %tobool, label %if.end, label %if.then, !dbg !6248

if.then:                                          ; preds = %entry
  tail call fastcc void @find_refs_for_sm(%struct.loop* %loop, %struct.bitmap_head_def* %sm_executed, %struct.bitmap_head_def* %call1) #7, !dbg !6249
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call, metadata !6233, metadata !DIExpression()), !dbg !6241
  tail call fastcc void @hoist_memory_references(%struct.loop* %loop, %struct.bitmap_head_def* %call1, %struct.VEC_edge_heap* %call) #7, !dbg !6251
  br label %if.end, !dbg !6252

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %exits, metadata !6233, metadata !DIExpression(DW_OP_deref)), !dbg !6241
  call fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** nonnull %exits) #7, !dbg !6253
  %call3 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %sm_executed, %struct.bitmap_head_def* %call1) #6, !dbg !6254
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !6255
  br label %for.cond, !dbg !6257

for.cond:                                         ; preds = %for.body, %if.end
  %subloop.0.in = phi %struct.loop** [ %inner, %if.end ], [ %next, %for.body ]
  %subloop.0 = load %struct.loop*, %struct.loop** %subloop.0.in, align 8, !dbg !6258
  call void @llvm.dbg.value(metadata %struct.loop* %subloop.0, metadata !6239, metadata !DIExpression()), !dbg !6241
  %cmp = icmp eq %struct.loop* %subloop.0, null, !dbg !6259
  br i1 %cmp, label %for.end, label %for.body, !dbg !6261

for.body:                                         ; preds = %for.cond
  call fastcc void @store_motion_loop(%struct.loop* nonnull %subloop.0, %struct.bitmap_head_def* %sm_executed) #7, !dbg !6262
  %next = getelementptr inbounds %struct.loop, %struct.loop* %subloop.0, i64 0, i32 9, !dbg !6263
  br label %for.cond, !dbg !6264, !llvm.loop !6265

for.end:                                          ; preds = %for.cond
  %call4 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %sm_executed, %struct.bitmap_head_def* %call1) #6, !dbg !6267
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call1) #6, !dbg !6268
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !6240, metadata !DIExpression()), !dbg !6241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6269
  ret void, !dbg !6269
}

declare dso_local void @gsi_commit_edge_inserts() local_unnamed_addr #2

declare dso_local %struct.VEC_edge_heap* @get_loop_exit_edges(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @loop_suitable_for_sm(%struct.loop* %loop, %struct.VEC_edge_heap* %exits) unnamed_addr #5 !dbg !6270 {
entry:
  %ex = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6274, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %exits, metadata !6275, metadata !DIExpression()), !dbg !6278
  %0 = bitcast %struct.edge_def** %ex to i8*, !dbg !6279
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6279
  call void @llvm.dbg.value(metadata i32 0, metadata !6276, metadata !DIExpression()), !dbg !6278
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %exits, i64 0, i32 0, !dbg !6280
  br label %for.cond, !dbg !6283

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6284
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6276, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata %struct.edge_def** %ex, metadata !6277, metadata !DIExpression(DW_OP_deref)), !dbg !6278
  %call = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base, i32 %i.0, %struct.edge_def** nonnull %ex) #7, !dbg !6285
  %tobool1 = icmp eq i32 %call, 0, !dbg !6286
  br i1 %tobool1, label %cleanup, label %for.body, !dbg !6286

for.body:                                         ; preds = %for.cond
  %1 = load %struct.edge_def*, %struct.edge_def** %ex, align 8, !dbg !6287
  call void @llvm.dbg.value(metadata %struct.edge_def* %1, metadata !6277, metadata !DIExpression()), !dbg !6278
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %1, i64 0, i32 7, !dbg !6289
  %2 = load i32, i32* %flags, align 8, !dbg !6289
  %and = and i32 %2, 2, !dbg !6290
  %tobool2 = icmp eq i32 %and, 0, !dbg !6290
  br i1 %tobool2, label %for.inc, label %cleanup, !dbg !6291

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !6292
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6276, metadata !DIExpression()), !dbg !6278
  br label %for.cond, !dbg !6293, !llvm.loop !6294

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !6278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6296
  ret i8 %retval.0, !dbg !6296
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_refs_for_sm(%struct.loop* %loop, %struct.bitmap_head_def* %sm_executed, %struct.bitmap_head_def* %refs_to_sm) unnamed_addr #5 !dbg !6297 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6301, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %sm_executed, metadata !6302, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %refs_to_sm, metadata !6303, metadata !DIExpression()), !dbg !6308
  %0 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 3), align 8, !dbg !6309
  %base = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %0, i64 0, i32 0, !dbg !6309
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !6309
  %1 = load i32, i32* %num, align 8, !dbg !6309
  %call = tail call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base, i32 %1) #7, !dbg !6309
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !6304, metadata !DIExpression()), !dbg !6308
  %2 = bitcast i32* %i to i8*, !dbg !6310
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !6310
  %3 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6311
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8, !dbg !6311
  call void @llvm.dbg.value(metadata i32* %i, metadata !6305, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6306, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  call fastcc void @bmp_iter_and_compl_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call, %struct.bitmap_head_def* %sm_executed, i32 0, i32* nonnull %i) #7, !dbg !6312
  br label %for.cond, !dbg !6312

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !6305, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6306, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  %call1 = call fastcc zeroext i8 @bmp_iter_and_compl(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6314
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6312
  br i1 %tobool2, label %for.end, label %for.body, !dbg !6312

for.body:                                         ; preds = %for.cond
  %4 = load %struct.VEC_mem_ref_p_heap*, %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), align 8, !dbg !6316
  %base5 = getelementptr inbounds %struct.VEC_mem_ref_p_heap, %struct.VEC_mem_ref_p_heap* %4, i64 0, i32 0, !dbg !6316
  %5 = load i32, i32* %i, align 4, !dbg !6316
  call void @llvm.dbg.value(metadata i32 %5, metadata !6305, metadata !DIExpression()), !dbg !6308
  %call9 = call fastcc %struct.mem_ref* @VEC_mem_ref_p_base_index(%struct.VEC_mem_ref_p_base* %base5, i32 %5) #7, !dbg !6316
  call void @llvm.dbg.value(metadata %struct.mem_ref* %call9, metadata !6307, metadata !DIExpression()), !dbg !6308
  %call10 = call fastcc zeroext i8 @can_sm_ref_p(%struct.loop* %loop, %struct.mem_ref* %call9) #7, !dbg !6318
  %tobool11 = icmp eq i8 %call10, 0, !dbg !6318
  br i1 %tobool11, label %for.inc, label %if.then, !dbg !6320

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !6321
  call void @llvm.dbg.value(metadata i32 %6, metadata !6305, metadata !DIExpression()), !dbg !6308
  %call12 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %refs_to_sm, i32 %6) #6, !dbg !6322
  br label %for.inc, !dbg !6322

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata i32* %i, metadata !6305, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6306, metadata !DIExpression(DW_OP_deref)), !dbg !6308
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6314
  br label %for.cond, !dbg !6314, !llvm.loop !6323

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8, !dbg !6325
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !6325
  ret void, !dbg !6325
}

; Function Attrs: nounwind uwtable
define internal fastcc void @hoist_memory_references(%struct.loop* %loop, %struct.bitmap_head_def* %mem_refs, %struct.VEC_edge_heap* %exits) unnamed_addr #5 !dbg !6326 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6330, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %mem_refs, metadata !6331, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %exits, metadata !6332, metadata !DIExpression()), !dbg !6336
  %0 = bitcast i32* %i to i8*, !dbg !6337
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6337
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6338
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6338
  call void @llvm.dbg.value(metadata i32* %i, metadata !6334, metadata !DIExpression(DW_OP_deref)), !dbg !6336
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6335, metadata !DIExpression(DW_OP_deref)), !dbg !6336
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %mem_refs, i32 0, i32* nonnull %i) #7, !dbg !6339
  br label %for.cond, !dbg !6339

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !6334, metadata !DIExpression(DW_OP_deref)), !dbg !6336
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6335, metadata !DIExpression(DW_OP_deref)), !dbg !6336
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6341
  %tobool = icmp eq i8 %call, 0, !dbg !6339
  br i1 %tobool, label %for.end, label %for.body, !dbg !6339

for.body:                                         ; preds = %for.cond
  %2 = load %struct.VEC_mem_ref_p_heap*, %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), align 8, !dbg !6343
  %base = getelementptr inbounds %struct.VEC_mem_ref_p_heap, %struct.VEC_mem_ref_p_heap* %2, i64 0, i32 0, !dbg !6343
  %3 = load i32, i32* %i, align 4, !dbg !6343
  call void @llvm.dbg.value(metadata i32 %3, metadata !6334, metadata !DIExpression()), !dbg !6336
  %call2 = call fastcc %struct.mem_ref* @VEC_mem_ref_p_base_index(%struct.VEC_mem_ref_p_base* %base, i32 %3) #7, !dbg !6343
  call void @llvm.dbg.value(metadata %struct.mem_ref* %call2, metadata !6333, metadata !DIExpression()), !dbg !6336
  call fastcc void @execute_sm(%struct.loop* %loop, %struct.VEC_edge_heap* %exits, %struct.mem_ref* %call2) #7, !dbg !6345
  call void @llvm.dbg.value(metadata i32* %i, metadata !6334, metadata !DIExpression(DW_OP_deref)), !dbg !6336
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6335, metadata !DIExpression(DW_OP_deref)), !dbg !6336
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6341
  br label %for.cond, !dbg !6341, !llvm.loop !6346

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6348
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6348
  ret void, !dbg !6348
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** %vec_) unnamed_addr #0 !dbg !6349 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %vec_, metadata !6354, metadata !DIExpression()), !dbg !6355
  %0 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %vec_, align 8, !dbg !6356
  %tobool = icmp eq %struct.VEC_edge_heap* %0, null, !dbg !6356
  br i1 %tobool, label %if.end, label %if.then, !dbg !6358

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_edge_heap* %0 to i8*, !dbg !6358
  tail call void @free(i8* nonnull %1) #6, !dbg !6356
  br label %if.end, !dbg !6356

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %vec_, align 8, !dbg !6358
  ret void, !dbg !6358
}

declare dso_local zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %vec_, i32 %ix_, %struct.edge_def** %ptr) unnamed_addr #0 !dbg !6359 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6363, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6364, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.value(metadata %struct.edge_def** %ptr, metadata !6365, metadata !DIExpression()), !dbg !6366
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6367
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6367

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6367
  %0 = load i32, i32* %num, align 8, !dbg !6367
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6367
  br i1 %cmp, label %if.then, label %if.else, !dbg !6369

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6370
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6370
  %1 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6370
  br label %return, !dbg !6370

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6372

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ null, %if.else ], [ %1, %if.then ], !dbg !6374
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6374
  store %struct.edge_def* %storemerge, %struct.edge_def** %ptr, align 8, !dbg !6374
  ret i32 %retval.0, !dbg !6369
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @can_sm_ref_p(%struct.loop* %loop, %struct.mem_ref* %ref) unnamed_addr #5 !dbg !6375 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6377, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !6378, metadata !DIExpression()), !dbg !6380
  %stored = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 3, !dbg !6381
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %stored, align 8, !dbg !6381
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !6383
  %1 = load i32, i32* %num, align 8, !dbg !6383
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !6384
  %tobool = icmp eq i32 %call, 0, !dbg !6384
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6385

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.mem_ref* %ref to %struct.tree_common**, !dbg !6386
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !6386
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !6386
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6386
  %call1 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %4) #6, !dbg !6388
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6388
  br i1 %tobool2, label %cleanup, label %lor.lhs.false, !dbg !6389

lor.lhs.false:                                    ; preds = %if.end
  %5 = bitcast %struct.mem_ref* %ref to i64**, !dbg !6390
  %6 = load i64*, i64** %5, align 8, !dbg !6390
  %bf.load = load i64, i64* %6, align 8, !dbg !6390
  %bf.cast1 = and i64 %bf.load, 524288, !dbg !6390
  %tobool5 = icmp eq i64 %bf.cast1, 0, !dbg !6390
  br i1 %tobool5, label %lor.lhs.false6, label %cleanup, !dbg !6391

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %mem7 = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 0, !dbg !6392
  %7 = bitcast %struct.loop* %loop to i8*, !dbg !6393
  %call8 = tail call zeroext i8 @for_each_index(%union.tree_node** %mem7, i8 (%union.tree_node*, %union.tree_node**, i8*)* nonnull @may_move_till, i8* %7) #7, !dbg !6394
  %tobool9 = icmp eq i8 %call8, 0, !dbg !6394
  br i1 %tobool9, label %cleanup, label %if.end11, !dbg !6395

if.end11:                                         ; preds = %lor.lhs.false6
  %8 = load %union.tree_node*, %union.tree_node** %mem7, align 8, !dbg !6396
  %call13 = tail call %union.tree_node* @get_base_address(%union.tree_node* %8) #6, !dbg !6397
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !6379, metadata !DIExpression()), !dbg !6380
  %9 = load %union.tree_node*, %union.tree_node** %mem7, align 8, !dbg !6398
  %call15 = tail call zeroext i8 @tree_could_trap_p(%union.tree_node* %9) #6, !dbg !6400
  %tobool16 = icmp eq i8 %call15, 0, !dbg !6400
  br i1 %tobool16, label %lor.lhs.false17, label %land.lhs.true29, !dbg !6401

lor.lhs.false17:                                  ; preds = %if.end11
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6402
  %bf.load19 = load i64, i64* %10, align 8, !dbg !6402
  %bf.cast21 = and i64 %bf.load19, 65535, !dbg !6402
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast21, !dbg !6402
  %11 = load i32, i32* %arrayidx, align 4, !dbg !6402
  %cmp = icmp eq i32 %11, 3, !dbg !6402
  br i1 %cmp, label %land.lhs.true, label %if.end33, !dbg !6403

land.lhs.true:                                    ; preds = %lor.lhs.false17
  %bf.cast272 = and i64 %bf.load19, 1048576, !dbg !6404
  %tobool28 = icmp eq i64 %bf.cast272, 0, !dbg !6404
  br i1 %tobool28, label %if.end33, label %land.lhs.true29, !dbg !6405

land.lhs.true29:                                  ; preds = %land.lhs.true, %if.end11
  %call30 = tail call fastcc zeroext i8 @ref_always_accessed_p(%struct.loop* %loop, %struct.mem_ref* %ref, i8 zeroext 1) #7, !dbg !6406
  %tobool31 = icmp eq i8 %call30, 0, !dbg !6406
  br i1 %tobool31, label %cleanup, label %if.end33, !dbg !6407

if.end33:                                         ; preds = %land.lhs.true29, %land.lhs.true, %lor.lhs.false17
  %call34 = tail call fastcc zeroext i8 @ref_indep_loop_p(%struct.loop* %loop, %struct.mem_ref* %ref) #7, !dbg !6408
  %tobool35 = icmp ne i8 %call34, 0, !dbg !6408
  %. = zext i1 %tobool35 to i8, !dbg !6380
  br label %cleanup, !dbg !6380

cleanup:                                          ; preds = %land.lhs.true29, %lor.lhs.false6, %lor.lhs.false, %if.end, %entry, %if.end33
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %lor.lhs.false6 ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %land.lhs.true29 ], [ %., %if.end33 ], !dbg !6380
  ret i8 %retval.0, !dbg !6410
}

declare dso_local zeroext i8 @is_gimple_reg_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @may_move_till(%union.tree_node* %ref, %union.tree_node** %index, i8* %data) #5 !dbg !6411 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !6413, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.value(metadata %union.tree_node** %index, metadata !6414, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.value(metadata i8* %data, metadata !6415, metadata !DIExpression()), !dbg !6422
  %0 = bitcast i8* %data to %struct.loop*, !dbg !6423
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !6416, metadata !DIExpression()), !dbg !6422
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6424
  %bf.load = load i64, i64* %1, align 8, !dbg !6424
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6425
  %cmp = icmp eq i64 %bf.cast2, 45, !dbg !6425
  br i1 %cmp, label %if.then, label %if.end10, !dbg !6426

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6427
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !6427
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6427
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6418, metadata !DIExpression()), !dbg !6428
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !6429
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6429
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6421, metadata !DIExpression()), !dbg !6428
  %call = tail call fastcc %struct.loop* @outermost_invariant_loop(%union.tree_node* %2, %struct.loop* %0) #7, !dbg !6430
  call void @llvm.dbg.value(metadata %struct.loop* %call, metadata !6417, metadata !DIExpression()), !dbg !6422
  %tobool = icmp eq %struct.loop* %call, null, !dbg !6431
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6433

if.end:                                           ; preds = %if.then
  %call5 = tail call fastcc %struct.loop* @outermost_invariant_loop(%union.tree_node* %3, %struct.loop* %0) #7, !dbg !6434
  call void @llvm.dbg.value(metadata %struct.loop* %call5, metadata !6417, metadata !DIExpression()), !dbg !6422
  %tobool6 = icmp ne %struct.loop* %call5, null, !dbg !6435
  br label %cleanup, !dbg !6437

cleanup:                                          ; preds = %if.then, %if.end
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ %tobool6, %if.end ]
  br i1 %cleanup.dest.slot.0, label %if.end10, label %cleanup15

if.end10:                                         ; preds = %cleanup, %entry
  %4 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !6438
  %call11 = tail call fastcc %struct.loop* @outermost_invariant_loop(%union.tree_node* %4, %struct.loop* %0) #7, !dbg !6439
  call void @llvm.dbg.value(metadata %struct.loop* %call11, metadata !6417, metadata !DIExpression()), !dbg !6422
  %tobool12 = icmp ne %struct.loop* %call11, null, !dbg !6440
  %.1 = zext i1 %tobool12 to i8, !dbg !6422
  br label %cleanup15, !dbg !6422

cleanup15:                                        ; preds = %if.end10, %cleanup
  %retval.1 = phi i8 [ 0, %cleanup ], [ %.1, %if.end10 ]
  ret i8 %retval.1, !dbg !6442
}

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @tree_could_trap_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ref_always_accessed_p(%struct.loop* %loop, %struct.mem_ref* %ref, i8 zeroext %stored_p) unnamed_addr #5 !dbg !6443 {
entry:
  %locs = alloca %struct.VEC_mem_ref_loc_p_heap*, align 8
  %loc = alloca %struct.mem_ref_loc*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6447, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !6448, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata i8 1, metadata !6449, metadata !DIExpression()), !dbg !6462
  %0 = bitcast %struct.VEC_mem_ref_loc_p_heap** %locs to i8*, !dbg !6463
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6463
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap* null, metadata !6450, metadata !DIExpression()), !dbg !6462
  store %struct.VEC_mem_ref_loc_p_heap* null, %struct.VEC_mem_ref_loc_p_heap** %locs, align 8, !dbg !6464
  %1 = bitcast %struct.mem_ref_loc** %loc to i8*, !dbg !6465
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6465
  call void @llvm.dbg.value(metadata i8 0, metadata !6453, metadata !DIExpression()), !dbg !6462
  %mem = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 0, !dbg !6466
  %2 = load %union.tree_node*, %union.tree_node** %mem, align 8, !dbg !6466
  %call = tail call %union.tree_node* @get_base_address(%union.tree_node* %2) #6, !dbg !6467
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6455, metadata !DIExpression()), !dbg !6462
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6468
  %bf.load = load i64, i64* %3, align 8, !dbg !6468
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6468
  %cmp = icmp eq i64 %bf.cast1, 47, !dbg !6468
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6468

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 48, !dbg !6468
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !6468

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i64 %bf.cast1, 49, !dbg !6468
  br i1 %cmp12, label %if.then, label %if.end, !dbg !6470

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6471
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6471
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6455, metadata !DIExpression()), !dbg !6462
  br label %if.end, !dbg !6472

if.end:                                           ; preds = %if.then, %lor.lhs.false7
  %base.0 = phi %union.tree_node* [ %4, %if.then ], [ %call, %lor.lhs.false7 ], !dbg !6462
  call void @llvm.dbg.value(metadata %union.tree_node* %base.0, metadata !6455, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap** %locs, metadata !6450, metadata !DIExpression(DW_OP_deref)), !dbg !6462
  call fastcc void @get_all_locs_in_loop(%struct.loop* %loop, %struct.mem_ref* %ref, %struct.VEC_mem_ref_loc_p_heap** nonnull %locs) #7, !dbg !6473
  call void @llvm.dbg.value(metadata i32 0, metadata !6451, metadata !DIExpression()), !dbg !6462
  br label %for.cond, !dbg !6474

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ], !dbg !6475
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6451, metadata !DIExpression()), !dbg !6462
  %5 = load %struct.VEC_mem_ref_loc_p_heap*, %struct.VEC_mem_ref_loc_p_heap** %locs, align 8, !dbg !6476
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap* %5, metadata !6450, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap* %5, metadata !6450, metadata !DIExpression()), !dbg !6462
  %base13 = getelementptr inbounds %struct.VEC_mem_ref_loc_p_heap, %struct.VEC_mem_ref_loc_p_heap* %5, i64 0, i32 0, !dbg !6476
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc** %loc, metadata !6452, metadata !DIExpression(DW_OP_deref)), !dbg !6462
  %call14 = call fastcc i32 @VEC_mem_ref_loc_p_base_iterate(%struct.VEC_mem_ref_loc_p_base* %base13, i32 %i.0, %struct.mem_ref_loc** nonnull %loc) #7, !dbg !6476
  %tobool15 = icmp eq i32 %call14, 0, !dbg !6477
  br i1 %tobool15, label %for.end.us-lcssa, label %for.body, !dbg !6477

for.body:                                         ; preds = %for.cond
  %6 = load %struct.mem_ref_loc*, %struct.mem_ref_loc** %loc, align 8, !dbg !6478
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc* %6, metadata !6452, metadata !DIExpression()), !dbg !6462
  %stmt = getelementptr inbounds %struct.mem_ref_loc, %struct.mem_ref_loc* %6, i64 0, i32 1, !dbg !6480
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6480
  %call16 = call fastcc %struct.lim_aux_data* @get_lim_data(%union.gimple_statement_d* %7) #7, !dbg !6481
  %tobool17 = icmp eq %struct.lim_aux_data* %call16, null, !dbg !6481
  br i1 %tobool17, label %for.inc, label %if.end19, !dbg !6482

if.end19:                                         ; preds = %for.body
  %8 = load %struct.mem_ref_loc*, %struct.mem_ref_loc** %loc, align 8, !dbg !6483
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc* %8, metadata !6452, metadata !DIExpression()), !dbg !6462
  %stmt22 = getelementptr inbounds %struct.mem_ref_loc, %struct.mem_ref_loc* %8, i64 0, i32 1, !dbg !6485
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt22, align 8, !dbg !6485
  %call23 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %9) #6, !dbg !6486
  %tobool24 = icmp eq %union.tree_node* %call23, null, !dbg !6486
  br i1 %tobool24, label %cleanup, label %if.end26, !dbg !6487

if.end26:                                         ; preds = %if.end19
  %10 = load %struct.mem_ref_loc*, %struct.mem_ref_loc** %loc, align 8, !dbg !6488
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc* %10, metadata !6452, metadata !DIExpression()), !dbg !6462
  %stmt27 = getelementptr inbounds %struct.mem_ref_loc, %struct.mem_ref_loc* %10, i64 0, i32 1, !dbg !6489
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt27, align 8, !dbg !6489
  %call28 = call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %11) #6, !dbg !6490
  %call29 = call %union.tree_node* @get_base_address(%union.tree_node* %call28) #6, !dbg !6491
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !6456, metadata !DIExpression()), !dbg !6492
  %tobool30 = icmp eq %union.tree_node* %call29, null, !dbg !6493
  br i1 %tobool30, label %cleanup, label %if.end32, !dbg !6495

if.end32:                                         ; preds = %if.end26
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6496
  %bf.load34 = load i64, i64* %12, align 8, !dbg !6496
  %bf.cast364 = and i64 %bf.load34, 65535, !dbg !6496
  %cmp37 = icmp eq i64 %bf.cast364, 47, !dbg !6496
  br i1 %cmp37, label %if.then50, label %lor.lhs.false38, !dbg !6496

lor.lhs.false38:                                  ; preds = %if.end32
  %cmp43 = icmp eq i64 %bf.cast364, 48, !dbg !6496
  br i1 %cmp43, label %if.then50, label %lor.lhs.false44, !dbg !6496

lor.lhs.false44:                                  ; preds = %lor.lhs.false38
  %cmp49 = icmp eq i64 %bf.cast364, 49, !dbg !6496
  br i1 %cmp49, label %if.then50, label %if.end54, !dbg !6498

if.then50:                                        ; preds = %lor.lhs.false44, %lor.lhs.false38, %if.end32
  %operands52 = getelementptr inbounds %union.tree_node, %union.tree_node* %call29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6499
  %13 = load %union.tree_node*, %union.tree_node** %operands52, align 8, !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !6456, metadata !DIExpression()), !dbg !6492
  br label %if.end54, !dbg !6500

if.end54:                                         ; preds = %if.then50, %lor.lhs.false44
  %lhs.0 = phi %union.tree_node* [ %13, %if.then50 ], [ %call29, %lor.lhs.false44 ], !dbg !6492
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.0, metadata !6456, metadata !DIExpression()), !dbg !6492
  %cmp55 = icmp eq %union.tree_node* %lhs.0, %base.0, !dbg !6501
  %. = select i1 %cmp55, i32 0, i32 4, !dbg !6503
  br label %cleanup, !dbg !6503

cleanup:                                          ; preds = %if.end26, %if.end19, %if.end54
  %cleanup.dest.slot.0 = phi i32 [ 4, %if.end19 ], [ 4, %if.end26 ], [ %., %if.end54 ]
  %switch = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %switch, label %if.end58, label %for.inc

if.end58:                                         ; preds = %cleanup
  %14 = load %struct.mem_ref_loc*, %struct.mem_ref_loc** %loc, align 8, !dbg !6504
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc* %14, metadata !6452, metadata !DIExpression()), !dbg !6462
  %stmt59 = getelementptr inbounds %struct.mem_ref_loc, %struct.mem_ref_loc* %14, i64 0, i32 1, !dbg !6505
  %15 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt59, align 8, !dbg !6505
  %call60 = call fastcc %struct.lim_aux_data* @get_lim_data(%union.gimple_statement_d* %15) #7, !dbg !6506
  %always_executed_in = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call60, i64 0, i32 2, !dbg !6507
  %16 = load %struct.loop*, %struct.loop** %always_executed_in, align 8, !dbg !6507
  call void @llvm.dbg.value(metadata %struct.loop* %16, metadata !6454, metadata !DIExpression()), !dbg !6462
  %tobool61 = icmp eq %struct.loop* %16, null, !dbg !6508
  br i1 %tobool61, label %for.inc, label %if.end63, !dbg !6510

if.end63:                                         ; preds = %if.end58
  %cmp64 = icmp eq %struct.loop* %16, %loop, !dbg !6511
  br i1 %cmp64, label %for.end.us-lcssa, label %lor.lhs.false65, !dbg !6513

lor.lhs.false65:                                  ; preds = %if.end63
  %call66 = call zeroext i8 @flow_loop_nested_p(%struct.loop* nonnull %16, %struct.loop* %loop) #6, !dbg !6514
  %tobool67 = icmp eq i8 %call66, 0, !dbg !6514
  br i1 %tobool67, label %for.inc, label %for.end.us-lcssa, !dbg !6515

for.inc:                                          ; preds = %lor.lhs.false65, %if.end58, %for.body, %cleanup
  %inc = add i32 %i.0, 1, !dbg !6516
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6451, metadata !DIExpression()), !dbg !6462
  br label %for.cond, !dbg !6517, !llvm.loop !6518

for.end.us-lcssa:                                 ; preds = %if.end63, %for.cond, %lor.lhs.false65
  %ret.0.ph = phi i8 [ 1, %if.end63 ], [ 1, %lor.lhs.false65 ], [ 0, %for.cond ]
  call void @llvm.dbg.value(metadata i8 %ret.0.ph, metadata !6453, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap** %locs, metadata !6450, metadata !DIExpression(DW_OP_deref)), !dbg !6462
  call fastcc void @VEC_mem_ref_loc_p_heap_free(%struct.VEC_mem_ref_loc_p_heap** nonnull %locs) #7, !dbg !6520
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6521
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6521
  ret i8 %ret.0.ph, !dbg !6522
}

; Function Attrs: nounwind uwtable
define internal fastcc void @get_all_locs_in_loop(%struct.loop* %loop, %struct.mem_ref* %ref, %struct.VEC_mem_ref_loc_p_heap** %locs) unnamed_addr #5 !dbg !6523 {
entry:
  %loc = alloca %struct.mem_ref_loc*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6527, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !6528, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap** %locs, metadata !6529, metadata !DIExpression()), !dbg !6535
  %0 = bitcast %struct.mem_ref_loc** %loc to i8*, !dbg !6536
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6536
  %1 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 3), align 8, !dbg !6537
  %base = getelementptr inbounds %struct.VEC_bitmap_heap, %struct.VEC_bitmap_heap* %1, i64 0, i32 0, !dbg !6537
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !6537
  %2 = load i32, i32* %num, align 8, !dbg !6537
  %call = tail call fastcc %struct.bitmap_head_def* @VEC_bitmap_base_index(%struct.VEC_bitmap_base* %base, i32 %2) #7, !dbg !6537
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !6533, metadata !DIExpression()), !dbg !6535
  %id = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 1, !dbg !6538
  %3 = load i32, i32* %id, align 8, !dbg !6538
  %call1 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %3) #6, !dbg !6540
  %tobool2 = icmp eq i32 %call1, 0, !dbg !6540
  br i1 %tobool2, label %cleanup, label %if.end, !dbg !6541

if.end:                                           ; preds = %entry
  %accesses_in_loop = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 4, !dbg !6542
  %4 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %accesses_in_loop, align 8, !dbg !6542
  %tobool3 = icmp eq %struct.VEC_mem_ref_locs_p_heap* %4, null, !dbg !6542
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !6542

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %4, i64 0, i32 0, !dbg !6542
  br label %cond.end8, !dbg !6542

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_mem_ref_locs_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !6542
  %call10 = tail call fastcc i32 @VEC_mem_ref_locs_p_base_length(%struct.VEC_mem_ref_locs_p_base* %cond9) #7, !dbg !6542
  %5 = load i32, i32* %num, align 8, !dbg !6544
  %cmp = icmp ugt i32 %call10, %5, !dbg !6545
  br i1 %cmp, label %if.then12, label %if.end37, !dbg !6546

if.then12:                                        ; preds = %cond.end8
  %6 = load %struct.VEC_mem_ref_locs_p_heap*, %struct.VEC_mem_ref_locs_p_heap** %accesses_in_loop, align 8, !dbg !6547
  %tobool14 = icmp eq %struct.VEC_mem_ref_locs_p_heap* %6, null, !dbg !6547
  br i1 %tobool14, label %cond.end19, label %cond.true15, !dbg !6547

cond.true15:                                      ; preds = %if.then12
  %base17 = getelementptr inbounds %struct.VEC_mem_ref_locs_p_heap, %struct.VEC_mem_ref_locs_p_heap* %6, i64 0, i32 0, !dbg !6547
  br label %cond.end19, !dbg !6547

cond.end19:                                       ; preds = %if.then12, %cond.true15
  %cond20 = phi %struct.VEC_mem_ref_locs_p_base* [ %base17, %cond.true15 ], [ null, %if.then12 ], !dbg !6547
  %call22 = tail call fastcc %struct.mem_ref_locs* @VEC_mem_ref_locs_p_base_index(%struct.VEC_mem_ref_locs_p_base* %cond20, i32 %5) #7, !dbg !6547
  call void @llvm.dbg.value(metadata %struct.mem_ref_locs* %call22, metadata !6530, metadata !DIExpression()), !dbg !6535
  %tobool23 = icmp eq %struct.mem_ref_locs* %call22, null, !dbg !6549
  br i1 %tobool23, label %if.end37, label %for.cond.preheader, !dbg !6551

for.cond.preheader:                               ; preds = %cond.end19
  %locs25 = getelementptr inbounds %struct.mem_ref_locs, %struct.mem_ref_locs* %call22, i64 0, i32 0, !dbg !6552
  br label %for.cond, !dbg !6556

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %i.0 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ], !dbg !6557
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6531, metadata !DIExpression()), !dbg !6535
  %7 = load %struct.VEC_mem_ref_loc_p_heap*, %struct.VEC_mem_ref_loc_p_heap** %locs25, align 8, !dbg !6558
  %tobool26 = icmp eq %struct.VEC_mem_ref_loc_p_heap* %7, null, !dbg !6558
  br i1 %tobool26, label %cond.end31, label %cond.true27, !dbg !6558

cond.true27:                                      ; preds = %for.cond
  %base29 = getelementptr inbounds %struct.VEC_mem_ref_loc_p_heap, %struct.VEC_mem_ref_loc_p_heap* %7, i64 0, i32 0, !dbg !6558
  br label %cond.end31, !dbg !6558

cond.end31:                                       ; preds = %for.cond, %cond.true27
  %cond32 = phi %struct.VEC_mem_ref_loc_p_base* [ %base29, %cond.true27 ], [ null, %for.cond ], !dbg !6558
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc** %loc, metadata !6532, metadata !DIExpression(DW_OP_deref)), !dbg !6535
  %call33 = call fastcc i32 @VEC_mem_ref_loc_p_base_iterate(%struct.VEC_mem_ref_loc_p_base* %cond32, i32 %i.0, %struct.mem_ref_loc** nonnull %loc) #7, !dbg !6558
  %tobool34 = icmp eq i32 %call33, 0, !dbg !6556
  br i1 %tobool34, label %if.end37.loopexit, label %for.body, !dbg !6556

for.body:                                         ; preds = %cond.end31
  %8 = load %struct.mem_ref_loc*, %struct.mem_ref_loc** %loc, align 8, !dbg !6559
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc* %8, metadata !6532, metadata !DIExpression()), !dbg !6535
  %call35 = call fastcc %struct.mem_ref_loc** @VEC_mem_ref_loc_p_heap_safe_push(%struct.VEC_mem_ref_loc_p_heap** %locs, %struct.mem_ref_loc* %8) #7, !dbg !6559
  %inc = add i32 %i.0, 1, !dbg !6560
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6531, metadata !DIExpression()), !dbg !6535
  br label %for.cond, !dbg !6561, !llvm.loop !6562

if.end37.loopexit:                                ; preds = %cond.end31
  br label %if.end37, !dbg !6564

if.end37:                                         ; preds = %if.end37.loopexit, %cond.end19, %cond.end8
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !6564
  br label %for.cond38, !dbg !6566

for.cond38:                                       ; preds = %for.body40, %if.end37
  %subloop.0.in = phi %struct.loop** [ %inner, %if.end37 ], [ %next, %for.body40 ]
  %subloop.0 = load %struct.loop*, %struct.loop** %subloop.0.in, align 8, !dbg !6567
  call void @llvm.dbg.value(metadata %struct.loop* %subloop.0, metadata !6534, metadata !DIExpression()), !dbg !6535
  %cmp39 = icmp eq %struct.loop* %subloop.0, null, !dbg !6568
  br i1 %cmp39, label %cleanup.loopexit, label %for.body40, !dbg !6570

for.body40:                                       ; preds = %for.cond38
  call fastcc void @get_all_locs_in_loop(%struct.loop* nonnull %subloop.0, %struct.mem_ref* %ref, %struct.VEC_mem_ref_loc_p_heap** %locs) #7, !dbg !6571
  %next = getelementptr inbounds %struct.loop, %struct.loop* %subloop.0, i64 0, i32 9, !dbg !6572
  br label %for.cond38, !dbg !6573, !llvm.loop !6574

cleanup.loopexit:                                 ; preds = %for.cond38
  br label %cleanup, !dbg !6576

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6576
  ret void, !dbg !6576
}

; Function Attrs: nounwind uwtable
define internal fastcc void @execute_sm(%struct.loop* %loop, %struct.VEC_edge_heap* %exits, %struct.mem_ref* %ref) unnamed_addr #5 !dbg !6577 {
entry:
  %fmt_data = alloca %struct.fmt_data, align 8
  %ex = alloca %struct.edge_def*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6581, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %exits, metadata !6582, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !6583, metadata !DIExpression()), !dbg !6591
  %0 = bitcast %struct.fmt_data* %fmt_data to i8*, !dbg !6592
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6592
  %1 = bitcast %struct.edge_def** %ex to i8*, !dbg !6593
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6593
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6594
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !6594
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6596

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* @dump_flags, align 4, !dbg !6597
  %and = and i32 %3, 8, !dbg !6598
  %tobool1 = icmp eq i32 %and, 0, !dbg !6598
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6599

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !6600
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6602
  %mem = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 0, !dbg !6603
  %5 = load %union.tree_node*, %union.tree_node** %mem, align 8, !dbg !6603
  tail call void @print_generic_expr(%struct._IO_FILE* %4, %union.tree_node* %5, i32 0) #6, !dbg !6604
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6605
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !6606
  %7 = load i32, i32* %num, align 8, !dbg !6606
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i32 %7) #6, !dbg !6607
  br label %if.end, !dbg !6608

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %8 = bitcast %struct.mem_ref* %ref to %struct.tree_common**, !dbg !6609
  %9 = load %struct.tree_common*, %struct.tree_common** %8, align 8, !dbg !6609
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 2, !dbg !6609
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6609
  %.cast = bitcast %struct.tree_common* %9 to %union.tree_node*, !dbg !6610
  %call5 = tail call i8* @get_lsm_tmp_name(%union.tree_node* %.cast, i32 -1) #7, !dbg !6611
  %call6 = tail call %union.tree_node* @make_rename_temp(%union.tree_node* %10, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @lsm_tmp_name, i64 0, i64 0)) #6, !dbg !6612
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !6584, metadata !DIExpression()), !dbg !6591
  %loop7 = getelementptr inbounds %struct.fmt_data, %struct.fmt_data* %fmt_data, i64 0, i32 0, !dbg !6613
  store %struct.loop* %loop, %struct.loop** %loop7, align 8, !dbg !6614
  %orig_loop = getelementptr inbounds %struct.fmt_data, %struct.fmt_data* %fmt_data, i64 0, i32 1, !dbg !6615
  store %struct.loop* %loop, %struct.loop** %orig_loop, align 8, !dbg !6616
  %mem8 = getelementptr inbounds %struct.mem_ref, %struct.mem_ref* %ref, i64 0, i32 0, !dbg !6617
  %call9 = call zeroext i8 @for_each_index(%union.tree_node** %mem8, i8 (%union.tree_node*, %union.tree_node**, i8*)* nonnull @force_move_till, i8* nonnull %0) #7, !dbg !6618
  call fastcc void @rewrite_mem_refs(%struct.loop* %loop, %struct.mem_ref* %ref, %union.tree_node* %call6) #7, !dbg !6619
  %11 = load %union.tree_node*, %union.tree_node** %mem8, align 8, !dbg !6620
  %call11 = call %union.tree_node* @unshare_expr(%union.tree_node* %11) #6, !dbg !6620
  %call12 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call6, %union.tree_node* %call11) #6, !dbg !6620
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !6586, metadata !DIExpression()), !dbg !6591
  %call13 = call fastcc %struct.lim_aux_data* @init_lim_data(%union.gimple_statement_d* %call12) #7, !dbg !6621
  call void @llvm.dbg.value(metadata %struct.lim_aux_data* %call13, metadata !6590, metadata !DIExpression()), !dbg !6591
  %max_loop = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call13, i64 0, i32 0, !dbg !6622
  store %struct.loop* %loop, %struct.loop** %max_loop, align 8, !dbg !6623
  %tgt_loop = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call13, i64 0, i32 1, !dbg !6624
  store %struct.loop* %loop, %struct.loop** %tgt_loop, align 8, !dbg !6625
  %call14 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %loop) #6, !dbg !6626
  call void @gsi_insert_on_edge(%struct.edge_def* %call14, %union.gimple_statement_d* %call12) #6, !dbg !6627
  call void @llvm.dbg.value(metadata i32 0, metadata !6585, metadata !DIExpression()), !dbg !6591
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %exits, i64 0, i32 0, !dbg !6628
  br label %for.cond, !dbg !6631

for.cond:                                         ; preds = %for.body, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body ], !dbg !6632
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6585, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata %struct.edge_def** %ex, metadata !6589, metadata !DIExpression(DW_OP_deref)), !dbg !6591
  %call16 = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base, i32 %i.0, %struct.edge_def** nonnull %ex) #7, !dbg !6633
  %tobool17 = icmp eq i32 %call16, 0, !dbg !6634
  br i1 %tobool17, label %for.end, label %for.body, !dbg !6634

for.body:                                         ; preds = %for.cond
  %12 = load %union.tree_node*, %union.tree_node** %mem8, align 8, !dbg !6635
  %call19 = call %union.tree_node* @unshare_expr(%union.tree_node* %12) #6, !dbg !6635
  %call20 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call19, %union.tree_node* %call6) #6, !dbg !6635
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call20, metadata !6587, metadata !DIExpression()), !dbg !6591
  %13 = load %struct.edge_def*, %struct.edge_def** %ex, align 8, !dbg !6637
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !6589, metadata !DIExpression()), !dbg !6591
  call void @gsi_insert_on_edge(%struct.edge_def* %13, %union.gimple_statement_d* %call20) #6, !dbg !6638
  %inc = add i32 %i.0, 1, !dbg !6639
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6585, metadata !DIExpression()), !dbg !6591
  br label %for.cond, !dbg !6640, !llvm.loop !6641

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6643
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6643
  ret void, !dbg !6643
}

declare dso_local %union.tree_node* @make_rename_temp(%union.tree_node*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @force_move_till(%union.tree_node* %ref, %union.tree_node** %index, i8* %data) #5 !dbg !6644 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !6646, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata %union.tree_node** %index, metadata !6647, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata i8* %data, metadata !6648, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata i8* %data, metadata !6649, metadata !DIExpression()), !dbg !6654
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6655
  %bf.load = load i64, i64* %0, align 8, !dbg !6655
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6656
  %cmp = icmp eq i64 %bf.cast1, 45, !dbg !6656
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge, !dbg !6657

entry.if.end_crit_edge:                           ; preds = %entry
  %.pre = bitcast i8* %data to %struct.loop**, !dbg !6658
  br label %if.end, !dbg !6657

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %data, metadata !6649, metadata !DIExpression()), !dbg !6654
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %ref, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6659
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !6659
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6659
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6650, metadata !DIExpression()), !dbg !6660
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !6661
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6661
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6653, metadata !DIExpression()), !dbg !6660
  %orig_loop = getelementptr inbounds i8, i8* %data, i64 8, !dbg !6662
  %3 = bitcast i8* %orig_loop to %struct.loop**, !dbg !6662
  %4 = load %struct.loop*, %struct.loop** %3, align 8, !dbg !6662
  %loop = bitcast i8* %data to %struct.loop**, !dbg !6663
  %5 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !6663
  tail call fastcc void @force_move_till_op(%union.tree_node* %1, %struct.loop* %4, %struct.loop* %5) #7, !dbg !6664
  %6 = load %struct.loop*, %struct.loop** %3, align 8, !dbg !6665
  %7 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !6666
  tail call fastcc void @force_move_till_op(%union.tree_node* %2, %struct.loop* %6, %struct.loop* %7) #7, !dbg !6667
  br label %if.end, !dbg !6668

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %loop7.pre-phi = phi %struct.loop** [ %.pre, %entry.if.end_crit_edge ], [ %loop, %if.then ], !dbg !6658
  %8 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !6669
  %orig_loop6 = getelementptr inbounds i8, i8* %data, i64 8, !dbg !6670
  %9 = bitcast i8* %orig_loop6 to %struct.loop**, !dbg !6670
  %10 = load %struct.loop*, %struct.loop** %9, align 8, !dbg !6670
  %11 = load %struct.loop*, %struct.loop** %loop7.pre-phi, align 8, !dbg !6658
  tail call fastcc void @force_move_till_op(%union.tree_node* %8, %struct.loop* %10, %struct.loop* %11) #7, !dbg !6671
  ret i8 1, !dbg !6672
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_mem_refs(%struct.loop* %loop, %struct.mem_ref* %ref, %union.tree_node* %tmp_var) unnamed_addr #5 !dbg !6673 {
entry:
  %loc = alloca %struct.mem_ref_loc*, align 8
  %locs = alloca %struct.VEC_mem_ref_loc_p_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6677, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata %struct.mem_ref* %ref, metadata !6678, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata %union.tree_node* %tmp_var, metadata !6679, metadata !DIExpression()), !dbg !6683
  %0 = bitcast %struct.mem_ref_loc** %loc to i8*, !dbg !6684
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6684
  %1 = bitcast %struct.VEC_mem_ref_loc_p_heap** %locs to i8*, !dbg !6685
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6685
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap* null, metadata !6682, metadata !DIExpression()), !dbg !6683
  store %struct.VEC_mem_ref_loc_p_heap* null, %struct.VEC_mem_ref_loc_p_heap** %locs, align 8, !dbg !6686
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap** %locs, metadata !6682, metadata !DIExpression(DW_OP_deref)), !dbg !6683
  call fastcc void @get_all_locs_in_loop(%struct.loop* %loop, %struct.mem_ref* %ref, %struct.VEC_mem_ref_loc_p_heap** nonnull %locs) #7, !dbg !6687
  call void @llvm.dbg.value(metadata i32 0, metadata !6680, metadata !DIExpression()), !dbg !6683
  br label %for.cond, !dbg !6688

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !6690
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6680, metadata !DIExpression()), !dbg !6683
  %2 = load %struct.VEC_mem_ref_loc_p_heap*, %struct.VEC_mem_ref_loc_p_heap** %locs, align 8, !dbg !6691
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap* %2, metadata !6682, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap* %2, metadata !6682, metadata !DIExpression()), !dbg !6683
  %base = getelementptr inbounds %struct.VEC_mem_ref_loc_p_heap, %struct.VEC_mem_ref_loc_p_heap* %2, i64 0, i32 0, !dbg !6691
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc** %loc, metadata !6681, metadata !DIExpression(DW_OP_deref)), !dbg !6683
  %call = call fastcc i32 @VEC_mem_ref_loc_p_base_iterate(%struct.VEC_mem_ref_loc_p_base* %base, i32 %i.0, %struct.mem_ref_loc** nonnull %loc) #7, !dbg !6691
  %tobool1 = icmp eq i32 %call, 0, !dbg !6693
  br i1 %tobool1, label %for.end, label %for.body, !dbg !6693

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mem_ref_loc*, %struct.mem_ref_loc** %loc, align 8, !dbg !6694
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc* %3, metadata !6681, metadata !DIExpression()), !dbg !6683
  call fastcc void @rewrite_mem_ref_loc(%struct.mem_ref_loc* %3, %union.tree_node* %tmp_var) #7, !dbg !6695
  %inc = add i32 %i.0, 1, !dbg !6696
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6680, metadata !DIExpression()), !dbg !6683
  br label %for.cond, !dbg !6697, !llvm.loop !6698

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_loc_p_heap** %locs, metadata !6682, metadata !DIExpression(DW_OP_deref)), !dbg !6683
  call fastcc void @VEC_mem_ref_loc_p_heap_free(%struct.VEC_mem_ref_loc_p_heap** nonnull %locs) #7, !dbg !6700
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6701
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6701
  ret void, !dbg !6701
}

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_on_edge(%struct.edge_def*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @loop_latch_edge(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @force_move_till_op(%union.tree_node* %op, %struct.loop* %orig_loop, %struct.loop* %loop) unnamed_addr #5 !dbg !6702 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !6706, metadata !DIExpression()), !dbg !6710
  call void @llvm.dbg.value(metadata %struct.loop* %orig_loop, metadata !6707, metadata !DIExpression()), !dbg !6710
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6708, metadata !DIExpression()), !dbg !6710
  %tobool = icmp eq %union.tree_node* %op, null, !dbg !6711
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !6713

lor.lhs.false:                                    ; preds = %entry
  %call = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* nonnull %op) #6, !dbg !6714
  %tobool1 = icmp eq i8 %call, 0, !dbg !6714
  br i1 %tobool1, label %if.end, label %cleanup.cont, !dbg !6715

if.end:                                           ; preds = %lor.lhs.false
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6716
  %bf.load = load i64, i64* %0, align 8, !dbg !6716
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6716
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !6716
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6716

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i32 1140, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6716
  br label %cond.end, !dbg !6716

cond.end:                                         ; preds = %if.end, %cond.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6717
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6717
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !6717
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !6709, metadata !DIExpression()), !dbg !6710
  %call3 = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %2) #7, !dbg !6718
  %tobool4 = icmp eq i8 %call3, 0, !dbg !6718
  br i1 %tobool4, label %if.end6, label %cleanup.cont, !dbg !6720

if.end6:                                          ; preds = %cond.end
  tail call fastcc void @set_level(%union.gimple_statement_d* %2, %struct.loop* %orig_loop, %struct.loop* %loop) #7, !dbg !6721
  br label %cleanup.cont, !dbg !6722

cleanup.cont:                                     ; preds = %cond.end, %lor.lhs.false, %entry, %if.end6
  ret void, !dbg !6722
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6723 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6725, metadata !DIExpression()), !dbg !6726
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !6727
  %cmp = icmp eq i32 %call, 18, !dbg !6728
  %conv1 = zext i1 %cmp to i8, !dbg !6727
  ret i8 %conv1, !dbg !6729
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_mem_ref_loc(%struct.mem_ref_loc* %loc, %union.tree_node* %tmp_var) unnamed_addr #5 !dbg !6730 {
entry:
  call void @llvm.dbg.value(metadata %struct.mem_ref_loc* %loc, metadata !6734, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata %union.tree_node* %tmp_var, metadata !6735, metadata !DIExpression()), !dbg !6736
  %stmt = getelementptr inbounds %struct.mem_ref_loc, %struct.mem_ref_loc* %loc, i64 0, i32 1, !dbg !6737
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6737
  tail call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %0) #6, !dbg !6738
  %ref = getelementptr inbounds %struct.mem_ref_loc, %struct.mem_ref_loc* %loc, i64 0, i32 0, !dbg !6739
  %1 = load %union.tree_node**, %union.tree_node*** %ref, align 8, !dbg !6739
  store %union.tree_node* %tmp_var, %union.tree_node** %1, align 8, !dbg !6740
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6741
  tail call fastcc void @update_stmt(%union.gimple_statement_d* %2) #7, !dbg !6742
  ret void, !dbg !6743
}

declare dso_local void @mark_virtual_ops_for_renaming(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !6744 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !6746, metadata !DIExpression()), !dbg !6747
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !6748
  %tobool = icmp eq i8 %call, 0, !dbg !6748
  br i1 %tobool, label %if.end, label %if.then, !dbg !6750

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !6751
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !6753
  br label %if.end, !dbg !6754

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6755
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @move_computations_stmt(%struct.dom_walk_data* %dw_data, %struct.basic_block_def* %bb) #5 !dbg !6756 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.dom_walk_data* %dw_data, metadata !6758, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6759, metadata !DIExpression()), !dbg !6765
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !6766
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6766
  call void @llvm.dbg.value(metadata i32 0, metadata !6763, metadata !DIExpression()), !dbg !6765
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 3, !dbg !6767
  %1 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !6767
  %call = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %1) #7, !dbg !6769
  %tobool = icmp eq %struct.loop* %call, null, !dbg !6769
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6770

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6771
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6771
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !6771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !6771
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6771
  br label %for.cond, !dbg !6773

for.cond:                                         ; preds = %for.cond.backedge, %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !6761, metadata !DIExpression(DW_OP_deref)), !dbg !6765
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !6774
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6776
  br i1 %tobool2, label %for.body, label %cleanup.loopexit, !dbg !6777

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !6761, metadata !DIExpression(DW_OP_deref)), !dbg !6765
  %call3 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !6778
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !6762, metadata !DIExpression()), !dbg !6765
  %call4 = call fastcc %struct.lim_aux_data* @get_lim_data(%union.gimple_statement_d* %call3) #7, !dbg !6780
  call void @llvm.dbg.value(metadata %struct.lim_aux_data* %call4, metadata !6764, metadata !DIExpression()), !dbg !6765
  %cmp = icmp eq %struct.lim_aux_data* %call4, null, !dbg !6781
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !6783

if.then5:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !6761, metadata !DIExpression(DW_OP_deref)), !dbg !6765
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !6784
  br label %for.cond.backedge, !dbg !6786

for.cond.backedge:                                ; preds = %if.then5, %if.then9, %if.end20, %if.end10
  br label %for.cond, !dbg !6765, !llvm.loop !6787

if.end6:                                          ; preds = %for.body
  %cost7 = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call4, i64 0, i32 3, !dbg !6789
  %3 = load i32, i32* %cost7, align 8, !dbg !6789
  call void @llvm.dbg.value(metadata i32 %3, metadata !6763, metadata !DIExpression()), !dbg !6765
  %tgt_loop = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %call4, i64 0, i32 1, !dbg !6790
  %4 = load %struct.loop*, %struct.loop** %tgt_loop, align 8, !dbg !6790
  call void @llvm.dbg.value(metadata %struct.loop* %4, metadata !6760, metadata !DIExpression()), !dbg !6765
  call fastcc void @clear_lim_data(%union.gimple_statement_d* %call3) #7, !dbg !6791
  %tobool8 = icmp eq %struct.loop* %4, null, !dbg !6792
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6794

if.then9:                                         ; preds = %if.end6
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !6761, metadata !DIExpression(DW_OP_deref)), !dbg !6765
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !6795
  br label %for.cond.backedge, !dbg !6797

if.end10:                                         ; preds = %if.end6
  %call11 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call3) #7, !dbg !6798
  %cmp12 = icmp eq i32 %call11, 1, !dbg !6800
  br i1 %cmp12, label %for.cond.backedge, label %if.end14, !dbg !6801

if.end14:                                         ; preds = %if.end10
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6802
  %tobool15 = icmp eq %struct._IO_FILE* %5, null, !dbg !6802
  br i1 %tobool15, label %if.end20, label %land.lhs.true, !dbg !6804

land.lhs.true:                                    ; preds = %if.end14
  %6 = load i32, i32* @dump_flags, align 4, !dbg !6805
  %and = and i32 %6, 8, !dbg !6806
  %tobool16 = icmp eq i32 %and, 0, !dbg !6806
  br i1 %tobool16, label %if.end20, label %if.then17, !dbg !6807

if.then17:                                        ; preds = %land.lhs.true
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !6808
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6810
  call void @print_gimple_stmt(%struct._IO_FILE* %7, %union.gimple_statement_d* %call3, i32 0, i32 0) #6, !dbg !6811
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6812
  %num = getelementptr inbounds %struct.loop, %struct.loop* %4, i64 0, i32 0, !dbg !6813
  %9 = load i32, i32* %num, align 8, !dbg !6813
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0), i32 %3, i32 %9) #6, !dbg !6814
  br label %if.end20, !dbg !6815

if.end20:                                         ; preds = %land.lhs.true, %if.end14, %if.then17
  call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %call3) #6, !dbg !6816
  %call21 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* nonnull %4) #6, !dbg !6817
  call void @gsi_insert_on_edge(%struct.edge_def* %call21, %union.gimple_statement_d* %call3) #6, !dbg !6818
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !6761, metadata !DIExpression(DW_OP_deref)), !dbg !6765
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %bsi, i8 zeroext 0) #6, !dbg !6819
  br label %for.cond.backedge, !dbg !6820

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !6821

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6821
  ret void, !dbg !6821
}

declare dso_local zeroext i8 @need_ssa_update_p(%struct.function*) local_unnamed_addr #2

declare dso_local void @rewrite_into_loop_closed_ssa(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_lim_data(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !6822 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6824, metadata !DIExpression()), !dbg !6826
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @lim_aux_data_map, align 8, !dbg !6827
  %1 = bitcast %union.gimple_statement_d* %stmt to i8*, !dbg !6828
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !6829
  call void @llvm.dbg.value(metadata i8** %call, metadata !6825, metadata !DIExpression()), !dbg !6826
  %tobool = icmp eq i8** %call, null, !dbg !6830
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !6832

if.end:                                           ; preds = %entry
  %2 = bitcast i8** %call to %struct.lim_aux_data**, !dbg !6833
  %3 = load %struct.lim_aux_data*, %struct.lim_aux_data** %2, align 8, !dbg !6833
  tail call fastcc void @free_lim_aux_data(%struct.lim_aux_data* %3) #7, !dbg !6834
  store i8* null, i8** %call, align 8, !dbg !6835
  br label %cleanup.cont, !dbg !6836

cleanup.cont:                                     ; preds = %entry, %if.end
  ret void, !dbg !6836
}

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @free_lim_aux_data(%struct.lim_aux_data* %data) unnamed_addr #5 !dbg !6837 {
entry:
  call void @llvm.dbg.value(metadata %struct.lim_aux_data* %data, metadata !6841, metadata !DIExpression()), !dbg !6844
  %depends = getelementptr inbounds %struct.lim_aux_data, %struct.lim_aux_data* %data, i64 0, i32 4, !dbg !6845
  %0 = load %struct.depend*, %struct.depend** %depends, align 8, !dbg !6845
  call void @llvm.dbg.value(metadata %struct.depend* %0, metadata !6842, metadata !DIExpression()), !dbg !6844
  br label %for.cond, !dbg !6847

for.cond:                                         ; preds = %for.body, %entry
  %.in = phi %struct.depend* [ %0, %entry ], [ %2, %for.body ]
  %dep.0 = phi %struct.depend* [ %0, %entry ], [ %2, %for.body ], !dbg !6848
  call void @llvm.dbg.value(metadata %struct.depend* %dep.0, metadata !6842, metadata !DIExpression()), !dbg !6844
  %tobool = icmp eq %struct.depend* %dep.0, null, !dbg !6849
  br i1 %tobool, label %for.end, label %for.body, !dbg !6849

for.body:                                         ; preds = %for.cond
  %1 = bitcast %struct.depend* %.in to i8*, !dbg !6848
  %next1 = getelementptr inbounds %struct.depend, %struct.depend* %dep.0, i64 0, i32 1, !dbg !6850
  %2 = load %struct.depend*, %struct.depend** %next1, align 8, !dbg !6850
  call void @llvm.dbg.value(metadata %struct.depend* %2, metadata !6843, metadata !DIExpression()), !dbg !6844
  tail call void @free(i8* %1) #6, !dbg !6853
  call void @llvm.dbg.value(metadata %struct.depend* %2, metadata !6842, metadata !DIExpression()), !dbg !6844
  br label %for.cond, !dbg !6854, !llvm.loop !6855

for.end:                                          ; preds = %for.cond
  %3 = bitcast %struct.lim_aux_data* %data to i8*, !dbg !6857
  tail call void @free(i8* %3) #6, !dbg !6858
  ret void, !dbg !6859
}

declare dso_local void @pointer_map_destroy(%struct.pointer_map_t*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_mem_ref_p_heap_free(%struct.VEC_mem_ref_p_heap** %vec_) unnamed_addr #0 !dbg !6860 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), metadata !6864, metadata !DIExpression()), !dbg !6865
  %0 = load %struct.VEC_mem_ref_p_heap*, %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), align 8, !dbg !6866
  %tobool = icmp eq %struct.VEC_mem_ref_p_heap* %0, null, !dbg !6866
  br i1 %tobool, label %if.end, label %if.then, !dbg !6868

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_mem_ref_p_heap* %0 to i8*, !dbg !6868
  tail call void @free(i8* nonnull %1) #6, !dbg !6866
  br label %if.end, !dbg !6866

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_mem_ref_p_heap* null, %struct.VEC_mem_ref_p_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 1), align 8, !dbg !6868
  ret void, !dbg !6868
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_bitmap_base_iterate(%struct.VEC_bitmap_base* %vec_, i32 %ix_, %struct.bitmap_head_def** %ptr) unnamed_addr #0 !dbg !6869 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_base* %vec_, metadata !6873, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6874, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %ptr, metadata !6875, metadata !DIExpression()), !dbg !6876
  %tobool = icmp eq %struct.VEC_bitmap_base* %vec_, null, !dbg !6877
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6877

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_bitmap_base, %struct.VEC_bitmap_base* %vec_, i64 0, i32 0, !dbg !6877
  %0 = load i32, i32* %num, align 8, !dbg !6877
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6877
  br i1 %cmp, label %if.then, label %if.else, !dbg !6879

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6880
  %arrayidx = getelementptr inbounds %struct.VEC_bitmap_base, %struct.VEC_bitmap_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6880
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !6880
  br label %return, !dbg !6880

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6882

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.bitmap_head_def* [ null, %if.else ], [ %1, %if.then ], !dbg !6884
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6884
  store %struct.bitmap_head_def* %storemerge, %struct.bitmap_head_def** %ptr, align 8, !dbg !6884
  ret i32 %retval.0, !dbg !6879
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_bitmap_heap_free(%struct.VEC_bitmap_heap** %vec_) unnamed_addr #0 !dbg !6885 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitmap_heap** %vec_, metadata !6890, metadata !DIExpression()), !dbg !6891
  %0 = load %struct.VEC_bitmap_heap*, %struct.VEC_bitmap_heap** %vec_, align 8, !dbg !6892
  %tobool = icmp eq %struct.VEC_bitmap_heap* %0, null, !dbg !6892
  br i1 %tobool, label %if.end, label %if.then, !dbg !6894

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_bitmap_heap* %0 to i8*, !dbg !6894
  tail call void @free(i8* nonnull %1) #6, !dbg !6892
  br label %if.end, !dbg !6892

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_bitmap_heap* null, %struct.VEC_bitmap_heap** %vec_, align 8, !dbg !6894
  ret void, !dbg !6894
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_htab_t_base_iterate(%struct.VEC_htab_t_base* %vec_, i32 %ix_, %struct.htab** %ptr) unnamed_addr #0 !dbg !6895 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_htab_t_base* %vec_, metadata !6899, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6900, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.value(metadata %struct.htab** %ptr, metadata !6901, metadata !DIExpression()), !dbg !6902
  %tobool = icmp eq %struct.VEC_htab_t_base* %vec_, null, !dbg !6903
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6903

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_htab_t_base, %struct.VEC_htab_t_base* %vec_, i64 0, i32 0, !dbg !6903
  %0 = load i32, i32* %num, align 8, !dbg !6903
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6903
  br i1 %cmp, label %if.then, label %if.else, !dbg !6905

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6906
  %arrayidx = getelementptr inbounds %struct.VEC_htab_t_base, %struct.VEC_htab_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6906
  %1 = load %struct.htab*, %struct.htab** %arrayidx, align 8, !dbg !6906
  br label %return, !dbg !6906

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6908

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.htab* [ null, %if.else ], [ %1, %if.then ], !dbg !6910
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6910
  store %struct.htab* %storemerge, %struct.htab** %ptr, align 8, !dbg !6910
  ret i32 %retval.0, !dbg !6905
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_htab_t_heap_free(%struct.VEC_htab_t_heap** %vec_) unnamed_addr #0 !dbg !6911 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_htab_t_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 5), metadata !6916, metadata !DIExpression()), !dbg !6917
  %0 = load %struct.VEC_htab_t_heap*, %struct.VEC_htab_t_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 5), align 8, !dbg !6918
  %tobool = icmp eq %struct.VEC_htab_t_heap* %0, null, !dbg !6918
  br i1 %tobool, label %if.end, label %if.then, !dbg !6920

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_htab_t_heap* %0 to i8*, !dbg !6920
  tail call void @free(i8* nonnull %1) #6, !dbg !6918
  br label %if.end, !dbg !6918

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_htab_t_heap* null, %struct.VEC_htab_t_heap** getelementptr inbounds (%struct.anon, %struct.anon* @memory_accesses, i64 0, i32 5), align 8, !dbg !6920
  ret void, !dbg !6920
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2022, !2023, !2024}
!llvm.ident = !{!2025}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "lsm_tmp_name_length", scope: !2, file: !3, line: 1725, type: !477, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !474, globals: !2003, nameTableKind: None)
!3 = !DIFile(filename: "tree-ssa-loop-im.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !338, !342, !348, !353, !358, !376, !383, !390, !396, !435, !461, !467}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !330, line: 31, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334, !335, !336, !337}
!332 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!335 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!336 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!337 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !330, line: 91, baseType: !7, size: 32, elements: !339)
!339 = !{!340, !341}
!340 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!341 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !343, line: 363, baseType: !7, size: 32, elements: !344)
!343 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!344 = !{!345, !346, !347}
!345 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!346 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!347 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !343, line: 355, baseType: !7, size: 32, elements: !349)
!349 = !{!350, !351, !352}
!350 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!351 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!352 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !354, line: 474, baseType: !7, size: 32, elements: !355)
!354 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!355 = !{!356, !357}
!356 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!357 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !359)
!359 = !{!360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375}
!360 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !377)
!377 = !{!378, !379, !380, !381, !382}
!378 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!383 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !384)
!384 = !{!385, !386, !387, !388, !389}
!385 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!386 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!387 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!388 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!389 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "move_pos", file: !391, line: 770, baseType: !7, size: 32, elements: !392)
!391 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!392 = !{!393, !394, !395}
!393 = !DIEnumerator(name: "MOVE_IMPOSSIBLE", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "MOVE_PRESERVE_EXECUTION", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "MOVE_POSSIBLE", value: 2, isUnsigned: true)
!396 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !397, line: 51, baseType: !7, size: 32, elements: !398)
!397 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!398 = !{!399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434}
!399 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!400 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!401 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!402 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!403 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!404 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!405 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!406 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!407 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!408 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!409 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!410 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!411 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!412 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!413 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!414 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!415 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!416 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!417 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!418 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!419 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!420 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!421 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!422 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!423 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!424 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!425 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!426 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!427 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!428 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!429 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!430 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!431 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!432 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!433 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!434 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!435 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !397, line: 727, baseType: !7, size: 32, elements: !436)
!436 = !{!437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460}
!437 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!438 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!439 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!440 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!441 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!442 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!443 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!444 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!445 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!446 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!447 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!448 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!449 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!450 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!451 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!452 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!453 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!454 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!455 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!456 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!457 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!458 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!459 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!460 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!461 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !397, line: 80, baseType: !7, size: 32, elements: !462)
!462 = !{!463, !464, !465, !466}
!463 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!464 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!465 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!466 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!467 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !468, line: 119, baseType: !7, size: 32, elements: !469)
!468 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!469 = !{!470, !471, !472, !473}
!470 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!471 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!472 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!473 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!474 = !{!475, !476, !477, !478, !481, !482, !134, !484, !809, !1867, !842, !479, !7, !538, !1869, !1918, !1921, !1409, !1890, !1907, !1922, !1934, !1946, !1953, !1955, !1956, !461, !1957, !1908, !1878, !1891, !1895, !1969, !1050, !1023, !1982, !611, !1995, !1990, !788, !1998, !1325}
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!477 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !485, line: 56, baseType: !486)
!485 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !488)
!488 = !{!489, !522, !528, !541, !560, !571, !576, !585, !591, !604, !616, !654, !1198, !1226, !1242, !1243, !1248, !1257, !1263, !1268, !1272, !1276, !1518, !1565, !1571, !1577, !1584, !1597, !1611, !1628, !1640, !1662, !1677, !1849}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !487, file: !135, line: 3372, baseType: !490, size: 64)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !491)
!491 = !{!492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !490, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !490, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !490, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !490, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !490, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !490, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !490, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !490, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !490, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !490, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !490, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !490, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !490, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !490, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !490, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !490, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !490, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !490, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !490, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !490, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !490, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !490, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !490, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !490, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !490, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !490, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !490, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !490, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !490, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !490, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !487, file: !135, line: 3373, baseType: !523, size: 192)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !524)
!524 = !{!525, !526, !527}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !523, file: !135, line: 403, baseType: !490, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !523, file: !135, line: 404, baseType: !484, size: 64, offset: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !523, file: !135, line: 405, baseType: !484, size: 64, offset: 128)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !487, file: !135, line: 3374, baseType: !529, size: 320)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !530)
!530 = !{!531, !532}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !529, file: !135, line: 1385, baseType: !523, size: 192)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !529, file: !135, line: 1386, baseType: !533, size: 128, offset: 192)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !534, line: 58, baseType: !535)
!534 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !534, line: 54, size: 128, elements: !536)
!536 = !{!537, !539}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !535, file: !534, line: 56, baseType: !538, size: 64)
!538 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !535, file: !534, line: 57, baseType: !540, size: 64, offset: 64)
!540 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !487, file: !135, line: 3375, baseType: !542, size: 256)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !543)
!543 = !{!544, !545}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !542, file: !135, line: 1398, baseType: !523, size: 192)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !542, file: !135, line: 1399, baseType: !546, size: 64, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !548, line: 52, size: 256, elements: !549)
!548 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!549 = !{!550, !551, !552, !553, !554, !555, !556}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !547, file: !548, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !547, file: !548, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !547, file: !548, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !547, file: !548, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !547, file: !548, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !547, file: !548, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !547, file: !548, line: 62, baseType: !557, size: 192, offset: 64)
!557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !538, size: 192, elements: !558)
!558 = !{!559}
!559 = !DISubrange(count: 3)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !487, file: !135, line: 3376, baseType: !561, size: 256)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !562)
!562 = !{!563, !564}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !561, file: !135, line: 1409, baseType: !523, size: 192)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !561, file: !135, line: 1410, baseType: !565, size: 64, offset: 192)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !567, line: 27, size: 192, elements: !568)
!567 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!568 = !{!569, !570}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !566, file: !567, line: 29, baseType: !533, size: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !566, file: !567, line: 30, baseType: !5, size: 32, offset: 128)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !487, file: !135, line: 3377, baseType: !572, size: 256)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !573)
!573 = !{!574, !575}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !572, file: !135, line: 1438, baseType: !523, size: 192)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !572, file: !135, line: 1439, baseType: !484, size: 64, offset: 192)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !487, file: !135, line: 3378, baseType: !577, size: 256)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !578)
!578 = !{!579, !580, !581}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !577, file: !135, line: 1419, baseType: !523, size: 192)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !577, file: !135, line: 1420, baseType: !477, size: 32, offset: 192)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !577, file: !135, line: 1421, baseType: !582, size: 8, offset: 224)
!582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 8, elements: !583)
!583 = !{!584}
!584 = !DISubrange(count: 1)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !487, file: !135, line: 3379, baseType: !586, size: 320)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !587)
!587 = !{!588, !589, !590}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !586, file: !135, line: 1429, baseType: !523, size: 192)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !586, file: !135, line: 1430, baseType: !484, size: 64, offset: 192)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !586, file: !135, line: 1431, baseType: !484, size: 64, offset: 256)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !487, file: !135, line: 3380, baseType: !592, size: 320)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !593)
!593 = !{!594, !595}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !592, file: !135, line: 1461, baseType: !523, size: 192)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !592, file: !135, line: 1462, baseType: !596, size: 128, offset: 192)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !597, line: 31, size: 128, elements: !598)
!597 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!598 = !{!599, !602, !603}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !596, file: !597, line: 32, baseType: !600, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !476)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !596, file: !597, line: 33, baseType: !7, size: 32, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !596, file: !597, line: 34, baseType: !7, size: 32, offset: 96)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !487, file: !135, line: 3381, baseType: !605, size: 384)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !606)
!606 = !{!607, !608, !613, !614, !615}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !605, file: !135, line: 2508, baseType: !523, size: 192)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !605, file: !135, line: 2509, baseType: !609, size: 32, offset: 192)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !610, line: 58, baseType: !611)
!610 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !612, line: 44, baseType: !7)
!612 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!613 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !605, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !605, file: !135, line: 2511, baseType: !484, size: 64, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !605, file: !135, line: 2512, baseType: !484, size: 64, offset: 320)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !487, file: !135, line: 3382, baseType: !617, size: 896)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !618)
!618 = !{!619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !617, file: !135, line: 2653, baseType: !605, size: 384)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !617, file: !135, line: 2654, baseType: !484, size: 64, offset: 384)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !617, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !617, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !617, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !617, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !617, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !617, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !617, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !617, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !617, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !617, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !617, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !617, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !617, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !617, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !617, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !617, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !617, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !617, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !617, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !617, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !617, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !617, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !617, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !617, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !617, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !617, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !617, file: !135, line: 2705, baseType: !484, size: 64, offset: 576)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !617, file: !135, line: 2706, baseType: !484, size: 64, offset: 640)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !617, file: !135, line: 2707, baseType: !484, size: 64, offset: 704)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !617, file: !135, line: 2708, baseType: !484, size: 64, offset: 768)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !617, file: !135, line: 2711, baseType: !652, size: 64, offset: 832)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !487, file: !135, line: 3383, baseType: !655, size: 960)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !656)
!656 = !{!657, !658}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !655, file: !135, line: 2757, baseType: !617, size: 896)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !655, file: !135, line: 2758, baseType: !659, size: 64, offset: 896)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !485, line: 50, baseType: !660)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !662, line: 240, size: 384, elements: !663)
!662 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!663 = !{!664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !661, file: !662, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !661, file: !662, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !661, file: !662, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !661, file: !662, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !661, file: !662, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !661, file: !662, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !661, file: !662, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !661, file: !662, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !661, file: !662, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !661, file: !662, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !661, file: !662, line: 321, baseType: !675, size: 320, offset: 64)
!675 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !662, line: 315, size: 320, elements: !676)
!676 = !{!677, !1131, !1133, !1196, !1197}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !675, file: !662, line: 316, baseType: !678, size: 64)
!678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !679, size: 64, elements: !583)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !662, line: 183, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !662, line: 166, size: 64, elements: !681)
!681 = !{!682, !683, !684, !685, !686, !694, !695, !707, !710, !770, !771, !1108, !1121, !1128}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !680, file: !662, line: 168, baseType: !477, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !680, file: !662, line: 169, baseType: !7, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !680, file: !662, line: 170, baseType: !482, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !680, file: !662, line: 171, baseType: !659, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !680, file: !662, line: 172, baseType: !687, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !485, line: 53, baseType: !688)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !662, line: 359, size: 128, elements: !690)
!690 = !{!691, !692}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !689, file: !662, line: 360, baseType: !477, size: 32)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !689, file: !662, line: 361, baseType: !693, size: 64, offset: 64)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !659, size: 64, elements: !583)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !680, file: !662, line: 173, baseType: !5, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !680, file: !662, line: 174, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !662, line: 133, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !662, line: 115, size: 32, elements: !698)
!698 = !{!699, !700, !701, !702, !703, !704, !705, !706}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !697, file: !662, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !697, file: !662, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !697, file: !662, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !697, file: !662, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !697, file: !662, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !697, file: !662, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !697, file: !662, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !697, file: !662, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !680, file: !662, line: 175, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !662, line: 175, flags: DIFlagFwdDecl)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !680, file: !662, line: 176, baseType: !711, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !713, line: 75, size: 256, elements: !714)
!713 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!714 = !{!715, !729, !730, !731}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !712, file: !713, line: 76, baseType: !716, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !713, line: 68, baseType: !718)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !713, line: 63, size: 320, elements: !719)
!719 = !{!720, !722, !723, !724}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !718, file: !713, line: 64, baseType: !721, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !718, file: !713, line: 65, baseType: !721, size: 64, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !718, file: !713, line: 66, baseType: !7, size: 32, offset: 128)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !718, file: !713, line: 67, baseType: !725, size: 128, offset: 192)
!725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !726, size: 128, elements: !727)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !713, line: 29, baseType: !538)
!727 = !{!728}
!728 = !DISubrange(count: 2)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !712, file: !713, line: 77, baseType: !716, size: 64, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !712, file: !713, line: 78, baseType: !7, size: 32, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !712, file: !713, line: 79, baseType: !732, size: 64, offset: 192)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !713, line: 49, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !713, line: 45, size: 832, elements: !735)
!735 = !{!736, !737, !738}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !734, file: !713, line: 46, baseType: !721, size: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !734, file: !713, line: 47, baseType: !711, size: 64, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !734, file: !713, line: 48, baseType: !739, size: 704, offset: 128)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !740, line: 164, size: 704, elements: !741)
!740 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!741 = !{!742, !743, !753, !754, !755, !756, !757, !758, !762, !766, !767, !768, !769}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !739, file: !740, line: 166, baseType: !540, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !739, file: !740, line: 167, baseType: !744, size: 64, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !740, line: 157, size: 192, elements: !746)
!746 = !{!747, !748, !749}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !745, file: !740, line: 159, baseType: !479, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !745, file: !740, line: 160, baseType: !744, size: 64, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !745, file: !740, line: 161, baseType: !750, size: 32, offset: 128)
!750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 32, elements: !751)
!751 = !{!752}
!752 = !DISubrange(count: 4)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !739, file: !740, line: 168, baseType: !479, size: 64, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !739, file: !740, line: 169, baseType: !479, size: 64, offset: 192)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !739, file: !740, line: 170, baseType: !479, size: 64, offset: 256)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !739, file: !740, line: 171, baseType: !540, size: 64, offset: 320)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !739, file: !740, line: 172, baseType: !477, size: 32, offset: 384)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !739, file: !740, line: 176, baseType: !759, size: 64, offset: 448)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DISubroutineType(types: !761)
!761 = !{!744, !481, !540}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !739, file: !740, line: 177, baseType: !763, size: 64, offset: 512)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{null, !481, !744}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !739, file: !740, line: 178, baseType: !481, size: 64, offset: 576)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !739, file: !740, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !739, file: !740, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !739, file: !740, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !680, file: !662, line: 177, baseType: !484, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !680, file: !662, line: 178, baseType: !772, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !343, line: 217, size: 832, elements: !774)
!774 = !{!775, !1020, !1021, !1022, !1078, !1082, !1083, !1084, !1102, !1103, !1104, !1105, !1106, !1107}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !773, file: !343, line: 219, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !343, line: 151, baseType: !778)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !343, line: 151, size: 128, elements: !779)
!779 = !{!780}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !778, file: !343, line: 151, baseType: !781, size: 128)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !343, line: 150, baseType: !782)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !343, line: 150, size: 128, elements: !783)
!783 = !{!784, !785, !786}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !782, file: !343, line: 150, baseType: !7, size: 32)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !782, file: !343, line: 150, baseType: !7, size: 32, offset: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !782, file: !343, line: 150, baseType: !787, size: 64, offset: 64)
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !788, size: 64, elements: !583)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !485, line: 108, baseType: !789)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !343, line: 122, size: 512, elements: !791)
!791 = !{!792, !793, !794, !1012, !1013, !1014, !1015, !1016, !1017, !1018}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !790, file: !343, line: 124, baseType: !772, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !790, file: !343, line: 125, baseType: !772, size: 64, offset: 64)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !790, file: !343, line: 131, baseType: !795, size: 64, offset: 128)
!795 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !343, line: 128, size: 64, elements: !796)
!796 = !{!797, !1011}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !795, file: !343, line: 129, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !485, line: 66, baseType: !799)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !397, line: 143, size: 192, elements: !801)
!801 = !{!802, !1009, !1010}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !800, file: !397, line: 145, baseType: !803, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !485, line: 69, baseType: !804)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !397, line: 136, size: 192, elements: !806)
!806 = !{!807, !1007, !1008}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !805, file: !397, line: 137, baseType: !808, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !485, line: 58, baseType: !809)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !397, line: 737, size: 768, elements: !811)
!811 = !{!812, !829, !862, !868, !873, !878, !885, !891, !897, !902, !916, !921, !927, !932, !942, !947, !965, !972, !979, !985, !990, !996, !1002}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !810, file: !397, line: 738, baseType: !813, size: 256)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !397, line: 271, size: 256, elements: !814)
!814 = !{!815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !813, file: !397, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !813, file: !397, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !813, file: !397, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !813, file: !397, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !813, file: !397, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !813, file: !397, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !813, file: !397, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !813, file: !397, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !813, file: !397, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !813, file: !397, line: 312, baseType: !7, size: 32, offset: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !813, file: !397, line: 316, baseType: !609, size: 32, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !813, file: !397, line: 319, baseType: !7, size: 32, offset: 96)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !813, file: !397, line: 323, baseType: !772, size: 64, offset: 128)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !813, file: !397, line: 327, baseType: !484, size: 64, offset: 192)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !810, file: !397, line: 739, baseType: !830, size: 448)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !397, line: 350, size: 448, elements: !831)
!831 = !{!832, !860}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !830, file: !397, line: 353, baseType: !833, size: 384)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !397, line: 333, size: 384, elements: !834)
!834 = !{!835, !836, !843}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !833, file: !397, line: 336, baseType: !813, size: 256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !833, file: !397, line: 343, baseType: !837, size: 64, offset: 256)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !468, line: 37, size: 128, elements: !839)
!839 = !{!840, !841}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !838, file: !468, line: 39, baseType: !837, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !838, file: !468, line: 40, baseType: !842, size: 64, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !833, file: !397, line: 344, baseType: !844, size: 64, offset: 320)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !468, line: 45, size: 320, elements: !846)
!846 = !{!847, !848}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !845, file: !468, line: 47, baseType: !844, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !845, file: !468, line: 48, baseType: !849, size: 256, offset: 64)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !850)
!850 = !{!851, !853, !854, !859}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !849, file: !135, line: 1884, baseType: !852, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !849, file: !135, line: 1885, baseType: !852, size: 64, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !849, file: !135, line: 1891, baseType: !855, size: 64, offset: 128)
!855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !849, file: !135, line: 1891, size: 64, elements: !856)
!856 = !{!857, !858}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !855, file: !135, line: 1891, baseType: !808, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !855, file: !135, line: 1891, baseType: !484, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !849, file: !135, line: 1892, baseType: !842, size: 64, offset: 192)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !830, file: !397, line: 359, baseType: !861, size: 64, offset: 384)
!861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !484, size: 64, elements: !583)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !810, file: !397, line: 740, baseType: !863, size: 512)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !397, line: 365, size: 512, elements: !864)
!864 = !{!865, !866, !867}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !863, file: !397, line: 368, baseType: !833, size: 384)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !863, file: !397, line: 373, baseType: !484, size: 64, offset: 384)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !863, file: !397, line: 374, baseType: !484, size: 64, offset: 448)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !810, file: !397, line: 741, baseType: !869, size: 576)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !397, line: 380, size: 576, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !869, file: !397, line: 383, baseType: !863, size: 512)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !869, file: !397, line: 389, baseType: !861, size: 64, offset: 512)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !810, file: !397, line: 742, baseType: !874, size: 320)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !397, line: 395, size: 320, elements: !875)
!875 = !{!876, !877}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !874, file: !397, line: 397, baseType: !813, size: 256)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !874, file: !397, line: 400, baseType: !798, size: 64, offset: 256)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !810, file: !397, line: 743, baseType: !879, size: 448)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !397, line: 406, size: 448, elements: !880)
!880 = !{!881, !882, !883, !884}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !879, file: !397, line: 408, baseType: !813, size: 256)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !879, file: !397, line: 412, baseType: !484, size: 64, offset: 256)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !879, file: !397, line: 420, baseType: !484, size: 64, offset: 320)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !879, file: !397, line: 423, baseType: !798, size: 64, offset: 384)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !810, file: !397, line: 744, baseType: !886, size: 384)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !397, line: 429, size: 384, elements: !887)
!887 = !{!888, !889, !890}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !886, file: !397, line: 431, baseType: !813, size: 256)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !886, file: !397, line: 434, baseType: !484, size: 64, offset: 256)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !886, file: !397, line: 437, baseType: !798, size: 64, offset: 320)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !810, file: !397, line: 745, baseType: !892, size: 384)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !397, line: 443, size: 384, elements: !893)
!893 = !{!894, !895, !896}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !892, file: !397, line: 445, baseType: !813, size: 256)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !892, file: !397, line: 449, baseType: !484, size: 64, offset: 256)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !892, file: !397, line: 453, baseType: !798, size: 64, offset: 320)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !810, file: !397, line: 746, baseType: !898, size: 320)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !397, line: 459, size: 320, elements: !899)
!899 = !{!900, !901}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !898, file: !397, line: 461, baseType: !813, size: 256)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !898, file: !397, line: 464, baseType: !484, size: 64, offset: 256)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !810, file: !397, line: 747, baseType: !903, size: 768)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !397, line: 469, size: 768, elements: !904)
!904 = !{!905, !906, !907, !908, !909}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !903, file: !397, line: 471, baseType: !813, size: 256)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !903, file: !397, line: 474, baseType: !7, size: 32, offset: 256)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !903, file: !397, line: 475, baseType: !7, size: 32, offset: 288)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !903, file: !397, line: 478, baseType: !484, size: 64, offset: 320)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !903, file: !397, line: 481, baseType: !910, size: 384, offset: 384)
!910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !911, size: 384, elements: !583)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !912)
!912 = !{!913, !914, !915}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !911, file: !135, line: 1920, baseType: !849, size: 256)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !911, file: !135, line: 1921, baseType: !484, size: 64, offset: 256)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !911, file: !135, line: 1922, baseType: !609, size: 32, offset: 320)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !810, file: !397, line: 748, baseType: !917, size: 320)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !397, line: 487, size: 320, elements: !918)
!918 = !{!919, !920}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !917, file: !397, line: 490, baseType: !813, size: 256)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !917, file: !397, line: 494, baseType: !477, size: 32, offset: 256)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !810, file: !397, line: 749, baseType: !922, size: 384)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !397, line: 500, size: 384, elements: !923)
!923 = !{!924, !925, !926}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !922, file: !397, line: 502, baseType: !813, size: 256)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !922, file: !397, line: 506, baseType: !798, size: 64, offset: 256)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !922, file: !397, line: 510, baseType: !798, size: 64, offset: 320)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !810, file: !397, line: 750, baseType: !928, size: 320)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !397, line: 529, size: 320, elements: !929)
!929 = !{!930, !931}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !928, file: !397, line: 531, baseType: !813, size: 256)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !928, file: !397, line: 540, baseType: !798, size: 64, offset: 256)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !810, file: !397, line: 751, baseType: !933, size: 704)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !397, line: 546, size: 704, elements: !934)
!934 = !{!935, !936, !937, !938, !939, !940, !941}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !933, file: !397, line: 549, baseType: !863, size: 512)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !933, file: !397, line: 553, baseType: !482, size: 64, offset: 512)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !933, file: !397, line: 557, baseType: !476, size: 8, offset: 576)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !933, file: !397, line: 558, baseType: !476, size: 8, offset: 584)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !933, file: !397, line: 559, baseType: !476, size: 8, offset: 592)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !933, file: !397, line: 560, baseType: !476, size: 8, offset: 600)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !933, file: !397, line: 566, baseType: !861, size: 64, offset: 640)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !810, file: !397, line: 752, baseType: !943, size: 384)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !397, line: 571, size: 384, elements: !944)
!944 = !{!945, !946}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !943, file: !397, line: 573, baseType: !874, size: 320)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !943, file: !397, line: 577, baseType: !484, size: 64, offset: 320)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !810, file: !397, line: 753, baseType: !948, size: 576)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !397, line: 600, size: 576, elements: !949)
!949 = !{!950, !951, !952, !955, !964}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !948, file: !397, line: 602, baseType: !874, size: 320)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !948, file: !397, line: 605, baseType: !484, size: 64, offset: 320)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !948, file: !397, line: 609, baseType: !953, size: 64, offset: 384)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !954, line: 46, baseType: !538)
!954 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!955 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !948, file: !397, line: 612, baseType: !956, size: 64, offset: 448)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !397, line: 581, size: 320, elements: !958)
!958 = !{!959, !960, !961, !962, !963}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !957, file: !397, line: 583, baseType: !134, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !957, file: !397, line: 586, baseType: !484, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !957, file: !397, line: 589, baseType: !484, size: 64, offset: 128)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !957, file: !397, line: 592, baseType: !484, size: 64, offset: 192)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !957, file: !397, line: 595, baseType: !484, size: 64, offset: 256)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !948, file: !397, line: 616, baseType: !798, size: 64, offset: 512)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !810, file: !397, line: 754, baseType: !966, size: 512)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !397, line: 622, size: 512, elements: !967)
!967 = !{!968, !969, !970, !971}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !966, file: !397, line: 624, baseType: !874, size: 320)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !966, file: !397, line: 628, baseType: !484, size: 64, offset: 320)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !966, file: !397, line: 632, baseType: !484, size: 64, offset: 384)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !966, file: !397, line: 636, baseType: !484, size: 64, offset: 448)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !810, file: !397, line: 755, baseType: !973, size: 704)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !397, line: 642, size: 704, elements: !974)
!974 = !{!975, !976, !977, !978}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !973, file: !397, line: 644, baseType: !966, size: 512)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !973, file: !397, line: 648, baseType: !484, size: 64, offset: 512)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !973, file: !397, line: 652, baseType: !484, size: 64, offset: 576)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !973, file: !397, line: 653, baseType: !484, size: 64, offset: 640)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !810, file: !397, line: 756, baseType: !980, size: 448)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !397, line: 663, size: 448, elements: !981)
!981 = !{!982, !983, !984}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !980, file: !397, line: 665, baseType: !874, size: 320)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !980, file: !397, line: 668, baseType: !484, size: 64, offset: 320)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !980, file: !397, line: 673, baseType: !484, size: 64, offset: 384)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !810, file: !397, line: 757, baseType: !986, size: 384)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !397, line: 694, size: 384, elements: !987)
!987 = !{!988, !989}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !986, file: !397, line: 696, baseType: !874, size: 320)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !986, file: !397, line: 699, baseType: !484, size: 64, offset: 320)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !810, file: !397, line: 758, baseType: !991, size: 384)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !397, line: 681, size: 384, elements: !992)
!992 = !{!993, !994, !995}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !991, file: !397, line: 683, baseType: !813, size: 256)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !991, file: !397, line: 686, baseType: !484, size: 64, offset: 256)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !991, file: !397, line: 689, baseType: !484, size: 64, offset: 320)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !810, file: !397, line: 759, baseType: !997, size: 384)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !397, line: 707, size: 384, elements: !998)
!998 = !{!999, !1000, !1001}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !997, file: !397, line: 709, baseType: !813, size: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !997, file: !397, line: 712, baseType: !484, size: 64, offset: 256)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !997, file: !397, line: 712, baseType: !484, size: 64, offset: 320)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !810, file: !397, line: 760, baseType: !1003, size: 320)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !397, line: 718, size: 320, elements: !1004)
!1004 = !{!1005, !1006}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1003, file: !397, line: 720, baseType: !813, size: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1003, file: !397, line: 723, baseType: !484, size: 64, offset: 256)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !805, file: !397, line: 138, baseType: !804, size: 64, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !805, file: !397, line: 139, baseType: !804, size: 64, offset: 128)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !800, file: !397, line: 146, baseType: !803, size: 64, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !800, file: !397, line: 152, baseType: !798, size: 64, offset: 128)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !795, file: !343, line: 130, baseType: !659, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !790, file: !343, line: 134, baseType: !481, size: 64, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !790, file: !343, line: 137, baseType: !484, size: 64, offset: 256)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !790, file: !343, line: 138, baseType: !609, size: 32, offset: 320)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !790, file: !343, line: 142, baseType: !7, size: 32, offset: 352)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !790, file: !343, line: 144, baseType: !477, size: 32, offset: 384)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !790, file: !343, line: 145, baseType: !477, size: 32, offset: 416)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !790, file: !343, line: 146, baseType: !1019, size: 64, offset: 448)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !343, line: 119, baseType: !540)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !773, file: !343, line: 220, baseType: !776, size: 64, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !773, file: !343, line: 223, baseType: !481, size: 64, offset: 128)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !773, file: !343, line: 226, baseType: !1023, size: 64, offset: 192)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !330, line: 100, size: 1216, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029, !1030, !1035, !1036, !1037, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1068, !1076, !1077}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1024, file: !330, line: 102, baseType: !477, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1024, file: !330, line: 105, baseType: !7, size: 32, offset: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1024, file: !330, line: 108, baseType: !772, size: 64, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1024, file: !330, line: 111, baseType: !772, size: 64, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1024, file: !330, line: 114, baseType: !1031, size: 64, offset: 192)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !330, line: 41, size: 64, elements: !1032)
!1032 = !{!1033, !1034}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1031, file: !330, line: 42, baseType: !329, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1031, file: !330, line: 43, baseType: !7, size: 32, offset: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1024, file: !330, line: 117, baseType: !7, size: 32, offset: 256)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1024, file: !330, line: 120, baseType: !7, size: 32, offset: 288)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1024, file: !330, line: 123, baseType: !1038, size: 64, offset: 320)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !330, line: 87, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !330, line: 87, size: 128, elements: !1041)
!1041 = !{!1042}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1040, file: !330, line: 87, baseType: !1043, size: 128)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !330, line: 85, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !330, line: 85, size: 128, elements: !1045)
!1045 = !{!1046, !1047, !1048}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1044, file: !330, line: 85, baseType: !7, size: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1044, file: !330, line: 85, baseType: !7, size: 32, offset: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1044, file: !330, line: 85, baseType: !1049, size: 64, offset: 64)
!1049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 64, elements: !583)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !330, line: 84, baseType: !1023)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1024, file: !330, line: 126, baseType: !1023, size: 64, offset: 384)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1024, file: !330, line: 129, baseType: !1023, size: 64, offset: 448)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1024, file: !330, line: 132, baseType: !481, size: 64, offset: 512)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1024, file: !330, line: 139, baseType: !484, size: 64, offset: 576)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1024, file: !330, line: 143, baseType: !533, size: 128, offset: 640)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1024, file: !330, line: 146, baseType: !533, size: 128, offset: 768)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1024, file: !330, line: 148, baseType: !476, size: 8, offset: 896)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1024, file: !330, line: 149, baseType: !476, size: 8, offset: 904)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1024, file: !330, line: 153, baseType: !338, size: 32, offset: 928)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1024, file: !330, line: 156, baseType: !1061, size: 64, offset: 960)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !330, line: 48, size: 320, elements: !1063)
!1063 = !{!1064, !1065, !1066, !1067}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1062, file: !330, line: 50, baseType: !808, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1062, file: !330, line: 59, baseType: !533, size: 128, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1062, file: !330, line: 64, baseType: !476, size: 8, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1062, file: !330, line: 67, baseType: !1061, size: 64, offset: 256)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1024, file: !330, line: 159, baseType: !1069, size: 64, offset: 1024)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !330, line: 72, size: 256, elements: !1071)
!1071 = !{!1072, !1073, !1074, !1075}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1070, file: !330, line: 74, baseType: !789, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1070, file: !330, line: 77, baseType: !1069, size: 64, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1070, file: !330, line: 78, baseType: !1069, size: 64, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1070, file: !330, line: 81, baseType: !1069, size: 64, offset: 192)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1024, file: !330, line: 162, baseType: !476, size: 8, offset: 1088)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1024, file: !330, line: 166, baseType: !484, size: 64, offset: 1152)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !773, file: !343, line: 229, baseType: !1079, size: 128, offset: 256)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1080, size: 128, elements: !727)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !343, line: 229, flags: DIFlagFwdDecl)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !773, file: !343, line: 232, baseType: !772, size: 64, offset: 384)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !773, file: !343, line: 233, baseType: !772, size: 64, offset: 448)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !773, file: !343, line: 238, baseType: !1085, size: 64, offset: 512)
!1085 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !343, line: 235, size: 64, elements: !1086)
!1086 = !{!1087, !1093}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1085, file: !343, line: 236, baseType: !1088, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !343, line: 273, size: 128, elements: !1090)
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1089, file: !343, line: 275, baseType: !798, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1089, file: !343, line: 278, baseType: !798, size: 64, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1085, file: !343, line: 237, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !343, line: 259, size: 320, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100, !1101}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1095, file: !343, line: 261, baseType: !659, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1095, file: !343, line: 262, baseType: !659, size: 64, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1095, file: !343, line: 266, baseType: !659, size: 64, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1095, file: !343, line: 267, baseType: !659, size: 64, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1095, file: !343, line: 270, baseType: !477, size: 32, offset: 256)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !773, file: !343, line: 241, baseType: !1019, size: 64, offset: 576)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !773, file: !343, line: 244, baseType: !477, size: 32, offset: 640)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !773, file: !343, line: 247, baseType: !477, size: 32, offset: 672)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !773, file: !343, line: 250, baseType: !477, size: 32, offset: 704)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !773, file: !343, line: 253, baseType: !477, size: 32, offset: 736)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !773, file: !343, line: 256, baseType: !477, size: 32, offset: 768)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !680, file: !662, line: 179, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !662, line: 150, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !662, line: 142, size: 320, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116, !1119, !1120}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1111, file: !662, line: 144, baseType: !484, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1111, file: !662, line: 145, baseType: !659, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1111, file: !662, line: 146, baseType: !659, size: 64, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1111, file: !662, line: 147, baseType: !1117, size: 32, offset: 192)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1118, line: 31, baseType: !477)
!1118 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1111, file: !662, line: 148, baseType: !7, size: 32, offset: 224)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1111, file: !662, line: 149, baseType: !476, size: 8, offset: 256)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !680, file: !662, line: 180, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !662, line: 162, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !662, line: 159, size: 128, elements: !1125)
!1125 = !{!1126, !1127}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1124, file: !662, line: 160, baseType: !484, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1124, file: !662, line: 161, baseType: !540, size: 64, offset: 64)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !680, file: !662, line: 181, baseType: !1129, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !662, line: 181, flags: DIFlagFwdDecl)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !675, file: !662, line: 317, baseType: !1132, size: 64)
!1132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 64, elements: !583)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !675, file: !662, line: 318, baseType: !1134, size: 320)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !662, line: 188, size: 320, elements: !1135)
!1135 = !{!1136, !1138, !1195}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1134, file: !662, line: 190, baseType: !1137, size: 192)
!1137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !679, size: 192, elements: !558)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1134, file: !662, line: 193, baseType: !1139, size: 64, offset: 192)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !662, line: 206, size: 320, elements: !1141)
!1141 = !{!1142, !1180, !1181, !1182, !1194}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1140, file: !662, line: 208, baseType: !1143, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !485, line: 62, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1146, line: 538, size: 256, elements: !1147)
!1146 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1147 = !{!1148, !1152, !1158, !1171}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1145, file: !1146, line: 539, baseType: !1149, size: 32)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1146, line: 482, size: 32, elements: !1150)
!1150 = !{!1151}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1149, file: !1146, line: 484, baseType: !7, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1145, file: !1146, line: 540, baseType: !1153, size: 192)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1146, line: 488, size: 192, elements: !1154)
!1154 = !{!1155, !1156, !1157}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1153, file: !1146, line: 489, baseType: !1149, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1153, file: !1146, line: 492, baseType: !482, size: 64, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1153, file: !1146, line: 496, baseType: !484, size: 64, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1145, file: !1146, line: 541, baseType: !1159, size: 256)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1146, line: 504, size: 256, elements: !1160)
!1160 = !{!1161, !1162, !1169, !1170}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1159, file: !1146, line: 505, baseType: !1149, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1159, file: !1146, line: 509, baseType: !1163, size: 64, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1146, line: 501, baseType: !1164)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{null, !1167}
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1159, file: !1146, line: 510, baseType: !1167, size: 64, offset: 128)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1159, file: !1146, line: 513, baseType: !1143, size: 64, offset: 192)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1145, file: !1146, line: 542, baseType: !1172, size: 128)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1146, line: 530, size: 128, elements: !1173)
!1173 = !{!1174, !1175}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1172, file: !1146, line: 531, baseType: !1149, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1172, file: !1146, line: 534, baseType: !1176, size: 64, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1146, line: 525, baseType: !1177)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!476, !484, !482, !538, !538}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1140, file: !662, line: 211, baseType: !7, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1140, file: !662, line: 214, baseType: !540, size: 64, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1140, file: !662, line: 224, baseType: !1183, size: 64, offset: 192)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !662, line: 202, baseType: !1185)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !662, line: 202, size: 128, elements: !1186)
!1186 = !{!1187}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1185, file: !662, line: 202, baseType: !1188, size: 128)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !662, line: 200, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !662, line: 200, size: 128, elements: !1190)
!1190 = !{!1191, !1192, !1193}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1189, file: !662, line: 200, baseType: !7, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1189, file: !662, line: 200, baseType: !7, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1189, file: !662, line: 200, baseType: !693, size: 64, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1140, file: !662, line: 234, baseType: !1183, size: 64, offset: 256)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1134, file: !662, line: 197, baseType: !540, size: 64, offset: 256)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !675, file: !662, line: 319, baseType: !547, size: 256)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !675, file: !662, line: 320, baseType: !566, size: 192)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !487, file: !135, line: 3384, baseType: !1199, size: 1472)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !1200)
!1200 = !{!1201, !1222, !1223, !1224, !1225}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1199, file: !135, line: 3115, baseType: !1202, size: 1216)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !1203)
!1203 = !{!1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1202, file: !135, line: 2985, baseType: !655, size: 960)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1202, file: !135, line: 2986, baseType: !484, size: 64, offset: 960)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1202, file: !135, line: 2987, baseType: !484, size: 64, offset: 1024)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1202, file: !135, line: 2988, baseType: !484, size: 64, offset: 1088)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1202, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1202, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1202, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1202, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1202, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1202, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1202, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1202, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1202, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1202, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1202, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1202, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1202, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1202, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1199, file: !135, line: 3117, baseType: !484, size: 64, offset: 1216)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1199, file: !135, line: 3119, baseType: !484, size: 64, offset: 1280)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1199, file: !135, line: 3121, baseType: !484, size: 64, offset: 1344)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1199, file: !135, line: 3123, baseType: !484, size: 64, offset: 1408)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !487, file: !135, line: 3385, baseType: !1227, size: 1088)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !1228)
!1228 = !{!1229, !1230, !1231}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1227, file: !135, line: 2875, baseType: !655, size: 960)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1227, file: !135, line: 2876, baseType: !659, size: 64, offset: 960)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1227, file: !135, line: 2877, baseType: !1232, size: 64, offset: 1024)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !391, line: 172, size: 128, elements: !1234)
!1234 = !{!1235, !1236, !1237, !1238, !1239, !1240, !1241}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1233, file: !391, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1233, file: !391, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1233, file: !391, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1233, file: !391, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1233, file: !391, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1233, file: !391, line: 195, baseType: !7, size: 32, offset: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1233, file: !391, line: 199, baseType: !484, size: 64, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !487, file: !135, line: 3386, baseType: !1202, size: 1216)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !487, file: !135, line: 3387, baseType: !1244, size: 1280)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !1245)
!1245 = !{!1246, !1247}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1244, file: !135, line: 3094, baseType: !1202, size: 1216)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1244, file: !135, line: 3095, baseType: !1232, size: 64, offset: 1216)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !487, file: !135, line: 3388, baseType: !1249, size: 1216)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1249, file: !135, line: 2825, baseType: !617, size: 896)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1249, file: !135, line: 2827, baseType: !484, size: 64, offset: 896)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1249, file: !135, line: 2828, baseType: !484, size: 64, offset: 960)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1249, file: !135, line: 2829, baseType: !484, size: 64, offset: 1024)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1249, file: !135, line: 2830, baseType: !484, size: 64, offset: 1088)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1249, file: !135, line: 2831, baseType: !484, size: 64, offset: 1152)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !487, file: !135, line: 3389, baseType: !1258, size: 1024)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !1259)
!1259 = !{!1260, !1261, !1262}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1258, file: !135, line: 2851, baseType: !655, size: 960)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1258, file: !135, line: 2852, baseType: !477, size: 32, offset: 960)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1258, file: !135, line: 2853, baseType: !477, size: 32, offset: 992)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !487, file: !135, line: 3390, baseType: !1264, size: 1024)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !1265)
!1265 = !{!1266, !1267}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1264, file: !135, line: 2858, baseType: !655, size: 960)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1264, file: !135, line: 2859, baseType: !1232, size: 64, offset: 960)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !487, file: !135, line: 3391, baseType: !1269, size: 960)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !1270)
!1270 = !{!1271}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1269, file: !135, line: 2863, baseType: !655, size: 960)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !487, file: !135, line: 3392, baseType: !1273, size: 1472)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !1274)
!1274 = !{!1275}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1273, file: !135, line: 3305, baseType: !1199, size: 1472)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !487, file: !135, line: 3393, baseType: !1277, size: 1792)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !1278)
!1278 = !{!1279, !1280, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1277, file: !135, line: 3249, baseType: !1199, size: 1472)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1277, file: !135, line: 3251, baseType: !1281, size: 64, offset: 1472)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1283, line: 463, size: 1152, elements: !1284)
!1283 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1284 = !{!1285, !1288, !1319, !1320, !1433, !1441, !1442, !1443, !1444, !1445, !1446, !1470, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1282, file: !1283, line: 464, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1283, line: 464, flags: DIFlagFwdDecl)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1282, file: !1283, line: 467, baseType: !1289, size: 64, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !343, line: 374, size: 640, elements: !1291)
!1291 = !{!1292, !1294, !1295, !1308, !1309, !1310, !1311, !1312, !1313, !1315, !1317, !1318}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1290, file: !343, line: 377, baseType: !1293, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !485, line: 111, baseType: !772)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1290, file: !343, line: 378, baseType: !1293, size: 64, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1290, file: !343, line: 381, baseType: !1296, size: 64, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !343, line: 282, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !343, line: 282, size: 128, elements: !1299)
!1299 = !{!1300}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1298, file: !343, line: 282, baseType: !1301, size: 128)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !343, line: 281, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !343, line: 281, size: 128, elements: !1303)
!1303 = !{!1304, !1305, !1306}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1302, file: !343, line: 281, baseType: !7, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1302, file: !343, line: 281, baseType: !7, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1302, file: !343, line: 281, baseType: !1307, size: 64, offset: 64)
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1293, size: 64, elements: !583)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1290, file: !343, line: 384, baseType: !477, size: 32, offset: 192)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1290, file: !343, line: 387, baseType: !477, size: 32, offset: 224)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1290, file: !343, line: 390, baseType: !477, size: 32, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1290, file: !343, line: 394, baseType: !1296, size: 64, offset: 320)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1290, file: !343, line: 396, baseType: !342, size: 32, offset: 384)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1290, file: !343, line: 399, baseType: !1314, size: 64, offset: 416)
!1314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 64, elements: !727)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1290, file: !343, line: 402, baseType: !1316, size: 64, offset: 480)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !727)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1290, file: !343, line: 406, baseType: !477, size: 32, offset: 544)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1290, file: !343, line: 409, baseType: !477, size: 32, offset: 576)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1282, file: !1283, line: 470, baseType: !799, size: 64, offset: 128)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1282, file: !1283, line: 473, baseType: !1321, size: 64, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !391, line: 39, size: 1152, elements: !1323)
!1323 = !{!1324, !1372, !1385, !1397, !1398, !1410, !1411, !1415, !1416, !1417, !1418, !1419}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1322, file: !391, line: 41, baseType: !1325, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1326, line: 144, baseType: !1327)
!1326 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1326, line: 100, size: 896, elements: !1329)
!1329 = !{!1330, !1336, !1341, !1346, !1348, !1349, !1350, !1351, !1352, !1353, !1358, !1360, !1361, !1366, !1371}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1328, file: !1326, line: 102, baseType: !1331, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1326, line: 52, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!1335, !1167}
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1326, line: 47, baseType: !7)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1328, file: !1326, line: 105, baseType: !1337, size: 64, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1326, line: 59, baseType: !1338)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DISubroutineType(types: !1340)
!1340 = !{!477, !1167, !1167}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1328, file: !1326, line: 108, baseType: !1342, size: 64, offset: 128)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1326, line: 63, baseType: !1343)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{null, !481}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1328, file: !1326, line: 111, baseType: !1347, size: 64, offset: 192)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1328, file: !1326, line: 114, baseType: !953, size: 64, offset: 256)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1328, file: !1326, line: 117, baseType: !953, size: 64, offset: 320)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1328, file: !1326, line: 120, baseType: !953, size: 64, offset: 384)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1328, file: !1326, line: 124, baseType: !7, size: 32, offset: 448)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1328, file: !1326, line: 128, baseType: !7, size: 32, offset: 480)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1328, file: !1326, line: 131, baseType: !1354, size: 64, offset: 512)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1326, line: 75, baseType: !1355)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!481, !953, !953}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1328, file: !1326, line: 132, baseType: !1359, size: 64, offset: 576)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1326, line: 78, baseType: !1343)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1328, file: !1326, line: 135, baseType: !481, size: 64, offset: 640)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1328, file: !1326, line: 136, baseType: !1362, size: 64, offset: 704)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1326, line: 82, baseType: !1363)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{!481, !481, !953, !953}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1328, file: !1326, line: 137, baseType: !1367, size: 64, offset: 768)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1326, line: 83, baseType: !1368)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{null, !481, !481}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1328, file: !1326, line: 141, baseType: !7, size: 32, offset: 832)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1322, file: !391, line: 48, baseType: !1373, size: 64, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !397, line: 35, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !397, line: 35, size: 128, elements: !1376)
!1376 = !{!1377}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1375, file: !397, line: 35, baseType: !1378, size: 128)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !397, line: 33, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !397, line: 33, size: 128, elements: !1380)
!1380 = !{!1381, !1382, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1379, file: !397, line: 33, baseType: !7, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1379, file: !397, line: 33, baseType: !7, size: 32, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1379, file: !397, line: 33, baseType: !1384, size: 64, offset: 64)
!1384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !808, size: 64, elements: !583)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1322, file: !391, line: 51, baseType: !1386, size: 64, offset: 128)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !1388)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !1389)
!1389 = !{!1390}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1388, file: !135, line: 183, baseType: !1391, size: 128)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !1393)
!1393 = !{!1394, !1395, !1396}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1392, file: !135, line: 182, baseType: !7, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1392, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1392, file: !135, line: 182, baseType: !861, size: 64, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1322, file: !391, line: 54, baseType: !484, size: 64, offset: 192)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1322, file: !391, line: 57, baseType: !1399, size: 128, offset: 256)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1400, line: 31, size: 128, elements: !1401)
!1400 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1401 = !{!1402, !1403, !1404, !1405, !1406, !1407, !1408}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1399, file: !1400, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1399, file: !1400, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1399, file: !1400, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1399, file: !1400, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1399, file: !1400, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1399, file: !1400, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1399, file: !1400, line: 56, baseType: !1409, size: 64, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !485, line: 47, baseType: !711)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1322, file: !391, line: 60, baseType: !1399, size: 128, offset: 384)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1322, file: !391, line: 64, baseType: !1412, size: 64, offset: 512)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1414, line: 33, flags: DIFlagFwdDecl)
!1414 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1322, file: !391, line: 67, baseType: !484, size: 64, offset: 576)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1322, file: !391, line: 73, baseType: !1325, size: 64, offset: 640)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1322, file: !391, line: 77, baseType: !1409, size: 64, offset: 704)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1322, file: !391, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1322, file: !391, line: 82, baseType: !1420, size: 320, offset: 832)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !468, line: 62, size: 320, elements: !1421)
!1421 = !{!1422, !1428, !1429, !1430, !1431, !1432}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1420, file: !468, line: 63, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !468, line: 56, size: 128, elements: !1425)
!1425 = !{!1426, !1427}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1424, file: !468, line: 57, baseType: !1423, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1424, file: !468, line: 58, baseType: !582, size: 8, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1420, file: !468, line: 64, baseType: !7, size: 32, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1420, file: !468, line: 66, baseType: !7, size: 32, offset: 96)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1420, file: !468, line: 68, baseType: !476, size: 8, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1420, file: !468, line: 70, baseType: !837, size: 64, offset: 192)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1420, file: !468, line: 71, baseType: !844, size: 64, offset: 256)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1282, file: !1283, line: 476, baseType: !1434, size: 64, offset: 256)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !330, line: 187, size: 256, elements: !1436)
!1436 = !{!1437, !1438, !1439, !1440}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1435, file: !330, line: 189, baseType: !477, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1435, file: !330, line: 192, baseType: !1038, size: 64, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1435, file: !330, line: 197, baseType: !1325, size: 64, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1435, file: !330, line: 200, baseType: !1023, size: 64, offset: 192)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1282, file: !1283, line: 479, baseType: !1325, size: 64, offset: 320)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1282, file: !1283, line: 484, baseType: !484, size: 64, offset: 384)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1282, file: !1283, line: 488, baseType: !484, size: 64, offset: 448)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1282, file: !1283, line: 493, baseType: !484, size: 64, offset: 512)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1282, file: !1283, line: 496, baseType: !484, size: 64, offset: 576)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1282, file: !1283, line: 501, baseType: !1447, size: 64, offset: 640)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !354, line: 2355, size: 576, elements: !1449)
!1449 = !{!1450, !1453, !1454, !1455, !1456, !1458, !1459, !1464, !1465, !1466, !1467, !1468, !1469}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1448, file: !354, line: 2356, baseType: !1451, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !354, line: 2356, flags: DIFlagFwdDecl)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1448, file: !354, line: 2357, baseType: !482, size: 64, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1448, file: !354, line: 2358, baseType: !477, size: 32, offset: 128)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1448, file: !354, line: 2359, baseType: !477, size: 32, offset: 160)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1448, file: !354, line: 2360, baseType: !1457, size: 128, offset: 192)
!1457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !477, size: 128, elements: !751)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1448, file: !354, line: 2364, baseType: !477, size: 32, offset: 320)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1448, file: !354, line: 2367, baseType: !1460, size: 128, offset: 384)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !354, line: 2349, size: 128, elements: !1461)
!1461 = !{!1462, !1463}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1460, file: !354, line: 2351, baseType: !659, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1460, file: !354, line: 2352, baseType: !540, size: 64, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1448, file: !354, line: 2371, baseType: !353, size: 32, offset: 512)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1448, file: !354, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1448, file: !354, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1448, file: !354, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1448, file: !354, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1448, file: !354, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1282, file: !1283, line: 504, baseType: !1471, size: 64, offset: 704)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1283, line: 504, flags: DIFlagFwdDecl)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1282, file: !1283, line: 507, baseType: !1325, size: 64, offset: 768)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1282, file: !1283, line: 510, baseType: !477, size: 32, offset: 832)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1282, file: !1283, line: 513, baseType: !477, size: 32, offset: 864)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1282, file: !1283, line: 516, baseType: !609, size: 32, offset: 896)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1282, file: !1283, line: 519, baseType: !609, size: 32, offset: 928)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1282, file: !1283, line: 522, baseType: !7, size: 32, offset: 960)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1282, file: !1283, line: 523, baseType: !7, size: 32, offset: 992)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1282, file: !1283, line: 528, baseType: !482, size: 64, offset: 1024)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1282, file: !1283, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1282, file: !1283, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1282, file: !1283, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1282, file: !1283, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1282, file: !1283, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1282, file: !1283, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1282, file: !1283, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1282, file: !1283, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1282, file: !1283, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1282, file: !1283, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1282, file: !1283, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1282, file: !1283, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1282, file: !1283, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1282, file: !1283, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1282, file: !1283, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1282, file: !1283, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1277, file: !135, line: 3254, baseType: !484, size: 64, offset: 1536)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1277, file: !135, line: 3257, baseType: !484, size: 64, offset: 1600)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1277, file: !135, line: 3258, baseType: !484, size: 64, offset: 1664)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1277, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1277, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1277, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1277, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1277, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1277, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1277, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1277, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1277, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1277, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1277, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1277, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1277, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1277, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1277, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1277, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1277, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1277, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !487, file: !135, line: 3394, baseType: !1519, size: 1344)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1519, file: !135, line: 2280, baseType: !523, size: 192)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1519, file: !135, line: 2281, baseType: !484, size: 64, offset: 192)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1519, file: !135, line: 2282, baseType: !484, size: 64, offset: 256)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1519, file: !135, line: 2283, baseType: !484, size: 64, offset: 320)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1519, file: !135, line: 2284, baseType: !484, size: 64, offset: 384)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1519, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1519, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1519, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1519, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1519, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1519, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1519, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1519, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1519, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1519, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1519, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1519, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1519, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1519, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1519, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1519, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1519, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1519, file: !135, line: 2306, baseType: !1117, size: 32, offset: 544)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1519, file: !135, line: 2307, baseType: !484, size: 64, offset: 576)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1519, file: !135, line: 2308, baseType: !484, size: 64, offset: 640)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1519, file: !135, line: 2314, baseType: !1547, size: 64, offset: 704)
!1547 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !1548)
!1548 = !{!1549, !1550, !1551}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1547, file: !135, line: 2310, baseType: !477, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1547, file: !135, line: 2311, baseType: !482, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1547, file: !135, line: 2312, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1519, file: !135, line: 2315, baseType: !484, size: 64, offset: 768)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1519, file: !135, line: 2316, baseType: !484, size: 64, offset: 832)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1519, file: !135, line: 2317, baseType: !484, size: 64, offset: 896)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1519, file: !135, line: 2318, baseType: !484, size: 64, offset: 960)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1519, file: !135, line: 2319, baseType: !484, size: 64, offset: 1024)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1519, file: !135, line: 2320, baseType: !484, size: 64, offset: 1088)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1519, file: !135, line: 2321, baseType: !484, size: 64, offset: 1152)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1519, file: !135, line: 2322, baseType: !484, size: 64, offset: 1216)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1519, file: !135, line: 2324, baseType: !1563, size: 64, offset: 1280)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !487, file: !135, line: 3395, baseType: !1566, size: 320)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !1567)
!1567 = !{!1568, !1569, !1570}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1566, file: !135, line: 1470, baseType: !523, size: 192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1566, file: !135, line: 1471, baseType: !484, size: 64, offset: 192)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1566, file: !135, line: 1472, baseType: !484, size: 64, offset: 256)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !487, file: !135, line: 3396, baseType: !1572, size: 320)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !1573)
!1573 = !{!1574, !1575, !1576}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1572, file: !135, line: 1483, baseType: !523, size: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1572, file: !135, line: 1484, baseType: !477, size: 32, offset: 192)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1572, file: !135, line: 1485, baseType: !861, size: 64, offset: 256)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !487, file: !135, line: 3397, baseType: !1578, size: 384)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !1579)
!1579 = !{!1580, !1581, !1582, !1583}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1578, file: !135, line: 1830, baseType: !523, size: 192)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1578, file: !135, line: 1831, baseType: !609, size: 32, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1578, file: !135, line: 1832, baseType: !484, size: 64, offset: 256)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1578, file: !135, line: 1835, baseType: !861, size: 64, offset: 320)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !487, file: !135, line: 3398, baseType: !1585, size: 704)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !1586)
!1586 = !{!1587, !1588, !1589, !1590, !1591, !1596}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1585, file: !135, line: 1899, baseType: !523, size: 192)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1585, file: !135, line: 1902, baseType: !484, size: 64, offset: 192)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1585, file: !135, line: 1905, baseType: !808, size: 64, offset: 256)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1585, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1585, file: !135, line: 1911, baseType: !1592, size: 64, offset: 384)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !391, line: 117, size: 128, elements: !1594)
!1594 = !{!1595}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1593, file: !391, line: 120, baseType: !1399, size: 128)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1585, file: !135, line: 1914, baseType: !849, size: 256, offset: 448)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !487, file: !135, line: 3399, baseType: !1598, size: 704)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !1599)
!1599 = !{!1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1598, file: !135, line: 2009, baseType: !523, size: 192)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1598, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1598, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1598, file: !135, line: 2014, baseType: !609, size: 32, offset: 224)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1598, file: !135, line: 2016, baseType: !484, size: 64, offset: 256)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1598, file: !135, line: 2017, baseType: !1386, size: 64, offset: 320)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1598, file: !135, line: 2019, baseType: !484, size: 64, offset: 384)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1598, file: !135, line: 2020, baseType: !484, size: 64, offset: 448)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1598, file: !135, line: 2021, baseType: !484, size: 64, offset: 512)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1598, file: !135, line: 2022, baseType: !484, size: 64, offset: 576)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1598, file: !135, line: 2023, baseType: !484, size: 64, offset: 640)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !487, file: !135, line: 3400, baseType: !1612, size: 832)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1612, file: !135, line: 2431, baseType: !523, size: 192)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1612, file: !135, line: 2433, baseType: !484, size: 64, offset: 192)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1612, file: !135, line: 2434, baseType: !484, size: 64, offset: 256)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1612, file: !135, line: 2435, baseType: !484, size: 64, offset: 320)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1612, file: !135, line: 2436, baseType: !484, size: 64, offset: 384)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1612, file: !135, line: 2437, baseType: !1386, size: 64, offset: 448)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1612, file: !135, line: 2438, baseType: !484, size: 64, offset: 512)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1612, file: !135, line: 2440, baseType: !484, size: 64, offset: 576)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1612, file: !135, line: 2441, baseType: !484, size: 64, offset: 640)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1612, file: !135, line: 2443, baseType: !1624, size: 128, offset: 704)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !1626)
!1626 = !{!1627}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1625, file: !135, line: 182, baseType: !1391, size: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !487, file: !135, line: 3401, baseType: !1629, size: 320)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !1630)
!1630 = !{!1631, !1632, !1639}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1629, file: !135, line: 3329, baseType: !523, size: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1629, file: !135, line: 3330, baseType: !1633, size: 64, offset: 192)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !1635)
!1635 = !{!1636, !1637, !1638}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1634, file: !135, line: 3322, baseType: !1633, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1634, file: !135, line: 3323, baseType: !1633, size: 64, offset: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1634, file: !135, line: 3324, baseType: !484, size: 64, offset: 128)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1629, file: !135, line: 3331, baseType: !1633, size: 64, offset: 256)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !487, file: !135, line: 3402, baseType: !1641, size: 256)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !1642)
!1642 = !{!1643, !1644}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1641, file: !135, line: 1541, baseType: !523, size: 192)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1641, file: !135, line: 1542, baseType: !1645, size: 64, offset: 192)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !1648)
!1648 = !{!1649}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1647, file: !135, line: 1538, baseType: !1650, size: 192)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !1651)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !1652)
!1652 = !{!1653, !1654, !1655}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1651, file: !135, line: 1537, baseType: !7, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1651, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1651, file: !135, line: 1537, baseType: !1656, size: 128, offset: 64)
!1656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1657, size: 128, elements: !583)
!1657 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !1659)
!1659 = !{!1660, !1661}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1658, file: !135, line: 1533, baseType: !484, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1658, file: !135, line: 1534, baseType: !484, size: 64, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !487, file: !135, line: 3403, baseType: !1663, size: 512)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !1664)
!1664 = !{!1665, !1666, !1667, !1668, !1674, !1675, !1676}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1663, file: !135, line: 1939, baseType: !523, size: 192)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1663, file: !135, line: 1940, baseType: !609, size: 32, offset: 192)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1663, file: !135, line: 1941, baseType: !358, size: 32, offset: 224)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1663, file: !135, line: 1946, baseType: !1669, size: 32, offset: 256)
!1669 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !1670)
!1670 = !{!1671, !1672, !1673}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1669, file: !135, line: 1943, baseType: !376, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1669, file: !135, line: 1944, baseType: !383, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1669, file: !135, line: 1945, baseType: !134, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1663, file: !135, line: 1950, baseType: !798, size: 64, offset: 320)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1663, file: !135, line: 1951, baseType: !798, size: 64, offset: 384)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1663, file: !135, line: 1953, baseType: !861, size: 64, offset: 448)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !487, file: !135, line: 3404, baseType: !1678, size: 1664)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !1679)
!1679 = !{!1680, !1681}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1678, file: !135, line: 3338, baseType: !523, size: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1678, file: !135, line: 3341, baseType: !1682, size: 1472, offset: 192)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1683, line: 410, size: 1472, elements: !1684)
!1683 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1684 = !{!1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1682, file: !1683, line: 412, baseType: !477, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1682, file: !1683, line: 413, baseType: !477, size: 32, offset: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1682, file: !1683, line: 414, baseType: !477, size: 32, offset: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1682, file: !1683, line: 415, baseType: !477, size: 32, offset: 96)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1682, file: !1683, line: 416, baseType: !477, size: 32, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1682, file: !1683, line: 417, baseType: !477, size: 32, offset: 160)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1682, file: !1683, line: 418, baseType: !476, size: 8, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1682, file: !1683, line: 419, baseType: !476, size: 8, offset: 200)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1682, file: !1683, line: 420, baseType: !1694, size: 8, offset: 208)
!1694 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1682, file: !1683, line: 421, baseType: !1694, size: 8, offset: 216)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1682, file: !1683, line: 422, baseType: !1694, size: 8, offset: 224)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1682, file: !1683, line: 423, baseType: !1694, size: 8, offset: 232)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1682, file: !1683, line: 424, baseType: !1694, size: 8, offset: 240)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1682, file: !1683, line: 425, baseType: !1694, size: 8, offset: 248)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1682, file: !1683, line: 426, baseType: !1694, size: 8, offset: 256)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1682, file: !1683, line: 427, baseType: !1694, size: 8, offset: 264)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1682, file: !1683, line: 428, baseType: !1694, size: 8, offset: 272)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1682, file: !1683, line: 429, baseType: !1694, size: 8, offset: 280)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1682, file: !1683, line: 430, baseType: !1694, size: 8, offset: 288)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1682, file: !1683, line: 431, baseType: !1694, size: 8, offset: 296)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1682, file: !1683, line: 432, baseType: !1694, size: 8, offset: 304)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1682, file: !1683, line: 433, baseType: !1694, size: 8, offset: 312)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1682, file: !1683, line: 434, baseType: !1694, size: 8, offset: 320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1682, file: !1683, line: 435, baseType: !1694, size: 8, offset: 328)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1682, file: !1683, line: 436, baseType: !1694, size: 8, offset: 336)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1682, file: !1683, line: 437, baseType: !1694, size: 8, offset: 344)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1682, file: !1683, line: 438, baseType: !1694, size: 8, offset: 352)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1682, file: !1683, line: 439, baseType: !1694, size: 8, offset: 360)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1682, file: !1683, line: 440, baseType: !1694, size: 8, offset: 368)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1682, file: !1683, line: 441, baseType: !1694, size: 8, offset: 376)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1682, file: !1683, line: 442, baseType: !1694, size: 8, offset: 384)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1682, file: !1683, line: 443, baseType: !1694, size: 8, offset: 392)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1682, file: !1683, line: 444, baseType: !1694, size: 8, offset: 400)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1682, file: !1683, line: 445, baseType: !1694, size: 8, offset: 408)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1682, file: !1683, line: 446, baseType: !1694, size: 8, offset: 416)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1682, file: !1683, line: 447, baseType: !1694, size: 8, offset: 424)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1682, file: !1683, line: 448, baseType: !1694, size: 8, offset: 432)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1682, file: !1683, line: 449, baseType: !1694, size: 8, offset: 440)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1682, file: !1683, line: 450, baseType: !1694, size: 8, offset: 448)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1682, file: !1683, line: 451, baseType: !1694, size: 8, offset: 456)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1682, file: !1683, line: 452, baseType: !1694, size: 8, offset: 464)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1682, file: !1683, line: 453, baseType: !1694, size: 8, offset: 472)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1682, file: !1683, line: 454, baseType: !1694, size: 8, offset: 480)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1682, file: !1683, line: 455, baseType: !1694, size: 8, offset: 488)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1682, file: !1683, line: 456, baseType: !1694, size: 8, offset: 496)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1682, file: !1683, line: 457, baseType: !1694, size: 8, offset: 504)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1682, file: !1683, line: 458, baseType: !1694, size: 8, offset: 512)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1682, file: !1683, line: 459, baseType: !1694, size: 8, offset: 520)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1682, file: !1683, line: 460, baseType: !1694, size: 8, offset: 528)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1682, file: !1683, line: 461, baseType: !1694, size: 8, offset: 536)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1682, file: !1683, line: 462, baseType: !1694, size: 8, offset: 544)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1682, file: !1683, line: 463, baseType: !1694, size: 8, offset: 552)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1682, file: !1683, line: 464, baseType: !1694, size: 8, offset: 560)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1682, file: !1683, line: 465, baseType: !1694, size: 8, offset: 568)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1682, file: !1683, line: 466, baseType: !1694, size: 8, offset: 576)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1682, file: !1683, line: 467, baseType: !1694, size: 8, offset: 584)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1682, file: !1683, line: 468, baseType: !1694, size: 8, offset: 592)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1682, file: !1683, line: 469, baseType: !1694, size: 8, offset: 600)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1682, file: !1683, line: 470, baseType: !1694, size: 8, offset: 608)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1682, file: !1683, line: 471, baseType: !1694, size: 8, offset: 616)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1682, file: !1683, line: 472, baseType: !1694, size: 8, offset: 624)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1682, file: !1683, line: 473, baseType: !1694, size: 8, offset: 632)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1682, file: !1683, line: 474, baseType: !1694, size: 8, offset: 640)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1682, file: !1683, line: 475, baseType: !1694, size: 8, offset: 648)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1682, file: !1683, line: 476, baseType: !1694, size: 8, offset: 656)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1682, file: !1683, line: 477, baseType: !1694, size: 8, offset: 664)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1682, file: !1683, line: 478, baseType: !1694, size: 8, offset: 672)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1682, file: !1683, line: 479, baseType: !1694, size: 8, offset: 680)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1682, file: !1683, line: 480, baseType: !1694, size: 8, offset: 688)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1682, file: !1683, line: 481, baseType: !1694, size: 8, offset: 696)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1682, file: !1683, line: 482, baseType: !1694, size: 8, offset: 704)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1682, file: !1683, line: 483, baseType: !1694, size: 8, offset: 712)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1682, file: !1683, line: 484, baseType: !1694, size: 8, offset: 720)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1682, file: !1683, line: 485, baseType: !1694, size: 8, offset: 728)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1682, file: !1683, line: 486, baseType: !1694, size: 8, offset: 736)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1682, file: !1683, line: 487, baseType: !1694, size: 8, offset: 744)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1682, file: !1683, line: 488, baseType: !1694, size: 8, offset: 752)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1682, file: !1683, line: 489, baseType: !1694, size: 8, offset: 760)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1682, file: !1683, line: 490, baseType: !1694, size: 8, offset: 768)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1682, file: !1683, line: 491, baseType: !1694, size: 8, offset: 776)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1682, file: !1683, line: 492, baseType: !1694, size: 8, offset: 784)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1682, file: !1683, line: 493, baseType: !1694, size: 8, offset: 792)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1682, file: !1683, line: 494, baseType: !1694, size: 8, offset: 800)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1682, file: !1683, line: 495, baseType: !1694, size: 8, offset: 808)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1682, file: !1683, line: 496, baseType: !1694, size: 8, offset: 816)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1682, file: !1683, line: 497, baseType: !1694, size: 8, offset: 824)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1682, file: !1683, line: 498, baseType: !1694, size: 8, offset: 832)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1682, file: !1683, line: 499, baseType: !1694, size: 8, offset: 840)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1682, file: !1683, line: 500, baseType: !1694, size: 8, offset: 848)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1682, file: !1683, line: 501, baseType: !1694, size: 8, offset: 856)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1682, file: !1683, line: 502, baseType: !1694, size: 8, offset: 864)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1682, file: !1683, line: 503, baseType: !1694, size: 8, offset: 872)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1682, file: !1683, line: 504, baseType: !1694, size: 8, offset: 880)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1682, file: !1683, line: 505, baseType: !1694, size: 8, offset: 888)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1682, file: !1683, line: 506, baseType: !1694, size: 8, offset: 896)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1682, file: !1683, line: 507, baseType: !1694, size: 8, offset: 904)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1682, file: !1683, line: 508, baseType: !1694, size: 8, offset: 912)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1682, file: !1683, line: 509, baseType: !1694, size: 8, offset: 920)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1682, file: !1683, line: 510, baseType: !1694, size: 8, offset: 928)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1682, file: !1683, line: 511, baseType: !1694, size: 8, offset: 936)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1682, file: !1683, line: 512, baseType: !1694, size: 8, offset: 944)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1682, file: !1683, line: 513, baseType: !1694, size: 8, offset: 952)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1682, file: !1683, line: 514, baseType: !1694, size: 8, offset: 960)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1682, file: !1683, line: 515, baseType: !1694, size: 8, offset: 968)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1682, file: !1683, line: 516, baseType: !1694, size: 8, offset: 976)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1682, file: !1683, line: 517, baseType: !1694, size: 8, offset: 984)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1682, file: !1683, line: 518, baseType: !1694, size: 8, offset: 992)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1682, file: !1683, line: 519, baseType: !1694, size: 8, offset: 1000)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1682, file: !1683, line: 520, baseType: !1694, size: 8, offset: 1008)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1682, file: !1683, line: 521, baseType: !1694, size: 8, offset: 1016)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1682, file: !1683, line: 522, baseType: !1694, size: 8, offset: 1024)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1682, file: !1683, line: 523, baseType: !1694, size: 8, offset: 1032)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1682, file: !1683, line: 524, baseType: !1694, size: 8, offset: 1040)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1682, file: !1683, line: 525, baseType: !1694, size: 8, offset: 1048)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1682, file: !1683, line: 526, baseType: !1694, size: 8, offset: 1056)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1682, file: !1683, line: 527, baseType: !1694, size: 8, offset: 1064)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1682, file: !1683, line: 528, baseType: !1694, size: 8, offset: 1072)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1682, file: !1683, line: 529, baseType: !1694, size: 8, offset: 1080)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1682, file: !1683, line: 530, baseType: !1694, size: 8, offset: 1088)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1682, file: !1683, line: 531, baseType: !1694, size: 8, offset: 1096)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1682, file: !1683, line: 532, baseType: !1694, size: 8, offset: 1104)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1682, file: !1683, line: 533, baseType: !1694, size: 8, offset: 1112)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1682, file: !1683, line: 534, baseType: !1694, size: 8, offset: 1120)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1682, file: !1683, line: 535, baseType: !1694, size: 8, offset: 1128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1682, file: !1683, line: 536, baseType: !1694, size: 8, offset: 1136)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1682, file: !1683, line: 537, baseType: !1694, size: 8, offset: 1144)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1682, file: !1683, line: 538, baseType: !1694, size: 8, offset: 1152)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1682, file: !1683, line: 539, baseType: !1694, size: 8, offset: 1160)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1682, file: !1683, line: 540, baseType: !1694, size: 8, offset: 1168)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1682, file: !1683, line: 541, baseType: !1694, size: 8, offset: 1176)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1682, file: !1683, line: 542, baseType: !1694, size: 8, offset: 1184)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1682, file: !1683, line: 543, baseType: !1694, size: 8, offset: 1192)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1682, file: !1683, line: 544, baseType: !1694, size: 8, offset: 1200)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1682, file: !1683, line: 545, baseType: !1694, size: 8, offset: 1208)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1682, file: !1683, line: 546, baseType: !1694, size: 8, offset: 1216)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1682, file: !1683, line: 547, baseType: !1694, size: 8, offset: 1224)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1682, file: !1683, line: 548, baseType: !1694, size: 8, offset: 1232)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1682, file: !1683, line: 549, baseType: !1694, size: 8, offset: 1240)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1682, file: !1683, line: 550, baseType: !1694, size: 8, offset: 1248)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1682, file: !1683, line: 551, baseType: !1694, size: 8, offset: 1256)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1682, file: !1683, line: 552, baseType: !1694, size: 8, offset: 1264)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1682, file: !1683, line: 553, baseType: !1694, size: 8, offset: 1272)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1682, file: !1683, line: 554, baseType: !1694, size: 8, offset: 1280)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1682, file: !1683, line: 555, baseType: !1694, size: 8, offset: 1288)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1682, file: !1683, line: 556, baseType: !1694, size: 8, offset: 1296)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1682, file: !1683, line: 557, baseType: !1694, size: 8, offset: 1304)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1682, file: !1683, line: 558, baseType: !1694, size: 8, offset: 1312)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1682, file: !1683, line: 559, baseType: !1694, size: 8, offset: 1320)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1682, file: !1683, line: 560, baseType: !1694, size: 8, offset: 1328)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1682, file: !1683, line: 561, baseType: !1694, size: 8, offset: 1336)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1682, file: !1683, line: 562, baseType: !1694, size: 8, offset: 1344)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1682, file: !1683, line: 563, baseType: !1694, size: 8, offset: 1352)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1682, file: !1683, line: 564, baseType: !1694, size: 8, offset: 1360)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1682, file: !1683, line: 565, baseType: !1694, size: 8, offset: 1368)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1682, file: !1683, line: 566, baseType: !1694, size: 8, offset: 1376)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1682, file: !1683, line: 567, baseType: !1694, size: 8, offset: 1384)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1682, file: !1683, line: 568, baseType: !1694, size: 8, offset: 1392)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1682, file: !1683, line: 569, baseType: !1694, size: 8, offset: 1400)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1682, file: !1683, line: 570, baseType: !1694, size: 8, offset: 1408)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1682, file: !1683, line: 571, baseType: !1694, size: 8, offset: 1416)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1682, file: !1683, line: 572, baseType: !1694, size: 8, offset: 1424)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1682, file: !1683, line: 573, baseType: !1694, size: 8, offset: 1432)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1682, file: !1683, line: 574, baseType: !1694, size: 8, offset: 1440)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !487, file: !135, line: 3405, baseType: !1850, size: 384)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1850, file: !135, line: 3353, baseType: !523, size: 192)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1850, file: !135, line: 3356, baseType: !1854, size: 192, offset: 192)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1683, line: 578, size: 192, elements: !1855)
!1855 = !{!1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1854, file: !1683, line: 580, baseType: !477, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1854, file: !1683, line: 581, baseType: !477, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1854, file: !1683, line: 582, baseType: !477, size: 32, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1854, file: !1683, line: 583, baseType: !477, size: 32, offset: 96)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1854, file: !1683, line: 584, baseType: !476, size: 8, offset: 128)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1854, file: !1683, line: 585, baseType: !476, size: 8, offset: 136)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1854, file: !1683, line: 586, baseType: !476, size: 8, offset: 144)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1854, file: !1683, line: 587, baseType: !476, size: 8, offset: 152)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1854, file: !1683, line: 588, baseType: !476, size: 8, offset: 160)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1854, file: !1683, line: 589, baseType: !476, size: 8, offset: 168)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1854, file: !1683, line: 590, baseType: !476, size: 8, offset: 176)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !810)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_ref", file: !3, line: 129, size: 576, elements: !1872)
!1872 = !{!1873, !1874, !1875, !1876, !1877, !1913, !1914, !1915, !1916, !1917}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1871, file: !3, line: 131, baseType: !484, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1871, file: !3, line: 132, baseType: !7, size: 32, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1871, file: !3, line: 134, baseType: !1335, size: 32, offset: 96)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "stored", scope: !1871, file: !3, line: 135, baseType: !1409, size: 64, offset: 128)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_in_loop", scope: !1871, file: !3, line: 137, baseType: !1878, size: 64, offset: 192)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_mem_ref_locs_p_heap", file: !3, line: 125, baseType: !1880)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_mem_ref_locs_p_heap", file: !3, line: 125, size: 128, elements: !1881)
!1881 = !{!1882}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1880, file: !3, line: 125, baseType: !1883, size: 128)
!1883 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_mem_ref_locs_p_base", file: !3, line: 124, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_mem_ref_locs_p_base", file: !3, line: 124, size: 128, elements: !1885)
!1885 = !{!1886, !1887, !1888}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1884, file: !3, line: 124, baseType: !7, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1884, file: !3, line: 124, baseType: !7, size: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1884, file: !3, line: 124, baseType: !1889, size: 64, offset: 64)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1890, size: 64, elements: !583)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_ref_locs_p", file: !3, line: 122, baseType: !1891)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_ref_locs", file: !3, line: 119, size: 64, elements: !1893)
!1893 = !{!1894}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "locs", scope: !1892, file: !3, line: 121, baseType: !1895, size: 64)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_mem_ref_loc_p_heap", file: !3, line: 115, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_mem_ref_loc_p_heap", file: !3, line: 115, size: 128, elements: !1898)
!1898 = !{!1899}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1897, file: !3, line: 115, baseType: !1900, size: 128)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_mem_ref_loc_p_base", file: !3, line: 114, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_mem_ref_loc_p_base", file: !3, line: 114, size: 128, elements: !1902)
!1902 = !{!1903, !1904, !1905}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1901, file: !3, line: 114, baseType: !7, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1901, file: !3, line: 114, baseType: !7, size: 32, offset: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1901, file: !3, line: 114, baseType: !1906, size: 64, offset: 64)
!1906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1907, size: 64, elements: !583)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_ref_loc_p", file: !3, line: 112, baseType: !1908)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_ref_loc", file: !3, line: 108, size: 128, elements: !1910)
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1909, file: !3, line: 110, baseType: !842, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1909, file: !3, line: 111, baseType: !808, size: 64, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "vops", scope: !1871, file: !3, line: 140, baseType: !1409, size: 64, offset: 256)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "indep_loop", scope: !1871, file: !3, line: 146, baseType: !1409, size: 64, offset: 320)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "dep_loop", scope: !1871, file: !3, line: 153, baseType: !1409, size: 64, offset: 384)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "indep_ref", scope: !1871, file: !3, line: 155, baseType: !1409, size: 64, offset: 448)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "dep_ref", scope: !1871, file: !3, line: 157, baseType: !1409, size: 64, offset: 512)
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !485, line: 59, baseType: !1919)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !487)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_bitmap_heap", file: !3, line: 164, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_bitmap_heap", file: !3, line: 164, size: 128, elements: !1925)
!1925 = !{!1926}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1924, file: !3, line: 164, baseType: !1927, size: 128)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_bitmap_base", file: !3, line: 163, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_bitmap_base", file: !3, line: 163, size: 128, elements: !1929)
!1929 = !{!1930, !1931, !1932}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1928, file: !3, line: 163, baseType: !7, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1928, file: !3, line: 163, baseType: !7, size: 32, offset: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1928, file: !3, line: 163, baseType: !1933, size: 64, offset: 64)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1409, size: 64, elements: !583)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_htab_t_heap", file: !3, line: 167, baseType: !1936)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_htab_t_heap", file: !3, line: 167, size: 128, elements: !1937)
!1937 = !{!1938}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1936, file: !3, line: 167, baseType: !1939, size: 128)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_htab_t_base", file: !3, line: 166, baseType: !1940)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_htab_t_base", file: !3, line: 166, size: 128, elements: !1941)
!1941 = !{!1942, !1943, !1944}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1940, file: !3, line: 166, baseType: !7, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1940, file: !3, line: 166, baseType: !7, size: 32, offset: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1940, file: !3, line: 166, baseType: !1945, size: 64, offset: 64)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1325, size: 64, elements: !583)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1948)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vop_to_refs_elt", file: !3, line: 1416, size: 192, elements: !1949)
!1949 = !{!1950, !1951, !1952}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1948, file: !3, line: 1419, baseType: !7, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "refs_all", scope: !1948, file: !3, line: 1422, baseType: !1409, size: 64, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "refs_stored", scope: !1948, file: !3, line: 1425, baseType: !1409, size: 64, offset: 128)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_ref_p", file: !3, line: 158, baseType: !1921)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_mem_ref_p_heap", file: !3, line: 161, baseType: !1959)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_mem_ref_p_heap", file: !3, line: 161, size: 128, elements: !1960)
!1960 = !{!1961}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1959, file: !3, line: 161, baseType: !1962, size: 128)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_mem_ref_p_base", file: !3, line: 160, baseType: !1963)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_mem_ref_p_base", file: !3, line: 160, size: 128, elements: !1964)
!1964 = !{!1965, !1966, !1967}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1963, file: !3, line: 160, baseType: !7, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1963, file: !3, line: 160, baseType: !7, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1963, file: !3, line: 160, baseType: !1968, size: 64, offset: 64)
!1968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1956, size: 64, elements: !583)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1971, line: 32, baseType: !1972)
!1971 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1971, line: 32, size: 96, elements: !1973)
!1973 = !{!1974}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1972, file: !1971, line: 32, baseType: !1975, size: 96)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1971, line: 31, baseType: !1976)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1971, line: 31, size: 96, elements: !1977)
!1977 = !{!1978, !1979, !1980}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1976, file: !1971, line: 31, baseType: !7, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1976, file: !1971, line: 31, baseType: !7, size: 32, offset: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1976, file: !1971, line: 31, baseType: !1981, size: 32, offset: 64)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !477, size: 32, elements: !583)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lim_aux_data", file: !3, line: 79, size: 320, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1988, !1989}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "max_loop", scope: !1983, file: !3, line: 81, baseType: !1023, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "tgt_loop", scope: !1983, file: !3, line: 84, baseType: !1023, size: 64, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "always_executed_in", scope: !1983, file: !3, line: 87, baseType: !1023, size: 64, offset: 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !1983, file: !3, line: 92, baseType: !7, size: 32, offset: 192)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "depends", scope: !1983, file: !3, line: 95, baseType: !1990, size: 64, offset: 256)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "depend", file: !3, line: 71, size: 128, elements: !1992)
!1992 = !{!1993, !1994}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1991, file: !3, line: 73, baseType: !808, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1991, file: !3, line: 74, baseType: !1990, size: 64, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !468, line: 30, baseType: !1996)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !135, line: 1893, baseType: !849)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fmt_data", file: !3, line: 1153, size: 128, elements: !2000)
!2000 = !{!2001, !2002}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "loop", scope: !1999, file: !3, line: 1155, baseType: !1023, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "orig_loop", scope: !1999, file: !3, line: 1156, baseType: !1023, size: 64, offset: 64)
!2003 = !{!2004, !0, !2009, !2011}
!2004 = !DIGlobalVariableExpression(var: !2005, expr: !DIExpression())
!2005 = distinct !DIGlobalVariable(name: "lsm_tmp_name", scope: !2, file: !3, line: 1724, type: !2006, isLocal: true, isDefinition: true)
!2006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 328, elements: !2007)
!2007 = !{!2008}
!2008 = !DISubrange(count: 41)
!2009 = !DIGlobalVariableExpression(var: !2010, expr: !DIExpression())
!2010 = distinct !DIGlobalVariable(name: "lim_aux_data_map", scope: !2, file: !3, line: 104, type: !1412, isLocal: true, isDefinition: true)
!2011 = !DIGlobalVariableExpression(var: !2012, expr: !DIExpression())
!2012 = distinct !DIGlobalVariable(name: "memory_accesses", scope: !2, file: !3, line: 195, type: !2013, isLocal: true, isDefinition: true)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 171, size: 448, elements: !2014)
!2014 = !{!2015, !2016, !2017, !2018, !2019, !2020, !2021}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !2013, file: !3, line: 174, baseType: !1325, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "refs_list", scope: !2013, file: !3, line: 177, baseType: !1957, size: 64, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "refs_in_loop", scope: !2013, file: !3, line: 180, baseType: !1922, size: 64, offset: 128)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "all_refs_in_loop", scope: !2013, file: !3, line: 184, baseType: !1922, size: 64, offset: 192)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "clobbered_vops", scope: !2013, file: !3, line: 187, baseType: !1922, size: 64, offset: 256)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "vop_ref_map", scope: !2013, file: !3, line: 191, baseType: !1934, size: 64, offset: 320)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "ttae_cache", scope: !2013, file: !3, line: 194, baseType: !1412, size: 64, offset: 384)
!2022 = !{i32 2, !"Dwarf Version", i32 4}
!2023 = !{i32 2, !"Debug Info Version", i32 3}
!2024 = !{i32 1, !"wchar_size", i32 4}
!2025 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2026 = distinct !DISubprogram(name: "vprintf", scope: !2027, file: !2027, line: 39, type: !2028, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2038)
!2027 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!477, !2030, !2031}
!2030 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !482)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2033)
!2033 = !{!2034, !2035, !2036, !2037}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2032, file: !3, baseType: !7, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2032, file: !3, baseType: !7, size: 32, offset: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2032, file: !3, baseType: !481, size: 64, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2032, file: !3, baseType: !481, size: 64, offset: 128)
!2038 = !{!2039, !2040}
!2039 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2026, file: !2027, line: 39, type: !2030)
!2040 = !DILocalVariable(name: "__arg", arg: 2, scope: !2026, file: !2027, line: 39, type: !2031)
!2041 = !DILocation(line: 0, scope: !2026)
!2042 = !DILocation(line: 41, column: 20, scope: !2026)
!2043 = !DILocation(line: 41, column: 10, scope: !2026)
!2044 = !DILocation(line: 41, column: 3, scope: !2026)
!2045 = distinct !DISubprogram(name: "getchar", scope: !2027, file: !2027, line: 47, type: !2046, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2048)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{!477}
!2048 = !{}
!2049 = !DILocation(line: 49, column: 16, scope: !2045)
!2050 = !DILocation(line: 49, column: 10, scope: !2045)
!2051 = !DILocation(line: 49, column: 3, scope: !2045)
!2052 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2027, file: !2027, line: 56, type: !2053, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2106)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!477, !2055}
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2057, line: 7, baseType: !2058)
!2057 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2059, line: 49, size: 1728, elements: !2060)
!2059 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2060 = !{!2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2076, !2078, !2079, !2080, !2083, !2085, !2086, !2087, !2090, !2092, !2095, !2098, !2099, !2100, !2101, !2102}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2058, file: !2059, line: 51, baseType: !477, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2058, file: !2059, line: 54, baseType: !479, size: 64, offset: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2058, file: !2059, line: 55, baseType: !479, size: 64, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2058, file: !2059, line: 56, baseType: !479, size: 64, offset: 192)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2058, file: !2059, line: 57, baseType: !479, size: 64, offset: 256)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2058, file: !2059, line: 58, baseType: !479, size: 64, offset: 320)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2058, file: !2059, line: 59, baseType: !479, size: 64, offset: 384)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2058, file: !2059, line: 60, baseType: !479, size: 64, offset: 448)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2058, file: !2059, line: 61, baseType: !479, size: 64, offset: 512)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2058, file: !2059, line: 64, baseType: !479, size: 64, offset: 576)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2058, file: !2059, line: 65, baseType: !479, size: 64, offset: 640)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2058, file: !2059, line: 66, baseType: !479, size: 64, offset: 704)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2058, file: !2059, line: 68, baseType: !2074, size: 64, offset: 768)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2059, line: 36, flags: DIFlagFwdDecl)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2058, file: !2059, line: 70, baseType: !2077, size: 64, offset: 832)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2058, file: !2059, line: 72, baseType: !477, size: 32, offset: 896)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2058, file: !2059, line: 73, baseType: !477, size: 32, offset: 928)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2058, file: !2059, line: 74, baseType: !2081, size: 64, offset: 960)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2082, line: 152, baseType: !540)
!2082 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2058, file: !2059, line: 77, baseType: !2084, size: 16, offset: 1024)
!2084 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2058, file: !2059, line: 78, baseType: !1694, size: 8, offset: 1040)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2058, file: !2059, line: 79, baseType: !582, size: 8, offset: 1048)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2058, file: !2059, line: 81, baseType: !2088, size: 64, offset: 1088)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2059, line: 43, baseType: null)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2058, file: !2059, line: 89, baseType: !2091, size: 64, offset: 1152)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2082, line: 153, baseType: !540)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2058, file: !2059, line: 91, baseType: !2093, size: 64, offset: 1216)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2059, line: 37, flags: DIFlagFwdDecl)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2058, file: !2059, line: 92, baseType: !2096, size: 64, offset: 1280)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2059, line: 38, flags: DIFlagFwdDecl)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2058, file: !2059, line: 93, baseType: !2077, size: 64, offset: 1344)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2058, file: !2059, line: 94, baseType: !481, size: 64, offset: 1408)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2058, file: !2059, line: 95, baseType: !953, size: 64, offset: 1472)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2058, file: !2059, line: 96, baseType: !477, size: 32, offset: 1536)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2058, file: !2059, line: 98, baseType: !2103, size: 160, offset: 1568)
!2103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 160, elements: !2104)
!2104 = !{!2105}
!2105 = !DISubrange(count: 20)
!2106 = !{!2107}
!2107 = !DILocalVariable(name: "__fp", arg: 1, scope: !2052, file: !2027, line: 56, type: !2055)
!2108 = !DILocation(line: 0, scope: !2052)
!2109 = !DILocation(line: 58, column: 10, scope: !2052)
!2110 = !DILocation(line: 58, column: 3, scope: !2052)
!2111 = distinct !DISubprogram(name: "getc_unlocked", scope: !2027, file: !2027, line: 66, type: !2053, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2112)
!2112 = !{!2113}
!2113 = !DILocalVariable(name: "__fp", arg: 1, scope: !2111, file: !2027, line: 66, type: !2055)
!2114 = !DILocation(line: 0, scope: !2111)
!2115 = !DILocation(line: 68, column: 10, scope: !2111)
!2116 = !DILocation(line: 68, column: 3, scope: !2111)
!2117 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2027, file: !2027, line: 73, type: !2046, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2048)
!2118 = !DILocation(line: 75, column: 10, scope: !2117)
!2119 = !DILocation(line: 75, column: 3, scope: !2117)
!2120 = distinct !DISubprogram(name: "putchar", scope: !2027, file: !2027, line: 82, type: !2121, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2123)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{!477, !477}
!2123 = !{!2124}
!2124 = !DILocalVariable(name: "__c", arg: 1, scope: !2120, file: !2027, line: 82, type: !477)
!2125 = !DILocation(line: 0, scope: !2120)
!2126 = !DILocation(line: 84, column: 21, scope: !2120)
!2127 = !DILocation(line: 84, column: 10, scope: !2120)
!2128 = !DILocation(line: 84, column: 3, scope: !2120)
!2129 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2027, file: !2027, line: 91, type: !2130, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2132)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{!477, !477, !2055}
!2132 = !{!2133, !2134}
!2133 = !DILocalVariable(name: "__c", arg: 1, scope: !2129, file: !2027, line: 91, type: !477)
!2134 = !DILocalVariable(name: "__stream", arg: 2, scope: !2129, file: !2027, line: 91, type: !2055)
!2135 = !DILocation(line: 0, scope: !2129)
!2136 = !DILocation(line: 93, column: 10, scope: !2129)
!2137 = !DILocation(line: 93, column: 3, scope: !2129)
!2138 = distinct !DISubprogram(name: "putc_unlocked", scope: !2027, file: !2027, line: 101, type: !2130, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2139)
!2139 = !{!2140, !2141}
!2140 = !DILocalVariable(name: "__c", arg: 1, scope: !2138, file: !2027, line: 101, type: !477)
!2141 = !DILocalVariable(name: "__stream", arg: 2, scope: !2138, file: !2027, line: 101, type: !2055)
!2142 = !DILocation(line: 0, scope: !2138)
!2143 = !DILocation(line: 103, column: 10, scope: !2138)
!2144 = !DILocation(line: 103, column: 3, scope: !2138)
!2145 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2027, file: !2027, line: 108, type: !2121, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2146)
!2146 = !{!2147}
!2147 = !DILocalVariable(name: "__c", arg: 1, scope: !2145, file: !2027, line: 108, type: !477)
!2148 = !DILocation(line: 0, scope: !2145)
!2149 = !DILocation(line: 110, column: 10, scope: !2145)
!2150 = !DILocation(line: 110, column: 3, scope: !2145)
!2151 = distinct !DISubprogram(name: "getline", scope: !2027, file: !2027, line: 118, type: !2152, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2156)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{!2154, !478, !2155, !2055}
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2082, line: 193, baseType: !540)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!2156 = !{!2157, !2158, !2159}
!2157 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2151, file: !2027, line: 118, type: !478)
!2158 = !DILocalVariable(name: "__n", arg: 2, scope: !2151, file: !2027, line: 118, type: !2155)
!2159 = !DILocalVariable(name: "__stream", arg: 3, scope: !2151, file: !2027, line: 118, type: !2055)
!2160 = !DILocation(line: 0, scope: !2151)
!2161 = !DILocation(line: 120, column: 10, scope: !2151)
!2162 = !DILocation(line: 120, column: 3, scope: !2151)
!2163 = distinct !DISubprogram(name: "feof_unlocked", scope: !2027, file: !2027, line: 128, type: !2053, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2164)
!2164 = !{!2165}
!2165 = !DILocalVariable(name: "__stream", arg: 1, scope: !2163, file: !2027, line: 128, type: !2055)
!2166 = !DILocation(line: 0, scope: !2163)
!2167 = !DILocation(line: 130, column: 10, scope: !2163)
!2168 = !DILocation(line: 130, column: 3, scope: !2163)
!2169 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2027, file: !2027, line: 135, type: !2053, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2170)
!2170 = !{!2171}
!2171 = !DILocalVariable(name: "__stream", arg: 1, scope: !2169, file: !2027, line: 135, type: !2055)
!2172 = !DILocation(line: 0, scope: !2169)
!2173 = !DILocation(line: 137, column: 10, scope: !2169)
!2174 = !DILocation(line: 137, column: 3, scope: !2169)
!2175 = distinct !DISubprogram(name: "tolower", scope: !2176, file: !2176, line: 207, type: !2121, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2177)
!2176 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2177 = !{!2178}
!2178 = !DILocalVariable(name: "__c", arg: 1, scope: !2175, file: !2176, line: 207, type: !477)
!2179 = !DILocation(line: 0, scope: !2175)
!2180 = !DILocation(line: 209, column: 22, scope: !2175)
!2181 = !DILocation(line: 209, column: 39, scope: !2175)
!2182 = !DILocation(line: 209, column: 38, scope: !2175)
!2183 = !DILocation(line: 209, column: 37, scope: !2175)
!2184 = !DILocation(line: 209, column: 10, scope: !2175)
!2185 = !DILocation(line: 209, column: 3, scope: !2175)
!2186 = distinct !DISubprogram(name: "toupper", scope: !2176, file: !2176, line: 213, type: !2121, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2187)
!2187 = !{!2188}
!2188 = !DILocalVariable(name: "__c", arg: 1, scope: !2186, file: !2176, line: 213, type: !477)
!2189 = !DILocation(line: 0, scope: !2186)
!2190 = !DILocation(line: 215, column: 22, scope: !2186)
!2191 = !DILocation(line: 215, column: 39, scope: !2186)
!2192 = !DILocation(line: 215, column: 38, scope: !2186)
!2193 = !DILocation(line: 215, column: 37, scope: !2186)
!2194 = !DILocation(line: 215, column: 10, scope: !2186)
!2195 = !DILocation(line: 215, column: 3, scope: !2186)
!2196 = distinct !DISubprogram(name: "atoi", scope: !2197, file: !2197, line: 361, type: !2198, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2200)
!2197 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2198 = !DISubroutineType(types: !2199)
!2199 = !{!477, !482}
!2200 = !{!2201}
!2201 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2196, file: !2197, line: 361, type: !482)
!2202 = !DILocation(line: 0, scope: !2196)
!2203 = !DILocation(line: 363, column: 16, scope: !2196)
!2204 = !DILocation(line: 363, column: 10, scope: !2196)
!2205 = !DILocation(line: 363, column: 3, scope: !2196)
!2206 = distinct !DISubprogram(name: "atol", scope: !2197, file: !2197, line: 366, type: !2207, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2209)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!540, !482}
!2209 = !{!2210}
!2210 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2206, file: !2197, line: 366, type: !482)
!2211 = !DILocation(line: 0, scope: !2206)
!2212 = !DILocation(line: 368, column: 10, scope: !2206)
!2213 = !DILocation(line: 368, column: 3, scope: !2206)
!2214 = distinct !DISubprogram(name: "atoll", scope: !2197, file: !2197, line: 373, type: !2215, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2218)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!2217, !482}
!2217 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2218 = !{!2219}
!2219 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2214, file: !2197, line: 373, type: !482)
!2220 = !DILocation(line: 0, scope: !2214)
!2221 = !DILocation(line: 375, column: 10, scope: !2214)
!2222 = !DILocation(line: 375, column: 3, scope: !2214)
!2223 = distinct !DISubprogram(name: "bsearch", scope: !2224, file: !2224, line: 20, type: !2225, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2228)
!2224 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2225 = !DISubroutineType(types: !2226)
!2226 = !{!481, !1167, !1167, !953, !953, !2227}
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2197, line: 808, baseType: !1338)
!2228 = !{!2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238}
!2229 = !DILocalVariable(name: "__key", arg: 1, scope: !2223, file: !2224, line: 20, type: !1167)
!2230 = !DILocalVariable(name: "__base", arg: 2, scope: !2223, file: !2224, line: 20, type: !1167)
!2231 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2223, file: !2224, line: 20, type: !953)
!2232 = !DILocalVariable(name: "__size", arg: 4, scope: !2223, file: !2224, line: 20, type: !953)
!2233 = !DILocalVariable(name: "__compar", arg: 5, scope: !2223, file: !2224, line: 21, type: !2227)
!2234 = !DILocalVariable(name: "__l", scope: !2223, file: !2224, line: 23, type: !953)
!2235 = !DILocalVariable(name: "__u", scope: !2223, file: !2224, line: 23, type: !953)
!2236 = !DILocalVariable(name: "__idx", scope: !2223, file: !2224, line: 23, type: !953)
!2237 = !DILocalVariable(name: "__p", scope: !2223, file: !2224, line: 24, type: !1167)
!2238 = !DILocalVariable(name: "__comparison", scope: !2223, file: !2224, line: 25, type: !477)
!2239 = !DILocation(line: 0, scope: !2223)
!2240 = !DILocation(line: 29, column: 3, scope: !2223)
!2241 = !DILocation(line: 27, column: 7, scope: !2223)
!2242 = !DILocation(line: 29, column: 14, scope: !2223)
!2243 = !DILocation(line: 31, column: 20, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2223, file: !2224, line: 30, column: 5)
!2245 = !DILocation(line: 31, column: 27, scope: !2244)
!2246 = !DILocation(line: 32, column: 56, scope: !2244)
!2247 = !DILocation(line: 32, column: 47, scope: !2244)
!2248 = !DILocation(line: 33, column: 22, scope: !2244)
!2249 = !DILocation(line: 34, column: 24, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2244, file: !2224, line: 34, column: 11)
!2251 = !DILocation(line: 34, column: 11, scope: !2244)
!2252 = !DILocation(line: 36, column: 29, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2250, file: !2224, line: 36, column: 16)
!2254 = !DILocation(line: 36, column: 16, scope: !2250)
!2255 = !DILocation(line: 37, column: 14, scope: !2253)
!2256 = distinct !{!2256, !2240, !2257}
!2257 = !DILocation(line: 40, column: 5, scope: !2223)
!2258 = !DILocation(line: 43, column: 1, scope: !2223)
!2259 = distinct !DISubprogram(name: "atof", scope: !2260, file: !2260, line: 25, type: !2261, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2264)
!2260 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2261 = !DISubroutineType(types: !2262)
!2262 = !{!2263, !482}
!2263 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2264 = !{!2265}
!2265 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2259, file: !2260, line: 25, type: !482)
!2266 = !DILocation(line: 0, scope: !2259)
!2267 = !DILocation(line: 27, column: 10, scope: !2259)
!2268 = !DILocation(line: 27, column: 3, scope: !2259)
!2269 = distinct !DISubprogram(name: "strtoimax", scope: !2270, file: !2270, line: 324, type: !2271, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2277)
!2270 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!2273, !2030, !2276, !477}
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2274, line: 101, baseType: !2275)
!2274 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2082, line: 72, baseType: !540)
!2276 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !478)
!2277 = !{!2278, !2279, !2280}
!2278 = !DILocalVariable(name: "nptr", arg: 1, scope: !2269, file: !2270, line: 324, type: !2030)
!2279 = !DILocalVariable(name: "endptr", arg: 2, scope: !2269, file: !2270, line: 324, type: !2276)
!2280 = !DILocalVariable(name: "base", arg: 3, scope: !2269, file: !2270, line: 324, type: !477)
!2281 = !DILocation(line: 0, scope: !2269)
!2282 = !DILocation(line: 327, column: 10, scope: !2269)
!2283 = !DILocation(line: 327, column: 3, scope: !2269)
!2284 = distinct !DISubprogram(name: "strtoumax", scope: !2270, file: !2270, line: 336, type: !2285, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2289)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!2287, !2030, !2276, !477}
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2274, line: 102, baseType: !2288)
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2082, line: 73, baseType: !538)
!2289 = !{!2290, !2291, !2292}
!2290 = !DILocalVariable(name: "nptr", arg: 1, scope: !2284, file: !2270, line: 336, type: !2030)
!2291 = !DILocalVariable(name: "endptr", arg: 2, scope: !2284, file: !2270, line: 336, type: !2276)
!2292 = !DILocalVariable(name: "base", arg: 3, scope: !2284, file: !2270, line: 336, type: !477)
!2293 = !DILocation(line: 0, scope: !2284)
!2294 = !DILocation(line: 339, column: 10, scope: !2284)
!2295 = !DILocation(line: 339, column: 3, scope: !2284)
!2296 = distinct !DISubprogram(name: "wcstoimax", scope: !2270, file: !2270, line: 348, type: !2297, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{!2273, !2299, !2303, !477}
!2299 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2300)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2302)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2270, line: 34, baseType: !477)
!2303 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2304)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 64)
!2306 = !{!2307, !2308, !2309}
!2307 = !DILocalVariable(name: "nptr", arg: 1, scope: !2296, file: !2270, line: 348, type: !2299)
!2308 = !DILocalVariable(name: "endptr", arg: 2, scope: !2296, file: !2270, line: 348, type: !2303)
!2309 = !DILocalVariable(name: "base", arg: 3, scope: !2296, file: !2270, line: 348, type: !477)
!2310 = !DILocation(line: 0, scope: !2296)
!2311 = !DILocation(line: 351, column: 10, scope: !2296)
!2312 = !DILocation(line: 351, column: 3, scope: !2296)
!2313 = distinct !DISubprogram(name: "wcstoumax", scope: !2270, file: !2270, line: 362, type: !2314, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2316)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!2287, !2299, !2303, !477}
!2316 = !{!2317, !2318, !2319}
!2317 = !DILocalVariable(name: "nptr", arg: 1, scope: !2313, file: !2270, line: 362, type: !2299)
!2318 = !DILocalVariable(name: "endptr", arg: 2, scope: !2313, file: !2270, line: 362, type: !2303)
!2319 = !DILocalVariable(name: "base", arg: 3, scope: !2313, file: !2270, line: 362, type: !477)
!2320 = !DILocation(line: 0, scope: !2313)
!2321 = !DILocation(line: 365, column: 10, scope: !2313)
!2322 = !DILocation(line: 365, column: 3, scope: !2313)
!2323 = distinct !DISubprogram(name: "stat", scope: !2324, file: !2324, line: 453, type: !2325, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2362)
!2324 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2325 = !DISubroutineType(types: !2326)
!2326 = !{!477, !482, !2327}
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2329, line: 46, size: 1152, elements: !2330)
!2329 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2330 = !{!2331, !2333, !2335, !2337, !2339, !2341, !2343, !2344, !2345, !2346, !2348, !2350, !2358, !2359, !2360}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2328, file: !2329, line: 48, baseType: !2332, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2082, line: 145, baseType: !538)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2328, file: !2329, line: 53, baseType: !2334, size: 64, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2082, line: 148, baseType: !538)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2328, file: !2329, line: 61, baseType: !2336, size: 64, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2082, line: 151, baseType: !538)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2328, file: !2329, line: 62, baseType: !2338, size: 32, offset: 192)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2082, line: 150, baseType: !7)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2328, file: !2329, line: 64, baseType: !2340, size: 32, offset: 224)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2082, line: 146, baseType: !7)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2328, file: !2329, line: 65, baseType: !2342, size: 32, offset: 256)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2082, line: 147, baseType: !7)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2328, file: !2329, line: 67, baseType: !477, size: 32, offset: 288)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2328, file: !2329, line: 69, baseType: !2332, size: 64, offset: 320)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2328, file: !2329, line: 74, baseType: !2081, size: 64, offset: 384)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2328, file: !2329, line: 78, baseType: !2347, size: 64, offset: 448)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2082, line: 174, baseType: !540)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2328, file: !2329, line: 80, baseType: !2349, size: 64, offset: 512)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2082, line: 179, baseType: !540)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2328, file: !2329, line: 91, baseType: !2351, size: 128, offset: 576)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2352, line: 10, size: 128, elements: !2353)
!2352 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2353 = !{!2354, !2356}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2351, file: !2352, line: 12, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2082, line: 160, baseType: !540)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2351, file: !2352, line: 16, baseType: !2357, size: 64, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2082, line: 196, baseType: !540)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2328, file: !2329, line: 92, baseType: !2351, size: 128, offset: 704)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2328, file: !2329, line: 93, baseType: !2351, size: 128, offset: 832)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2328, file: !2329, line: 106, baseType: !2361, size: 192, offset: 960)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2357, size: 192, elements: !558)
!2362 = !{!2363, !2364}
!2363 = !DILocalVariable(name: "__path", arg: 1, scope: !2323, file: !2324, line: 453, type: !482)
!2364 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2323, file: !2324, line: 453, type: !2327)
!2365 = !DILocation(line: 0, scope: !2323)
!2366 = !DILocation(line: 455, column: 10, scope: !2323)
!2367 = !DILocation(line: 455, column: 3, scope: !2323)
!2368 = distinct !DISubprogram(name: "lstat", scope: !2324, file: !2324, line: 460, type: !2325, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2369)
!2369 = !{!2370, !2371}
!2370 = !DILocalVariable(name: "__path", arg: 1, scope: !2368, file: !2324, line: 460, type: !482)
!2371 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2368, file: !2324, line: 460, type: !2327)
!2372 = !DILocation(line: 0, scope: !2368)
!2373 = !DILocation(line: 462, column: 10, scope: !2368)
!2374 = !DILocation(line: 462, column: 3, scope: !2368)
!2375 = distinct !DISubprogram(name: "fstat", scope: !2324, file: !2324, line: 467, type: !2376, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2378)
!2376 = !DISubroutineType(types: !2377)
!2377 = !{!477, !477, !2327}
!2378 = !{!2379, !2380}
!2379 = !DILocalVariable(name: "__fd", arg: 1, scope: !2375, file: !2324, line: 467, type: !477)
!2380 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2375, file: !2324, line: 467, type: !2327)
!2381 = !DILocation(line: 0, scope: !2375)
!2382 = !DILocation(line: 469, column: 10, scope: !2375)
!2383 = !DILocation(line: 469, column: 3, scope: !2375)
!2384 = distinct !DISubprogram(name: "fstatat", scope: !2324, file: !2324, line: 474, type: !2385, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2387)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{!477, !477, !482, !2327, !477}
!2387 = !{!2388, !2389, !2390, !2391}
!2388 = !DILocalVariable(name: "__fd", arg: 1, scope: !2384, file: !2324, line: 474, type: !477)
!2389 = !DILocalVariable(name: "__filename", arg: 2, scope: !2384, file: !2324, line: 474, type: !482)
!2390 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2384, file: !2324, line: 474, type: !2327)
!2391 = !DILocalVariable(name: "__flag", arg: 4, scope: !2384, file: !2324, line: 474, type: !477)
!2392 = !DILocation(line: 0, scope: !2384)
!2393 = !DILocation(line: 477, column: 10, scope: !2384)
!2394 = !DILocation(line: 477, column: 3, scope: !2384)
!2395 = distinct !DISubprogram(name: "mknod", scope: !2324, file: !2324, line: 483, type: !2396, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2398)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{!477, !482, !2338, !2332}
!2398 = !{!2399, !2400, !2401}
!2399 = !DILocalVariable(name: "__path", arg: 1, scope: !2395, file: !2324, line: 483, type: !482)
!2400 = !DILocalVariable(name: "__mode", arg: 2, scope: !2395, file: !2324, line: 483, type: !2338)
!2401 = !DILocalVariable(name: "__dev", arg: 3, scope: !2395, file: !2324, line: 483, type: !2332)
!2402 = !DILocation(line: 0, scope: !2395)
!2403 = !DILocation(line: 485, column: 10, scope: !2395)
!2404 = !DILocation(line: 485, column: 3, scope: !2395)
!2405 = distinct !DISubprogram(name: "mknodat", scope: !2324, file: !2324, line: 491, type: !2406, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2408)
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!477, !477, !482, !2338, !2332}
!2408 = !{!2409, !2410, !2411, !2412}
!2409 = !DILocalVariable(name: "__fd", arg: 1, scope: !2405, file: !2324, line: 491, type: !477)
!2410 = !DILocalVariable(name: "__path", arg: 2, scope: !2405, file: !2324, line: 491, type: !482)
!2411 = !DILocalVariable(name: "__mode", arg: 3, scope: !2405, file: !2324, line: 491, type: !2338)
!2412 = !DILocalVariable(name: "__dev", arg: 4, scope: !2405, file: !2324, line: 491, type: !2332)
!2413 = !DILocation(line: 0, scope: !2405)
!2414 = !DILocation(line: 494, column: 10, scope: !2405)
!2415 = !DILocation(line: 494, column: 3, scope: !2405)
!2416 = distinct !DISubprogram(name: "stat64", scope: !2324, file: !2324, line: 502, type: !2417, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2439)
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!477, !482, !2419}
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2329, line: 119, size: 1152, elements: !2421)
!2421 = !{!2422, !2423, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2435, !2436, !2437, !2438}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2420, file: !2329, line: 121, baseType: !2332, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2420, file: !2329, line: 123, baseType: !2424, size: 64, offset: 64)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2082, line: 149, baseType: !538)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2420, file: !2329, line: 124, baseType: !2336, size: 64, offset: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2420, file: !2329, line: 125, baseType: !2338, size: 32, offset: 192)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2420, file: !2329, line: 132, baseType: !2340, size: 32, offset: 224)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2420, file: !2329, line: 133, baseType: !2342, size: 32, offset: 256)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2420, file: !2329, line: 135, baseType: !477, size: 32, offset: 288)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2420, file: !2329, line: 136, baseType: !2332, size: 64, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2420, file: !2329, line: 137, baseType: !2081, size: 64, offset: 384)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2420, file: !2329, line: 143, baseType: !2347, size: 64, offset: 448)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2420, file: !2329, line: 144, baseType: !2434, size: 64, offset: 512)
!2434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2082, line: 180, baseType: !540)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2420, file: !2329, line: 152, baseType: !2351, size: 128, offset: 576)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2420, file: !2329, line: 153, baseType: !2351, size: 128, offset: 704)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2420, file: !2329, line: 154, baseType: !2351, size: 128, offset: 832)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2420, file: !2329, line: 164, baseType: !2361, size: 192, offset: 960)
!2439 = !{!2440, !2441}
!2440 = !DILocalVariable(name: "__path", arg: 1, scope: !2416, file: !2324, line: 502, type: !482)
!2441 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2416, file: !2324, line: 502, type: !2419)
!2442 = !DILocation(line: 0, scope: !2416)
!2443 = !DILocation(line: 504, column: 10, scope: !2416)
!2444 = !DILocation(line: 504, column: 3, scope: !2416)
!2445 = distinct !DISubprogram(name: "lstat64", scope: !2324, file: !2324, line: 509, type: !2417, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2446)
!2446 = !{!2447, !2448}
!2447 = !DILocalVariable(name: "__path", arg: 1, scope: !2445, file: !2324, line: 509, type: !482)
!2448 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2445, file: !2324, line: 509, type: !2419)
!2449 = !DILocation(line: 0, scope: !2445)
!2450 = !DILocation(line: 511, column: 10, scope: !2445)
!2451 = !DILocation(line: 511, column: 3, scope: !2445)
!2452 = distinct !DISubprogram(name: "fstat64", scope: !2324, file: !2324, line: 516, type: !2453, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2455)
!2453 = !DISubroutineType(types: !2454)
!2454 = !{!477, !477, !2419}
!2455 = !{!2456, !2457}
!2456 = !DILocalVariable(name: "__fd", arg: 1, scope: !2452, file: !2324, line: 516, type: !477)
!2457 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2452, file: !2324, line: 516, type: !2419)
!2458 = !DILocation(line: 0, scope: !2452)
!2459 = !DILocation(line: 518, column: 10, scope: !2452)
!2460 = !DILocation(line: 518, column: 3, scope: !2452)
!2461 = distinct !DISubprogram(name: "fstatat64", scope: !2324, file: !2324, line: 523, type: !2462, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2464)
!2462 = !DISubroutineType(types: !2463)
!2463 = !{!477, !477, !482, !2419, !477}
!2464 = !{!2465, !2466, !2467, !2468}
!2465 = !DILocalVariable(name: "__fd", arg: 1, scope: !2461, file: !2324, line: 523, type: !477)
!2466 = !DILocalVariable(name: "__filename", arg: 2, scope: !2461, file: !2324, line: 523, type: !482)
!2467 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2461, file: !2324, line: 523, type: !2419)
!2468 = !DILocalVariable(name: "__flag", arg: 4, scope: !2461, file: !2324, line: 523, type: !477)
!2469 = !DILocation(line: 0, scope: !2461)
!2470 = !DILocation(line: 526, column: 10, scope: !2461)
!2471 = !DILocation(line: 526, column: 3, scope: !2461)
!2472 = distinct !DISubprogram(name: "for_each_index", scope: !3, file: !3, line: 266, type: !2473, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2478)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{!476, !842, !2475, !481}
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!476, !484, !842, !481}
!2478 = !{!2479, !2480, !2481, !2482, !2483}
!2479 = !DILocalVariable(name: "addr_p", arg: 1, scope: !2472, file: !3, line: 266, type: !842)
!2480 = !DILocalVariable(name: "cbck", arg: 2, scope: !2472, file: !3, line: 266, type: !2475)
!2481 = !DILocalVariable(name: "data", arg: 3, scope: !2472, file: !3, line: 266, type: !481)
!2482 = !DILocalVariable(name: "nxt", scope: !2472, file: !3, line: 268, type: !842)
!2483 = !DILocalVariable(name: "idx", scope: !2472, file: !3, line: 268, type: !842)
!2484 = !DILocation(line: 0, scope: !2472)
!2485 = !DILocation(line: 270, column: 3, scope: !2472)
!2486 = !DILocation(line: 272, column: 15, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2488, file: !3, line: 271, column: 5)
!2488 = distinct !DILexicalBlock(scope: !2489, file: !3, line: 270, column: 3)
!2489 = distinct !DILexicalBlock(scope: !2472, file: !3, line: 270, column: 3)
!2490 = !DILocation(line: 272, column: 7, scope: !2487)
!2491 = !DILocation(line: 275, column: 11, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 273, column: 2)
!2493 = !DILocation(line: 275, column: 4, scope: !2492)
!2494 = !DILocation(line: 280, column: 11, scope: !2492)
!2495 = !DILocation(line: 281, column: 17, scope: !2492)
!2496 = !DILocation(line: 281, column: 11, scope: !2492)
!2497 = !DILocation(line: 281, column: 4, scope: !2492)
!2498 = !DILocation(line: 287, column: 11, scope: !2492)
!2499 = !DILocation(line: 288, column: 4, scope: !2492)
!2500 = !DILocation(line: 293, column: 11, scope: !2492)
!2501 = !DILocation(line: 294, column: 8, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 294, column: 8)
!2503 = !DILocation(line: 295, column: 8, scope: !2502)
!2504 = !DILocation(line: 295, column: 12, scope: !2502)
!2505 = !DILocation(line: 294, column: 8, scope: !2492)
!2506 = !DILocation(line: 298, column: 11, scope: !2492)
!2507 = !DILocation(line: 299, column: 4, scope: !2492)
!2508 = !DILocation(line: 303, column: 11, scope: !2492)
!2509 = !DILocation(line: 304, column: 15, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 304, column: 8)
!2511 = !DILocation(line: 304, column: 25, scope: !2510)
!2512 = !DILocation(line: 304, column: 9, scope: !2510)
!2513 = !DILocation(line: 304, column: 8, scope: !2492)
!2514 = !DILocation(line: 321, column: 4, scope: !2492)
!2515 = !DILocation(line: 325, column: 11, scope: !2492)
!2516 = !DILocation(line: 326, column: 8, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 326, column: 8)
!2518 = !DILocation(line: 327, column: 8, scope: !2517)
!2519 = !DILocation(line: 327, column: 12, scope: !2517)
!2520 = !DILocation(line: 326, column: 8, scope: !2492)
!2521 = !DILocation(line: 329, column: 11, scope: !2492)
!2522 = !DILocation(line: 330, column: 8, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 330, column: 8)
!2524 = !DILocation(line: 331, column: 8, scope: !2523)
!2525 = !DILocation(line: 331, column: 12, scope: !2523)
!2526 = !DILocation(line: 330, column: 8, scope: !2492)
!2527 = !DILocation(line: 333, column: 4, scope: !2492)
!2528 = !DILocation(line: 336, column: 8, scope: !2492)
!2529 = !DILocation(line: 337, column: 2, scope: !2492)
!2530 = !DILocation(line: 270, column: 3, scope: !2488)
!2531 = distinct !{!2531, !2532, !2533}
!2532 = !DILocation(line: 270, column: 3, scope: !2489)
!2533 = !DILocation(line: 338, column: 5, scope: !2489)
!2534 = !DILocation(line: 339, column: 1, scope: !2472)
!2535 = !DILocation(line: 0, scope: !2492)
!2536 = distinct !DISubprogram(name: "movement_possibility", scope: !3, file: !3, line: 349, type: !2537, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2539)
!2537 = !DISubroutineType(types: !2538)
!2538 = !{!390, !808}
!2539 = !{!2540, !2541, !2542}
!2540 = !DILocalVariable(name: "stmt", arg: 1, scope: !2536, file: !3, line: 349, type: !808)
!2541 = !DILocalVariable(name: "lhs", scope: !2536, file: !3, line: 351, type: !484)
!2542 = !DILocalVariable(name: "ret", scope: !2536, file: !3, line: 352, type: !390)
!2543 = !DILocation(line: 0, scope: !2536)
!2544 = !DILocation(line: 354, column: 7, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2536, file: !3, line: 354, column: 7)
!2546 = !DILocation(line: 355, column: 7, scope: !2545)
!2547 = !DILocation(line: 355, column: 10, scope: !2545)
!2548 = !DILocation(line: 355, column: 29, scope: !2545)
!2549 = !DILocation(line: 354, column: 7, scope: !2536)
!2550 = !DILocation(line: 362, column: 7, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2536, file: !3, line: 362, column: 7)
!2552 = !DILocation(line: 362, column: 29, scope: !2551)
!2553 = !DILocation(line: 362, column: 7, scope: !2536)
!2554 = !DILocation(line: 365, column: 7, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2536, file: !3, line: 365, column: 7)
!2556 = !DILocation(line: 365, column: 7, scope: !2536)
!2557 = !DILocation(line: 368, column: 7, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2536, file: !3, line: 368, column: 7)
!2559 = !DILocation(line: 369, column: 7, scope: !2558)
!2560 = !DILocation(line: 369, column: 10, scope: !2558)
!2561 = !DILocation(line: 370, column: 7, scope: !2558)
!2562 = !DILocation(line: 370, column: 10, scope: !2558)
!2563 = !DILocation(line: 371, column: 7, scope: !2558)
!2564 = !DILocation(line: 371, column: 10, scope: !2558)
!2565 = !DILocation(line: 368, column: 7, scope: !2536)
!2566 = !DILocation(line: 374, column: 7, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2536, file: !3, line: 374, column: 7)
!2568 = !DILocation(line: 374, column: 7, scope: !2536)
!2569 = !DILocation(line: 395, column: 13, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2567, file: !3, line: 375, column: 5)
!2571 = !DILocation(line: 396, column: 5, scope: !2570)
!2572 = !DILocation(line: 397, column: 12, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2567, file: !3, line: 397, column: 12)
!2574 = !DILocation(line: 397, column: 12, scope: !2567)
!2575 = !DILocation(line: 398, column: 11, scope: !2573)
!2576 = !DILocation(line: 0, scope: !2567)
!2577 = !DILocation(line: 402, column: 7, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2536, file: !3, line: 402, column: 7)
!2579 = !DILocation(line: 402, column: 23, scope: !2578)
!2580 = !DILocation(line: 403, column: 7, scope: !2578)
!2581 = !DILocation(line: 403, column: 10, scope: !2578)
!2582 = !DILocation(line: 402, column: 7, scope: !2536)
!2583 = !DILocation(line: 407, column: 7, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2536, file: !3, line: 406, column: 7)
!2585 = !DILocation(line: 407, column: 10, scope: !2584)
!2586 = !DILocation(line: 406, column: 7, scope: !2536)
!2587 = !DILocation(line: 411, column: 1, scope: !2536)
!2588 = distinct !DISubprogram(name: "gimple_code", scope: !397, file: !397, line: 1052, type: !2589, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2592)
!2589 = !DISubroutineType(types: !2590)
!2590 = !{!396, !2591}
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !485, line: 60, baseType: !1867)
!2592 = !{!2593}
!2593 = !DILocalVariable(name: "g", arg: 1, scope: !2588, file: !397, line: 1052, type: !2591)
!2594 = !DILocation(line: 0, scope: !2588)
!2595 = !DILocation(line: 1054, column: 20, scope: !2588)
!2596 = !DILocation(line: 1054, column: 3, scope: !2588)
!2597 = distinct !DISubprogram(name: "gimple_vdef", scope: !397, file: !397, line: 1375, type: !2598, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2600)
!2598 = !DISubroutineType(types: !2599)
!2599 = !{!484, !2591}
!2600 = !{!2601}
!2601 = !DILocalVariable(name: "g", arg: 1, scope: !2597, file: !397, line: 1375, type: !2591)
!2602 = !DILocation(line: 0, scope: !2597)
!2603 = !DILocation(line: 1377, column: 8, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2597, file: !397, line: 1377, column: 7)
!2605 = !DILocation(line: 1377, column: 7, scope: !2597)
!2606 = !DILocation(line: 1379, column: 23, scope: !2597)
!2607 = !DILocation(line: 1379, column: 3, scope: !2597)
!2608 = !DILocation(line: 1380, column: 1, scope: !2597)
!2609 = distinct !DISubprogram(name: "gimple_has_volatile_ops", scope: !397, file: !397, line: 1477, type: !2610, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2612)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{!476, !2591}
!2612 = !{!2613}
!2613 = !DILocalVariable(name: "stmt", arg: 1, scope: !2609, file: !397, line: 1477, type: !2591)
!2614 = !DILocation(line: 0, scope: !2609)
!2615 = !DILocation(line: 1479, column: 7, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2609, file: !397, line: 1479, column: 7)
!2617 = !DILocation(line: 1479, column: 7, scope: !2609)
!2618 = !DILocation(line: 1480, column: 25, scope: !2616)
!2619 = !DILocation(line: 1480, column: 12, scope: !2616)
!2620 = !DILocation(line: 1480, column: 5, scope: !2616)
!2621 = !DILocation(line: 0, scope: !2616)
!2622 = !DILocation(line: 1483, column: 1, scope: !2609)
!2623 = distinct !DISubprogram(name: "is_gimple_call", scope: !397, file: !397, line: 1870, type: !2610, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2624)
!2624 = !{!2625}
!2625 = !DILocalVariable(name: "gs", arg: 1, scope: !2623, file: !397, line: 1870, type: !2591)
!2626 = !DILocation(line: 0, scope: !2623)
!2627 = !DILocation(line: 1872, column: 10, scope: !2623)
!2628 = !DILocation(line: 1872, column: 27, scope: !2623)
!2629 = !DILocation(line: 1872, column: 3, scope: !2623)
!2630 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !397, file: !397, line: 1878, type: !2598, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2631)
!2631 = !{!2632}
!2632 = !DILocalVariable(name: "gs", arg: 1, scope: !2630, file: !397, line: 1878, type: !2591)
!2633 = !DILocation(line: 0, scope: !2630)
!2634 = !DILocation(line: 1881, column: 10, scope: !2630)
!2635 = !DILocation(line: 1881, column: 3, scope: !2630)
!2636 = distinct !DISubprogram(name: "is_gimple_assign", scope: !397, file: !397, line: 1677, type: !2610, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2637)
!2637 = !{!2638}
!2638 = !DILocalVariable(name: "gs", arg: 1, scope: !2636, file: !397, line: 1677, type: !2591)
!2639 = !DILocation(line: 0, scope: !2636)
!2640 = !DILocation(line: 1679, column: 10, scope: !2636)
!2641 = !DILocation(line: 1679, column: 27, scope: !2636)
!2642 = !DILocation(line: 1679, column: 3, scope: !2636)
!2643 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !397, file: !397, line: 1694, type: !2598, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2644)
!2644 = !{!2645}
!2645 = !DILocalVariable(name: "gs", arg: 1, scope: !2643, file: !397, line: 1694, type: !2591)
!2646 = !DILocation(line: 0, scope: !2643)
!2647 = !DILocation(line: 1697, column: 10, scope: !2643)
!2648 = !DILocation(line: 1697, column: 3, scope: !2643)
!2649 = distinct !DISubprogram(name: "get_lsm_tmp_name", scope: !3, file: !3, line: 1821, type: !2650, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2652)
!2650 = !DISubroutineType(types: !2651)
!2651 = !{!479, !484, !7}
!2652 = !{!2653, !2654, !2655}
!2653 = !DILocalVariable(name: "ref", arg: 1, scope: !2649, file: !3, line: 1821, type: !484)
!2654 = !DILocalVariable(name: "n", arg: 2, scope: !2649, file: !3, line: 1821, type: !7)
!2655 = !DILocalVariable(name: "ns", scope: !2649, file: !3, line: 1823, type: !2656)
!2656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 16, elements: !727)
!2657 = !DILocation(line: 0, scope: !2649)
!2658 = !DILocation(line: 1823, column: 3, scope: !2649)
!2659 = !DILocation(line: 1823, column: 8, scope: !2649)
!2660 = !DILocation(line: 1825, column: 23, scope: !2649)
!2661 = !DILocation(line: 1826, column: 3, scope: !2649)
!2662 = !DILocation(line: 1827, column: 3, scope: !2649)
!2663 = !DILocation(line: 1828, column: 9, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 1828, column: 7)
!2665 = !DILocation(line: 1828, column: 7, scope: !2649)
!2666 = !DILocation(line: 1830, column: 15, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 1829, column: 5)
!2668 = !DILocation(line: 1830, column: 13, scope: !2667)
!2669 = !DILocation(line: 1831, column: 7, scope: !2667)
!2670 = !DILocation(line: 1831, column: 13, scope: !2667)
!2671 = !DILocation(line: 1832, column: 7, scope: !2667)
!2672 = !DILocation(line: 1833, column: 5, scope: !2667)
!2673 = !DILocation(line: 1835, column: 1, scope: !2649)
!2674 = !DILocation(line: 1834, column: 3, scope: !2649)
!2675 = distinct !DISubprogram(name: "gen_lsm_tmp_name", scope: !3, file: !3, line: 1744, type: !2676, scopeLine: 1745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2678)
!2676 = !DISubroutineType(types: !2677)
!2677 = !{null, !484}
!2678 = !{!2679, !2680}
!2679 = !DILocalVariable(name: "ref", arg: 1, scope: !2675, file: !3, line: 1744, type: !484)
!2680 = !DILocalVariable(name: "name", scope: !2675, file: !3, line: 1746, type: !482)
!2681 = !DILocation(line: 1760, column: 7, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2675, file: !3, line: 1749, column: 5)
!2683 = !DILocation(line: 0, scope: !2675)
!2684 = !DILocation(line: 1748, column: 11, scope: !2675)
!2685 = !DILocation(line: 1748, column: 3, scope: !2675)
!2686 = !DILocation(line: 1753, column: 25, scope: !2682)
!2687 = !DILocation(line: 1753, column: 7, scope: !2682)
!2688 = !DILocation(line: 1754, column: 7, scope: !2682)
!2689 = !DILocation(line: 1814, column: 1, scope: !2675)
!2690 = !DILocation(line: 1760, column: 25, scope: !2682)
!2691 = !DILocation(line: 1764, column: 25, scope: !2682)
!2692 = !DILocation(line: 1764, column: 7, scope: !2682)
!2693 = !DILocation(line: 1765, column: 7, scope: !2682)
!2694 = !DILocation(line: 1769, column: 25, scope: !2682)
!2695 = !DILocation(line: 1769, column: 7, scope: !2682)
!2696 = !DILocation(line: 1770, column: 7, scope: !2682)
!2697 = !DILocation(line: 1774, column: 25, scope: !2682)
!2698 = !DILocation(line: 1774, column: 7, scope: !2682)
!2699 = !DILocation(line: 1775, column: 7, scope: !2682)
!2700 = !DILocation(line: 1776, column: 24, scope: !2682)
!2701 = !DILocation(line: 1776, column: 14, scope: !2682)
!2702 = !DILocation(line: 1777, column: 12, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2682, file: !3, line: 1777, column: 11)
!2704 = !DILocation(line: 1777, column: 11, scope: !2682)
!2705 = !DILocation(line: 1779, column: 7, scope: !2682)
!2706 = !DILocation(line: 1783, column: 25, scope: !2682)
!2707 = !DILocation(line: 1783, column: 7, scope: !2682)
!2708 = !DILocation(line: 1784, column: 7, scope: !2682)
!2709 = !DILocation(line: 1788, column: 13, scope: !2682)
!2710 = !DILocation(line: 1788, column: 7, scope: !2682)
!2711 = !DILocation(line: 1793, column: 14, scope: !2682)
!2712 = !DILocation(line: 1794, column: 12, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2682, file: !3, line: 1794, column: 11)
!2714 = !DILocation(line: 1794, column: 11, scope: !2682)
!2715 = !DILocation(line: 1796, column: 7, scope: !2682)
!2716 = !DILocation(line: 1797, column: 7, scope: !2682)
!2717 = !DILocation(line: 1800, column: 7, scope: !2682)
!2718 = !DILocation(line: 1801, column: 7, scope: !2682)
!2719 = !DILocation(line: 1804, column: 7, scope: !2682)
!2720 = !DILocation(line: 1805, column: 7, scope: !2682)
!2721 = !DILocation(line: 1812, column: 7, scope: !2682)
!2722 = !DILocation(line: 1813, column: 5, scope: !2682)
!2723 = distinct !DISubprogram(name: "lsm_tmp_name_add", scope: !3, file: !3, line: 1730, type: !2724, scopeLine: 1731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2726)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{null, !482}
!2726 = !{!2727, !2728}
!2727 = !DILocalVariable(name: "s", arg: 1, scope: !2723, file: !3, line: 1730, type: !482)
!2728 = !DILocalVariable(name: "l", scope: !2723, file: !3, line: 1732, type: !477)
!2729 = !DILocation(line: 0, scope: !2723)
!2730 = !DILocation(line: 1732, column: 11, scope: !2723)
!2731 = !DILocation(line: 1732, column: 24, scope: !2723)
!2732 = !DILocation(line: 1733, column: 9, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2723, file: !3, line: 1733, column: 7)
!2734 = !DILocation(line: 1733, column: 7, scope: !2723)
!2735 = !DILocation(line: 1736, column: 24, scope: !2723)
!2736 = !DILocation(line: 1736, column: 3, scope: !2723)
!2737 = !DILocation(line: 1737, column: 23, scope: !2723)
!2738 = !DILocation(line: 1738, column: 1, scope: !2723)
!2739 = distinct !DISubprogram(name: "tree_ssa_lim", scope: !3, file: !3, line: 2332, type: !2740, scopeLine: 2333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2048)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{null}
!2742 = !DILocation(line: 2334, column: 3, scope: !2739)
!2743 = !DILocation(line: 2337, column: 3, scope: !2739)
!2744 = !DILocation(line: 2341, column: 3, scope: !2739)
!2745 = !DILocation(line: 2345, column: 3, scope: !2739)
!2746 = !DILocation(line: 2348, column: 3, scope: !2739)
!2747 = !DILocation(line: 2350, column: 3, scope: !2739)
!2748 = !DILocation(line: 2351, column: 1, scope: !2739)
!2749 = distinct !DISubprogram(name: "tree_ssa_lim_initialize", scope: !3, file: !3, line: 2260, type: !2740, scopeLine: 2261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2750)
!2750 = !{!2751, !2762, !2769, !2770}
!2751 = !DILocalVariable(name: "contains_call", scope: !2749, file: !3, line: 2262, type: !2752)
!2752 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2753, line: 45, baseType: !2754)
!2753 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2753, line: 39, size: 192, elements: !2756)
!2756 = !{!2757, !2758, !2759, !2760}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2755, file: !2753, line: 41, baseType: !475, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2755, file: !2753, line: 42, baseType: !7, size: 32, offset: 64)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2755, file: !2753, line: 43, baseType: !7, size: 32, offset: 96)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2755, file: !2753, line: 44, baseType: !2761, size: 64, offset: 128)
!2761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !538, size: 64, elements: !583)
!2762 = !DILocalVariable(name: "bsi", scope: !2749, file: !3, line: 2263, type: !2763)
!2763 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !397, line: 265, baseType: !2764)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !397, line: 254, size: 192, elements: !2765)
!2765 = !{!2766, !2767, !2768}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2764, file: !397, line: 257, baseType: !803, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2764, file: !397, line: 263, baseType: !798, size: 64, offset: 64)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2764, file: !397, line: 264, baseType: !1293, size: 64, offset: 128)
!2769 = !DILocalVariable(name: "loop", scope: !2749, file: !3, line: 2264, type: !1023)
!2770 = !DILocalVariable(name: "bb", scope: !2749, file: !3, line: 2265, type: !1293)
!2771 = !DILocation(line: 2262, column: 42, scope: !2749)
!2772 = !DILocation(line: 2262, column: 27, scope: !2749)
!2773 = !DILocation(line: 0, scope: !2749)
!2774 = !DILocation(line: 2263, column: 3, scope: !2749)
!2775 = !DILocation(line: 2267, column: 3, scope: !2749)
!2776 = !DILocation(line: 2268, column: 3, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 2268, column: 3)
!2778 = !DILocation(line: 0, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 2270, column: 7)
!2780 = distinct !DILexicalBlock(scope: !2781, file: !3, line: 2269, column: 5)
!2781 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 2268, column: 3)
!2782 = !DILocation(line: 2268, column: 3, scope: !2781)
!2783 = !DILocation(line: 0, scope: !2777)
!2784 = !DILocation(line: 2270, column: 18, scope: !2779)
!2785 = !DILocation(line: 2270, column: 12, scope: !2779)
!2786 = !DILocation(line: 2270, column: 38, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2779, file: !3, line: 2270, column: 7)
!2788 = !DILocation(line: 2270, column: 37, scope: !2787)
!2789 = !DILocation(line: 2270, column: 7, scope: !2779)
!2790 = !DILocation(line: 2272, column: 24, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 2272, column: 8)
!2792 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 2271, column: 2)
!2793 = !DILocation(line: 2272, column: 8, scope: !2791)
!2794 = !DILocation(line: 2272, column: 8, scope: !2792)
!2795 = !DILocation(line: 2270, column: 55, scope: !2787)
!2796 = !DILocation(line: 2270, column: 7, scope: !2787)
!2797 = distinct !{!2797, !2789, !2798}
!2798 = !DILocation(line: 2274, column: 2, scope: !2779)
!2799 = !DILocation(line: 2276, column: 12, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 2276, column: 11)
!2801 = !DILocation(line: 2276, column: 11, scope: !2780)
!2802 = !DILocation(line: 2277, column: 30, scope: !2800)
!2803 = !DILocation(line: 2277, column: 2, scope: !2800)
!2804 = !DILocation(line: 0, scope: !2781)
!2805 = distinct !{!2805, !2776, !2806}
!2806 = !DILocation(line: 2278, column: 5, scope: !2777)
!2807 = !DILocation(line: 2280, column: 15, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 2280, column: 3)
!2809 = !DILocation(line: 2280, column: 30, scope: !2808)
!2810 = !DILocation(line: 2280, column: 41, scope: !2808)
!2811 = !DILocation(line: 2280, column: 8, scope: !2808)
!2812 = !DILocation(line: 0, scope: !2808)
!2813 = !DILocation(line: 2280, column: 3, scope: !2808)
!2814 = !DILocation(line: 2281, column: 5, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2280, column: 3)
!2816 = !DILocation(line: 2280, column: 67, scope: !2815)
!2817 = !DILocation(line: 2280, column: 3, scope: !2815)
!2818 = distinct !{!2818, !2813, !2819}
!2819 = !DILocation(line: 2281, column: 49, scope: !2808)
!2820 = !DILocation(line: 2283, column: 3, scope: !2749)
!2821 = !DILocation(line: 2285, column: 22, scope: !2749)
!2822 = !DILocation(line: 2285, column: 20, scope: !2749)
!2823 = !DILocation(line: 2286, column: 1, scope: !2749)
!2824 = distinct !DISubprogram(name: "analyze_memory_references", scope: !3, file: !3, line: 1568, type: !2740, scopeLine: 1569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2825)
!2825 = !{!2826, !2827, !2828}
!2826 = !DILocalVariable(name: "i", scope: !2824, file: !3, line: 1570, type: !7)
!2827 = !DILocalVariable(name: "empty", scope: !2824, file: !3, line: 1571, type: !1409)
!2828 = !DILocalVariable(name: "hempty", scope: !2824, file: !3, line: 1572, type: !1325)
!2829 = !DILocation(line: 1575, column: 6, scope: !2824)
!2830 = !DILocation(line: 1575, column: 4, scope: !2824)
!2831 = !DILocation(line: 1576, column: 29, scope: !2824)
!2832 = !DILocation(line: 1577, column: 34, scope: !2824)
!2833 = !DILocation(line: 1577, column: 32, scope: !2824)
!2834 = !DILocation(line: 1579, column: 38, scope: !2824)
!2835 = !DILocation(line: 1579, column: 36, scope: !2824)
!2836 = !DILocation(line: 1581, column: 36, scope: !2824)
!2837 = !DILocation(line: 1581, column: 34, scope: !2824)
!2838 = !DILocation(line: 1583, column: 33, scope: !2824)
!2839 = !DILocation(line: 1583, column: 31, scope: !2824)
!2840 = !DILocation(line: 0, scope: !2824)
!2841 = !DILocation(line: 1586, column: 8, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2824, file: !3, line: 1586, column: 3)
!2843 = !DILocation(line: 0, scope: !2842)
!2844 = !DILocation(line: 1586, column: 19, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 1586, column: 3)
!2846 = !DILocation(line: 1586, column: 17, scope: !2845)
!2847 = !DILocation(line: 1586, column: 3, scope: !2842)
!2848 = !DILocation(line: 1588, column: 15, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2845, file: !3, line: 1587, column: 5)
!2850 = !DILocation(line: 1589, column: 7, scope: !2849)
!2851 = !DILocation(line: 1590, column: 15, scope: !2849)
!2852 = !DILocation(line: 1591, column: 7, scope: !2849)
!2853 = !DILocation(line: 1592, column: 15, scope: !2849)
!2854 = !DILocation(line: 1593, column: 7, scope: !2849)
!2855 = !DILocation(line: 1594, column: 16, scope: !2849)
!2856 = !DILocation(line: 1595, column: 7, scope: !2849)
!2857 = !DILocation(line: 1586, column: 40, scope: !2845)
!2858 = !DILocation(line: 1586, column: 3, scope: !2845)
!2859 = distinct !{!2859, !2847, !2860}
!2860 = !DILocation(line: 1596, column: 5, scope: !2842)
!2861 = !DILocation(line: 1598, column: 30, scope: !2824)
!2862 = !DILocation(line: 1600, column: 3, scope: !2824)
!2863 = !DILocation(line: 1601, column: 3, scope: !2824)
!2864 = !DILocation(line: 1602, column: 1, scope: !2824)
!2865 = distinct !DISubprogram(name: "determine_invariantness", scope: !3, file: !3, line: 1006, type: !2740, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2866)
!2866 = !{!2867}
!2867 = !DILocalVariable(name: "walk_data", scope: !2865, file: !3, line: 1008, type: !2868)
!2868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dom_walk_data", file: !2869, line: 29, size: 512, elements: !2870)
!2869 = !DIFile(filename: "./domwalk.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2870 = !{!2871, !2872, !2877, !2881, !2882, !2883, !2897, !2898}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "dom_direction", scope: !2868, file: !2869, line: 35, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_block_local_data", scope: !2868, file: !2869, line: 46, baseType: !2873, size: 64, offset: 64)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{null, !2876, !1293, !476}
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "before_dom_children", scope: !2868, file: !2869, line: 50, baseType: !2878, size: 64, offset: 128)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{null, !2876, !1293}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "after_dom_children", scope: !2868, file: !2869, line: 53, baseType: !2878, size: 64, offset: 192)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "global_data", scope: !2868, file: !2869, line: 56, baseType: !481, size: 64, offset: 256)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "block_data_stack", scope: !2868, file: !2869, line: 61, baseType: !2884, size: 64, offset: 320)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_void_p_heap", file: !2869, line: 23, baseType: !2886)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_void_p_heap", file: !2869, line: 23, size: 128, elements: !2887)
!2887 = !{!2888}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2886, file: !2869, line: 23, baseType: !2889, size: 128)
!2889 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_void_p_base", file: !2869, line: 22, baseType: !2890)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_void_p_base", file: !2869, line: 22, size: 128, elements: !2891)
!2891 = !{!2892, !2893, !2894}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2890, file: !2869, line: 22, baseType: !7, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2890, file: !2869, line: 22, baseType: !7, size: 32, offset: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2890, file: !2869, line: 22, baseType: !2895, size: 64, offset: 64)
!2895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2896, size: 64, elements: !583)
!2896 = !DIDerivedType(tag: DW_TAG_typedef, name: "void_p", file: !2869, line: 21, baseType: !481)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "block_local_data_size", scope: !2868, file: !2869, line: 65, baseType: !953, size: 64, offset: 384)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "free_block_data", scope: !2868, file: !2869, line: 71, baseType: !2884, size: 64, offset: 448)
!2899 = !DILocation(line: 1008, column: 3, scope: !2865)
!2900 = !DILocation(line: 1010, column: 3, scope: !2865)
!2901 = !DILocation(line: 1011, column: 27, scope: !2865)
!2902 = !DILocation(line: 1012, column: 13, scope: !2865)
!2903 = !DILocation(line: 1012, column: 33, scope: !2865)
!2904 = !DILocation(line: 0, scope: !2865)
!2905 = !DILocation(line: 1014, column: 3, scope: !2865)
!2906 = !DILocation(line: 1015, column: 36, scope: !2865)
!2907 = !DILocation(line: 1015, column: 3, scope: !2865)
!2908 = !DILocation(line: 1016, column: 3, scope: !2865)
!2909 = !DILocation(line: 1017, column: 1, scope: !2865)
!2910 = distinct !DISubprogram(name: "store_motion", scope: !3, file: !3, line: 2177, type: !2740, scopeLine: 2178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2911)
!2911 = !{!2912, !2913}
!2912 = !DILocalVariable(name: "loop", scope: !2910, file: !3, line: 2179, type: !1023)
!2913 = !DILocalVariable(name: "sm_executed", scope: !2910, file: !3, line: 2180, type: !1409)
!2914 = !DILocation(line: 2180, column: 24, scope: !2910)
!2915 = !DILocation(line: 0, scope: !2910)
!2916 = !DILocation(line: 2182, column: 15, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 2182, column: 3)
!2918 = !DILocation(line: 2182, column: 30, scope: !2917)
!2919 = !DILocation(line: 2182, column: 41, scope: !2917)
!2920 = !DILocation(line: 2182, column: 8, scope: !2917)
!2921 = !DILocation(line: 0, scope: !2917)
!2922 = !DILocation(line: 2182, column: 53, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2917, file: !3, line: 2182, column: 3)
!2924 = !DILocation(line: 2182, column: 3, scope: !2917)
!2925 = !DILocation(line: 2183, column: 5, scope: !2923)
!2926 = !DILocation(line: 2182, column: 75, scope: !2923)
!2927 = !DILocation(line: 2182, column: 3, scope: !2923)
!2928 = distinct !{!2928, !2924, !2929}
!2929 = !DILocation(line: 2183, column: 41, scope: !2917)
!2930 = !DILocation(line: 2185, column: 3, scope: !2910)
!2931 = !DILocation(line: 2186, column: 3, scope: !2910)
!2932 = !DILocation(line: 2187, column: 1, scope: !2910)
!2933 = distinct !DISubprogram(name: "move_computations", scope: !3, file: !3, line: 1080, type: !2740, scopeLine: 1081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2934)
!2934 = !{!2935}
!2935 = !DILocalVariable(name: "walk_data", scope: !2933, file: !3, line: 1082, type: !2868)
!2936 = !DILocation(line: 1082, column: 3, scope: !2933)
!2937 = !DILocation(line: 1084, column: 3, scope: !2933)
!2938 = !DILocation(line: 1085, column: 27, scope: !2933)
!2939 = !DILocation(line: 1086, column: 13, scope: !2933)
!2940 = !DILocation(line: 1086, column: 33, scope: !2933)
!2941 = !DILocation(line: 0, scope: !2933)
!2942 = !DILocation(line: 1088, column: 3, scope: !2933)
!2943 = !DILocation(line: 1089, column: 36, scope: !2933)
!2944 = !DILocation(line: 1089, column: 3, scope: !2933)
!2945 = !DILocation(line: 1090, column: 3, scope: !2933)
!2946 = !DILocation(line: 1092, column: 3, scope: !2933)
!2947 = !DILocation(line: 1093, column: 26, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 1093, column: 7)
!2949 = !DILocation(line: 1093, column: 7, scope: !2948)
!2950 = !DILocation(line: 1093, column: 7, scope: !2933)
!2951 = !DILocation(line: 1094, column: 5, scope: !2948)
!2952 = !DILocation(line: 1095, column: 1, scope: !2933)
!2953 = distinct !DISubprogram(name: "tree_ssa_lim_finalize", scope: !3, file: !3, line: 2291, type: !2740, scopeLine: 2292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2954)
!2954 = !{!2955, !2956, !2957, !2958}
!2955 = !DILocalVariable(name: "bb", scope: !2953, file: !3, line: 2293, type: !1293)
!2956 = !DILocalVariable(name: "i", scope: !2953, file: !3, line: 2294, type: !7)
!2957 = !DILocalVariable(name: "b", scope: !2953, file: !3, line: 2295, type: !1409)
!2958 = !DILocalVariable(name: "h", scope: !2953, file: !3, line: 2296, type: !1325)
!2959 = !DILocation(line: 2295, column: 3, scope: !2953)
!2960 = !DILocation(line: 2296, column: 3, scope: !2953)
!2961 = !DILocation(line: 2298, column: 3, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 2298, column: 3)
!2963 = !DILocation(line: 2298, column: 3, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 2298, column: 3)
!2965 = !DILocation(line: 0, scope: !2962)
!2966 = !DILocation(line: 0, scope: !2953)
!2967 = !DILocation(line: 2300, column: 11, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 2299, column: 5)
!2969 = !DILocation(line: 2300, column: 15, scope: !2968)
!2970 = distinct !{!2970, !2961, !2971}
!2971 = !DILocation(line: 2301, column: 5, scope: !2962)
!2972 = !DILocation(line: 2303, column: 24, scope: !2953)
!2973 = !DILocation(line: 2303, column: 3, scope: !2953)
!2974 = !DILocation(line: 2305, column: 3, scope: !2953)
!2975 = !DILocation(line: 2306, column: 32, scope: !2953)
!2976 = !DILocation(line: 2306, column: 3, scope: !2953)
!2977 = !DILocation(line: 2308, column: 8, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 2308, column: 3)
!2979 = !DILocation(line: 0, scope: !2978)
!2980 = !DILocation(line: 2308, column: 15, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 2308, column: 3)
!2982 = !DILocation(line: 2308, column: 3, scope: !2978)
!2983 = !DILocation(line: 2309, column: 5, scope: !2981)
!2984 = !DILocation(line: 2308, column: 74, scope: !2981)
!2985 = !DILocation(line: 2308, column: 3, scope: !2981)
!2986 = distinct !{!2986, !2982, !2987}
!2987 = !DILocation(line: 2309, column: 5, scope: !2978)
!2988 = !DILocation(line: 2310, column: 3, scope: !2953)
!2989 = !DILocation(line: 2312, column: 8, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 2312, column: 3)
!2991 = !DILocation(line: 0, scope: !2990)
!2992 = !DILocation(line: 2312, column: 15, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 2312, column: 3)
!2994 = !DILocation(line: 2312, column: 3, scope: !2990)
!2995 = !DILocation(line: 2313, column: 5, scope: !2993)
!2996 = !DILocation(line: 2312, column: 78, scope: !2993)
!2997 = !DILocation(line: 2312, column: 3, scope: !2993)
!2998 = distinct !{!2998, !2994, !2999}
!2999 = !DILocation(line: 2313, column: 5, scope: !2990)
!3000 = !DILocation(line: 2314, column: 3, scope: !2953)
!3001 = !DILocation(line: 2316, column: 8, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 2316, column: 3)
!3003 = !DILocation(line: 0, scope: !3002)
!3004 = !DILocation(line: 2316, column: 15, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 2316, column: 3)
!3006 = !DILocation(line: 2316, column: 3, scope: !3002)
!3007 = !DILocation(line: 2317, column: 5, scope: !3005)
!3008 = !DILocation(line: 2316, column: 76, scope: !3005)
!3009 = !DILocation(line: 2316, column: 3, scope: !3005)
!3010 = distinct !{!3010, !3006, !3011}
!3011 = !DILocation(line: 2317, column: 5, scope: !3002)
!3012 = !DILocation(line: 2318, column: 3, scope: !2953)
!3013 = !DILocation(line: 2320, column: 8, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 2320, column: 3)
!3015 = !DILocation(line: 0, scope: !3014)
!3016 = !DILocation(line: 2320, column: 15, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 2320, column: 3)
!3018 = !DILocation(line: 2320, column: 3, scope: !3014)
!3019 = !DILocation(line: 2321, column: 18, scope: !3017)
!3020 = !DILocation(line: 2321, column: 5, scope: !3017)
!3021 = !DILocation(line: 2320, column: 73, scope: !3017)
!3022 = !DILocation(line: 2320, column: 3, scope: !3017)
!3023 = distinct !{!3023, !3018, !3024}
!3024 = !DILocation(line: 2321, column: 19, scope: !3014)
!3025 = !DILocation(line: 2322, column: 3, scope: !2953)
!3026 = !DILocation(line: 2324, column: 23, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 2324, column: 7)
!3028 = !DILocation(line: 2324, column: 7, scope: !3027)
!3029 = !DILocation(line: 2324, column: 7, scope: !2953)
!3030 = !DILocation(line: 2325, column: 5, scope: !3027)
!3031 = !DILocation(line: 2326, column: 1, scope: !2953)
!3032 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !397, file: !397, line: 1283, type: !2610, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3033)
!3033 = !{!3034}
!3034 = !DILocalVariable(name: "g", arg: 1, scope: !3032, file: !397, line: 1283, type: !2591)
!3035 = !DILocation(line: 0, scope: !3032)
!3036 = !DILocation(line: 1285, column: 10, scope: !3032)
!3037 = !DILocation(line: 1285, column: 26, scope: !3032)
!3038 = !DILocation(line: 1285, column: 43, scope: !3032)
!3039 = !DILocation(line: 1285, column: 46, scope: !3032)
!3040 = !DILocation(line: 1285, column: 62, scope: !3032)
!3041 = !DILocation(line: 1285, column: 3, scope: !3032)
!3042 = distinct !DISubprogram(name: "gimple_op", scope: !397, file: !397, line: 1631, type: !3043, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3045)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{!484, !2591, !7}
!3045 = !{!3046, !3047}
!3046 = !DILocalVariable(name: "gs", arg: 1, scope: !3042, file: !397, line: 1631, type: !2591)
!3047 = !DILocalVariable(name: "i", arg: 2, scope: !3042, file: !397, line: 1631, type: !7)
!3048 = !DILocation(line: 0, scope: !3042)
!3049 = !DILocation(line: 1633, column: 7, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3042, file: !397, line: 1633, column: 7)
!3051 = !DILocation(line: 1633, column: 7, scope: !3042)
!3052 = !DILocation(line: 1638, column: 14, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3050, file: !397, line: 1634, column: 5)
!3054 = !DILocation(line: 1638, column: 7, scope: !3053)
!3055 = !DILocation(line: 0, scope: !3050)
!3056 = !DILocation(line: 1642, column: 1, scope: !3042)
!3057 = distinct !DISubprogram(name: "gimple_has_ops", scope: !397, file: !397, line: 1274, type: !2610, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3058)
!3058 = !{!3059}
!3059 = !DILocalVariable(name: "g", arg: 1, scope: !3057, file: !397, line: 1274, type: !2591)
!3060 = !DILocation(line: 0, scope: !3057)
!3061 = !DILocation(line: 1276, column: 10, scope: !3057)
!3062 = !DILocation(line: 1276, column: 26, scope: !3057)
!3063 = !DILocation(line: 1276, column: 41, scope: !3057)
!3064 = !DILocation(line: 1276, column: 44, scope: !3057)
!3065 = !DILocation(line: 1276, column: 60, scope: !3057)
!3066 = !DILocation(line: 1276, column: 3, scope: !3057)
!3067 = distinct !DISubprogram(name: "gimple_ops", scope: !397, file: !397, line: 1614, type: !3068, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3070)
!3068 = !DISubroutineType(types: !3069)
!3069 = !{!842, !808}
!3070 = !{!3071, !3072}
!3071 = !DILocalVariable(name: "gs", arg: 1, scope: !3067, file: !397, line: 1614, type: !808)
!3072 = !DILocalVariable(name: "off", scope: !3067, file: !397, line: 1616, type: !953)
!3073 = !DILocation(line: 0, scope: !3067)
!3074 = !DILocation(line: 1621, column: 28, scope: !3067)
!3075 = !DILocation(line: 1621, column: 9, scope: !3067)
!3076 = !DILocation(line: 1622, column: 3, scope: !3067)
!3077 = !DILocation(line: 1624, column: 20, scope: !3067)
!3078 = !DILocation(line: 1624, column: 32, scope: !3067)
!3079 = !DILocation(line: 1624, column: 10, scope: !3067)
!3080 = !DILocation(line: 1624, column: 3, scope: !3067)
!3081 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !397, file: !397, line: 1073, type: !3082, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3084)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{!435, !808}
!3084 = !{!3085}
!3085 = !DILocalVariable(name: "gs", arg: 1, scope: !3081, file: !397, line: 1073, type: !808)
!3086 = !DILocation(line: 0, scope: !3081)
!3087 = !DILocation(line: 1075, column: 24, scope: !3081)
!3088 = !DILocation(line: 1075, column: 10, scope: !3081)
!3089 = !DILocation(line: 1075, column: 3, scope: !3081)
!3090 = distinct !DISubprogram(name: "gss_for_code", scope: !397, file: !397, line: 1061, type: !3091, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3093)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!435, !396}
!3093 = !{!3094}
!3094 = !DILocalVariable(name: "code", arg: 1, scope: !3090, file: !397, line: 1061, type: !396)
!3095 = !DILocation(line: 0, scope: !3090)
!3096 = !DILocation(line: 1066, column: 10, scope: !3090)
!3097 = !DILocation(line: 1066, column: 3, scope: !3090)
!3098 = distinct !DISubprogram(name: "gsi_start_bb", scope: !397, file: !397, line: 4418, type: !3099, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3101)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{!2763, !1293}
!3101 = !{!3102, !3103, !3104}
!3102 = !DILocalVariable(name: "bb", arg: 1, scope: !3098, file: !397, line: 4418, type: !1293)
!3103 = !DILocalVariable(name: "i", scope: !3098, file: !397, line: 4420, type: !2763)
!3104 = !DILocalVariable(name: "seq", scope: !3098, file: !397, line: 4421, type: !798)
!3105 = !DILocation(line: 0, scope: !3098)
!3106 = !DILocation(line: 4420, column: 24, scope: !3098)
!3107 = !DILocation(line: 4423, column: 9, scope: !3098)
!3108 = !DILocation(line: 4424, column: 11, scope: !3098)
!3109 = !DILocation(line: 4424, column: 5, scope: !3098)
!3110 = !DILocation(line: 4424, column: 9, scope: !3098)
!3111 = !DILocation(line: 4425, column: 5, scope: !3098)
!3112 = !DILocation(line: 4425, column: 9, scope: !3098)
!3113 = !DILocation(line: 4426, column: 5, scope: !3098)
!3114 = !DILocation(line: 4426, column: 8, scope: !3098)
!3115 = !DILocation(line: 4429, column: 1, scope: !3098)
!3116 = distinct !DISubprogram(name: "gsi_end_p", scope: !397, file: !397, line: 4467, type: !3117, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3119)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!476, !2763}
!3119 = !{!3120}
!3120 = !DILocalVariable(name: "i", arg: 1, scope: !3116, file: !397, line: 4467, type: !2763)
!3121 = !DILocation(line: 4467, column: 33, scope: !3116)
!3122 = !DILocation(line: 4469, column: 12, scope: !3116)
!3123 = !DILocation(line: 4469, column: 16, scope: !3116)
!3124 = !DILocation(line: 4469, column: 10, scope: !3116)
!3125 = !DILocation(line: 4469, column: 3, scope: !3116)
!3126 = distinct !DISubprogram(name: "nonpure_call_p", scope: !3, file: !3, line: 751, type: !3127, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3129)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!476, !808}
!3129 = !{!3130}
!3130 = !DILocalVariable(name: "stmt", arg: 1, scope: !3126, file: !3, line: 751, type: !808)
!3131 = !DILocation(line: 0, scope: !3126)
!3132 = !DILocation(line: 753, column: 7, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 753, column: 7)
!3134 = !DILocation(line: 753, column: 26, scope: !3133)
!3135 = !DILocation(line: 753, column: 7, scope: !3126)
!3136 = !DILocation(line: 756, column: 10, scope: !3126)
!3137 = !DILocation(line: 756, column: 3, scope: !3126)
!3138 = !DILocation(line: 757, column: 1, scope: !3126)
!3139 = distinct !DISubprogram(name: "gsi_stmt", scope: !397, file: !397, line: 4501, type: !3140, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3142)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!808, !2763}
!3142 = !{!3143}
!3143 = !DILocalVariable(name: "i", arg: 1, scope: !3139, file: !397, line: 4501, type: !2763)
!3144 = !DILocation(line: 4501, column: 32, scope: !3139)
!3145 = !DILocation(line: 4503, column: 12, scope: !3139)
!3146 = !DILocation(line: 4503, column: 17, scope: !3139)
!3147 = !DILocation(line: 4503, column: 3, scope: !3139)
!3148 = distinct !DISubprogram(name: "gsi_next", scope: !397, file: !397, line: 4485, type: !3149, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3152)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{null, !3151}
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!3152 = !{!3153}
!3153 = !DILocalVariable(name: "i", arg: 1, scope: !3148, file: !397, line: 4485, type: !3151)
!3154 = !DILocation(line: 0, scope: !3148)
!3155 = !DILocation(line: 4487, column: 15, scope: !3148)
!3156 = !DILocation(line: 4487, column: 20, scope: !3148)
!3157 = !DILocation(line: 4487, column: 10, scope: !3148)
!3158 = !DILocation(line: 4488, column: 1, scope: !3148)
!3159 = distinct !DISubprogram(name: "SET_BIT", scope: !2753, file: !2753, line: 63, type: !3160, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3162)
!3160 = !DISubroutineType(types: !3161)
!3161 = !{null, !2752, !7}
!3162 = !{!3163, !3164, !3165}
!3163 = !DILocalVariable(name: "map", arg: 1, scope: !3159, file: !2753, line: 63, type: !2752)
!3164 = !DILocalVariable(name: "bitno", arg: 2, scope: !3159, file: !2753, line: 63, type: !7)
!3165 = !DILocalVariable(name: "oldbit", scope: !3166, file: !2753, line: 67, type: !476)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !2753, line: 66, column: 5)
!3167 = distinct !DILexicalBlock(scope: !3159, file: !2753, line: 65, column: 7)
!3168 = !DILocation(line: 0, scope: !3159)
!3169 = !DILocation(line: 65, column: 12, scope: !3167)
!3170 = !DILocation(line: 65, column: 7, scope: !3167)
!3171 = !DILocation(line: 65, column: 7, scope: !3159)
!3172 = !DILocation(line: 73, column: 40, scope: !3159)
!3173 = !DILocation(line: 73, column: 29, scope: !3159)
!3174 = !DILocation(line: 72, column: 19, scope: !3159)
!3175 = !DILocation(line: 72, column: 3, scope: !3159)
!3176 = !DILocation(line: 68, column: 16, scope: !3166)
!3177 = !DILocation(line: 69, column: 12, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3166, file: !2753, line: 69, column: 11)
!3179 = !DILocation(line: 69, column: 11, scope: !3166)
!3180 = !DILocation(line: 70, column: 2, scope: !3178)
!3181 = !DILocation(line: 70, column: 41, scope: !3178)
!3182 = !DILocation(line: 73, column: 5, scope: !3159)
!3183 = !DILocation(line: 74, column: 1, scope: !3159)
!3184 = distinct !DISubprogram(name: "fill_always_executed_in", scope: !3, file: !3, line: 2195, type: !3185, scopeLine: 2196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3187)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{null, !1023, !2752}
!3187 = !{!3188, !3189, !3190, !3191, !3193, !3194, !3195, !3196, !3197}
!3188 = !DILocalVariable(name: "loop", arg: 1, scope: !3184, file: !3, line: 2195, type: !1023)
!3189 = !DILocalVariable(name: "contains_call", arg: 2, scope: !3184, file: !3, line: 2195, type: !2752)
!3190 = !DILocalVariable(name: "bb", scope: !3184, file: !3, line: 2197, type: !1293)
!3191 = !DILocalVariable(name: "bbs", scope: !3184, file: !3, line: 2197, type: !3192)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!3193 = !DILocalVariable(name: "last", scope: !3184, file: !3, line: 2197, type: !1293)
!3194 = !DILocalVariable(name: "i", scope: !3184, file: !3, line: 2198, type: !7)
!3195 = !DILocalVariable(name: "e", scope: !3184, file: !3, line: 2199, type: !788)
!3196 = !DILocalVariable(name: "inn_loop", scope: !3184, file: !3, line: 2200, type: !1023)
!3197 = !DILocalVariable(name: "ei", scope: !3198, file: !3, line: 2208, type: !3203)
!3198 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 2207, column: 2)
!3199 = distinct !DILexicalBlock(scope: !3200, file: !3, line: 2206, column: 7)
!3200 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 2206, column: 7)
!3201 = distinct !DILexicalBlock(scope: !3202, file: !3, line: 2203, column: 5)
!3202 = distinct !DILexicalBlock(scope: !3184, file: !3, line: 2202, column: 7)
!3203 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !343, line: 682, baseType: !3204)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 679, size: 128, elements: !3205)
!3205 = !{!3206, !3207}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3204, file: !343, line: 680, baseType: !7, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3204, file: !343, line: 681, baseType: !3208, size: 64, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!3209 = !DILocation(line: 0, scope: !3184)
!3210 = !DILocation(line: 2199, column: 3, scope: !3184)
!3211 = !DILocation(line: 2202, column: 14, scope: !3202)
!3212 = !DILocation(line: 2202, column: 22, scope: !3202)
!3213 = !DILocation(line: 2202, column: 8, scope: !3202)
!3214 = !DILocation(line: 2202, column: 7, scope: !3184)
!3215 = !DILocation(line: 2204, column: 13, scope: !3201)
!3216 = !DILocation(line: 0, scope: !3199)
!3217 = !DILocation(line: 0, scope: !3198)
!3218 = !DILocation(line: 0, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 2211, column: 8)
!3220 = !DILocation(line: 0, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 2217, column: 4)
!3222 = !DILocation(line: 0, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3221, file: !3, line: 2217, column: 4)
!3224 = !DILocation(line: 2206, column: 12, scope: !3200)
!3225 = !DILocation(line: 0, scope: !3200)
!3226 = !DILocation(line: 2200, column: 16, scope: !3184)
!3227 = !DILocation(line: 2206, column: 29, scope: !3199)
!3228 = !DILocation(line: 2206, column: 21, scope: !3199)
!3229 = !DILocation(line: 2206, column: 7, scope: !3200)
!3230 = !DILocation(line: 2208, column: 4, scope: !3198)
!3231 = !DILocation(line: 2209, column: 9, scope: !3198)
!3232 = !DILocation(line: 2211, column: 46, scope: !3219)
!3233 = !DILocation(line: 2211, column: 8, scope: !3219)
!3234 = !DILocation(line: 2211, column: 8, scope: !3198)
!3235 = !DILocation(line: 2214, column: 8, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 2214, column: 8)
!3237 = !DILocation(line: 2214, column: 8, scope: !3198)
!3238 = !DILocation(line: 2217, column: 4, scope: !3221)
!3239 = !DILocation(line: 2217, column: 4, scope: !3223)
!3240 = !DILocation(line: 2218, column: 40, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 2218, column: 10)
!3242 = !DILocation(line: 2218, column: 43, scope: !3241)
!3243 = !DILocation(line: 2218, column: 11, scope: !3241)
!3244 = !DILocation(line: 2218, column: 10, scope: !3223)
!3245 = distinct !{!3245, !3238, !3246}
!3246 = !DILocation(line: 2219, column: 8, scope: !3221)
!3247 = !DILocation(line: 2220, column: 8, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 2220, column: 8)
!3249 = !DILocation(line: 2220, column: 8, scope: !3198)
!3250 = !DILocation(line: 2225, column: 12, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 2225, column: 8)
!3252 = !DILocation(line: 2225, column: 18, scope: !3251)
!3253 = !DILocation(line: 2225, column: 8, scope: !3198)
!3254 = !DILocation(line: 2228, column: 9, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 2228, column: 8)
!3256 = !DILocation(line: 2228, column: 8, scope: !3198)
!3257 = !DILocation(line: 2231, column: 12, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 2231, column: 8)
!3259 = !DILocation(line: 2231, column: 25, scope: !3258)
!3260 = !DILocation(line: 2231, column: 32, scope: !3258)
!3261 = !DILocation(line: 2231, column: 8, scope: !3198)
!3262 = !DILocation(line: 2233, column: 51, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 2233, column: 12)
!3264 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 2232, column: 6)
!3265 = !DILocation(line: 2233, column: 13, scope: !3263)
!3266 = !DILocation(line: 2233, column: 12, scope: !3264)
!3267 = !DILocation(line: 2238, column: 23, scope: !3264)
!3268 = !DILocation(line: 2239, column: 6, scope: !3264)
!3269 = !DILocation(line: 2240, column: 2, scope: !3199)
!3270 = !DILocation(line: 2206, column: 41, scope: !3199)
!3271 = !DILocation(line: 2206, column: 7, scope: !3199)
!3272 = distinct !{!3272, !3229, !3273}
!3273 = !DILocation(line: 2240, column: 2, scope: !3200)
!3274 = !DILocation(line: 2242, column: 7, scope: !3201)
!3275 = !DILocation(line: 0, scope: !3201)
!3276 = !DILocation(line: 2244, column: 10, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 2243, column: 2)
!3278 = !DILocation(line: 2244, column: 14, scope: !3277)
!3279 = !DILocation(line: 2245, column: 22, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 2245, column: 8)
!3281 = !DILocation(line: 2245, column: 13, scope: !3280)
!3282 = !DILocation(line: 2245, column: 8, scope: !3277)
!3283 = !DILocation(line: 2247, column: 11, scope: !3277)
!3284 = distinct !{!3284, !3274, !3285}
!3285 = !DILocation(line: 2248, column: 2, scope: !3201)
!3286 = !DILocation(line: 2250, column: 13, scope: !3201)
!3287 = !DILocation(line: 2250, column: 7, scope: !3201)
!3288 = !DILocation(line: 2251, column: 5, scope: !3201)
!3289 = !DILocation(line: 2253, column: 21, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3184, file: !3, line: 2253, column: 3)
!3291 = !DILocation(line: 2253, column: 8, scope: !3290)
!3292 = !DILocation(line: 0, scope: !3290)
!3293 = !DILocation(line: 2253, column: 3, scope: !3290)
!3294 = !DILocation(line: 2254, column: 5, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3290, file: !3, line: 2253, column: 3)
!3296 = !DILocation(line: 2253, column: 47, scope: !3295)
!3297 = !DILocation(line: 2253, column: 3, scope: !3295)
!3298 = distinct !{!3298, !3293, !3299}
!3299 = !DILocation(line: 2254, column: 49, scope: !3290)
!3300 = !DILocation(line: 2255, column: 1, scope: !3184)
!3301 = distinct !DISubprogram(name: "bb_seq", scope: !397, file: !397, line: 237, type: !3302, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3307)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{!798, !3304}
!3304 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !485, line: 112, baseType: !3305)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 64)
!3306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !773)
!3307 = !{!3308}
!3308 = !DILocalVariable(name: "bb", arg: 1, scope: !3301, file: !397, line: 237, type: !3304)
!3309 = !DILocation(line: 0, scope: !3301)
!3310 = !DILocation(line: 239, column: 17, scope: !3301)
!3311 = !DILocation(line: 239, column: 23, scope: !3301)
!3312 = !DILocation(line: 239, column: 33, scope: !3301)
!3313 = !DILocation(line: 239, column: 43, scope: !3301)
!3314 = !DILocation(line: 239, column: 36, scope: !3301)
!3315 = !DILocation(line: 239, column: 10, scope: !3301)
!3316 = !DILocation(line: 239, column: 68, scope: !3301)
!3317 = !DILocation(line: 239, column: 3, scope: !3301)
!3318 = distinct !DISubprogram(name: "gimple_seq_first", scope: !397, file: !397, line: 159, type: !3319, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3324)
!3319 = !DISubroutineType(types: !3320)
!3320 = !{!803, !3321}
!3321 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !485, line: 67, baseType: !3322)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !800)
!3324 = !{!3325}
!3325 = !DILocalVariable(name: "s", arg: 1, scope: !3318, file: !397, line: 159, type: !3321)
!3326 = !DILocation(line: 0, scope: !3318)
!3327 = !DILocation(line: 161, column: 10, scope: !3318)
!3328 = !DILocation(line: 161, column: 17, scope: !3318)
!3329 = !DILocation(line: 161, column: 3, scope: !3318)
!3330 = distinct !DISubprogram(name: "ei_start_1", scope: !343, file: !343, line: 696, type: !3331, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3333)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{!3203, !3208}
!3333 = !{!3334, !3335}
!3334 = !DILocalVariable(name: "ev", arg: 1, scope: !3330, file: !343, line: 696, type: !3208)
!3335 = !DILocalVariable(name: "i", scope: !3330, file: !343, line: 698, type: !3203)
!3336 = !DILocation(line: 0, scope: !3330)
!3337 = !DILocation(line: 700, column: 5, scope: !3330)
!3338 = !DILocation(line: 700, column: 11, scope: !3330)
!3339 = !DILocation(line: 701, column: 5, scope: !3330)
!3340 = !DILocation(line: 701, column: 15, scope: !3330)
!3341 = !DILocation(line: 703, column: 3, scope: !3330)
!3342 = distinct !DISubprogram(name: "ei_cond", scope: !343, file: !343, line: 771, type: !3343, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3346)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{!476, !3203, !3345}
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!3346 = !{!3347, !3348}
!3347 = !DILocalVariable(name: "ei", arg: 1, scope: !3342, file: !343, line: 771, type: !3203)
!3348 = !DILocalVariable(name: "p", arg: 2, scope: !3342, file: !343, line: 771, type: !3345)
!3349 = !DILocation(line: 0, scope: !3342)
!3350 = !DILocation(line: 773, column: 8, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3342, file: !343, line: 773, column: 7)
!3352 = !DILocation(line: 773, column: 7, scope: !3342)
!3353 = !DILocation(line: 775, column: 12, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3351, file: !343, line: 774, column: 5)
!3355 = !DILocation(line: 776, column: 7, scope: !3354)
!3356 = !DILocation(line: 781, column: 7, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3351, file: !343, line: 779, column: 5)
!3358 = !DILocation(line: 0, scope: !3351)
!3359 = !DILocation(line: 783, column: 1, scope: !3342)
!3360 = distinct !DISubprogram(name: "ei_next", scope: !343, file: !343, line: 736, type: !3361, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3364)
!3361 = !DISubroutineType(types: !3362)
!3362 = !{null, !3363}
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 64)
!3364 = !{!3365}
!3365 = !DILocalVariable(name: "i", arg: 1, scope: !3360, file: !343, line: 736, type: !3363)
!3366 = !DILocation(line: 0, scope: !3360)
!3367 = !DILocation(line: 738, column: 3, scope: !3360)
!3368 = !DILocation(line: 739, column: 11, scope: !3360)
!3369 = !DILocation(line: 740, column: 1, scope: !3360)
!3370 = distinct !DISubprogram(name: "ei_end_p", scope: !343, file: !343, line: 721, type: !3371, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3373)
!3371 = !DISubroutineType(types: !3372)
!3372 = !{!476, !3203}
!3373 = !{!3374}
!3374 = !DILocalVariable(name: "i", arg: 1, scope: !3370, file: !343, line: 721, type: !3203)
!3375 = !DILocation(line: 723, column: 22, scope: !3370)
!3376 = !DILocation(line: 723, column: 19, scope: !3370)
!3377 = !DILocation(line: 723, column: 10, scope: !3370)
!3378 = !DILocation(line: 723, column: 3, scope: !3370)
!3379 = distinct !DISubprogram(name: "ei_edge", scope: !343, file: !343, line: 752, type: !3380, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3382)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{!788, !3203}
!3382 = !{!3383}
!3383 = !DILocalVariable(name: "i", arg: 1, scope: !3379, file: !343, line: 752, type: !3203)
!3384 = !DILocation(line: 754, column: 10, scope: !3379)
!3385 = !DILocation(line: 754, column: 3, scope: !3379)
!3386 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !343, file: !343, line: 150, type: !3387, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3391)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{!7, !3389}
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 64)
!3390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !781)
!3391 = !{!3392}
!3392 = !DILocalVariable(name: "vec_", arg: 1, scope: !3386, file: !343, line: 150, type: !3389)
!3393 = !DILocation(line: 0, scope: !3386)
!3394 = !DILocation(line: 150, column: 1, scope: !3386)
!3395 = distinct !DISubprogram(name: "ei_container", scope: !343, file: !343, line: 685, type: !3396, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3398)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!776, !3203}
!3398 = !{!3399}
!3399 = !DILocalVariable(name: "i", arg: 1, scope: !3395, file: !343, line: 685, type: !3203)
!3400 = !DILocation(line: 687, column: 3, scope: !3395)
!3401 = !DILocation(line: 688, column: 10, scope: !3395)
!3402 = !DILocation(line: 688, column: 3, scope: !3395)
!3403 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !343, file: !343, line: 150, type: !3404, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3406)
!3404 = !DISubroutineType(types: !3405)
!3405 = !{!788, !3389, !7}
!3406 = !{!3407, !3408}
!3407 = !DILocalVariable(name: "vec_", arg: 1, scope: !3403, file: !343, line: 150, type: !3389)
!3408 = !DILocalVariable(name: "ix_", arg: 2, scope: !3403, file: !343, line: 150, type: !7)
!3409 = !DILocation(line: 0, scope: !3403)
!3410 = !DILocation(line: 150, column: 1, scope: !3403)
!3411 = distinct !DISubprogram(name: "memref_hash", scope: !3, file: !3, line: 1181, type: !1333, scopeLine: 1182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3412)
!3412 = !{!3413, !3414}
!3413 = !DILocalVariable(name: "obj", arg: 1, scope: !3411, file: !3, line: 1181, type: !1167)
!3414 = !DILocalVariable(name: "mem", scope: !3411, file: !3, line: 1183, type: !3415)
!3415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!3416 = !DILocation(line: 0, scope: !3411)
!3417 = !DILocation(line: 1185, column: 15, scope: !3411)
!3418 = !DILocation(line: 1185, column: 3, scope: !3411)
!3419 = distinct !DISubprogram(name: "memref_eq", scope: !3, file: !3, line: 1192, type: !1339, scopeLine: 1193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3420)
!3420 = !{!3421, !3422, !3423}
!3421 = !DILocalVariable(name: "obj1", arg: 1, scope: !3419, file: !3, line: 1192, type: !1167)
!3422 = !DILocalVariable(name: "obj2", arg: 2, scope: !3419, file: !3, line: 1192, type: !1167)
!3423 = !DILocalVariable(name: "mem1", scope: !3419, file: !3, line: 1194, type: !3415)
!3424 = !DILocation(line: 0, scope: !3419)
!3425 = !DILocation(line: 1196, column: 33, scope: !3419)
!3426 = !DILocation(line: 1196, column: 38, scope: !3419)
!3427 = !DILocation(line: 1196, column: 10, scope: !3419)
!3428 = !DILocation(line: 1196, column: 3, scope: !3419)
!3429 = distinct !DISubprogram(name: "memref_free", scope: !3, file: !3, line: 1219, type: !1344, scopeLine: 1220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3430)
!3430 = !{!3431, !3432, !3434, !3435}
!3431 = !DILocalVariable(name: "obj", arg: 1, scope: !3429, file: !3, line: 1219, type: !481)
!3432 = !DILocalVariable(name: "mem", scope: !3429, file: !3, line: 1221, type: !3433)
!3433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1921)
!3434 = !DILocalVariable(name: "i", scope: !3429, file: !3, line: 1222, type: !7)
!3435 = !DILocalVariable(name: "accs", scope: !3429, file: !3, line: 1223, type: !1890)
!3436 = !DILocation(line: 0, scope: !3429)
!3437 = !DILocation(line: 1223, column: 3, scope: !3429)
!3438 = !DILocation(line: 1225, column: 3, scope: !3429)
!3439 = !DILocation(line: 1226, column: 3, scope: !3429)
!3440 = !DILocation(line: 1227, column: 3, scope: !3429)
!3441 = !DILocation(line: 1228, column: 3, scope: !3429)
!3442 = !DILocation(line: 1229, column: 3, scope: !3429)
!3443 = !DILocation(line: 0, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 1231, column: 3)
!3445 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 1231, column: 3)
!3446 = !DILocation(line: 1231, column: 8, scope: !3445)
!3447 = !DILocation(line: 0, scope: !3445)
!3448 = !DILocation(line: 1231, column: 15, scope: !3444)
!3449 = !DILocation(line: 1231, column: 3, scope: !3445)
!3450 = !DILocation(line: 1232, column: 24, scope: !3444)
!3451 = !DILocation(line: 1232, column: 5, scope: !3444)
!3452 = !DILocation(line: 1231, column: 78, scope: !3444)
!3453 = !DILocation(line: 1231, column: 3, scope: !3444)
!3454 = distinct !{!3454, !3449, !3455}
!3455 = !DILocation(line: 1232, column: 28, scope: !3445)
!3456 = !DILocation(line: 1233, column: 3, scope: !3429)
!3457 = !DILocation(line: 1235, column: 3, scope: !3429)
!3458 = !DILocation(line: 1236, column: 3, scope: !3429)
!3459 = !DILocation(line: 1237, column: 1, scope: !3429)
!3460 = distinct !DISubprogram(name: "VEC_bitmap_heap_alloc", scope: !3, file: !3, line: 164, type: !3461, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3463)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!1922, !477}
!3463 = !{!3464}
!3464 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3460, file: !3, line: 164, type: !477)
!3465 = !DILocation(line: 0, scope: !3460)
!3466 = !DILocation(line: 164, column: 1, scope: !3460)
!3467 = distinct !DISubprogram(name: "number_of_loops", scope: !330, file: !330, line: 459, type: !3468, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2048)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!7}
!3470 = !DILocation(line: 461, column: 8, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3467, file: !330, line: 461, column: 7)
!3472 = !DILocation(line: 461, column: 7, scope: !3467)
!3473 = !DILocation(line: 464, column: 10, scope: !3467)
!3474 = !DILocation(line: 464, column: 3, scope: !3467)
!3475 = !DILocation(line: 0, scope: !3467)
!3476 = !DILocation(line: 465, column: 1, scope: !3467)
!3477 = distinct !DISubprogram(name: "VEC_htab_t_heap_alloc", scope: !3, file: !3, line: 167, type: !3478, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3480)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!1934, !477}
!3480 = !{!3481}
!3481 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3477, file: !3, line: 167, type: !477)
!3482 = !DILocation(line: 0, scope: !3477)
!3483 = !DILocation(line: 167, column: 1, scope: !3477)
!3484 = distinct !DISubprogram(name: "VEC_bitmap_base_quick_push", scope: !3, file: !3, line: 163, type: !3485, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3489)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!3487, !3488, !1409}
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!3489 = !{!3490, !3491, !3492}
!3490 = !DILocalVariable(name: "vec_", arg: 1, scope: !3484, file: !3, line: 163, type: !3488)
!3491 = !DILocalVariable(name: "obj_", arg: 2, scope: !3484, file: !3, line: 163, type: !1409)
!3492 = !DILocalVariable(name: "slot_", scope: !3484, file: !3, line: 163, type: !3487)
!3493 = !DILocation(line: 0, scope: !3484)
!3494 = !DILocation(line: 163, column: 1, scope: !3484)
!3495 = distinct !DISubprogram(name: "vtoe_hash", scope: !3, file: !3, line: 1431, type: !1333, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3496)
!3496 = !{!3497, !3498}
!3497 = !DILocalVariable(name: "obj", arg: 1, scope: !3495, file: !3, line: 1431, type: !1167)
!3498 = !DILocalVariable(name: "vtoe", scope: !3495, file: !3, line: 1433, type: !3499)
!3499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1946)
!3500 = !DILocation(line: 0, scope: !3495)
!3501 = !DILocation(line: 1436, column: 16, scope: !3495)
!3502 = !DILocation(line: 1436, column: 3, scope: !3495)
!3503 = distinct !DISubprogram(name: "vtoe_eq", scope: !3, file: !3, line: 1443, type: !1339, scopeLine: 1444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3504)
!3504 = !{!3505, !3506, !3507, !3508}
!3505 = !DILocalVariable(name: "obj1", arg: 1, scope: !3503, file: !3, line: 1443, type: !1167)
!3506 = !DILocalVariable(name: "obj2", arg: 2, scope: !3503, file: !3, line: 1443, type: !1167)
!3507 = !DILocalVariable(name: "vtoe", scope: !3503, file: !3, line: 1445, type: !3499)
!3508 = !DILocalVariable(name: "uid", scope: !3503, file: !3, line: 1447, type: !3509)
!3509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!3510 = !DILocation(line: 0, scope: !3503)
!3511 = !DILocation(line: 1447, column: 31, scope: !3503)
!3512 = !DILocation(line: 1449, column: 16, scope: !3503)
!3513 = !DILocation(line: 1449, column: 23, scope: !3503)
!3514 = !DILocation(line: 1449, column: 20, scope: !3503)
!3515 = !DILocation(line: 1449, column: 3, scope: !3503)
!3516 = distinct !DISubprogram(name: "vtoe_free", scope: !3, file: !3, line: 1455, type: !1344, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3517)
!3517 = !{!3518, !3519}
!3518 = !DILocalVariable(name: "obj", arg: 1, scope: !3516, file: !3, line: 1455, type: !481)
!3519 = !DILocalVariable(name: "vtoe", scope: !3516, file: !3, line: 1457, type: !3520)
!3520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1955)
!3521 = !DILocation(line: 0, scope: !3516)
!3522 = !DILocation(line: 1460, column: 3, scope: !3516)
!3523 = !DILocation(line: 1461, column: 3, scope: !3516)
!3524 = !DILocation(line: 1462, column: 3, scope: !3516)
!3525 = !DILocation(line: 1463, column: 1, scope: !3516)
!3526 = distinct !DISubprogram(name: "VEC_htab_t_base_quick_push", scope: !3, file: !3, line: 166, type: !3527, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3531)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{!3529, !3530, !1325}
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!3531 = !{!3532, !3533, !3534}
!3532 = !DILocalVariable(name: "vec_", arg: 1, scope: !3526, file: !3, line: 166, type: !3530)
!3533 = !DILocalVariable(name: "obj_", arg: 2, scope: !3526, file: !3, line: 166, type: !1325)
!3534 = !DILocalVariable(name: "slot_", scope: !3526, file: !3, line: 166, type: !3529)
!3535 = !DILocation(line: 0, scope: !3526)
!3536 = !DILocation(line: 166, column: 1, scope: !3526)
!3537 = distinct !DISubprogram(name: "gather_mem_refs_in_loops", scope: !3, file: !3, line: 1373, type: !2740, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3538)
!3538 = !{!3539, !3540, !3541, !3542, !3548, !3549, !3550, !3551, !3552}
!3539 = !DILocalVariable(name: "bsi", scope: !3537, file: !3, line: 1375, type: !2763)
!3540 = !DILocalVariable(name: "bb", scope: !3537, file: !3, line: 1376, type: !1293)
!3541 = !DILocalVariable(name: "loop", scope: !3537, file: !3, line: 1377, type: !1023)
!3542 = !DILocalVariable(name: "li", scope: !3537, file: !3, line: 1378, type: !3543)
!3543 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_iterator", file: !330, line: 515, baseType: !3544)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !330, line: 508, size: 128, elements: !3545)
!3545 = !{!3546, !3547}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "to_visit", scope: !3544, file: !330, line: 511, baseType: !1969, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !3544, file: !330, line: 514, baseType: !7, size: 32, offset: 64)
!3548 = !DILocalVariable(name: "clvo", scope: !3537, file: !3, line: 1379, type: !1409)
!3549 = !DILocalVariable(name: "clvi", scope: !3537, file: !3, line: 1379, type: !1409)
!3550 = !DILocalVariable(name: "lrefs", scope: !3537, file: !3, line: 1380, type: !1409)
!3551 = !DILocalVariable(name: "alrefs", scope: !3537, file: !3, line: 1380, type: !1409)
!3552 = !DILocalVariable(name: "alrefso", scope: !3537, file: !3, line: 1380, type: !1409)
!3553 = !DILocation(line: 1375, column: 3, scope: !3537)
!3554 = !DILocation(line: 1377, column: 3, scope: !3537)
!3555 = !DILocation(line: 1378, column: 3, scope: !3537)
!3556 = !DILocation(line: 1382, column: 3, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3537, file: !3, line: 1382, column: 3)
!3558 = !DILocation(line: 0, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !3, line: 1383, column: 5)
!3560 = distinct !DILexicalBlock(scope: !3557, file: !3, line: 1382, column: 3)
!3561 = !DILocation(line: 0, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1388, column: 7)
!3563 = !DILocation(line: 1382, column: 3, scope: !3560)
!3564 = !DILocation(line: 0, scope: !3557)
!3565 = !DILocation(line: 0, scope: !3537)
!3566 = !DILocation(line: 1384, column: 18, scope: !3559)
!3567 = !DILocation(line: 1384, column: 12, scope: !3559)
!3568 = !DILocation(line: 1385, column: 11, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1385, column: 11)
!3570 = !DILocation(line: 1385, column: 19, scope: !3569)
!3571 = !DILocation(line: 1385, column: 34, scope: !3569)
!3572 = !DILocation(line: 1385, column: 16, scope: !3569)
!3573 = !DILocation(line: 1385, column: 11, scope: !3559)
!3574 = !DILocation(line: 1388, column: 18, scope: !3562)
!3575 = !DILocation(line: 1388, column: 12, scope: !3562)
!3576 = !DILocation(line: 1388, column: 38, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 1388, column: 7)
!3578 = !DILocation(line: 1388, column: 37, scope: !3577)
!3579 = !DILocation(line: 1388, column: 7, scope: !3562)
!3580 = !DILocation(line: 1389, column: 24, scope: !3577)
!3581 = !DILocation(line: 1389, column: 30, scope: !3577)
!3582 = !DILocation(line: 1389, column: 2, scope: !3577)
!3583 = !DILocation(line: 1388, column: 55, scope: !3577)
!3584 = !DILocation(line: 1388, column: 7, scope: !3577)
!3585 = distinct !{!3585, !3579, !3586}
!3586 = !DILocation(line: 1389, column: 44, scope: !3562)
!3587 = !DILocation(line: 0, scope: !3560)
!3588 = distinct !{!3588, !3556, !3589}
!3589 = !DILocation(line: 1390, column: 5, scope: !3557)
!3590 = !DILocation(line: 1394, column: 3, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3537, file: !3, line: 1394, column: 3)
!3592 = !DILocation(line: 1394, column: 3, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 1394, column: 3)
!3594 = !DILocation(line: 1396, column: 15, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 1395, column: 5)
!3596 = !DILocation(line: 1397, column: 16, scope: !3595)
!3597 = !DILocation(line: 1398, column: 7, scope: !3595)
!3598 = !DILocation(line: 1400, column: 23, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 1400, column: 11)
!3600 = !DILocation(line: 1400, column: 11, scope: !3599)
!3601 = !DILocation(line: 1400, column: 32, scope: !3599)
!3602 = !DILocation(line: 1400, column: 47, scope: !3599)
!3603 = !DILocation(line: 1400, column: 29, scope: !3599)
!3604 = !DILocation(line: 1400, column: 11, scope: !3595)
!3605 = !DILocation(line: 1403, column: 14, scope: !3595)
!3606 = !DILocation(line: 1404, column: 14, scope: !3595)
!3607 = !DILocation(line: 1406, column: 7, scope: !3595)
!3608 = !DILocation(line: 1408, column: 17, scope: !3595)
!3609 = !DILocation(line: 1410, column: 7, scope: !3595)
!3610 = !DILocation(line: 1411, column: 5, scope: !3595)
!3611 = distinct !{!3611, !3590, !3612}
!3612 = !DILocation(line: 1411, column: 5, scope: !3591)
!3613 = !DILocation(line: 1412, column: 1, scope: !3537)
!3614 = distinct !DISubprogram(name: "create_vop_ref_mapping", scope: !3, file: !3, line: 1554, type: !2740, scopeLine: 1555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3615)
!3615 = !{!3616, !3617}
!3616 = !DILocalVariable(name: "li", scope: !3614, file: !3, line: 1556, type: !3543)
!3617 = !DILocalVariable(name: "loop", scope: !3614, file: !3, line: 1557, type: !1023)
!3618 = !DILocation(line: 1556, column: 3, scope: !3614)
!3619 = !DILocation(line: 1557, column: 3, scope: !3614)
!3620 = !DILocation(line: 0, scope: !3614)
!3621 = !DILocation(line: 1559, column: 3, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1559, column: 3)
!3623 = !DILocation(line: 1559, column: 3, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 1559, column: 3)
!3625 = !DILocation(line: 1561, column: 7, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 1560, column: 5)
!3627 = distinct !{!3627, !3621, !3628}
!3628 = !DILocation(line: 1562, column: 5, scope: !3622)
!3629 = !DILocation(line: 1563, column: 1, scope: !3614)
!3630 = distinct !DISubprogram(name: "VEC_mem_ref_locs_p_base_iterate", scope: !3, file: !3, line: 124, type: !3631, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3636)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!477, !3633, !7, !3635}
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1883)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!3636 = !{!3637, !3638, !3639}
!3637 = !DILocalVariable(name: "vec_", arg: 1, scope: !3630, file: !3, line: 124, type: !3633)
!3638 = !DILocalVariable(name: "ix_", arg: 2, scope: !3630, file: !3, line: 124, type: !7)
!3639 = !DILocalVariable(name: "ptr", arg: 3, scope: !3630, file: !3, line: 124, type: !3635)
!3640 = !DILocation(line: 0, scope: !3630)
!3641 = !DILocation(line: 124, column: 1, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 124, column: 1)
!3643 = !DILocation(line: 124, column: 1, scope: !3630)
!3644 = !DILocation(line: 124, column: 1, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 124, column: 1)
!3646 = !DILocation(line: 124, column: 1, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 124, column: 1)
!3648 = !DILocation(line: 0, scope: !3642)
!3649 = distinct !DISubprogram(name: "free_mem_ref_locs", scope: !3, file: !3, line: 1202, type: !3650, scopeLine: 1203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3652)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{null, !1890}
!3652 = !{!3653, !3654, !3655}
!3653 = !DILocalVariable(name: "accs", arg: 1, scope: !3649, file: !3, line: 1202, type: !1890)
!3654 = !DILocalVariable(name: "i", scope: !3649, file: !3, line: 1204, type: !7)
!3655 = !DILocalVariable(name: "loc", scope: !3649, file: !3, line: 1205, type: !1907)
!3656 = !DILocation(line: 0, scope: !3649)
!3657 = !DILocation(line: 1205, column: 3, scope: !3649)
!3658 = !DILocation(line: 1207, column: 8, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 1207, column: 7)
!3660 = !DILocation(line: 1207, column: 7, scope: !3649)
!3661 = !DILocation(line: 0, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !3, line: 1210, column: 3)
!3663 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 1210, column: 3)
!3664 = !DILocation(line: 1210, column: 3, scope: !3663)
!3665 = !DILocation(line: 0, scope: !3663)
!3666 = !DILocation(line: 1210, column: 15, scope: !3662)
!3667 = !DILocation(line: 1211, column: 11, scope: !3662)
!3668 = !DILocation(line: 1211, column: 5, scope: !3662)
!3669 = !DILocation(line: 1210, column: 65, scope: !3662)
!3670 = !DILocation(line: 1210, column: 3, scope: !3662)
!3671 = distinct !{!3671, !3664, !3672}
!3672 = !DILocation(line: 1211, column: 14, scope: !3663)
!3673 = !DILocation(line: 1212, column: 3, scope: !3649)
!3674 = !DILocation(line: 1213, column: 9, scope: !3649)
!3675 = !DILocation(line: 1213, column: 3, scope: !3649)
!3676 = !DILocation(line: 1214, column: 1, scope: !3649)
!3677 = distinct !DISubprogram(name: "VEC_mem_ref_locs_p_heap_free", scope: !3, file: !3, line: 125, type: !3678, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3681)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{null, !3680}
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!3681 = !{!3682}
!3682 = !DILocalVariable(name: "vec_", arg: 1, scope: !3677, file: !3, line: 125, type: !3680)
!3683 = !DILocation(line: 0, scope: !3677)
!3684 = !DILocation(line: 125, column: 1, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 125, column: 1)
!3686 = !DILocation(line: 125, column: 1, scope: !3677)
!3687 = distinct !DISubprogram(name: "VEC_mem_ref_loc_p_base_iterate", scope: !3, file: !3, line: 114, type: !3688, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3693)
!3688 = !DISubroutineType(types: !3689)
!3689 = !{!477, !3690, !7, !3692}
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1900)
!3692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!3693 = !{!3694, !3695, !3696}
!3694 = !DILocalVariable(name: "vec_", arg: 1, scope: !3687, file: !3, line: 114, type: !3690)
!3695 = !DILocalVariable(name: "ix_", arg: 2, scope: !3687, file: !3, line: 114, type: !7)
!3696 = !DILocalVariable(name: "ptr", arg: 3, scope: !3687, file: !3, line: 114, type: !3692)
!3697 = !DILocation(line: 0, scope: !3687)
!3698 = !DILocation(line: 114, column: 1, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3687, file: !3, line: 114, column: 1)
!3700 = !DILocation(line: 114, column: 1, scope: !3687)
!3701 = !DILocation(line: 114, column: 1, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 114, column: 1)
!3703 = !DILocation(line: 114, column: 1, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 114, column: 1)
!3705 = !DILocation(line: 0, scope: !3699)
!3706 = distinct !DISubprogram(name: "VEC_mem_ref_loc_p_heap_free", scope: !3, file: !3, line: 115, type: !3707, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3710)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{null, !3709}
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!3710 = !{!3711}
!3711 = !DILocalVariable(name: "vec_", arg: 1, scope: !3706, file: !3, line: 115, type: !3709)
!3712 = !DILocation(line: 0, scope: !3706)
!3713 = !DILocation(line: 115, column: 1, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3706, file: !3, line: 115, column: 1)
!3715 = !DILocation(line: 115, column: 1, scope: !3706)
!3716 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !330, file: !330, line: 85, type: !3717, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3721)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!7, !3719}
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3720, size: 64)
!3720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!3721 = !{!3722}
!3722 = !DILocalVariable(name: "vec_", arg: 1, scope: !3716, file: !330, line: 85, type: !3719)
!3723 = !DILocation(line: 0, scope: !3716)
!3724 = !DILocation(line: 85, column: 1, scope: !3716)
!3725 = distinct !DISubprogram(name: "gather_mem_refs_stmt", scope: !3, file: !3, line: 1316, type: !3726, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3728)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{null, !1023, !808}
!3728 = !{!3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739}
!3729 = !DILocalVariable(name: "loop", arg: 1, scope: !3725, file: !3, line: 1316, type: !1023)
!3730 = !DILocalVariable(name: "stmt", arg: 2, scope: !3725, file: !3, line: 1316, type: !808)
!3731 = !DILocalVariable(name: "mem", scope: !3725, file: !3, line: 1318, type: !842)
!3732 = !DILocalVariable(name: "hash", scope: !3725, file: !3, line: 1319, type: !1335)
!3733 = !DILocalVariable(name: "slot", scope: !3725, file: !3, line: 1320, type: !1347)
!3734 = !DILocalVariable(name: "ref", scope: !3725, file: !3, line: 1321, type: !1956)
!3735 = !DILocalVariable(name: "vname", scope: !3725, file: !3, line: 1322, type: !484)
!3736 = !DILocalVariable(name: "is_stored", scope: !3725, file: !3, line: 1323, type: !476)
!3737 = !DILocalVariable(name: "clvops", scope: !3725, file: !3, line: 1324, type: !1409)
!3738 = !DILocalVariable(name: "id", scope: !3725, file: !3, line: 1325, type: !7)
!3739 = !DILabel(scope: !3725, name: "fail", file: !3, line: 1364)
!3740 = !DILocation(line: 0, scope: !3725)
!3741 = !DILocation(line: 1323, column: 3, scope: !3725)
!3742 = !DILocation(line: 1327, column: 8, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1327, column: 7)
!3744 = !DILocation(line: 1327, column: 7, scope: !3725)
!3745 = !DILocation(line: 1330, column: 9, scope: !3725)
!3746 = !DILocation(line: 1331, column: 8, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1331, column: 7)
!3748 = !DILocation(line: 1331, column: 7, scope: !3725)
!3749 = !DILocation(line: 1334, column: 31, scope: !3725)
!3750 = !DILocation(line: 1334, column: 10, scope: !3725)
!3751 = !DILocation(line: 1335, column: 52, scope: !3725)
!3752 = !DILocation(line: 1335, column: 58, scope: !3725)
!3753 = !DILocation(line: 1335, column: 10, scope: !3725)
!3754 = !DILocation(line: 1337, column: 7, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1337, column: 7)
!3756 = !DILocation(line: 1337, column: 7, scope: !3725)
!3757 = !DILocation(line: 1341, column: 5, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 1338, column: 5)
!3759 = !DILocation(line: 1344, column: 12, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 1343, column: 5)
!3761 = !DILocation(line: 1345, column: 28, scope: !3760)
!3762 = !DILocation(line: 1345, column: 13, scope: !3760)
!3763 = !DILocation(line: 1346, column: 7, scope: !3760)
!3764 = !DILocation(line: 1347, column: 13, scope: !3760)
!3765 = !DILocation(line: 1349, column: 11, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3760, file: !3, line: 1349, column: 11)
!3767 = !DILocation(line: 1349, column: 21, scope: !3766)
!3768 = !DILocation(line: 1349, column: 25, scope: !3766)
!3769 = !DILocation(line: 1349, column: 36, scope: !3766)
!3770 = !DILocation(line: 1349, column: 11, scope: !3760)
!3771 = !DILocation(line: 1351, column: 4, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 1350, column: 2)
!3773 = !DILocation(line: 1352, column: 24, scope: !3772)
!3774 = !DILocation(line: 1352, column: 40, scope: !3772)
!3775 = !DILocation(line: 1352, column: 4, scope: !3772)
!3776 = !DILocation(line: 1353, column: 13, scope: !3772)
!3777 = !DILocation(line: 1353, column: 4, scope: !3772)
!3778 = !DILocation(line: 1354, column: 2, scope: !3772)
!3779 = !DILocation(line: 0, scope: !3755)
!3780 = !DILocation(line: 1356, column: 7, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1356, column: 7)
!3782 = !DILocation(line: 1356, column: 7, scope: !3725)
!3783 = !DILocation(line: 1357, column: 5, scope: !3781)
!3784 = !DILocation(line: 1359, column: 16, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1359, column: 7)
!3786 = !DILocation(line: 1359, column: 36, scope: !3785)
!3787 = !DILocation(line: 1359, column: 7, scope: !3725)
!3788 = !DILocation(line: 1360, column: 26, scope: !3785)
!3789 = !DILocation(line: 1360, column: 32, scope: !3785)
!3790 = !DILocation(line: 1360, column: 5, scope: !3785)
!3791 = !DILocation(line: 1361, column: 3, scope: !3725)
!3792 = !DILocation(line: 1362, column: 3, scope: !3725)
!3793 = !DILocation(line: 1364, column: 1, scope: !3725)
!3794 = !DILocation(line: 1365, column: 12, scope: !3725)
!3795 = !DILocation(line: 1366, column: 16, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1366, column: 7)
!3797 = !DILocation(line: 1366, column: 36, scope: !3796)
!3798 = !DILocation(line: 1366, column: 7, scope: !3725)
!3799 = !DILocation(line: 1367, column: 29, scope: !3796)
!3800 = !DILocation(line: 1367, column: 5, scope: !3796)
!3801 = !DILocation(line: 1368, column: 1, scope: !3725)
!3802 = distinct !DISubprogram(name: "fel_init", scope: !330, file: !330, line: 535, type: !3803, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3807)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{null, !3805, !3806, !7}
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!3807 = !{!3808, !3809, !3810, !3811, !3812, !3813}
!3808 = !DILocalVariable(name: "li", arg: 1, scope: !3802, file: !330, line: 535, type: !3805)
!3809 = !DILocalVariable(name: "loop", arg: 2, scope: !3802, file: !330, line: 535, type: !3806)
!3810 = !DILocalVariable(name: "flags", arg: 3, scope: !3802, file: !330, line: 535, type: !7)
!3811 = !DILocalVariable(name: "aloop", scope: !3802, file: !330, line: 537, type: !1023)
!3812 = !DILocalVariable(name: "i", scope: !3802, file: !330, line: 538, type: !7)
!3813 = !DILocalVariable(name: "mn", scope: !3802, file: !330, line: 539, type: !477)
!3814 = !DILocation(line: 0, scope: !3802)
!3815 = !DILocation(line: 537, column: 3, scope: !3802)
!3816 = !DILocation(line: 541, column: 7, scope: !3802)
!3817 = !DILocation(line: 541, column: 11, scope: !3802)
!3818 = !DILocation(line: 542, column: 8, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3802, file: !330, line: 542, column: 7)
!3820 = !DILocation(line: 542, column: 7, scope: !3802)
!3821 = !DILocation(line: 544, column: 11, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3819, file: !330, line: 543, column: 5)
!3823 = !DILocation(line: 544, column: 20, scope: !3822)
!3824 = !DILocation(line: 545, column: 13, scope: !3822)
!3825 = !DILocation(line: 546, column: 7, scope: !3822)
!3826 = !DILocation(line: 549, column: 18, scope: !3802)
!3827 = !DILocation(line: 549, column: 7, scope: !3802)
!3828 = !DILocation(line: 549, column: 16, scope: !3802)
!3829 = !DILocation(line: 550, column: 15, scope: !3802)
!3830 = !DILocation(line: 550, column: 8, scope: !3802)
!3831 = !DILocation(line: 552, column: 13, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3802, file: !330, line: 552, column: 7)
!3833 = !DILocation(line: 552, column: 7, scope: !3802)
!3834 = !DILocation(line: 554, column: 7, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !330, line: 554, column: 7)
!3836 = distinct !DILexicalBlock(scope: !3832, file: !330, line: 553, column: 5)
!3837 = !DILocation(line: 0, scope: !3835)
!3838 = !DILocation(line: 554, column: 19, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3835, file: !330, line: 554, column: 7)
!3840 = !DILocation(line: 555, column: 6, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3839, file: !330, line: 555, column: 6)
!3842 = !DILocation(line: 555, column: 12, scope: !3841)
!3843 = !DILocation(line: 556, column: 6, scope: !3841)
!3844 = !DILocation(line: 556, column: 16, scope: !3841)
!3845 = !DILocation(line: 556, column: 22, scope: !3841)
!3846 = !DILocation(line: 557, column: 6, scope: !3841)
!3847 = !DILocation(line: 557, column: 16, scope: !3841)
!3848 = !DILocation(line: 557, column: 20, scope: !3841)
!3849 = !DILocation(line: 555, column: 6, scope: !3839)
!3850 = !DILocation(line: 558, column: 4, scope: !3841)
!3851 = !DILocation(line: 554, column: 75, scope: !3839)
!3852 = !DILocation(line: 554, column: 7, scope: !3839)
!3853 = distinct !{!3853, !3834, !3854}
!3854 = !DILocation(line: 558, column: 4, scope: !3835)
!3855 = !DILocation(line: 560, column: 18, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3832, file: !330, line: 560, column: 12)
!3857 = !DILocation(line: 0, scope: !3856)
!3858 = !DILocation(line: 560, column: 12, scope: !3832)
!3859 = !DILocation(line: 563, column: 7, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !330, line: 563, column: 7)
!3861 = distinct !DILexicalBlock(scope: !3856, file: !330, line: 561, column: 5)
!3862 = !DILocation(line: 590, column: 7, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3856, file: !330, line: 587, column: 5)
!3864 = !DILocation(line: 564, column: 5, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3860, file: !330, line: 563, column: 7)
!3866 = !DILocation(line: 564, column: 12, scope: !3865)
!3867 = !DILocation(line: 564, column: 18, scope: !3865)
!3868 = !DILocation(line: 568, column: 7, scope: !3861)
!3869 = !DILocation(line: 565, column: 20, scope: !3865)
!3870 = !DILocation(line: 565, column: 11, scope: !3865)
!3871 = !DILocation(line: 563, column: 7, scope: !3865)
!3872 = distinct !{!3872, !3859, !3873}
!3873 = !DILocation(line: 566, column: 2, scope: !3860)
!3874 = !DILocation(line: 570, column: 8, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3876, file: !330, line: 570, column: 8)
!3876 = distinct !DILexicalBlock(scope: !3861, file: !330, line: 569, column: 2)
!3877 = !DILocation(line: 570, column: 15, scope: !3875)
!3878 = !DILocation(line: 570, column: 19, scope: !3875)
!3879 = !DILocation(line: 570, column: 8, scope: !3876)
!3880 = !DILocation(line: 571, column: 6, scope: !3875)
!3881 = !DILocation(line: 573, column: 15, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3876, file: !330, line: 573, column: 8)
!3883 = !DILocation(line: 573, column: 8, scope: !3882)
!3884 = !DILocation(line: 573, column: 8, scope: !3876)
!3885 = !DILocation(line: 575, column: 19, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !330, line: 575, column: 8)
!3887 = distinct !DILexicalBlock(scope: !3882, file: !330, line: 574, column: 6)
!3888 = !DILocation(line: 575, column: 13, scope: !3886)
!3889 = !DILocation(line: 576, column: 6, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3886, file: !330, line: 575, column: 8)
!3891 = !DILocation(line: 576, column: 13, scope: !3890)
!3892 = !DILocation(line: 576, column: 19, scope: !3890)
!3893 = !DILocation(line: 575, column: 8, scope: !3886)
!3894 = !DILocation(line: 577, column: 21, scope: !3890)
!3895 = !DILocation(line: 577, column: 12, scope: !3890)
!3896 = !DILocation(line: 575, column: 8, scope: !3890)
!3897 = distinct !{!3897, !3893, !3898}
!3898 = !DILocation(line: 578, column: 3, scope: !3886)
!3899 = !DILocation(line: 580, column: 14, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3882, file: !330, line: 580, column: 13)
!3901 = !DILocation(line: 580, column: 13, scope: !3882)
!3902 = !DILocation(line: 583, column: 14, scope: !3900)
!3903 = !DILocation(line: 583, column: 12, scope: !3900)
!3904 = distinct !{!3904, !3868, !3905}
!3905 = !DILocation(line: 584, column: 2, scope: !3861)
!3906 = !DILocation(line: 592, column: 8, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !330, line: 592, column: 8)
!3908 = distinct !DILexicalBlock(scope: !3863, file: !330, line: 591, column: 2)
!3909 = !DILocation(line: 592, column: 15, scope: !3907)
!3910 = !DILocation(line: 592, column: 19, scope: !3907)
!3911 = !DILocation(line: 592, column: 8, scope: !3908)
!3912 = !DILocation(line: 593, column: 6, scope: !3907)
!3913 = !DILocation(line: 595, column: 15, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3908, file: !330, line: 595, column: 8)
!3915 = !DILocation(line: 595, column: 21, scope: !3914)
!3916 = !DILocation(line: 595, column: 8, scope: !3908)
!3917 = !DILocation(line: 599, column: 8, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3914, file: !330, line: 598, column: 6)
!3919 = !DILocation(line: 596, column: 21, scope: !3914)
!3920 = !DILocation(line: 596, column: 12, scope: !3914)
!3921 = !DILocation(line: 596, column: 6, scope: !3914)
!3922 = !DILocation(line: 599, column: 15, scope: !3918)
!3923 = !DILocation(line: 599, column: 21, scope: !3918)
!3924 = !DILocation(line: 599, column: 29, scope: !3918)
!3925 = !DILocation(line: 599, column: 39, scope: !3918)
!3926 = !DILocation(line: 599, column: 44, scope: !3918)
!3927 = !DILocation(line: 0, scope: !3918)
!3928 = !DILocation(line: 600, column: 11, scope: !3918)
!3929 = !DILocation(line: 600, column: 9, scope: !3918)
!3930 = distinct !{!3930, !3917, !3931}
!3931 = !DILocation(line: 600, column: 28, scope: !3918)
!3932 = !DILocation(line: 601, column: 18, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3918, file: !330, line: 601, column: 12)
!3934 = !DILocation(line: 601, column: 12, scope: !3918)
!3935 = !DILocation(line: 603, column: 23, scope: !3918)
!3936 = !DILocation(line: 603, column: 14, scope: !3918)
!3937 = distinct !{!3937, !3862, !3938}
!3938 = !DILocation(line: 605, column: 2, scope: !3863)
!3939 = !DILocation(line: 608, column: 3, scope: !3802)
!3940 = !DILocation(line: 609, column: 1, scope: !3802)
!3941 = distinct !DISubprogram(name: "VEC_bitmap_base_index", scope: !3, file: !3, line: 163, type: !3942, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3946)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!1409, !3944, !7}
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1927)
!3946 = !{!3947, !3948}
!3947 = !DILocalVariable(name: "vec_", arg: 1, scope: !3941, file: !3, line: 163, type: !3944)
!3948 = !DILocalVariable(name: "ix_", arg: 2, scope: !3941, file: !3, line: 163, type: !7)
!3949 = !DILocation(line: 0, scope: !3941)
!3950 = !DILocation(line: 163, column: 1, scope: !3941)
!3951 = distinct !DISubprogram(name: "loop_outer", scope: !330, file: !330, line: 434, type: !3952, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3956)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{!1023, !3954}
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3955, size: 64)
!3955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!3956 = !{!3957, !3958}
!3957 = !DILocalVariable(name: "loop", arg: 1, scope: !3951, file: !330, line: 434, type: !3954)
!3958 = !DILocalVariable(name: "n", scope: !3951, file: !330, line: 436, type: !7)
!3959 = !DILocation(line: 0, scope: !3951)
!3960 = !DILocation(line: 436, column: 16, scope: !3951)
!3961 = !DILocation(line: 438, column: 9, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3951, file: !330, line: 438, column: 7)
!3963 = !DILocation(line: 438, column: 7, scope: !3951)
!3964 = !DILocation(line: 441, column: 10, scope: !3951)
!3965 = !DILocation(line: 441, column: 3, scope: !3951)
!3966 = !DILocation(line: 442, column: 1, scope: !3951)
!3967 = distinct !DISubprogram(name: "fel_next", scope: !330, file: !330, line: 518, type: !3968, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3970)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{null, !3805, !3806}
!3970 = !{!3971, !3972, !3973}
!3971 = !DILocalVariable(name: "li", arg: 1, scope: !3967, file: !330, line: 518, type: !3805)
!3972 = !DILocalVariable(name: "loop", arg: 2, scope: !3967, file: !330, line: 518, type: !3806)
!3973 = !DILocalVariable(name: "anum", scope: !3967, file: !330, line: 520, type: !477)
!3974 = !DILocation(line: 0, scope: !3967)
!3975 = !DILocation(line: 520, column: 3, scope: !3967)
!3976 = !DILocation(line: 522, column: 3, scope: !3967)
!3977 = !DILocation(line: 522, column: 10, scope: !3967)
!3978 = !DILocation(line: 524, column: 14, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3967, file: !330, line: 523, column: 5)
!3980 = !DILocation(line: 525, column: 25, scope: !3979)
!3981 = !DILocation(line: 525, column: 15, scope: !3979)
!3982 = !DILocation(line: 525, column: 13, scope: !3979)
!3983 = !DILocation(line: 526, column: 11, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3979, file: !330, line: 526, column: 11)
!3985 = !DILocation(line: 526, column: 11, scope: !3979)
!3986 = distinct !{!3986, !3976, !3987}
!3987 = !DILocation(line: 528, column: 5, scope: !3967)
!3988 = !DILocation(line: 530, column: 3, scope: !3967)
!3989 = !DILocation(line: 531, column: 9, scope: !3967)
!3990 = !DILocation(line: 532, column: 1, scope: !3967)
!3991 = distinct !DISubprogram(name: "gimple_vuse", scope: !397, file: !397, line: 1365, type: !2598, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3992)
!3992 = !{!3993}
!3993 = !DILocalVariable(name: "g", arg: 1, scope: !3991, file: !397, line: 1365, type: !2591)
!3994 = !DILocation(line: 0, scope: !3991)
!3995 = !DILocation(line: 1367, column: 8, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3991, file: !397, line: 1367, column: 7)
!3997 = !DILocation(line: 1367, column: 7, scope: !3991)
!3998 = !DILocation(line: 1369, column: 23, scope: !3991)
!3999 = !DILocation(line: 1369, column: 3, scope: !3991)
!4000 = !DILocation(line: 1370, column: 1, scope: !3991)
!4001 = distinct !DISubprogram(name: "simple_mem_ref_in_stmt", scope: !3, file: !3, line: 600, type: !4002, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4004)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!842, !808, !475}
!4004 = !{!4005, !4006, !4007, !4008}
!4005 = !DILocalVariable(name: "stmt", arg: 1, scope: !4001, file: !3, line: 600, type: !808)
!4006 = !DILocalVariable(name: "is_store", arg: 2, scope: !4001, file: !3, line: 600, type: !475)
!4007 = !DILocalVariable(name: "lhs", scope: !4001, file: !3, line: 602, type: !842)
!4008 = !DILocalVariable(name: "code", scope: !4001, file: !3, line: 603, type: !134)
!4009 = !DILocation(line: 0, scope: !4001)
!4010 = !DILocation(line: 606, column: 7, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 606, column: 7)
!4012 = !DILocation(line: 606, column: 26, scope: !4011)
!4013 = !DILocation(line: 606, column: 7, scope: !4001)
!4014 = !DILocation(line: 609, column: 10, scope: !4001)
!4015 = !DILocation(line: 611, column: 9, scope: !4001)
!4016 = !DILocation(line: 613, column: 7, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 613, column: 7)
!4018 = !DILocation(line: 613, column: 24, scope: !4017)
!4019 = !DILocation(line: 613, column: 7, scope: !4001)
!4020 = !DILocation(line: 615, column: 11, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 615, column: 11)
!4022 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 614, column: 5)
!4023 = !DILocation(line: 615, column: 39, scope: !4021)
!4024 = !DILocation(line: 616, column: 4, scope: !4021)
!4025 = !DILocation(line: 616, column: 31, scope: !4021)
!4026 = !DILocation(line: 616, column: 8, scope: !4021)
!4027 = !DILocation(line: 615, column: 11, scope: !4022)
!4028 = !DILocation(line: 619, column: 17, scope: !4022)
!4029 = !DILocation(line: 620, column: 14, scope: !4022)
!4030 = !DILocation(line: 620, column: 7, scope: !4022)
!4031 = !DILocation(line: 622, column: 17, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 622, column: 12)
!4033 = !DILocation(line: 623, column: 5, scope: !4032)
!4034 = !DILocation(line: 623, column: 9, scope: !4032)
!4035 = !DILocation(line: 623, column: 37, scope: !4032)
!4036 = !DILocation(line: 624, column: 9, scope: !4032)
!4037 = !DILocation(line: 624, column: 37, scope: !4032)
!4038 = !DILocation(line: 624, column: 12, scope: !4032)
!4039 = !DILocation(line: 622, column: 12, scope: !4017)
!4040 = !DILocation(line: 626, column: 17, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 625, column: 5)
!4042 = !DILocation(line: 627, column: 7, scope: !4041)
!4043 = !DILocation(line: 631, column: 1, scope: !4001)
!4044 = distinct !DISubprogram(name: "VEC_mem_ref_p_base_length", scope: !3, file: !3, line: 160, type: !4045, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4049)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{!7, !4047}
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1962)
!4049 = !{!4050}
!4050 = !DILocalVariable(name: "vec_", arg: 1, scope: !4044, file: !3, line: 160, type: !4047)
!4051 = !DILocation(line: 0, scope: !4044)
!4052 = !DILocation(line: 160, column: 1, scope: !4044)
!4053 = distinct !DISubprogram(name: "mem_ref_alloc", scope: !3, file: !3, line: 1243, type: !4054, scopeLine: 1244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4056)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!1956, !484, !7, !7}
!4056 = !{!4057, !4058, !4059, !4060}
!4057 = !DILocalVariable(name: "mem", arg: 1, scope: !4053, file: !3, line: 1243, type: !484)
!4058 = !DILocalVariable(name: "hash", arg: 2, scope: !4053, file: !3, line: 1243, type: !7)
!4059 = !DILocalVariable(name: "id", arg: 3, scope: !4053, file: !3, line: 1243, type: !7)
!4060 = !DILocalVariable(name: "ref", scope: !4053, file: !3, line: 1245, type: !1956)
!4061 = !DILocation(line: 0, scope: !4053)
!4062 = !DILocation(line: 1245, column: 19, scope: !4053)
!4063 = !DILocation(line: 1246, column: 8, scope: !4053)
!4064 = !DILocation(line: 1246, column: 12, scope: !4053)
!4065 = !DILocation(line: 1247, column: 8, scope: !4053)
!4066 = !DILocation(line: 1247, column: 11, scope: !4053)
!4067 = !DILocation(line: 1248, column: 8, scope: !4053)
!4068 = !DILocation(line: 1248, column: 13, scope: !4053)
!4069 = !DILocation(line: 1249, column: 17, scope: !4053)
!4070 = !DILocation(line: 1249, column: 8, scope: !4053)
!4071 = !DILocation(line: 1249, column: 15, scope: !4053)
!4072 = !DILocation(line: 1250, column: 21, scope: !4053)
!4073 = !DILocation(line: 1250, column: 8, scope: !4053)
!4074 = !DILocation(line: 1250, column: 19, scope: !4053)
!4075 = !DILocation(line: 1251, column: 19, scope: !4053)
!4076 = !DILocation(line: 1251, column: 8, scope: !4053)
!4077 = !DILocation(line: 1251, column: 17, scope: !4053)
!4078 = !DILocation(line: 1252, column: 20, scope: !4053)
!4079 = !DILocation(line: 1252, column: 8, scope: !4053)
!4080 = !DILocation(line: 1252, column: 18, scope: !4053)
!4081 = !DILocation(line: 1253, column: 18, scope: !4053)
!4082 = !DILocation(line: 1253, column: 8, scope: !4053)
!4083 = !DILocation(line: 1253, column: 16, scope: !4053)
!4084 = !DILocation(line: 1254, column: 8, scope: !4053)
!4085 = !DILocation(line: 1254, column: 25, scope: !4053)
!4086 = !DILocation(line: 1255, column: 15, scope: !4053)
!4087 = !DILocation(line: 1255, column: 8, scope: !4053)
!4088 = !DILocation(line: 1255, column: 13, scope: !4053)
!4089 = !DILocation(line: 1257, column: 3, scope: !4053)
!4090 = distinct !DISubprogram(name: "VEC_mem_ref_p_heap_safe_push", scope: !3, file: !3, line: 161, type: !4091, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4095)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!4093, !4094, !1956}
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!4095 = !{!4096, !4097}
!4096 = !DILocalVariable(name: "vec_", arg: 1, scope: !4090, file: !3, line: 161, type: !4094)
!4097 = !DILocalVariable(name: "obj_", arg: 2, scope: !4090, file: !3, line: 161, type: !1956)
!4098 = !DILocation(line: 0, scope: !4090)
!4099 = !DILocation(line: 161, column: 1, scope: !4090)
!4100 = distinct !DISubprogram(name: "mark_ref_stored", scope: !3, file: !3, line: 1301, type: !4101, scopeLine: 1302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4103)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{null, !1956, !1023}
!4103 = !{!4104, !4105}
!4104 = !DILocalVariable(name: "ref", arg: 1, scope: !4100, file: !3, line: 1301, type: !1956)
!4105 = !DILocalVariable(name: "loop", arg: 2, scope: !4100, file: !3, line: 1301, type: !1023)
!4106 = !DILocation(line: 0, scope: !4100)
!4107 = !DILocation(line: 1305, column: 31, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 1303, column: 3)
!4109 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 1303, column: 3)
!4110 = !DILocation(line: 1303, column: 3, scope: !4100)
!4111 = !DILocation(line: 1304, column: 16, scope: !4108)
!4112 = !DILocation(line: 1304, column: 31, scope: !4108)
!4113 = !DILocation(line: 1304, column: 13, scope: !4108)
!4114 = !DILocation(line: 1305, column: 8, scope: !4108)
!4115 = !DILocation(line: 1305, column: 45, scope: !4108)
!4116 = !DILocation(line: 1305, column: 12, scope: !4108)
!4117 = !DILocation(line: 1305, column: 11, scope: !4108)
!4118 = !DILocation(line: 1303, column: 3, scope: !4109)
!4119 = !DILocation(line: 1307, column: 26, scope: !4108)
!4120 = !DILocation(line: 1307, column: 40, scope: !4108)
!4121 = !DILocation(line: 1307, column: 5, scope: !4108)
!4122 = !DILocation(line: 1306, column: 15, scope: !4108)
!4123 = !DILocation(line: 1303, column: 3, scope: !4108)
!4124 = distinct !{!4124, !4118, !4125}
!4125 = !DILocation(line: 1307, column: 43, scope: !4109)
!4126 = !DILocation(line: 1308, column: 1, scope: !4100)
!4127 = distinct !DISubprogram(name: "record_mem_ref_loc", scope: !3, file: !3, line: 1274, type: !4128, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4130)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{null, !1956, !1023, !808, !842}
!4130 = !{!4131, !4132, !4133, !4134, !4135, !4136, !4137}
!4131 = !DILocalVariable(name: "ref", arg: 1, scope: !4127, file: !3, line: 1274, type: !1956)
!4132 = !DILocalVariable(name: "loop", arg: 2, scope: !4127, file: !3, line: 1274, type: !1023)
!4133 = !DILocalVariable(name: "stmt", arg: 3, scope: !4127, file: !3, line: 1274, type: !808)
!4134 = !DILocalVariable(name: "loc", arg: 4, scope: !4127, file: !3, line: 1274, type: !842)
!4135 = !DILocalVariable(name: "aref", scope: !4127, file: !3, line: 1276, type: !1907)
!4136 = !DILocalVariable(name: "accs", scope: !4127, file: !3, line: 1277, type: !1890)
!4137 = !DILocalVariable(name: "ril", scope: !4127, file: !3, line: 1278, type: !1409)
!4138 = !DILocation(line: 0, scope: !4127)
!4139 = !DILocation(line: 1276, column: 24, scope: !4127)
!4140 = !DILocation(line: 1278, column: 16, scope: !4127)
!4141 = !DILocation(line: 1280, column: 7, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 1280, column: 7)
!4143 = !DILocation(line: 1281, column: 27, scope: !4142)
!4144 = !DILocation(line: 1281, column: 7, scope: !4142)
!4145 = !DILocation(line: 1280, column: 7, scope: !4127)
!4146 = !DILocation(line: 1282, column: 5, scope: !4142)
!4147 = !DILocation(line: 1284, column: 10, scope: !4127)
!4148 = !DILocation(line: 1285, column: 8, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 1285, column: 7)
!4150 = !DILocation(line: 1285, column: 7, scope: !4127)
!4151 = !DILocation(line: 1287, column: 14, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 1286, column: 5)
!4153 = !DILocation(line: 1288, column: 7, scope: !4152)
!4154 = !DILocation(line: 1289, column: 5, scope: !4152)
!4155 = !DILocation(line: 1291, column: 9, scope: !4127)
!4156 = !DILocation(line: 1291, column: 14, scope: !4127)
!4157 = !DILocation(line: 1292, column: 9, scope: !4127)
!4158 = !DILocation(line: 1292, column: 13, scope: !4127)
!4159 = !DILocation(line: 1294, column: 3, scope: !4127)
!4160 = !DILocation(line: 1295, column: 29, scope: !4127)
!4161 = !DILocation(line: 1295, column: 3, scope: !4127)
!4162 = !DILocation(line: 1296, column: 1, scope: !4127)
!4163 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !397, file: !397, line: 1815, type: !4164, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4166)
!4164 = !DISubroutineType(types: !4165)
!4165 = !{!134, !2591}
!4166 = !{!4167, !4168}
!4167 = !DILocalVariable(name: "gs", arg: 1, scope: !4163, file: !397, line: 1815, type: !2591)
!4168 = !DILocalVariable(name: "code", scope: !4163, file: !397, line: 1817, type: !134)
!4169 = !DILocation(line: 0, scope: !4163)
!4170 = !DILocation(line: 1820, column: 10, scope: !4163)
!4171 = !DILocation(line: 1821, column: 7, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4163, file: !397, line: 1821, column: 7)
!4173 = !DILocation(line: 1821, column: 35, scope: !4172)
!4174 = !DILocation(line: 1821, column: 7, scope: !4163)
!4175 = !DILocation(line: 1822, column: 12, scope: !4172)
!4176 = !DILocation(line: 1822, column: 5, scope: !4172)
!4177 = !DILocation(line: 1824, column: 3, scope: !4163)
!4178 = distinct !DISubprogram(name: "gimple_assign_lhs_ptr", scope: !397, file: !397, line: 1704, type: !4179, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4181)
!4179 = !DISubroutineType(types: !4180)
!4180 = !{!842, !2591}
!4181 = !{!4182}
!4182 = !DILocalVariable(name: "gs", arg: 1, scope: !4178, file: !397, line: 1704, type: !2591)
!4183 = !DILocation(line: 0, scope: !4178)
!4184 = !DILocation(line: 1707, column: 10, scope: !4178)
!4185 = !DILocation(line: 1707, column: 3, scope: !4178)
!4186 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !397, file: !397, line: 1686, type: !4187, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4189)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!461, !134}
!4189 = !{!4190}
!4190 = !DILocalVariable(name: "code", arg: 1, scope: !4186, file: !397, line: 1686, type: !134)
!4191 = !DILocation(line: 0, scope: !4186)
!4192 = !DILocation(line: 1688, column: 34, scope: !4186)
!4193 = !DILocation(line: 1688, column: 10, scope: !4186)
!4194 = !DILocation(line: 1688, column: 3, scope: !4186)
!4195 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !397, file: !397, line: 1727, type: !2598, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4196)
!4196 = !{!4197}
!4197 = !DILocalVariable(name: "gs", arg: 1, scope: !4195, file: !397, line: 1727, type: !2591)
!4198 = !DILocation(line: 0, scope: !4195)
!4199 = !DILocation(line: 1730, column: 10, scope: !4195)
!4200 = !DILocation(line: 1730, column: 3, scope: !4195)
!4201 = distinct !DISubprogram(name: "gimple_assign_rhs1_ptr", scope: !397, file: !397, line: 1738, type: !4179, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4202)
!4202 = !{!4203}
!4203 = !DILocalVariable(name: "gs", arg: 1, scope: !4201, file: !397, line: 1738, type: !2591)
!4204 = !DILocation(line: 0, scope: !4201)
!4205 = !DILocation(line: 1741, column: 10, scope: !4201)
!4206 = !DILocation(line: 1741, column: 3, scope: !4201)
!4207 = distinct !DISubprogram(name: "gimple_expr_code", scope: !397, file: !397, line: 1438, type: !4164, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4208)
!4208 = !{!4209, !4210}
!4209 = !DILocalVariable(name: "stmt", arg: 1, scope: !4207, file: !397, line: 1438, type: !2591)
!4210 = !DILocalVariable(name: "code", scope: !4207, file: !397, line: 1440, type: !396)
!4211 = !DILocation(line: 0, scope: !4207)
!4212 = !DILocation(line: 1440, column: 27, scope: !4207)
!4213 = !DILocation(line: 1441, column: 29, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4207, file: !397, line: 1441, column: 7)
!4215 = !DILocation(line: 1442, column: 42, scope: !4214)
!4216 = !DILocation(line: 1442, column: 5, scope: !4214)
!4217 = !DILocation(line: 1446, column: 5, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4214, file: !397, line: 1443, column: 12)
!4219 = !DILocation(line: 1448, column: 5, scope: !4207)
!4220 = !DILocation(line: 1450, column: 1, scope: !4207)
!4221 = distinct !DISubprogram(name: "gimple_op_ptr", scope: !397, file: !397, line: 1647, type: !4222, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4224)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{!842, !2591, !7}
!4224 = !{!4225, !4226}
!4225 = !DILocalVariable(name: "gs", arg: 1, scope: !4221, file: !397, line: 1647, type: !2591)
!4226 = !DILocalVariable(name: "i", arg: 2, scope: !4221, file: !397, line: 1647, type: !7)
!4227 = !DILocation(line: 0, scope: !4221)
!4228 = !DILocation(line: 1649, column: 7, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4221, file: !397, line: 1649, column: 7)
!4230 = !DILocation(line: 1649, column: 7, scope: !4221)
!4231 = !DILocation(line: 1654, column: 14, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4229, file: !397, line: 1650, column: 5)
!4233 = !DILocation(line: 1654, column: 50, scope: !4232)
!4234 = !DILocation(line: 1654, column: 7, scope: !4232)
!4235 = !DILocation(line: 0, scope: !4229)
!4236 = !DILocation(line: 1658, column: 1, scope: !4221)
!4237 = distinct !DISubprogram(name: "VEC_mem_ref_p_heap_reserve", scope: !3, file: !3, line: 161, type: !4238, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4240)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{!477, !4094, !477}
!4240 = !{!4241, !4242, !4243}
!4241 = !DILocalVariable(name: "vec_", arg: 1, scope: !4237, file: !3, line: 161, type: !4094)
!4242 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4237, file: !3, line: 161, type: !477)
!4243 = !DILocalVariable(name: "extend", scope: !4237, file: !3, line: 161, type: !477)
!4244 = !DILocation(line: 0, scope: !4237)
!4245 = !DILocation(line: 161, column: 1, scope: !4237)
!4246 = !DILocation(line: 161, column: 1, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 161, column: 1)
!4248 = distinct !DISubprogram(name: "VEC_mem_ref_p_base_quick_push", scope: !3, file: !3, line: 160, type: !4249, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4252)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{!4093, !4251, !1956}
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!4252 = !{!4253, !4254, !4255}
!4253 = !DILocalVariable(name: "vec_", arg: 1, scope: !4248, file: !3, line: 160, type: !4251)
!4254 = !DILocalVariable(name: "obj_", arg: 2, scope: !4248, file: !3, line: 160, type: !1956)
!4255 = !DILocalVariable(name: "slot_", scope: !4248, file: !3, line: 160, type: !4093)
!4256 = !DILocation(line: 0, scope: !4248)
!4257 = !DILocation(line: 160, column: 1, scope: !4248)
!4258 = distinct !DISubprogram(name: "VEC_mem_ref_p_base_space", scope: !3, file: !3, line: 160, type: !4259, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4261)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{!477, !4251, !477}
!4261 = !{!4262, !4263}
!4262 = !DILocalVariable(name: "vec_", arg: 1, scope: !4258, file: !3, line: 160, type: !4251)
!4263 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4258, file: !3, line: 160, type: !477)
!4264 = !DILocation(line: 0, scope: !4258)
!4265 = !DILocation(line: 160, column: 1, scope: !4258)
!4266 = distinct !DISubprogram(name: "VEC_mem_ref_locs_p_base_length", scope: !3, file: !3, line: 124, type: !4267, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4269)
!4267 = !DISubroutineType(types: !4268)
!4268 = !{!7, !3633}
!4269 = !{!4270}
!4270 = !DILocalVariable(name: "vec_", arg: 1, scope: !4266, file: !3, line: 124, type: !3633)
!4271 = !DILocation(line: 0, scope: !4266)
!4272 = !DILocation(line: 124, column: 1, scope: !4266)
!4273 = distinct !DISubprogram(name: "VEC_mem_ref_locs_p_heap_safe_grow_cleared", scope: !3, file: !3, line: 125, type: !4274, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4276)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{null, !3680, !477}
!4276 = !{!4277, !4278, !4279}
!4277 = !DILocalVariable(name: "vec_", arg: 1, scope: !4273, file: !3, line: 125, type: !3680)
!4278 = !DILocalVariable(name: "size_", arg: 2, scope: !4273, file: !3, line: 125, type: !477)
!4279 = !DILocalVariable(name: "oldsize", scope: !4273, file: !3, line: 125, type: !477)
!4280 = !DILocation(line: 0, scope: !4273)
!4281 = !DILocation(line: 125, column: 1, scope: !4273)
!4282 = distinct !DISubprogram(name: "VEC_mem_ref_locs_p_base_index", scope: !3, file: !3, line: 124, type: !4283, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4285)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!1890, !3633, !7}
!4285 = !{!4286, !4287}
!4286 = !DILocalVariable(name: "vec_", arg: 1, scope: !4282, file: !3, line: 124, type: !3633)
!4287 = !DILocalVariable(name: "ix_", arg: 2, scope: !4282, file: !3, line: 124, type: !7)
!4288 = !DILocation(line: 0, scope: !4282)
!4289 = !DILocation(line: 124, column: 1, scope: !4282)
!4290 = distinct !DISubprogram(name: "mem_ref_locs_alloc", scope: !3, file: !3, line: 1263, type: !4291, scopeLine: 1264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4293)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{!1890}
!4293 = !{!4294}
!4294 = !DILocalVariable(name: "accs", scope: !4290, file: !3, line: 1265, type: !1890)
!4295 = !DILocation(line: 1265, column: 25, scope: !4290)
!4296 = !DILocation(line: 0, scope: !4290)
!4297 = !DILocation(line: 1266, column: 9, scope: !4290)
!4298 = !DILocation(line: 1266, column: 14, scope: !4290)
!4299 = !DILocation(line: 1267, column: 3, scope: !4290)
!4300 = distinct !DISubprogram(name: "VEC_mem_ref_locs_p_base_replace", scope: !3, file: !3, line: 124, type: !4301, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4304)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!1890, !4303, !7, !1890}
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!4304 = !{!4305, !4306, !4307, !4308}
!4305 = !DILocalVariable(name: "vec_", arg: 1, scope: !4300, file: !3, line: 124, type: !4303)
!4306 = !DILocalVariable(name: "ix_", arg: 2, scope: !4300, file: !3, line: 124, type: !7)
!4307 = !DILocalVariable(name: "obj_", arg: 3, scope: !4300, file: !3, line: 124, type: !1890)
!4308 = !DILocalVariable(name: "old_obj_", scope: !4300, file: !3, line: 124, type: !1890)
!4309 = !DILocation(line: 0, scope: !4300)
!4310 = !DILocation(line: 124, column: 1, scope: !4300)
!4311 = distinct !DISubprogram(name: "VEC_mem_ref_loc_p_heap_safe_push", scope: !3, file: !3, line: 115, type: !4312, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4314)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{!3692, !3709, !1907}
!4314 = !{!4315, !4316}
!4315 = !DILocalVariable(name: "vec_", arg: 1, scope: !4311, file: !3, line: 115, type: !3709)
!4316 = !DILocalVariable(name: "obj_", arg: 2, scope: !4311, file: !3, line: 115, type: !1907)
!4317 = !DILocation(line: 0, scope: !4311)
!4318 = !DILocation(line: 115, column: 1, scope: !4311)
!4319 = distinct !DISubprogram(name: "VEC_mem_ref_locs_p_heap_safe_grow", scope: !3, file: !3, line: 125, type: !4274, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4320)
!4320 = !{!4321, !4322}
!4321 = !DILocalVariable(name: "vec_", arg: 1, scope: !4319, file: !3, line: 125, type: !3680)
!4322 = !DILocalVariable(name: "size_", arg: 2, scope: !4319, file: !3, line: 125, type: !477)
!4323 = !DILocation(line: 0, scope: !4319)
!4324 = !DILocation(line: 125, column: 1, scope: !4319)
!4325 = distinct !DISubprogram(name: "VEC_mem_ref_locs_p_base_address", scope: !3, file: !3, line: 124, type: !4326, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4328)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!3635, !4303}
!4328 = !{!4329}
!4329 = !DILocalVariable(name: "vec_", arg: 1, scope: !4325, file: !3, line: 124, type: !4303)
!4330 = !DILocation(line: 0, scope: !4325)
!4331 = !DILocation(line: 124, column: 1, scope: !4325)
!4332 = distinct !DISubprogram(name: "VEC_mem_ref_locs_p_heap_reserve_exact", scope: !3, file: !3, line: 125, type: !4333, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4335)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!477, !3680, !477}
!4335 = !{!4336, !4337, !4338}
!4336 = !DILocalVariable(name: "vec_", arg: 1, scope: !4332, file: !3, line: 125, type: !3680)
!4337 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4332, file: !3, line: 125, type: !477)
!4338 = !DILocalVariable(name: "extend", scope: !4332, file: !3, line: 125, type: !477)
!4339 = !DILocation(line: 0, scope: !4332)
!4340 = !DILocation(line: 125, column: 1, scope: !4332)
!4341 = !DILocation(line: 125, column: 1, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 125, column: 1)
!4343 = distinct !DISubprogram(name: "VEC_mem_ref_locs_p_base_space", scope: !3, file: !3, line: 124, type: !4344, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4346)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!477, !4303, !477}
!4346 = !{!4347, !4348}
!4347 = !DILocalVariable(name: "vec_", arg: 1, scope: !4343, file: !3, line: 124, type: !4303)
!4348 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4343, file: !3, line: 124, type: !477)
!4349 = !DILocation(line: 0, scope: !4343)
!4350 = !DILocation(line: 124, column: 1, scope: !4343)
!4351 = distinct !DISubprogram(name: "VEC_mem_ref_loc_p_heap_reserve", scope: !3, file: !3, line: 115, type: !4352, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4354)
!4352 = !DISubroutineType(types: !4353)
!4353 = !{!477, !3709, !477}
!4354 = !{!4355, !4356, !4357}
!4355 = !DILocalVariable(name: "vec_", arg: 1, scope: !4351, file: !3, line: 115, type: !3709)
!4356 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4351, file: !3, line: 115, type: !477)
!4357 = !DILocalVariable(name: "extend", scope: !4351, file: !3, line: 115, type: !477)
!4358 = !DILocation(line: 0, scope: !4351)
!4359 = !DILocation(line: 115, column: 1, scope: !4351)
!4360 = !DILocation(line: 115, column: 1, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 115, column: 1)
!4362 = distinct !DISubprogram(name: "VEC_mem_ref_loc_p_base_quick_push", scope: !3, file: !3, line: 114, type: !4363, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4366)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{!3692, !4365, !1907}
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!4366 = !{!4367, !4368, !4369}
!4367 = !DILocalVariable(name: "vec_", arg: 1, scope: !4362, file: !3, line: 114, type: !4365)
!4368 = !DILocalVariable(name: "obj_", arg: 2, scope: !4362, file: !3, line: 114, type: !1907)
!4369 = !DILocalVariable(name: "slot_", scope: !4362, file: !3, line: 114, type: !3692)
!4370 = !DILocation(line: 0, scope: !4362)
!4371 = !DILocation(line: 114, column: 1, scope: !4362)
!4372 = distinct !DISubprogram(name: "VEC_mem_ref_loc_p_base_space", scope: !3, file: !3, line: 114, type: !4373, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4375)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!477, !4365, !477}
!4375 = !{!4376, !4377}
!4376 = !DILocalVariable(name: "vec_", arg: 1, scope: !4372, file: !3, line: 114, type: !4365)
!4377 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4372, file: !3, line: 114, type: !477)
!4378 = !DILocation(line: 0, scope: !4372)
!4379 = !DILocation(line: 114, column: 1, scope: !4372)
!4380 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !1971, file: !1971, line: 32, type: !4381, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4383)
!4381 = !DISubroutineType(types: !4382)
!4382 = !{!1969, !477}
!4383 = !{!4384}
!4384 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4380, file: !1971, line: 32, type: !477)
!4385 = !DILocation(line: 0, scope: !4380)
!4386 = !DILocation(line: 32, column: 1, scope: !4380)
!4387 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !330, file: !330, line: 85, type: !4388, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4390)
!4388 = !DISubroutineType(types: !4389)
!4389 = !{!477, !3719, !7, !3806}
!4390 = !{!4391, !4392, !4393}
!4391 = !DILocalVariable(name: "vec_", arg: 1, scope: !4387, file: !330, line: 85, type: !3719)
!4392 = !DILocalVariable(name: "ix_", arg: 2, scope: !4387, file: !330, line: 85, type: !7)
!4393 = !DILocalVariable(name: "ptr", arg: 3, scope: !4387, file: !330, line: 85, type: !3806)
!4394 = !DILocation(line: 0, scope: !4387)
!4395 = !DILocation(line: 85, column: 1, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4387, file: !330, line: 85, column: 1)
!4397 = !DILocation(line: 85, column: 1, scope: !4387)
!4398 = !DILocation(line: 85, column: 1, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4396, file: !330, line: 85, column: 1)
!4400 = !DILocation(line: 85, column: 1, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4396, file: !330, line: 85, column: 1)
!4402 = !DILocation(line: 0, scope: !4396)
!4403 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !1971, file: !1971, line: 31, type: !4404, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4408)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{!4406, !4407, !477}
!4406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!4408 = !{!4409, !4410, !4411}
!4409 = !DILocalVariable(name: "vec_", arg: 1, scope: !4403, file: !1971, line: 31, type: !4407)
!4410 = !DILocalVariable(name: "obj_", arg: 2, scope: !4403, file: !1971, line: 31, type: !477)
!4411 = !DILocalVariable(name: "slot_", scope: !4403, file: !1971, line: 31, type: !4406)
!4412 = !DILocation(line: 0, scope: !4403)
!4413 = !DILocation(line: 31, column: 1, scope: !4403)
!4414 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !330, file: !330, line: 85, type: !4415, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4417)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!1050, !3719, !7}
!4417 = !{!4418, !4419}
!4418 = !DILocalVariable(name: "vec_", arg: 1, scope: !4414, file: !330, line: 85, type: !3719)
!4419 = !DILocalVariable(name: "ix_", arg: 2, scope: !4414, file: !330, line: 85, type: !7)
!4420 = !DILocation(line: 0, scope: !4414)
!4421 = !DILocation(line: 85, column: 1, scope: !4414)
!4422 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !1971, file: !1971, line: 31, type: !4423, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4427)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!477, !4425, !7, !4406}
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 64)
!4426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1975)
!4427 = !{!4428, !4429, !4430}
!4428 = !DILocalVariable(name: "vec_", arg: 1, scope: !4422, file: !1971, line: 31, type: !4425)
!4429 = !DILocalVariable(name: "ix_", arg: 2, scope: !4422, file: !1971, line: 31, type: !7)
!4430 = !DILocalVariable(name: "ptr", arg: 3, scope: !4422, file: !1971, line: 31, type: !4406)
!4431 = !DILocation(line: 0, scope: !4422)
!4432 = !DILocation(line: 31, column: 1, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4422, file: !1971, line: 31, column: 1)
!4434 = !DILocation(line: 31, column: 1, scope: !4422)
!4435 = !DILocation(line: 31, column: 1, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4433, file: !1971, line: 31, column: 1)
!4437 = !DILocation(line: 31, column: 1, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4433, file: !1971, line: 31, column: 1)
!4439 = !DILocation(line: 0, scope: !4433)
!4440 = distinct !DISubprogram(name: "get_loop", scope: !330, file: !330, line: 417, type: !4441, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4443)
!4441 = !DISubroutineType(types: !4442)
!4442 = !{!1023, !7}
!4443 = !{!4444}
!4444 = !DILocalVariable(name: "num", arg: 1, scope: !4440, file: !330, line: 417, type: !7)
!4445 = !DILocation(line: 0, scope: !4440)
!4446 = !DILocation(line: 419, column: 10, scope: !4440)
!4447 = !DILocation(line: 419, column: 3, scope: !4440)
!4448 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !1971, file: !1971, line: 32, type: !4449, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4452)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{null, !4451}
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!4452 = !{!4453}
!4453 = !DILocalVariable(name: "vec_", arg: 1, scope: !4448, file: !1971, line: 32, type: !4451)
!4454 = !DILocation(line: 0, scope: !4448)
!4455 = !DILocation(line: 32, column: 1, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4448, file: !1971, line: 32, column: 1)
!4457 = !DILocation(line: 32, column: 1, scope: !4448)
!4458 = distinct !DISubprogram(name: "create_vop_ref_mapping_loop", scope: !3, file: !3, line: 1534, type: !4459, scopeLine: 1535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4461)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{null, !1023}
!4461 = !{!4462, !4463, !4464, !4465, !4473, !4474}
!4462 = !DILocalVariable(name: "loop", arg: 1, scope: !4458, file: !3, line: 1534, type: !1023)
!4463 = !DILocalVariable(name: "refs", scope: !4458, file: !3, line: 1536, type: !1409)
!4464 = !DILocalVariable(name: "sloop", scope: !4458, file: !3, line: 1537, type: !1023)
!4465 = !DILocalVariable(name: "bi", scope: !4458, file: !3, line: 1538, type: !4466)
!4466 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !713, line: 218, baseType: !4467)
!4467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !713, line: 203, size: 256, elements: !4468)
!4468 = !{!4469, !4470, !4471, !4472}
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !4467, file: !713, line: 206, baseType: !716, size: 64)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !4467, file: !713, line: 209, baseType: !716, size: 64, offset: 64)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !4467, file: !713, line: 212, baseType: !7, size: 32, offset: 128)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !4467, file: !713, line: 217, baseType: !726, size: 64, offset: 192)
!4473 = !DILocalVariable(name: "i", scope: !4458, file: !3, line: 1539, type: !7)
!4474 = !DILocalVariable(name: "ref", scope: !4458, file: !3, line: 1540, type: !1956)
!4475 = !DILocation(line: 0, scope: !4458)
!4476 = !DILocation(line: 1536, column: 17, scope: !4458)
!4477 = !DILocation(line: 1538, column: 3, scope: !4458)
!4478 = !DILocation(line: 1539, column: 3, scope: !4458)
!4479 = !DILocation(line: 1542, column: 3, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 1542, column: 3)
!4481 = !DILocation(line: 1542, column: 3, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4480, file: !3, line: 1542, column: 3)
!4483 = !DILocation(line: 1544, column: 13, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 1543, column: 5)
!4485 = !DILocation(line: 1545, column: 12, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1545, column: 7)
!4487 = !DILocation(line: 0, scope: !4486)
!4488 = !DILocation(line: 1545, column: 35, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 1545, column: 7)
!4490 = !DILocation(line: 1545, column: 50, scope: !4489)
!4491 = !DILocation(line: 1545, column: 32, scope: !4489)
!4492 = !DILocation(line: 1545, column: 7, scope: !4486)
!4493 = !DILocation(line: 1546, column: 2, scope: !4489)
!4494 = !DILocation(line: 1545, column: 69, scope: !4489)
!4495 = !DILocation(line: 1545, column: 7, scope: !4489)
!4496 = distinct !{!4496, !4492, !4497}
!4497 = !DILocation(line: 1546, column: 33, scope: !4486)
!4498 = distinct !{!4498, !4479, !4499}
!4499 = !DILocation(line: 1547, column: 5, scope: !4480)
!4500 = !DILocation(line: 1548, column: 1, scope: !4458)
!4501 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !713, file: !713, line: 224, type: !4502, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4509)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{null, !4504, !4505, !7, !4508}
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 64)
!4505 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !485, line: 48, baseType: !4506)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !712)
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4509 = !{!4510, !4511, !4512, !4513}
!4510 = !DILocalVariable(name: "bi", arg: 1, scope: !4501, file: !713, line: 224, type: !4504)
!4511 = !DILocalVariable(name: "map", arg: 2, scope: !4501, file: !713, line: 224, type: !4505)
!4512 = !DILocalVariable(name: "start_bit", arg: 3, scope: !4501, file: !713, line: 225, type: !7)
!4513 = !DILocalVariable(name: "bit_no", arg: 4, scope: !4501, file: !713, line: 225, type: !4508)
!4514 = !DILocation(line: 0, scope: !4501)
!4515 = !DILocation(line: 227, column: 19, scope: !4501)
!4516 = !DILocation(line: 227, column: 12, scope: !4501)
!4517 = !DILocation(line: 228, column: 7, scope: !4501)
!4518 = !DILocation(line: 228, column: 12, scope: !4501)
!4519 = !DILocation(line: 0, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !713, line: 233, column: 11)
!4521 = distinct !DILexicalBlock(scope: !4501, file: !713, line: 232, column: 5)
!4522 = !DILocation(line: 231, column: 3, scope: !4501)
!4523 = !DILocation(line: 233, column: 12, scope: !4520)
!4524 = !DILocation(line: 233, column: 11, scope: !4521)
!4525 = !DILocation(line: 235, column: 13, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4520, file: !713, line: 234, column: 2)
!4527 = !DILocation(line: 236, column: 4, scope: !4526)
!4528 = !DILocation(line: 239, column: 11, scope: !4521)
!4529 = distinct !{!4529, !4522, !4530}
!4530 = !DILocation(line: 242, column: 5, scope: !4501)
!4531 = !DILocation(line: 245, column: 11, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4501, file: !713, line: 245, column: 7)
!4533 = !DILocation(line: 245, column: 17, scope: !4532)
!4534 = !DILocation(line: 245, column: 22, scope: !4532)
!4535 = !DILocation(line: 245, column: 7, scope: !4501)
!4536 = !DILocation(line: 246, column: 27, scope: !4532)
!4537 = !DILocation(line: 246, column: 32, scope: !4532)
!4538 = !DILocation(line: 246, column: 5, scope: !4532)
!4539 = !DILocation(line: 249, column: 7, scope: !4501)
!4540 = !DILocation(line: 249, column: 15, scope: !4501)
!4541 = !DILocation(line: 250, column: 14, scope: !4501)
!4542 = !DILocation(line: 251, column: 7, scope: !4501)
!4543 = !DILocation(line: 251, column: 12, scope: !4501)
!4544 = !DILocation(line: 257, column: 16, scope: !4501)
!4545 = !DILocation(line: 257, column: 13, scope: !4501)
!4546 = !DILocation(line: 259, column: 11, scope: !4501)
!4547 = !DILocation(line: 260, column: 1, scope: !4501)
!4548 = distinct !DISubprogram(name: "bmp_iter_set", scope: !713, file: !713, line: 393, type: !4549, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4551)
!4549 = !DISubroutineType(types: !4550)
!4550 = !{!476, !4504, !4508}
!4551 = !{!4552, !4553, !4554}
!4552 = !DILocalVariable(name: "bi", arg: 1, scope: !4548, file: !713, line: 393, type: !4504)
!4553 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4548, file: !713, line: 393, type: !4508)
!4554 = !DILabel(scope: !4555, name: "next_bit", file: !713, line: 398)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !713, line: 397, column: 5)
!4556 = distinct !DILexicalBlock(scope: !4548, file: !713, line: 396, column: 7)
!4557 = !DILocation(line: 0, scope: !4548)
!4558 = !DILocation(line: 396, column: 11, scope: !4556)
!4559 = !DILocation(line: 396, column: 7, scope: !4556)
!4560 = !DILocation(line: 396, column: 7, scope: !4548)
!4561 = !DILocation(line: 419, column: 15, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !713, line: 418, column: 2)
!4563 = distinct !DILexicalBlock(scope: !4548, file: !713, line: 415, column: 5)
!4564 = !DILocation(line: 399, column: 7, scope: !4555)
!4565 = !DILocation(line: 398, column: 5, scope: !4555)
!4566 = !DILocation(line: 399, column: 20, scope: !4555)
!4567 = !DILocation(line: 399, column: 25, scope: !4555)
!4568 = !DILocation(line: 399, column: 14, scope: !4555)
!4569 = !DILocation(line: 401, column: 13, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4555, file: !713, line: 400, column: 2)
!4571 = !DILocation(line: 402, column: 12, scope: !4570)
!4572 = distinct !{!4572, !4564, !4573}
!4573 = !DILocation(line: 403, column: 2, scope: !4555)
!4574 = !DILocation(line: 410, column: 15, scope: !4548)
!4575 = !DILocation(line: 410, column: 42, scope: !4548)
!4576 = !DILocation(line: 411, column: 26, scope: !4548)
!4577 = !DILocation(line: 410, column: 11, scope: !4548)
!4578 = !DILocation(line: 412, column: 7, scope: !4548)
!4579 = !DILocation(line: 412, column: 14, scope: !4548)
!4580 = !DILocation(line: 0, scope: !4563)
!4581 = !DILocation(line: 414, column: 3, scope: !4548)
!4582 = !DILocation(line: 417, column: 7, scope: !4563)
!4583 = !DILocation(line: 417, column: 18, scope: !4563)
!4584 = !DILocation(line: 417, column: 26, scope: !4563)
!4585 = !DILocation(line: 419, column: 13, scope: !4562)
!4586 = !DILocation(line: 420, column: 8, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4562, file: !713, line: 420, column: 8)
!4588 = !DILocation(line: 420, column: 8, scope: !4562)
!4589 = !DILocation(line: 422, column: 12, scope: !4562)
!4590 = !DILocation(line: 423, column: 15, scope: !4562)
!4591 = distinct !{!4591, !4582, !4592}
!4592 = !DILocation(line: 424, column: 2, scope: !4563)
!4593 = !DILocation(line: 427, column: 28, scope: !4563)
!4594 = !DILocation(line: 427, column: 16, scope: !4563)
!4595 = !DILocation(line: 428, column: 12, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4563, file: !713, line: 428, column: 11)
!4597 = !DILocation(line: 428, column: 11, scope: !4563)
!4598 = !DILocation(line: 430, column: 27, scope: !4563)
!4599 = !DILocation(line: 430, column: 32, scope: !4563)
!4600 = !DILocation(line: 430, column: 15, scope: !4563)
!4601 = !DILocation(line: 431, column: 19, scope: !4563)
!4602 = distinct !{!4602, !4581, !4603}
!4603 = !DILocation(line: 432, column: 5, scope: !4548)
!4604 = !DILocation(line: 433, column: 1, scope: !4548)
!4605 = distinct !DISubprogram(name: "VEC_mem_ref_p_base_index", scope: !3, file: !3, line: 160, type: !4606, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4608)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{!1956, !4047, !7}
!4608 = !{!4609, !4610}
!4609 = !DILocalVariable(name: "vec_", arg: 1, scope: !4605, file: !3, line: 160, type: !4047)
!4610 = !DILocalVariable(name: "ix_", arg: 2, scope: !4605, file: !3, line: 160, type: !7)
!4611 = !DILocation(line: 0, scope: !4605)
!4612 = !DILocation(line: 160, column: 1, scope: !4605)
!4613 = distinct !DISubprogram(name: "add_vop_ref_mapping", scope: !3, file: !3, line: 1515, type: !4614, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4616)
!4614 = !DISubroutineType(types: !4615)
!4615 = !{null, !1023, !1956}
!4616 = !{!4617, !4618, !4619, !4620, !4621, !4622, !4623}
!4617 = !DILocalVariable(name: "loop", arg: 1, scope: !4613, file: !3, line: 1515, type: !1023)
!4618 = !DILocalVariable(name: "ref", arg: 2, scope: !4613, file: !3, line: 1515, type: !1956)
!4619 = !DILocalVariable(name: "map", scope: !4613, file: !3, line: 1517, type: !1325)
!4620 = !DILocalVariable(name: "stored", scope: !4613, file: !3, line: 1518, type: !476)
!4621 = !DILocalVariable(name: "clobbers", scope: !4613, file: !3, line: 1519, type: !1409)
!4622 = !DILocalVariable(name: "bi", scope: !4613, file: !3, line: 1521, type: !4466)
!4623 = !DILocalVariable(name: "vop", scope: !4613, file: !3, line: 1522, type: !7)
!4624 = !DILocation(line: 0, scope: !4613)
!4625 = !DILocation(line: 1517, column: 16, scope: !4613)
!4626 = !DILocation(line: 1518, column: 36, scope: !4613)
!4627 = !DILocation(line: 1518, column: 50, scope: !4613)
!4628 = !DILocation(line: 1518, column: 17, scope: !4613)
!4629 = !DILocation(line: 1519, column: 21, scope: !4613)
!4630 = !DILocation(line: 1521, column: 3, scope: !4613)
!4631 = !DILocation(line: 1522, column: 3, scope: !4613)
!4632 = !DILocation(line: 1524, column: 3, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 1524, column: 3)
!4634 = !DILocation(line: 0, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !3, line: 1525, column: 5)
!4636 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 1524, column: 3)
!4637 = !DILocation(line: 1524, column: 3, scope: !4636)
!4638 = !DILocation(line: 1526, column: 31, scope: !4635)
!4639 = !DILocation(line: 1526, column: 41, scope: !4635)
!4640 = !DILocation(line: 1526, column: 7, scope: !4635)
!4641 = distinct !{!4641, !4632, !4642}
!4642 = !DILocation(line: 1527, column: 5, scope: !4633)
!4643 = !DILocation(line: 1528, column: 1, scope: !4613)
!4644 = distinct !DISubprogram(name: "bmp_iter_next", scope: !713, file: !713, line: 382, type: !4645, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4647)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{null, !4504, !4508}
!4647 = !{!4648, !4649}
!4648 = !DILocalVariable(name: "bi", arg: 1, scope: !4644, file: !713, line: 382, type: !4504)
!4649 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4644, file: !713, line: 382, type: !4508)
!4650 = !DILocation(line: 0, scope: !4644)
!4651 = !DILocation(line: 384, column: 7, scope: !4644)
!4652 = !DILocation(line: 384, column: 12, scope: !4644)
!4653 = !DILocation(line: 385, column: 11, scope: !4644)
!4654 = !DILocation(line: 386, column: 1, scope: !4644)
!4655 = distinct !DISubprogram(name: "VEC_htab_t_base_index", scope: !3, file: !3, line: 166, type: !4656, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4660)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{!1325, !4658, !7}
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1939)
!4660 = !{!4661, !4662}
!4661 = !DILocalVariable(name: "vec_", arg: 1, scope: !4655, file: !3, line: 166, type: !4658)
!4662 = !DILocalVariable(name: "ix_", arg: 2, scope: !4655, file: !3, line: 166, type: !7)
!4663 = !DILocation(line: 0, scope: !4655)
!4664 = !DILocation(line: 166, column: 1, scope: !4655)
!4665 = distinct !DISubprogram(name: "bmp_iter_and_compl_init", scope: !713, file: !713, line: 334, type: !4666, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4668)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{null, !4504, !4505, !4505, !7, !4508}
!4668 = !{!4669, !4670, !4671, !4672, !4673}
!4669 = !DILocalVariable(name: "bi", arg: 1, scope: !4665, file: !713, line: 334, type: !4504)
!4670 = !DILocalVariable(name: "map1", arg: 2, scope: !4665, file: !713, line: 334, type: !4505)
!4671 = !DILocalVariable(name: "map2", arg: 3, scope: !4665, file: !713, line: 334, type: !4505)
!4672 = !DILocalVariable(name: "start_bit", arg: 4, scope: !4665, file: !713, line: 335, type: !7)
!4673 = !DILocalVariable(name: "bit_no", arg: 5, scope: !4665, file: !713, line: 335, type: !4508)
!4674 = !DILocation(line: 0, scope: !4665)
!4675 = !DILocation(line: 337, column: 20, scope: !4665)
!4676 = !DILocation(line: 337, column: 12, scope: !4665)
!4677 = !DILocation(line: 338, column: 20, scope: !4665)
!4678 = !DILocation(line: 338, column: 7, scope: !4665)
!4679 = !DILocation(line: 338, column: 12, scope: !4665)
!4680 = !DILocation(line: 0, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !713, line: 343, column: 11)
!4682 = distinct !DILexicalBlock(scope: !4665, file: !713, line: 342, column: 5)
!4683 = !DILocation(line: 341, column: 3, scope: !4665)
!4684 = !DILocation(line: 343, column: 12, scope: !4681)
!4685 = !DILocation(line: 343, column: 11, scope: !4682)
!4686 = !DILocation(line: 345, column: 13, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4681, file: !713, line: 344, column: 2)
!4688 = !DILocation(line: 346, column: 4, scope: !4687)
!4689 = !DILocation(line: 349, column: 11, scope: !4682)
!4690 = distinct !{!4690, !4683, !4691}
!4691 = !DILocation(line: 352, column: 5, scope: !4665)
!4692 = !DILocation(line: 355, column: 26, scope: !4665)
!4693 = !DILocation(line: 355, column: 3, scope: !4665)
!4694 = !DILocation(line: 355, column: 14, scope: !4665)
!4695 = !DILocation(line: 355, column: 10, scope: !4665)
!4696 = !DILocation(line: 355, column: 19, scope: !4665)
!4697 = !DILocation(line: 355, column: 32, scope: !4665)
!4698 = !DILocation(line: 355, column: 49, scope: !4665)
!4699 = !DILocation(line: 355, column: 37, scope: !4665)
!4700 = !DILocation(line: 356, column: 26, scope: !4665)
!4701 = !DILocation(line: 356, column: 14, scope: !4665)
!4702 = distinct !{!4702, !4693, !4700}
!4703 = !DILocation(line: 360, column: 17, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4665, file: !713, line: 360, column: 7)
!4705 = !DILocation(line: 360, column: 22, scope: !4704)
!4706 = !DILocation(line: 360, column: 7, scope: !4665)
!4707 = !DILocation(line: 361, column: 27, scope: !4704)
!4708 = !DILocation(line: 361, column: 32, scope: !4704)
!4709 = !DILocation(line: 361, column: 5, scope: !4704)
!4710 = !DILocation(line: 363, column: 7, scope: !4665)
!4711 = !DILocation(line: 363, column: 15, scope: !4665)
!4712 = !DILocation(line: 364, column: 14, scope: !4665)
!4713 = !DILocation(line: 364, column: 7, scope: !4665)
!4714 = !DILocation(line: 364, column: 12, scope: !4665)
!4715 = !DILocation(line: 365, column: 7, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4665, file: !713, line: 365, column: 7)
!4717 = !DILocation(line: 365, column: 16, scope: !4716)
!4718 = !DILocation(line: 365, column: 29, scope: !4716)
!4719 = !DILocation(line: 365, column: 47, scope: !4716)
!4720 = !DILocation(line: 365, column: 34, scope: !4716)
!4721 = !DILocation(line: 365, column: 7, scope: !4665)
!4722 = !DILocation(line: 366, column: 18, scope: !4716)
!4723 = !DILocation(line: 366, column: 17, scope: !4716)
!4724 = !DILocation(line: 366, column: 14, scope: !4716)
!4725 = !DILocation(line: 366, column: 5, scope: !4716)
!4726 = !DILocation(line: 367, column: 12, scope: !4665)
!4727 = !DILocation(line: 373, column: 16, scope: !4665)
!4728 = !DILocation(line: 373, column: 13, scope: !4665)
!4729 = !DILocation(line: 375, column: 11, scope: !4665)
!4730 = !DILocation(line: 376, column: 1, scope: !4665)
!4731 = distinct !DISubprogram(name: "bmp_iter_and_compl", scope: !713, file: !713, line: 507, type: !4549, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4732)
!4732 = !{!4733, !4734, !4735}
!4733 = !DILocalVariable(name: "bi", arg: 1, scope: !4731, file: !713, line: 507, type: !4504)
!4734 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4731, file: !713, line: 507, type: !4508)
!4735 = !DILabel(scope: !4736, name: "next_bit", file: !713, line: 512)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !713, line: 511, column: 5)
!4737 = distinct !DILexicalBlock(scope: !4731, file: !713, line: 510, column: 7)
!4738 = !DILocation(line: 0, scope: !4731)
!4739 = !DILocation(line: 510, column: 11, scope: !4737)
!4740 = !DILocation(line: 510, column: 7, scope: !4737)
!4741 = !DILocation(line: 510, column: 7, scope: !4731)
!4742 = !DILocation(line: 536, column: 12, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !713, line: 536, column: 8)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !713, line: 532, column: 2)
!4745 = distinct !DILexicalBlock(scope: !4731, file: !713, line: 529, column: 5)
!4746 = !DILocation(line: 513, column: 7, scope: !4736)
!4747 = !DILocation(line: 512, column: 5, scope: !4736)
!4748 = !DILocation(line: 513, column: 20, scope: !4736)
!4749 = !DILocation(line: 513, column: 25, scope: !4736)
!4750 = !DILocation(line: 513, column: 14, scope: !4736)
!4751 = !DILocation(line: 515, column: 13, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4736, file: !713, line: 514, column: 2)
!4753 = !DILocation(line: 516, column: 12, scope: !4752)
!4754 = distinct !{!4754, !4746, !4755}
!4755 = !DILocation(line: 517, column: 2, scope: !4736)
!4756 = !DILocation(line: 524, column: 15, scope: !4731)
!4757 = !DILocation(line: 524, column: 42, scope: !4731)
!4758 = !DILocation(line: 525, column: 26, scope: !4731)
!4759 = !DILocation(line: 524, column: 11, scope: !4731)
!4760 = !DILocation(line: 526, column: 7, scope: !4731)
!4761 = !DILocation(line: 526, column: 14, scope: !4731)
!4762 = !DILocation(line: 0, scope: !4745)
!4763 = !DILocation(line: 0, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4744, file: !713, line: 534, column: 8)
!4765 = !DILocation(line: 528, column: 3, scope: !4731)
!4766 = !DILocation(line: 531, column: 7, scope: !4745)
!4767 = !DILocation(line: 531, column: 18, scope: !4745)
!4768 = !DILocation(line: 531, column: 26, scope: !4745)
!4769 = !DILocation(line: 533, column: 15, scope: !4744)
!4770 = !DILocation(line: 533, column: 13, scope: !4744)
!4771 = !DILocation(line: 534, column: 12, scope: !4764)
!4772 = !DILocation(line: 534, column: 8, scope: !4764)
!4773 = !DILocation(line: 534, column: 17, scope: !4764)
!4774 = !DILocation(line: 534, column: 30, scope: !4764)
!4775 = !DILocation(line: 534, column: 48, scope: !4764)
!4776 = !DILocation(line: 534, column: 35, scope: !4764)
!4777 = !DILocation(line: 534, column: 8, scope: !4744)
!4778 = !DILocation(line: 535, column: 19, scope: !4764)
!4779 = !DILocation(line: 535, column: 18, scope: !4764)
!4780 = !DILocation(line: 535, column: 15, scope: !4764)
!4781 = !DILocation(line: 535, column: 6, scope: !4764)
!4782 = !DILocation(line: 536, column: 8, scope: !4743)
!4783 = !DILocation(line: 536, column: 8, scope: !4744)
!4784 = !DILocation(line: 538, column: 12, scope: !4744)
!4785 = !DILocation(line: 539, column: 15, scope: !4744)
!4786 = distinct !{!4786, !4766, !4787}
!4787 = !DILocation(line: 540, column: 2, scope: !4745)
!4788 = !DILocation(line: 543, column: 28, scope: !4745)
!4789 = !DILocation(line: 543, column: 16, scope: !4745)
!4790 = !DILocation(line: 544, column: 12, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4745, file: !713, line: 544, column: 11)
!4792 = !DILocation(line: 544, column: 11, scope: !4745)
!4793 = !DILocation(line: 548, column: 18, scope: !4745)
!4794 = !DILocation(line: 548, column: 7, scope: !4745)
!4795 = !DILocation(line: 548, column: 14, scope: !4745)
!4796 = !DILocation(line: 548, column: 23, scope: !4745)
!4797 = !DILocation(line: 548, column: 36, scope: !4745)
!4798 = !DILocation(line: 548, column: 53, scope: !4745)
!4799 = !DILocation(line: 548, column: 41, scope: !4745)
!4800 = !DILocation(line: 549, column: 23, scope: !4745)
!4801 = !DILocation(line: 549, column: 11, scope: !4745)
!4802 = distinct !{!4802, !4794, !4800}
!4803 = !DILocation(line: 551, column: 27, scope: !4745)
!4804 = !DILocation(line: 551, column: 32, scope: !4745)
!4805 = !DILocation(line: 551, column: 15, scope: !4745)
!4806 = !DILocation(line: 552, column: 19, scope: !4745)
!4807 = distinct !{!4807, !4765, !4808}
!4808 = !DILocation(line: 553, column: 5, scope: !4731)
!4809 = !DILocation(line: 554, column: 1, scope: !4731)
!4810 = distinct !DISubprogram(name: "record_vop_access", scope: !3, file: !3, line: 1469, type: !4811, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4813)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{null, !1325, !7, !7, !476}
!4813 = !{!4814, !4815, !4816, !4817, !4818, !4819}
!4814 = !DILocalVariable(name: "vop_to_refs", arg: 1, scope: !4810, file: !3, line: 1469, type: !1325)
!4815 = !DILocalVariable(name: "vop", arg: 2, scope: !4810, file: !3, line: 1469, type: !7)
!4816 = !DILocalVariable(name: "ref", arg: 3, scope: !4810, file: !3, line: 1469, type: !7)
!4817 = !DILocalVariable(name: "stored", arg: 4, scope: !4810, file: !3, line: 1469, type: !476)
!4818 = !DILocalVariable(name: "slot", scope: !4810, file: !3, line: 1471, type: !1347)
!4819 = !DILocalVariable(name: "vtoe", scope: !4810, file: !3, line: 1472, type: !1955)
!4820 = !DILocation(line: 0, scope: !4810)
!4821 = !DILocation(line: 1471, column: 56, scope: !4810)
!4822 = !DILocation(line: 1471, column: 17, scope: !4810)
!4823 = !DILocation(line: 1474, column: 8, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 1474, column: 7)
!4825 = !DILocation(line: 1474, column: 7, scope: !4810)
!4826 = !DILocation(line: 1476, column: 14, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 1475, column: 5)
!4828 = !DILocation(line: 1477, column: 19, scope: !4827)
!4829 = !DILocation(line: 1477, column: 13, scope: !4827)
!4830 = !DILocation(line: 1477, column: 17, scope: !4827)
!4831 = !DILocation(line: 1478, column: 24, scope: !4827)
!4832 = !DILocation(line: 1478, column: 13, scope: !4827)
!4833 = !DILocation(line: 1478, column: 22, scope: !4827)
!4834 = !DILocation(line: 1479, column: 27, scope: !4827)
!4835 = !DILocation(line: 1479, column: 13, scope: !4827)
!4836 = !DILocation(line: 1479, column: 25, scope: !4827)
!4837 = !DILocation(line: 1480, column: 13, scope: !4827)
!4838 = !DILocation(line: 1481, column: 5, scope: !4827)
!4839 = !DILocation(line: 1485, column: 25, scope: !4810)
!4840 = !DILocation(line: 1485, column: 3, scope: !4810)
!4841 = !DILocation(line: 1486, column: 7, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 1486, column: 7)
!4843 = !DILocation(line: 1486, column: 7, scope: !4810)
!4844 = !DILocation(line: 1487, column: 27, scope: !4842)
!4845 = !DILocation(line: 1487, column: 5, scope: !4842)
!4846 = !DILocation(line: 1488, column: 1, scope: !4810)
!4847 = distinct !DISubprogram(name: "determine_invariantness_stmt", scope: !3, file: !3, line: 906, type: !2879, scopeLine: 908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4848)
!4848 = !{!4849, !4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4866, !4869, !4870}
!4849 = !DILocalVariable(name: "dw_data", arg: 1, scope: !4847, file: !3, line: 906, type: !2876)
!4850 = !DILocalVariable(name: "bb", arg: 2, scope: !4847, file: !3, line: 907, type: !1293)
!4851 = !DILocalVariable(name: "pos", scope: !4847, file: !3, line: 909, type: !390)
!4852 = !DILocalVariable(name: "bsi", scope: !4847, file: !3, line: 910, type: !2763)
!4853 = !DILocalVariable(name: "stmt", scope: !4847, file: !3, line: 911, type: !808)
!4854 = !DILocalVariable(name: "maybe_never", scope: !4847, file: !3, line: 912, type: !476)
!4855 = !DILocalVariable(name: "outermost", scope: !4847, file: !3, line: 913, type: !1023)
!4856 = !DILocalVariable(name: "lim_data", scope: !4847, file: !3, line: 914, type: !1982)
!4857 = !DILocalVariable(name: "lim_data", scope: !4858, file: !3, line: 939, type: !1982)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 938, column: 6)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 937, column: 13)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 930, column: 8)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 929, column: 2)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 928, column: 11)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 924, column: 5)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 923, column: 3)
!4865 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 923, column: 3)
!4866 = !DILocalVariable(name: "op0", scope: !4867, file: !3, line: 949, type: !484)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 948, column: 2)
!4868 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 945, column: 11)
!4869 = !DILocalVariable(name: "op1", scope: !4867, file: !3, line: 950, type: !484)
!4870 = !DILocalVariable(name: "ol1", scope: !4867, file: !3, line: 951, type: !1023)
!4871 = !DILocation(line: 0, scope: !4847)
!4872 = !DILocation(line: 910, column: 3, scope: !4847)
!4873 = !DILocation(line: 912, column: 22, scope: !4847)
!4874 = !DILocation(line: 912, column: 46, scope: !4847)
!4875 = !DILocation(line: 916, column: 24, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 916, column: 7)
!4877 = !DILocation(line: 916, column: 8, scope: !4876)
!4878 = !DILocation(line: 916, column: 7, scope: !4847)
!4879 = !DILocation(line: 919, column: 7, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 919, column: 7)
!4881 = !DILocation(line: 919, column: 17, scope: !4880)
!4882 = !DILocation(line: 919, column: 21, scope: !4880)
!4883 = !DILocation(line: 919, column: 32, scope: !4880)
!4884 = !DILocation(line: 919, column: 7, scope: !4847)
!4885 = !DILocation(line: 921, column: 11, scope: !4880)
!4886 = !DILocation(line: 921, column: 22, scope: !4880)
!4887 = !DILocation(line: 921, column: 35, scope: !4880)
!4888 = !DILocation(line: 921, column: 40, scope: !4880)
!4889 = !DILocation(line: 920, column: 5, scope: !4880)
!4890 = !DILocation(line: 923, column: 14, scope: !4865)
!4891 = !DILocation(line: 923, column: 8, scope: !4865)
!4892 = !DILocation(line: 923, column: 34, scope: !4864)
!4893 = !DILocation(line: 923, column: 33, scope: !4864)
!4894 = !DILocation(line: 923, column: 3, scope: !4865)
!4895 = !DILocation(line: 925, column: 14, scope: !4863)
!4896 = !DILocation(line: 927, column: 13, scope: !4863)
!4897 = !DILocation(line: 928, column: 15, scope: !4862)
!4898 = !DILocation(line: 928, column: 11, scope: !4863)
!4899 = !DILocation(line: 930, column: 8, scope: !4860)
!4900 = !DILocation(line: 930, column: 8, scope: !4861)
!4901 = !DILocation(line: 937, column: 13, scope: !4859)
!4902 = !DILocation(line: 937, column: 13, scope: !4860)
!4903 = !DILocation(line: 939, column: 40, scope: !4858)
!4904 = !DILocation(line: 0, scope: !4858)
!4905 = !DILocation(line: 940, column: 18, scope: !4858)
!4906 = !DILocation(line: 940, column: 37, scope: !4858)
!4907 = !DILocation(line: 941, column: 6, scope: !4858)
!4908 = !DILocation(line: 945, column: 11, scope: !4868)
!4909 = !DILocation(line: 946, column: 4, scope: !4868)
!4910 = !DILocation(line: 946, column: 30, scope: !4868)
!4911 = !DILocation(line: 946, column: 8, scope: !4868)
!4912 = !DILocation(line: 947, column: 8, scope: !4868)
!4913 = !DILocation(line: 945, column: 11, scope: !4863)
!4914 = !DILocation(line: 949, column: 15, scope: !4867)
!4915 = !DILocation(line: 0, scope: !4867)
!4916 = !DILocation(line: 950, column: 15, scope: !4867)
!4917 = !DILocation(line: 952, column: 6, scope: !4867)
!4918 = !DILocation(line: 951, column: 23, scope: !4867)
!4919 = !DILocation(line: 956, column: 12, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 956, column: 8)
!4921 = !DILocation(line: 957, column: 8, scope: !4920)
!4922 = !DILocation(line: 957, column: 11, scope: !4920)
!4923 = !DILocation(line: 957, column: 41, scope: !4920)
!4924 = !DILocation(line: 958, column: 11, scope: !4920)
!4925 = !DILocation(line: 958, column: 8, scope: !4920)
!4926 = !DILocation(line: 959, column: 12, scope: !4920)
!4927 = !DILocation(line: 960, column: 15, scope: !4920)
!4928 = !DILocation(line: 961, column: 11, scope: !4920)
!4929 = !DILocation(line: 961, column: 47, scope: !4920)
!4930 = !DILocation(line: 956, column: 8, scope: !4867)
!4931 = !DILocation(line: 962, column: 13, scope: !4920)
!4932 = !DILocation(line: 962, column: 6, scope: !4920)
!4933 = !DILocation(line: 0, scope: !4863)
!4934 = !DILocation(line: 968, column: 8, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 967, column: 8)
!4936 = !DILocation(line: 968, column: 11, scope: !4935)
!4937 = !DILocation(line: 968, column: 41, scope: !4935)
!4938 = !DILocation(line: 969, column: 8, scope: !4935)
!4939 = !DILocation(line: 969, column: 11, scope: !4935)
!4940 = !DILocation(line: 970, column: 8, scope: !4935)
!4941 = !DILocation(line: 970, column: 11, scope: !4935)
!4942 = !DILocation(line: 970, column: 27, scope: !4935)
!4943 = !DILocation(line: 971, column: 8, scope: !4935)
!4944 = !DILocation(line: 971, column: 11, scope: !4935)
!4945 = !DILocation(line: 967, column: 8, scope: !4867)
!4946 = !DILocation(line: 972, column: 13, scope: !4935)
!4947 = !DILocation(line: 972, column: 6, scope: !4935)
!4948 = !DILocation(line: 975, column: 18, scope: !4863)
!4949 = !DILocation(line: 976, column: 17, scope: !4863)
!4950 = !DILocation(line: 976, column: 36, scope: !4863)
!4951 = !DILocation(line: 978, column: 11, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 978, column: 11)
!4953 = !DILocation(line: 978, column: 30, scope: !4952)
!4954 = !DILocation(line: 978, column: 23, scope: !4952)
!4955 = !DILocation(line: 981, column: 42, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 981, column: 11)
!4957 = !DILocation(line: 981, column: 12, scope: !4956)
!4958 = !DILocation(line: 981, column: 11, scope: !4863)
!4959 = !DILocation(line: 983, column: 14, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 982, column: 2)
!4961 = !DILocation(line: 983, column: 23, scope: !4960)
!4962 = !DILocation(line: 984, column: 4, scope: !4960)
!4963 = !DILocation(line: 987, column: 11, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 987, column: 11)
!4965 = !DILocation(line: 987, column: 21, scope: !4964)
!4966 = !DILocation(line: 987, column: 25, scope: !4964)
!4967 = !DILocation(line: 987, column: 36, scope: !4964)
!4968 = !DILocation(line: 987, column: 11, scope: !4863)
!4969 = !DILocation(line: 989, column: 4, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 988, column: 2)
!4971 = !DILocation(line: 990, column: 13, scope: !4970)
!4972 = !DILocation(line: 991, column: 28, scope: !4970)
!4973 = !DILocation(line: 991, column: 6, scope: !4970)
!4974 = !DILocation(line: 992, column: 16, scope: !4970)
!4975 = !DILocation(line: 990, column: 4, scope: !4970)
!4976 = !DILocation(line: 993, column: 2, scope: !4970)
!4977 = !DILocation(line: 995, column: 21, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 995, column: 11)
!4979 = !DILocation(line: 995, column: 29, scope: !4978)
!4980 = !DILocation(line: 995, column: 26, scope: !4978)
!4981 = !DILocation(line: 995, column: 11, scope: !4863)
!4982 = !DILocation(line: 996, column: 2, scope: !4978)
!4983 = !DILocation(line: 923, column: 51, scope: !4864)
!4984 = !DILocation(line: 923, column: 3, scope: !4864)
!4985 = distinct !{!4985, !4894, !4986}
!4986 = !DILocation(line: 997, column: 5, scope: !4865)
!4987 = !DILocation(line: 998, column: 1, scope: !4847)
!4988 = distinct !DISubprogram(name: "loop_depth", scope: !330, file: !330, line: 425, type: !4989, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4991)
!4989 = !DISubroutineType(types: !4990)
!4990 = !{!7, !3954}
!4991 = !{!4992}
!4992 = !DILocalVariable(name: "loop", arg: 1, scope: !4988, file: !330, line: 425, type: !3954)
!4993 = !DILocation(line: 0, scope: !4988)
!4994 = !DILocation(line: 427, column: 10, scope: !4988)
!4995 = !DILocation(line: 427, column: 3, scope: !4988)
!4996 = distinct !DISubprogram(name: "init_lim_data", scope: !3, file: !3, line: 207, type: !4997, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4999)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!1982, !808}
!4999 = !{!5000, !5001}
!5000 = !DILocalVariable(name: "stmt", arg: 1, scope: !4996, file: !3, line: 207, type: !808)
!5001 = !DILocalVariable(name: "p", scope: !4996, file: !3, line: 209, type: !1347)
!5002 = !DILocation(line: 0, scope: !4996)
!5003 = !DILocation(line: 209, column: 34, scope: !4996)
!5004 = !DILocation(line: 209, column: 52, scope: !4996)
!5005 = !DILocation(line: 209, column: 14, scope: !4996)
!5006 = !DILocation(line: 211, column: 8, scope: !4996)
!5007 = !DILocation(line: 211, column: 6, scope: !4996)
!5008 = !DILocation(line: 212, column: 34, scope: !4996)
!5009 = !DILocation(line: 212, column: 3, scope: !4996)
!5010 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !397, file: !397, line: 1759, type: !2598, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5011)
!5011 = !{!5012}
!5012 = !DILocalVariable(name: "gs", arg: 1, scope: !5010, file: !397, line: 1759, type: !2591)
!5013 = !DILocation(line: 0, scope: !5010)
!5014 = !DILocation(line: 1763, column: 7, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5010, file: !397, line: 1763, column: 7)
!5016 = !DILocation(line: 1763, column: 27, scope: !5015)
!5017 = !DILocation(line: 1763, column: 7, scope: !5010)
!5018 = !DILocation(line: 1764, column: 12, scope: !5015)
!5019 = !DILocation(line: 1764, column: 5, scope: !5015)
!5020 = !DILocation(line: 0, scope: !5015)
!5021 = !DILocation(line: 1767, column: 1, scope: !5010)
!5022 = distinct !DISubprogram(name: "outermost_invariant_loop", scope: !3, file: !3, line: 419, type: !5023, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5025)
!5023 = !DISubroutineType(types: !5024)
!5024 = !{!1023, !484, !1023}
!5025 = !{!5026, !5027, !5028, !5029, !5030, !5031}
!5026 = !DILocalVariable(name: "def", arg: 1, scope: !5022, file: !3, line: 419, type: !484)
!5027 = !DILocalVariable(name: "loop", arg: 2, scope: !5022, file: !3, line: 419, type: !1023)
!5028 = !DILocalVariable(name: "def_stmt", scope: !5022, file: !3, line: 421, type: !808)
!5029 = !DILocalVariable(name: "def_bb", scope: !5022, file: !3, line: 422, type: !1293)
!5030 = !DILocalVariable(name: "max_loop", scope: !5022, file: !3, line: 423, type: !1023)
!5031 = !DILocalVariable(name: "lim_data", scope: !5022, file: !3, line: 424, type: !1982)
!5032 = !DILocation(line: 0, scope: !5022)
!5033 = !DILocation(line: 426, column: 8, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 426, column: 7)
!5035 = !DILocation(line: 426, column: 7, scope: !5022)
!5036 = !DILocation(line: 427, column: 12, scope: !5034)
!5037 = !DILocation(line: 427, column: 5, scope: !5034)
!5038 = !DILocation(line: 429, column: 7, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 429, column: 7)
!5040 = !DILocation(line: 429, column: 23, scope: !5039)
!5041 = !DILocation(line: 429, column: 7, scope: !5022)
!5042 = !DILocation(line: 431, column: 7, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 430, column: 5)
!5044 = !DILocation(line: 432, column: 14, scope: !5043)
!5045 = !DILocation(line: 432, column: 7, scope: !5043)
!5046 = !DILocation(line: 435, column: 14, scope: !5022)
!5047 = !DILocation(line: 436, column: 12, scope: !5022)
!5048 = !DILocation(line: 437, column: 8, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 437, column: 7)
!5050 = !DILocation(line: 437, column: 7, scope: !5022)
!5051 = !DILocation(line: 438, column: 12, scope: !5049)
!5052 = !DILocation(line: 438, column: 5, scope: !5049)
!5053 = !DILocation(line: 440, column: 46, scope: !5022)
!5054 = !DILocation(line: 440, column: 14, scope: !5022)
!5055 = !DILocation(line: 442, column: 14, scope: !5022)
!5056 = !DILocation(line: 443, column: 16, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 443, column: 7)
!5058 = !DILocation(line: 443, column: 24, scope: !5057)
!5059 = !DILocation(line: 443, column: 37, scope: !5057)
!5060 = !DILocation(line: 443, column: 46, scope: !5057)
!5061 = !DILocation(line: 443, column: 7, scope: !5022)
!5062 = !DILocation(line: 445, column: 6, scope: !5057)
!5063 = !DILocation(line: 444, column: 16, scope: !5057)
!5064 = !DILocation(line: 444, column: 5, scope: !5057)
!5065 = !DILocation(line: 446, column: 16, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 446, column: 7)
!5067 = !DILocation(line: 446, column: 7, scope: !5022)
!5068 = !DILocation(line: 448, column: 40, scope: !5022)
!5069 = !DILocation(line: 448, column: 62, scope: !5022)
!5070 = !DILocation(line: 448, column: 14, scope: !5022)
!5071 = !DILocation(line: 450, column: 3, scope: !5022)
!5072 = !DILocation(line: 451, column: 1, scope: !5022)
!5073 = distinct !DISubprogram(name: "loop_containing_stmt", scope: !5074, file: !5074, line: 617, type: !5075, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5077)
!5074 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5075 = !DISubroutineType(types: !5076)
!5076 = !{!1023, !808}
!5077 = !{!5078, !5079}
!5078 = !DILocalVariable(name: "stmt", arg: 1, scope: !5073, file: !5074, line: 617, type: !808)
!5079 = !DILocalVariable(name: "bb", scope: !5073, file: !5074, line: 619, type: !1293)
!5080 = !DILocation(line: 0, scope: !5073)
!5081 = !DILocation(line: 619, column: 20, scope: !5073)
!5082 = !DILocation(line: 620, column: 8, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5073, file: !5074, line: 620, column: 7)
!5084 = !DILocation(line: 620, column: 7, scope: !5073)
!5085 = !DILocation(line: 623, column: 14, scope: !5073)
!5086 = !DILocation(line: 623, column: 3, scope: !5073)
!5087 = !DILocation(line: 624, column: 1, scope: !5073)
!5088 = distinct !DISubprogram(name: "rewrite_reciprocal", scope: !3, file: !3, line: 762, type: !5089, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5091)
!5089 = !DISubroutineType(types: !5090)
!5090 = !{!808, !3151}
!5091 = !{!5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5105, !5106}
!5092 = !DILocalVariable(name: "bsi", arg: 1, scope: !5088, file: !3, line: 762, type: !3151)
!5093 = !DILocalVariable(name: "stmt", scope: !5088, file: !3, line: 764, type: !808)
!5094 = !DILocalVariable(name: "stmt1", scope: !5088, file: !3, line: 764, type: !808)
!5095 = !DILocalVariable(name: "stmt2", scope: !5088, file: !3, line: 764, type: !808)
!5096 = !DILocalVariable(name: "var", scope: !5088, file: !3, line: 765, type: !484)
!5097 = !DILocalVariable(name: "name", scope: !5088, file: !3, line: 765, type: !484)
!5098 = !DILocalVariable(name: "lhs", scope: !5088, file: !3, line: 765, type: !484)
!5099 = !DILocalVariable(name: "type", scope: !5088, file: !3, line: 765, type: !484)
!5100 = !DILocalVariable(name: "real_one", scope: !5088, file: !3, line: 766, type: !484)
!5101 = !DILocalVariable(name: "gsi", scope: !5088, file: !3, line: 767, type: !2763)
!5102 = !DILocalVariable(name: "i", scope: !5103, file: !3, line: 780, type: !477)
!5103 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 779, column: 5)
!5104 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 778, column: 7)
!5105 = !DILocalVariable(name: "len", scope: !5103, file: !3, line: 780, type: !477)
!5106 = !DILocalVariable(name: "list", scope: !5103, file: !3, line: 781, type: !484)
!5107 = !DILocation(line: 0, scope: !5088)
!5108 = !DILocation(line: 767, column: 3, scope: !5088)
!5109 = !DILocation(line: 769, column: 10, scope: !5088)
!5110 = !DILocation(line: 770, column: 9, scope: !5088)
!5111 = !DILocation(line: 771, column: 10, scope: !5088)
!5112 = !DILocation(line: 773, column: 9, scope: !5088)
!5113 = !DILocation(line: 774, column: 3, scope: !5088)
!5114 = !DILocation(line: 775, column: 3, scope: !5088)
!5115 = !DILocation(line: 775, column: 27, scope: !5088)
!5116 = !DILocation(line: 778, column: 7, scope: !5104)
!5117 = !DILocation(line: 778, column: 24, scope: !5104)
!5118 = !DILocation(line: 778, column: 7, scope: !5088)
!5119 = !DILocation(line: 0, scope: !5103)
!5120 = !DILocation(line: 782, column: 30, scope: !5103)
!5121 = !DILocation(line: 782, column: 18, scope: !5103)
!5122 = !DILocation(line: 783, column: 13, scope: !5103)
!5123 = !DILocation(line: 784, column: 12, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 784, column: 7)
!5125 = !DILocation(line: 0, scope: !5124)
!5126 = !DILocation(line: 784, column: 21, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 784, column: 7)
!5128 = !DILocation(line: 784, column: 7, scope: !5124)
!5129 = !DILocation(line: 785, column: 9, scope: !5127)
!5130 = !DILocation(line: 784, column: 29, scope: !5127)
!5131 = !DILocation(line: 784, column: 7, scope: !5127)
!5132 = distinct !{!5132, !5128, !5133}
!5133 = !DILocation(line: 785, column: 9, scope: !5124)
!5134 = !DILocation(line: 786, column: 18, scope: !5103)
!5135 = !DILocation(line: 787, column: 5, scope: !5103)
!5136 = !DILocation(line: 789, column: 16, scope: !5104)
!5137 = !DILocation(line: 0, scope: !5104)
!5138 = !DILocation(line: 791, column: 11, scope: !5088)
!5139 = !DILocation(line: 793, column: 10, scope: !5088)
!5140 = !DILocation(line: 794, column: 3, scope: !5088)
!5141 = !DILocation(line: 796, column: 11, scope: !5088)
!5142 = !DILocation(line: 802, column: 9, scope: !5088)
!5143 = !DILocation(line: 803, column: 3, scope: !5088)
!5144 = !DILocation(line: 804, column: 3, scope: !5088)
!5145 = !DILocation(line: 808, column: 1, scope: !5088)
!5146 = !DILocation(line: 807, column: 3, scope: !5088)
!5147 = distinct !DISubprogram(name: "has_single_use", scope: !5074, file: !5074, line: 350, type: !5148, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5150)
!5148 = !DISubroutineType(types: !5149)
!5149 = !{!476, !1918}
!5150 = !{!5151, !5152}
!5151 = !DILocalVariable(name: "var", arg: 1, scope: !5147, file: !5074, line: 350, type: !1918)
!5152 = !DILocalVariable(name: "ptr", scope: !5147, file: !5074, line: 352, type: !5153)
!5153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5154)
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 64)
!5155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1997)
!5156 = !DILocation(line: 0, scope: !5147)
!5157 = !DILocation(line: 352, column: 42, scope: !5147)
!5158 = !DILocation(line: 355, column: 19, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5147, file: !5074, line: 355, column: 7)
!5160 = !DILocation(line: 355, column: 11, scope: !5159)
!5161 = !DILocation(line: 355, column: 7, scope: !5147)
!5162 = !DILocation(line: 359, column: 25, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5147, file: !5074, line: 359, column: 7)
!5164 = !DILocation(line: 359, column: 11, scope: !5163)
!5165 = !DILocation(line: 359, column: 7, scope: !5147)
!5166 = !DILocation(line: 360, column: 30, scope: !5163)
!5167 = !DILocation(line: 360, column: 13, scope: !5163)
!5168 = !DILocation(line: 360, column: 12, scope: !5163)
!5169 = !DILocation(line: 360, column: 5, scope: !5163)
!5170 = !DILocation(line: 363, column: 8, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5147, file: !5074, line: 363, column: 7)
!5172 = !DILocation(line: 363, column: 7, scope: !5147)
!5173 = !DILocation(line: 366, column: 10, scope: !5147)
!5174 = !DILocation(line: 366, column: 3, scope: !5147)
!5175 = !DILocation(line: 367, column: 1, scope: !5147)
!5176 = distinct !DISubprogram(name: "rewrite_bittest", scope: !3, file: !3, line: 814, type: !5089, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5177)
!5177 = !{!5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190}
!5178 = !DILocalVariable(name: "bsi", arg: 1, scope: !5176, file: !3, line: 814, type: !3151)
!5179 = !DILocalVariable(name: "stmt", scope: !5176, file: !3, line: 816, type: !808)
!5180 = !DILocalVariable(name: "use_stmt", scope: !5176, file: !3, line: 816, type: !808)
!5181 = !DILocalVariable(name: "stmt1", scope: !5176, file: !3, line: 816, type: !808)
!5182 = !DILocalVariable(name: "stmt2", scope: !5176, file: !3, line: 816, type: !808)
!5183 = !DILocalVariable(name: "lhs", scope: !5176, file: !3, line: 817, type: !484)
!5184 = !DILocalVariable(name: "var", scope: !5176, file: !3, line: 817, type: !484)
!5185 = !DILocalVariable(name: "name", scope: !5176, file: !3, line: 817, type: !484)
!5186 = !DILocalVariable(name: "t", scope: !5176, file: !3, line: 817, type: !484)
!5187 = !DILocalVariable(name: "a", scope: !5176, file: !3, line: 817, type: !484)
!5188 = !DILocalVariable(name: "b", scope: !5176, file: !3, line: 817, type: !484)
!5189 = !DILocalVariable(name: "use", scope: !5176, file: !3, line: 818, type: !1995)
!5190 = !DILocalVariable(name: "rsi", scope: !5191, file: !3, line: 863, type: !2763)
!5191 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 862, column: 5)
!5192 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 860, column: 7)
!5193 = !DILocation(line: 0, scope: !5176)
!5194 = !DILocation(line: 816, column: 3, scope: !5176)
!5195 = !DILocation(line: 818, column: 3, scope: !5176)
!5196 = !DILocation(line: 820, column: 10, scope: !5176)
!5197 = !DILocation(line: 821, column: 9, scope: !5176)
!5198 = !DILocation(line: 824, column: 7, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 824, column: 7)
!5200 = !DILocation(line: 824, column: 23, scope: !5199)
!5201 = !DILocation(line: 825, column: 7, scope: !5199)
!5202 = !DILocation(line: 825, column: 11, scope: !5199)
!5203 = !DILocation(line: 826, column: 7, scope: !5199)
!5204 = !DILocation(line: 826, column: 23, scope: !5199)
!5205 = !DILocation(line: 826, column: 10, scope: !5199)
!5206 = !DILocation(line: 826, column: 33, scope: !5199)
!5207 = !DILocation(line: 824, column: 7, scope: !5176)
!5208 = !DILocation(line: 828, column: 24, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 828, column: 7)
!5210 = !DILocation(line: 828, column: 7, scope: !5209)
!5211 = !DILocation(line: 828, column: 34, scope: !5209)
!5212 = !DILocation(line: 829, column: 7, scope: !5209)
!5213 = !DILocation(line: 829, column: 29, scope: !5209)
!5214 = !DILocation(line: 829, column: 11, scope: !5209)
!5215 = !DILocation(line: 829, column: 39, scope: !5209)
!5216 = !DILocation(line: 830, column: 4, scope: !5209)
!5217 = !DILocation(line: 830, column: 25, scope: !5209)
!5218 = !DILocation(line: 830, column: 7, scope: !5209)
!5219 = !DILocation(line: 830, column: 35, scope: !5209)
!5220 = !DILocation(line: 831, column: 7, scope: !5209)
!5221 = !DILocation(line: 831, column: 43, scope: !5209)
!5222 = !DILocation(line: 831, column: 26, scope: !5209)
!5223 = !DILocation(line: 831, column: 11, scope: !5209)
!5224 = !DILocation(line: 828, column: 7, scope: !5176)
!5225 = !DILocation(line: 835, column: 11, scope: !5176)
!5226 = !DILocation(line: 836, column: 7, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 836, column: 7)
!5228 = !DILocation(line: 836, column: 27, scope: !5227)
!5229 = !DILocation(line: 836, column: 7, scope: !5176)
!5230 = !DILocation(line: 840, column: 7, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 840, column: 7)
!5232 = !DILocation(line: 840, column: 7, scope: !5176)
!5233 = !DILocation(line: 842, column: 11, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 841, column: 5)
!5235 = !DILocation(line: 843, column: 11, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 843, column: 11)
!5237 = !DILocation(line: 843, column: 25, scope: !5236)
!5238 = !DILocation(line: 844, column: 4, scope: !5236)
!5239 = !DILocation(line: 844, column: 8, scope: !5236)
!5240 = !DILocation(line: 843, column: 11, scope: !5234)
!5241 = !DILocation(line: 846, column: 15, scope: !5234)
!5242 = !DILocation(line: 847, column: 11, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 847, column: 11)
!5244 = !DILocation(line: 847, column: 31, scope: !5243)
!5245 = !DILocation(line: 847, column: 11, scope: !5234)
!5246 = !DILocation(line: 853, column: 7, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 853, column: 7)
!5248 = !DILocation(line: 853, column: 38, scope: !5247)
!5249 = !DILocation(line: 854, column: 7, scope: !5247)
!5250 = !DILocation(line: 854, column: 10, scope: !5247)
!5251 = !DILocation(line: 854, column: 42, scope: !5247)
!5252 = !DILocation(line: 854, column: 39, scope: !5247)
!5253 = !DILocation(line: 853, column: 7, scope: !5176)
!5254 = !DILocation(line: 857, column: 7, scope: !5176)
!5255 = !DILocation(line: 858, column: 7, scope: !5176)
!5256 = !DILocation(line: 860, column: 36, scope: !5192)
!5257 = !DILocation(line: 860, column: 7, scope: !5192)
!5258 = !DILocation(line: 860, column: 66, scope: !5192)
!5259 = !DILocation(line: 861, column: 7, scope: !5192)
!5260 = !DILocation(line: 861, column: 39, scope: !5192)
!5261 = !DILocation(line: 861, column: 10, scope: !5192)
!5262 = !DILocation(line: 861, column: 69, scope: !5192)
!5263 = !DILocation(line: 860, column: 7, scope: !5176)
!5264 = !DILocation(line: 863, column: 7, scope: !5191)
!5265 = !DILocation(line: 866, column: 29, scope: !5191)
!5266 = !DILocation(line: 866, column: 13, scope: !5191)
!5267 = !DILocation(line: 867, column: 7, scope: !5191)
!5268 = !DILocation(line: 868, column: 11, scope: !5191)
!5269 = !DILocation(line: 870, column: 15, scope: !5191)
!5270 = !DILocation(line: 871, column: 14, scope: !5191)
!5271 = !DILocation(line: 872, column: 7, scope: !5191)
!5272 = !DILocation(line: 875, column: 11, scope: !5191)
!5273 = !DILocation(line: 876, column: 15, scope: !5191)
!5274 = !DILocation(line: 877, column: 14, scope: !5191)
!5275 = !DILocation(line: 878, column: 7, scope: !5191)
!5276 = !DILocation(line: 882, column: 7, scope: !5191)
!5277 = !DILocation(line: 883, column: 28, scope: !5191)
!5278 = !DILocation(line: 883, column: 58, scope: !5191)
!5279 = !DILocation(line: 883, column: 38, scope: !5191)
!5280 = !DILocation(line: 883, column: 7, scope: !5191)
!5281 = !DILocation(line: 889, column: 13, scope: !5191)
!5282 = !DILocation(line: 890, column: 7, scope: !5191)
!5283 = !DILocation(line: 0, scope: !5191)
!5284 = !DILocation(line: 891, column: 7, scope: !5191)
!5285 = !DILocation(line: 892, column: 7, scope: !5191)
!5286 = !DILocation(line: 895, column: 5, scope: !5192)
!5287 = !DILocation(line: 898, column: 1, scope: !5176)
!5288 = distinct !DISubprogram(name: "determine_max_movement", scope: !3, file: !3, line: 665, type: !5289, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5291)
!5289 = !DISubroutineType(types: !5290)
!5290 = !{!476, !808, !476}
!5291 = !{!5292, !5293, !5294, !5295, !5296, !5297, !5298, !5299, !5312}
!5292 = !DILocalVariable(name: "stmt", arg: 1, scope: !5288, file: !3, line: 665, type: !808)
!5293 = !DILocalVariable(name: "must_preserve_exec", arg: 2, scope: !5288, file: !3, line: 665, type: !476)
!5294 = !DILocalVariable(name: "bb", scope: !5288, file: !3, line: 667, type: !1293)
!5295 = !DILocalVariable(name: "loop", scope: !5288, file: !3, line: 668, type: !1023)
!5296 = !DILocalVariable(name: "level", scope: !5288, file: !3, line: 669, type: !1023)
!5297 = !DILocalVariable(name: "lim_data", scope: !5288, file: !3, line: 670, type: !1982)
!5298 = !DILocalVariable(name: "val", scope: !5288, file: !3, line: 671, type: !484)
!5299 = !DILocalVariable(name: "iter", scope: !5288, file: !3, line: 672, type: !5300)
!5300 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !468, line: 140, baseType: !5301)
!5301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !468, line: 131, size: 320, elements: !5302)
!5302 = !{!5303, !5304, !5305, !5307, !5309, !5310, !5311}
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5301, file: !468, line: 133, baseType: !476, size: 8)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !5301, file: !468, line: 134, baseType: !467, size: 32, offset: 32)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !5301, file: !468, line: 135, baseType: !5306, size: 64, offset: 64)
!5306 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !468, line: 42, baseType: !837)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !5301, file: !468, line: 136, baseType: !5308, size: 64, offset: 128)
!5308 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !468, line: 50, baseType: !844)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !5301, file: !468, line: 137, baseType: !477, size: 32, offset: 192)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !5301, file: !468, line: 138, baseType: !477, size: 32, offset: 224)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !5301, file: !468, line: 139, baseType: !808, size: 64, offset: 256)
!5312 = !DILocalVariable(name: "ref", scope: !5313, file: !3, line: 686, type: !1956)
!5313 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 685, column: 5)
!5314 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 684, column: 7)
!5315 = !DILocation(line: 0, scope: !5288)
!5316 = !DILocation(line: 667, column: 20, scope: !5288)
!5317 = !DILocation(line: 668, column: 27, scope: !5288)
!5318 = !DILocation(line: 670, column: 35, scope: !5288)
!5319 = !DILocation(line: 672, column: 3, scope: !5288)
!5320 = !DILocation(line: 674, column: 7, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 674, column: 7)
!5322 = !DILocation(line: 674, column: 7, scope: !5288)
!5323 = !DILocation(line: 675, column: 13, scope: !5321)
!5324 = !DILocation(line: 675, column: 5, scope: !5321)
!5325 = !DILocation(line: 677, column: 13, scope: !5321)
!5326 = !DILocation(line: 0, scope: !5321)
!5327 = !DILocation(line: 678, column: 13, scope: !5288)
!5328 = !DILocation(line: 678, column: 22, scope: !5288)
!5329 = !DILocation(line: 680, column: 3, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 680, column: 3)
!5331 = !DILocation(line: 0, scope: !5330)
!5332 = !DILocation(line: 680, column: 3, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 680, column: 3)
!5334 = !DILocation(line: 681, column: 10, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 681, column: 9)
!5336 = !DILocation(line: 681, column: 9, scope: !5333)
!5337 = distinct !{!5337, !5329, !5338}
!5338 = !DILocation(line: 682, column: 14, scope: !5330)
!5339 = !DILocation(line: 684, column: 7, scope: !5314)
!5340 = !DILocation(line: 684, column: 7, scope: !5288)
!5341 = !DILocation(line: 686, column: 23, scope: !5313)
!5342 = !DILocation(line: 0, scope: !5313)
!5343 = !DILocation(line: 688, column: 11, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 688, column: 11)
!5345 = !DILocation(line: 688, column: 11, scope: !5313)
!5346 = !DILocation(line: 691, column: 39, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 689, column: 2)
!5348 = !DILocation(line: 691, column: 7, scope: !5347)
!5349 = !DILocation(line: 691, column: 5, scope: !5347)
!5350 = !DILocation(line: 692, column: 9, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 692, column: 8)
!5352 = !DILocation(line: 692, column: 8, scope: !5347)
!5353 = !DILocation(line: 697, column: 15, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 697, column: 8)
!5355 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 696, column: 2)
!5356 = !DILocation(line: 697, column: 35, scope: !5354)
!5357 = !DILocation(line: 697, column: 8, scope: !5355)
!5358 = !DILocation(line: 699, column: 13, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 699, column: 12)
!5360 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 698, column: 6)
!5361 = !DILocation(line: 699, column: 12, scope: !5360)
!5362 = !DILocation(line: 703, column: 5, scope: !5314)
!5363 = !DILocation(line: 705, column: 21, scope: !5288)
!5364 = !DILocation(line: 705, column: 13, scope: !5288)
!5365 = !DILocation(line: 705, column: 18, scope: !5288)
!5366 = !DILocation(line: 707, column: 3, scope: !5288)
!5367 = !DILocation(line: 708, column: 1, scope: !5288)
!5368 = distinct !DISubprogram(name: "set_profitable_level", scope: !3, file: !3, line: 743, type: !5369, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5371)
!5369 = !DISubroutineType(types: !5370)
!5370 = !{null, !808}
!5371 = !{!5372}
!5372 = !DILocalVariable(name: "stmt", arg: 1, scope: !5368, file: !3, line: 743, type: !808)
!5373 = !DILocation(line: 0, scope: !5368)
!5374 = !DILocation(line: 745, column: 20, scope: !5368)
!5375 = !DILocation(line: 745, column: 38, scope: !5368)
!5376 = !DILocation(line: 745, column: 51, scope: !5368)
!5377 = !DILocation(line: 745, column: 72, scope: !5368)
!5378 = !DILocation(line: 745, column: 3, scope: !5368)
!5379 = !DILocation(line: 746, column: 1, scope: !5368)
!5380 = distinct !DISubprogram(name: "gimple_num_ops", scope: !397, file: !397, line: 1596, type: !5381, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5383)
!5381 = !DISubroutineType(types: !5382)
!5382 = !{!7, !2591}
!5383 = !{!5384}
!5384 = !DILocalVariable(name: "gs", arg: 1, scope: !5380, file: !397, line: 1596, type: !2591)
!5385 = !DILocation(line: 0, scope: !5380)
!5386 = !DILocation(line: 1598, column: 21, scope: !5380)
!5387 = !DILocation(line: 1598, column: 3, scope: !5380)
!5388 = distinct !DISubprogram(name: "gimple_bb", scope: !397, file: !397, line: 1112, type: !5389, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5391)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{!772, !2591}
!5391 = !{!5392}
!5392 = !DILocalVariable(name: "g", arg: 1, scope: !5388, file: !397, line: 1112, type: !2591)
!5393 = !DILocation(line: 0, scope: !5388)
!5394 = !DILocation(line: 1114, column: 20, scope: !5388)
!5395 = !DILocation(line: 1114, column: 3, scope: !5388)
!5396 = distinct !DISubprogram(name: "get_lim_data", scope: !3, file: !3, line: 216, type: !4997, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5397)
!5397 = !{!5398, !5399}
!5398 = !DILocalVariable(name: "stmt", arg: 1, scope: !5396, file: !3, line: 216, type: !808)
!5399 = !DILocalVariable(name: "p", scope: !5396, file: !3, line: 218, type: !1347)
!5400 = !DILocation(line: 0, scope: !5396)
!5401 = !DILocation(line: 218, column: 36, scope: !5396)
!5402 = !DILocation(line: 218, column: 54, scope: !5396)
!5403 = !DILocation(line: 218, column: 14, scope: !5396)
!5404 = !DILocation(line: 219, column: 8, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 219, column: 7)
!5406 = !DILocation(line: 219, column: 7, scope: !5396)
!5407 = !DILocation(line: 222, column: 34, scope: !5396)
!5408 = !DILocation(line: 222, column: 3, scope: !5396)
!5409 = !DILocation(line: 223, column: 1, scope: !5396)
!5410 = distinct !DISubprogram(name: "make_ssa_name", scope: !5074, file: !5074, line: 1245, type: !5411, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5413)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{!484, !484, !808}
!5413 = !{!5414, !5415}
!5414 = !DILocalVariable(name: "var", arg: 1, scope: !5410, file: !5074, line: 1245, type: !484)
!5415 = !DILocalVariable(name: "stmt", arg: 2, scope: !5410, file: !5074, line: 1245, type: !808)
!5416 = !DILocation(line: 0, scope: !5410)
!5417 = !DILocation(line: 1247, column: 28, scope: !5410)
!5418 = !DILocation(line: 1247, column: 10, scope: !5410)
!5419 = !DILocation(line: 1247, column: 3, scope: !5410)
!5420 = distinct !DISubprogram(name: "gimple_assign_set_lhs", scope: !397, file: !397, line: 1714, type: !5421, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5423)
!5421 = !DISubroutineType(types: !5422)
!5422 = !{null, !808, !484}
!5423 = !{!5424, !5425}
!5424 = !DILocalVariable(name: "gs", arg: 1, scope: !5420, file: !397, line: 1714, type: !808)
!5425 = !DILocalVariable(name: "lhs", arg: 2, scope: !5420, file: !397, line: 1714, type: !484)
!5426 = !DILocation(line: 0, scope: !5420)
!5427 = !DILocation(line: 1717, column: 3, scope: !5420)
!5428 = !DILocation(line: 1719, column: 7, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5420, file: !397, line: 1719, column: 7)
!5430 = !DILocation(line: 1719, column: 11, scope: !5429)
!5431 = !DILocation(line: 1719, column: 14, scope: !5429)
!5432 = !DILocation(line: 1719, column: 30, scope: !5429)
!5433 = !DILocation(line: 1719, column: 7, scope: !5420)
!5434 = !DILocation(line: 1720, column: 5, scope: !5429)
!5435 = !DILocation(line: 1720, column: 29, scope: !5429)
!5436 = !DILocation(line: 1721, column: 1, scope: !5420)
!5437 = distinct !DISubprogram(name: "gimple_set_op", scope: !397, file: !397, line: 1663, type: !5438, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5440)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{null, !808, !7, !484}
!5440 = !{!5441, !5442, !5443}
!5441 = !DILocalVariable(name: "gs", arg: 1, scope: !5437, file: !397, line: 1663, type: !808)
!5442 = !DILocalVariable(name: "i", arg: 2, scope: !5437, file: !397, line: 1663, type: !7)
!5443 = !DILocalVariable(name: "op", arg: 3, scope: !5437, file: !397, line: 1663, type: !484)
!5444 = !DILocation(line: 0, scope: !5437)
!5445 = !DILocation(line: 1665, column: 3, scope: !5437)
!5446 = !DILocation(line: 1671, column: 3, scope: !5437)
!5447 = !DILocation(line: 1671, column: 22, scope: !5437)
!5448 = !DILocation(line: 1672, column: 1, scope: !5437)
!5449 = distinct !DISubprogram(name: "is_gimple_debug", scope: !397, file: !397, line: 3249, type: !2610, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5450)
!5450 = !{!5451}
!5451 = !DILocalVariable(name: "gs", arg: 1, scope: !5449, file: !397, line: 3249, type: !2591)
!5452 = !DILocation(line: 0, scope: !5449)
!5453 = !DILocation(line: 3251, column: 10, scope: !5449)
!5454 = !DILocation(line: 3251, column: 27, scope: !5449)
!5455 = !DILocation(line: 3251, column: 3, scope: !5449)
!5456 = distinct !DISubprogram(name: "single_imm_use", scope: !5074, file: !5074, line: 373, type: !5457, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5461)
!5457 = !DISubroutineType(types: !5458)
!5458 = !{!476, !1918, !5459, !5460}
!5459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!5461 = !{!5462, !5463, !5464, !5465, !5466}
!5462 = !DILocalVariable(name: "var", arg: 1, scope: !5456, file: !5074, line: 373, type: !1918)
!5463 = !DILocalVariable(name: "use_p", arg: 2, scope: !5456, file: !5074, line: 373, type: !5459)
!5464 = !DILocalVariable(name: "stmt", arg: 3, scope: !5456, file: !5074, line: 373, type: !5460)
!5465 = !DILocalVariable(name: "ptr", scope: !5456, file: !5074, line: 375, type: !5153)
!5466 = !DILabel(scope: !5467, name: "return_false", file: !5074, line: 380)
!5467 = distinct !DILexicalBlock(scope: !5468, file: !5074, line: 379, column: 5)
!5468 = distinct !DILexicalBlock(scope: !5456, file: !5074, line: 378, column: 7)
!5469 = !DILocation(line: 0, scope: !5456)
!5470 = !DILocation(line: 375, column: 42, scope: !5456)
!5471 = !DILocation(line: 378, column: 19, scope: !5468)
!5472 = !DILocation(line: 378, column: 11, scope: !5468)
!5473 = !DILocation(line: 378, column: 7, scope: !5456)
!5474 = !DILocation(line: 380, column: 5, scope: !5467)
!5475 = !DILocation(line: 381, column: 14, scope: !5467)
!5476 = !DILocation(line: 382, column: 13, scope: !5467)
!5477 = !DILocation(line: 383, column: 7, scope: !5467)
!5478 = !DILocation(line: 387, column: 25, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5456, file: !5074, line: 387, column: 7)
!5480 = !DILocation(line: 387, column: 11, scope: !5479)
!5481 = !DILocation(line: 387, column: 7, scope: !5456)
!5482 = !DILocation(line: 389, column: 29, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5484, file: !5074, line: 389, column: 11)
!5484 = distinct !DILexicalBlock(scope: !5479, file: !5074, line: 388, column: 5)
!5485 = !DILocation(line: 389, column: 12, scope: !5483)
!5486 = !DILocation(line: 389, column: 11, scope: !5484)
!5487 = !DILocation(line: 391, column: 18, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !5074, line: 390, column: 2)
!5489 = !DILocation(line: 391, column: 11, scope: !5488)
!5490 = !DILocation(line: 392, column: 17, scope: !5488)
!5491 = !DILocation(line: 392, column: 27, scope: !5488)
!5492 = !DILocation(line: 392, column: 10, scope: !5488)
!5493 = !DILocation(line: 393, column: 4, scope: !5488)
!5494 = !DILocation(line: 400, column: 8, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5456, file: !5074, line: 400, column: 7)
!5496 = !DILocation(line: 400, column: 7, scope: !5456)
!5497 = !DILocation(line: 403, column: 10, scope: !5456)
!5498 = !DILocation(line: 403, column: 3, scope: !5456)
!5499 = !DILocation(line: 404, column: 1, scope: !5456)
!5500 = distinct !DISubprogram(name: "gimple_cond_lhs", scope: !397, file: !397, line: 2241, type: !2598, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5501)
!5501 = !{!5502}
!5502 = !DILocalVariable(name: "gs", arg: 1, scope: !5500, file: !397, line: 2241, type: !2591)
!5503 = !DILocation(line: 0, scope: !5500)
!5504 = !DILocation(line: 2244, column: 10, scope: !5500)
!5505 = !DILocation(line: 2244, column: 3, scope: !5500)
!5506 = distinct !DISubprogram(name: "gimple_cond_code", scope: !397, file: !397, line: 2221, type: !4164, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5507)
!5507 = !{!5508}
!5508 = !DILocalVariable(name: "gs", arg: 1, scope: !5506, file: !397, line: 2221, type: !2591)
!5509 = !DILocation(line: 0, scope: !5506)
!5510 = !DILocation(line: 2224, column: 38, scope: !5506)
!5511 = !DILocation(line: 2224, column: 3, scope: !5506)
!5512 = distinct !DISubprogram(name: "gimple_cond_rhs", scope: !397, file: !397, line: 2271, type: !2598, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5513)
!5513 = !{!5514}
!5514 = !DILocalVariable(name: "gs", arg: 1, scope: !5512, file: !397, line: 2271, type: !2591)
!5515 = !DILocation(line: 0, scope: !5512)
!5516 = !DILocation(line: 2274, column: 10, scope: !5512)
!5517 = !DILocation(line: 2274, column: 3, scope: !5512)
!5518 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !5074, file: !5074, line: 233, type: !5519, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5521)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{null, !1995, !484}
!5521 = !{!5522, !5523}
!5522 = !DILocalVariable(name: "use", arg: 1, scope: !5518, file: !5074, line: 233, type: !1995)
!5523 = !DILocalVariable(name: "val", arg: 2, scope: !5518, file: !5074, line: 233, type: !484)
!5524 = !DILocation(line: 0, scope: !5518)
!5525 = !DILocation(line: 235, column: 3, scope: !5518)
!5526 = !DILocation(line: 236, column: 10, scope: !5518)
!5527 = !DILocation(line: 236, column: 15, scope: !5518)
!5528 = !DILocation(line: 237, column: 3, scope: !5518)
!5529 = !DILocation(line: 238, column: 1, scope: !5518)
!5530 = distinct !DISubprogram(name: "gimple_cond_set_rhs", scope: !397, file: !397, line: 2292, type: !5421, scopeLine: 2293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5531)
!5531 = !{!5532, !5533}
!5532 = !DILocalVariable(name: "gs", arg: 1, scope: !5530, file: !397, line: 2292, type: !808)
!5533 = !DILocalVariable(name: "rhs", arg: 2, scope: !5530, file: !397, line: 2292, type: !484)
!5534 = !DILocation(line: 0, scope: !5530)
!5535 = !DILocation(line: 2295, column: 3, scope: !5530)
!5536 = !DILocation(line: 2296, column: 1, scope: !5530)
!5537 = distinct !DISubprogram(name: "delink_imm_use", scope: !5074, file: !5074, line: 188, type: !5538, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5540)
!5538 = !DISubroutineType(types: !5539)
!5539 = !{null, !1996}
!5540 = !{!5541}
!5541 = !DILocalVariable(name: "linknode", arg: 1, scope: !5537, file: !5074, line: 188, type: !1996)
!5542 = !DILocation(line: 0, scope: !5537)
!5543 = !DILocation(line: 191, column: 17, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5537, file: !5074, line: 191, column: 7)
!5545 = !DILocation(line: 191, column: 22, scope: !5544)
!5546 = !DILocation(line: 191, column: 7, scope: !5537)
!5547 = !DILocation(line: 194, column: 36, scope: !5537)
!5548 = !DILocation(line: 194, column: 19, scope: !5537)
!5549 = !DILocation(line: 194, column: 24, scope: !5537)
!5550 = !DILocation(line: 195, column: 36, scope: !5537)
!5551 = !DILocation(line: 195, column: 13, scope: !5537)
!5552 = !DILocation(line: 195, column: 24, scope: !5537)
!5553 = !DILocation(line: 196, column: 18, scope: !5537)
!5554 = !DILocation(line: 197, column: 18, scope: !5537)
!5555 = !DILocation(line: 198, column: 1, scope: !5537)
!5556 = distinct !DISubprogram(name: "link_imm_use", scope: !5074, file: !5074, line: 214, type: !5557, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5559)
!5557 = !DISubroutineType(types: !5558)
!5558 = !{null, !1996, !484}
!5559 = !{!5560, !5561, !5562}
!5560 = !DILocalVariable(name: "linknode", arg: 1, scope: !5556, file: !5074, line: 214, type: !1996)
!5561 = !DILocalVariable(name: "def", arg: 2, scope: !5556, file: !5074, line: 214, type: !484)
!5562 = !DILocalVariable(name: "root", scope: !5556, file: !5074, line: 216, type: !1996)
!5563 = !DILocation(line: 0, scope: !5556)
!5564 = !DILocation(line: 218, column: 8, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5556, file: !5074, line: 218, column: 7)
!5566 = !DILocation(line: 218, column: 12, scope: !5565)
!5567 = !DILocation(line: 218, column: 15, scope: !5565)
!5568 = !DILocation(line: 218, column: 31, scope: !5565)
!5569 = !DILocation(line: 218, column: 7, scope: !5556)
!5570 = !DILocation(line: 219, column: 15, scope: !5565)
!5571 = !DILocation(line: 219, column: 20, scope: !5565)
!5572 = !DILocation(line: 219, column: 5, scope: !5565)
!5573 = !DILocation(line: 222, column: 16, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5565, file: !5074, line: 221, column: 5)
!5575 = !DILocation(line: 227, column: 7, scope: !5574)
!5576 = !DILocation(line: 229, column: 1, scope: !5556)
!5577 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !5074, file: !5074, line: 202, type: !5578, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5580)
!5578 = !DISubroutineType(types: !5579)
!5579 = !{null, !1996, !1996}
!5580 = !{!5581, !5582}
!5581 = !DILocalVariable(name: "linknode", arg: 1, scope: !5577, file: !5074, line: 202, type: !1996)
!5582 = !DILocalVariable(name: "list", arg: 2, scope: !5577, file: !5074, line: 202, type: !1996)
!5583 = !DILocation(line: 0, scope: !5577)
!5584 = !DILocation(line: 206, column: 13, scope: !5577)
!5585 = !DILocation(line: 206, column: 18, scope: !5577)
!5586 = !DILocation(line: 207, column: 26, scope: !5577)
!5587 = !DILocation(line: 207, column: 13, scope: !5577)
!5588 = !DILocation(line: 207, column: 18, scope: !5577)
!5589 = !DILocation(line: 208, column: 9, scope: !5577)
!5590 = !DILocation(line: 208, column: 15, scope: !5577)
!5591 = !DILocation(line: 208, column: 20, scope: !5577)
!5592 = !DILocation(line: 209, column: 14, scope: !5577)
!5593 = !DILocation(line: 210, column: 1, scope: !5577)
!5594 = distinct !DISubprogram(name: "op_iter_init_tree", scope: !5074, file: !5074, line: 792, type: !5595, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5598)
!5595 = !DISubroutineType(types: !5596)
!5596 = !{!484, !5597, !808, !477}
!5597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5300, size: 64)
!5598 = !{!5599, !5600, !5601}
!5599 = !DILocalVariable(name: "ptr", arg: 1, scope: !5594, file: !5074, line: 792, type: !5597)
!5600 = !DILocalVariable(name: "stmt", arg: 2, scope: !5594, file: !5074, line: 792, type: !808)
!5601 = !DILocalVariable(name: "flags", arg: 3, scope: !5594, file: !5074, line: 792, type: !477)
!5602 = !DILocation(line: 0, scope: !5594)
!5603 = !DILocation(line: 794, column: 3, scope: !5594)
!5604 = !DILocation(line: 795, column: 8, scope: !5594)
!5605 = !DILocation(line: 795, column: 18, scope: !5594)
!5606 = !DILocation(line: 796, column: 10, scope: !5594)
!5607 = !DILocation(line: 796, column: 3, scope: !5594)
!5608 = distinct !DISubprogram(name: "op_iter_done", scope: !5074, file: !5074, line: 652, type: !5609, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5613)
!5609 = !DISubroutineType(types: !5610)
!5610 = !{!476, !5611}
!5611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5612, size: 64)
!5612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5300)
!5613 = !{!5614}
!5614 = !DILocalVariable(name: "ptr", arg: 1, scope: !5608, file: !5074, line: 652, type: !5611)
!5615 = !DILocation(line: 0, scope: !5608)
!5616 = !DILocation(line: 654, column: 15, scope: !5608)
!5617 = !DILocation(line: 654, column: 3, scope: !5608)
!5618 = distinct !DISubprogram(name: "add_dependency", scope: !3, file: !3, line: 466, type: !5619, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5621)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{!476, !484, !1982, !1023, !476}
!5621 = !{!5622, !5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630}
!5622 = !DILocalVariable(name: "def", arg: 1, scope: !5618, file: !3, line: 466, type: !484)
!5623 = !DILocalVariable(name: "data", arg: 2, scope: !5618, file: !3, line: 466, type: !1982)
!5624 = !DILocalVariable(name: "loop", arg: 3, scope: !5618, file: !3, line: 466, type: !1023)
!5625 = !DILocalVariable(name: "add_cost", arg: 4, scope: !5618, file: !3, line: 467, type: !476)
!5626 = !DILocalVariable(name: "def_stmt", scope: !5618, file: !3, line: 469, type: !808)
!5627 = !DILocalVariable(name: "def_bb", scope: !5618, file: !3, line: 470, type: !1293)
!5628 = !DILocalVariable(name: "max_loop", scope: !5618, file: !3, line: 471, type: !1023)
!5629 = !DILocalVariable(name: "dep", scope: !5618, file: !3, line: 472, type: !1990)
!5630 = !DILocalVariable(name: "def_data", scope: !5618, file: !3, line: 473, type: !1982)
!5631 = !DILocation(line: 0, scope: !5618)
!5632 = !DILocation(line: 469, column: 21, scope: !5618)
!5633 = !DILocation(line: 470, column: 24, scope: !5618)
!5634 = !DILocation(line: 475, column: 8, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 475, column: 7)
!5636 = !DILocation(line: 475, column: 7, scope: !5618)
!5637 = !DILocation(line: 478, column: 14, scope: !5618)
!5638 = !DILocation(line: 479, column: 8, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 479, column: 7)
!5640 = !DILocation(line: 479, column: 7, scope: !5618)
!5641 = !DILocation(line: 482, column: 33, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 482, column: 7)
!5643 = !DILocation(line: 482, column: 7, scope: !5642)
!5644 = !DILocation(line: 482, column: 7, scope: !5618)
!5645 = !DILocation(line: 483, column: 20, scope: !5642)
!5646 = !DILocation(line: 483, column: 5, scope: !5642)
!5647 = !DILocation(line: 485, column: 14, scope: !5618)
!5648 = !DILocation(line: 486, column: 8, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 486, column: 7)
!5650 = !DILocation(line: 486, column: 7, scope: !5618)
!5651 = !DILocation(line: 489, column: 7, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 489, column: 7)
!5653 = !DILocation(line: 494, column: 7, scope: !5652)
!5654 = !DILocation(line: 494, column: 18, scope: !5652)
!5655 = !DILocation(line: 494, column: 30, scope: !5652)
!5656 = !DILocation(line: 489, column: 7, scope: !5618)
!5657 = !DILocation(line: 495, column: 29, scope: !5652)
!5658 = !DILocation(line: 495, column: 11, scope: !5652)
!5659 = !DILocation(line: 495, column: 16, scope: !5652)
!5660 = !DILocation(line: 495, column: 5, scope: !5652)
!5661 = !DILocation(line: 497, column: 9, scope: !5618)
!5662 = !DILocation(line: 498, column: 8, scope: !5618)
!5663 = !DILocation(line: 498, column: 13, scope: !5618)
!5664 = !DILocation(line: 499, column: 21, scope: !5618)
!5665 = !DILocation(line: 499, column: 8, scope: !5618)
!5666 = !DILocation(line: 499, column: 13, scope: !5618)
!5667 = !DILocation(line: 500, column: 17, scope: !5618)
!5668 = !DILocation(line: 502, column: 3, scope: !5618)
!5669 = !DILocation(line: 503, column: 1, scope: !5618)
!5670 = distinct !DISubprogram(name: "op_iter_next_tree", scope: !5074, file: !5074, line: 699, type: !5671, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5673)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{!484, !5597}
!5673 = !{!5674, !5675}
!5674 = !DILocalVariable(name: "ptr", arg: 1, scope: !5670, file: !5074, line: 699, type: !5597)
!5675 = !DILocalVariable(name: "val", scope: !5670, file: !5074, line: 701, type: !484)
!5676 = !DILocation(line: 0, scope: !5670)
!5677 = !DILocation(line: 705, column: 12, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5670, file: !5074, line: 705, column: 7)
!5679 = !DILocation(line: 705, column: 7, scope: !5678)
!5680 = !DILocation(line: 705, column: 7, scope: !5670)
!5681 = !DILocation(line: 707, column: 13, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5678, file: !5074, line: 706, column: 5)
!5683 = !DILocation(line: 708, column: 24, scope: !5682)
!5684 = !DILocation(line: 708, column: 30, scope: !5682)
!5685 = !DILocation(line: 708, column: 17, scope: !5682)
!5686 = !DILocation(line: 709, column: 7, scope: !5682)
!5687 = !DILocation(line: 711, column: 12, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5670, file: !5074, line: 711, column: 7)
!5689 = !DILocation(line: 711, column: 7, scope: !5688)
!5690 = !DILocation(line: 711, column: 7, scope: !5670)
!5691 = !DILocation(line: 713, column: 13, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5688, file: !5074, line: 712, column: 5)
!5693 = !DILocation(line: 714, column: 24, scope: !5692)
!5694 = !DILocation(line: 714, column: 30, scope: !5692)
!5695 = !DILocation(line: 714, column: 17, scope: !5692)
!5696 = !DILocation(line: 715, column: 7, scope: !5692)
!5697 = !DILocation(line: 718, column: 8, scope: !5670)
!5698 = !DILocation(line: 718, column: 13, scope: !5670)
!5699 = !DILocation(line: 719, column: 3, scope: !5670)
!5700 = !DILocation(line: 721, column: 1, scope: !5670)
!5701 = distinct !DISubprogram(name: "mem_ref_in_stmt", scope: !3, file: !3, line: 636, type: !5702, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5704)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{!1956, !808}
!5704 = !{!5705, !5706, !5707, !5708, !5709}
!5705 = !DILocalVariable(name: "stmt", arg: 1, scope: !5701, file: !3, line: 636, type: !808)
!5706 = !DILocalVariable(name: "store", scope: !5701, file: !3, line: 638, type: !476)
!5707 = !DILocalVariable(name: "mem", scope: !5701, file: !3, line: 639, type: !842)
!5708 = !DILocalVariable(name: "hash", scope: !5701, file: !3, line: 640, type: !1335)
!5709 = !DILocalVariable(name: "ref", scope: !5701, file: !3, line: 641, type: !1956)
!5710 = !DILocation(line: 0, scope: !5701)
!5711 = !DILocation(line: 638, column: 3, scope: !5701)
!5712 = !DILocation(line: 639, column: 15, scope: !5701)
!5713 = !DILocation(line: 643, column: 8, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 643, column: 7)
!5715 = !DILocation(line: 643, column: 7, scope: !5701)
!5716 = !DILocation(line: 645, column: 3, scope: !5701)
!5717 = !DILocation(line: 647, column: 31, scope: !5701)
!5718 = !DILocation(line: 647, column: 10, scope: !5701)
!5719 = !DILocation(line: 648, column: 58, scope: !5701)
!5720 = !DILocation(line: 648, column: 64, scope: !5701)
!5721 = !DILocation(line: 648, column: 21, scope: !5701)
!5722 = !DILocation(line: 648, column: 9, scope: !5701)
!5723 = !DILocation(line: 650, column: 3, scope: !5701)
!5724 = !DILocation(line: 652, column: 1, scope: !5701)
!5725 = distinct !DISubprogram(name: "outermost_indep_loop", scope: !3, file: !3, line: 575, type: !5726, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5728)
!5726 = !DISubroutineType(types: !5727)
!5727 = !{!1023, !1023, !1023, !1956}
!5728 = !{!5729, !5730, !5731, !5732}
!5729 = !DILocalVariable(name: "outer", arg: 1, scope: !5725, file: !3, line: 575, type: !1023)
!5730 = !DILocalVariable(name: "loop", arg: 2, scope: !5725, file: !3, line: 575, type: !1023)
!5731 = !DILocalVariable(name: "ref", arg: 3, scope: !5725, file: !3, line: 575, type: !1956)
!5732 = !DILocalVariable(name: "aloop", scope: !5725, file: !3, line: 577, type: !1023)
!5733 = !DILocation(line: 0, scope: !5725)
!5734 = !DILocation(line: 579, column: 26, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 579, column: 7)
!5736 = !DILocation(line: 579, column: 40, scope: !5735)
!5737 = !DILocation(line: 579, column: 7, scope: !5735)
!5738 = !DILocation(line: 579, column: 7, scope: !5725)
!5739 = !DILocation(line: 582, column: 3, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 582, column: 3)
!5741 = !DILocation(line: 0, scope: !5740)
!5742 = !DILocation(line: 583, column: 14, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 582, column: 3)
!5744 = !DILocation(line: 585, column: 29, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 585, column: 9)
!5746 = !DILocation(line: 585, column: 44, scope: !5745)
!5747 = !DILocation(line: 585, column: 10, scope: !5745)
!5748 = !DILocation(line: 586, column: 2, scope: !5745)
!5749 = !DILocation(line: 586, column: 5, scope: !5745)
!5750 = !DILocation(line: 585, column: 9, scope: !5743)
!5751 = !DILocation(line: 584, column: 42, scope: !5743)
!5752 = !DILocation(line: 584, column: 61, scope: !5743)
!5753 = !DILocation(line: 584, column: 16, scope: !5743)
!5754 = !DILocation(line: 582, column: 3, scope: !5743)
!5755 = distinct !{!5755, !5739, !5756}
!5756 = !DILocation(line: 587, column: 14, scope: !5740)
!5757 = !DILocation(line: 589, column: 7, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 589, column: 7)
!5759 = !DILocation(line: 0, scope: !5758)
!5760 = !DILocation(line: 593, column: 1, scope: !5725)
!5761 = distinct !DISubprogram(name: "stmt_cost", scope: !3, file: !3, line: 510, type: !5762, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5764)
!5762 = !DISubroutineType(types: !5763)
!5763 = !{!7, !808}
!5764 = !{!5765, !5766, !5767}
!5765 = !DILocalVariable(name: "stmt", arg: 1, scope: !5761, file: !3, line: 510, type: !808)
!5766 = !DILocalVariable(name: "fndecl", scope: !5761, file: !3, line: 512, type: !484)
!5767 = !DILocalVariable(name: "cost", scope: !5761, file: !3, line: 513, type: !7)
!5768 = !DILocation(line: 0, scope: !5761)
!5769 = !DILocation(line: 516, column: 7, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 516, column: 7)
!5771 = !DILocation(line: 516, column: 26, scope: !5770)
!5772 = !DILocation(line: 516, column: 7, scope: !5761)
!5773 = !DILocation(line: 517, column: 12, scope: !5770)
!5774 = !DILocation(line: 517, column: 5, scope: !5770)
!5775 = !DILocation(line: 520, column: 7, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 520, column: 7)
!5777 = !DILocation(line: 520, column: 7, scope: !5761)
!5778 = !DILocation(line: 523, column: 7, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 523, column: 7)
!5780 = !DILocation(line: 523, column: 7, scope: !5761)
!5781 = !DILocation(line: 529, column: 16, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 524, column: 5)
!5783 = !DILocation(line: 530, column: 11, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 530, column: 11)
!5785 = !DILocation(line: 531, column: 4, scope: !5784)
!5786 = !DILocation(line: 531, column: 7, scope: !5784)
!5787 = !DILocation(line: 531, column: 36, scope: !5784)
!5788 = !DILocation(line: 532, column: 4, scope: !5784)
!5789 = !DILocation(line: 532, column: 7, scope: !5784)
!5790 = !DILocation(line: 532, column: 35, scope: !5784)
!5791 = !DILocation(line: 530, column: 11, scope: !5782)
!5792 = !DILocation(line: 535, column: 19, scope: !5782)
!5793 = !DILocation(line: 535, column: 7, scope: !5782)
!5794 = !DILocation(line: 538, column: 7, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 538, column: 7)
!5796 = !DILocation(line: 538, column: 26, scope: !5795)
!5797 = !DILocation(line: 538, column: 7, scope: !5761)
!5798 = !DILocation(line: 541, column: 11, scope: !5761)
!5799 = !DILocation(line: 541, column: 3, scope: !5761)
!5800 = !DILocation(line: 555, column: 12, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 542, column: 5)
!5802 = !DILocation(line: 556, column: 7, scope: !5801)
!5803 = !DILocation(line: 560, column: 12, scope: !5801)
!5804 = !DILocation(line: 561, column: 7, scope: !5801)
!5805 = !DILocation(line: 568, column: 1, scope: !5761)
!5806 = distinct !DISubprogram(name: "op_iter_init", scope: !5074, file: !5074, line: 742, type: !5807, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5809)
!5807 = !DISubroutineType(types: !5808)
!5808 = !{null, !5597, !808, !477}
!5809 = !{!5810, !5811, !5812}
!5810 = !DILocalVariable(name: "ptr", arg: 1, scope: !5806, file: !5074, line: 742, type: !5597)
!5811 = !DILocalVariable(name: "stmt", arg: 2, scope: !5806, file: !5074, line: 742, type: !808)
!5812 = !DILocalVariable(name: "flags", arg: 3, scope: !5806, file: !5074, line: 742, type: !477)
!5813 = !DILocation(line: 0, scope: !5806)
!5814 = !DILocation(line: 748, column: 8, scope: !5806)
!5815 = !DILocation(line: 748, column: 13, scope: !5806)
!5816 = !DILocation(line: 750, column: 7, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5806, file: !5074, line: 749, column: 7)
!5818 = !DILocation(line: 751, column: 7, scope: !5817)
!5819 = !DILocation(line: 749, column: 7, scope: !5806)
!5820 = !DILocation(line: 752, column: 5, scope: !5817)
!5821 = !DILocation(line: 753, column: 15, scope: !5806)
!5822 = !DILocation(line: 753, column: 52, scope: !5806)
!5823 = !DILocation(line: 753, column: 8, scope: !5806)
!5824 = !DILocation(line: 753, column: 13, scope: !5806)
!5825 = !DILocation(line: 755, column: 7, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5806, file: !5074, line: 754, column: 7)
!5827 = !DILocation(line: 755, column: 10, scope: !5826)
!5828 = !DILocation(line: 756, column: 7, scope: !5826)
!5829 = !DILocation(line: 756, column: 10, scope: !5826)
!5830 = !DILocation(line: 756, column: 29, scope: !5826)
!5831 = !DILocation(line: 754, column: 7, scope: !5806)
!5832 = !DILocation(line: 757, column: 22, scope: !5826)
!5833 = !DILocation(line: 757, column: 28, scope: !5826)
!5834 = !DILocation(line: 757, column: 15, scope: !5826)
!5835 = !DILocation(line: 757, column: 5, scope: !5826)
!5836 = !DILocation(line: 758, column: 8, scope: !5806)
!5837 = !DILocation(line: 758, column: 13, scope: !5806)
!5838 = !DILocation(line: 760, column: 8, scope: !5806)
!5839 = !DILocation(line: 760, column: 14, scope: !5806)
!5840 = !DILocation(line: 761, column: 8, scope: !5806)
!5841 = !DILocation(line: 761, column: 16, scope: !5806)
!5842 = !DILocation(line: 762, column: 8, scope: !5806)
!5843 = !DILocation(line: 762, column: 17, scope: !5806)
!5844 = !DILocation(line: 763, column: 1, scope: !5806)
!5845 = distinct !DISubprogram(name: "gimple_def_ops", scope: !397, file: !397, line: 1292, type: !5846, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5848)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!837, !2591}
!5848 = !{!5849}
!5849 = !DILocalVariable(name: "g", arg: 1, scope: !5845, file: !397, line: 1292, type: !2591)
!5850 = !DILocation(line: 0, scope: !5845)
!5851 = distinct !DISubprogram(name: "gimple_use_ops", scope: !397, file: !397, line: 1313, type: !5852, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5854)
!5852 = !DISubroutineType(types: !5853)
!5853 = !{!844, !2591}
!5854 = !{!5855}
!5855 = !DILocalVariable(name: "g", arg: 1, scope: !5851, file: !397, line: 1313, type: !2591)
!5856 = !DILocation(line: 0, scope: !5851)
!5857 = !DILocation(line: 1315, column: 8, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5851, file: !397, line: 1315, column: 7)
!5859 = !DILocation(line: 1315, column: 7, scope: !5851)
!5860 = !DILocation(line: 1317, column: 26, scope: !5851)
!5861 = !DILocation(line: 1317, column: 3, scope: !5851)
!5862 = !DILocation(line: 1318, column: 1, scope: !5851)
!5863 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !5074, file: !5074, line: 427, type: !5864, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5866)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{!484, !1995}
!5866 = !{!5867}
!5867 = !DILocalVariable(name: "use", arg: 1, scope: !5863, file: !5074, line: 427, type: !1995)
!5868 = !DILocation(line: 0, scope: !5863)
!5869 = !DILocation(line: 429, column: 17, scope: !5863)
!5870 = !DILocation(line: 429, column: 10, scope: !5863)
!5871 = !DILocation(line: 429, column: 3, scope: !5863)
!5872 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !5074, file: !5074, line: 434, type: !5873, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5876)
!5873 = !DISubroutineType(types: !5874)
!5874 = !{!484, !5875}
!5875 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !468, line: 27, baseType: !842)
!5876 = !{!5877}
!5877 = !DILocalVariable(name: "def", arg: 1, scope: !5872, file: !5074, line: 434, type: !5875)
!5878 = !DILocation(line: 0, scope: !5872)
!5879 = !DILocation(line: 436, column: 10, scope: !5872)
!5880 = !DILocation(line: 436, column: 3, scope: !5872)
!5881 = distinct !DISubprogram(name: "ref_indep_loop_p", scope: !3, file: !3, line: 2054, type: !5882, scopeLine: 2055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5884)
!5882 = !DISubroutineType(types: !5883)
!5883 = !{!476, !1023, !1956}
!5884 = !{!5885, !5886, !5887}
!5885 = !DILocalVariable(name: "loop", arg: 1, scope: !5881, file: !3, line: 2054, type: !1023)
!5886 = !DILocalVariable(name: "ref", arg: 2, scope: !5881, file: !3, line: 2054, type: !1956)
!5887 = !DILocalVariable(name: "ret", scope: !5881, file: !3, line: 2056, type: !476)
!5888 = !DILocation(line: 0, scope: !5881)
!5889 = !DILocation(line: 2058, column: 26, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 2058, column: 7)
!5891 = !DILocation(line: 2058, column: 44, scope: !5890)
!5892 = !DILocation(line: 2058, column: 7, scope: !5890)
!5893 = !DILocation(line: 2058, column: 7, scope: !5881)
!5894 = !DILocation(line: 2060, column: 26, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 2060, column: 7)
!5896 = !DILocation(line: 2060, column: 42, scope: !5895)
!5897 = !DILocation(line: 2060, column: 7, scope: !5895)
!5898 = !DILocation(line: 2060, column: 7, scope: !5881)
!5899 = !DILocation(line: 2063, column: 9, scope: !5881)
!5900 = !DILocation(line: 2065, column: 7, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 2065, column: 7)
!5902 = !DILocation(line: 2065, column: 17, scope: !5901)
!5903 = !DILocation(line: 2065, column: 21, scope: !5901)
!5904 = !DILocation(line: 2065, column: 32, scope: !5901)
!5905 = !DILocation(line: 2065, column: 7, scope: !5881)
!5906 = !DILocation(line: 2067, column: 12, scope: !5901)
!5907 = !DILocation(line: 2067, column: 22, scope: !5901)
!5908 = !DILocation(line: 2067, column: 27, scope: !5901)
!5909 = !DILocation(line: 2066, column: 5, scope: !5901)
!5910 = !DILocation(line: 2069, column: 3, scope: !5881)
!5911 = !DILocation(line: 2071, column: 3, scope: !5881)
!5912 = !DILocation(line: 2072, column: 1, scope: !5881)
!5913 = distinct !DISubprogram(name: "ref_indep_loop_p_1", scope: !3, file: !3, line: 2008, type: !5882, scopeLine: 2009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5914)
!5914 = !{!5915, !5916, !5917, !5918, !5919, !5920, !5921, !5922, !5923, !5924, !5925}
!5915 = !DILocalVariable(name: "loop", arg: 1, scope: !5913, file: !3, line: 2008, type: !1023)
!5916 = !DILocalVariable(name: "ref", arg: 2, scope: !5913, file: !3, line: 2008, type: !1956)
!5917 = !DILocalVariable(name: "clobbers", scope: !5913, file: !3, line: 2010, type: !1409)
!5918 = !DILocalVariable(name: "refs_to_check", scope: !5913, file: !3, line: 2010, type: !1409)
!5919 = !DILocalVariable(name: "refs", scope: !5913, file: !3, line: 2010, type: !1409)
!5920 = !DILocalVariable(name: "i", scope: !5913, file: !3, line: 2011, type: !7)
!5921 = !DILocalVariable(name: "bi", scope: !5913, file: !3, line: 2012, type: !4466)
!5922 = !DILocalVariable(name: "ret", scope: !5913, file: !3, line: 2013, type: !476)
!5923 = !DILocalVariable(name: "stored", scope: !5913, file: !3, line: 2013, type: !476)
!5924 = !DILocalVariable(name: "map", scope: !5913, file: !3, line: 2014, type: !1325)
!5925 = !DILocalVariable(name: "aref", scope: !5913, file: !3, line: 2015, type: !1956)
!5926 = !DILocation(line: 0, scope: !5913)
!5927 = !DILocation(line: 2011, column: 3, scope: !5913)
!5928 = !DILocation(line: 2012, column: 3, scope: !5913)
!5929 = !DILocation(line: 2013, column: 48, scope: !5913)
!5930 = !DILocation(line: 2013, column: 62, scope: !5913)
!5931 = !DILocation(line: 2013, column: 29, scope: !5913)
!5932 = !DILocation(line: 2018, column: 14, scope: !5913)
!5933 = !DILocation(line: 2019, column: 32, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2019, column: 7)
!5935 = !DILocation(line: 2019, column: 7, scope: !5934)
!5936 = !DILocation(line: 2019, column: 7, scope: !5913)
!5937 = !DILocation(line: 2022, column: 19, scope: !5913)
!5938 = !DILocation(line: 2024, column: 9, scope: !5913)
!5939 = !DILocation(line: 2025, column: 3, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2025, column: 3)
!5941 = !DILocation(line: 0, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 2027, column: 11)
!5943 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 2026, column: 5)
!5944 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 2025, column: 3)
!5945 = !DILocation(line: 2025, column: 3, scope: !5944)
!5946 = !DILocation(line: 2030, column: 9, scope: !5942)
!5947 = !DILocation(line: 2032, column: 7, scope: !5943)
!5948 = distinct !{!5948, !5939, !5949}
!5949 = !DILocation(line: 2033, column: 5, scope: !5940)
!5950 = !DILocation(line: 2035, column: 3, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2035, column: 3)
!5952 = !DILocation(line: 2028, column: 9, scope: !5942)
!5953 = !DILocation(line: 2035, column: 3, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 2035, column: 3)
!5955 = !DILocation(line: 2037, column: 14, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 2036, column: 5)
!5957 = !DILocation(line: 2038, column: 12, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5956, file: !3, line: 2038, column: 11)
!5959 = !DILocation(line: 2038, column: 11, scope: !5956)
!5960 = !DILocation(line: 2041, column: 4, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 2039, column: 2)
!5962 = !DILocation(line: 2042, column: 4, scope: !5961)
!5963 = distinct !{!5963, !5950, !5964}
!5964 = !DILocation(line: 2044, column: 5, scope: !5951)
!5965 = !DILocation(line: 2046, column: 3, scope: !5913)
!5966 = !DILocation(line: 2047, column: 3, scope: !5913)
!5967 = !DILocation(line: 2048, column: 1, scope: !5913)
!5968 = distinct !DISubprogram(name: "record_indep_loop", scope: !3, file: !3, line: 1996, type: !5969, scopeLine: 1997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5971)
!5969 = !DISubroutineType(types: !5970)
!5970 = !{null, !1023, !1956, !476}
!5971 = !{!5972, !5973, !5974}
!5972 = !DILocalVariable(name: "loop", arg: 1, scope: !5968, file: !3, line: 1996, type: !1023)
!5973 = !DILocalVariable(name: "ref", arg: 2, scope: !5968, file: !3, line: 1996, type: !1956)
!5974 = !DILocalVariable(name: "indep", arg: 3, scope: !5968, file: !3, line: 1996, type: !476)
!5975 = !DILocation(line: 0, scope: !5968)
!5976 = !DILocation(line: 1998, column: 7, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 1998, column: 7)
!5978 = !DILocation(line: 1998, column: 7, scope: !5968)
!5979 = !DILocation(line: 1999, column: 26, scope: !5977)
!5980 = !DILocation(line: 1999, column: 44, scope: !5977)
!5981 = !DILocation(line: 1999, column: 5, scope: !5977)
!5982 = !DILocation(line: 2001, column: 26, scope: !5977)
!5983 = !DILocation(line: 2001, column: 42, scope: !5977)
!5984 = !DILocation(line: 2001, column: 5, scope: !5977)
!5985 = !DILocation(line: 2002, column: 1, scope: !5968)
!5986 = distinct !DISubprogram(name: "get_vop_accesses", scope: !3, file: !3, line: 1494, type: !5987, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5989)
!5987 = !DISubroutineType(types: !5988)
!5988 = !{!1409, !1325, !7}
!5989 = !{!5990, !5991, !5992}
!5990 = !DILocalVariable(name: "vop_to_refs", arg: 1, scope: !5986, file: !3, line: 1494, type: !1325)
!5991 = !DILocalVariable(name: "vop", arg: 2, scope: !5986, file: !3, line: 1494, type: !7)
!5992 = !DILocalVariable(name: "vtoe", scope: !5986, file: !3, line: 1496, type: !3520)
!5993 = !DILocation(line: 0, scope: !5986)
!5994 = !DILocation(line: 1497, column: 66, scope: !5986)
!5995 = !DILocation(line: 1497, column: 32, scope: !5986)
!5996 = !DILocation(line: 1498, column: 16, scope: !5986)
!5997 = !DILocation(line: 1498, column: 3, scope: !5986)
!5998 = distinct !DISubprogram(name: "get_vop_stores", scope: !3, file: !3, line: 1505, type: !5987, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5999)
!5999 = !{!6000, !6001, !6002}
!6000 = !DILocalVariable(name: "vop_to_refs", arg: 1, scope: !5998, file: !3, line: 1505, type: !1325)
!6001 = !DILocalVariable(name: "vop", arg: 2, scope: !5998, file: !3, line: 1505, type: !7)
!6002 = !DILocalVariable(name: "vtoe", scope: !5998, file: !3, line: 1507, type: !3520)
!6003 = !DILocation(line: 0, scope: !5998)
!6004 = !DILocation(line: 1508, column: 66, scope: !5998)
!6005 = !DILocation(line: 1508, column: 32, scope: !5998)
!6006 = !DILocation(line: 1509, column: 16, scope: !5998)
!6007 = !DILocation(line: 1509, column: 3, scope: !5998)
!6008 = distinct !DISubprogram(name: "refs_independent_p", scope: !3, file: !3, line: 1961, type: !6009, scopeLine: 1962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6011)
!6009 = !DISubroutineType(types: !6010)
!6010 = !{!476, !1956, !1956}
!6011 = !{!6012, !6013}
!6012 = !DILocalVariable(name: "ref1", arg: 1, scope: !6008, file: !3, line: 1961, type: !1956)
!6013 = !DILocalVariable(name: "ref2", arg: 2, scope: !6008, file: !3, line: 1961, type: !1956)
!6014 = !DILocation(line: 0, scope: !6008)
!6015 = !DILocation(line: 1963, column: 12, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1963, column: 7)
!6017 = !DILocation(line: 1964, column: 7, scope: !6016)
!6018 = !DILocation(line: 1964, column: 30, scope: !6016)
!6019 = !DILocation(line: 1964, column: 47, scope: !6016)
!6020 = !DILocation(line: 1964, column: 10, scope: !6016)
!6021 = !DILocation(line: 1963, column: 7, scope: !6008)
!6022 = !DILocation(line: 1966, column: 27, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1966, column: 7)
!6024 = !DILocation(line: 1966, column: 42, scope: !6023)
!6025 = !DILocation(line: 1966, column: 7, scope: !6023)
!6026 = !DILocation(line: 1966, column: 7, scope: !6008)
!6027 = !DILocation(line: 1969, column: 7, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1969, column: 7)
!6029 = !DILocation(line: 1969, column: 17, scope: !6028)
!6030 = !DILocation(line: 1969, column: 21, scope: !6028)
!6031 = !DILocation(line: 1969, column: 32, scope: !6028)
!6032 = !DILocation(line: 1969, column: 7, scope: !6008)
!6033 = !DILocation(line: 1971, column: 13, scope: !6028)
!6034 = !DILocation(line: 1971, column: 23, scope: !6028)
!6035 = !DILocation(line: 1970, column: 5, scope: !6028)
!6036 = !DILocation(line: 1973, column: 35, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1973, column: 7)
!6038 = !DILocation(line: 1973, column: 46, scope: !6037)
!6039 = !DILocation(line: 1973, column: 7, scope: !6037)
!6040 = !DILocation(line: 1973, column: 7, scope: !6008)
!6041 = !DILocation(line: 1976, column: 29, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 1975, column: 5)
!6043 = !DILocation(line: 1976, column: 44, scope: !6042)
!6044 = !DILocation(line: 1976, column: 7, scope: !6042)
!6045 = !DILocation(line: 1977, column: 29, scope: !6042)
!6046 = !DILocation(line: 1977, column: 44, scope: !6042)
!6047 = !DILocation(line: 1977, column: 7, scope: !6042)
!6048 = !DILocation(line: 1978, column: 11, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 1978, column: 11)
!6050 = !DILocation(line: 1978, column: 21, scope: !6049)
!6051 = !DILocation(line: 1978, column: 25, scope: !6049)
!6052 = !DILocation(line: 1978, column: 36, scope: !6049)
!6053 = !DILocation(line: 1978, column: 11, scope: !6042)
!6054 = !DILocation(line: 1979, column: 2, scope: !6049)
!6055 = !DILocation(line: 1984, column: 29, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 1983, column: 5)
!6057 = !DILocation(line: 1984, column: 46, scope: !6056)
!6058 = !DILocation(line: 1984, column: 7, scope: !6056)
!6059 = !DILocation(line: 1985, column: 29, scope: !6056)
!6060 = !DILocation(line: 1985, column: 46, scope: !6056)
!6061 = !DILocation(line: 1985, column: 7, scope: !6056)
!6062 = !DILocation(line: 1986, column: 11, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 1986, column: 11)
!6064 = !DILocation(line: 1986, column: 21, scope: !6063)
!6065 = !DILocation(line: 1986, column: 25, scope: !6063)
!6066 = !DILocation(line: 1986, column: 36, scope: !6063)
!6067 = !DILocation(line: 1986, column: 11, scope: !6056)
!6068 = !DILocation(line: 1987, column: 2, scope: !6063)
!6069 = !DILocation(line: 1990, column: 1, scope: !6008)
!6070 = distinct !DISubprogram(name: "mem_refs_may_alias_p", scope: !3, file: !3, line: 1635, type: !6071, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6074)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{!476, !484, !484, !6073}
!6073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!6074 = !{!6075, !6076, !6077, !6078, !6079, !6080, !6097}
!6075 = !DILocalVariable(name: "mem1", arg: 1, scope: !6070, file: !3, line: 1635, type: !484)
!6076 = !DILocalVariable(name: "mem2", arg: 2, scope: !6070, file: !3, line: 1635, type: !484)
!6077 = !DILocalVariable(name: "ttae_cache", arg: 3, scope: !6070, file: !3, line: 1635, type: !6073)
!6078 = !DILocalVariable(name: "size1", scope: !6070, file: !3, line: 1640, type: !533)
!6079 = !DILocalVariable(name: "size2", scope: !6070, file: !3, line: 1640, type: !533)
!6080 = !DILocalVariable(name: "off1", scope: !6070, file: !3, line: 1641, type: !6081)
!6081 = !DIDerivedType(tag: DW_TAG_typedef, name: "aff_tree", file: !6082, line: 59, baseType: !6083)
!6082 = !DIFile(filename: "./tree-affine.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!6083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "affine_tree_combination", file: !6082, line: 36, size: 1856, elements: !6084)
!6084 = !{!6085, !6086, !6087, !6088, !6096}
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6083, file: !6082, line: 39, baseType: !484, size: 64)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6083, file: !6082, line: 42, baseType: !533, size: 128, offset: 64)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !6083, file: !6082, line: 45, baseType: !7, size: 32, offset: 192)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !6083, file: !6082, line: 53, baseType: !6089, size: 1536, offset: 256)
!6089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6090, size: 1536, elements: !6094)
!6090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aff_comb_elt", file: !6082, line: 27, size: 192, elements: !6091)
!6091 = !{!6092, !6093}
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6090, file: !6082, line: 30, baseType: !484, size: 64)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !6090, file: !6082, line: 33, baseType: !533, size: 128, offset: 64)
!6094 = !{!6095}
!6095 = !DISubrange(count: 8)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "rest", scope: !6083, file: !6082, line: 58, baseType: !484, size: 64, offset: 1792)
!6097 = !DILocalVariable(name: "off2", scope: !6070, file: !3, line: 1641, type: !6081)
!6098 = !DILocation(line: 0, scope: !6070)
!6099 = !DILocation(line: 1640, column: 3, scope: !6070)
!6100 = !DILocation(line: 1641, column: 3, scope: !6070)
!6101 = !DILocation(line: 1644, column: 8, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1644, column: 7)
!6103 = !DILocation(line: 1644, column: 7, scope: !6070)
!6104 = !DILocation(line: 1649, column: 7, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1649, column: 7)
!6106 = !DILocation(line: 1649, column: 16, scope: !6105)
!6107 = !DILocation(line: 1649, column: 7, scope: !6070)
!6108 = !DILocation(line: 1652, column: 3, scope: !6070)
!6109 = !DILocation(line: 1653, column: 3, scope: !6070)
!6110 = !DILocation(line: 1654, column: 3, scope: !6070)
!6111 = !DILocation(line: 1655, column: 3, scope: !6070)
!6112 = !DILocation(line: 1656, column: 33, scope: !6070)
!6113 = !DILocation(line: 1656, column: 3, scope: !6070)
!6114 = !DILocation(line: 1657, column: 3, scope: !6070)
!6115 = !DILocation(line: 1659, column: 7, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1659, column: 7)
!6117 = !DILocation(line: 1663, column: 1, scope: !6070)
!6118 = distinct !DISubprogram(name: "shwi_to_double_int", scope: !534, file: !534, line: 72, type: !6119, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6121)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!533, !540}
!6121 = !{!6122, !6123}
!6122 = !DILocalVariable(name: "cst", arg: 1, scope: !6118, file: !534, line: 72, type: !540)
!6123 = !DILocalVariable(name: "r", scope: !6118, file: !534, line: 74, type: !533)
!6124 = !DILocation(line: 0, scope: !6118)
!6125 = !DILocation(line: 79, column: 3, scope: !6118)
!6126 = distinct !DISubprogram(name: "cannot_overlap_p", scope: !3, file: !3, line: 1608, type: !6127, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6130)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{!476, !6129, !533, !533}
!6129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6081, size: 64)
!6130 = !{!6131, !6132, !6133, !6134, !6135}
!6131 = !DILocalVariable(name: "diff", arg: 1, scope: !6126, file: !3, line: 1608, type: !6129)
!6132 = !DILocalVariable(name: "size1", arg: 2, scope: !6126, file: !3, line: 1608, type: !533)
!6133 = !DILocalVariable(name: "size2", arg: 3, scope: !6126, file: !3, line: 1608, type: !533)
!6134 = !DILocalVariable(name: "d", scope: !6126, file: !3, line: 1610, type: !533)
!6135 = !DILocalVariable(name: "bound", scope: !6126, file: !3, line: 1610, type: !533)
!6136 = !DILocation(line: 0, scope: !6126)
!6137 = !DILocation(line: 1610, column: 3, scope: !6126)
!6138 = !DILocation(line: 1613, column: 13, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 1613, column: 7)
!6140 = !DILocation(line: 1613, column: 15, scope: !6139)
!6141 = !DILocation(line: 1613, column: 7, scope: !6126)
!6142 = !DILocation(line: 1616, column: 13, scope: !6126)
!6143 = !DILocation(line: 1617, column: 7, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 1617, column: 7)
!6145 = !DILocation(line: 1617, column: 7, scope: !6126)
!6146 = !DILocation(line: 1621, column: 15, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 1618, column: 5)
!6148 = !DILocation(line: 1621, column: 57, scope: !6147)
!6149 = !DILocation(line: 1621, column: 34, scope: !6147)
!6150 = !DILocation(line: 1622, column: 14, scope: !6147)
!6151 = !DILocation(line: 1622, column: 7, scope: !6147)
!6152 = !DILocation(line: 1627, column: 14, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 1625, column: 5)
!6154 = !DILocation(line: 1627, column: 41, scope: !6153)
!6155 = !DILocation(line: 1627, column: 7, scope: !6153)
!6156 = !DILocation(line: 1629, column: 1, scope: !6126)
!6157 = distinct !DISubprogram(name: "gimple_references_memory_p", scope: !397, file: !397, line: 1499, type: !3127, scopeLine: 1500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6158)
!6158 = !{!6159}
!6159 = !DILocalVariable(name: "stmt", arg: 1, scope: !6157, file: !397, line: 1499, type: !808)
!6160 = !DILocation(line: 0, scope: !6157)
!6161 = !DILocation(line: 1501, column: 10, scope: !6157)
!6162 = !DILocation(line: 1501, column: 36, scope: !6157)
!6163 = !DILocation(line: 1501, column: 39, scope: !6157)
!6164 = !DILocation(line: 1501, column: 3, scope: !6157)
!6165 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !397, file: !397, line: 1954, type: !2598, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6166)
!6166 = !{!6167, !6168}
!6167 = !DILocalVariable(name: "gs", arg: 1, scope: !6165, file: !397, line: 1954, type: !2591)
!6168 = !DILocalVariable(name: "addr", scope: !6165, file: !397, line: 1956, type: !484)
!6169 = !DILocation(line: 0, scope: !6165)
!6170 = !DILocation(line: 1956, column: 15, scope: !6165)
!6171 = !DILocation(line: 1957, column: 7, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6165, file: !397, line: 1957, column: 7)
!6173 = !DILocation(line: 1957, column: 24, scope: !6172)
!6174 = !DILocation(line: 1957, column: 7, scope: !6165)
!6175 = !DILocation(line: 1958, column: 12, scope: !6172)
!6176 = !DILocation(line: 1958, column: 5, scope: !6172)
!6177 = !DILocation(line: 1960, column: 1, scope: !6165)
!6178 = distinct !DISubprogram(name: "gimple_call_fn", scope: !397, file: !397, line: 1911, type: !2598, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6179)
!6179 = !{!6180}
!6180 = !DILocalVariable(name: "gs", arg: 1, scope: !6178, file: !397, line: 1911, type: !2591)
!6181 = !DILocation(line: 0, scope: !6178)
!6182 = !DILocation(line: 1914, column: 10, scope: !6178)
!6183 = !DILocation(line: 1914, column: 3, scope: !6178)
!6184 = distinct !DISubprogram(name: "set_level", scope: !3, file: !3, line: 716, type: !6185, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6187)
!6185 = !DISubroutineType(types: !6186)
!6186 = !{null, !808, !1023, !1023}
!6187 = !{!6188, !6189, !6190, !6191, !6192, !6193}
!6188 = !DILocalVariable(name: "stmt", arg: 1, scope: !6184, file: !3, line: 716, type: !808)
!6189 = !DILocalVariable(name: "orig_loop", arg: 2, scope: !6184, file: !3, line: 716, type: !1023)
!6190 = !DILocalVariable(name: "level", arg: 3, scope: !6184, file: !3, line: 716, type: !1023)
!6191 = !DILocalVariable(name: "stmt_loop", scope: !6184, file: !3, line: 718, type: !1023)
!6192 = !DILocalVariable(name: "dep", scope: !6184, file: !3, line: 719, type: !1990)
!6193 = !DILocalVariable(name: "lim_data", scope: !6184, file: !3, line: 720, type: !1982)
!6194 = !DILocation(line: 0, scope: !6184)
!6195 = !DILocation(line: 718, column: 28, scope: !6184)
!6196 = !DILocation(line: 718, column: 46, scope: !6184)
!6197 = !DILocation(line: 722, column: 15, scope: !6184)
!6198 = !DILocation(line: 723, column: 14, scope: !6184)
!6199 = !DILocation(line: 724, column: 16, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 724, column: 7)
!6201 = !DILocation(line: 724, column: 24, scope: !6200)
!6202 = !DILocation(line: 724, column: 37, scope: !6200)
!6203 = !DILocation(line: 724, column: 46, scope: !6200)
!6204 = !DILocation(line: 724, column: 7, scope: !6184)
!6205 = !DILocation(line: 726, column: 7, scope: !6200)
!6206 = !DILocation(line: 725, column: 17, scope: !6200)
!6207 = !DILocation(line: 725, column: 5, scope: !6200)
!6208 = !DILocation(line: 727, column: 7, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 727, column: 7)
!6210 = !DILocation(line: 727, column: 7, scope: !6184)
!6211 = !DILocation(line: 730, column: 3, scope: !6184)
!6212 = !DILocation(line: 733, column: 13, scope: !6184)
!6213 = !DILocation(line: 733, column: 22, scope: !6184)
!6214 = !DILocation(line: 734, column: 24, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 734, column: 3)
!6216 = !DILocation(line: 734, column: 8, scope: !6215)
!6217 = !DILocation(line: 0, scope: !6215)
!6218 = !DILocation(line: 734, column: 3, scope: !6215)
!6219 = !DILocation(line: 735, column: 21, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 734, column: 3)
!6221 = !DILocation(line: 735, column: 5, scope: !6220)
!6222 = !DILocation(line: 734, column: 49, scope: !6220)
!6223 = !DILocation(line: 734, column: 3, scope: !6220)
!6224 = distinct !{!6224, !6218, !6225}
!6225 = !DILocation(line: 735, column: 43, scope: !6215)
!6226 = !DILocation(line: 736, column: 1, scope: !6184)
!6227 = distinct !DISubprogram(name: "store_motion_loop", scope: !3, file: !3, line: 2153, type: !6228, scopeLine: 2154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6230)
!6228 = !DISubroutineType(types: !6229)
!6229 = !{null, !1023, !1409}
!6230 = !{!6231, !6232, !6233, !6239, !6240}
!6231 = !DILocalVariable(name: "loop", arg: 1, scope: !6227, file: !3, line: 2153, type: !1023)
!6232 = !DILocalVariable(name: "sm_executed", arg: 2, scope: !6227, file: !3, line: 2153, type: !1409)
!6233 = !DILocalVariable(name: "exits", scope: !6227, file: !3, line: 2155, type: !6234)
!6234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6235, size: 64)
!6235 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_heap", file: !343, line: 152, baseType: !6236)
!6236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_heap", file: !343, line: 152, size: 128, elements: !6237)
!6237 = !{!6238}
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6236, file: !343, line: 152, baseType: !781, size: 128)
!6239 = !DILocalVariable(name: "subloop", scope: !6227, file: !3, line: 2156, type: !1023)
!6240 = !DILocalVariable(name: "sm_in_loop", scope: !6227, file: !3, line: 2157, type: !1409)
!6241 = !DILocation(line: 0, scope: !6227)
!6242 = !DILocation(line: 2155, column: 3, scope: !6227)
!6243 = !DILocation(line: 2155, column: 29, scope: !6227)
!6244 = !DILocation(line: 2155, column: 21, scope: !6227)
!6245 = !DILocation(line: 2157, column: 23, scope: !6227)
!6246 = !DILocation(line: 2159, column: 7, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 2159, column: 7)
!6248 = !DILocation(line: 2159, column: 7, scope: !6227)
!6249 = !DILocation(line: 2161, column: 7, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 2160, column: 5)
!6251 = !DILocation(line: 2162, column: 7, scope: !6250)
!6252 = !DILocation(line: 2163, column: 5, scope: !6250)
!6253 = !DILocation(line: 2164, column: 3, scope: !6227)
!6254 = !DILocation(line: 2166, column: 3, scope: !6227)
!6255 = !DILocation(line: 2167, column: 24, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 2167, column: 3)
!6257 = !DILocation(line: 2167, column: 8, scope: !6256)
!6258 = !DILocation(line: 0, scope: !6256)
!6259 = !DILocation(line: 2167, column: 39, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 2167, column: 3)
!6261 = !DILocation(line: 2167, column: 3, scope: !6256)
!6262 = !DILocation(line: 2168, column: 5, scope: !6260)
!6263 = !DILocation(line: 2167, column: 67, scope: !6260)
!6264 = !DILocation(line: 2167, column: 3, scope: !6260)
!6265 = distinct !{!6265, !6261, !6266}
!6266 = !DILocation(line: 2168, column: 44, scope: !6256)
!6267 = !DILocation(line: 2169, column: 3, scope: !6227)
!6268 = !DILocation(line: 2170, column: 3, scope: !6227)
!6269 = !DILocation(line: 2171, column: 1, scope: !6227)
!6270 = distinct !DISubprogram(name: "loop_suitable_for_sm", scope: !3, file: !3, line: 2135, type: !6271, scopeLine: 2137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6273)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{!476, !1023, !6234}
!6273 = !{!6274, !6275, !6276, !6277}
!6274 = !DILocalVariable(name: "loop", arg: 1, scope: !6270, file: !3, line: 2135, type: !1023)
!6275 = !DILocalVariable(name: "exits", arg: 2, scope: !6270, file: !3, line: 2136, type: !6234)
!6276 = !DILocalVariable(name: "i", scope: !6270, file: !3, line: 2138, type: !7)
!6277 = !DILocalVariable(name: "ex", scope: !6270, file: !3, line: 2139, type: !788)
!6278 = !DILocation(line: 0, scope: !6270)
!6279 = !DILocation(line: 2139, column: 3, scope: !6270)
!6280 = !DILocation(line: 0, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 2141, column: 3)
!6282 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 2141, column: 3)
!6283 = !DILocation(line: 2141, column: 8, scope: !6282)
!6284 = !DILocation(line: 0, scope: !6282)
!6285 = !DILocation(line: 2141, column: 15, scope: !6281)
!6286 = !DILocation(line: 2141, column: 3, scope: !6282)
!6287 = !DILocation(line: 2142, column: 9, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 2142, column: 9)
!6289 = !DILocation(line: 2142, column: 13, scope: !6288)
!6290 = !DILocation(line: 2142, column: 19, scope: !6288)
!6291 = !DILocation(line: 2142, column: 9, scope: !6281)
!6292 = !DILocation(line: 2141, column: 50, scope: !6281)
!6293 = !DILocation(line: 2141, column: 3, scope: !6281)
!6294 = distinct !{!6294, !6286, !6295}
!6295 = !DILocation(line: 2143, column: 14, scope: !6282)
!6296 = !DILocation(line: 2146, column: 1, scope: !6270)
!6297 = distinct !DISubprogram(name: "find_refs_for_sm", scope: !3, file: !3, line: 2114, type: !6298, scopeLine: 2115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6300)
!6298 = !DISubroutineType(types: !6299)
!6299 = !{null, !1023, !1409, !1409}
!6300 = !{!6301, !6302, !6303, !6304, !6305, !6306, !6307}
!6301 = !DILocalVariable(name: "loop", arg: 1, scope: !6297, file: !3, line: 2114, type: !1023)
!6302 = !DILocalVariable(name: "sm_executed", arg: 2, scope: !6297, file: !3, line: 2114, type: !1409)
!6303 = !DILocalVariable(name: "refs_to_sm", arg: 3, scope: !6297, file: !3, line: 2114, type: !1409)
!6304 = !DILocalVariable(name: "refs", scope: !6297, file: !3, line: 2116, type: !1409)
!6305 = !DILocalVariable(name: "i", scope: !6297, file: !3, line: 2118, type: !7)
!6306 = !DILocalVariable(name: "bi", scope: !6297, file: !3, line: 2119, type: !4466)
!6307 = !DILocalVariable(name: "ref", scope: !6297, file: !3, line: 2120, type: !1956)
!6308 = !DILocation(line: 0, scope: !6297)
!6309 = !DILocation(line: 2116, column: 17, scope: !6297)
!6310 = !DILocation(line: 2118, column: 3, scope: !6297)
!6311 = !DILocation(line: 2119, column: 3, scope: !6297)
!6312 = !DILocation(line: 2122, column: 3, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 2122, column: 3)
!6314 = !DILocation(line: 2122, column: 3, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 2122, column: 3)
!6316 = !DILocation(line: 2124, column: 13, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 2123, column: 5)
!6318 = !DILocation(line: 2125, column: 11, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2125, column: 11)
!6320 = !DILocation(line: 2125, column: 11, scope: !6317)
!6321 = !DILocation(line: 2126, column: 30, scope: !6319)
!6322 = !DILocation(line: 2126, column: 2, scope: !6319)
!6323 = distinct !{!6323, !6312, !6324}
!6324 = !DILocation(line: 2127, column: 5, scope: !6313)
!6325 = !DILocation(line: 2128, column: 1, scope: !6297)
!6326 = distinct !DISubprogram(name: "hoist_memory_references", scope: !3, file: !3, line: 1889, type: !6327, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6329)
!6327 = !DISubroutineType(types: !6328)
!6328 = !{null, !1023, !1409, !6234}
!6329 = !{!6330, !6331, !6332, !6333, !6334, !6335}
!6330 = !DILocalVariable(name: "loop", arg: 1, scope: !6326, file: !3, line: 1889, type: !1023)
!6331 = !DILocalVariable(name: "mem_refs", arg: 2, scope: !6326, file: !3, line: 1889, type: !1409)
!6332 = !DILocalVariable(name: "exits", arg: 3, scope: !6326, file: !3, line: 1890, type: !6234)
!6333 = !DILocalVariable(name: "ref", scope: !6326, file: !3, line: 1892, type: !1956)
!6334 = !DILocalVariable(name: "i", scope: !6326, file: !3, line: 1893, type: !7)
!6335 = !DILocalVariable(name: "bi", scope: !6326, file: !3, line: 1894, type: !4466)
!6336 = !DILocation(line: 0, scope: !6326)
!6337 = !DILocation(line: 1893, column: 3, scope: !6326)
!6338 = !DILocation(line: 1894, column: 3, scope: !6326)
!6339 = !DILocation(line: 1896, column: 3, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 1896, column: 3)
!6341 = !DILocation(line: 1896, column: 3, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1896, column: 3)
!6343 = !DILocation(line: 1898, column: 13, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 1897, column: 5)
!6345 = !DILocation(line: 1899, column: 7, scope: !6344)
!6346 = distinct !{!6346, !6339, !6347}
!6347 = !DILocation(line: 1900, column: 5, scope: !6340)
!6348 = !DILocation(line: 1901, column: 1, scope: !6326)
!6349 = distinct !DISubprogram(name: "VEC_edge_heap_free", scope: !343, file: !343, line: 152, type: !6350, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6353)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{null, !6352}
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6234, size: 64)
!6353 = !{!6354}
!6354 = !DILocalVariable(name: "vec_", arg: 1, scope: !6349, file: !343, line: 152, type: !6352)
!6355 = !DILocation(line: 0, scope: !6349)
!6356 = !DILocation(line: 152, column: 1, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6349, file: !343, line: 152, column: 1)
!6358 = !DILocation(line: 152, column: 1, scope: !6349)
!6359 = distinct !DISubprogram(name: "VEC_edge_base_iterate", scope: !343, file: !343, line: 150, type: !6360, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6362)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{!477, !3389, !7, !3345}
!6362 = !{!6363, !6364, !6365}
!6363 = !DILocalVariable(name: "vec_", arg: 1, scope: !6359, file: !343, line: 150, type: !3389)
!6364 = !DILocalVariable(name: "ix_", arg: 2, scope: !6359, file: !343, line: 150, type: !7)
!6365 = !DILocalVariable(name: "ptr", arg: 3, scope: !6359, file: !343, line: 150, type: !3345)
!6366 = !DILocation(line: 0, scope: !6359)
!6367 = !DILocation(line: 150, column: 1, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6359, file: !343, line: 150, column: 1)
!6369 = !DILocation(line: 150, column: 1, scope: !6359)
!6370 = !DILocation(line: 150, column: 1, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6368, file: !343, line: 150, column: 1)
!6372 = !DILocation(line: 150, column: 1, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6368, file: !343, line: 150, column: 1)
!6374 = !DILocation(line: 0, scope: !6368)
!6375 = distinct !DISubprogram(name: "can_sm_ref_p", scope: !3, file: !3, line: 2077, type: !5882, scopeLine: 2078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6376)
!6376 = !{!6377, !6378, !6379}
!6377 = !DILocalVariable(name: "loop", arg: 1, scope: !6375, file: !3, line: 2077, type: !1023)
!6378 = !DILocalVariable(name: "ref", arg: 2, scope: !6375, file: !3, line: 2077, type: !1956)
!6379 = !DILocalVariable(name: "base", scope: !6375, file: !3, line: 2079, type: !484)
!6380 = !DILocation(line: 0, scope: !6375)
!6381 = !DILocation(line: 2082, column: 27, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2082, column: 7)
!6383 = !DILocation(line: 2082, column: 41, scope: !6382)
!6384 = !DILocation(line: 2082, column: 8, scope: !6382)
!6385 = !DILocation(line: 2082, column: 7, scope: !6375)
!6386 = !DILocation(line: 2086, column: 28, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2086, column: 7)
!6388 = !DILocation(line: 2086, column: 8, scope: !6387)
!6389 = !DILocation(line: 2087, column: 7, scope: !6387)
!6390 = !DILocation(line: 2087, column: 10, scope: !6387)
!6391 = !DILocation(line: 2088, column: 7, scope: !6387)
!6392 = !DILocation(line: 2088, column: 33, scope: !6387)
!6393 = !DILocation(line: 2088, column: 53, scope: !6387)
!6394 = !DILocation(line: 2088, column: 11, scope: !6387)
!6395 = !DILocation(line: 2086, column: 7, scope: !6375)
!6396 = !DILocation(line: 2095, column: 33, scope: !6375)
!6397 = !DILocation(line: 2095, column: 10, scope: !6375)
!6398 = !DILocation(line: 2096, column: 32, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2096, column: 7)
!6400 = !DILocation(line: 2096, column: 8, scope: !6399)
!6401 = !DILocation(line: 2097, column: 8, scope: !6399)
!6402 = !DILocation(line: 2097, column: 12, scope: !6399)
!6403 = !DILocation(line: 2097, column: 26, scope: !6399)
!6404 = !DILocation(line: 2097, column: 29, scope: !6399)
!6405 = !DILocation(line: 2098, column: 7, scope: !6399)
!6406 = !DILocation(line: 2098, column: 11, scope: !6399)
!6407 = !DILocation(line: 2096, column: 7, scope: !6375)
!6408 = !DILocation(line: 2103, column: 8, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2103, column: 7)
!6410 = !DILocation(line: 2107, column: 1, scope: !6375)
!6411 = distinct !DISubprogram(name: "may_move_till", scope: !3, file: !3, line: 1101, type: !2476, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6412)
!6412 = !{!6413, !6414, !6415, !6416, !6417, !6418, !6421}
!6413 = !DILocalVariable(name: "ref", arg: 1, scope: !6411, file: !3, line: 1101, type: !484)
!6414 = !DILocalVariable(name: "index", arg: 2, scope: !6411, file: !3, line: 1101, type: !842)
!6415 = !DILocalVariable(name: "data", arg: 3, scope: !6411, file: !3, line: 1101, type: !481)
!6416 = !DILocalVariable(name: "loop", scope: !6411, file: !3, line: 1103, type: !1023)
!6417 = !DILocalVariable(name: "max_loop", scope: !6411, file: !3, line: 1103, type: !1023)
!6418 = !DILocalVariable(name: "step", scope: !6419, file: !3, line: 1109, type: !484)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 1108, column: 5)
!6420 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1107, column: 7)
!6421 = !DILocalVariable(name: "lbound", scope: !6419, file: !3, line: 1110, type: !484)
!6422 = !DILocation(line: 0, scope: !6411)
!6423 = !DILocation(line: 1103, column: 23, scope: !6411)
!6424 = !DILocation(line: 1107, column: 7, scope: !6420)
!6425 = !DILocation(line: 1107, column: 23, scope: !6420)
!6426 = !DILocation(line: 1107, column: 7, scope: !6411)
!6427 = !DILocation(line: 1109, column: 19, scope: !6419)
!6428 = !DILocation(line: 0, scope: !6419)
!6429 = !DILocation(line: 1110, column: 21, scope: !6419)
!6430 = !DILocation(line: 1112, column: 18, scope: !6419)
!6431 = !DILocation(line: 1113, column: 12, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 1113, column: 11)
!6433 = !DILocation(line: 1113, column: 11, scope: !6419)
!6434 = !DILocation(line: 1116, column: 18, scope: !6419)
!6435 = !DILocation(line: 1117, column: 12, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 1117, column: 11)
!6437 = !DILocation(line: 0, scope: !6420)
!6438 = !DILocation(line: 1121, column: 40, scope: !6411)
!6439 = !DILocation(line: 1121, column: 14, scope: !6411)
!6440 = !DILocation(line: 1122, column: 8, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1122, column: 7)
!6442 = !DILocation(line: 1126, column: 1, scope: !6411)
!6443 = distinct !DISubprogram(name: "ref_always_accessed_p", scope: !3, file: !3, line: 1907, type: !6444, scopeLine: 1908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6446)
!6444 = !DISubroutineType(types: !6445)
!6445 = !{!476, !1023, !1956, !476}
!6446 = !{!6447, !6448, !6449, !6450, !6451, !6452, !6453, !6454, !6455, !6456}
!6447 = !DILocalVariable(name: "loop", arg: 1, scope: !6443, file: !3, line: 1907, type: !1023)
!6448 = !DILocalVariable(name: "ref", arg: 2, scope: !6443, file: !3, line: 1907, type: !1956)
!6449 = !DILocalVariable(name: "stored_p", arg: 3, scope: !6443, file: !3, line: 1907, type: !476)
!6450 = !DILocalVariable(name: "locs", scope: !6443, file: !3, line: 1909, type: !1895)
!6451 = !DILocalVariable(name: "i", scope: !6443, file: !3, line: 1910, type: !7)
!6452 = !DILocalVariable(name: "loc", scope: !6443, file: !3, line: 1911, type: !1907)
!6453 = !DILocalVariable(name: "ret", scope: !6443, file: !3, line: 1912, type: !476)
!6454 = !DILocalVariable(name: "must_exec", scope: !6443, file: !3, line: 1913, type: !1023)
!6455 = !DILocalVariable(name: "base", scope: !6443, file: !3, line: 1914, type: !484)
!6456 = !DILocalVariable(name: "lhs", scope: !6457, file: !3, line: 1930, type: !484)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 1929, column: 2)
!6458 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 1928, column: 11)
!6459 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1922, column: 5)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 1921, column: 3)
!6461 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 1921, column: 3)
!6462 = !DILocation(line: 0, scope: !6443)
!6463 = !DILocation(line: 1909, column: 3, scope: !6443)
!6464 = !DILocation(line: 1909, column: 30, scope: !6443)
!6465 = !DILocation(line: 1911, column: 3, scope: !6443)
!6466 = !DILocation(line: 1916, column: 33, scope: !6443)
!6467 = !DILocation(line: 1916, column: 10, scope: !6443)
!6468 = !DILocation(line: 1917, column: 7, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 1917, column: 7)
!6470 = !DILocation(line: 1917, column: 7, scope: !6443)
!6471 = !DILocation(line: 1918, column: 12, scope: !6469)
!6472 = !DILocation(line: 1918, column: 5, scope: !6469)
!6473 = !DILocation(line: 1920, column: 3, scope: !6443)
!6474 = !DILocation(line: 1921, column: 8, scope: !6461)
!6475 = !DILocation(line: 0, scope: !6461)
!6476 = !DILocation(line: 1921, column: 15, scope: !6460)
!6477 = !DILocation(line: 1921, column: 3, scope: !6461)
!6478 = !DILocation(line: 1923, column: 26, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 1923, column: 11)
!6480 = !DILocation(line: 1923, column: 31, scope: !6479)
!6481 = !DILocation(line: 1923, column: 12, scope: !6479)
!6482 = !DILocation(line: 1923, column: 11, scope: !6459)
!6483 = !DILocation(line: 1931, column: 25, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 1931, column: 8)
!6485 = !DILocation(line: 1931, column: 30, scope: !6484)
!6486 = !DILocation(line: 1931, column: 9, scope: !6484)
!6487 = !DILocation(line: 1931, column: 8, scope: !6457)
!6488 = !DILocation(line: 1933, column: 44, scope: !6457)
!6489 = !DILocation(line: 1933, column: 49, scope: !6457)
!6490 = !DILocation(line: 1933, column: 28, scope: !6457)
!6491 = !DILocation(line: 1933, column: 10, scope: !6457)
!6492 = !DILocation(line: 0, scope: !6457)
!6493 = !DILocation(line: 1934, column: 9, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 1934, column: 8)
!6495 = !DILocation(line: 1934, column: 8, scope: !6457)
!6496 = !DILocation(line: 1936, column: 8, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 1936, column: 8)
!6498 = !DILocation(line: 1936, column: 8, scope: !6457)
!6499 = !DILocation(line: 1937, column: 12, scope: !6497)
!6500 = !DILocation(line: 1937, column: 6, scope: !6497)
!6501 = !DILocation(line: 1938, column: 12, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 1938, column: 8)
!6503 = !DILocation(line: 0, scope: !6458)
!6504 = !DILocation(line: 1942, column: 33, scope: !6459)
!6505 = !DILocation(line: 1942, column: 38, scope: !6459)
!6506 = !DILocation(line: 1942, column: 19, scope: !6459)
!6507 = !DILocation(line: 1942, column: 45, scope: !6459)
!6508 = !DILocation(line: 1943, column: 12, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 1943, column: 11)
!6510 = !DILocation(line: 1943, column: 11, scope: !6459)
!6511 = !DILocation(line: 1946, column: 21, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 1946, column: 11)
!6513 = !DILocation(line: 1947, column: 4, scope: !6512)
!6514 = !DILocation(line: 1947, column: 7, scope: !6512)
!6515 = !DILocation(line: 1946, column: 11, scope: !6459)
!6516 = !DILocation(line: 1921, column: 59, scope: !6460)
!6517 = !DILocation(line: 1921, column: 3, scope: !6460)
!6518 = distinct !{!6518, !6477, !6519}
!6519 = !DILocation(line: 1952, column: 5, scope: !6461)
!6520 = !DILocation(line: 1953, column: 3, scope: !6443)
!6521 = !DILocation(line: 1956, column: 1, scope: !6443)
!6522 = !DILocation(line: 1955, column: 3, scope: !6443)
!6523 = distinct !DISubprogram(name: "get_all_locs_in_loop", scope: !3, file: !3, line: 1678, type: !6524, scopeLine: 1680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6526)
!6524 = !DISubroutineType(types: !6525)
!6525 = !{null, !1023, !1956, !3709}
!6526 = !{!6527, !6528, !6529, !6530, !6531, !6532, !6533, !6534}
!6527 = !DILocalVariable(name: "loop", arg: 1, scope: !6523, file: !3, line: 1678, type: !1023)
!6528 = !DILocalVariable(name: "ref", arg: 2, scope: !6523, file: !3, line: 1678, type: !1956)
!6529 = !DILocalVariable(name: "locs", arg: 3, scope: !6523, file: !3, line: 1679, type: !3709)
!6530 = !DILocalVariable(name: "accs", scope: !6523, file: !3, line: 1681, type: !1890)
!6531 = !DILocalVariable(name: "i", scope: !6523, file: !3, line: 1682, type: !7)
!6532 = !DILocalVariable(name: "loc", scope: !6523, file: !3, line: 1683, type: !1907)
!6533 = !DILocalVariable(name: "refs", scope: !6523, file: !3, line: 1684, type: !1409)
!6534 = !DILocalVariable(name: "subloop", scope: !6523, file: !3, line: 1686, type: !1023)
!6535 = !DILocation(line: 0, scope: !6523)
!6536 = !DILocation(line: 1683, column: 3, scope: !6523)
!6537 = !DILocation(line: 1684, column: 17, scope: !6523)
!6538 = !DILocation(line: 1688, column: 33, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1688, column: 7)
!6540 = !DILocation(line: 1688, column: 8, scope: !6539)
!6541 = !DILocation(line: 1688, column: 7, scope: !6523)
!6542 = !DILocation(line: 1691, column: 7, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1691, column: 7)
!6544 = !DILocation(line: 1692, column: 26, scope: !6543)
!6545 = !DILocation(line: 1692, column: 7, scope: !6543)
!6546 = !DILocation(line: 1691, column: 7, scope: !6523)
!6547 = !DILocation(line: 1694, column: 14, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 1693, column: 5)
!6549 = !DILocation(line: 1695, column: 11, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 1695, column: 11)
!6551 = !DILocation(line: 1695, column: 11, scope: !6548)
!6552 = !DILocation(line: 0, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 1697, column: 4)
!6554 = distinct !DILexicalBlock(scope: !6555, file: !3, line: 1697, column: 4)
!6555 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 1696, column: 2)
!6556 = !DILocation(line: 1697, column: 4, scope: !6554)
!6557 = !DILocation(line: 0, scope: !6554)
!6558 = !DILocation(line: 1697, column: 16, scope: !6553)
!6559 = !DILocation(line: 1698, column: 6, scope: !6553)
!6560 = !DILocation(line: 1697, column: 66, scope: !6553)
!6561 = !DILocation(line: 1697, column: 4, scope: !6553)
!6562 = distinct !{!6562, !6556, !6563}
!6563 = !DILocation(line: 1698, column: 6, scope: !6554)
!6564 = !DILocation(line: 1702, column: 24, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1702, column: 3)
!6566 = !DILocation(line: 1702, column: 8, scope: !6565)
!6567 = !DILocation(line: 0, scope: !6565)
!6568 = !DILocation(line: 1702, column: 39, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 1702, column: 3)
!6570 = !DILocation(line: 1702, column: 3, scope: !6565)
!6571 = !DILocation(line: 1703, column: 5, scope: !6569)
!6572 = !DILocation(line: 1702, column: 67, scope: !6569)
!6573 = !DILocation(line: 1702, column: 3, scope: !6569)
!6574 = distinct !{!6574, !6570, !6575}
!6575 = !DILocation(line: 1703, column: 45, scope: !6565)
!6576 = !DILocation(line: 1704, column: 1, scope: !6523)
!6577 = distinct !DISubprogram(name: "execute_sm", scope: !3, file: !3, line: 1843, type: !6578, scopeLine: 1844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6580)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{null, !1023, !6234, !1956}
!6580 = !{!6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590}
!6581 = !DILocalVariable(name: "loop", arg: 1, scope: !6577, file: !3, line: 1843, type: !1023)
!6582 = !DILocalVariable(name: "exits", arg: 2, scope: !6577, file: !3, line: 1843, type: !6234)
!6583 = !DILocalVariable(name: "ref", arg: 3, scope: !6577, file: !3, line: 1843, type: !1956)
!6584 = !DILocalVariable(name: "tmp_var", scope: !6577, file: !3, line: 1845, type: !484)
!6585 = !DILocalVariable(name: "i", scope: !6577, file: !3, line: 1846, type: !7)
!6586 = !DILocalVariable(name: "load", scope: !6577, file: !3, line: 1847, type: !808)
!6587 = !DILocalVariable(name: "store", scope: !6577, file: !3, line: 1847, type: !808)
!6588 = !DILocalVariable(name: "fmt_data", scope: !6577, file: !3, line: 1848, type: !1999)
!6589 = !DILocalVariable(name: "ex", scope: !6577, file: !3, line: 1849, type: !788)
!6590 = !DILocalVariable(name: "lim_data", scope: !6577, file: !3, line: 1850, type: !1982)
!6591 = !DILocation(line: 0, scope: !6577)
!6592 = !DILocation(line: 1848, column: 3, scope: !6577)
!6593 = !DILocation(line: 1849, column: 3, scope: !6577)
!6594 = !DILocation(line: 1852, column: 7, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 1852, column: 7)
!6596 = !DILocation(line: 1852, column: 17, scope: !6595)
!6597 = !DILocation(line: 1852, column: 21, scope: !6595)
!6598 = !DILocation(line: 1852, column: 32, scope: !6595)
!6599 = !DILocation(line: 1852, column: 7, scope: !6577)
!6600 = !DILocation(line: 1854, column: 7, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 1853, column: 5)
!6602 = !DILocation(line: 1855, column: 27, scope: !6601)
!6603 = !DILocation(line: 1855, column: 43, scope: !6601)
!6604 = !DILocation(line: 1855, column: 7, scope: !6601)
!6605 = !DILocation(line: 1856, column: 16, scope: !6601)
!6606 = !DILocation(line: 1856, column: 52, scope: !6601)
!6607 = !DILocation(line: 1856, column: 7, scope: !6601)
!6608 = !DILocation(line: 1857, column: 5, scope: !6601)
!6609 = !DILocation(line: 1859, column: 31, scope: !6577)
!6610 = !DILocation(line: 1860, column: 33, scope: !6577)
!6611 = !DILocation(line: 1860, column: 10, scope: !6577)
!6612 = !DILocation(line: 1859, column: 13, scope: !6577)
!6613 = !DILocation(line: 1862, column: 12, scope: !6577)
!6614 = !DILocation(line: 1862, column: 17, scope: !6577)
!6615 = !DILocation(line: 1863, column: 12, scope: !6577)
!6616 = !DILocation(line: 1863, column: 22, scope: !6577)
!6617 = !DILocation(line: 1864, column: 25, scope: !6577)
!6618 = !DILocation(line: 1864, column: 3, scope: !6577)
!6619 = !DILocation(line: 1866, column: 3, scope: !6577)
!6620 = !DILocation(line: 1869, column: 10, scope: !6577)
!6621 = !DILocation(line: 1870, column: 14, scope: !6577)
!6622 = !DILocation(line: 1871, column: 13, scope: !6577)
!6623 = !DILocation(line: 1871, column: 22, scope: !6577)
!6624 = !DILocation(line: 1872, column: 13, scope: !6577)
!6625 = !DILocation(line: 1872, column: 22, scope: !6577)
!6626 = !DILocation(line: 1876, column: 23, scope: !6577)
!6627 = !DILocation(line: 1876, column: 3, scope: !6577)
!6628 = !DILocation(line: 0, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 1878, column: 3)
!6630 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 1878, column: 3)
!6631 = !DILocation(line: 1878, column: 8, scope: !6630)
!6632 = !DILocation(line: 0, scope: !6630)
!6633 = !DILocation(line: 1878, column: 15, scope: !6629)
!6634 = !DILocation(line: 1878, column: 3, scope: !6630)
!6635 = !DILocation(line: 1880, column: 15, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1879, column: 5)
!6637 = !DILocation(line: 1881, column: 27, scope: !6636)
!6638 = !DILocation(line: 1881, column: 7, scope: !6636)
!6639 = !DILocation(line: 1878, column: 50, scope: !6629)
!6640 = !DILocation(line: 1878, column: 3, scope: !6629)
!6641 = distinct !{!6641, !6634, !6642}
!6642 = !DILocation(line: 1882, column: 5, scope: !6630)
!6643 = !DILocation(line: 1883, column: 1, scope: !6577)
!6644 = distinct !DISubprogram(name: "force_move_till", scope: !3, file: !3, line: 1160, type: !2476, scopeLine: 1161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6645)
!6645 = !{!6646, !6647, !6648, !6649, !6650, !6653}
!6646 = !DILocalVariable(name: "ref", arg: 1, scope: !6644, file: !3, line: 1160, type: !484)
!6647 = !DILocalVariable(name: "index", arg: 2, scope: !6644, file: !3, line: 1160, type: !842)
!6648 = !DILocalVariable(name: "data", arg: 3, scope: !6644, file: !3, line: 1160, type: !481)
!6649 = !DILocalVariable(name: "fmt_data", scope: !6644, file: !3, line: 1162, type: !1998)
!6650 = !DILocalVariable(name: "step", scope: !6651, file: !3, line: 1166, type: !484)
!6651 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 1165, column: 5)
!6652 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 1164, column: 7)
!6653 = !DILocalVariable(name: "lbound", scope: !6651, file: !3, line: 1167, type: !484)
!6654 = !DILocation(line: 0, scope: !6644)
!6655 = !DILocation(line: 1164, column: 7, scope: !6652)
!6656 = !DILocation(line: 1164, column: 23, scope: !6652)
!6657 = !DILocation(line: 1164, column: 7, scope: !6644)
!6658 = !DILocation(line: 1173, column: 62, scope: !6644)
!6659 = !DILocation(line: 1166, column: 19, scope: !6651)
!6660 = !DILocation(line: 0, scope: !6651)
!6661 = !DILocation(line: 1167, column: 21, scope: !6651)
!6662 = !DILocation(line: 1169, column: 43, scope: !6651)
!6663 = !DILocation(line: 1169, column: 64, scope: !6651)
!6664 = !DILocation(line: 1169, column: 7, scope: !6651)
!6665 = !DILocation(line: 1170, column: 45, scope: !6651)
!6666 = !DILocation(line: 1170, column: 66, scope: !6651)
!6667 = !DILocation(line: 1170, column: 7, scope: !6651)
!6668 = !DILocation(line: 1171, column: 5, scope: !6651)
!6669 = !DILocation(line: 1173, column: 23, scope: !6644)
!6670 = !DILocation(line: 1173, column: 41, scope: !6644)
!6671 = !DILocation(line: 1173, column: 3, scope: !6644)
!6672 = !DILocation(line: 1175, column: 3, scope: !6644)
!6673 = distinct !DISubprogram(name: "rewrite_mem_refs", scope: !3, file: !3, line: 1709, type: !6674, scopeLine: 1710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6676)
!6674 = !DISubroutineType(types: !6675)
!6675 = !{null, !1023, !1956, !484}
!6676 = !{!6677, !6678, !6679, !6680, !6681, !6682}
!6677 = !DILocalVariable(name: "loop", arg: 1, scope: !6673, file: !3, line: 1709, type: !1023)
!6678 = !DILocalVariable(name: "ref", arg: 2, scope: !6673, file: !3, line: 1709, type: !1956)
!6679 = !DILocalVariable(name: "tmp_var", arg: 3, scope: !6673, file: !3, line: 1709, type: !484)
!6680 = !DILocalVariable(name: "i", scope: !6673, file: !3, line: 1711, type: !7)
!6681 = !DILocalVariable(name: "loc", scope: !6673, file: !3, line: 1712, type: !1907)
!6682 = !DILocalVariable(name: "locs", scope: !6673, file: !3, line: 1713, type: !1895)
!6683 = !DILocation(line: 0, scope: !6673)
!6684 = !DILocation(line: 1712, column: 3, scope: !6673)
!6685 = !DILocation(line: 1713, column: 3, scope: !6673)
!6686 = !DILocation(line: 1713, column: 30, scope: !6673)
!6687 = !DILocation(line: 1715, column: 3, scope: !6673)
!6688 = !DILocation(line: 1716, column: 8, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1716, column: 3)
!6690 = !DILocation(line: 0, scope: !6689)
!6691 = !DILocation(line: 1716, column: 15, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1716, column: 3)
!6693 = !DILocation(line: 1716, column: 3, scope: !6689)
!6694 = !DILocation(line: 1717, column: 26, scope: !6692)
!6695 = !DILocation(line: 1717, column: 5, scope: !6692)
!6696 = !DILocation(line: 1716, column: 59, scope: !6692)
!6697 = !DILocation(line: 1716, column: 3, scope: !6692)
!6698 = distinct !{!6698, !6693, !6699}
!6699 = !DILocation(line: 1717, column: 38, scope: !6689)
!6700 = !DILocation(line: 1718, column: 3, scope: !6673)
!6701 = !DILocation(line: 1719, column: 1, scope: !6673)
!6702 = distinct !DISubprogram(name: "force_move_till_op", scope: !3, file: !3, line: 1132, type: !6703, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6705)
!6703 = !DISubroutineType(types: !6704)
!6704 = !{null, !484, !1023, !1023}
!6705 = !{!6706, !6707, !6708, !6709}
!6706 = !DILocalVariable(name: "op", arg: 1, scope: !6702, file: !3, line: 1132, type: !484)
!6707 = !DILocalVariable(name: "orig_loop", arg: 2, scope: !6702, file: !3, line: 1132, type: !1023)
!6708 = !DILocalVariable(name: "loop", arg: 3, scope: !6702, file: !3, line: 1132, type: !1023)
!6709 = !DILocalVariable(name: "stmt", scope: !6702, file: !3, line: 1134, type: !808)
!6710 = !DILocation(line: 0, scope: !6702)
!6711 = !DILocation(line: 1136, column: 8, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 1136, column: 7)
!6713 = !DILocation(line: 1137, column: 7, scope: !6712)
!6714 = !DILocation(line: 1137, column: 10, scope: !6712)
!6715 = !DILocation(line: 1136, column: 7, scope: !6702)
!6716 = !DILocation(line: 1140, column: 3, scope: !6702)
!6717 = !DILocation(line: 1142, column: 10, scope: !6702)
!6718 = !DILocation(line: 1143, column: 7, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 1143, column: 7)
!6720 = !DILocation(line: 1143, column: 7, scope: !6702)
!6721 = !DILocation(line: 1146, column: 3, scope: !6702)
!6722 = !DILocation(line: 1147, column: 1, scope: !6702)
!6723 = distinct !DISubprogram(name: "gimple_nop_p", scope: !397, file: !397, line: 4304, type: !2610, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6724)
!6724 = !{!6725}
!6725 = !DILocalVariable(name: "g", arg: 1, scope: !6723, file: !397, line: 4304, type: !2591)
!6726 = !DILocation(line: 0, scope: !6723)
!6727 = !DILocation(line: 4306, column: 10, scope: !6723)
!6728 = !DILocation(line: 4306, column: 26, scope: !6723)
!6729 = !DILocation(line: 4306, column: 3, scope: !6723)
!6730 = distinct !DISubprogram(name: "rewrite_mem_ref_loc", scope: !3, file: !3, line: 1668, type: !6731, scopeLine: 1669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6733)
!6731 = !DISubroutineType(types: !6732)
!6732 = !{null, !1907, !484}
!6733 = !{!6734, !6735}
!6734 = !DILocalVariable(name: "loc", arg: 1, scope: !6730, file: !3, line: 1668, type: !1907)
!6735 = !DILocalVariable(name: "tmp_var", arg: 2, scope: !6730, file: !3, line: 1668, type: !484)
!6736 = !DILocation(line: 0, scope: !6730)
!6737 = !DILocation(line: 1670, column: 39, scope: !6730)
!6738 = !DILocation(line: 1670, column: 3, scope: !6730)
!6739 = !DILocation(line: 1671, column: 9, scope: !6730)
!6740 = !DILocation(line: 1671, column: 13, scope: !6730)
!6741 = !DILocation(line: 1672, column: 21, scope: !6730)
!6742 = !DILocation(line: 1672, column: 3, scope: !6730)
!6743 = !DILocation(line: 1673, column: 1, scope: !6730)
!6744 = distinct !DISubprogram(name: "update_stmt", scope: !397, file: !397, line: 1456, type: !5369, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6745)
!6745 = !{!6746}
!6746 = !DILocalVariable(name: "s", arg: 1, scope: !6744, file: !397, line: 1456, type: !808)
!6747 = !DILocation(line: 0, scope: !6744)
!6748 = !DILocation(line: 1458, column: 7, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6744, file: !397, line: 1458, column: 7)
!6750 = !DILocation(line: 1458, column: 7, scope: !6744)
!6751 = !DILocation(line: 1460, column: 7, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6749, file: !397, line: 1459, column: 5)
!6753 = !DILocation(line: 1461, column: 7, scope: !6752)
!6754 = !DILocation(line: 1462, column: 5, scope: !6752)
!6755 = !DILocation(line: 1463, column: 1, scope: !6744)
!6756 = distinct !DISubprogram(name: "move_computations_stmt", scope: !3, file: !3, line: 1024, type: !2879, scopeLine: 1026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6757)
!6757 = !{!6758, !6759, !6760, !6761, !6762, !6763, !6764}
!6758 = !DILocalVariable(name: "dw_data", arg: 1, scope: !6756, file: !3, line: 1024, type: !2876)
!6759 = !DILocalVariable(name: "bb", arg: 2, scope: !6756, file: !3, line: 1025, type: !1293)
!6760 = !DILocalVariable(name: "level", scope: !6756, file: !3, line: 1027, type: !1023)
!6761 = !DILocalVariable(name: "bsi", scope: !6756, file: !3, line: 1028, type: !2763)
!6762 = !DILocalVariable(name: "stmt", scope: !6756, file: !3, line: 1029, type: !808)
!6763 = !DILocalVariable(name: "cost", scope: !6756, file: !3, line: 1030, type: !7)
!6764 = !DILocalVariable(name: "lim_data", scope: !6756, file: !3, line: 1031, type: !1982)
!6765 = !DILocation(line: 0, scope: !6756)
!6766 = !DILocation(line: 1028, column: 3, scope: !6756)
!6767 = !DILocation(line: 1033, column: 24, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 1033, column: 7)
!6769 = !DILocation(line: 1033, column: 8, scope: !6768)
!6770 = !DILocation(line: 1033, column: 7, scope: !6756)
!6771 = !DILocation(line: 1036, column: 14, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 1036, column: 3)
!6773 = !DILocation(line: 1036, column: 8, scope: !6772)
!6774 = !DILocation(line: 1036, column: 34, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 1036, column: 3)
!6776 = !DILocation(line: 1036, column: 33, scope: !6775)
!6777 = !DILocation(line: 1036, column: 3, scope: !6772)
!6778 = !DILocation(line: 1038, column: 14, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 1037, column: 5)
!6780 = !DILocation(line: 1040, column: 18, scope: !6779)
!6781 = !DILocation(line: 1041, column: 20, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 1041, column: 11)
!6783 = !DILocation(line: 1041, column: 11, scope: !6779)
!6784 = !DILocation(line: 1043, column: 4, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 1042, column: 2)
!6786 = !DILocation(line: 1044, column: 4, scope: !6785)
!6787 = distinct !{!6787, !6777, !6788}
!6788 = !DILocation(line: 1073, column: 5, scope: !6772)
!6789 = !DILocation(line: 1047, column: 24, scope: !6779)
!6790 = !DILocation(line: 1048, column: 25, scope: !6779)
!6791 = !DILocation(line: 1049, column: 7, scope: !6779)
!6792 = !DILocation(line: 1051, column: 12, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 1051, column: 11)
!6794 = !DILocation(line: 1051, column: 11, scope: !6779)
!6795 = !DILocation(line: 1053, column: 4, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 1052, column: 2)
!6797 = !DILocation(line: 1054, column: 4, scope: !6796)
!6798 = !DILocation(line: 1059, column: 11, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 1059, column: 11)
!6800 = !DILocation(line: 1059, column: 30, scope: !6799)
!6801 = !DILocation(line: 1059, column: 11, scope: !6779)
!6802 = !DILocation(line: 1062, column: 11, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 1062, column: 11)
!6804 = !DILocation(line: 1062, column: 21, scope: !6803)
!6805 = !DILocation(line: 1062, column: 25, scope: !6803)
!6806 = !DILocation(line: 1062, column: 36, scope: !6803)
!6807 = !DILocation(line: 1062, column: 11, scope: !6779)
!6808 = !DILocation(line: 1064, column: 4, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 1063, column: 2)
!6810 = !DILocation(line: 1065, column: 23, scope: !6809)
!6811 = !DILocation(line: 1065, column: 4, scope: !6809)
!6812 = !DILocation(line: 1066, column: 13, scope: !6809)
!6813 = !DILocation(line: 1067, column: 19, scope: !6809)
!6814 = !DILocation(line: 1066, column: 4, scope: !6809)
!6815 = !DILocation(line: 1068, column: 2, scope: !6809)
!6816 = !DILocation(line: 1070, column: 7, scope: !6779)
!6817 = !DILocation(line: 1071, column: 27, scope: !6779)
!6818 = !DILocation(line: 1071, column: 7, scope: !6779)
!6819 = !DILocation(line: 1072, column: 7, scope: !6779)
!6820 = !DILocation(line: 1036, column: 3, scope: !6775)
!6821 = !DILocation(line: 1074, column: 1, scope: !6756)
!6822 = distinct !DISubprogram(name: "clear_lim_data", scope: !3, file: !3, line: 241, type: !5369, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6823)
!6823 = !{!6824, !6825}
!6824 = !DILocalVariable(name: "stmt", arg: 1, scope: !6822, file: !3, line: 241, type: !808)
!6825 = !DILocalVariable(name: "p", scope: !6822, file: !3, line: 243, type: !1347)
!6826 = !DILocation(line: 0, scope: !6822)
!6827 = !DILocation(line: 243, column: 36, scope: !6822)
!6828 = !DILocation(line: 243, column: 54, scope: !6822)
!6829 = !DILocation(line: 243, column: 14, scope: !6822)
!6830 = !DILocation(line: 244, column: 8, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 244, column: 7)
!6832 = !DILocation(line: 244, column: 7, scope: !6822)
!6833 = !DILocation(line: 247, column: 46, scope: !6822)
!6834 = !DILocation(line: 247, column: 3, scope: !6822)
!6835 = !DILocation(line: 248, column: 6, scope: !6822)
!6836 = !DILocation(line: 249, column: 1, scope: !6822)
!6837 = distinct !DISubprogram(name: "free_lim_aux_data", scope: !3, file: !3, line: 228, type: !6838, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6840)
!6838 = !DISubroutineType(types: !6839)
!6839 = !{null, !1982}
!6840 = !{!6841, !6842, !6843}
!6841 = !DILocalVariable(name: "data", arg: 1, scope: !6837, file: !3, line: 228, type: !1982)
!6842 = !DILocalVariable(name: "dep", scope: !6837, file: !3, line: 230, type: !1990)
!6843 = !DILocalVariable(name: "next", scope: !6837, file: !3, line: 230, type: !1990)
!6844 = !DILocation(line: 0, scope: !6837)
!6845 = !DILocation(line: 232, column: 20, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 232, column: 3)
!6847 = !DILocation(line: 232, column: 8, scope: !6846)
!6848 = !DILocation(line: 0, scope: !6846)
!6849 = !DILocation(line: 232, column: 3, scope: !6846)
!6850 = !DILocation(line: 234, column: 19, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 233, column: 5)
!6852 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 232, column: 3)
!6853 = !DILocation(line: 235, column: 7, scope: !6851)
!6854 = !DILocation(line: 232, column: 3, scope: !6852)
!6855 = distinct !{!6855, !6849, !6856}
!6856 = !DILocation(line: 236, column: 5, scope: !6846)
!6857 = !DILocation(line: 237, column: 9, scope: !6837)
!6858 = !DILocation(line: 237, column: 3, scope: !6837)
!6859 = !DILocation(line: 238, column: 1, scope: !6837)
!6860 = distinct !DISubprogram(name: "VEC_mem_ref_p_heap_free", scope: !3, file: !3, line: 161, type: !6861, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6863)
!6861 = !DISubroutineType(types: !6862)
!6862 = !{null, !4094}
!6863 = !{!6864}
!6864 = !DILocalVariable(name: "vec_", arg: 1, scope: !6860, file: !3, line: 161, type: !4094)
!6865 = !DILocation(line: 0, scope: !6860)
!6866 = !DILocation(line: 161, column: 1, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 161, column: 1)
!6868 = !DILocation(line: 161, column: 1, scope: !6860)
!6869 = distinct !DISubprogram(name: "VEC_bitmap_base_iterate", scope: !3, file: !3, line: 163, type: !6870, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6872)
!6870 = !DISubroutineType(types: !6871)
!6871 = !{!477, !3944, !7, !3487}
!6872 = !{!6873, !6874, !6875}
!6873 = !DILocalVariable(name: "vec_", arg: 1, scope: !6869, file: !3, line: 163, type: !3944)
!6874 = !DILocalVariable(name: "ix_", arg: 2, scope: !6869, file: !3, line: 163, type: !7)
!6875 = !DILocalVariable(name: "ptr", arg: 3, scope: !6869, file: !3, line: 163, type: !3487)
!6876 = !DILocation(line: 0, scope: !6869)
!6877 = !DILocation(line: 163, column: 1, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 163, column: 1)
!6879 = !DILocation(line: 163, column: 1, scope: !6869)
!6880 = !DILocation(line: 163, column: 1, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 163, column: 1)
!6882 = !DILocation(line: 163, column: 1, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 163, column: 1)
!6884 = !DILocation(line: 0, scope: !6878)
!6885 = distinct !DISubprogram(name: "VEC_bitmap_heap_free", scope: !3, file: !3, line: 164, type: !6886, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6889)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{null, !6888}
!6888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!6889 = !{!6890}
!6890 = !DILocalVariable(name: "vec_", arg: 1, scope: !6885, file: !3, line: 164, type: !6888)
!6891 = !DILocation(line: 0, scope: !6885)
!6892 = !DILocation(line: 164, column: 1, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 164, column: 1)
!6894 = !DILocation(line: 164, column: 1, scope: !6885)
!6895 = distinct !DISubprogram(name: "VEC_htab_t_base_iterate", scope: !3, file: !3, line: 166, type: !6896, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6898)
!6896 = !DISubroutineType(types: !6897)
!6897 = !{!477, !4658, !7, !3529}
!6898 = !{!6899, !6900, !6901}
!6899 = !DILocalVariable(name: "vec_", arg: 1, scope: !6895, file: !3, line: 166, type: !4658)
!6900 = !DILocalVariable(name: "ix_", arg: 2, scope: !6895, file: !3, line: 166, type: !7)
!6901 = !DILocalVariable(name: "ptr", arg: 3, scope: !6895, file: !3, line: 166, type: !3529)
!6902 = !DILocation(line: 0, scope: !6895)
!6903 = !DILocation(line: 166, column: 1, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 166, column: 1)
!6905 = !DILocation(line: 166, column: 1, scope: !6895)
!6906 = !DILocation(line: 166, column: 1, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 166, column: 1)
!6908 = !DILocation(line: 166, column: 1, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 166, column: 1)
!6910 = !DILocation(line: 0, scope: !6904)
!6911 = distinct !DISubprogram(name: "VEC_htab_t_heap_free", scope: !3, file: !3, line: 167, type: !6912, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6915)
!6912 = !DISubroutineType(types: !6913)
!6913 = !{null, !6914}
!6914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!6915 = !{!6916}
!6916 = !DILocalVariable(name: "vec_", arg: 1, scope: !6911, file: !3, line: 167, type: !6914)
!6917 = !DILocation(line: 0, scope: !6911)
!6918 = !DILocation(line: 167, column: 1, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 167, column: 1)
!6920 = !DILocation(line: 167, column: 1, scope: !6911)
