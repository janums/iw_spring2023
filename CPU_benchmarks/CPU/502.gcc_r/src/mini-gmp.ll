; ModuleID = 'mini-gmp.bc'
source_filename = "mini-gmp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.mpn_base_info = type { i32, i64 }
%struct.gmp_div_inverse = type { i32, i64, i64, i64 }
%struct.__mpz_struct = type { i32, i32, i64* }

@mp_bits_per_limb = dso_local local_unnamed_addr constant i32 64, align 4, !dbg !0
@gmp_allocate_func = internal unnamed_addr global i8* (i64)* @gmp_default_alloc, align 8, !dbg !29
@gmp_reallocate_func = internal unnamed_addr global i8* (i8*, i64, i64)* @gmp_default_realloc, align 8, !dbg !36
@gmp_free_func = internal unnamed_addr global void (i8*, i64)* @gmp_default_free, align 8, !dbg !41
@.str = private unnamed_addr constant [6 x i8] c"n > 0\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"mini-gmp.c\00", align 1
@__PRETTY_FUNCTION__.mpn_add_1 = private unnamed_addr constant [61 x i8] c"mp_limb_t mpn_add_1(mp_ptr, mp_srcptr, mp_size_t, mp_limb_t)\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"an >= bn\00", align 1
@__PRETTY_FUNCTION__.mpn_add = private unnamed_addr constant [70 x i8] c"mp_limb_t mpn_add(mp_ptr, mp_srcptr, mp_size_t, mp_srcptr, mp_size_t)\00", align 1
@__PRETTY_FUNCTION__.mpn_sub_1 = private unnamed_addr constant [61 x i8] c"mp_limb_t mpn_sub_1(mp_ptr, mp_srcptr, mp_size_t, mp_limb_t)\00", align 1
@__PRETTY_FUNCTION__.mpn_sub = private unnamed_addr constant [70 x i8] c"mp_limb_t mpn_sub(mp_ptr, mp_srcptr, mp_size_t, mp_srcptr, mp_size_t)\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"n >= 1\00", align 1
@__PRETTY_FUNCTION__.mpn_mul_1 = private unnamed_addr constant [61 x i8] c"mp_limb_t mpn_mul_1(mp_ptr, mp_srcptr, mp_size_t, mp_limb_t)\00", align 1
@__PRETTY_FUNCTION__.mpn_addmul_1 = private unnamed_addr constant [64 x i8] c"mp_limb_t mpn_addmul_1(mp_ptr, mp_srcptr, mp_size_t, mp_limb_t)\00", align 1
@__PRETTY_FUNCTION__.mpn_submul_1 = private unnamed_addr constant [64 x i8] c"mp_limb_t mpn_submul_1(mp_ptr, mp_srcptr, mp_size_t, mp_limb_t)\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"un >= vn\00", align 1
@__PRETTY_FUNCTION__.mpn_mul = private unnamed_addr constant [70 x i8] c"mp_limb_t mpn_mul(mp_ptr, mp_srcptr, mp_size_t, mp_srcptr, mp_size_t)\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"vn >= 1\00", align 1
@__PRETTY_FUNCTION__.mpn_lshift = private unnamed_addr constant [65 x i8] c"mp_limb_t mpn_lshift(mp_ptr, mp_srcptr, mp_size_t, unsigned int)\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"cnt >= 1\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"cnt < GMP_LIMB_BITS\00", align 1
@__PRETTY_FUNCTION__.mpn_rshift = private unnamed_addr constant [65 x i8] c"mp_limb_t mpn_rshift(mp_ptr, mp_srcptr, mp_size_t, unsigned int)\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"u1 >= GMP_LIMB_HIGHBIT\00", align 1
@__PRETTY_FUNCTION__.mpn_invert_3by2 = private unnamed_addr constant [48 x i8] c"mp_limb_t mpn_invert_3by2(mp_limb_t, mp_limb_t)\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"un > 0\00", align 1
@__PRETTY_FUNCTION__.mpn_get_str = private unnamed_addr constant [60 x i8] c"size_t mpn_get_str(unsigned char *, int, mp_ptr, mp_size_t)\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"up[un-1] > 0\00", align 1
@__PRETTY_FUNCTION__.mpz_limbs_modify = private unnamed_addr constant [51 x i8] c"mp_ptr mpz_limbs_modify(__mpz_struct *, mp_size_t)\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"x < 1.0\00", align 1
@__PRETTY_FUNCTION__.mpz_set_d = private unnamed_addr constant [39 x i8] c"void mpz_set_d(__mpz_struct *, double)\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"__cy == 0\00", align 1
@__PRETTY_FUNCTION__.mpz_divexact = private unnamed_addr constant [78 x i8] c"void mpz_divexact(__mpz_struct *, const __mpz_struct *, const __mpz_struct *)\00", align 1
@__PRETTY_FUNCTION__.mpz_divexact_ui = private unnamed_addr constant [74 x i8] c"void mpz_divexact_ui(__mpz_struct *, const __mpz_struct *, unsigned long)\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"mpz_powm: Zero modulo.\00", align 1
@__PRETTY_FUNCTION__.mpz_powm = private unnamed_addr constant [96 x i8] c"void mpz_powm(__mpz_struct *, const __mpz_struct *, const __mpz_struct *, const __mpz_struct *)\00", align 1
@.str.14 = private unnamed_addr constant [53 x i8] c"mpz_powm: Negative exponent and non-invertible base.\00", align 1
@.str.15 = private unnamed_addr constant [48 x i8] c"mpz_rootrem: Negative argument, with even root.\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"mpz_rootrem: Zeroth root.\00", align 1
@__PRETTY_FUNCTION__.mpn_perfect_square_p = private unnamed_addr constant [47 x i8] c"int mpn_perfect_square_p(mp_srcptr, mp_size_t)\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"p [n-1] != 0\00", align 1
@__PRETTY_FUNCTION__.mpn_sqrtrem = private unnamed_addr constant [60 x i8] c"mp_size_t mpn_sqrtrem(mp_ptr, mp_ptr, mp_srcptr, mp_size_t)\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"s->_mp_size == (n+1)/2\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"n->_mp_size != 0\00", align 1
@__PRETTY_FUNCTION__.mpz_probab_prime_p = private unnamed_addr constant [50 x i8] c"int mpz_probab_prime_p(const __mpz_struct *, int)\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"j >= 30\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"vc == 0\00", align 1
@__PRETTY_FUNCTION__.mpz_and = private unnamed_addr constant [73 x i8] c"void mpz_and(__mpz_struct *, const __mpz_struct *, const __mpz_struct *)\00", align 1
@__PRETTY_FUNCTION__.mpz_ior = private unnamed_addr constant [73 x i8] c"void mpz_ior(__mpz_struct *, const __mpz_struct *, const __mpz_struct *)\00", align 1
@__PRETTY_FUNCTION__.mpz_xor = private unnamed_addr constant [73 x i8] c"void mpz_xor(__mpz_struct *, const __mpz_struct *, const __mpz_struct *)\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"vn < 0\00", align 1
@__PRETTY_FUNCTION__.mpz_hamdist = private unnamed_addr constant [68 x i8] c"mp_bitcnt_t mpz_hamdist(const __mpz_struct *, const __mpz_struct *)\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"base >= 2\00", align 1
@__PRETTY_FUNCTION__.mpz_sizeinbase = private unnamed_addr constant [49 x i8] c"size_t mpz_sizeinbase(const __mpz_struct *, int)\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"base <= 36\00", align 1
@.str.25 = private unnamed_addr constant [37 x i8] c"0123456789abcdefghijklmnopqrstuvwxyz\00", align 1
@.str.26 = private unnamed_addr constant [37 x i8] c"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\00", align 1
@.str.27 = private unnamed_addr constant [39 x i8] c"base == 0 || (base >= 2 && base <= 36)\00", align 1
@__PRETTY_FUNCTION__.mpz_set_str = private unnamed_addr constant [51 x i8] c"int mpz_set_str(__mpz_struct *, const char *, int)\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"rn <= alloc\00", align 1
@.str.29 = private unnamed_addr constant [33 x i8] c"mpz_import: Nails not supported.\00", align 1
@.str.30 = private unnamed_addr constant [26 x i8] c"order == 1 || order == -1\00", align 1
@__PRETTY_FUNCTION__.mpz_import = private unnamed_addr constant [80 x i8] c"void mpz_import(__mpz_struct *, size_t, int, size_t, int, size_t, const void *)\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"endian >= -1 && endian <= 1\00", align 1
@.str.32 = private unnamed_addr constant [22 x i8] c"i + (bytes > 0) == rn\00", align 1
@__PRETTY_FUNCTION__.mpz_export = private unnamed_addr constant [83 x i8] c"void *mpz_export(void *, size_t *, int, size_t, int, size_t, const __mpz_struct *)\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"size > 0 || u->_mp_size == 0\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"limb != 0\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"i == un\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"k == count\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"size > 0\00", align 1
@__PRETTY_FUNCTION__.gmp_default_alloc = private unnamed_addr constant [32 x i8] c"void *gmp_default_alloc(size_t)\00", align 1
@.str.38 = private unnamed_addr constant [45 x i8] c"gmp_default_alloc: Virtual memory exhausted.\00", align 1
@.str.39 = private unnamed_addr constant [46 x i8] c"gmp_default_realoc: Virtual memory exhausted.\00", align 1
@.str.40 = private unnamed_addr constant [30 x i8] c"ux == 0 || ux == GMP_LIMB_MAX\00", align 1
@__PRETTY_FUNCTION__.mpn_common_scan = private unnamed_addr constant [83 x i8] c"mp_bitcnt_t mpn_common_scan(mp_limb_t, mp_size_t, mp_srcptr, mp_size_t, mp_limb_t)\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"0 <= i && i <= un\00", align 1
@.str.42 = private unnamed_addr constant [42 x i8] c"(r << (GMP_LIMB_BITS - binv->shift)) == 0\00", align 1
@__PRETTY_FUNCTION__.mpn_limb_get_str = private unnamed_addr constant [84 x i8] c"size_t mpn_limb_get_str(unsigned char *, mp_limb_t, const struct gmp_div_inverse *)\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"j == sn\00", align 1
@__PRETTY_FUNCTION__.mpn_set_str_other = private unnamed_addr constant [108 x i8] c"mp_size_t mpn_set_str_other(mp_ptr, const unsigned char *, size_t, mp_limb_t, const struct mpn_base_info *)\00", align 1
@__PRETTY_FUNCTION__.gmp_xrealloc_limbs = private unnamed_addr constant [45 x i8] c"mp_ptr gmp_xrealloc_limbs(mp_ptr, mp_size_t)\00", align 1
@__PRETTY_FUNCTION__.mpz_abs_sub_ui = private unnamed_addr constant [78 x i8] c"mp_size_t mpz_abs_sub_ui(__mpz_struct *, const __mpz_struct *, unsigned long)\00", align 1
@__PRETTY_FUNCTION__.mpz_abs_sub = private unnamed_addr constant [82 x i8] c"mp_size_t mpz_abs_sub(__mpz_struct *, const __mpz_struct *, const __mpz_struct *)\00", align 1
@.str.44 = private unnamed_addr constant [28 x i8] c"mpz_div_qr: Divide by zero.\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"dn > 0\00", align 1
@__PRETTY_FUNCTION__.mpn_div_qr = private unnamed_addr constant [65 x i8] c"void mpn_div_qr(mp_ptr, mp_ptr, mp_size_t, mp_srcptr, mp_size_t)\00", align 1
@.str.46 = private unnamed_addr constant [9 x i8] c"nn >= dn\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"rn > 0\00", align 1
@__PRETTY_FUNCTION__.mpz_div_r_2exp = private unnamed_addr constant [96 x i8] c"void mpz_div_r_2exp(__mpz_struct *, const __mpz_struct *, mp_bitcnt_t, enum mpz_div_round_mode)\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"cy == 0\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"rl < d\00", align 1
@__PRETTY_FUNCTION__.mpz_div_qr_ui = private unnamed_addr constant [122 x i8] c"unsigned long mpz_div_qr_ui(__mpz_struct *, __mpz_struct *, const __mpz_struct *, unsigned long, enum mpz_div_round_mode)\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"qn == 0 || qp[qn-1] > 0\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"(u | v) > 0\00", align 1
@__PRETTY_FUNCTION__.mpn_gcd_11 = private unnamed_addr constant [43 x i8] c"mp_limb_t mpn_gcd_11(mp_limb_t, mp_limb_t)\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"d > 0\00", align 1
@__PRETTY_FUNCTION__.mpn_div_qr_1 = private unnamed_addr constant [64 x i8] c"mp_limb_t mpn_div_qr_1(mp_ptr, mp_srcptr, mp_size_t, mp_limb_t)\00", align 1
@.str.53 = private unnamed_addr constant [16 x i8] c"r->_mp_size > 0\00", align 1
@__PRETTY_FUNCTION__.mpz_make_odd = private unnamed_addr constant [41 x i8] c"mp_bitcnt_t mpz_make_odd(__mpz_struct *)\00", align 1
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.54 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@__PRETTY_FUNCTION__.mpn_div_qr_invert = private unnamed_addr constant [71 x i8] c"void mpn_div_qr_invert(struct gmp_div_inverse *, mp_srcptr, mp_size_t)\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"d1 > 0\00", align 1
@__PRETTY_FUNCTION__.mpn_div_qr_2_invert = private unnamed_addr constant [73 x i8] c"void mpn_div_qr_2_invert(struct gmp_div_inverse *, mp_limb_t, mp_limb_t)\00", align 1
@__PRETTY_FUNCTION__.mpn_div_qr_preinv = private unnamed_addr constant [104 x i8] c"void mpn_div_qr_preinv(mp_ptr, mp_ptr, mp_size_t, mp_srcptr, mp_size_t, const struct gmp_div_inverse *)\00", align 1
@.str.56 = private unnamed_addr constant [20 x i8] c"inv->d1 == dp[dn-1]\00", align 1
@.str.57 = private unnamed_addr constant [20 x i8] c"inv->d0 == dp[dn-2]\00", align 1
@.str.58 = private unnamed_addr constant [34 x i8] c"(inv->d1 & GMP_LIMB_HIGHBIT) != 0\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"nn >= 2\00", align 1
@__PRETTY_FUNCTION__.mpn_div_qr_2_preinv = private unnamed_addr constant [95 x i8] c"void mpn_div_qr_2_preinv(mp_ptr, mp_ptr, mp_srcptr, mp_size_t, const struct gmp_div_inverse *)\00", align 1
@.str.60 = private unnamed_addr constant [37 x i8] c"(r0 << (GMP_LIMB_BITS - shift)) == 0\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"dn > 2\00", align 1
@__PRETTY_FUNCTION__.mpn_div_qr_pi1 = private unnamed_addr constant [91 x i8] c"void mpn_div_qr_pi1(mp_ptr, mp_ptr, mp_size_t, mp_limb_t, mp_srcptr, mp_size_t, mp_limb_t)\00", align 1
@.str.62 = private unnamed_addr constant [29 x i8] c"(d1 & GMP_LIMB_HIGHBIT) != 0\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"k > 0\00", align 1
@__PRETTY_FUNCTION__.gmp_millerrabin = private unnamed_addr constant [115 x i8] c"int gmp_millerrabin(const __mpz_struct *, const __mpz_struct *, __mpz_struct *, const __mpz_struct *, mp_bitcnt_t)\00", align 1
@.str.64 = private unnamed_addr constant [16 x i8] c"limb_index < dn\00", align 1
@__PRETTY_FUNCTION__.mpz_abs_sub_bit = private unnamed_addr constant [50 x i8] c"void mpz_abs_sub_bit(__mpz_struct *, mp_bitcnt_t)\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"u > 0\00", align 1
@__PRETTY_FUNCTION__.mpn_limb_size_in_base_2 = private unnamed_addr constant [47 x i8] c"mp_bitcnt_t mpn_limb_size_in_base_2(mp_limb_t)\00", align 1
@__PRETTY_FUNCTION__.mpn_div_qr_1_invert = private unnamed_addr constant [62 x i8] c"void mpn_div_qr_1_invert(struct gmp_div_inverse *, mp_limb_t)\00", align 1

; Function Attrs: nounwind uwtable
define dso_local void @mp_get_memory_functions(i8* (i64)** %alloc_func, i8* (i8*, i64, i64)** %realloc_func, void (i8*, i64)** %free_func) local_unnamed_addr #0 !dbg !58 {
entry:
  call void @llvm.dbg.value(metadata i8* (i64)** %alloc_func, metadata !65, metadata !DIExpression()), !dbg !68
  call void @llvm.dbg.value(metadata i8* (i8*, i64, i64)** %realloc_func, metadata !66, metadata !DIExpression()), !dbg !68
  call void @llvm.dbg.value(metadata void (i8*, i64)** %free_func, metadata !67, metadata !DIExpression()), !dbg !68
  %tobool = icmp eq i8* (i64)** %alloc_func, null, !dbg !69
  br i1 %tobool, label %if.end, label %if.then, !dbg !71

if.then:                                          ; preds = %entry
  %0 = load i64, i64* bitcast (i8* (i64)** @gmp_allocate_func to i64*), align 8, !dbg !72, !tbaa !73
  %1 = bitcast i8* (i64)** %alloc_func to i64*, !dbg !77
  store i64 %0, i64* %1, align 8, !dbg !77, !tbaa !73
  br label %if.end, !dbg !78

if.end:                                           ; preds = %entry, %if.then
  %tobool1 = icmp eq i8* (i8*, i64, i64)** %realloc_func, null, !dbg !79
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !81

if.then2:                                         ; preds = %if.end
  %2 = load i64, i64* bitcast (i8* (i8*, i64, i64)** @gmp_reallocate_func to i64*), align 8, !dbg !82, !tbaa !73
  %3 = bitcast i8* (i8*, i64, i64)** %realloc_func to i64*, !dbg !83
  store i64 %2, i64* %3, align 8, !dbg !83, !tbaa !73
  br label %if.end3, !dbg !84

if.end3:                                          ; preds = %if.end, %if.then2
  %tobool4 = icmp eq void (i8*, i64)** %free_func, null, !dbg !85
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !87

if.then5:                                         ; preds = %if.end3
  %4 = load i64, i64* bitcast (void (i8*, i64)** @gmp_free_func to i64*), align 8, !dbg !88, !tbaa !73
  %5 = bitcast void (i8*, i64)** %free_func to i64*, !dbg !89
  store i64 %4, i64* %5, align 8, !dbg !89, !tbaa !73
  br label %if.end6, !dbg !90

if.end6:                                          ; preds = %if.end3, %if.then5
  ret void, !dbg !91
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define dso_local void @mp_set_memory_functions(i8* (i64)* %alloc_func, i8* (i8*, i64, i64)* %realloc_func, void (i8*, i64)* %free_func) local_unnamed_addr #0 !dbg !92 {
entry:
  call void @llvm.dbg.value(metadata i8* (i64)* %alloc_func, metadata !96, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata i8* (i8*, i64, i64)* %realloc_func, metadata !97, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata void (i8*, i64)* %free_func, metadata !98, metadata !DIExpression()), !dbg !99
  %tobool = icmp eq i8* (i64)* %alloc_func, null, !dbg !100
  %spec.select = select i1 %tobool, i8* (i64)* @gmp_default_alloc, i8* (i64)* %alloc_func, !dbg !102
  call void @llvm.dbg.value(metadata i8* (i64)* %spec.select, metadata !96, metadata !DIExpression()), !dbg !99
  %tobool1 = icmp eq i8* (i8*, i64, i64)* %realloc_func, null, !dbg !103
  %realloc_func.addr.0 = select i1 %tobool1, i8* (i8*, i64, i64)* @gmp_default_realloc, i8* (i8*, i64, i64)* %realloc_func, !dbg !105
  call void @llvm.dbg.value(metadata i8* (i8*, i64, i64)* %realloc_func.addr.0, metadata !97, metadata !DIExpression()), !dbg !99
  %tobool4 = icmp eq void (i8*, i64)* %free_func, null, !dbg !106
  %spec.select1 = select i1 %tobool4, void (i8*, i64)* @gmp_default_free, void (i8*, i64)* %free_func, !dbg !108
  call void @llvm.dbg.value(metadata void (i8*, i64)* %spec.select1, metadata !98, metadata !DIExpression()), !dbg !99
  store i8* (i64)* %spec.select, i8* (i64)** @gmp_allocate_func, align 8, !dbg !109, !tbaa !73
  store i8* (i8*, i64, i64)* %realloc_func.addr.0, i8* (i8*, i64, i64)** @gmp_reallocate_func, align 8, !dbg !110, !tbaa !73
  store void (i8*, i64)* %spec.select1, void (i8*, i64)** @gmp_free_func, align 8, !dbg !111, !tbaa !73
  ret void, !dbg !112
}

; Function Attrs: nounwind uwtable
define internal i8* @gmp_default_alloc(i64 %size) #0 !dbg !113 {
entry:
  call void @llvm.dbg.value(metadata i64 %size, metadata !115, metadata !DIExpression()), !dbg !117
  %cmp = icmp eq i64 %size, 0, !dbg !118
  br i1 %cmp, label %if.else, label %if.end, !dbg !121

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__PRETTY_FUNCTION__.gmp_default_alloc, i64 0, i64 0)) #8, !dbg !118
  unreachable, !dbg !118

if.end:                                           ; preds = %entry
  %call = tail call noalias i8* @malloc(i64 %size) #9, !dbg !122
  call void @llvm.dbg.value(metadata i8* %call, metadata !116, metadata !DIExpression()), !dbg !117
  %tobool = icmp eq i8* %call, null, !dbg !123
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !125

if.then1:                                         ; preds = %if.end
  tail call fastcc void @gmp_die(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !126
  br label %if.end2, !dbg !126

if.end2:                                          ; preds = %if.end, %if.then1
  ret i8* %call, !dbg !127
}

; Function Attrs: nounwind uwtable
define internal i8* @gmp_default_realloc(i8* %old, i64 %old_size, i64 %new_size) #0 !dbg !128 {
entry:
  call void @llvm.dbg.value(metadata i8* %old, metadata !130, metadata !DIExpression()), !dbg !134
  call void @llvm.dbg.value(metadata i64 %old_size, metadata !131, metadata !DIExpression()), !dbg !134
  call void @llvm.dbg.value(metadata i64 %new_size, metadata !132, metadata !DIExpression()), !dbg !134
  %call = tail call i8* @realloc(i8* %old, i64 %new_size) #9, !dbg !135
  call void @llvm.dbg.value(metadata i8* %call, metadata !133, metadata !DIExpression()), !dbg !134
  %tobool = icmp eq i8* %call, null, !dbg !136
  br i1 %tobool, label %if.then, label %if.end, !dbg !138

if.then:                                          ; preds = %entry
  tail call fastcc void @gmp_die(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !139
  br label %if.end, !dbg !139

if.end:                                           ; preds = %entry, %if.then
  ret i8* %call, !dbg !140
}

; Function Attrs: nounwind uwtable
define internal void @gmp_default_free(i8* %p, i64 %size) #0 !dbg !141 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !143, metadata !DIExpression()), !dbg !145
  call void @llvm.dbg.value(metadata i64 %size, metadata !144, metadata !DIExpression()), !dbg !145
  tail call void @free(i8* %p) #9, !dbg !146
  ret void, !dbg !147
}

; Function Attrs: nounwind uwtable
define dso_local void @mpn_copyi(i64* %d, i64* %s, i64 %n) local_unnamed_addr #0 !dbg !148 {
entry:
  call void @llvm.dbg.value(metadata i64* %d, metadata !156, metadata !DIExpression()), !dbg !160
  call void @llvm.dbg.value(metadata i64* %s, metadata !157, metadata !DIExpression()), !dbg !160
  call void @llvm.dbg.value(metadata i64 %n, metadata !158, metadata !DIExpression()), !dbg !160
  call void @llvm.dbg.value(metadata i64 0, metadata !159, metadata !DIExpression()), !dbg !160
  br label %for.cond, !dbg !161

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ], !dbg !163
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !159, metadata !DIExpression()), !dbg !160
  %cmp = icmp slt i64 %i.0, %n, !dbg !164
  br i1 %cmp, label %for.body, label %for.end, !dbg !166

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i64, i64* %s, i64 %i.0, !dbg !167
  %0 = load i64, i64* %arrayidx, align 8, !dbg !167, !tbaa !168
  %arrayidx1 = getelementptr inbounds i64, i64* %d, i64 %i.0, !dbg !170
  store i64 %0, i64* %arrayidx1, align 8, !dbg !171, !tbaa !168
  %inc = add nuw nsw i64 %i.0, 1, !dbg !172
  call void @llvm.dbg.value(metadata i64 %inc, metadata !159, metadata !DIExpression()), !dbg !160
  br label %for.cond, !dbg !173, !llvm.loop !174

for.end:                                          ; preds = %for.cond
  ret void, !dbg !176
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define dso_local void @mpn_copyd(i64* %d, i64* %s, i64 %n) local_unnamed_addr #0 !dbg !177 {
entry:
  call void @llvm.dbg.value(metadata i64* %d, metadata !179, metadata !DIExpression()), !dbg !182
  call void @llvm.dbg.value(metadata i64* %s, metadata !180, metadata !DIExpression()), !dbg !182
  call void @llvm.dbg.value(metadata i64 %n, metadata !181, metadata !DIExpression()), !dbg !182
  br label %while.cond, !dbg !183

while.cond:                                       ; preds = %while.body, %entry
  %n.addr.0 = phi i64 [ %n, %entry ], [ %dec, %while.body ]
  call void @llvm.dbg.value(metadata i64 %n.addr.0, metadata !181, metadata !DIExpression()), !dbg !182
  %dec = add nsw i64 %n.addr.0, -1, !dbg !184
  call void @llvm.dbg.value(metadata i64 %dec, metadata !181, metadata !DIExpression()), !dbg !182
  %cmp = icmp sgt i64 %n.addr.0, 0, !dbg !185
  br i1 %cmp, label %while.body, label %while.end, !dbg !183

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds i64, i64* %s, i64 %dec, !dbg !186
  %0 = load i64, i64* %arrayidx, align 8, !dbg !186, !tbaa !168
  %arrayidx1 = getelementptr inbounds i64, i64* %d, i64 %dec, !dbg !187
  store i64 %0, i64* %arrayidx1, align 8, !dbg !188, !tbaa !168
  br label %while.cond, !dbg !183, !llvm.loop !189

while.end:                                        ; preds = %while.cond
  ret void, !dbg !191
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpn_cmp(i64* %ap, i64* %bp, i64 %n) local_unnamed_addr #0 !dbg !192 {
entry:
  call void @llvm.dbg.value(metadata i64* %ap, metadata !196, metadata !DIExpression()), !dbg !199
  call void @llvm.dbg.value(metadata i64* %bp, metadata !197, metadata !DIExpression()), !dbg !199
  call void @llvm.dbg.value(metadata i64 %n, metadata !198, metadata !DIExpression()), !dbg !199
  br label %while.cond, !dbg !200

while.cond:                                       ; preds = %while.body, %entry
  %n.addr.0 = phi i64 [ %n, %entry ], [ %dec, %while.body ]
  call void @llvm.dbg.value(metadata i64 %n.addr.0, metadata !198, metadata !DIExpression()), !dbg !199
  %dec = add nsw i64 %n.addr.0, -1, !dbg !201
  call void @llvm.dbg.value(metadata i64 %dec, metadata !198, metadata !DIExpression()), !dbg !199
  %cmp = icmp sgt i64 %n.addr.0, 0, !dbg !202
  br i1 %cmp, label %while.body, label %return.loopexit, !dbg !200

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds i64, i64* %ap, i64 %dec, !dbg !203
  %0 = load i64, i64* %arrayidx, align 8, !dbg !203, !tbaa !168
  %arrayidx1 = getelementptr inbounds i64, i64* %bp, i64 %dec, !dbg !206
  %1 = load i64, i64* %arrayidx1, align 8, !dbg !206, !tbaa !168
  %cmp2 = icmp eq i64 %0, %1, !dbg !207
  br i1 %cmp2, label %while.cond, label %if.then, !dbg !208, !llvm.loop !209

if.then:                                          ; preds = %while.body
  %.lcssa3 = phi i64 [ %0, %while.body ], !dbg !203
  %.lcssa = phi i64 [ %1, %while.body ], !dbg !206
  %cmp5 = icmp ugt i64 %.lcssa3, %.lcssa, !dbg !211
  %cond = select i1 %cmp5, i32 1, i32 -1, !dbg !212
  br label %return, !dbg !213

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !214

return:                                           ; preds = %return.loopexit, %if.then
  %retval.0 = phi i32 [ %cond, %if.then ], [ 0, %return.loopexit ], !dbg !199
  ret i32 %retval.0, !dbg !214
}

; Function Attrs: nounwind uwtable
define dso_local void @mpn_zero(i64* %rp, i64 %n) local_unnamed_addr #0 !dbg !215 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !219, metadata !DIExpression()), !dbg !222
  call void @llvm.dbg.value(metadata i64 %n, metadata !220, metadata !DIExpression()), !dbg !222
  call void @llvm.dbg.value(metadata i64 0, metadata !221, metadata !DIExpression()), !dbg !222
  br label %for.cond, !dbg !223

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ], !dbg !225
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !221, metadata !DIExpression()), !dbg !222
  %cmp = icmp slt i64 %i.0, %n, !dbg !226
  br i1 %cmp, label %for.body, label %for.end, !dbg !228

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i64, i64* %rp, i64 %i.0, !dbg !229
  store i64 0, i64* %arrayidx, align 8, !dbg !230, !tbaa !168
  %inc = add nuw nsw i64 %i.0, 1, !dbg !231
  call void @llvm.dbg.value(metadata i64 %inc, metadata !221, metadata !DIExpression()), !dbg !222
  br label %for.cond, !dbg !232, !llvm.loop !233

for.end:                                          ; preds = %for.cond
  ret void, !dbg !235
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_add_1(i64* %rp, i64* %ap, i64 %n, i64 %b) local_unnamed_addr #0 !dbg !236 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !240, metadata !DIExpression()), !dbg !247
  call void @llvm.dbg.value(metadata i64* %ap, metadata !241, metadata !DIExpression()), !dbg !247
  call void @llvm.dbg.value(metadata i64 %n, metadata !242, metadata !DIExpression()), !dbg !247
  call void @llvm.dbg.value(metadata i64 %b, metadata !243, metadata !DIExpression()), !dbg !247
  %cmp = icmp sgt i64 %n, 0, !dbg !248
  br i1 %cmp, label %do.body.preheader, label %if.else, !dbg !251

do.body.preheader:                                ; preds = %entry
  br label %do.body, !dbg !252

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__.mpn_add_1, i64 0, i64 0)) #8, !dbg !248
  unreachable, !dbg !248

do.body:                                          ; preds = %do.body, %do.body.preheader
  %b.addr.0 = phi i64 [ %conv2, %do.body ], [ %b, %do.body.preheader ]
  %i.0 = phi i64 [ %inc, %do.body ], [ 0, %do.body.preheader ], !dbg !247
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !244, metadata !DIExpression()), !dbg !247
  call void @llvm.dbg.value(metadata i64 %b.addr.0, metadata !243, metadata !DIExpression()), !dbg !247
  %arrayidx = getelementptr inbounds i64, i64* %ap, i64 %i.0, !dbg !253
  %0 = load i64, i64* %arrayidx, align 8, !dbg !253, !tbaa !168
  %add = add i64 %0, %b.addr.0, !dbg !254
  call void @llvm.dbg.value(metadata i64 %add, metadata !245, metadata !DIExpression()), !dbg !255
  %cmp1 = icmp ult i64 %add, %b.addr.0, !dbg !256
  %conv2 = zext i1 %cmp1 to i64, !dbg !257
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !243, metadata !DIExpression()), !dbg !247
  %arrayidx3 = getelementptr inbounds i64, i64* %rp, i64 %i.0, !dbg !258
  store i64 %add, i64* %arrayidx3, align 8, !dbg !259, !tbaa !168
  %inc = add nuw nsw i64 %i.0, 1, !dbg !260
  call void @llvm.dbg.value(metadata i64 %inc, metadata !244, metadata !DIExpression()), !dbg !247
  %exitcond = icmp eq i64 %inc, %n, !dbg !261
  br i1 %exitcond, label %do.end, label %do.body, !dbg !262, !llvm.loop !263

do.end:                                           ; preds = %do.body
  %conv2.lcssa = phi i64 [ %conv2, %do.body ], !dbg !257
  ret i64 %conv2.lcssa, !dbg !265
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_add_n(i64* %rp, i64* %ap, i64* %bp, i64 %n) local_unnamed_addr #0 !dbg !266 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !270, metadata !DIExpression()), !dbg !282
  call void @llvm.dbg.value(metadata i64* %ap, metadata !271, metadata !DIExpression()), !dbg !282
  call void @llvm.dbg.value(metadata i64* %bp, metadata !272, metadata !DIExpression()), !dbg !282
  call void @llvm.dbg.value(metadata i64 %n, metadata !273, metadata !DIExpression()), !dbg !282
  call void @llvm.dbg.value(metadata i64 0, metadata !274, metadata !DIExpression()), !dbg !282
  call void @llvm.dbg.value(metadata i64 0, metadata !275, metadata !DIExpression()), !dbg !282
  br label %for.cond, !dbg !283

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ], !dbg !284
  %cy.0 = phi i64 [ 0, %entry ], [ %add8, %for.body ], !dbg !284
  call void @llvm.dbg.value(metadata i64 %cy.0, metadata !275, metadata !DIExpression()), !dbg !282
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !274, metadata !DIExpression()), !dbg !282
  %cmp = icmp slt i64 %i.0, %n, !dbg !285
  br i1 %cmp, label %for.body, label %for.end, !dbg !286

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i64, i64* %ap, i64 %i.0, !dbg !287
  %0 = load i64, i64* %arrayidx, align 8, !dbg !287, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %0, metadata !276, metadata !DIExpression()), !dbg !288
  %arrayidx1 = getelementptr inbounds i64, i64* %bp, i64 %i.0, !dbg !289
  %1 = load i64, i64* %arrayidx1, align 8, !dbg !289, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %1, metadata !280, metadata !DIExpression()), !dbg !288
  %add = add i64 %0, %cy.0, !dbg !290
  call void @llvm.dbg.value(metadata i64 %add, metadata !281, metadata !DIExpression()), !dbg !288
  %cmp2 = icmp ult i64 %add, %cy.0, !dbg !291
  %conv3 = zext i1 %cmp2 to i64, !dbg !292
  call void @llvm.dbg.value(metadata i64 %conv3, metadata !275, metadata !DIExpression()), !dbg !282
  %add4 = add i64 %add, %1, !dbg !293
  call void @llvm.dbg.value(metadata i64 %add4, metadata !281, metadata !DIExpression()), !dbg !288
  %cmp5 = icmp ult i64 %add4, %1, !dbg !294
  %conv7 = zext i1 %cmp5 to i64, !dbg !295
  %add8 = add nuw nsw i64 %conv3, %conv7, !dbg !296
  call void @llvm.dbg.value(metadata i64 %add8, metadata !275, metadata !DIExpression()), !dbg !282
  %arrayidx9 = getelementptr inbounds i64, i64* %rp, i64 %i.0, !dbg !297
  store i64 %add4, i64* %arrayidx9, align 8, !dbg !298, !tbaa !168
  %inc = add nuw nsw i64 %i.0, 1, !dbg !299
  call void @llvm.dbg.value(metadata i64 %inc, metadata !274, metadata !DIExpression()), !dbg !282
  br label %for.cond, !dbg !300, !llvm.loop !301

for.end:                                          ; preds = %for.cond
  %cy.0.lcssa = phi i64 [ %cy.0, %for.cond ], !dbg !284
  call void @llvm.dbg.value(metadata i64 %cy.0.lcssa, metadata !275, metadata !DIExpression()), !dbg !282
  call void @llvm.dbg.value(metadata i64 %cy.0.lcssa, metadata !275, metadata !DIExpression()), !dbg !282
  call void @llvm.dbg.value(metadata i64 %cy.0.lcssa, metadata !275, metadata !DIExpression()), !dbg !282
  ret i64 %cy.0.lcssa, !dbg !303
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_add(i64* %rp, i64* %ap, i64 %an, i64* %bp, i64 %bn) local_unnamed_addr #0 !dbg !304 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !308, metadata !DIExpression()), !dbg !314
  call void @llvm.dbg.value(metadata i64* %ap, metadata !309, metadata !DIExpression()), !dbg !314
  call void @llvm.dbg.value(metadata i64 %an, metadata !310, metadata !DIExpression()), !dbg !314
  call void @llvm.dbg.value(metadata i64* %bp, metadata !311, metadata !DIExpression()), !dbg !314
  call void @llvm.dbg.value(metadata i64 %bn, metadata !312, metadata !DIExpression()), !dbg !314
  %cmp = icmp slt i64 %an, %bn, !dbg !315
  br i1 %cmp, label %if.else, label %if.end, !dbg !318

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 435, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.mpn_add, i64 0, i64 0)) #8, !dbg !315
  unreachable, !dbg !315

if.end:                                           ; preds = %entry
  %call = tail call i64 @mpn_add_n(i64* %rp, i64* %ap, i64* %bp, i64 %bn) #10, !dbg !319
  call void @llvm.dbg.value(metadata i64 %call, metadata !313, metadata !DIExpression()), !dbg !314
  %cmp1 = icmp sgt i64 %an, %bn, !dbg !320
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !322

if.then2:                                         ; preds = %if.end
  %add.ptr = getelementptr inbounds i64, i64* %rp, i64 %bn, !dbg !323
  %add.ptr3 = getelementptr inbounds i64, i64* %ap, i64 %bn, !dbg !324
  %sub = sub nsw i64 %an, %bn, !dbg !325
  %call4 = tail call i64 @mpn_add_1(i64* %add.ptr, i64* %add.ptr3, i64 %sub, i64 %call) #10, !dbg !326
  call void @llvm.dbg.value(metadata i64 %call4, metadata !313, metadata !DIExpression()), !dbg !314
  br label %if.end5, !dbg !327

if.end5:                                          ; preds = %if.then2, %if.end
  %cy.0 = phi i64 [ %call4, %if.then2 ], [ %call, %if.end ], !dbg !314
  call void @llvm.dbg.value(metadata i64 %cy.0, metadata !313, metadata !DIExpression()), !dbg !314
  ret i64 %cy.0, !dbg !328
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_sub_1(i64* %rp, i64* %ap, i64 %n, i64 %b) local_unnamed_addr #0 !dbg !329 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !331, metadata !DIExpression()), !dbg !339
  call void @llvm.dbg.value(metadata i64* %ap, metadata !332, metadata !DIExpression()), !dbg !339
  call void @llvm.dbg.value(metadata i64 %n, metadata !333, metadata !DIExpression()), !dbg !339
  call void @llvm.dbg.value(metadata i64 %b, metadata !334, metadata !DIExpression()), !dbg !339
  %cmp = icmp sgt i64 %n, 0, !dbg !340
  br i1 %cmp, label %do.body.preheader, label %if.else, !dbg !343

do.body.preheader:                                ; preds = %entry
  br label %do.body, !dbg !344

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 448, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__.mpn_sub_1, i64 0, i64 0)) #8, !dbg !340
  unreachable, !dbg !340

do.body:                                          ; preds = %do.body, %do.body.preheader
  %b.addr.0 = phi i64 [ %conv2, %do.body ], [ %b, %do.body.preheader ]
  %i.0 = phi i64 [ %inc, %do.body ], [ 0, %do.body.preheader ], !dbg !339
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !335, metadata !DIExpression()), !dbg !339
  call void @llvm.dbg.value(metadata i64 %b.addr.0, metadata !334, metadata !DIExpression()), !dbg !339
  %arrayidx = getelementptr inbounds i64, i64* %ap, i64 %i.0, !dbg !345
  %0 = load i64, i64* %arrayidx, align 8, !dbg !345, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %0, metadata !336, metadata !DIExpression()), !dbg !346
  %cmp1 = icmp ult i64 %0, %b.addr.0, !dbg !347
  %conv2 = zext i1 %cmp1 to i64, !dbg !348
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !338, metadata !DIExpression()), !dbg !346
  %sub = sub i64 %0, %b.addr.0, !dbg !349
  %arrayidx3 = getelementptr inbounds i64, i64* %rp, i64 %i.0, !dbg !350
  store i64 %sub, i64* %arrayidx3, align 8, !dbg !351, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !334, metadata !DIExpression()), !dbg !339
  %inc = add nuw nsw i64 %i.0, 1, !dbg !352
  call void @llvm.dbg.value(metadata i64 %inc, metadata !335, metadata !DIExpression()), !dbg !339
  %exitcond = icmp eq i64 %inc, %n, !dbg !353
  br i1 %exitcond, label %do.end, label %do.body, !dbg !354, !llvm.loop !355

do.end:                                           ; preds = %do.body
  %conv2.lcssa = phi i64 [ %conv2, %do.body ], !dbg !348
  ret i64 %conv2.lcssa, !dbg !357
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_sub_n(i64* %rp, i64* %ap, i64* %bp, i64 %n) local_unnamed_addr #0 !dbg !358 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !360, metadata !DIExpression()), !dbg !371
  call void @llvm.dbg.value(metadata i64* %ap, metadata !361, metadata !DIExpression()), !dbg !371
  call void @llvm.dbg.value(metadata i64* %bp, metadata !362, metadata !DIExpression()), !dbg !371
  call void @llvm.dbg.value(metadata i64 %n, metadata !363, metadata !DIExpression()), !dbg !371
  call void @llvm.dbg.value(metadata i64 0, metadata !364, metadata !DIExpression()), !dbg !371
  call void @llvm.dbg.value(metadata i64 0, metadata !365, metadata !DIExpression()), !dbg !371
  br label %for.cond, !dbg !372

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ], !dbg !373
  %cy.0 = phi i64 [ 0, %entry ], [ %add7, %for.body ], !dbg !373
  call void @llvm.dbg.value(metadata i64 %cy.0, metadata !365, metadata !DIExpression()), !dbg !371
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !364, metadata !DIExpression()), !dbg !371
  %cmp = icmp slt i64 %i.0, %n, !dbg !374
  br i1 %cmp, label %for.body, label %for.end, !dbg !375

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i64, i64* %ap, i64 %i.0, !dbg !376
  %0 = load i64, i64* %arrayidx, align 8, !dbg !376, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %0, metadata !366, metadata !DIExpression()), !dbg !377
  %arrayidx1 = getelementptr inbounds i64, i64* %bp, i64 %i.0, !dbg !378
  %1 = load i64, i64* %arrayidx1, align 8, !dbg !378, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %1, metadata !370, metadata !DIExpression()), !dbg !377
  %add = add i64 %1, %cy.0, !dbg !379
  call void @llvm.dbg.value(metadata i64 %add, metadata !370, metadata !DIExpression()), !dbg !377
  %cmp2 = icmp ult i64 %add, %cy.0, !dbg !380
  %conv3 = zext i1 %cmp2 to i64, !dbg !381
  call void @llvm.dbg.value(metadata i64 %conv3, metadata !365, metadata !DIExpression()), !dbg !371
  %cmp4 = icmp ult i64 %0, %add, !dbg !382
  %conv6 = zext i1 %cmp4 to i64, !dbg !383
  %add7 = add nuw nsw i64 %conv3, %conv6, !dbg !384
  call void @llvm.dbg.value(metadata i64 %add7, metadata !365, metadata !DIExpression()), !dbg !371
  %sub = sub i64 %0, %add, !dbg !385
  %arrayidx8 = getelementptr inbounds i64, i64* %rp, i64 %i.0, !dbg !386
  store i64 %sub, i64* %arrayidx8, align 8, !dbg !387, !tbaa !168
  %inc = add nuw nsw i64 %i.0, 1, !dbg !388
  call void @llvm.dbg.value(metadata i64 %inc, metadata !364, metadata !DIExpression()), !dbg !371
  br label %for.cond, !dbg !389, !llvm.loop !390

for.end:                                          ; preds = %for.cond
  %cy.0.lcssa = phi i64 [ %cy.0, %for.cond ], !dbg !373
  call void @llvm.dbg.value(metadata i64 %cy.0.lcssa, metadata !365, metadata !DIExpression()), !dbg !371
  call void @llvm.dbg.value(metadata i64 %cy.0.lcssa, metadata !365, metadata !DIExpression()), !dbg !371
  call void @llvm.dbg.value(metadata i64 %cy.0.lcssa, metadata !365, metadata !DIExpression()), !dbg !371
  ret i64 %cy.0.lcssa, !dbg !392
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_sub(i64* %rp, i64* %ap, i64 %an, i64* %bp, i64 %bn) local_unnamed_addr #0 !dbg !393 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !395, metadata !DIExpression()), !dbg !401
  call void @llvm.dbg.value(metadata i64* %ap, metadata !396, metadata !DIExpression()), !dbg !401
  call void @llvm.dbg.value(metadata i64 %an, metadata !397, metadata !DIExpression()), !dbg !401
  call void @llvm.dbg.value(metadata i64* %bp, metadata !398, metadata !DIExpression()), !dbg !401
  call void @llvm.dbg.value(metadata i64 %bn, metadata !399, metadata !DIExpression()), !dbg !401
  %cmp = icmp slt i64 %an, %bn, !dbg !402
  br i1 %cmp, label %if.else, label %if.end, !dbg !405

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 487, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.mpn_sub, i64 0, i64 0)) #8, !dbg !402
  unreachable, !dbg !402

if.end:                                           ; preds = %entry
  %call = tail call i64 @mpn_sub_n(i64* %rp, i64* %ap, i64* %bp, i64 %bn) #10, !dbg !406
  call void @llvm.dbg.value(metadata i64 %call, metadata !400, metadata !DIExpression()), !dbg !401
  %cmp1 = icmp sgt i64 %an, %bn, !dbg !407
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !409

if.then2:                                         ; preds = %if.end
  %add.ptr = getelementptr inbounds i64, i64* %rp, i64 %bn, !dbg !410
  %add.ptr3 = getelementptr inbounds i64, i64* %ap, i64 %bn, !dbg !411
  %sub = sub nsw i64 %an, %bn, !dbg !412
  %call4 = tail call i64 @mpn_sub_1(i64* %add.ptr, i64* %add.ptr3, i64 %sub, i64 %call) #10, !dbg !413
  call void @llvm.dbg.value(metadata i64 %call4, metadata !400, metadata !DIExpression()), !dbg !401
  br label %if.end5, !dbg !414

if.end5:                                          ; preds = %if.then2, %if.end
  %cy.0 = phi i64 [ %call4, %if.then2 ], [ %call, %if.end ], !dbg !401
  call void @llvm.dbg.value(metadata i64 %cy.0, metadata !400, metadata !DIExpression()), !dbg !401
  ret i64 %cy.0, !dbg !415
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_mul_1(i64* %rp, i64* %up, i64 %n, i64 %vl) local_unnamed_addr #0 !dbg !416 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !418, metadata !DIExpression()), !dbg !438
  call void @llvm.dbg.value(metadata i64* %up, metadata !419, metadata !DIExpression()), !dbg !438
  call void @llvm.dbg.value(metadata i64 %n, metadata !420, metadata !DIExpression()), !dbg !438
  call void @llvm.dbg.value(metadata i64 %vl, metadata !421, metadata !DIExpression()), !dbg !438
  %cmp = icmp sgt i64 %n, 0, !dbg !439
  br i1 %cmp, label %do.body.preheader, label %if.else, !dbg !442

do.body.preheader:                                ; preds = %entry
  %shr5 = lshr i64 %vl, 32, !dbg !443
  %conv8 = and i64 %vl, 4294967295, !dbg !443
  br label %do.body, !dbg !444

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 500, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__.mpn_mul_1, i64 0, i64 0)) #8, !dbg !439
  unreachable, !dbg !439

do.body:                                          ; preds = %do.body.preheader, %do.body
  %cl.0 = phi i64 [ %add33, %do.body ], [ 0, %do.body.preheader ], !dbg !438
  %n.addr.0 = phi i64 [ %dec, %do.body ], [ %n, %do.body.preheader ]
  %up.addr.0 = phi i64* [ %incdec.ptr, %do.body ], [ %up, %do.body.preheader ]
  %rp.addr.0 = phi i64* [ %incdec.ptr34, %do.body ], [ %rp, %do.body.preheader ]
  call void @llvm.dbg.value(metadata i64* %rp.addr.0, metadata !418, metadata !DIExpression()), !dbg !438
  call void @llvm.dbg.value(metadata i64* %up.addr.0, metadata !419, metadata !DIExpression()), !dbg !438
  call void @llvm.dbg.value(metadata i64 %n.addr.0, metadata !420, metadata !DIExpression()), !dbg !438
  call void @llvm.dbg.value(metadata i64 %cl.0, metadata !423, metadata !DIExpression()), !dbg !438
  %incdec.ptr = getelementptr inbounds i64, i64* %up.addr.0, i64 1, !dbg !445
  call void @llvm.dbg.value(metadata i64* %incdec.ptr, metadata !419, metadata !DIExpression()), !dbg !438
  %0 = load i64, i64* %up.addr.0, align 8, !dbg !446, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %0, metadata !422, metadata !DIExpression()), !dbg !438
  call void @llvm.dbg.value(metadata i64 %0, metadata !436, metadata !DIExpression()), !dbg !443
  call void @llvm.dbg.value(metadata i64 %vl, metadata !437, metadata !DIExpression()), !dbg !443
  %shr = lshr i64 %0, 32, !dbg !447
  call void @llvm.dbg.value(metadata i64 %vl, metadata !433, metadata !DIExpression()), !dbg !443
  %conv7 = and i64 %0, 4294967295, !dbg !447
  %mul = mul nuw i64 %conv7, %conv8, !dbg !447
  call void @llvm.dbg.value(metadata i64 %mul, metadata !426, metadata !DIExpression()), !dbg !443
  %mul11 = mul nuw i64 %conv7, %shr5, !dbg !447
  call void @llvm.dbg.value(metadata i64 %mul11, metadata !429, metadata !DIExpression()), !dbg !443
  %mul14 = mul nuw i64 %shr, %conv8, !dbg !447
  call void @llvm.dbg.value(metadata i64 %mul14, metadata !430, metadata !DIExpression()), !dbg !443
  %mul17 = mul nuw i64 %shr, %shr5, !dbg !447
  call void @llvm.dbg.value(metadata i64 %mul17, metadata !431, metadata !DIExpression()), !dbg !443
  %shr18 = lshr i64 %mul, 32, !dbg !447
  %add = add i64 %mul11, %shr18, !dbg !447
  call void @llvm.dbg.value(metadata i64 %add, metadata !429, metadata !DIExpression()), !dbg !443
  %add19 = add i64 %add, %mul14, !dbg !447
  call void @llvm.dbg.value(metadata i64 %add19, metadata !429, metadata !DIExpression()), !dbg !443
  %cmp20 = icmp ult i64 %add19, %mul14, !dbg !448
  %add23 = add i64 %mul17, 4294967296, !dbg !447
  %__x3.0 = select i1 %cmp20, i64 %add23, i64 %mul17, !dbg !447
  call void @llvm.dbg.value(metadata i64 %__x3.0, metadata !431, metadata !DIExpression()), !dbg !443
  %shr25 = lshr i64 %add19, 32, !dbg !447
  %add26 = add i64 %__x3.0, %shr25, !dbg !447
  call void @llvm.dbg.value(metadata i64 %add26, metadata !424, metadata !DIExpression()), !dbg !438
  %shl = shl i64 %add19, 32, !dbg !447
  %and27 = and i64 %mul, 4294967295, !dbg !447
  %add28 = or i64 %shl, %and27, !dbg !447
  call void @llvm.dbg.value(metadata i64 %add28, metadata !425, metadata !DIExpression()), !dbg !438
  %add29 = add i64 %add28, %cl.0, !dbg !450
  call void @llvm.dbg.value(metadata i64 %add29, metadata !425, metadata !DIExpression()), !dbg !438
  %cmp30 = icmp ult i64 %add29, %cl.0, !dbg !451
  %conv32 = zext i1 %cmp30 to i64, !dbg !452
  %add33 = add i64 %add26, %conv32, !dbg !453
  call void @llvm.dbg.value(metadata i64 %add33, metadata !423, metadata !DIExpression()), !dbg !438
  %incdec.ptr34 = getelementptr inbounds i64, i64* %rp.addr.0, i64 1, !dbg !454
  call void @llvm.dbg.value(metadata i64* %incdec.ptr34, metadata !418, metadata !DIExpression()), !dbg !438
  store i64 %add29, i64* %rp.addr.0, align 8, !dbg !455, !tbaa !168
  %dec = add nsw i64 %n.addr.0, -1, !dbg !456
  call void @llvm.dbg.value(metadata i64 %dec, metadata !420, metadata !DIExpression()), !dbg !438
  %cmp36 = icmp eq i64 %dec, 0, !dbg !457
  br i1 %cmp36, label %do.end38, label %do.body, !dbg !458, !llvm.loop !459

do.end38:                                         ; preds = %do.body
  %add33.lcssa = phi i64 [ %add33, %do.body ], !dbg !453
  ret i64 %add33.lcssa, !dbg !461
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_addmul_1(i64* %rp, i64* %up, i64 %n, i64 %vl) local_unnamed_addr #0 !dbg !462 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !464, metadata !DIExpression()), !dbg !485
  call void @llvm.dbg.value(metadata i64* %up, metadata !465, metadata !DIExpression()), !dbg !485
  call void @llvm.dbg.value(metadata i64 %n, metadata !466, metadata !DIExpression()), !dbg !485
  call void @llvm.dbg.value(metadata i64 %vl, metadata !467, metadata !DIExpression()), !dbg !485
  %cmp = icmp sgt i64 %n, 0, !dbg !486
  br i1 %cmp, label %do.body.preheader, label %if.else, !dbg !489

do.body.preheader:                                ; preds = %entry
  %shr5 = lshr i64 %vl, 32, !dbg !490
  %conv8 = and i64 %vl, 4294967295, !dbg !490
  br label %do.body, !dbg !491

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 523, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__.mpn_addmul_1, i64 0, i64 0)) #8, !dbg !486
  unreachable, !dbg !486

do.body:                                          ; preds = %do.body.preheader, %do.body
  %cl.0 = phi i64 [ %add38, %do.body ], [ 0, %do.body.preheader ], !dbg !485
  %n.addr.0 = phi i64 [ %dec, %do.body ], [ %n, %do.body.preheader ]
  %up.addr.0 = phi i64* [ %incdec.ptr, %do.body ], [ %up, %do.body.preheader ]
  %rp.addr.0 = phi i64* [ %incdec.ptr39, %do.body ], [ %rp, %do.body.preheader ]
  call void @llvm.dbg.value(metadata i64* %rp.addr.0, metadata !464, metadata !DIExpression()), !dbg !485
  call void @llvm.dbg.value(metadata i64* %up.addr.0, metadata !465, metadata !DIExpression()), !dbg !485
  call void @llvm.dbg.value(metadata i64 %n.addr.0, metadata !466, metadata !DIExpression()), !dbg !485
  call void @llvm.dbg.value(metadata i64 %cl.0, metadata !469, metadata !DIExpression()), !dbg !485
  %incdec.ptr = getelementptr inbounds i64, i64* %up.addr.0, i64 1, !dbg !492
  call void @llvm.dbg.value(metadata i64* %incdec.ptr, metadata !465, metadata !DIExpression()), !dbg !485
  %0 = load i64, i64* %up.addr.0, align 8, !dbg !493, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %0, metadata !468, metadata !DIExpression()), !dbg !485
  call void @llvm.dbg.value(metadata i64 %0, metadata !483, metadata !DIExpression()), !dbg !490
  call void @llvm.dbg.value(metadata i64 %vl, metadata !484, metadata !DIExpression()), !dbg !490
  %shr = lshr i64 %0, 32, !dbg !494
  call void @llvm.dbg.value(metadata i64 %vl, metadata !480, metadata !DIExpression()), !dbg !490
  %conv7 = and i64 %0, 4294967295, !dbg !494
  %mul = mul nuw i64 %conv7, %conv8, !dbg !494
  call void @llvm.dbg.value(metadata i64 %mul, metadata !473, metadata !DIExpression()), !dbg !490
  %mul11 = mul nuw i64 %conv7, %shr5, !dbg !494
  call void @llvm.dbg.value(metadata i64 %mul11, metadata !476, metadata !DIExpression()), !dbg !490
  %mul14 = mul nuw i64 %shr, %conv8, !dbg !494
  call void @llvm.dbg.value(metadata i64 %mul14, metadata !477, metadata !DIExpression()), !dbg !490
  %mul17 = mul nuw i64 %shr, %shr5, !dbg !494
  call void @llvm.dbg.value(metadata i64 %mul17, metadata !478, metadata !DIExpression()), !dbg !490
  %shr18 = lshr i64 %mul, 32, !dbg !494
  %add = add i64 %mul11, %shr18, !dbg !494
  call void @llvm.dbg.value(metadata i64 %add, metadata !476, metadata !DIExpression()), !dbg !490
  %add19 = add i64 %add, %mul14, !dbg !494
  call void @llvm.dbg.value(metadata i64 %add19, metadata !476, metadata !DIExpression()), !dbg !490
  %cmp20 = icmp ult i64 %add19, %mul14, !dbg !495
  %add23 = add i64 %mul17, 4294967296, !dbg !494
  %__x3.0 = select i1 %cmp20, i64 %add23, i64 %mul17, !dbg !494
  call void @llvm.dbg.value(metadata i64 %__x3.0, metadata !478, metadata !DIExpression()), !dbg !490
  %shr25 = lshr i64 %add19, 32, !dbg !494
  %add26 = add i64 %__x3.0, %shr25, !dbg !494
  call void @llvm.dbg.value(metadata i64 %add26, metadata !470, metadata !DIExpression()), !dbg !485
  %shl = shl i64 %add19, 32, !dbg !494
  %and27 = and i64 %mul, 4294967295, !dbg !494
  %add28 = or i64 %shl, %and27, !dbg !494
  call void @llvm.dbg.value(metadata i64 %add28, metadata !471, metadata !DIExpression()), !dbg !485
  %add29 = add i64 %add28, %cl.0, !dbg !497
  call void @llvm.dbg.value(metadata i64 %add29, metadata !471, metadata !DIExpression()), !dbg !485
  %cmp30 = icmp ult i64 %add29, %cl.0, !dbg !498
  %conv32 = zext i1 %cmp30 to i64, !dbg !499
  %add33 = add i64 %add26, %conv32, !dbg !500
  call void @llvm.dbg.value(metadata i64 %add33, metadata !469, metadata !DIExpression()), !dbg !485
  %1 = load i64, i64* %rp.addr.0, align 8, !dbg !501, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %1, metadata !472, metadata !DIExpression()), !dbg !485
  %add34 = add i64 %1, %add29, !dbg !502
  call void @llvm.dbg.value(metadata i64 %add34, metadata !471, metadata !DIExpression()), !dbg !485
  %cmp35 = icmp ult i64 %add34, %1, !dbg !503
  %conv37 = zext i1 %cmp35 to i64, !dbg !504
  %add38 = add i64 %add33, %conv37, !dbg !505
  call void @llvm.dbg.value(metadata i64 %add38, metadata !469, metadata !DIExpression()), !dbg !485
  %incdec.ptr39 = getelementptr inbounds i64, i64* %rp.addr.0, i64 1, !dbg !506
  call void @llvm.dbg.value(metadata i64* %incdec.ptr39, metadata !464, metadata !DIExpression()), !dbg !485
  store i64 %add34, i64* %rp.addr.0, align 8, !dbg !507, !tbaa !168
  %dec = add nsw i64 %n.addr.0, -1, !dbg !508
  call void @llvm.dbg.value(metadata i64 %dec, metadata !466, metadata !DIExpression()), !dbg !485
  %cmp41 = icmp eq i64 %dec, 0, !dbg !509
  br i1 %cmp41, label %do.end43, label %do.body, !dbg !510, !llvm.loop !511

do.end43:                                         ; preds = %do.body
  %add38.lcssa = phi i64 [ %add38, %do.body ], !dbg !505
  ret i64 %add38.lcssa, !dbg !513
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_submul_1(i64* %rp, i64* %up, i64 %n, i64 %vl) local_unnamed_addr #0 !dbg !514 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !516, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.value(metadata i64* %up, metadata !517, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.value(metadata i64 %n, metadata !518, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.value(metadata i64 %vl, metadata !519, metadata !DIExpression()), !dbg !537
  %cmp = icmp sgt i64 %n, 0, !dbg !538
  br i1 %cmp, label %do.body.preheader, label %if.else, !dbg !541

do.body.preheader:                                ; preds = %entry
  %shr5 = lshr i64 %vl, 32, !dbg !542
  %conv8 = and i64 %vl, 4294967295, !dbg !542
  br label %do.body, !dbg !543

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 549, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__.mpn_submul_1, i64 0, i64 0)) #8, !dbg !538
  unreachable, !dbg !538

do.body:                                          ; preds = %do.body.preheader, %do.body
  %cl.0 = phi i64 [ %add37, %do.body ], [ 0, %do.body.preheader ], !dbg !537
  %n.addr.0 = phi i64 [ %dec, %do.body ], [ %n, %do.body.preheader ]
  %up.addr.0 = phi i64* [ %incdec.ptr, %do.body ], [ %up, %do.body.preheader ]
  %rp.addr.0 = phi i64* [ %incdec.ptr38, %do.body ], [ %rp, %do.body.preheader ]
  call void @llvm.dbg.value(metadata i64* %rp.addr.0, metadata !516, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.value(metadata i64* %up.addr.0, metadata !517, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.value(metadata i64 %n.addr.0, metadata !518, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.value(metadata i64 %cl.0, metadata !521, metadata !DIExpression()), !dbg !537
  %incdec.ptr = getelementptr inbounds i64, i64* %up.addr.0, i64 1, !dbg !544
  call void @llvm.dbg.value(metadata i64* %incdec.ptr, metadata !517, metadata !DIExpression()), !dbg !537
  %0 = load i64, i64* %up.addr.0, align 8, !dbg !545, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %0, metadata !520, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.value(metadata i64 %0, metadata !535, metadata !DIExpression()), !dbg !542
  call void @llvm.dbg.value(metadata i64 %vl, metadata !536, metadata !DIExpression()), !dbg !542
  %shr = lshr i64 %0, 32, !dbg !546
  call void @llvm.dbg.value(metadata i64 %vl, metadata !532, metadata !DIExpression()), !dbg !542
  %conv7 = and i64 %0, 4294967295, !dbg !546
  %mul = mul nuw i64 %conv7, %conv8, !dbg !546
  call void @llvm.dbg.value(metadata i64 %mul, metadata !525, metadata !DIExpression()), !dbg !542
  %mul11 = mul nuw i64 %conv7, %shr5, !dbg !546
  call void @llvm.dbg.value(metadata i64 %mul11, metadata !528, metadata !DIExpression()), !dbg !542
  %mul14 = mul nuw i64 %shr, %conv8, !dbg !546
  call void @llvm.dbg.value(metadata i64 %mul14, metadata !529, metadata !DIExpression()), !dbg !542
  %mul17 = mul nuw i64 %shr, %shr5, !dbg !546
  call void @llvm.dbg.value(metadata i64 %mul17, metadata !530, metadata !DIExpression()), !dbg !542
  %shr18 = lshr i64 %mul, 32, !dbg !546
  %add = add i64 %mul11, %shr18, !dbg !546
  call void @llvm.dbg.value(metadata i64 %add, metadata !528, metadata !DIExpression()), !dbg !542
  %add19 = add i64 %add, %mul14, !dbg !546
  call void @llvm.dbg.value(metadata i64 %add19, metadata !528, metadata !DIExpression()), !dbg !542
  %cmp20 = icmp ult i64 %add19, %mul14, !dbg !547
  %add23 = add i64 %mul17, 4294967296, !dbg !546
  %__x3.0 = select i1 %cmp20, i64 %add23, i64 %mul17, !dbg !546
  call void @llvm.dbg.value(metadata i64 %__x3.0, metadata !530, metadata !DIExpression()), !dbg !542
  %shr25 = lshr i64 %add19, 32, !dbg !546
  %add26 = add i64 %__x3.0, %shr25, !dbg !546
  call void @llvm.dbg.value(metadata i64 %add26, metadata !522, metadata !DIExpression()), !dbg !537
  %shl = shl i64 %add19, 32, !dbg !546
  %and27 = and i64 %mul, 4294967295, !dbg !546
  %add28 = or i64 %shl, %and27, !dbg !546
  call void @llvm.dbg.value(metadata i64 %add28, metadata !523, metadata !DIExpression()), !dbg !537
  %add29 = add i64 %add28, %cl.0, !dbg !549
  call void @llvm.dbg.value(metadata i64 %add29, metadata !523, metadata !DIExpression()), !dbg !537
  %cmp30 = icmp ult i64 %add29, %cl.0, !dbg !550
  %conv32 = zext i1 %cmp30 to i64, !dbg !551
  %add33 = add i64 %add26, %conv32, !dbg !552
  call void @llvm.dbg.value(metadata i64 %add33, metadata !521, metadata !DIExpression()), !dbg !537
  %1 = load i64, i64* %rp.addr.0, align 8, !dbg !553, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %1, metadata !524, metadata !DIExpression()), !dbg !537
  %sub = sub i64 %1, %add29, !dbg !554
  call void @llvm.dbg.value(metadata i64 %sub, metadata !523, metadata !DIExpression()), !dbg !537
  %cmp34 = icmp ult i64 %1, %add29, !dbg !555
  %conv36 = zext i1 %cmp34 to i64, !dbg !556
  %add37 = add i64 %add33, %conv36, !dbg !557
  call void @llvm.dbg.value(metadata i64 %add37, metadata !521, metadata !DIExpression()), !dbg !537
  %incdec.ptr38 = getelementptr inbounds i64, i64* %rp.addr.0, i64 1, !dbg !558
  call void @llvm.dbg.value(metadata i64* %incdec.ptr38, metadata !516, metadata !DIExpression()), !dbg !537
  store i64 %sub, i64* %rp.addr.0, align 8, !dbg !559, !tbaa !168
  %dec = add nsw i64 %n.addr.0, -1, !dbg !560
  call void @llvm.dbg.value(metadata i64 %dec, metadata !518, metadata !DIExpression()), !dbg !537
  %cmp40 = icmp eq i64 %dec, 0, !dbg !561
  br i1 %cmp40, label %do.end42, label %do.body, !dbg !562, !llvm.loop !563

do.end42:                                         ; preds = %do.body
  %add37.lcssa = phi i64 [ %add37, %do.body ], !dbg !557
  ret i64 %add37.lcssa, !dbg !565
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_mul(i64* %rp, i64* %up, i64 %un, i64* %vp, i64 %vn) local_unnamed_addr #0 !dbg !566 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !568, metadata !DIExpression()), !dbg !573
  call void @llvm.dbg.value(metadata i64* %up, metadata !569, metadata !DIExpression()), !dbg !573
  call void @llvm.dbg.value(metadata i64 %un, metadata !570, metadata !DIExpression()), !dbg !573
  call void @llvm.dbg.value(metadata i64* %vp, metadata !571, metadata !DIExpression()), !dbg !573
  call void @llvm.dbg.value(metadata i64 %vn, metadata !572, metadata !DIExpression()), !dbg !573
  %cmp = icmp slt i64 %un, %vn, !dbg !574
  br i1 %cmp, label %if.else, label %if.end, !dbg !577

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 573, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.mpn_mul, i64 0, i64 0)) #8, !dbg !574
  unreachable, !dbg !574

if.end:                                           ; preds = %entry
  %cmp1 = icmp sgt i64 %vn, 0, !dbg !578
  br i1 %cmp1, label %if.end4, label %if.else3, !dbg !581

if.else3:                                         ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 574, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__.mpn_mul, i64 0, i64 0)) #8, !dbg !578
  unreachable, !dbg !578

if.end4:                                          ; preds = %if.end
  %0 = load i64, i64* %vp, align 8, !dbg !582, !tbaa !168
  %call = tail call i64 @mpn_mul_1(i64* %rp, i64* %up, i64 %un, i64 %0) #10, !dbg !583
  %arrayidx5 = getelementptr inbounds i64, i64* %rp, i64 %un, !dbg !584
  store i64 %call, i64* %arrayidx5, align 8, !dbg !585, !tbaa !168
  call void @llvm.dbg.value(metadata i64* %rp, metadata !568, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !573
  call void @llvm.dbg.value(metadata i64* %vp, metadata !571, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !573
  call void @llvm.dbg.value(metadata i64 %vn, metadata !572, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !573
  br label %while.cond, !dbg !586

while.cond:                                       ; preds = %while.body, %if.end4
  %1 = phi i64 [ %call, %if.end4 ], [ %call9, %while.body ]
  %vp.pn = phi i64* [ %vp, %if.end4 ], [ %vp.addr.0, %while.body ]
  %vn.addr.0.in = phi i64 [ %vn, %if.end4 ], [ %vn.addr.0, %while.body ]
  %rp.pn = phi i64* [ %rp, %if.end4 ], [ %rp.addr.0, %while.body ]
  %vn.addr.0 = add nsw i64 %vn.addr.0.in, -1, !dbg !573
  %rp.addr.0 = getelementptr inbounds i64, i64* %rp.pn, i64 1, !dbg !573
  %vp.addr.0 = getelementptr inbounds i64, i64* %vp.pn, i64 1, !dbg !573
  call void @llvm.dbg.value(metadata i64* %rp.addr.0, metadata !568, metadata !DIExpression()), !dbg !573
  call void @llvm.dbg.value(metadata i64 %vn.addr.0, metadata !572, metadata !DIExpression()), !dbg !573
  call void @llvm.dbg.value(metadata i64* %vp.addr.0, metadata !571, metadata !DIExpression()), !dbg !573
  %cmp7 = icmp sgt i64 %vn.addr.0, 0, !dbg !587
  br i1 %cmp7, label %while.body, label %while.end, !dbg !586

while.body:                                       ; preds = %while.cond
  %2 = load i64, i64* %vp.addr.0, align 8, !dbg !588, !tbaa !168
  %call9 = tail call i64 @mpn_addmul_1(i64* nonnull %rp.addr.0, i64* %up, i64 %un, i64 %2) #10, !dbg !590
  %arrayidx10 = getelementptr inbounds i64, i64* %rp.addr.0, i64 %un, !dbg !591
  store i64 %call9, i64* %arrayidx10, align 8, !dbg !592, !tbaa !168
  call void @llvm.dbg.value(metadata i64* %rp.addr.0, metadata !568, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !573
  call void @llvm.dbg.value(metadata i64* %vp.addr.0, metadata !571, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !573
  call void @llvm.dbg.value(metadata i64 %vn.addr.0, metadata !572, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !573
  br label %while.cond, !dbg !586, !llvm.loop !593

while.end:                                        ; preds = %while.cond
  %.lcssa = phi i64 [ %1, %while.cond ]
  ret i64 %.lcssa, !dbg !595
}

; Function Attrs: nounwind uwtable
define dso_local void @mpn_mul_n(i64* %rp, i64* %ap, i64* %bp, i64 %n) local_unnamed_addr #0 !dbg !596 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !600, metadata !DIExpression()), !dbg !604
  call void @llvm.dbg.value(metadata i64* %ap, metadata !601, metadata !DIExpression()), !dbg !604
  call void @llvm.dbg.value(metadata i64* %bp, metadata !602, metadata !DIExpression()), !dbg !604
  call void @llvm.dbg.value(metadata i64 %n, metadata !603, metadata !DIExpression()), !dbg !604
  %call = tail call i64 @mpn_mul(i64* %rp, i64* %ap, i64 %n, i64* %bp, i64 %n) #10, !dbg !605
  ret void, !dbg !606
}

; Function Attrs: nounwind uwtable
define dso_local void @mpn_sqr(i64* %rp, i64* %ap, i64 %n) local_unnamed_addr #0 !dbg !607 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !609, metadata !DIExpression()), !dbg !612
  call void @llvm.dbg.value(metadata i64* %ap, metadata !610, metadata !DIExpression()), !dbg !612
  call void @llvm.dbg.value(metadata i64 %n, metadata !611, metadata !DIExpression()), !dbg !612
  %call = tail call i64 @mpn_mul(i64* %rp, i64* %ap, i64 %n, i64* %ap, i64 %n) #10, !dbg !613
  ret void, !dbg !614
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_lshift(i64* %rp, i64* %up, i64 %n, i32 %cnt) local_unnamed_addr #0 !dbg !615 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !619, metadata !DIExpression()), !dbg !628
  call void @llvm.dbg.value(metadata i64* %up, metadata !620, metadata !DIExpression()), !dbg !628
  call void @llvm.dbg.value(metadata i64 %n, metadata !621, metadata !DIExpression()), !dbg !628
  call void @llvm.dbg.value(metadata i32 %cnt, metadata !622, metadata !DIExpression()), !dbg !628
  %cmp = icmp sgt i64 %n, 0, !dbg !629
  br i1 %cmp, label %if.end, label %if.else, !dbg !632

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 614, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.mpn_lshift, i64 0, i64 0)) #8, !dbg !629
  unreachable, !dbg !629

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %cnt, 0, !dbg !633
  br i1 %cmp2, label %if.else4, label %if.end5, !dbg !636

if.else4:                                         ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 615, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.mpn_lshift, i64 0, i64 0)) #8, !dbg !633
  unreachable, !dbg !633

if.end5:                                          ; preds = %if.end
  %cmp6 = icmp ult i32 %cnt, 64, !dbg !637
  br i1 %cmp6, label %if.end10, label %if.else9, !dbg !640

if.else9:                                         ; preds = %if.end5
  tail call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 616, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.mpn_lshift, i64 0, i64 0)) #8, !dbg !637
  unreachable, !dbg !637

if.end10:                                         ; preds = %if.end5
  %add.ptr = getelementptr inbounds i64, i64* %up, i64 %n, !dbg !641
  call void @llvm.dbg.value(metadata i64* %add.ptr, metadata !620, metadata !DIExpression()), !dbg !628
  %add.ptr11 = getelementptr inbounds i64, i64* %rp, i64 %n, !dbg !642
  call void @llvm.dbg.value(metadata i64* %add.ptr11, metadata !619, metadata !DIExpression()), !dbg !628
  %sub = sub i32 64, %cnt, !dbg !643
  call void @llvm.dbg.value(metadata i32 %sub, metadata !625, metadata !DIExpression()), !dbg !628
  %incdec.ptr = getelementptr inbounds i64, i64* %add.ptr, i64 -1, !dbg !644
  call void @llvm.dbg.value(metadata i64* %incdec.ptr, metadata !620, metadata !DIExpression()), !dbg !628
  %0 = load i64, i64* %incdec.ptr, align 8, !dbg !645, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %0, metadata !624, metadata !DIExpression()), !dbg !628
  %sh_prom = zext i32 %sub to i64, !dbg !646
  call void @llvm.dbg.value(metadata i64 %shr, metadata !627, metadata !DIExpression()), !dbg !628
  %sh_prom14 = zext i32 %cnt to i64, !dbg !647
  call void @llvm.dbg.value(metadata i64 %n, metadata !626, metadata !DIExpression()), !dbg !628
  br label %for.cond, !dbg !648

for.cond:                                         ; preds = %for.body, %if.end10
  %.pn = phi i64 [ %0, %if.end10 ], [ %1, %for.body ]
  %i.0 = phi i64 [ %n, %if.end10 ], [ %dec, %for.body ], !dbg !650
  %up.addr.0 = phi i64* [ %incdec.ptr, %if.end10 ], [ %incdec.ptr17, %for.body ], !dbg !628
  %rp.addr.0 = phi i64* [ %add.ptr11, %if.end10 ], [ %incdec.ptr20, %for.body ], !dbg !628
  %high_limb.0 = shl i64 %.pn, %sh_prom14, !dbg !628
  call void @llvm.dbg.value(metadata i64* %rp.addr.0, metadata !619, metadata !DIExpression()), !dbg !628
  call void @llvm.dbg.value(metadata i64* %up.addr.0, metadata !620, metadata !DIExpression()), !dbg !628
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !626, metadata !DIExpression()), !dbg !628
  call void @llvm.dbg.value(metadata i64 %high_limb.0, metadata !623, metadata !DIExpression()), !dbg !628
  %dec = add nsw i64 %i.0, -1, !dbg !651
  call void @llvm.dbg.value(metadata i64 %dec, metadata !626, metadata !DIExpression()), !dbg !628
  %cmp15 = icmp eq i64 %dec, 0, !dbg !653
  br i1 %cmp15, label %for.end, label %for.body, !dbg !654

for.body:                                         ; preds = %for.cond
  %incdec.ptr17 = getelementptr inbounds i64, i64* %up.addr.0, i64 -1, !dbg !655
  call void @llvm.dbg.value(metadata i64* %incdec.ptr17, metadata !620, metadata !DIExpression()), !dbg !628
  %1 = load i64, i64* %incdec.ptr17, align 8, !dbg !657, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %1, metadata !624, metadata !DIExpression()), !dbg !628
  %shr19 = lshr i64 %1, %sh_prom, !dbg !658
  %or = or i64 %high_limb.0, %shr19, !dbg !659
  %incdec.ptr20 = getelementptr inbounds i64, i64* %rp.addr.0, i64 -1, !dbg !660
  call void @llvm.dbg.value(metadata i64* %incdec.ptr20, metadata !619, metadata !DIExpression()), !dbg !628
  store i64 %or, i64* %incdec.ptr20, align 8, !dbg !661, !tbaa !168
  br label %for.cond, !dbg !662, !llvm.loop !663

for.end:                                          ; preds = %for.cond
  %rp.addr.0.lcssa = phi i64* [ %rp.addr.0, %for.cond ], !dbg !628
  %high_limb.0.lcssa = phi i64 [ %high_limb.0, %for.cond ], !dbg !628
  call void @llvm.dbg.value(metadata i64* %rp.addr.0.lcssa, metadata !619, metadata !DIExpression()), !dbg !628
  %shr = lshr i64 %0, %sh_prom, !dbg !646
  call void @llvm.dbg.value(metadata i64 %high_limb.0.lcssa, metadata !623, metadata !DIExpression()), !dbg !628
  call void @llvm.dbg.value(metadata i64* %rp.addr.0.lcssa, metadata !619, metadata !DIExpression()), !dbg !628
  call void @llvm.dbg.value(metadata i64 %high_limb.0.lcssa, metadata !623, metadata !DIExpression()), !dbg !628
  call void @llvm.dbg.value(metadata i64* %rp.addr.0.lcssa, metadata !619, metadata !DIExpression()), !dbg !628
  %incdec.ptr23 = getelementptr inbounds i64, i64* %rp.addr.0.lcssa, i64 -1, !dbg !665
  call void @llvm.dbg.value(metadata i64* %incdec.ptr23, metadata !619, metadata !DIExpression()), !dbg !628
  store i64 %high_limb.0.lcssa, i64* %incdec.ptr23, align 8, !dbg !666, !tbaa !168
  ret i64 %shr, !dbg !667
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_rshift(i64* %rp, i64* %up, i64 %n, i32 %cnt) local_unnamed_addr #0 !dbg !668 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !670, metadata !DIExpression()), !dbg !679
  call void @llvm.dbg.value(metadata i64* %up, metadata !671, metadata !DIExpression()), !dbg !679
  call void @llvm.dbg.value(metadata i64 %n, metadata !672, metadata !DIExpression()), !dbg !679
  call void @llvm.dbg.value(metadata i32 %cnt, metadata !673, metadata !DIExpression()), !dbg !679
  %cmp = icmp sgt i64 %n, 0, !dbg !680
  br i1 %cmp, label %if.end, label %if.else, !dbg !683

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.mpn_rshift, i64 0, i64 0)) #8, !dbg !680
  unreachable, !dbg !680

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %cnt, 0, !dbg !684
  br i1 %cmp2, label %if.else4, label %if.end5, !dbg !687

if.else4:                                         ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 646, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.mpn_rshift, i64 0, i64 0)) #8, !dbg !684
  unreachable, !dbg !684

if.end5:                                          ; preds = %if.end
  %cmp6 = icmp ult i32 %cnt, 64, !dbg !688
  br i1 %cmp6, label %if.end10, label %if.else9, !dbg !691

if.else9:                                         ; preds = %if.end5
  tail call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 647, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.mpn_rshift, i64 0, i64 0)) #8, !dbg !688
  unreachable, !dbg !688

if.end10:                                         ; preds = %if.end5
  %sub = sub i32 64, %cnt, !dbg !692
  call void @llvm.dbg.value(metadata i32 %sub, metadata !676, metadata !DIExpression()), !dbg !679
  call void @llvm.dbg.value(metadata i64* %up, metadata !671, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !679
  %0 = load i64, i64* %up, align 8, !dbg !693, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %0, metadata !674, metadata !DIExpression()), !dbg !679
  %sh_prom = zext i32 %sub to i64, !dbg !694
  call void @llvm.dbg.value(metadata i64 %shl, metadata !678, metadata !DIExpression()), !dbg !679
  %sh_prom13 = zext i32 %cnt to i64, !dbg !695
  call void @llvm.dbg.value(metadata i64 %n, metadata !677, metadata !DIExpression()), !dbg !679
  br label %for.cond, !dbg !696

for.cond:                                         ; preds = %for.body, %if.end10
  %.pn = phi i64 [ %0, %if.end10 ], [ %1, %for.body ]
  %i.0 = phi i64 [ %n, %if.end10 ], [ %dec, %for.body ], !dbg !698
  %up.pn = phi i64* [ %up, %if.end10 ], [ %up.addr.0, %for.body ]
  %rp.addr.0 = phi i64* [ %rp, %if.end10 ], [ %incdec.ptr19, %for.body ]
  %low_limb.0 = lshr i64 %.pn, %sh_prom13, !dbg !679
  %up.addr.0 = getelementptr inbounds i64, i64* %up.pn, i64 1, !dbg !679
  call void @llvm.dbg.value(metadata i64* %rp.addr.0, metadata !670, metadata !DIExpression()), !dbg !679
  call void @llvm.dbg.value(metadata i64* %up.addr.0, metadata !671, metadata !DIExpression()), !dbg !679
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !677, metadata !DIExpression()), !dbg !679
  call void @llvm.dbg.value(metadata i64 %low_limb.0, metadata !675, metadata !DIExpression()), !dbg !679
  %dec = add nsw i64 %i.0, -1, !dbg !699
  call void @llvm.dbg.value(metadata i64 %dec, metadata !677, metadata !DIExpression()), !dbg !679
  %cmp14 = icmp eq i64 %dec, 0, !dbg !701
  br i1 %cmp14, label %for.end, label %for.body, !dbg !702

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i64* %up.addr.0, metadata !671, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !679
  %1 = load i64, i64* %up.addr.0, align 8, !dbg !703, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %1, metadata !674, metadata !DIExpression()), !dbg !679
  %shl18 = shl i64 %1, %sh_prom, !dbg !705
  %or = or i64 %low_limb.0, %shl18, !dbg !706
  %incdec.ptr19 = getelementptr inbounds i64, i64* %rp.addr.0, i64 1, !dbg !707
  call void @llvm.dbg.value(metadata i64* %incdec.ptr19, metadata !670, metadata !DIExpression()), !dbg !679
  store i64 %or, i64* %rp.addr.0, align 8, !dbg !708, !tbaa !168
  br label %for.cond, !dbg !709, !llvm.loop !710

for.end:                                          ; preds = %for.cond
  %rp.addr.0.lcssa = phi i64* [ %rp.addr.0, %for.cond ]
  %low_limb.0.lcssa = phi i64 [ %low_limb.0, %for.cond ], !dbg !679
  call void @llvm.dbg.value(metadata i64* %rp.addr.0.lcssa, metadata !670, metadata !DIExpression()), !dbg !679
  %shl = shl i64 %0, %sh_prom, !dbg !694
  call void @llvm.dbg.value(metadata i64 %low_limb.0.lcssa, metadata !675, metadata !DIExpression()), !dbg !679
  call void @llvm.dbg.value(metadata i64* %rp.addr.0.lcssa, metadata !670, metadata !DIExpression()), !dbg !679
  call void @llvm.dbg.value(metadata i64 %low_limb.0.lcssa, metadata !675, metadata !DIExpression()), !dbg !679
  call void @llvm.dbg.value(metadata i64* %rp.addr.0.lcssa, metadata !670, metadata !DIExpression()), !dbg !679
  store i64 %low_limb.0.lcssa, i64* %rp.addr.0.lcssa, align 8, !dbg !712, !tbaa !168
  ret i64 %shl, !dbg !713
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_scan1(i64* %ptr, i64 %bit) local_unnamed_addr #0 !dbg !714 {
entry:
  call void @llvm.dbg.value(metadata i64* %ptr, metadata !718, metadata !DIExpression()), !dbg !721
  call void @llvm.dbg.value(metadata i64 %bit, metadata !719, metadata !DIExpression()), !dbg !721
  %div = lshr i64 %bit, 6, !dbg !722
  call void @llvm.dbg.value(metadata i64 %div, metadata !720, metadata !DIExpression()), !dbg !721
  %arrayidx = getelementptr inbounds i64, i64* %ptr, i64 %div, !dbg !723
  %0 = load i64, i64* %arrayidx, align 8, !dbg !723, !tbaa !168
  %rem = and i64 %bit, 63, !dbg !724
  %shl = shl i64 -1, %rem, !dbg !725
  %and = and i64 %0, %shl, !dbg !726
  %call = tail call fastcc i64 @mpn_common_scan(i64 %and, i64 %div, i64* %ptr, i64 %div, i64 0) #10, !dbg !727
  ret i64 %call, !dbg !728
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpn_common_scan(i64 %limb, i64 %i, i64* %up, i64 %un, i64 %ux) unnamed_addr #0 !dbg !729 {
entry:
  call void @llvm.dbg.value(metadata i64 %limb, metadata !733, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.value(metadata i64 %i, metadata !734, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.value(metadata i64* %up, metadata !735, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.value(metadata i64 %un, metadata !736, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.value(metadata i64 %ux, metadata !737, metadata !DIExpression()), !dbg !745
  switch i64 %ux, label %if.else [
    i64 0, label %if.end
    i64 -1, label %if.end
  ], !dbg !746

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 671, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.mpn_common_scan, i64 0, i64 0)) #8, !dbg !746
  unreachable, !dbg !746

if.end:                                           ; preds = %entry, %entry
  %cmp2 = icmp sgt i64 %i, -1, !dbg !749
  %cmp3 = icmp sle i64 %i, %un, !dbg !749
  %or.cond = and i1 %cmp2, %cmp3, !dbg !749
  br i1 %or.cond, label %while.cond.preheader, label %if.else5, !dbg !749

while.cond.preheader:                             ; preds = %if.end
  br label %while.cond, !dbg !752

if.else5:                                         ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 672, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.mpn_common_scan, i64 0, i64 0)) #8, !dbg !749
  unreachable, !dbg !749

while.cond:                                       ; preds = %while.cond.preheader, %if.end11
  %i.addr.0 = phi i64 [ %inc, %if.end11 ], [ %i, %while.cond.preheader ]
  %limb.addr.0 = phi i64 [ %xor, %if.end11 ], [ %limb, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata i64 %limb.addr.0, metadata !733, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.value(metadata i64 %i.addr.0, metadata !734, metadata !DIExpression()), !dbg !745
  %cmp7 = icmp eq i64 %limb.addr.0, 0, !dbg !753
  br i1 %cmp7, label %while.body, label %do.body12, !dbg !752

while.body:                                       ; preds = %while.cond
  %inc = add nsw i64 %i.addr.0, 1, !dbg !754
  call void @llvm.dbg.value(metadata i64 %inc, metadata !734, metadata !DIExpression()), !dbg !745
  %cmp8 = icmp eq i64 %inc, %un, !dbg !756
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !758

if.then9:                                         ; preds = %while.body
  %cmp10 = icmp eq i64 %ux, 0, !dbg !759
  %mul = shl i64 %un, 6, !dbg !760
  %cond = select i1 %cmp10, i64 -1, i64 %mul, !dbg !760
  br label %cleanup, !dbg !760

if.end11:                                         ; preds = %while.body
  %arrayidx = getelementptr inbounds i64, i64* %up, i64 %inc, !dbg !761
  %0 = load i64, i64* %arrayidx, align 8, !dbg !761, !tbaa !168
  %xor = xor i64 %0, %ux, !dbg !762
  call void @llvm.dbg.value(metadata i64 %xor, metadata !733, metadata !DIExpression()), !dbg !745
  br label %while.cond, !dbg !752, !llvm.loop !763

do.body12:                                        ; preds = %while.cond
  %i.addr.0.lcssa = phi i64 [ %i.addr.0, %while.cond ]
  %limb.addr.0.lcssa = phi i64 [ %limb.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata i64 %i.addr.0.lcssa, metadata !734, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.value(metadata i64 %limb.addr.0.lcssa, metadata !733, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.value(metadata i64 %i.addr.0.lcssa, metadata !734, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.value(metadata i64 %limb.addr.0.lcssa, metadata !733, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.value(metadata i64 %i.addr.0.lcssa, metadata !734, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.value(metadata i64 %limb.addr.0.lcssa, metadata !733, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.value(metadata i64 %limb.addr.0.lcssa, metadata !739, metadata !DIExpression()), !dbg !765
  call void @llvm.dbg.value(metadata i32 0, metadata !741, metadata !DIExpression()), !dbg !765
  %sub = sub i64 0, %limb.addr.0.lcssa, !dbg !766
  %and = and i64 %limb.addr.0.lcssa, %sub, !dbg !766
  call void @llvm.dbg.value(metadata i64 %and, metadata !742, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i32 0, metadata !744, metadata !DIExpression()), !dbg !767
  br label %for.cond, !dbg !768

for.cond:                                         ; preds = %for.body, %do.body12
  %__clz_x.0 = phi i64 [ %and, %do.body12 ], [ %shl, %for.body ], !dbg !767
  %__clz_c.0 = phi i32 [ 0, %do.body12 ], [ %add, %for.body ], !dbg !770
  call void @llvm.dbg.value(metadata i32 %__clz_c.0, metadata !744, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i64 %__clz_x.0, metadata !742, metadata !DIExpression()), !dbg !767
  %cmp14 = icmp ult i64 %__clz_x.0, 72057594037927936, !dbg !771
  br i1 %cmp14, label %for.body, label %for.cond15.preheader, !dbg !768

for.cond15.preheader:                             ; preds = %for.cond
  %__clz_x.0.lcssa = phi i64 [ %__clz_x.0, %for.cond ], !dbg !767
  %__clz_c.0.lcssa = phi i32 [ %__clz_c.0, %for.cond ], !dbg !770
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !742, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !744, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !742, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !744, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !742, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !744, metadata !DIExpression()), !dbg !767
  br label %for.cond15, !dbg !773

for.body:                                         ; preds = %for.cond
  %shl = shl i64 %__clz_x.0, 8, !dbg !771
  call void @llvm.dbg.value(metadata i64 %shl, metadata !742, metadata !DIExpression()), !dbg !767
  %add = add i32 %__clz_c.0, 8, !dbg !771
  call void @llvm.dbg.value(metadata i32 %add, metadata !744, metadata !DIExpression()), !dbg !767
  br label %for.cond, !dbg !771, !llvm.loop !775

for.cond15:                                       ; preds = %for.cond15.preheader, %for.body18
  %__clz_x.1 = phi i64 [ %shl19, %for.body18 ], [ %__clz_x.0.lcssa, %for.cond15.preheader ], !dbg !767
  %__clz_c.1 = phi i32 [ %inc21, %for.body18 ], [ %__clz_c.0.lcssa, %for.cond15.preheader ], !dbg !767
  call void @llvm.dbg.value(metadata i32 %__clz_c.1, metadata !744, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i64 %__clz_x.1, metadata !742, metadata !DIExpression()), !dbg !767
  %cmp17 = icmp sgt i64 %__clz_x.1, -1, !dbg !776
  br i1 %cmp17, label %for.body18, label %do.end, !dbg !773

for.body18:                                       ; preds = %for.cond15
  %shl19 = shl i64 %__clz_x.1, 1, !dbg !776
  call void @llvm.dbg.value(metadata i64 %shl19, metadata !742, metadata !DIExpression()), !dbg !767
  %inc21 = add i32 %__clz_c.1, 1, !dbg !776
  call void @llvm.dbg.value(metadata i32 %inc21, metadata !744, metadata !DIExpression()), !dbg !767
  br label %for.cond15, !dbg !776, !llvm.loop !778

do.end:                                           ; preds = %for.cond15
  %__clz_c.1.lcssa = phi i32 [ %__clz_c.1, %for.cond15 ], !dbg !767
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !744, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !744, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !744, metadata !DIExpression()), !dbg !767
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !741, metadata !DIExpression()), !dbg !765
  %sub23 = sub i32 63, %__clz_c.1.lcssa, !dbg !779
  call void @llvm.dbg.value(metadata i32 %sub23, metadata !738, metadata !DIExpression()), !dbg !745
  %mul27 = shl i64 %i.addr.0.lcssa, 6, !dbg !780
  %conv28 = zext i32 %sub23 to i64, !dbg !781
  %add29 = add i64 %mul27, %conv28, !dbg !782
  br label %cleanup, !dbg !783

cleanup:                                          ; preds = %if.then9, %do.end
  %retval.0 = phi i64 [ %add29, %do.end ], [ %cond, %if.then9 ], !dbg !745
  ret i64 %retval.0, !dbg !784
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_scan0(i64* %ptr, i64 %bit) local_unnamed_addr #0 !dbg !785 {
entry:
  call void @llvm.dbg.value(metadata i64* %ptr, metadata !787, metadata !DIExpression()), !dbg !790
  call void @llvm.dbg.value(metadata i64 %bit, metadata !788, metadata !DIExpression()), !dbg !790
  %div = lshr i64 %bit, 6, !dbg !791
  call void @llvm.dbg.value(metadata i64 %div, metadata !789, metadata !DIExpression()), !dbg !790
  %arrayidx = getelementptr inbounds i64, i64* %ptr, i64 %div, !dbg !792
  %0 = load i64, i64* %arrayidx, align 8, !dbg !792, !tbaa !168
  %neg = xor i64 %0, -1, !dbg !793
  %rem = and i64 %bit, 63, !dbg !794
  %shl = shl i64 -1, %rem, !dbg !795
  %and = and i64 %shl, %neg, !dbg !796
  %call = tail call fastcc i64 @mpn_common_scan(i64 %and, i64 %div, i64* %ptr, i64 %div, i64 -1) #10, !dbg !797
  ret i64 %call, !dbg !798
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_invert_3by2(i64 %u1, i64 %u0) local_unnamed_addr #0 !dbg !799 {
entry:
  call void @llvm.dbg.value(metadata i64 %u1, metadata !803, metadata !DIExpression()), !dbg !827
  call void @llvm.dbg.value(metadata i64 %u0, metadata !804, metadata !DIExpression()), !dbg !827
  %cmp = icmp slt i64 %u1, 0, !dbg !828
  br i1 %cmp, label %if.end, label %if.else, !dbg !831

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 717, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__PRETTY_FUNCTION__.mpn_invert_3by2, i64 0, i64 0)) #8, !dbg !828
  unreachable, !dbg !828

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i64 %u1, metadata !808, metadata !DIExpression()), !dbg !827
  %shr = lshr i64 %u1, 32, !dbg !832
  %neg = xor i64 %u1, -1, !dbg !833
  %div = udiv i64 %neg, %shr, !dbg !834
  %conv3 = trunc i64 %div to i32, !dbg !833
  call void @llvm.dbg.value(metadata i32 %conv3, metadata !811, metadata !DIExpression()), !dbg !827
  %neg4 = xor i64 %u1, 4294967295, !dbg !835
  %conv5 = and i64 %div, 4294967295, !dbg !836
  %mul = mul nuw i64 %conv5, %shr, !dbg !837
  %sub = sub i64 %neg4, %mul, !dbg !838
  %shl = shl i64 %sub, 32, !dbg !839
  %or = or i64 %shl, 4294967295, !dbg !840
  call void @llvm.dbg.value(metadata i64 %or, metadata !805, metadata !DIExpression()), !dbg !827
  %conv8 = and i64 %u1, 4294967295, !dbg !841
  %mul9 = mul nuw i64 %conv5, %conv8, !dbg !842
  call void @llvm.dbg.value(metadata i64 %mul9, metadata !806, metadata !DIExpression()), !dbg !827
  %cmp10 = icmp ult i64 %or, %mul9, !dbg !843
  br i1 %cmp10, label %if.then12, label %if.end23, !dbg !845

if.then12:                                        ; preds = %if.end
  %dec = add i32 %conv3, -1, !dbg !846
  call void @llvm.dbg.value(metadata i32 %dec, metadata !811, metadata !DIExpression()), !dbg !827
  %add = add i64 %or, %u1, !dbg !848
  call void @llvm.dbg.value(metadata i64 %add, metadata !805, metadata !DIExpression()), !dbg !827
  %cmp13 = icmp ult i64 %add, %u1, !dbg !849
  br i1 %cmp13, label %if.end23, label %if.then15, !dbg !851

if.then15:                                        ; preds = %if.then12
  %cmp16 = icmp ult i64 %add, %mul9, !dbg !852
  %dec19 = add i32 %conv3, -2, !dbg !854
  %qh.0 = select i1 %cmp16, i32 %dec19, i32 %dec, !dbg !854
  %add20 = select i1 %cmp16, i64 %u1, i64 0, !dbg !854
  %r.0 = add i64 %add, %add20, !dbg !854
  br label %if.end23, !dbg !854

if.end23:                                         ; preds = %if.then12, %if.then15, %if.end
  %qh.2 = phi i32 [ %conv3, %if.end ], [ %dec, %if.then12 ], [ %qh.0, %if.then15 ], !dbg !827
  %r.2 = phi i64 [ %or, %if.end ], [ %add, %if.then12 ], [ %r.0, %if.then15 ], !dbg !827
  call void @llvm.dbg.value(metadata i64 %r.2, metadata !805, metadata !DIExpression()), !dbg !827
  call void @llvm.dbg.value(metadata i32 %qh.2, metadata !811, metadata !DIExpression()), !dbg !827
  %sub24 = sub i64 %r.2, %mul9, !dbg !855
  call void @llvm.dbg.value(metadata i64 %sub24, metadata !805, metadata !DIExpression()), !dbg !827
  %shr25 = lshr i64 %sub24, 32, !dbg !856
  %conv26 = zext i32 %qh.2 to i64, !dbg !857
  %mul27 = mul nuw i64 %shr25, %conv26, !dbg !858
  %add28 = add i64 %mul27, %sub24, !dbg !859
  call void @llvm.dbg.value(metadata i64 %add28, metadata !806, metadata !DIExpression()), !dbg !827
  %shr29 = lshr i64 %add28, 32, !dbg !860
  %0 = trunc i64 %shr29 to i32, !dbg !861
  %conv31 = add i32 %0, 1, !dbg !861
  call void @llvm.dbg.value(metadata i32 %conv31, metadata !810, metadata !DIExpression()), !dbg !827
  %shl32 = shl i64 %sub24, 32, !dbg !862
  %add33 = or i64 %shl32, 4294967295, !dbg !863
  %conv34 = zext i32 %conv31 to i64, !dbg !864
  %mul35 = mul i64 %conv34, %u1, !dbg !865
  %sub36 = sub i64 %add33, %mul35, !dbg !866
  call void @llvm.dbg.value(metadata i64 %sub36, metadata !805, metadata !DIExpression()), !dbg !827
  %shl37 = shl i64 %add28, 32, !dbg !867
  %cmp38 = icmp uge i64 %sub36, %shl37, !dbg !869
  %ql.0 = select i1 %cmp38, i32 %0, i32 %conv31, !dbg !870
  %add42 = select i1 %cmp38, i64 %u1, i64 0, !dbg !870
  %r.3 = add i64 %sub36, %add42, !dbg !870
  call void @llvm.dbg.value(metadata i64 %r.3, metadata !805, metadata !DIExpression()), !dbg !827
  call void @llvm.dbg.value(metadata i32 %ql.0, metadata !810, metadata !DIExpression()), !dbg !827
  %shl45 = shl nuw i64 %conv26, 32, !dbg !871
  %conv46 = zext i32 %ql.0 to i64, !dbg !872
  %add47 = or i64 %shl45, %conv46, !dbg !873
  call void @llvm.dbg.value(metadata i64 %add47, metadata !807, metadata !DIExpression()), !dbg !827
  %cmp48 = icmp uge i64 %r.3, %u1, !dbg !874
  %inc = zext i1 %cmp48 to i64, !dbg !876
  %m.0 = add i64 %add47, %inc, !dbg !876
  call void @llvm.dbg.value(metadata i64 undef, metadata !805, metadata !DIExpression()), !dbg !827
  call void @llvm.dbg.value(metadata i64 %m.0, metadata !807, metadata !DIExpression()), !dbg !827
  %cmp53 = icmp eq i64 %u0, 0, !dbg !877
  br i1 %cmp53, label %if.end119, label %if.then55, !dbg !878

if.then55:                                        ; preds = %if.end23
  %sub51 = select i1 %cmp48, i64 %u1, i64 0, !dbg !876
  %1 = xor i64 %r.3, -1, !dbg !879
  %neg56 = add i64 %sub51, %1, !dbg !879
  call void @llvm.dbg.value(metadata i64 %neg56, metadata !805, metadata !DIExpression()), !dbg !827
  %add57 = add i64 %neg56, %u0, !dbg !880
  call void @llvm.dbg.value(metadata i64 %add57, metadata !805, metadata !DIExpression()), !dbg !827
  %cmp58 = icmp ult i64 %add57, %u0, !dbg !881
  br i1 %cmp58, label %if.then60, label %do.body, !dbg !883

if.then60:                                        ; preds = %if.then55
  call void @llvm.dbg.value(metadata i64 %m.0, metadata !807, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !827
  %cmp62 = icmp uge i64 %add57, %u1, !dbg !884
  %m.1.v = select i1 %cmp62, i64 -2, i64 -1, !dbg !887
  %m.1 = add i64 %m.0, %m.1.v, !dbg !887
  %sub66 = select i1 %cmp62, i64 %u1, i64 0, !dbg !887
  %r.5 = sub i64 %add57, %sub66, !dbg !887
  call void @llvm.dbg.value(metadata i64 %r.5, metadata !805, metadata !DIExpression()), !dbg !827
  call void @llvm.dbg.value(metadata i64 %m.1, metadata !807, metadata !DIExpression()), !dbg !827
  %sub68 = sub i64 %r.5, %u1, !dbg !888
  call void @llvm.dbg.value(metadata i64 %sub68, metadata !805, metadata !DIExpression()), !dbg !827
  br label %do.body, !dbg !889

do.body:                                          ; preds = %if.then55, %if.then60
  %m.2 = phi i64 [ %m.1, %if.then60 ], [ %m.0, %if.then55 ], !dbg !827
  %r.6 = phi i64 [ %sub68, %if.then60 ], [ %add57, %if.then55 ], !dbg !890
  call void @llvm.dbg.value(metadata i64 %r.6, metadata !805, metadata !DIExpression()), !dbg !827
  call void @llvm.dbg.value(metadata i64 %m.2, metadata !807, metadata !DIExpression()), !dbg !827
  call void @llvm.dbg.value(metadata i64 %u0, metadata !825, metadata !DIExpression()), !dbg !891
  call void @llvm.dbg.value(metadata i64 %m.2, metadata !826, metadata !DIExpression()), !dbg !891
  call void @llvm.dbg.value(metadata i64 %u0, metadata !821, metadata !DIExpression()), !dbg !891
  %shr72 = lshr i64 %u0, 32, !dbg !892
  %shr76 = lshr i64 %m.2, 32, !dbg !892
  %conv78 = and i64 %u0, 4294967295, !dbg !892
  %conv79 = and i64 %m.2, 4294967295, !dbg !892
  %mul80 = mul nuw i64 %conv78, %conv79, !dbg !892
  call void @llvm.dbg.value(metadata i64 %mul80, metadata !816, metadata !DIExpression()), !dbg !891
  %mul83 = mul nuw i64 %conv78, %shr76, !dbg !892
  call void @llvm.dbg.value(metadata i64 %mul83, metadata !818, metadata !DIExpression()), !dbg !891
  %mul86 = mul nuw i64 %shr72, %conv79, !dbg !892
  call void @llvm.dbg.value(metadata i64 %mul86, metadata !819, metadata !DIExpression()), !dbg !891
  %mul89 = mul nuw i64 %shr72, %shr76, !dbg !892
  call void @llvm.dbg.value(metadata i64 %mul89, metadata !820, metadata !DIExpression()), !dbg !891
  %shr90 = lshr i64 %mul80, 32, !dbg !892
  %add91 = add i64 %mul83, %shr90, !dbg !892
  call void @llvm.dbg.value(metadata i64 %add91, metadata !818, metadata !DIExpression()), !dbg !891
  %add92 = add i64 %add91, %mul86, !dbg !892
  call void @llvm.dbg.value(metadata i64 %add92, metadata !818, metadata !DIExpression()), !dbg !891
  %cmp93 = icmp ult i64 %add92, %mul86, !dbg !893
  %add96 = add i64 %mul89, 4294967296, !dbg !893
  %spec.select = select i1 %cmp93, i64 %add96, i64 %mul89, !dbg !892
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !820, metadata !DIExpression()), !dbg !891
  %shr98 = lshr i64 %add92, 32, !dbg !892
  %add99 = add i64 %spec.select, %shr98, !dbg !892
  call void @llvm.dbg.value(metadata i64 %add99, metadata !812, metadata !DIExpression()), !dbg !890
  call void @llvm.dbg.value(metadata i64 undef, metadata !815, metadata !DIExpression()), !dbg !890
  %add103 = add i64 %r.6, %add99, !dbg !895
  call void @llvm.dbg.value(metadata i64 %add103, metadata !805, metadata !DIExpression()), !dbg !827
  %cmp104 = icmp ult i64 %add103, %add99, !dbg !896
  br i1 %cmp104, label %if.then106, label %if.end119, !dbg !898

if.then106:                                       ; preds = %do.body
  %shl100 = shl i64 %add92, 32, !dbg !892
  %and101 = and i64 %mul80, 4294967295, !dbg !892
  %add102 = or i64 %shl100, %and101, !dbg !892
  call void @llvm.dbg.value(metadata i64 %add102, metadata !815, metadata !DIExpression()), !dbg !890
  call void @llvm.dbg.value(metadata i64 %m.2, metadata !807, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !827
  %cmp108 = icmp ugt i64 %add103, %u1, !dbg !899
  %cmp110 = icmp eq i64 %add103, %u1, !dbg !901
  %cmp112 = icmp ugt i64 %add102, %u0, !dbg !902
  %and1141 = and i1 %cmp110, %cmp112, !dbg !903
  %or1152 = or i1 %cmp108, %and1141, !dbg !904
  %conv116 = zext i1 %or1152 to i64, !dbg !905
  %2 = xor i64 %conv116, -1, !dbg !906
  %sub117 = add i64 %m.2, %2, !dbg !906
  call void @llvm.dbg.value(metadata i64 %sub117, metadata !807, metadata !DIExpression()), !dbg !827
  br label %if.end119, !dbg !907

if.end119:                                        ; preds = %if.end23, %do.body, %if.then106
  %m.4 = phi i64 [ %m.0, %if.end23 ], [ %sub117, %if.then106 ], [ %m.2, %do.body ], !dbg !827
  call void @llvm.dbg.value(metadata i64 %m.4, metadata !807, metadata !DIExpression()), !dbg !827
  ret i64 %m.4, !dbg !908
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_get_str(i8* %sp, i32 %base, i64* %up, i64 %un) local_unnamed_addr #0 !dbg !909 {
entry:
  %info = alloca %struct.mpn_base_info, align 8
  call void @llvm.dbg.value(metadata i8* %sp, metadata !913, metadata !DIExpression()), !dbg !925
  call void @llvm.dbg.value(metadata i32 %base, metadata !914, metadata !DIExpression()), !dbg !925
  call void @llvm.dbg.value(metadata i64* %up, metadata !915, metadata !DIExpression()), !dbg !925
  call void @llvm.dbg.value(metadata i64 %un, metadata !916, metadata !DIExpression()), !dbg !925
  %cmp = icmp sgt i64 %un, 0, !dbg !926
  br i1 %cmp, label %if.end, label %if.else, !dbg !929

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1258, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.mpn_get_str, i64 0, i64 0)) #8, !dbg !926
  unreachable, !dbg !926

if.end:                                           ; preds = %entry
  %sub = add nsw i64 %un, -1, !dbg !930
  %arrayidx = getelementptr inbounds i64, i64* %up, i64 %sub, !dbg !930
  %0 = load i64, i64* %arrayidx, align 8, !dbg !930, !tbaa !168
  %cmp1 = icmp eq i64 %0, 0, !dbg !930
  br i1 %cmp1, label %if.else3, label %if.end4, !dbg !933

if.else3:                                         ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1259, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.mpn_get_str, i64 0, i64 0)) #8, !dbg !930
  unreachable, !dbg !930

if.end4:                                          ; preds = %if.end
  %call = tail call fastcc i32 @mpn_base_power_of_two_p(i32 %base) #10, !dbg !934
  call void @llvm.dbg.value(metadata i32 %call, metadata !917, metadata !DIExpression()), !dbg !925
  %tobool = icmp eq i32 %call, 0, !dbg !935
  br i1 %tobool, label %if.else7, label %if.then5, !dbg !936

if.then5:                                         ; preds = %if.end4
  %call6 = tail call fastcc i64 @mpn_get_str_bits(i8* %sp, i32 %call, i64* %up, i64 %un) #10, !dbg !937
  br label %cleanup, !dbg !938

if.else7:                                         ; preds = %if.end4
  %1 = bitcast %struct.mpn_base_info* %info to i8*, !dbg !939
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #11, !dbg !939
  %conv = sext i32 %base to i64, !dbg !940
  call void @llvm.dbg.value(metadata %struct.mpn_base_info* %info, metadata !918, metadata !DIExpression(DW_OP_deref)), !dbg !941
  call fastcc void @mpn_get_base_info(%struct.mpn_base_info* nonnull %info, i64 %conv) #10, !dbg !942
  call void @llvm.dbg.value(metadata %struct.mpn_base_info* %info, metadata !918, metadata !DIExpression(DW_OP_deref)), !dbg !941
  %call8 = call fastcc i64 @mpn_get_str_other(i8* %sp, i32 %base, %struct.mpn_base_info* nonnull %info, i64* %up, i64 %un) #10, !dbg !943
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #11, !dbg !944
  br label %cleanup

cleanup:                                          ; preds = %if.else7, %if.then5
  %retval.0 = phi i64 [ %call6, %if.then5 ], [ %call8, %if.else7 ], !dbg !945
  ret i64 %retval.0, !dbg !946
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mpn_base_power_of_two_p(i32 %b) unnamed_addr #0 !dbg !947 {
entry:
  call void @llvm.dbg.value(metadata i32 %b, metadata !951, metadata !DIExpression()), !dbg !952
  switch i32 %b, label %sw.default [
    i32 2, label %return
    i32 4, label %sw.bb1
    i32 8, label %sw.bb2
    i32 16, label %sw.bb3
    i32 32, label %sw.bb4
    i32 64, label %sw.bb5
    i32 128, label %sw.bb6
    i32 256, label %sw.bb7
  ], !dbg !953

sw.bb1:                                           ; preds = %entry
  br label %return, !dbg !954

sw.bb2:                                           ; preds = %entry
  br label %return, !dbg !956

sw.bb3:                                           ; preds = %entry
  br label %return, !dbg !957

sw.bb4:                                           ; preds = %entry
  br label %return, !dbg !958

sw.bb5:                                           ; preds = %entry
  br label %return, !dbg !959

sw.bb6:                                           ; preds = %entry
  br label %return, !dbg !960

sw.bb7:                                           ; preds = %entry
  br label %return, !dbg !961

sw.default:                                       ; preds = %entry
  br label %return, !dbg !962

return:                                           ; preds = %entry, %sw.default, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %retval.0 = phi i32 [ 0, %sw.default ], [ 8, %sw.bb7 ], [ 7, %sw.bb6 ], [ 6, %sw.bb5 ], [ 5, %sw.bb4 ], [ 4, %sw.bb3 ], [ 3, %sw.bb2 ], [ 2, %sw.bb1 ], [ 1, %entry ], !dbg !963
  ret i32 %retval.0, !dbg !964
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpn_get_str_bits(i8* %sp, i32 %bits, i64* %up, i64 %un) unnamed_addr #0 !dbg !965 {
entry:
  call void @llvm.dbg.value(metadata i8* %sp, metadata !969, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.value(metadata i32 %bits, metadata !970, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.value(metadata i64* %up, metadata !971, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.value(metadata i64 %un, metadata !972, metadata !DIExpression()), !dbg !982
  %sub = shl i64 %un, 6, !dbg !983
  %mul = add i64 %sub, -64, !dbg !983
  %sub1 = add nsw i64 %un, -1, !dbg !984
  %arrayidx = getelementptr inbounds i64, i64* %up, i64 %sub1, !dbg !985
  %0 = load i64, i64* %arrayidx, align 8, !dbg !985, !tbaa !168
  %call = tail call fastcc i64 @mpn_limb_size_in_base_2(i64 %0) #10, !dbg !986
  %add = add i64 %mul, %call, !dbg !987
  %conv = zext i32 %bits to i64, !dbg !988
  %add2 = add i64 %add, %conv, !dbg !989
  %sub3 = add i64 %add2, -1, !dbg !990
  %div = udiv i64 %sub3, %conv, !dbg !991
  call void @llvm.dbg.value(metadata i64 %div, metadata !974, metadata !DIExpression()), !dbg !982
  %notmask = shl nsw i32 -1, %bits, !dbg !992
  call void @llvm.dbg.value(metadata i64 0, metadata !976, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.value(metadata i64 %div, metadata !975, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.value(metadata i32 0, metadata !977, metadata !DIExpression()), !dbg !982
  %1 = trunc i32 %notmask to i8, !dbg !993
  %2 = xor i8 %1, -1, !dbg !993
  br label %for.cond, !dbg !994

for.cond:                                         ; preds = %if.end, %entry
  %j.0 = phi i64 [ %div, %entry ], [ %dec, %if.end ], !dbg !995
  %i.0 = phi i64 [ 0, %entry ], [ %i.1, %if.end ], !dbg !995
  %shift.0 = phi i32 [ 0, %entry ], [ %shift.1, %if.end ], !dbg !995
  call void @llvm.dbg.value(metadata i32 %shift.0, metadata !977, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !976, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !975, metadata !DIExpression()), !dbg !982
  %dec = add i64 %j.0, -1, !dbg !996
  call void @llvm.dbg.value(metadata i64 %dec, metadata !975, metadata !DIExpression()), !dbg !982
  %cmp = icmp eq i64 %j.0, 0, !dbg !997
  br i1 %cmp, label %for.end, label %for.body, !dbg !998

for.body:                                         ; preds = %for.cond
  %arrayidx8 = getelementptr inbounds i64, i64* %up, i64 %i.0, !dbg !999
  %3 = load i64, i64* %arrayidx8, align 8, !dbg !999, !tbaa !168
  %sh_prom = zext i32 %shift.0 to i64, !dbg !1000
  %shr = lshr i64 %3, %sh_prom, !dbg !1000
  %conv9 = trunc i64 %shr to i8, !dbg !999
  call void @llvm.dbg.value(metadata i8 %conv9, metadata !978, metadata !DIExpression()), !dbg !993
  %add10 = add i32 %shift.0, %bits, !dbg !1001
  call void @llvm.dbg.value(metadata i32 %add10, metadata !977, metadata !DIExpression()), !dbg !982
  %cmp12 = icmp ugt i32 %add10, 63, !dbg !1002
  br i1 %cmp12, label %land.lhs.true, label %if.end, !dbg !1004

land.lhs.true:                                    ; preds = %for.body
  %inc = add nsw i64 %i.0, 1, !dbg !1005
  call void @llvm.dbg.value(metadata i64 %inc, metadata !976, metadata !DIExpression()), !dbg !982
  %cmp14 = icmp slt i64 %inc, %un, !dbg !1006
  br i1 %cmp14, label %if.then, label %if.end, !dbg !1007

if.then:                                          ; preds = %land.lhs.true
  %sub17 = add i32 %add10, -64, !dbg !1008
  call void @llvm.dbg.value(metadata i32 %sub17, metadata !977, metadata !DIExpression()), !dbg !982
  %arrayidx19 = getelementptr inbounds i64, i64* %up, i64 %inc, !dbg !1010
  %4 = load i64, i64* %arrayidx19, align 8, !dbg !1010, !tbaa !168
  %sub20 = sub i32 %bits, %sub17, !dbg !1011
  %sh_prom21 = zext i32 %sub20 to i64, !dbg !1012
  %shl22 = shl i64 %4, %sh_prom21, !dbg !1012
  %or = or i64 %shr, %shl22, !dbg !1013
  %conv24 = trunc i64 %or to i8, !dbg !1013
  call void @llvm.dbg.value(metadata i8 %conv24, metadata !978, metadata !DIExpression()), !dbg !993
  br label %if.end, !dbg !1014

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %i.1 = phi i64 [ %inc, %if.then ], [ %inc, %land.lhs.true ], [ %i.0, %for.body ], !dbg !995
  %shift.1 = phi i32 [ %sub17, %if.then ], [ %add10, %land.lhs.true ], [ %add10, %for.body ], !dbg !993
  %digit.0 = phi i8 [ %conv24, %if.then ], [ %conv9, %land.lhs.true ], [ %conv9, %for.body ], !dbg !993
  call void @llvm.dbg.value(metadata i8 %digit.0, metadata !978, metadata !DIExpression()), !dbg !993
  call void @llvm.dbg.value(metadata i32 %shift.1, metadata !977, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !976, metadata !DIExpression()), !dbg !982
  %conv27 = and i8 %digit.0, %2, !dbg !1015
  %arrayidx28 = getelementptr inbounds i8, i8* %sp, i64 %dec, !dbg !1016
  store i8 %conv27, i8* %arrayidx28, align 1, !dbg !1017, !tbaa !1018
  br label %for.cond, !dbg !1019, !llvm.loop !1020

for.end:                                          ; preds = %for.cond
  ret i64 %div, !dbg !1022
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mpn_get_base_info(%struct.mpn_base_info* %info, i64 %b) unnamed_addr #0 !dbg !1023 {
entry:
  call void @llvm.dbg.value(metadata %struct.mpn_base_info* %info, metadata !1028, metadata !DIExpression()), !dbg !1033
  call void @llvm.dbg.value(metadata i64 %b, metadata !1029, metadata !DIExpression()), !dbg !1033
  %div = udiv i64 -1, %b, !dbg !1034
  call void @llvm.dbg.value(metadata i64 %div, metadata !1030, metadata !DIExpression()), !dbg !1033
  call void @llvm.dbg.value(metadata i32 1, metadata !1032, metadata !DIExpression()), !dbg !1033
  call void @llvm.dbg.value(metadata i64 %b, metadata !1031, metadata !DIExpression()), !dbg !1033
  br label %for.cond, !dbg !1035

for.cond:                                         ; preds = %for.body, %entry
  %p.0 = phi i64 [ %b, %entry ], [ %mul, %for.body ], !dbg !1037
  %exp.0 = phi i32 [ 1, %entry ], [ %inc, %for.body ], !dbg !1037
  call void @llvm.dbg.value(metadata i32 %exp.0, metadata !1032, metadata !DIExpression()), !dbg !1033
  call void @llvm.dbg.value(metadata i64 %p.0, metadata !1031, metadata !DIExpression()), !dbg !1033
  %cmp = icmp ugt i64 %p.0, %div, !dbg !1038
  br i1 %cmp, label %for.end, label %for.body, !dbg !1040

for.body:                                         ; preds = %for.cond
  %mul = mul i64 %p.0, %b, !dbg !1041
  call void @llvm.dbg.value(metadata i64 %mul, metadata !1031, metadata !DIExpression()), !dbg !1033
  %inc = add i32 %exp.0, 1, !dbg !1042
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1032, metadata !DIExpression()), !dbg !1033
  br label %for.cond, !dbg !1043, !llvm.loop !1044

for.end:                                          ; preds = %for.cond
  %p.0.lcssa = phi i64 [ %p.0, %for.cond ], !dbg !1037
  %exp.0.lcssa = phi i32 [ %exp.0, %for.cond ], !dbg !1037
  call void @llvm.dbg.value(metadata i64 %p.0.lcssa, metadata !1031, metadata !DIExpression()), !dbg !1033
  call void @llvm.dbg.value(metadata i32 %exp.0.lcssa, metadata !1032, metadata !DIExpression()), !dbg !1033
  call void @llvm.dbg.value(metadata i64 %p.0.lcssa, metadata !1031, metadata !DIExpression()), !dbg !1033
  call void @llvm.dbg.value(metadata i32 %exp.0.lcssa, metadata !1032, metadata !DIExpression()), !dbg !1033
  call void @llvm.dbg.value(metadata i64 %p.0.lcssa, metadata !1031, metadata !DIExpression()), !dbg !1033
  call void @llvm.dbg.value(metadata i32 %exp.0.lcssa, metadata !1032, metadata !DIExpression()), !dbg !1033
  %exp1 = getelementptr inbounds %struct.mpn_base_info, %struct.mpn_base_info* %info, i64 0, i32 0, !dbg !1046
  store i32 %exp.0.lcssa, i32* %exp1, align 8, !dbg !1047, !tbaa !1048
  %bb = getelementptr inbounds %struct.mpn_base_info, %struct.mpn_base_info* %info, i64 0, i32 1, !dbg !1051
  store i64 %p.0.lcssa, i64* %bb, align 8, !dbg !1052, !tbaa !1053
  ret void, !dbg !1054
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpn_get_str_other(i8* %sp, i32 %base, %struct.mpn_base_info* %info, i64* %up, i64 %un) unnamed_addr #0 !dbg !1055 {
entry:
  %binv = alloca %struct.gmp_div_inverse, align 8
  %bbinv = alloca %struct.gmp_div_inverse, align 8
  call void @llvm.dbg.value(metadata i8* %sp, metadata !1061, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.value(metadata i32 %base, metadata !1062, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.value(metadata %struct.mpn_base_info* %info, metadata !1063, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.value(metadata i64* %up, metadata !1064, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.value(metadata i64 %un, metadata !1065, metadata !DIExpression()), !dbg !1085
  %0 = bitcast %struct.gmp_div_inverse* %binv to i8*, !dbg !1086
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #11, !dbg !1086
  %conv = sext i32 %base to i64, !dbg !1087
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %binv, metadata !1066, metadata !DIExpression(DW_OP_deref)), !dbg !1085
  call fastcc void @mpn_div_qr_1_invert(%struct.gmp_div_inverse* nonnull %binv, i64 %conv) #10, !dbg !1088
  call void @llvm.dbg.value(metadata i64 0, metadata !1073, metadata !DIExpression()), !dbg !1085
  %cmp = icmp sgt i64 %un, 1, !dbg !1089
  br i1 %cmp, label %if.then, label %if.end, !dbg !1090

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.gmp_div_inverse* %bbinv to i8*, !dbg !1091
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #11, !dbg !1091
  %bb = getelementptr inbounds %struct.mpn_base_info, %struct.mpn_base_info* %info, i64 0, i32 1, !dbg !1092
  %2 = load i64, i64* %bb, align 8, !dbg !1092, !tbaa !1053
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %bbinv, metadata !1075, metadata !DIExpression(DW_OP_deref)), !dbg !1093
  call fastcc void @mpn_div_qr_1_invert(%struct.gmp_div_inverse* nonnull %bbinv, i64 %2) #10, !dbg !1094
  %exp = getelementptr inbounds %struct.mpn_base_info, %struct.mpn_base_info* %info, i64 0, i32 0, !dbg !1095
  br label %do.body, !dbg !1098

do.body:                                          ; preds = %do.cond, %if.then
  %un.addr.0 = phi i64 [ %un, %if.then ], [ %sub5, %do.cond ]
  %sn.0 = phi i64 [ 0, %if.then ], [ %sn.1.lcssa, %do.cond ], !dbg !1085
  call void @llvm.dbg.value(metadata i64 %sn.0, metadata !1073, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.value(metadata i64 %un.addr.0, metadata !1065, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %bbinv, metadata !1075, metadata !DIExpression(DW_OP_deref)), !dbg !1093
  %call = call fastcc i64 @mpn_div_qr_1_preinv(i64* %up, i64* %up, i64 %un.addr.0, %struct.gmp_div_inverse* nonnull %bbinv) #10, !dbg !1099
  call void @llvm.dbg.value(metadata i64 %call, metadata !1078, metadata !DIExpression()), !dbg !1100
  %sub = add nsw i64 %un.addr.0, -1, !dbg !1101
  %arrayidx = getelementptr inbounds i64, i64* %up, i64 %sub, !dbg !1102
  %3 = load i64, i64* %arrayidx, align 8, !dbg !1102, !tbaa !168
  %cmp2 = icmp eq i64 %3, 0, !dbg !1103
  call void @llvm.dbg.value(metadata i64 %sub5, metadata !1065, metadata !DIExpression()), !dbg !1085
  %add.ptr = getelementptr inbounds i8, i8* %sp, i64 %sn.0, !dbg !1104
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %binv, metadata !1066, metadata !DIExpression(DW_OP_deref)), !dbg !1085
  %call6 = call fastcc i64 @mpn_limb_get_str(i8* %add.ptr, i64 %call, %struct.gmp_div_inverse* nonnull %binv) #10, !dbg !1105
  call void @llvm.dbg.value(metadata i64 %call6, metadata !1080, metadata !DIExpression()), !dbg !1100
  %add = add i64 %sn.0, %call6, !dbg !1106
  call void @llvm.dbg.value(metadata i64 %add, metadata !1073, metadata !DIExpression()), !dbg !1085
  br label %for.cond, !dbg !1107

for.cond:                                         ; preds = %for.body, %do.body
  %sn.1 = phi i64 [ %add, %do.body ], [ %inc, %for.body ], !dbg !1108
  %done.0 = phi i64 [ %call6, %do.body ], [ %inc11, %for.body ], !dbg !1100
  call void @llvm.dbg.value(metadata i64 %done.0, metadata !1080, metadata !DIExpression()), !dbg !1100
  call void @llvm.dbg.value(metadata i64 %sn.1, metadata !1073, metadata !DIExpression()), !dbg !1085
  %4 = load i32, i32* %exp, align 8, !dbg !1109, !tbaa !1048
  %conv7 = zext i32 %4 to i64, !dbg !1110
  %cmp8 = icmp ult i64 %done.0, %conv7, !dbg !1111
  br i1 %cmp8, label %for.body, label %do.cond, !dbg !1112

for.body:                                         ; preds = %for.cond
  %inc = add i64 %sn.1, 1, !dbg !1113
  call void @llvm.dbg.value(metadata i64 %inc, metadata !1073, metadata !DIExpression()), !dbg !1085
  %arrayidx10 = getelementptr inbounds i8, i8* %sp, i64 %sn.1, !dbg !1114
  store i8 0, i8* %arrayidx10, align 1, !dbg !1115, !tbaa !1018
  %inc11 = add i64 %done.0, 1, !dbg !1116
  call void @llvm.dbg.value(metadata i64 %inc11, metadata !1080, metadata !DIExpression()), !dbg !1100
  br label %for.cond, !dbg !1117, !llvm.loop !1118

do.cond:                                          ; preds = %for.cond
  %sn.1.lcssa = phi i64 [ %sn.1, %for.cond ], !dbg !1108
  %conv4 = zext i1 %cmp2 to i64, !dbg !1120
  call void @llvm.dbg.value(metadata i64 %sn.1.lcssa, metadata !1073, metadata !DIExpression()), !dbg !1085
  %sub5 = sub nsw i64 %un.addr.0, %conv4, !dbg !1121
  call void @llvm.dbg.value(metadata i64 %sn.1.lcssa, metadata !1073, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.value(metadata i64 %sn.1.lcssa, metadata !1073, metadata !DIExpression()), !dbg !1085
  %cmp12 = icmp sgt i64 %sub5, 1, !dbg !1122
  br i1 %cmp12, label %do.body, label %do.end, !dbg !1123, !llvm.loop !1124

do.end:                                           ; preds = %do.cond
  %sn.1.lcssa.lcssa = phi i64 [ %sn.1.lcssa, %do.cond ], !dbg !1108
  call void @llvm.dbg.value(metadata i64 %sn.1.lcssa.lcssa, metadata !1073, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.value(metadata i64 %sn.1.lcssa.lcssa, metadata !1073, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.value(metadata i64 %sn.1.lcssa.lcssa, metadata !1073, metadata !DIExpression()), !dbg !1085
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #11, !dbg !1126
  br label %if.end, !dbg !1127

if.end:                                           ; preds = %do.end, %entry
  %sn.2 = phi i64 [ %sn.1.lcssa.lcssa, %do.end ], [ 0, %entry ], !dbg !1085
  call void @llvm.dbg.value(metadata i64 %sn.2, metadata !1073, metadata !DIExpression()), !dbg !1085
  %add.ptr14 = getelementptr inbounds i8, i8* %sp, i64 %sn.2, !dbg !1128
  %5 = load i64, i64* %up, align 8, !dbg !1129, !tbaa !168
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %binv, metadata !1066, metadata !DIExpression(DW_OP_deref)), !dbg !1085
  %call16 = call fastcc i64 @mpn_limb_get_str(i8* %add.ptr14, i64 %5, %struct.gmp_div_inverse* nonnull %binv) #10, !dbg !1130
  %add17 = add i64 %sn.2, %call16, !dbg !1131
  call void @llvm.dbg.value(metadata i64 %add17, metadata !1073, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.value(metadata i64 0, metadata !1074, metadata !DIExpression()), !dbg !1085
  br label %for.cond18, !dbg !1132

for.cond18:                                       ; preds = %for.body22, %if.end
  %i.0 = phi i64 [ 0, %if.end ], [ %inc32, %for.body22 ], !dbg !1133
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !1074, metadata !DIExpression()), !dbg !1085
  %mul = shl i64 %i.0, 1, !dbg !1134
  %add19 = or i64 %mul, 1, !dbg !1135
  %cmp20 = icmp ult i64 %add19, %add17, !dbg !1136
  br i1 %cmp20, label %for.body22, label %for.end33, !dbg !1137

for.body22:                                       ; preds = %for.cond18
  %arrayidx23 = getelementptr inbounds i8, i8* %sp, i64 %i.0, !dbg !1138
  %6 = load i8, i8* %arrayidx23, align 1, !dbg !1138, !tbaa !1018
  call void @llvm.dbg.value(metadata i8 %6, metadata !1081, metadata !DIExpression()), !dbg !1139
  %7 = xor i64 %i.0, -1, !dbg !1140
  %sub25 = add i64 %add17, %7, !dbg !1140
  %arrayidx26 = getelementptr inbounds i8, i8* %sp, i64 %sub25, !dbg !1141
  %8 = load i8, i8* %arrayidx26, align 1, !dbg !1141, !tbaa !1018
  store i8 %8, i8* %arrayidx23, align 1, !dbg !1142, !tbaa !1018
  store i8 %6, i8* %arrayidx26, align 1, !dbg !1143, !tbaa !1018
  %inc32 = add i64 %i.0, 1, !dbg !1144
  call void @llvm.dbg.value(metadata i64 %inc32, metadata !1074, metadata !DIExpression()), !dbg !1085
  br label %for.cond18, !dbg !1145, !llvm.loop !1146

for.end33:                                        ; preds = %for.cond18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #11, !dbg !1148
  ret i64 %add17, !dbg !1149
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_set_str(i64* %rp, i8* %sp, i64 %sn, i32 %base) local_unnamed_addr #0 !dbg !1150 {
entry:
  %info = alloca %struct.mpn_base_info, align 8
  call void @llvm.dbg.value(metadata i64* %rp, metadata !1154, metadata !DIExpression()), !dbg !1162
  call void @llvm.dbg.value(metadata i8* %sp, metadata !1155, metadata !DIExpression()), !dbg !1162
  call void @llvm.dbg.value(metadata i64 %sn, metadata !1156, metadata !DIExpression()), !dbg !1162
  call void @llvm.dbg.value(metadata i32 %base, metadata !1157, metadata !DIExpression()), !dbg !1162
  %cmp = icmp eq i64 %sn, 0, !dbg !1163
  br i1 %cmp, label %cleanup, label %if.end, !dbg !1165

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @mpn_base_power_of_two_p(i32 %base) #10, !dbg !1166
  call void @llvm.dbg.value(metadata i32 %call, metadata !1158, metadata !DIExpression()), !dbg !1162
  %tobool = icmp eq i32 %call, 0, !dbg !1167
  br i1 %tobool, label %if.else, label %if.then1, !dbg !1168

if.then1:                                         ; preds = %if.end
  %call2 = tail call fastcc i64 @mpn_set_str_bits(i64* %rp, i8* %sp, i64 %sn, i32 %call) #10, !dbg !1169
  br label %cleanup, !dbg !1170

if.else:                                          ; preds = %if.end
  %0 = bitcast %struct.mpn_base_info* %info to i8*, !dbg !1171
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !1171
  %conv = sext i32 %base to i64, !dbg !1172
  call void @llvm.dbg.value(metadata %struct.mpn_base_info* %info, metadata !1159, metadata !DIExpression(DW_OP_deref)), !dbg !1173
  call fastcc void @mpn_get_base_info(%struct.mpn_base_info* nonnull %info, i64 %conv) #10, !dbg !1174
  call void @llvm.dbg.value(metadata %struct.mpn_base_info* %info, metadata !1159, metadata !DIExpression(DW_OP_deref)), !dbg !1173
  %call4 = call fastcc i64 @mpn_set_str_other(i64* %rp, i8* %sp, i64 %sn, i64 %conv, %struct.mpn_base_info* nonnull %info) #10, !dbg !1175
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !1176
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.else, %if.then1
  %retval.0 = phi i64 [ %call2, %if.then1 ], [ %call4, %if.else ], [ 0, %entry ], !dbg !1162
  ret i64 %retval.0, !dbg !1177
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpn_set_str_bits(i64* %rp, i8* %sp, i64 %sn, i32 %bits) unnamed_addr #0 !dbg !1178 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !1182, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.value(metadata i8* %sp, metadata !1183, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.value(metadata i64 %sn, metadata !1184, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.value(metadata i32 %bits, metadata !1185, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.value(metadata i64 %sn, metadata !1187, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.value(metadata i64 0, metadata !1186, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.value(metadata i32 0, metadata !1188, metadata !DIExpression()), !dbg !1189
  br label %for.cond, !dbg !1190

for.cond:                                         ; preds = %if.end24, %entry
  %rn.0 = phi i64 [ 0, %entry ], [ %rn.3, %if.end24 ], !dbg !1192
  %j.0 = phi i64 [ %sn, %entry ], [ %dec, %if.end24 ], !dbg !1192
  %shift.0 = phi i32 [ 0, %entry ], [ %shift.2, %if.end24 ], !dbg !1192
  call void @llvm.dbg.value(metadata i32 %shift.0, metadata !1188, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !1187, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.value(metadata i64 %rn.0, metadata !1186, metadata !DIExpression()), !dbg !1189
  %dec = add i64 %j.0, -1, !dbg !1193
  call void @llvm.dbg.value(metadata i64 %dec, metadata !1187, metadata !DIExpression()), !dbg !1189
  %cmp = icmp eq i64 %j.0, 0, !dbg !1195
  br i1 %cmp, label %for.end, label %for.body, !dbg !1196

for.body:                                         ; preds = %for.cond
  %cmp1 = icmp eq i32 %shift.0, 0, !dbg !1197
  %arrayidx = getelementptr inbounds i8, i8* %sp, i64 %dec, !dbg !1200
  %0 = load i8, i8* %arrayidx, align 1, !dbg !1200, !tbaa !1018
  %conv = zext i8 %0 to i64, !dbg !1200
  br i1 %cmp1, label %if.then, label %if.else, !dbg !1201

if.then:                                          ; preds = %for.body
  %inc = add nsw i64 %rn.0, 1, !dbg !1202
  call void @llvm.dbg.value(metadata i64 %inc, metadata !1186, metadata !DIExpression()), !dbg !1189
  %arrayidx2 = getelementptr inbounds i64, i64* %rp, i64 %rn.0, !dbg !1204
  store i64 %conv, i64* %arrayidx2, align 8, !dbg !1205, !tbaa !168
  call void @llvm.dbg.value(metadata i32 %bits, metadata !1188, metadata !DIExpression()), !dbg !1189
  br label %if.end24, !dbg !1206

if.else:                                          ; preds = %for.body
  %sh_prom = zext i32 %shift.0 to i64, !dbg !1207
  %shl = shl i64 %conv, %sh_prom, !dbg !1207
  %sub = add nsw i64 %rn.0, -1, !dbg !1209
  %arrayidx5 = getelementptr inbounds i64, i64* %rp, i64 %sub, !dbg !1210
  %1 = load i64, i64* %arrayidx5, align 8, !dbg !1211, !tbaa !168
  %or = or i64 %1, %shl, !dbg !1211
  store i64 %or, i64* %arrayidx5, align 8, !dbg !1211, !tbaa !168
  %add6 = add i32 %shift.0, %bits, !dbg !1212
  call void @llvm.dbg.value(metadata i32 %add6, metadata !1188, metadata !DIExpression()), !dbg !1189
  %cmp8 = icmp ugt i32 %add6, 63, !dbg !1213
  br i1 %cmp8, label %if.then10, label %if.end24, !dbg !1215

if.then10:                                        ; preds = %if.else
  %sub12 = add i32 %add6, -64, !dbg !1216
  call void @llvm.dbg.value(metadata i32 %sub12, metadata !1188, metadata !DIExpression()), !dbg !1189
  %cmp14 = icmp eq i32 %sub12, 0, !dbg !1218
  br i1 %cmp14, label %if.end24, label %if.then16, !dbg !1220

if.then16:                                        ; preds = %if.then10
  %2 = load i8, i8* %arrayidx, align 1, !dbg !1221, !tbaa !1018
  %conv18 = zext i8 %2 to i64, !dbg !1222
  %sub19 = sub i32 %bits, %sub12, !dbg !1223
  %sh_prom20 = zext i32 %sub19 to i64, !dbg !1224
  %shr = lshr i64 %conv18, %sh_prom20, !dbg !1224
  %inc21 = add nsw i64 %rn.0, 1, !dbg !1225
  call void @llvm.dbg.value(metadata i64 %inc21, metadata !1186, metadata !DIExpression()), !dbg !1189
  %arrayidx22 = getelementptr inbounds i64, i64* %rp, i64 %rn.0, !dbg !1226
  store i64 %shr, i64* %arrayidx22, align 8, !dbg !1227, !tbaa !168
  br label %if.end24, !dbg !1226

if.end24:                                         ; preds = %if.then10, %if.else, %if.then16, %if.then
  %rn.3 = phi i64 [ %inc, %if.then ], [ %rn.0, %if.else ], [ %inc21, %if.then16 ], [ %rn.0, %if.then10 ], !dbg !1200
  %shift.2 = phi i32 [ %bits, %if.then ], [ %add6, %if.else ], [ %sub12, %if.then16 ], [ 0, %if.then10 ], !dbg !1200
  call void @llvm.dbg.value(metadata i32 %shift.2, metadata !1188, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.value(metadata i64 %rn.3, metadata !1186, metadata !DIExpression()), !dbg !1189
  br label %for.cond, !dbg !1228, !llvm.loop !1229

for.end:                                          ; preds = %for.cond
  %rn.0.lcssa = phi i64 [ %rn.0, %for.cond ], !dbg !1192
  call void @llvm.dbg.value(metadata i64 %rn.0.lcssa, metadata !1186, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.value(metadata i64 %rn.0.lcssa, metadata !1186, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.value(metadata i64 %rn.0.lcssa, metadata !1186, metadata !DIExpression()), !dbg !1189
  %call = tail call fastcc i64 @mpn_normalized_size(i64* %rp, i64 %rn.0.lcssa) #10, !dbg !1231
  call void @llvm.dbg.value(metadata i64 %call, metadata !1186, metadata !DIExpression()), !dbg !1189
  ret i64 %call, !dbg !1232
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpn_set_str_other(i64* %rp, i8* %sp, i64 %sn, i64 %b, %struct.mpn_base_info* %info) unnamed_addr #0 !dbg !1233 {
entry:
  call void @llvm.dbg.value(metadata i64* %rp, metadata !1237, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i8* %sp, metadata !1238, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %sn, metadata !1239, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %b, metadata !1240, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata %struct.mpn_base_info* %info, metadata !1241, metadata !DIExpression()), !dbg !1250
  %sub = add i64 %sn, -1, !dbg !1251
  %exp = getelementptr inbounds %struct.mpn_base_info, %struct.mpn_base_info* %info, i64 0, i32 0, !dbg !1252
  %0 = load i32, i32* %exp, align 8, !dbg !1252, !tbaa !1048
  %conv = zext i32 %0 to i64, !dbg !1253
  %rem = urem i64 %sub, %conv, !dbg !1254
  %1 = trunc i64 %rem to i32, !dbg !1255
  %conv1 = add i32 %1, 1, !dbg !1255
  call void @llvm.dbg.value(metadata i32 %conv1, metadata !1244, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 0, metadata !1245, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 1, metadata !1245, metadata !DIExpression()), !dbg !1250
  %2 = load i8, i8* %sp, align 1, !dbg !1256, !tbaa !1018
  %conv2 = zext i8 %2 to i64, !dbg !1256
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !1243, metadata !DIExpression()), !dbg !1250
  br label %for.cond, !dbg !1257

for.cond:                                         ; preds = %for.body, %entry
  %w.0 = phi i64 [ %conv2, %entry ], [ %add7, %for.body ], !dbg !1250
  %k.0 = phi i32 [ %conv1, %entry ], [ %dec, %for.body ], !dbg !1250
  %j.0 = phi i64 [ 1, %entry ], [ %inc4, %for.body ], !dbg !1250
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !1245, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i32 %k.0, metadata !1244, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %w.0, metadata !1243, metadata !DIExpression()), !dbg !1250
  %dec = add i32 %k.0, -1, !dbg !1258
  call void @llvm.dbg.value(metadata i32 %dec, metadata !1244, metadata !DIExpression()), !dbg !1250
  %cmp = icmp eq i32 %dec, 0, !dbg !1261
  br i1 %cmp, label %for.end, label %for.body, !dbg !1262

for.body:                                         ; preds = %for.cond
  %mul = mul i64 %w.0, %b, !dbg !1263
  %inc4 = add nuw nsw i64 %j.0, 1, !dbg !1264
  call void @llvm.dbg.value(metadata i64 %inc4, metadata !1245, metadata !DIExpression()), !dbg !1250
  %arrayidx5 = getelementptr inbounds i8, i8* %sp, i64 %j.0, !dbg !1265
  %3 = load i8, i8* %arrayidx5, align 1, !dbg !1265, !tbaa !1018
  %conv6 = zext i8 %3 to i64, !dbg !1265
  %add7 = add i64 %mul, %conv6, !dbg !1266
  call void @llvm.dbg.value(metadata i64 %add7, metadata !1243, metadata !DIExpression()), !dbg !1250
  br label %for.cond, !dbg !1267, !llvm.loop !1268

for.end:                                          ; preds = %for.cond
  %w.0.lcssa = phi i64 [ %w.0, %for.cond ], !dbg !1250
  %j.0.lcssa = phi i64 [ %j.0, %for.cond ], !dbg !1250
  call void @llvm.dbg.value(metadata i64 %w.0.lcssa, metadata !1243, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %j.0.lcssa, metadata !1245, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %w.0.lcssa, metadata !1243, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %j.0.lcssa, metadata !1245, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %w.0.lcssa, metadata !1243, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %j.0.lcssa, metadata !1245, metadata !DIExpression()), !dbg !1250
  store i64 %w.0.lcssa, i64* %rp, align 8, !dbg !1270, !tbaa !168
  %cmp9 = icmp ne i64 %w.0.lcssa, 0, !dbg !1271
  %conv11 = zext i1 %cmp9 to i64, !dbg !1272
  call void @llvm.dbg.value(metadata i64 %conv11, metadata !1242, metadata !DIExpression()), !dbg !1250
  %bb = getelementptr inbounds %struct.mpn_base_info, %struct.mpn_base_info* %info, i64 0, i32 1, !dbg !1273
  br label %for.cond12, !dbg !1274

for.cond12:                                       ; preds = %if.end, %for.end
  %rn.0 = phi i64 [ %conv11, %for.end ], [ %rn.1, %if.end ], !dbg !1275
  %j.1 = phi i64 [ %j.0.lcssa, %for.end ], [ %j.2.lcssa, %if.end ], !dbg !1250
  call void @llvm.dbg.value(metadata i64 %j.1, metadata !1245, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %rn.0, metadata !1242, metadata !DIExpression()), !dbg !1250
  %cmp13 = icmp ult i64 %j.1, %sn, !dbg !1276
  br i1 %cmp13, label %for.body15, label %for.end37, !dbg !1277

for.body15:                                       ; preds = %for.cond12
  call void @llvm.dbg.value(metadata i64 %j.1, metadata !1245, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1250
  %arrayidx17 = getelementptr inbounds i8, i8* %sp, i64 %j.1, !dbg !1278
  %4 = load i8, i8* %arrayidx17, align 1, !dbg !1278, !tbaa !1018
  %conv18 = zext i8 %4 to i64, !dbg !1278
  call void @llvm.dbg.value(metadata i64 %conv18, metadata !1243, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i32 1, metadata !1244, metadata !DIExpression()), !dbg !1250
  %5 = load i32, i32* %exp, align 8, !dbg !1279, !tbaa !1048
  br label %for.cond19, !dbg !1282

for.cond19:                                       ; preds = %for.body23, %for.body15
  %w.1 = phi i64 [ %conv18, %for.body15 ], [ %add28, %for.body23 ], !dbg !1273
  %k.1 = phi i32 [ 1, %for.body15 ], [ %inc29, %for.body23 ], !dbg !1283
  %j.2.in = phi i64 [ %j.1, %for.body15 ], [ %j.2, %for.body23 ]
  %j.2 = add i64 %j.2.in, 1, !dbg !1273
  call void @llvm.dbg.value(metadata i64 %j.2, metadata !1245, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i32 %k.1, metadata !1244, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %w.1, metadata !1243, metadata !DIExpression()), !dbg !1250
  %cmp21 = icmp ult i32 %k.1, %5, !dbg !1284
  br i1 %cmp21, label %for.body23, label %for.end30, !dbg !1285

for.body23:                                       ; preds = %for.cond19
  %mul24 = mul i64 %w.1, %b, !dbg !1286
  call void @llvm.dbg.value(metadata i64 %j.2, metadata !1245, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1250
  %arrayidx26 = getelementptr inbounds i8, i8* %sp, i64 %j.2, !dbg !1287
  %6 = load i8, i8* %arrayidx26, align 1, !dbg !1287, !tbaa !1018
  %conv27 = zext i8 %6 to i64, !dbg !1287
  %add28 = add i64 %mul24, %conv27, !dbg !1288
  call void @llvm.dbg.value(metadata i64 %add28, metadata !1243, metadata !DIExpression()), !dbg !1250
  %inc29 = add i32 %k.1, 1, !dbg !1289
  call void @llvm.dbg.value(metadata i32 %inc29, metadata !1244, metadata !DIExpression()), !dbg !1250
  br label %for.cond19, !dbg !1290, !llvm.loop !1291

for.end30:                                        ; preds = %for.cond19
  %w.1.lcssa = phi i64 [ %w.1, %for.cond19 ], !dbg !1273
  %j.2.lcssa = phi i64 [ %j.2, %for.cond19 ], !dbg !1273
  call void @llvm.dbg.value(metadata i64 %w.1.lcssa, metadata !1243, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %w.1.lcssa, metadata !1243, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %w.1.lcssa, metadata !1243, metadata !DIExpression()), !dbg !1250
  %7 = load i64, i64* %bb, align 8, !dbg !1293, !tbaa !1053
  %call = tail call i64 @mpn_mul_1(i64* %rp, i64* %rp, i64 %rn.0, i64 %7) #10, !dbg !1294
  call void @llvm.dbg.value(metadata i64 %call, metadata !1246, metadata !DIExpression()), !dbg !1273
  %call31 = tail call i64 @mpn_add_1(i64* %rp, i64* %rp, i64 %rn.0, i64 %w.1.lcssa) #10, !dbg !1295
  %add32 = add i64 %call, %call31, !dbg !1296
  call void @llvm.dbg.value(metadata i64 %add32, metadata !1246, metadata !DIExpression()), !dbg !1273
  %cmp33 = icmp eq i64 %add32, 0, !dbg !1297
  br i1 %cmp33, label %if.end, label %if.then, !dbg !1299

if.then:                                          ; preds = %for.end30
  %inc35 = add nsw i64 %rn.0, 1, !dbg !1300
  call void @llvm.dbg.value(metadata i64 %inc35, metadata !1242, metadata !DIExpression()), !dbg !1250
  %arrayidx36 = getelementptr inbounds i64, i64* %rp, i64 %rn.0, !dbg !1301
  store i64 %add32, i64* %arrayidx36, align 8, !dbg !1302, !tbaa !168
  br label %if.end, !dbg !1301

if.end:                                           ; preds = %for.end30, %if.then
  %rn.1 = phi i64 [ %inc35, %if.then ], [ %rn.0, %for.end30 ], !dbg !1275
  call void @llvm.dbg.value(metadata i64 %rn.1, metadata !1242, metadata !DIExpression()), !dbg !1250
  br label %for.cond12, !dbg !1303, !llvm.loop !1304

for.end37:                                        ; preds = %for.cond12
  %rn.0.lcssa = phi i64 [ %rn.0, %for.cond12 ], !dbg !1275
  %j.1.lcssa = phi i64 [ %j.1, %for.cond12 ], !dbg !1250
  call void @llvm.dbg.value(metadata i64 %rn.0.lcssa, metadata !1242, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %j.1.lcssa, metadata !1245, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %rn.0.lcssa, metadata !1242, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %j.1.lcssa, metadata !1245, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %rn.0.lcssa, metadata !1242, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.value(metadata i64 %j.1.lcssa, metadata !1245, metadata !DIExpression()), !dbg !1250
  %cmp38 = icmp eq i64 %j.1.lcssa, %sn, !dbg !1306
  br i1 %cmp38, label %if.end41, label %if.else, !dbg !1309

if.else:                                          ; preds = %for.end37
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1335, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @__PRETTY_FUNCTION__.mpn_set_str_other, i64 0, i64 0)) #8, !dbg !1306
  unreachable, !dbg !1306

if.end41:                                         ; preds = %for.end37
  ret i64 %rn.0.lcssa, !dbg !1310
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_init(%struct.__mpz_struct* %r) local_unnamed_addr #0 !dbg !1311 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1322, metadata !DIExpression()), !dbg !1323
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !1324
  store i32 1, i32* %_mp_alloc, align 8, !dbg !1325, !tbaa !1326
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !1328
  store i32 0, i32* %_mp_size, align 4, !dbg !1329, !tbaa !1330
  %call = tail call fastcc i64* @gmp_xalloc_limbs(i64 1) #10, !dbg !1331
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !1332
  store i64* %call, i64** %_mp_d, align 8, !dbg !1333, !tbaa !1334
  ret void, !dbg !1335
}

; Function Attrs: nounwind uwtable
define internal fastcc i64* @gmp_xalloc_limbs(i64 %size) unnamed_addr #0 !dbg !1336 {
entry:
  call void @llvm.dbg.value(metadata i64 %size, metadata !1340, metadata !DIExpression()), !dbg !1341
  %0 = load i8* (i64)*, i8* (i64)** @gmp_allocate_func, align 8, !dbg !1342, !tbaa !73
  %mul = shl i64 %size, 3, !dbg !1342
  %call = tail call i8* %0(i64 %mul) #9, !dbg !1342
  %1 = bitcast i8* %call to i64*, !dbg !1342
  ret i64* %1, !dbg !1343
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_init2(%struct.__mpz_struct* %r, i64 %bits) local_unnamed_addr #0 !dbg !1344 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1348, metadata !DIExpression()), !dbg !1351
  call void @llvm.dbg.value(metadata i64 %bits, metadata !1349, metadata !DIExpression()), !dbg !1351
  %cmp = icmp ne i64 %bits, 0, !dbg !1352
  %conv1 = zext i1 %cmp to i64, !dbg !1353
  %sub = sub i64 %bits, %conv1, !dbg !1354
  call void @llvm.dbg.value(metadata i64 %sub, metadata !1349, metadata !DIExpression()), !dbg !1351
  %div = lshr i64 %sub, 6, !dbg !1355
  %add = add nuw nsw i64 %div, 1, !dbg !1356
  call void @llvm.dbg.value(metadata i64 %add, metadata !1350, metadata !DIExpression()), !dbg !1351
  %conv2 = trunc i64 %add to i32, !dbg !1357
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !1358
  store i32 %conv2, i32* %_mp_alloc, align 8, !dbg !1359, !tbaa !1326
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !1360
  store i32 0, i32* %_mp_size, align 4, !dbg !1361, !tbaa !1330
  %call = tail call fastcc i64* @gmp_xalloc_limbs(i64 %add) #10, !dbg !1362
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !1363
  store i64* %call, i64** %_mp_d, align 8, !dbg !1364, !tbaa !1334
  ret void, !dbg !1365
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_clear(%struct.__mpz_struct* %r) local_unnamed_addr #0 !dbg !1366 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1368, metadata !DIExpression()), !dbg !1369
  %0 = load void (i8*, i64)*, void (i8*, i64)** @gmp_free_func, align 8, !dbg !1370, !tbaa !73
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !1370
  %1 = bitcast i64** %_mp_d to i8**, !dbg !1370
  %2 = load i8*, i8** %1, align 8, !dbg !1370, !tbaa !1334
  tail call void %0(i8* %2, i64 0) #9, !dbg !1370
  ret void, !dbg !1371
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_set_si(%struct.__mpz_struct* %r, i64 %x) local_unnamed_addr #0 !dbg !1372 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1376, metadata !DIExpression()), !dbg !1378
  call void @llvm.dbg.value(metadata i64 %x, metadata !1377, metadata !DIExpression()), !dbg !1378
  %cmp = icmp sgt i64 %x, -1, !dbg !1379
  br i1 %cmp, label %if.then, label %if.else, !dbg !1381

if.then:                                          ; preds = %entry
  tail call void @mpz_set_ui(%struct.__mpz_struct* %r, i64 %x) #10, !dbg !1382
  br label %if.end, !dbg !1382

if.else:                                          ; preds = %entry
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !1383
  store i32 -1, i32* %_mp_size, align 4, !dbg !1385, !tbaa !1330
  %sub1 = sub i64 0, %x, !dbg !1386
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !1387
  %0 = load i64*, i64** %_mp_d, align 8, !dbg !1387, !tbaa !1334
  store i64 %sub1, i64* %0, align 8, !dbg !1388, !tbaa !168
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !1389
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_set_ui(%struct.__mpz_struct* %r, i64 %x) local_unnamed_addr #0 !dbg !1390 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1394, metadata !DIExpression()), !dbg !1396
  call void @llvm.dbg.value(metadata i64 %x, metadata !1395, metadata !DIExpression()), !dbg !1396
  %cmp = icmp eq i64 %x, 0, !dbg !1397
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !1399
  br i1 %cmp, label %if.else, label %if.then, !dbg !1400

if.then:                                          ; preds = %entry
  store i32 1, i32* %_mp_size, align 4, !dbg !1401, !tbaa !1330
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !1403
  %0 = load i64*, i64** %_mp_d, align 8, !dbg !1403, !tbaa !1334
  store i64 %x, i64* %0, align 8, !dbg !1404, !tbaa !168
  br label %if.end, !dbg !1405

if.else:                                          ; preds = %entry
  store i32 0, i32* %_mp_size, align 4, !dbg !1406, !tbaa !1330
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !1407
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_set(%struct.__mpz_struct* %r, %struct.__mpz_struct* %x) local_unnamed_addr #0 !dbg !1408 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1414, metadata !DIExpression()), !dbg !1420
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !1415, metadata !DIExpression()), !dbg !1420
  %cmp = icmp eq %struct.__mpz_struct* %r, %x, !dbg !1421
  br i1 %cmp, label %if.end, label %if.then, !dbg !1422

if.then:                                          ; preds = %entry
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 1, !dbg !1423
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1423, !tbaa !1330
  %cmp1 = icmp slt i32 %0, 0, !dbg !1423
  %sub = sub nsw i32 0, %0, !dbg !1423
  %cond = select i1 %cmp1, i32 %sub, i32 %0, !dbg !1423
  %conv = zext i32 %cond to i64, !dbg !1423
  call void @llvm.dbg.value(metadata i64 %conv, metadata !1416, metadata !DIExpression()), !dbg !1424
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !1425
  %1 = load i32, i32* %_mp_alloc, align 8, !dbg !1425, !tbaa !1326
  %conv4 = sext i32 %1 to i64, !dbg !1425
  %cmp5 = icmp sgt i64 %conv, %conv4, !dbg !1425
  br i1 %cmp5, label %cond.true7, label %cond.false8, !dbg !1425

cond.true7:                                       ; preds = %if.then
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %conv) #10, !dbg !1425
  br label %cond.end9, !dbg !1425

cond.false8:                                      ; preds = %if.then
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !1425
  %2 = bitcast i64** %_mp_d to i8**, !dbg !1425
  %3 = load i8*, i8** %2, align 8, !dbg !1425, !tbaa !1334
  br label %cond.end9, !dbg !1425

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi i8* [ %call, %cond.true7 ], [ %3, %cond.false8 ], !dbg !1425
  %4 = bitcast i8* %cond10 to i64*, !dbg !1425
  call void @llvm.dbg.value(metadata i64* %4, metadata !1419, metadata !DIExpression()), !dbg !1424
  %_mp_d11 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 2, !dbg !1426
  %5 = load i64*, i64** %_mp_d11, align 8, !dbg !1426, !tbaa !1334
  tail call void @mpn_copyi(i64* %4, i64* %5, i64 %conv) #10, !dbg !1427
  %6 = load i32, i32* %_mp_size, align 4, !dbg !1428, !tbaa !1330
  %_mp_size13 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !1429
  store i32 %6, i32* %_mp_size13, align 4, !dbg !1430, !tbaa !1330
  br label %if.end, !dbg !1431

if.end:                                           ; preds = %entry, %cond.end9
  ret void, !dbg !1432
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %size) unnamed_addr #0 !dbg !1433 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1437, metadata !DIExpression()), !dbg !1439
  call void @llvm.dbg.value(metadata i64 %size, metadata !1438, metadata !DIExpression()), !dbg !1439
  %cmp = icmp sgt i64 %size, 1, !dbg !1440
  %size. = select i1 %cmp, i64 %size, i64 1, !dbg !1440
  call void @llvm.dbg.value(metadata i64 %size., metadata !1438, metadata !DIExpression()), !dbg !1439
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !1441
  %0 = load i64*, i64** %_mp_d, align 8, !dbg !1441, !tbaa !1334
  %call = tail call fastcc i64* @gmp_xrealloc_limbs(i64* %0, i64 %size.) #10, !dbg !1442
  store i64* %call, i64** %_mp_d, align 8, !dbg !1443, !tbaa !1334
  %conv = trunc i64 %size. to i32, !dbg !1444
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !1445
  store i32 %conv, i32* %_mp_alloc, align 8, !dbg !1446, !tbaa !1326
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !1447
  %1 = load i32, i32* %_mp_size, align 4, !dbg !1447, !tbaa !1330
  %cmp2 = icmp slt i32 %1, 0, !dbg !1447
  %sub = sub nsw i32 0, %1, !dbg !1447
  %cond9 = select i1 %cmp2, i32 %sub, i32 %1, !dbg !1447
  %conv10 = zext i32 %cond9 to i64, !dbg !1447
  %cmp11 = icmp slt i64 %size., %conv10, !dbg !1449
  %2 = bitcast i64* %call to i8*, !dbg !1450
  br i1 %cmp11, label %if.then, label %if.end, !dbg !1450

if.then:                                          ; preds = %entry
  store i32 0, i32* %_mp_size, align 4, !dbg !1451, !tbaa !1330
  br label %if.end, !dbg !1452

if.end:                                           ; preds = %if.then, %entry
  ret i8* %2, !dbg !1453
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_init_set_si(%struct.__mpz_struct* %r, i64 %x) local_unnamed_addr #0 !dbg !1454 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1456, metadata !DIExpression()), !dbg !1458
  call void @llvm.dbg.value(metadata i64 %x, metadata !1457, metadata !DIExpression()), !dbg !1458
  tail call void @mpz_init(%struct.__mpz_struct* %r) #10, !dbg !1459
  tail call void @mpz_set_si(%struct.__mpz_struct* %r, i64 %x) #10, !dbg !1460
  ret void, !dbg !1461
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_init_set_ui(%struct.__mpz_struct* %r, i64 %x) local_unnamed_addr #0 !dbg !1462 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1464, metadata !DIExpression()), !dbg !1466
  call void @llvm.dbg.value(metadata i64 %x, metadata !1465, metadata !DIExpression()), !dbg !1466
  tail call void @mpz_init(%struct.__mpz_struct* %r) #10, !dbg !1467
  tail call void @mpz_set_ui(%struct.__mpz_struct* %r, i64 %x) #10, !dbg !1468
  ret void, !dbg !1469
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_init_set(%struct.__mpz_struct* %r, %struct.__mpz_struct* %x) local_unnamed_addr #0 !dbg !1470 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1472, metadata !DIExpression()), !dbg !1474
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !1473, metadata !DIExpression()), !dbg !1474
  tail call void @mpz_init(%struct.__mpz_struct* %r) #10, !dbg !1475
  tail call void @mpz_set(%struct.__mpz_struct* %r, %struct.__mpz_struct* %x) #10, !dbg !1476
  ret void, !dbg !1477
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_fits_slong_p(%struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !1478 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1482, metadata !DIExpression()), !dbg !1484
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1485
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1485, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !1486
  call void @llvm.dbg.value(metadata i64 %conv, metadata !1483, metadata !DIExpression()), !dbg !1484
  switch i64 %conv, label %if.else15 [
    i64 0, label %cleanup
    i64 1, label %if.then4
    i64 -1, label %if.then10
  ], !dbg !1487

if.then4:                                         ; preds = %entry
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !1488
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !1488, !tbaa !1334
  %2 = load i64, i64* %1, align 8, !dbg !1491, !tbaa !168
  %cmp5 = icmp sgt i64 %2, -1, !dbg !1492
  br label %cleanup, !dbg !1493

if.then10:                                        ; preds = %entry
  %_mp_d11 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !1494
  %3 = load i64*, i64** %_mp_d11, align 8, !dbg !1494, !tbaa !1334
  %4 = load i64, i64* %3, align 8, !dbg !1496, !tbaa !168
  %cmp13 = icmp ult i64 %4, -9223372036854775807, !dbg !1497
  br label %cleanup, !dbg !1498

if.else15:                                        ; preds = %entry
  br label %cleanup, !dbg !1499

cleanup:                                          ; preds = %entry, %if.else15, %if.then10, %if.then4
  %retval.0.shrunk = phi i1 [ %cmp5, %if.then4 ], [ %cmp13, %if.then10 ], [ false, %if.else15 ], [ true, %entry ]
  %retval.0 = zext i1 %retval.0.shrunk to i32, !dbg !1500
  ret i32 %retval.0, !dbg !1501
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_fits_ulong_p(%struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !1502 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1504, metadata !DIExpression()), !dbg !1506
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1507
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1507, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !1508
  call void @llvm.dbg.value(metadata i64 %conv, metadata !1505, metadata !DIExpression()), !dbg !1506
  %cmp = icmp sgt i32 %0, 0, !dbg !1509
  %conv2 = zext i1 %cmp to i64, !dbg !1510
  %cmp3 = icmp eq i64 %conv, %conv2, !dbg !1511
  %conv4 = zext i1 %cmp3 to i32, !dbg !1511
  ret i32 %conv4, !dbg !1512
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_get_si(%struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !1513 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1517, metadata !DIExpression()), !dbg !1519
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1520
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1520, !tbaa !1330
  call void @llvm.dbg.value(metadata i64 undef, metadata !1518, metadata !DIExpression()), !dbg !1519
  %cmp = icmp sgt i32 %0, 0, !dbg !1521
  br i1 %cmp, label %if.then, label %if.else, !dbg !1523

if.then:                                          ; preds = %entry
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !1524
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !1524, !tbaa !1334
  %2 = load i64, i64* %1, align 8, !dbg !1525, !tbaa !168
  %and = and i64 %2, 9223372036854775807, !dbg !1526
  br label %cleanup, !dbg !1527

if.else:                                          ; preds = %entry
  %cmp2 = icmp slt i32 %0, 0, !dbg !1528
  br i1 %cmp2, label %if.then4, label %cleanup, !dbg !1530

if.then4:                                         ; preds = %if.else
  %_mp_d5 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !1531
  %3 = load i64*, i64** %_mp_d5, align 8, !dbg !1531, !tbaa !1334
  %4 = load i64, i64* %3, align 8, !dbg !1532, !tbaa !168
  %sub = sub i64 0, %4, !dbg !1533
  %or = or i64 %sub, -9223372036854775808, !dbg !1534
  br label %cleanup, !dbg !1535

cleanup:                                          ; preds = %if.else, %if.then4, %if.then
  %retval.0 = phi i64 [ %and, %if.then ], [ %or, %if.then4 ], [ 0, %if.else ], !dbg !1536
  ret i64 %retval.0, !dbg !1537
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_get_ui(%struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !1538 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1542, metadata !DIExpression()), !dbg !1543
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1544
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1544, !tbaa !1330
  %cmp = icmp eq i32 %0, 0, !dbg !1545
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !1546

cond.false:                                       ; preds = %entry
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !1547
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !1547, !tbaa !1334
  %2 = load i64, i64* %1, align 8, !dbg !1548, !tbaa !168
  br label %cond.end, !dbg !1546

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i64 [ %2, %cond.false ], [ 0, %entry ], !dbg !1546
  ret i64 %cond, !dbg !1549
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_size(%struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !1550 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1554, metadata !DIExpression()), !dbg !1555
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1556
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1556, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !1556
  %sub = sub nsw i32 0, %0, !dbg !1556
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !1556
  %conv = zext i32 %cond to i64, !dbg !1556
  ret i64 %conv, !dbg !1557
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_getlimbn(%struct.__mpz_struct* %u, i64 %n) local_unnamed_addr #0 !dbg !1558 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1562, metadata !DIExpression()), !dbg !1564
  call void @llvm.dbg.value(metadata i64 %n, metadata !1563, metadata !DIExpression()), !dbg !1564
  %cmp = icmp sgt i64 %n, -1, !dbg !1565
  br i1 %cmp, label %land.lhs.true, label %return, !dbg !1567

land.lhs.true:                                    ; preds = %entry
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1568
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1568, !tbaa !1330
  %cmp1 = icmp slt i32 %0, 0, !dbg !1568
  %sub = sub nsw i32 0, %0, !dbg !1568
  %cond = select i1 %cmp1, i32 %sub, i32 %0, !dbg !1568
  %conv = zext i32 %cond to i64, !dbg !1568
  %cmp4 = icmp sgt i64 %conv, %n, !dbg !1569
  br i1 %cmp4, label %if.then, label %return, !dbg !1570

if.then:                                          ; preds = %land.lhs.true
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !1571
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !1571, !tbaa !1334
  %arrayidx = getelementptr inbounds i64, i64* %1, i64 %n, !dbg !1572
  %2 = load i64, i64* %arrayidx, align 8, !dbg !1572, !tbaa !168
  br label %return, !dbg !1573

return:                                           ; preds = %entry, %land.lhs.true, %if.then
  %retval.0 = phi i64 [ %2, %if.then ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !1574
  ret i64 %retval.0, !dbg !1575
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_realloc2(%struct.__mpz_struct* %x, i64 %n) local_unnamed_addr #0 !dbg !1576 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !1578, metadata !DIExpression()), !dbg !1580
  call void @llvm.dbg.value(metadata i64 %n, metadata !1579, metadata !DIExpression()), !dbg !1580
  %cmp = icmp ne i64 %n, 0, !dbg !1581
  %conv1 = zext i1 %cmp to i64, !dbg !1582
  %sub = sub i64 %n, %conv1, !dbg !1583
  %div = lshr i64 %sub, 6, !dbg !1584
  %add = add nuw nsw i64 %div, 1, !dbg !1585
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %x, i64 %add) #10, !dbg !1586
  ret void, !dbg !1587
}

; Function Attrs: nounwind uwtable
define dso_local i64* @mpz_limbs_read(%struct.__mpz_struct* %x) local_unnamed_addr #0 !dbg !1588 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !1593, metadata !DIExpression()), !dbg !1594
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 2, !dbg !1595
  %0 = load i64*, i64** %_mp_d, align 8, !dbg !1595, !tbaa !1334
  ret i64* %0, !dbg !1596
}

; Function Attrs: nounwind uwtable
define dso_local i64* @mpz_limbs_modify(%struct.__mpz_struct* %x, i64 %n) local_unnamed_addr #0 !dbg !1597 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !1601, metadata !DIExpression()), !dbg !1603
  call void @llvm.dbg.value(metadata i64 %n, metadata !1602, metadata !DIExpression()), !dbg !1603
  %cmp = icmp sgt i64 %n, 0, !dbg !1604
  br i1 %cmp, label %if.end, label %if.else, !dbg !1607

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1545, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.mpz_limbs_modify, i64 0, i64 0)) #8, !dbg !1604
  unreachable, !dbg !1604

if.end:                                           ; preds = %entry
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 0, !dbg !1608
  %0 = load i32, i32* %_mp_alloc, align 8, !dbg !1608, !tbaa !1326
  %conv = sext i32 %0 to i64, !dbg !1608
  %cmp1 = icmp slt i64 %conv, %n, !dbg !1608
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !1608

cond.true:                                        ; preds = %if.end
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %x, i64 %n) #10, !dbg !1608
  br label %cond.end, !dbg !1608

cond.false:                                       ; preds = %if.end
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 2, !dbg !1608
  %1 = bitcast i64** %_mp_d to i8**, !dbg !1608
  %2 = load i8*, i8** %1, align 8, !dbg !1608, !tbaa !1334
  br label %cond.end, !dbg !1608

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %2, %cond.false ], !dbg !1608
  %3 = bitcast i8* %cond to i64*, !dbg !1608
  ret i64* %3, !dbg !1609
}

; Function Attrs: nounwind uwtable
define dso_local i64* @mpz_limbs_write(%struct.__mpz_struct* %x, i64 %n) local_unnamed_addr #0 !dbg !1610 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !1612, metadata !DIExpression()), !dbg !1614
  call void @llvm.dbg.value(metadata i64 %n, metadata !1613, metadata !DIExpression()), !dbg !1614
  %call = tail call i64* @mpz_limbs_modify(%struct.__mpz_struct* %x, i64 %n) #10, !dbg !1615
  ret i64* %call, !dbg !1616
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_limbs_finish(%struct.__mpz_struct* %x, i64 %xs) local_unnamed_addr #0 !dbg !1617 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !1621, metadata !DIExpression()), !dbg !1624
  call void @llvm.dbg.value(metadata i64 %xs, metadata !1622, metadata !DIExpression()), !dbg !1624
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 2, !dbg !1625
  %0 = load i64*, i64** %_mp_d, align 8, !dbg !1625, !tbaa !1334
  %cmp = icmp slt i64 %xs, 0, !dbg !1626
  %sub = sub nsw i64 0, %xs, !dbg !1626
  %cond = select i1 %cmp, i64 %sub, i64 %xs, !dbg !1626
  %call = tail call fastcc i64 @mpn_normalized_size(i64* %0, i64 %cond) #10, !dbg !1627
  call void @llvm.dbg.value(metadata i64 %call, metadata !1623, metadata !DIExpression()), !dbg !1624
  %sub3 = sub nsw i64 0, %call, !dbg !1628
  %cond6 = select i1 %cmp, i64 %sub3, i64 %call, !dbg !1628
  %conv = trunc i64 %cond6 to i32, !dbg !1628
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 1, !dbg !1629
  store i32 %conv, i32* %_mp_size, align 4, !dbg !1630, !tbaa !1330
  ret void, !dbg !1631
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpn_normalized_size(i64* %xp, i64 %n) unnamed_addr #0 !dbg !1632 {
entry:
  call void @llvm.dbg.value(metadata i64* %xp, metadata !1636, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.value(metadata i64 %n, metadata !1637, metadata !DIExpression()), !dbg !1638
  br label %for.cond, !dbg !1639

for.cond:                                         ; preds = %for.inc, %entry
  %n.addr.0 = phi i64 [ %n, %entry ], [ %sub, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %n.addr.0, metadata !1637, metadata !DIExpression()), !dbg !1638
  %cmp = icmp sgt i64 %n.addr.0, 0, !dbg !1640
  br i1 %cmp, label %land.rhs, label %for.end, !dbg !1643

land.rhs:                                         ; preds = %for.cond
  %sub = add nsw i64 %n.addr.0, -1, !dbg !1644
  %arrayidx = getelementptr inbounds i64, i64* %xp, i64 %sub, !dbg !1645
  %0 = load i64, i64* %arrayidx, align 8, !dbg !1645, !tbaa !168
  %cmp1 = icmp eq i64 %0, 0, !dbg !1646
  br i1 %cmp1, label %for.inc, label %for.end, !dbg !1647

for.inc:                                          ; preds = %land.rhs
  call void @llvm.dbg.value(metadata i64 %sub, metadata !1637, metadata !DIExpression()), !dbg !1638
  br label %for.cond, !dbg !1648, !llvm.loop !1649

for.end:                                          ; preds = %for.cond, %land.rhs
  %n.addr.0.lcssa = phi i64 [ %n.addr.0, %for.cond ], [ %n.addr.0, %land.rhs ]
  call void @llvm.dbg.value(metadata i64 %n.addr.0.lcssa, metadata !1637, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.value(metadata i64 %n.addr.0.lcssa, metadata !1637, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.value(metadata i64 %n.addr.0.lcssa, metadata !1637, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.value(metadata i64 %n.addr.0.lcssa, metadata !1637, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.value(metadata i64 %n.addr.0.lcssa, metadata !1637, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.value(metadata i64 %n.addr.0.lcssa, metadata !1637, metadata !DIExpression()), !dbg !1638
  ret i64 %n.addr.0.lcssa, !dbg !1651
}

; Function Attrs: nounwind uwtable
define dso_local %struct.__mpz_struct* @mpz_roinit_n(%struct.__mpz_struct* %x, i64* %xp, i64 %xs) local_unnamed_addr #0 !dbg !1652 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !1656, metadata !DIExpression()), !dbg !1659
  call void @llvm.dbg.value(metadata i64* %xp, metadata !1657, metadata !DIExpression()), !dbg !1659
  call void @llvm.dbg.value(metadata i64 %xs, metadata !1658, metadata !DIExpression()), !dbg !1659
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 0, !dbg !1660
  store i32 0, i32* %_mp_alloc, align 8, !dbg !1661, !tbaa !1326
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 2, !dbg !1662
  store i64* %xp, i64** %_mp_d, align 8, !dbg !1663, !tbaa !1334
  tail call void @mpz_limbs_finish(%struct.__mpz_struct* %x, i64 %xs) #10, !dbg !1664
  ret %struct.__mpz_struct* %x, !dbg !1665
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_set_d(%struct.__mpz_struct* %r, double %x) local_unnamed_addr #0 !dbg !1666 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1670, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata double %x, metadata !1671, metadata !DIExpression()), !dbg !1679
  %cmp = fcmp uno double %x, 0.000000e+00, !dbg !1680
  %mul = fmul double %x, 5.000000e-01, !dbg !1682
  %cmp1 = fcmp oeq double %mul, %x, !dbg !1683
  %or.cond = or i1 %cmp, %cmp1, !dbg !1684
  br i1 %or.cond, label %if.then, label %if.end, !dbg !1684

if.then:                                          ; preds = %entry
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !1685
  store i32 0, i32* %_mp_size, align 4, !dbg !1687, !tbaa !1330
  br label %cleanup.cont, !dbg !1688

if.end:                                           ; preds = %entry
  %cmp2 = fcmp olt double %x, 0.000000e+00, !dbg !1689
  call void @llvm.dbg.value(metadata i1 %cmp2, metadata !1672, metadata !DIExpression()), !dbg !1679
  %sub = fsub double -0.000000e+00, %x, !dbg !1690
  %spec.select = select i1 %cmp2, double %sub, double %x, !dbg !1692
  call void @llvm.dbg.value(metadata double %spec.select, metadata !1671, metadata !DIExpression()), !dbg !1679
  %cmp5 = fcmp olt double %spec.select, 1.000000e+00, !dbg !1693
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !1695

if.then7:                                         ; preds = %if.end
  %_mp_size8 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !1696
  store i32 0, i32* %_mp_size8, align 4, !dbg !1698, !tbaa !1330
  br label %cleanup.cont, !dbg !1699

if.end9:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata double 0x43F0000000000000, metadata !1676, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata double 0x3BF0000000000000, metadata !1677, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata i64 1, metadata !1674, metadata !DIExpression()), !dbg !1679
  br label %for.cond, !dbg !1700

for.cond:                                         ; preds = %for.body, %if.end9
  %rn.0 = phi i64 [ 1, %if.end9 ], [ %inc, %for.body ], !dbg !1702
  %x.addr.1 = phi double [ %spec.select, %if.end9 ], [ %mul12, %for.body ], !dbg !1679
  call void @llvm.dbg.value(metadata double %x.addr.1, metadata !1671, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata i64 %rn.0, metadata !1674, metadata !DIExpression()), !dbg !1679
  %cmp10 = fcmp ult double %x.addr.1, 0x43F0000000000000, !dbg !1703
  br i1 %cmp10, label %for.end, label %for.body, !dbg !1705

for.body:                                         ; preds = %for.cond
  %mul12 = fmul double %x.addr.1, 0x3BF0000000000000, !dbg !1706
  call void @llvm.dbg.value(metadata double %mul12, metadata !1671, metadata !DIExpression()), !dbg !1679
  %inc = add nuw nsw i64 %rn.0, 1, !dbg !1707
  call void @llvm.dbg.value(metadata i64 %inc, metadata !1674, metadata !DIExpression()), !dbg !1679
  br label %for.cond, !dbg !1708, !llvm.loop !1709

for.end:                                          ; preds = %for.cond
  %rn.0.lcssa = phi i64 [ %rn.0, %for.cond ], !dbg !1702
  %x.addr.1.lcssa = phi double [ %x.addr.1, %for.cond ], !dbg !1679
  call void @llvm.dbg.value(metadata i64 %rn.0.lcssa, metadata !1674, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata double %x.addr.1.lcssa, metadata !1671, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata i64 %rn.0.lcssa, metadata !1674, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata double %x.addr.1.lcssa, metadata !1671, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata i64 %rn.0.lcssa, metadata !1674, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata double %x.addr.1.lcssa, metadata !1671, metadata !DIExpression()), !dbg !1679
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !1711
  %0 = load i32, i32* %_mp_alloc, align 8, !dbg !1711, !tbaa !1326
  %conv13 = sext i32 %0 to i64, !dbg !1711
  %cmp14 = icmp sgt i64 %rn.0.lcssa, %conv13, !dbg !1711
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !1711

cond.true:                                        ; preds = %for.end
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %rn.0.lcssa) #10, !dbg !1711
  br label %cond.end, !dbg !1711

cond.false:                                       ; preds = %for.end
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !1711
  %1 = bitcast i64** %_mp_d to i8**, !dbg !1711
  %2 = load i8*, i8** %1, align 8, !dbg !1711, !tbaa !1334
  br label %cond.end, !dbg !1711

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %2, %cond.false ], !dbg !1711
  %3 = bitcast i8* %cond to i64*, !dbg !1711
  call void @llvm.dbg.value(metadata i64* %3, metadata !1673, metadata !DIExpression()), !dbg !1679
  %conv16 = fptoui double %x.addr.1.lcssa to i64, !dbg !1712
  call void @llvm.dbg.value(metadata i64 %conv16, metadata !1678, metadata !DIExpression()), !dbg !1679
  %conv17 = uitofp i64 %conv16 to double, !dbg !1713
  %sub18 = fsub double %x.addr.1.lcssa, %conv17, !dbg !1714
  call void @llvm.dbg.value(metadata double %sub18, metadata !1671, metadata !DIExpression()), !dbg !1679
  %cmp19 = fcmp olt double %sub18, 1.000000e+00, !dbg !1715
  br i1 %cmp19, label %if.end22, label %if.else, !dbg !1718

if.else:                                          ; preds = %cond.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1610, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__PRETTY_FUNCTION__.mpz_set_d, i64 0, i64 0)) #8, !dbg !1715
  unreachable, !dbg !1715

if.end22:                                         ; preds = %cond.end
  %sub23 = add nsw i64 %rn.0.lcssa, -1, !dbg !1719
  call void @llvm.dbg.value(metadata i64 %sub23, metadata !1675, metadata !DIExpression()), !dbg !1679
  %arrayidx = getelementptr inbounds i64, i64* %3, i64 %sub23, !dbg !1720
  store i64 %conv16, i64* %arrayidx, align 8, !dbg !1721, !tbaa !168
  br label %while.cond, !dbg !1722

while.cond:                                       ; preds = %if.end34, %if.end22
  %i.0 = phi i64 [ %sub23, %if.end22 ], [ %dec, %if.end34 ], !dbg !1679
  %x.addr.2 = phi double [ %sub18, %if.end22 ], [ %sub29, %if.end34 ], !dbg !1679
  call void @llvm.dbg.value(metadata double %x.addr.2, metadata !1671, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !1675, metadata !DIExpression()), !dbg !1679
  %dec = add nsw i64 %i.0, -1, !dbg !1723
  call void @llvm.dbg.value(metadata i64 %dec, metadata !1675, metadata !DIExpression()), !dbg !1679
  %cmp24 = icmp sgt i64 %i.0, 0, !dbg !1724
  br i1 %cmp24, label %while.body, label %while.end, !dbg !1722

while.body:                                       ; preds = %while.cond
  %mul26 = fmul double %x.addr.2, 0x43F0000000000000, !dbg !1725
  call void @llvm.dbg.value(metadata double %mul26, metadata !1671, metadata !DIExpression()), !dbg !1679
  %conv27 = fptoui double %mul26 to i64, !dbg !1727
  call void @llvm.dbg.value(metadata i64 %conv27, metadata !1678, metadata !DIExpression()), !dbg !1679
  %conv28 = uitofp i64 %conv27 to double, !dbg !1728
  %sub29 = fsub double %mul26, %conv28, !dbg !1729
  call void @llvm.dbg.value(metadata double %sub29, metadata !1671, metadata !DIExpression()), !dbg !1679
  %cmp30 = fcmp olt double %sub29, 1.000000e+00, !dbg !1730
  br i1 %cmp30, label %if.end34, label %if.else33, !dbg !1733

if.else33:                                        ; preds = %while.body
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1618, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__PRETTY_FUNCTION__.mpz_set_d, i64 0, i64 0)) #8, !dbg !1730
  unreachable, !dbg !1730

if.end34:                                         ; preds = %while.body
  %arrayidx35 = getelementptr inbounds i64, i64* %3, i64 %dec, !dbg !1734
  store i64 %conv27, i64* %arrayidx35, align 8, !dbg !1735, !tbaa !168
  br label %while.cond, !dbg !1722, !llvm.loop !1736

while.end:                                        ; preds = %while.cond
  %sub38 = sub nsw i64 0, %rn.0.lcssa, !dbg !1738
  %cond41 = select i1 %cmp2, i64 %sub38, i64 %rn.0.lcssa, !dbg !1738
  %conv42 = trunc i64 %cond41 to i32, !dbg !1738
  %_mp_size43 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !1739
  store i32 %conv42, i32* %_mp_size43, align 4, !dbg !1740, !tbaa !1330
  br label %cleanup.cont, !dbg !1741

cleanup.cont:                                     ; preds = %if.then, %if.then7, %while.end
  ret void, !dbg !1741
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_init_set_d(%struct.__mpz_struct* %r, double %x) local_unnamed_addr #0 !dbg !1742 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !1744, metadata !DIExpression()), !dbg !1746
  call void @llvm.dbg.value(metadata double %x, metadata !1745, metadata !DIExpression()), !dbg !1746
  tail call void @mpz_init(%struct.__mpz_struct* %r) #10, !dbg !1747
  tail call void @mpz_set_d(%struct.__mpz_struct* %r, double %x) #10, !dbg !1748
  ret void, !dbg !1749
}

; Function Attrs: nounwind uwtable
define dso_local double @mpz_get_d(%struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !1750 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1754, metadata !DIExpression()), !dbg !1758
  call void @llvm.dbg.value(metadata double 0x43F0000000000000, metadata !1757, metadata !DIExpression()), !dbg !1758
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1759
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1759, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !1759
  %sub = sub nsw i32 0, %0, !dbg !1759
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !1759
  call void @llvm.dbg.value(metadata i32 %cond, metadata !1755, metadata !DIExpression()), !dbg !1758
  %cmp3 = icmp eq i32 %cond, 0, !dbg !1760
  br i1 %cmp3, label %cleanup, label %if.end, !dbg !1762

if.end:                                           ; preds = %entry
  %conv = zext i32 %cond to i64, !dbg !1759
  call void @llvm.dbg.value(metadata i64 %conv, metadata !1755, metadata !DIExpression()), !dbg !1758
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !1763
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !1763, !tbaa !1334
  %dec = add nsw i64 %conv, -1, !dbg !1764
  call void @llvm.dbg.value(metadata i64 %dec, metadata !1755, metadata !DIExpression()), !dbg !1758
  %arrayidx = getelementptr inbounds i64, i64* %1, i64 %dec, !dbg !1765
  %2 = load i64, i64* %arrayidx, align 8, !dbg !1765, !tbaa !168
  %conv5 = uitofp i64 %2 to double, !dbg !1765
  call void @llvm.dbg.value(metadata double %conv5, metadata !1756, metadata !DIExpression()), !dbg !1758
  br label %while.cond, !dbg !1766

while.cond:                                       ; preds = %while.body, %if.end
  %x.0 = phi double [ %conv5, %if.end ], [ %add, %while.body ], !dbg !1758
  %un.0 = phi i64 [ %dec, %if.end ], [ %dec9, %while.body ], !dbg !1758
  call void @llvm.dbg.value(metadata i64 %un.0, metadata !1755, metadata !DIExpression()), !dbg !1758
  call void @llvm.dbg.value(metadata double %x.0, metadata !1756, metadata !DIExpression()), !dbg !1758
  %cmp6 = icmp sgt i64 %un.0, 0, !dbg !1767
  br i1 %cmp6, label %while.body, label %while.end, !dbg !1766

while.body:                                       ; preds = %while.cond
  %mul = fmul double %x.0, 0x43F0000000000000, !dbg !1768
  %dec9 = add nsw i64 %un.0, -1, !dbg !1769
  call void @llvm.dbg.value(metadata i64 %dec9, metadata !1755, metadata !DIExpression()), !dbg !1758
  %arrayidx10 = getelementptr inbounds i64, i64* %1, i64 %dec9, !dbg !1770
  %3 = load i64, i64* %arrayidx10, align 8, !dbg !1770, !tbaa !168
  %conv11 = uitofp i64 %3 to double, !dbg !1770
  %add = fadd double %mul, %conv11, !dbg !1771
  call void @llvm.dbg.value(metadata double %add, metadata !1756, metadata !DIExpression()), !dbg !1758
  br label %while.cond, !dbg !1766, !llvm.loop !1772

while.end:                                        ; preds = %while.cond
  %x.0.lcssa = phi double [ %x.0, %while.cond ], !dbg !1758
  call void @llvm.dbg.value(metadata double %x.0.lcssa, metadata !1756, metadata !DIExpression()), !dbg !1758
  call void @llvm.dbg.value(metadata double %x.0.lcssa, metadata !1756, metadata !DIExpression()), !dbg !1758
  call void @llvm.dbg.value(metadata double %x.0.lcssa, metadata !1756, metadata !DIExpression()), !dbg !1758
  %sub16 = fsub double -0.000000e+00, %x.0.lcssa, !dbg !1774
  %spec.select = select i1 %cmp, double %sub16, double %x.0.lcssa, !dbg !1776
  call void @llvm.dbg.value(metadata double %spec.select, metadata !1756, metadata !DIExpression()), !dbg !1758
  br label %cleanup, !dbg !1777

cleanup:                                          ; preds = %entry, %while.end
  %retval.0 = phi double [ %spec.select, %while.end ], [ 0.000000e+00, %entry ], !dbg !1758
  ret double %retval.0, !dbg !1778
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_cmpabs_d(%struct.__mpz_struct* %x, double %d) local_unnamed_addr #0 !dbg !1779 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !1783, metadata !DIExpression()), !dbg !1796
  call void @llvm.dbg.value(metadata double %d, metadata !1784, metadata !DIExpression()), !dbg !1796
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 1, !dbg !1797
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1797, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !1798
  call void @llvm.dbg.value(metadata i64 %conv, metadata !1785, metadata !DIExpression()), !dbg !1796
  %cmp = fcmp oge double %d, 0.000000e+00, !dbg !1799
  %sub = fsub double -0.000000e+00, %d, !dbg !1799
  %cond = select i1 %cmp, double %d, double %sub, !dbg !1799
  call void @llvm.dbg.value(metadata double %cond, metadata !1784, metadata !DIExpression()), !dbg !1796
  %cmp2 = icmp eq i32 %0, 0, !dbg !1800
  br i1 %cmp2, label %if.end34, label %if.then, !dbg !1801

if.then:                                          ; preds = %entry
  %cmp4 = icmp slt i64 %conv, 0, !dbg !1802
  %sub8 = sub nsw i64 0, %conv, !dbg !1802
  %cond10 = select i1 %cmp4, i64 %sub8, i64 %conv, !dbg !1802
  call void @llvm.dbg.value(metadata i64 %cond10, metadata !1785, metadata !DIExpression()), !dbg !1796
  call void @llvm.dbg.value(metadata double 0x43F0000000000000, metadata !1786, metadata !DIExpression()), !dbg !1796
  call void @llvm.dbg.value(metadata double 0x3BF0000000000000, metadata !1787, metadata !DIExpression()), !dbg !1796
  call void @llvm.dbg.value(metadata i64 1, metadata !1788, metadata !DIExpression()), !dbg !1796
  br label %for.cond, !dbg !1803

for.cond:                                         ; preds = %for.body, %if.then
  %i.0 = phi i64 [ 1, %if.then ], [ %inc, %for.body ], !dbg !1805
  %d.addr.0 = phi double [ %cond, %if.then ], [ %mul, %for.body ], !dbg !1796
  call void @llvm.dbg.value(metadata double %d.addr.0, metadata !1784, metadata !DIExpression()), !dbg !1796
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !1788, metadata !DIExpression()), !dbg !1796
  %cmp11 = icmp slt i64 %i.0, %cond10, !dbg !1806
  br i1 %cmp11, label %for.body, label %for.end, !dbg !1808

for.body:                                         ; preds = %for.cond
  %mul = fmul double %d.addr.0, 0x3BF0000000000000, !dbg !1809
  call void @llvm.dbg.value(metadata double %mul, metadata !1784, metadata !DIExpression()), !dbg !1796
  %inc = add nuw nsw i64 %i.0, 1, !dbg !1810
  call void @llvm.dbg.value(metadata i64 %inc, metadata !1788, metadata !DIExpression()), !dbg !1796
  br label %for.cond, !dbg !1811, !llvm.loop !1812

for.end:                                          ; preds = %for.cond
  %d.addr.0.lcssa = phi double [ %d.addr.0, %for.cond ], !dbg !1796
  call void @llvm.dbg.value(metadata double %d.addr.0.lcssa, metadata !1784, metadata !DIExpression()), !dbg !1796
  call void @llvm.dbg.value(metadata double %d.addr.0.lcssa, metadata !1784, metadata !DIExpression()), !dbg !1796
  call void @llvm.dbg.value(metadata double %d.addr.0.lcssa, metadata !1784, metadata !DIExpression()), !dbg !1796
  %cmp13 = fcmp ult double %d.addr.0.lcssa, 0x43F0000000000000, !dbg !1814
  br i1 %cmp13, label %for.cond16.preheader, label %cleanup38, !dbg !1816

for.cond16.preheader:                             ; preds = %for.end
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 2, !dbg !1817
  br label %for.cond16, !dbg !1818

for.cond16:                                       ; preds = %for.cond16.preheader, %cleanup
  %i.1 = phi i64 [ %dec, %cleanup ], [ %cond10, %for.cond16.preheader ], !dbg !1819
  %d.addr.1 = phi double [ %d.addr.2, %cleanup ], [ %d.addr.0.lcssa, %for.cond16.preheader ], !dbg !1820
  %retval.0 = phi i32 [ %retval.1, %cleanup ], [ undef, %for.cond16.preheader ]
  call void @llvm.dbg.value(metadata double %d.addr.1, metadata !1784, metadata !DIExpression()), !dbg !1796
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !1788, metadata !DIExpression()), !dbg !1796
  %dec = add nsw i64 %i.1, -1, !dbg !1821
  call void @llvm.dbg.value(metadata i64 %dec, metadata !1788, metadata !DIExpression()), !dbg !1796
  %cmp17 = icmp sgt i64 %i.1, 0, !dbg !1822
  br i1 %cmp17, label %for.body19, label %if.end34.loopexit, !dbg !1818

for.body19:                                       ; preds = %for.cond16
  %conv20 = fptoui double %d.addr.1 to i64, !dbg !1823
  call void @llvm.dbg.value(metadata i64 %conv20, metadata !1789, metadata !DIExpression()), !dbg !1817
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !1824, !tbaa !1334
  %arrayidx = getelementptr inbounds i64, i64* %1, i64 %dec, !dbg !1825
  %2 = load i64, i64* %arrayidx, align 8, !dbg !1825, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %2, metadata !1795, metadata !DIExpression()), !dbg !1817
  %cmp21 = icmp ugt i64 %2, %conv20, !dbg !1826
  br i1 %cmp21, label %cleanup, label %if.else, !dbg !1828

if.else:                                          ; preds = %for.body19
  %cmp24 = icmp ult i64 %2, %conv20, !dbg !1829
  br i1 %cmp24, label %cleanup, label %if.end28, !dbg !1831

if.end28:                                         ; preds = %if.else
  %conv29 = uitofp i64 %conv20 to double, !dbg !1832
  %sub30 = fsub double %d.addr.1, %conv29, !dbg !1833
  %mul31 = fmul double %sub30, 0x43F0000000000000, !dbg !1834
  call void @llvm.dbg.value(metadata double %mul31, metadata !1784, metadata !DIExpression()), !dbg !1796
  br label %cleanup, !dbg !1835

cleanup:                                          ; preds = %if.else, %for.body19, %if.end28
  %d.addr.2 = phi double [ %mul31, %if.end28 ], [ %d.addr.1, %for.body19 ], [ %d.addr.1, %if.else ], !dbg !1796
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end28 ], [ false, %for.body19 ], [ false, %if.else ]
  %retval.1 = phi i32 [ %retval.0, %if.end28 ], [ 1, %for.body19 ], [ -1, %if.else ]
  call void @llvm.dbg.value(metadata double %d.addr.2, metadata !1784, metadata !DIExpression()), !dbg !1796
  br i1 %cleanup.dest.slot.0, label %for.cond16, label %cleanup38.loopexit, !llvm.loop !1836

if.end34.loopexit:                                ; preds = %for.cond16
  %d.addr.1.lcssa = phi double [ %d.addr.1, %for.cond16 ], !dbg !1820
  call void @llvm.dbg.value(metadata double %d.addr.1.lcssa, metadata !1784, metadata !DIExpression()), !dbg !1796
  call void @llvm.dbg.value(metadata double %d.addr.1.lcssa, metadata !1784, metadata !DIExpression()), !dbg !1796
  call void @llvm.dbg.value(metadata double %d.addr.1.lcssa, metadata !1784, metadata !DIExpression()), !dbg !1796
  br label %if.end34, !dbg !1838

if.end34:                                         ; preds = %if.end34.loopexit, %entry
  %d.addr.3 = phi double [ %cond, %entry ], [ %d.addr.1.lcssa, %if.end34.loopexit ], !dbg !1820
  call void @llvm.dbg.value(metadata double %d.addr.3, metadata !1784, metadata !DIExpression()), !dbg !1796
  %cmp35 = fcmp ogt double %d.addr.3, 0.000000e+00, !dbg !1838
  %sub37 = sext i1 %cmp35 to i32, !dbg !1839
  br label %cleanup38, !dbg !1840

cleanup38.loopexit:                               ; preds = %cleanup
  %retval.1.lcssa = phi i32 [ %retval.1, %cleanup ]
  br label %cleanup38, !dbg !1841

cleanup38:                                        ; preds = %cleanup38.loopexit, %for.end, %if.end34
  %retval.2 = phi i32 [ %sub37, %if.end34 ], [ -1, %for.end ], [ %retval.1.lcssa, %cleanup38.loopexit ], !dbg !1796
  ret i32 %retval.2, !dbg !1841
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_cmp_d(%struct.__mpz_struct* %x, double %d) local_unnamed_addr #0 !dbg !1842 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !1844, metadata !DIExpression()), !dbg !1846
  call void @llvm.dbg.value(metadata double %d, metadata !1845, metadata !DIExpression()), !dbg !1846
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %x, i64 0, i32 1, !dbg !1847
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1847, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !1849
  br i1 %cmp, label %if.then, label %if.else3, !dbg !1850

if.then:                                          ; preds = %entry
  %cmp1 = fcmp ult double %d, 0.000000e+00, !dbg !1851
  br i1 %cmp1, label %if.else, label %return, !dbg !1854

if.else:                                          ; preds = %if.then
  %call = tail call i32 @mpz_cmpabs_d(%struct.__mpz_struct* %x, double %d) #10, !dbg !1855
  %sub = sub nsw i32 0, %call, !dbg !1856
  br label %return, !dbg !1857

if.else3:                                         ; preds = %entry
  %cmp4 = fcmp olt double %d, 0.000000e+00, !dbg !1858
  br i1 %cmp4, label %return, label %if.else6, !dbg !1861

if.else6:                                         ; preds = %if.else3
  %call7 = tail call i32 @mpz_cmpabs_d(%struct.__mpz_struct* %x, double %d) #10, !dbg !1862
  br label %return, !dbg !1863

return:                                           ; preds = %if.then, %if.else3, %if.else6, %if.else
  %retval.0 = phi i32 [ %sub, %if.else ], [ %call7, %if.else6 ], [ -1, %if.then ], [ 1, %if.else3 ], !dbg !1864
  ret i32 %retval.0, !dbg !1865
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_sgn(%struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !1866 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1868, metadata !DIExpression()), !dbg !1870
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1871
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1871, !tbaa !1330
  %cmp = icmp sgt i32 %0, 0, !dbg !1872
  %conv1 = zext i1 %cmp to i32, !dbg !1872
  %.lobit = lshr i32 %0, 31, !dbg !1873
  %sub = sub nsw i32 %conv1, %.lobit, !dbg !1874
  ret i32 %sub, !dbg !1875
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_cmp_si(%struct.__mpz_struct* %u, i64 %v) local_unnamed_addr #0 !dbg !1876 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1880, metadata !DIExpression()), !dbg !1888
  call void @llvm.dbg.value(metadata i64 %v, metadata !1881, metadata !DIExpression()), !dbg !1888
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1889
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1889, !tbaa !1330
  %cmp = icmp slt i32 %0, -1, !dbg !1890
  br i1 %cmp, label %cleanup20, label %if.else, !dbg !1891

if.else:                                          ; preds = %entry
  %cmp2 = icmp sgt i64 %v, -1, !dbg !1892
  br i1 %cmp2, label %if.then4, label %if.else5, !dbg !1893

if.then4:                                         ; preds = %if.else
  %call = tail call i32 @mpz_cmp_ui(%struct.__mpz_struct* %u, i64 %v) #10, !dbg !1894
  br label %cleanup20, !dbg !1895

if.else5:                                         ; preds = %if.else
  %cmp6 = icmp sgt i32 %0, -1, !dbg !1896
  br i1 %cmp6, label %cleanup20, label %if.else9, !dbg !1897

if.else9:                                         ; preds = %if.else5
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !1898
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !1898, !tbaa !1334
  %2 = load i64, i64* %1, align 8, !dbg !1899, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %2, metadata !1883, metadata !DIExpression()), !dbg !1900
  %sub10 = sub i64 0, %v, !dbg !1901
  %cmp11 = icmp ugt i64 %2, %sub10, !dbg !1903
  %cmp18 = icmp ult i64 %2, %sub10, !dbg !1904
  %conv19 = zext i1 %cmp18 to i32, !dbg !1904
  %retval.0 = select i1 %cmp11, i32 -1, i32 %conv19, !dbg !1904
  br label %cleanup20, !dbg !1904

cleanup20:                                        ; preds = %if.else9, %if.else5, %entry, %if.then4
  %retval.1 = phi i32 [ %call, %if.then4 ], [ -1, %entry ], [ 1, %if.else5 ], [ %retval.0, %if.else9 ], !dbg !1905
  ret i32 %retval.1, !dbg !1906
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_cmp_ui(%struct.__mpz_struct* %u, i64 %v) local_unnamed_addr #0 !dbg !1907 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1911, metadata !DIExpression()), !dbg !1918
  call void @llvm.dbg.value(metadata i64 %v, metadata !1912, metadata !DIExpression()), !dbg !1918
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1919
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1919, !tbaa !1330
  %cmp = icmp sgt i32 %0, 1, !dbg !1920
  br i1 %cmp, label %cleanup, label %if.else, !dbg !1921

if.else:                                          ; preds = %entry
  %cmp2 = icmp slt i32 %0, 0, !dbg !1922
  br i1 %cmp2, label %cleanup, label %if.else5, !dbg !1923

if.else5:                                         ; preds = %if.else
  %cmp6 = icmp eq i32 %0, 0, !dbg !1924
  br i1 %cmp6, label %cond.end, label %cond.true, !dbg !1925

cond.true:                                        ; preds = %if.else5
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !1926
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !1926, !tbaa !1334
  %2 = load i64, i64* %1, align 8, !dbg !1927, !tbaa !168
  br label %cond.end, !dbg !1925

cond.end:                                         ; preds = %if.else5, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 0, %if.else5 ], !dbg !1925
  call void @llvm.dbg.value(metadata i64 %cond, metadata !1914, metadata !DIExpression()), !dbg !1928
  %cmp8 = icmp ugt i64 %cond, %v, !dbg !1929
  %conv9 = zext i1 %cmp8 to i32, !dbg !1929
  %cmp10 = icmp ult i64 %cond, %v, !dbg !1930
  %conv11 = zext i1 %cmp10 to i32, !dbg !1930
  %sub = sub nsw i32 %conv9, %conv11, !dbg !1931
  br label %cleanup

cleanup:                                          ; preds = %if.else, %entry, %cond.end
  %retval.0 = phi i32 [ %sub, %cond.end ], [ 1, %entry ], [ -1, %if.else ], !dbg !1932
  ret i32 %retval.0, !dbg !1933
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_cmp(%struct.__mpz_struct* %a, %struct.__mpz_struct* %b) local_unnamed_addr #0 !dbg !1934 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %a, metadata !1938, metadata !DIExpression()), !dbg !1942
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %b, metadata !1939, metadata !DIExpression()), !dbg !1942
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 1, !dbg !1943
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1943, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !1944
  call void @llvm.dbg.value(metadata i64 %conv, metadata !1940, metadata !DIExpression()), !dbg !1942
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %b, i64 0, i32 1, !dbg !1945
  %1 = load i32, i32* %_mp_size1, align 4, !dbg !1945, !tbaa !1330
  call void @llvm.dbg.value(metadata i64 undef, metadata !1941, metadata !DIExpression()), !dbg !1942
  %cmp = icmp eq i32 %0, %1, !dbg !1946
  br i1 %cmp, label %if.else, label %if.then, !dbg !1948

if.then:                                          ; preds = %entry
  %cmp4 = icmp slt i32 %0, %1, !dbg !1949
  %cond = select i1 %cmp4, i32 -1, i32 1, !dbg !1950
  br label %cleanup, !dbg !1951

if.else:                                          ; preds = %entry
  %cmp6 = icmp sgt i32 %0, -1, !dbg !1952
  br i1 %cmp6, label %if.then8, label %if.else10, !dbg !1954

if.then8:                                         ; preds = %if.else
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 2, !dbg !1955
  %2 = load i64*, i64** %_mp_d, align 8, !dbg !1955, !tbaa !1334
  %_mp_d9 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %b, i64 0, i32 2, !dbg !1956
  %3 = load i64*, i64** %_mp_d9, align 8, !dbg !1956, !tbaa !1334
  %call = tail call i32 @mpn_cmp(i64* %2, i64* %3, i64 %conv) #10, !dbg !1957
  br label %cleanup, !dbg !1958

if.else10:                                        ; preds = %if.else
  %_mp_d11 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %b, i64 0, i32 2, !dbg !1959
  %4 = load i64*, i64** %_mp_d11, align 8, !dbg !1959, !tbaa !1334
  %_mp_d12 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 2, !dbg !1960
  %5 = load i64*, i64** %_mp_d12, align 8, !dbg !1960, !tbaa !1334
  %sub = sub nsw i64 0, %conv, !dbg !1961
  %call13 = tail call i32 @mpn_cmp(i64* %4, i64* %5, i64 %sub) #10, !dbg !1962
  br label %cleanup, !dbg !1963

cleanup:                                          ; preds = %if.else10, %if.then8, %if.then
  %retval.0 = phi i32 [ %cond, %if.then ], [ %call, %if.then8 ], [ %call13, %if.else10 ], !dbg !1964
  ret i32 %retval.0, !dbg !1965
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_cmpabs_ui(%struct.__mpz_struct* %u, i64 %v) local_unnamed_addr #0 !dbg !1966 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1968, metadata !DIExpression()), !dbg !1972
  call void @llvm.dbg.value(metadata i64 %v, metadata !1969, metadata !DIExpression()), !dbg !1972
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1973
  %0 = load i32, i32* %_mp_size, align 4, !dbg !1973, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !1973
  %sub = sub nsw i32 0, %0, !dbg !1973
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !1973
  call void @llvm.dbg.value(metadata i32 %cond, metadata !1970, metadata !DIExpression()), !dbg !1972
  %cmp3 = icmp ugt i32 %cond, 1, !dbg !1974
  br i1 %cmp3, label %cleanup, label %if.end, !dbg !1976

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %cond, metadata !1970, metadata !DIExpression()), !dbg !1972
  %cmp5 = icmp eq i32 %cond, 1, !dbg !1977
  br i1 %cmp5, label %cond.true7, label %cond.end9, !dbg !1978

cond.true7:                                       ; preds = %if.end
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !1979
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !1979, !tbaa !1334
  %2 = load i64, i64* %1, align 8, !dbg !1980, !tbaa !168
  br label %cond.end9, !dbg !1978

cond.end9:                                        ; preds = %if.end, %cond.true7
  %cond10 = phi i64 [ %2, %cond.true7 ], [ 0, %if.end ], !dbg !1978
  call void @llvm.dbg.value(metadata i64 %cond10, metadata !1971, metadata !DIExpression()), !dbg !1972
  %cmp11 = icmp ugt i64 %cond10, %v, !dbg !1981
  %conv12 = zext i1 %cmp11 to i32, !dbg !1981
  %cmp13 = icmp ult i64 %cond10, %v, !dbg !1982
  %conv14 = zext i1 %cmp13 to i32, !dbg !1982
  %sub15 = sub nsw i32 %conv12, %conv14, !dbg !1983
  br label %cleanup, !dbg !1984

cleanup:                                          ; preds = %entry, %cond.end9
  %retval.0 = phi i32 [ %sub15, %cond.end9 ], [ 1, %entry ], !dbg !1972
  ret i32 %retval.0, !dbg !1985
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_cmpabs(%struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !1986 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !1988, metadata !DIExpression()), !dbg !1990
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !1989, metadata !DIExpression()), !dbg !1990
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !1991
  %0 = load i64*, i64** %_mp_d, align 8, !dbg !1991, !tbaa !1334
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !1992
  %1 = load i32, i32* %_mp_size, align 4, !dbg !1992, !tbaa !1330
  %cmp = icmp slt i32 %1, 0, !dbg !1992
  %sub = sub nsw i32 0, %1, !dbg !1992
  %cond = select i1 %cmp, i32 %sub, i32 %1, !dbg !1992
  %conv = zext i32 %cond to i64, !dbg !1992
  %_mp_d3 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 2, !dbg !1993
  %2 = load i64*, i64** %_mp_d3, align 8, !dbg !1993, !tbaa !1334
  %_mp_size4 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 1, !dbg !1994
  %3 = load i32, i32* %_mp_size4, align 4, !dbg !1994, !tbaa !1330
  %cmp5 = icmp slt i32 %3, 0, !dbg !1994
  %sub11 = sub nsw i32 0, %3, !dbg !1994
  %cond13 = select i1 %cmp5, i32 %sub11, i32 %3, !dbg !1994
  %conv14 = zext i32 %cond13 to i64, !dbg !1994
  %call = tail call fastcc i32 @mpn_cmp4(i64* %0, i64 %conv, i64* %2, i64 %conv14) #10, !dbg !1995
  ret i32 %call, !dbg !1996
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mpn_cmp4(i64* %ap, i64 %an, i64* %bp, i64 %bn) unnamed_addr #0 !dbg !1997 {
entry:
  call void @llvm.dbg.value(metadata i64* %ap, metadata !2001, metadata !DIExpression()), !dbg !2005
  call void @llvm.dbg.value(metadata i64 %an, metadata !2002, metadata !DIExpression()), !dbg !2005
  call void @llvm.dbg.value(metadata i64* %bp, metadata !2003, metadata !DIExpression()), !dbg !2005
  call void @llvm.dbg.value(metadata i64 %bn, metadata !2004, metadata !DIExpression()), !dbg !2005
  %cmp = icmp eq i64 %an, %bn, !dbg !2006
  br i1 %cmp, label %if.else, label %if.then, !dbg !2008

if.then:                                          ; preds = %entry
  %cmp1 = icmp slt i64 %an, %bn, !dbg !2009
  %cond = select i1 %cmp1, i32 -1, i32 1, !dbg !2010
  br label %return, !dbg !2011

if.else:                                          ; preds = %entry
  %call = tail call i32 @mpn_cmp(i64* %ap, i64* %bp, i64 %an) #10, !dbg !2012
  br label %return, !dbg !2013

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %cond, %if.then ], [ %call, %if.else ], !dbg !2014
  ret i32 %retval.0, !dbg !2015
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_abs(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !2016 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2018, metadata !DIExpression()), !dbg !2020
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2019, metadata !DIExpression()), !dbg !2020
  %cmp = icmp eq %struct.__mpz_struct* %r, %u, !dbg !2021
  br i1 %cmp, label %if.end, label %if.then, !dbg !2023

if.then:                                          ; preds = %entry
  tail call void @mpz_set(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u) #10, !dbg !2024
  br label %if.end, !dbg !2024

if.end:                                           ; preds = %entry, %if.then
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2025
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2025, !tbaa !1330
  %cmp1 = icmp slt i32 %0, 0, !dbg !2025
  %sub = sub nsw i32 0, %0, !dbg !2025
  %cond = select i1 %cmp1, i32 %sub, i32 %0, !dbg !2025
  store i32 %cond, i32* %_mp_size, align 4, !dbg !2026, !tbaa !1330
  ret void, !dbg !2027
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_neg(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !2028 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2030, metadata !DIExpression()), !dbg !2032
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2031, metadata !DIExpression()), !dbg !2032
  %cmp = icmp eq %struct.__mpz_struct* %r, %u, !dbg !2033
  br i1 %cmp, label %if.end, label %if.then, !dbg !2035

if.then:                                          ; preds = %entry
  tail call void @mpz_set(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u) #10, !dbg !2036
  br label %if.end, !dbg !2036

if.end:                                           ; preds = %entry, %if.then
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2037
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2037, !tbaa !1330
  %sub = sub nsw i32 0, %0, !dbg !2038
  store i32 %sub, i32* %_mp_size, align 4, !dbg !2039, !tbaa !1330
  ret void, !dbg !2040
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_swap(%struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !2041 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2045, metadata !DIExpression()), !dbg !2053
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !2046, metadata !DIExpression()), !dbg !2053
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !2054
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2054, !tbaa !1330
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 1, !dbg !2054
  %1 = load i32, i32* %_mp_size1, align 4, !dbg !2054, !tbaa !1330
  store i32 %1, i32* %_mp_size, align 4, !dbg !2054, !tbaa !1330
  store i32 %0, i32* %_mp_size1, align 4, !dbg !2054, !tbaa !1330
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 0, !dbg !2055
  %2 = load i32, i32* %_mp_alloc, align 8, !dbg !2055, !tbaa !1326
  %_mp_alloc8 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 0, !dbg !2055
  %3 = load i32, i32* %_mp_alloc8, align 8, !dbg !2055, !tbaa !1326
  store i32 %3, i32* %_mp_alloc, align 8, !dbg !2055, !tbaa !1326
  store i32 %2, i32* %_mp_alloc8, align 8, !dbg !2055, !tbaa !1326
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !2056
  %4 = bitcast i64** %_mp_d to i64*, !dbg !2056
  %5 = load i64, i64* %4, align 8, !dbg !2056, !tbaa !1334
  %_mp_d14 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 2, !dbg !2056
  %6 = bitcast i64** %_mp_d14 to i64*, !dbg !2056
  %7 = load i64, i64* %6, align 8, !dbg !2056, !tbaa !1334
  store i64 %7, i64* %4, align 8, !dbg !2056, !tbaa !1334
  store i64 %5, i64* %6, align 8, !dbg !2056, !tbaa !1334
  ret void, !dbg !2057
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_add_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, i64 %b) local_unnamed_addr #0 !dbg !2058 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2062, metadata !DIExpression()), !dbg !2065
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %a, metadata !2063, metadata !DIExpression()), !dbg !2065
  call void @llvm.dbg.value(metadata i64 %b, metadata !2064, metadata !DIExpression()), !dbg !2065
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 1, !dbg !2066
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2066, !tbaa !1330
  %cmp = icmp sgt i32 %0, -1, !dbg !2068
  br i1 %cmp, label %if.then, label %if.else, !dbg !2069

if.then:                                          ; preds = %entry
  %call = tail call fastcc i64 @mpz_abs_add_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, i64 %b) #10, !dbg !2070
  %conv = trunc i64 %call to i32, !dbg !2070
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2071
  store i32 %conv, i32* %_mp_size1, align 4, !dbg !2072, !tbaa !1330
  br label %if.end, !dbg !2073

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc i64 @mpz_abs_sub_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, i64 %b) #10, !dbg !2074
  %1 = trunc i64 %call2 to i32, !dbg !2075
  %conv3 = sub i32 0, %1, !dbg !2075
  %_mp_size4 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2076
  store i32 %conv3, i32* %_mp_size4, align 4, !dbg !2077, !tbaa !1330
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2078
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpz_abs_add_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, i64 %b) unnamed_addr #0 !dbg !2079 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2083, metadata !DIExpression()), !dbg !2089
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %a, metadata !2084, metadata !DIExpression()), !dbg !2089
  call void @llvm.dbg.value(metadata i64 %b, metadata !2085, metadata !DIExpression()), !dbg !2089
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 1, !dbg !2090
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2090, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !2090
  %sub = sub nsw i32 0, %0, !dbg !2090
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !2090
  %conv = zext i32 %cond to i64, !dbg !2090
  call void @llvm.dbg.value(metadata i64 %conv, metadata !2086, metadata !DIExpression()), !dbg !2089
  %cmp3 = icmp eq i32 %cond, 0, !dbg !2091
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2093

if.then:                                          ; preds = %entry
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !2094
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !2094, !tbaa !1334
  store i64 %b, i64* %1, align 8, !dbg !2096, !tbaa !168
  %cmp5 = icmp ne i64 %b, 0, !dbg !2097
  %conv7 = zext i1 %cmp5 to i64, !dbg !2098
  br label %cleanup, !dbg !2099

if.end:                                           ; preds = %entry
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !2100
  %2 = load i32, i32* %_mp_alloc, align 8, !dbg !2100, !tbaa !1326
  %conv8 = sext i32 %2 to i64, !dbg !2100
  %cmp9 = icmp slt i64 %conv, %conv8, !dbg !2100
  br i1 %cmp9, label %cond.false13, label %cond.true11, !dbg !2100

cond.true11:                                      ; preds = %if.end
  %add12 = add nuw nsw i64 %conv, 1, !dbg !2100
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %add12) #10, !dbg !2100
  br label %cond.end15, !dbg !2100

cond.false13:                                     ; preds = %if.end
  %_mp_d14 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !2100
  %3 = bitcast i64** %_mp_d14 to i8**, !dbg !2100
  %4 = load i8*, i8** %3, align 8, !dbg !2100, !tbaa !1334
  br label %cond.end15, !dbg !2100

cond.end15:                                       ; preds = %cond.false13, %cond.true11
  %cond16 = phi i8* [ %call, %cond.true11 ], [ %4, %cond.false13 ], !dbg !2100
  %5 = bitcast i8* %cond16 to i64*, !dbg !2100
  call void @llvm.dbg.value(metadata i64* %5, metadata !2087, metadata !DIExpression()), !dbg !2089
  %_mp_d17 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 2, !dbg !2101
  %6 = load i64*, i64** %_mp_d17, align 8, !dbg !2101, !tbaa !1334
  %call18 = tail call i64 @mpn_add_1(i64* %5, i64* %6, i64 %conv, i64 %b) #10, !dbg !2102
  call void @llvm.dbg.value(metadata i64 %call18, metadata !2088, metadata !DIExpression()), !dbg !2089
  %arrayidx19 = getelementptr inbounds i64, i64* %5, i64 %conv, !dbg !2103
  store i64 %call18, i64* %arrayidx19, align 8, !dbg !2104, !tbaa !168
  %add20 = add i64 %call18, %conv, !dbg !2105
  call void @llvm.dbg.value(metadata i64 %add20, metadata !2086, metadata !DIExpression()), !dbg !2089
  br label %cleanup, !dbg !2106

cleanup:                                          ; preds = %cond.end15, %if.then
  %retval.0 = phi i64 [ %conv7, %if.then ], [ %add20, %cond.end15 ], !dbg !2089
  ret i64 %retval.0, !dbg !2107
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpz_abs_sub_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, i64 %b) unnamed_addr #0 !dbg !2108 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2110, metadata !DIExpression()), !dbg !2120
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %a, metadata !2111, metadata !DIExpression()), !dbg !2120
  call void @llvm.dbg.value(metadata i64 %b, metadata !2112, metadata !DIExpression()), !dbg !2120
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 1, !dbg !2121
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2121, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !2121
  %sub = sub nsw i32 0, %0, !dbg !2121
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !2121
  %conv = zext i32 %cond to i64, !dbg !2121
  call void @llvm.dbg.value(metadata i64 %conv, metadata !2113, metadata !DIExpression()), !dbg !2120
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !2122
  %1 = load i32, i32* %_mp_alloc, align 8, !dbg !2122, !tbaa !1326
  %conv3 = sext i32 %1 to i64, !dbg !2122
  %cmp4 = icmp sgt i64 %conv, %conv3, !dbg !2122
  br i1 %cmp4, label %cond.true6, label %cond.false7, !dbg !2122

cond.true6:                                       ; preds = %entry
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %conv) #10, !dbg !2122
  br label %cond.end8, !dbg !2122

cond.false7:                                      ; preds = %entry
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !2122
  %2 = bitcast i64** %_mp_d to i8**, !dbg !2122
  %3 = load i8*, i8** %2, align 8, !dbg !2122, !tbaa !1334
  br label %cond.end8, !dbg !2122

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi i8* [ %call, %cond.true6 ], [ %3, %cond.false7 ], !dbg !2122
  %4 = bitcast i8* %cond9 to i64*, !dbg !2122
  call void @llvm.dbg.value(metadata i64* %4, metadata !2114, metadata !DIExpression()), !dbg !2120
  switch i64 %conv, label %cond.end8.do.body_crit_edge [
    i64 0, label %if.then
    i64 1, label %land.lhs.true
  ], !dbg !2123

cond.end8.do.body_crit_edge:                      ; preds = %cond.end8
  %_mp_d28.phi.trans.insert = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 2, !dbg !2124
  %.pre = load i64*, i64** %_mp_d28.phi.trans.insert, align 8, !dbg !2125, !tbaa !1334
  br label %do.body, !dbg !2123

if.then:                                          ; preds = %cond.end8
  store i64 %b, i64* %4, align 8, !dbg !2126, !tbaa !168
  %cmp12 = icmp ne i64 %b, 0, !dbg !2128
  %conv15 = sext i1 %cmp12 to i64, !dbg !2129
  br label %cleanup, !dbg !2130

land.lhs.true:                                    ; preds = %cond.end8
  %_mp_d18 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 2, !dbg !2131
  %5 = load i64*, i64** %_mp_d18, align 8, !dbg !2131, !tbaa !1334
  %6 = load i64, i64* %5, align 8, !dbg !2132, !tbaa !168
  %cmp20 = icmp ult i64 %6, %b, !dbg !2133
  br i1 %cmp20, label %if.then22, label %do.body, !dbg !2134

if.then22:                                        ; preds = %land.lhs.true
  %sub25 = sub i64 %b, %6, !dbg !2135
  store i64 %sub25, i64* %4, align 8, !dbg !2137, !tbaa !168
  br label %cleanup, !dbg !2138

do.body:                                          ; preds = %cond.end8.do.body_crit_edge, %land.lhs.true
  %7 = phi i64* [ %.pre, %cond.end8.do.body_crit_edge ], [ %5, %land.lhs.true ], !dbg !2125
  %call29 = tail call i64 @mpn_sub_1(i64* %4, i64* %7, i64 %conv, i64 %b) #10, !dbg !2125
  call void @llvm.dbg.value(metadata i64 %call29, metadata !2115, metadata !DIExpression()), !dbg !2124
  %cmp30 = icmp eq i64 %call29, 0, !dbg !2139
  br i1 %cmp30, label %do.end, label %if.else33, !dbg !2142

if.else33:                                        ; preds = %do.body
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1869, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__.mpz_abs_sub_ui, i64 0, i64 0)) #8, !dbg !2139
  unreachable, !dbg !2139

do.end:                                           ; preds = %do.body
  %call34 = tail call fastcc i64 @mpn_normalized_size(i64* %4, i64 %conv) #10, !dbg !2143
  br label %cleanup, !dbg !2144

cleanup:                                          ; preds = %do.end, %if.then22, %if.then
  %retval.0 = phi i64 [ %conv15, %if.then ], [ -1, %if.then22 ], [ %call34, %do.end ], !dbg !2145
  ret i64 %retval.0, !dbg !2146
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_sub_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, i64 %b) local_unnamed_addr #0 !dbg !2147 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2149, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %a, metadata !2150, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.value(metadata i64 %b, metadata !2151, metadata !DIExpression()), !dbg !2152
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 1, !dbg !2153
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2153, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !2155
  br i1 %cmp, label %if.then, label %if.else, !dbg !2156

if.then:                                          ; preds = %entry
  %call = tail call fastcc i64 @mpz_abs_add_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, i64 %b) #10, !dbg !2157
  %1 = trunc i64 %call to i32, !dbg !2158
  %conv = sub i32 0, %1, !dbg !2158
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2159
  store i32 %conv, i32* %_mp_size1, align 4, !dbg !2160, !tbaa !1330
  br label %if.end, !dbg !2161

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc i64 @mpz_abs_sub_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, i64 %b) #10, !dbg !2162
  %conv3 = trunc i64 %call2 to i32, !dbg !2162
  %_mp_size4 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2163
  store i32 %conv3, i32* %_mp_size4, align 4, !dbg !2164, !tbaa !1330
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2165
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_ui_sub(%struct.__mpz_struct* %r, i64 %a, %struct.__mpz_struct* %b) local_unnamed_addr #0 !dbg !2166 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2170, metadata !DIExpression()), !dbg !2173
  call void @llvm.dbg.value(metadata i64 %a, metadata !2171, metadata !DIExpression()), !dbg !2173
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %b, metadata !2172, metadata !DIExpression()), !dbg !2173
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %b, i64 0, i32 1, !dbg !2174
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2174, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !2176
  br i1 %cmp, label %if.then, label %if.else, !dbg !2177

if.then:                                          ; preds = %entry
  %call = tail call fastcc i64 @mpz_abs_add_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %b, i64 %a) #10, !dbg !2178
  %conv = trunc i64 %call to i32, !dbg !2178
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2179
  store i32 %conv, i32* %_mp_size1, align 4, !dbg !2180, !tbaa !1330
  br label %if.end, !dbg !2181

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc i64 @mpz_abs_sub_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %b, i64 %a) #10, !dbg !2182
  %1 = trunc i64 %call2 to i32, !dbg !2183
  %conv3 = sub i32 0, %1, !dbg !2183
  %_mp_size4 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2184
  store i32 %conv3, i32* %_mp_size4, align 4, !dbg !2185, !tbaa !1330
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2186
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_add(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, %struct.__mpz_struct* %b) local_unnamed_addr #0 !dbg !2187 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2191, metadata !DIExpression()), !dbg !2195
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %a, metadata !2192, metadata !DIExpression()), !dbg !2195
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %b, metadata !2193, metadata !DIExpression()), !dbg !2195
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 1, !dbg !2196
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2196, !tbaa !1330
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %b, i64 0, i32 1, !dbg !2198
  %1 = load i32, i32* %_mp_size1, align 4, !dbg !2198, !tbaa !1330
  %xor = xor i32 %0, %1, !dbg !2199
  %cmp = icmp sgt i32 %xor, -1, !dbg !2200
  br i1 %cmp, label %if.then, label %if.else, !dbg !2201

if.then:                                          ; preds = %entry
  %call = tail call fastcc i64 @mpz_abs_add(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, %struct.__mpz_struct* %b) #10, !dbg !2202
  call void @llvm.dbg.value(metadata i64 %call, metadata !2194, metadata !DIExpression()), !dbg !2195
  br label %if.end, !dbg !2203

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc i64 @mpz_abs_sub(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, %struct.__mpz_struct* %b) #10, !dbg !2204
  call void @llvm.dbg.value(metadata i64 %call2, metadata !2194, metadata !DIExpression()), !dbg !2195
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %rn.0 = phi i64 [ %call, %if.then ], [ %call2, %if.else ], !dbg !2205
  call void @llvm.dbg.value(metadata i64 %rn.0, metadata !2194, metadata !DIExpression()), !dbg !2195
  %2 = load i32, i32* %_mp_size, align 4, !dbg !2206, !tbaa !1330
  %cmp4 = icmp sgt i32 %2, -1, !dbg !2207
  %sub = sub nsw i64 0, %rn.0, !dbg !2208
  %cond = select i1 %cmp4, i64 %rn.0, i64 %sub, !dbg !2208
  %conv = trunc i64 %cond to i32, !dbg !2208
  %_mp_size5 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2209
  store i32 %conv, i32* %_mp_size5, align 4, !dbg !2210, !tbaa !1330
  ret void, !dbg !2211
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpz_abs_add(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, %struct.__mpz_struct* %b) unnamed_addr #0 !dbg !2212 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2216, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %a, metadata !2217, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %b, metadata !2218, metadata !DIExpression()), !dbg !2229
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 1, !dbg !2230
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2230, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !2230
  %sub = sub nsw i32 0, %0, !dbg !2230
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !2230
  call void @llvm.dbg.value(metadata i32 %cond, metadata !2219, metadata !DIExpression()), !dbg !2229
  %_mp_size3 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %b, i64 0, i32 1, !dbg !2231
  %1 = load i32, i32* %_mp_size3, align 4, !dbg !2231, !tbaa !1330
  %cmp4 = icmp slt i32 %1, 0, !dbg !2231
  %sub10 = sub nsw i32 0, %1, !dbg !2231
  %cond12 = select i1 %cmp4, i32 %sub10, i32 %1, !dbg !2231
  call void @llvm.dbg.value(metadata i32 %cond12, metadata !2220, metadata !DIExpression()), !dbg !2229
  %cmp14 = icmp ult i32 %cond, %cond12, !dbg !2232
  %2 = icmp ugt i32 %cond, %cond12, !dbg !2233
  %spec.select4 = select i1 %2, i32 %cond, i32 %cond12, !dbg !2233
  %3 = zext i32 %spec.select4 to i64, !dbg !2233
  %spec.select1 = select i1 %cmp14, %struct.__mpz_struct* %a, %struct.__mpz_struct* %b, !dbg !2233
  %spec.select2 = select i1 %cmp14, %struct.__mpz_struct* %b, %struct.__mpz_struct* %a, !dbg !2233
  %spec.select3.v = select i1 %cmp14, i32 %cond, i32 %cond12, !dbg !2233
  %spec.select3 = zext i32 %spec.select3.v to i64, !dbg !2233
  call void @llvm.dbg.value(metadata i64 %spec.select3, metadata !2220, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %spec.select2, metadata !2217, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %spec.select1, metadata !2218, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.value(metadata i64 %3, metadata !2219, metadata !DIExpression()), !dbg !2229
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !2234
  %4 = load i32, i32* %_mp_alloc, align 8, !dbg !2234, !tbaa !1326
  %conv19 = sext i32 %4 to i64, !dbg !2234
  %cmp20 = icmp slt i64 %3, %conv19, !dbg !2234
  br i1 %cmp20, label %cond.false24, label %cond.true22, !dbg !2234

cond.true22:                                      ; preds = %entry
  %add23 = add nuw nsw i64 %3, 1, !dbg !2234
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %add23) #10, !dbg !2234
  br label %cond.end25, !dbg !2234

cond.false24:                                     ; preds = %entry
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !2234
  %5 = bitcast i64** %_mp_d to i8**, !dbg !2234
  %6 = load i8*, i8** %5, align 8, !dbg !2234, !tbaa !1334
  br label %cond.end25, !dbg !2234

cond.end25:                                       ; preds = %cond.false24, %cond.true22
  %cond26 = phi i8* [ %call, %cond.true22 ], [ %6, %cond.false24 ], !dbg !2234
  %7 = bitcast i8* %cond26 to i64*, !dbg !2234
  call void @llvm.dbg.value(metadata i64* %7, metadata !2221, metadata !DIExpression()), !dbg !2229
  %_mp_d27 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select2, i64 0, i32 2, !dbg !2235
  %8 = load i64*, i64** %_mp_d27, align 8, !dbg !2235, !tbaa !1334
  %_mp_d28 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select1, i64 0, i32 2, !dbg !2236
  %9 = load i64*, i64** %_mp_d28, align 8, !dbg !2236, !tbaa !1334
  %call29 = tail call i64 @mpn_add(i64* %7, i64* %8, i64 %3, i64* %9, i64 %spec.select3) #10, !dbg !2237
  call void @llvm.dbg.value(metadata i64 %call29, metadata !2222, metadata !DIExpression()), !dbg !2229
  %arrayidx = getelementptr inbounds i64, i64* %7, i64 %3, !dbg !2238
  store i64 %call29, i64* %arrayidx, align 8, !dbg !2239, !tbaa !168
  %add30 = add i64 %call29, %3, !dbg !2240
  ret i64 %add30, !dbg !2241
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpz_abs_sub(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, %struct.__mpz_struct* %b) unnamed_addr #0 !dbg !2242 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2244, metadata !DIExpression()), !dbg !2259
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %a, metadata !2245, metadata !DIExpression()), !dbg !2259
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %b, metadata !2246, metadata !DIExpression()), !dbg !2259
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 1, !dbg !2260
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2260, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !2260
  %sub = sub nsw i32 0, %0, !dbg !2260
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !2260
  %conv = zext i32 %cond to i64, !dbg !2260
  call void @llvm.dbg.value(metadata i64 %conv, metadata !2247, metadata !DIExpression()), !dbg !2259
  %_mp_size3 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %b, i64 0, i32 1, !dbg !2261
  %1 = load i32, i32* %_mp_size3, align 4, !dbg !2261, !tbaa !1330
  %cmp4 = icmp slt i32 %1, 0, !dbg !2261
  %sub10 = sub nsw i32 0, %1, !dbg !2261
  %cond12 = select i1 %cmp4, i32 %sub10, i32 %1, !dbg !2261
  %conv13 = zext i32 %cond12 to i64, !dbg !2261
  call void @llvm.dbg.value(metadata i64 %conv13, metadata !2248, metadata !DIExpression()), !dbg !2259
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 2, !dbg !2262
  %2 = load i64*, i64** %_mp_d, align 8, !dbg !2262, !tbaa !1334
  %_mp_d15 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %b, i64 0, i32 2, !dbg !2263
  %3 = load i64*, i64** %_mp_d15, align 8, !dbg !2263, !tbaa !1334
  %call = tail call fastcc i32 @mpn_cmp4(i64* %2, i64 %conv, i64* %3, i64 %conv13) #10, !dbg !2264
  call void @llvm.dbg.value(metadata i32 %call, metadata !2249, metadata !DIExpression()), !dbg !2259
  %cmp16 = icmp sgt i32 %call, 0, !dbg !2265
  br i1 %cmp16, label %if.then, label %if.else34, !dbg !2266

if.then:                                          ; preds = %entry
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !2267
  %4 = load i32, i32* %_mp_alloc, align 8, !dbg !2267, !tbaa !1326
  %conv18 = sext i32 %4 to i64, !dbg !2267
  %cmp19 = icmp sgt i64 %conv, %conv18, !dbg !2267
  br i1 %cmp19, label %cond.true21, label %cond.false23, !dbg !2267

cond.true21:                                      ; preds = %if.then
  %call22 = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %conv) #10, !dbg !2267
  br label %cond.end25, !dbg !2267

cond.false23:                                     ; preds = %if.then
  %_mp_d24 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !2267
  %5 = bitcast i64** %_mp_d24 to i8**, !dbg !2267
  %6 = load i8*, i8** %5, align 8, !dbg !2267, !tbaa !1334
  br label %cond.end25, !dbg !2267

cond.end25:                                       ; preds = %cond.false23, %cond.true21
  %cond26 = phi i8* [ %call22, %cond.true21 ], [ %6, %cond.false23 ], !dbg !2267
  %7 = bitcast i8* %cond26 to i64*, !dbg !2267
  call void @llvm.dbg.value(metadata i64* %7, metadata !2250, metadata !DIExpression()), !dbg !2259
  %8 = load i64*, i64** %_mp_d, align 8, !dbg !2268, !tbaa !1334
  %9 = load i64*, i64** %_mp_d15, align 8, !dbg !2268, !tbaa !1334
  %call29 = tail call i64 @mpn_sub(i64* %7, i64* %8, i64 %conv, i64* %9, i64 %conv13) #10, !dbg !2268
  call void @llvm.dbg.value(metadata i64 %call29, metadata !2251, metadata !DIExpression()), !dbg !2269
  %cmp30 = icmp eq i64 %call29, 0, !dbg !2270
  br i1 %cmp30, label %do.end, label %if.else, !dbg !2273

if.else:                                          ; preds = %cond.end25
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1935, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.mpz_abs_sub, i64 0, i64 0)) #8, !dbg !2270
  unreachable, !dbg !2270

do.end:                                           ; preds = %cond.end25
  %call33 = tail call fastcc i64 @mpn_normalized_size(i64* %7, i64 %conv) #10, !dbg !2274
  br label %cleanup, !dbg !2275

if.else34:                                        ; preds = %entry
  %cmp35 = icmp slt i32 %call, 0, !dbg !2276
  br i1 %cmp35, label %if.then37, label %cleanup, !dbg !2277

if.then37:                                        ; preds = %if.else34
  %_mp_alloc38 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !2278
  %10 = load i32, i32* %_mp_alloc38, align 8, !dbg !2278, !tbaa !1326
  %conv39 = sext i32 %10 to i64, !dbg !2278
  %cmp40 = icmp sgt i64 %conv13, %conv39, !dbg !2278
  br i1 %cmp40, label %cond.true42, label %cond.false44, !dbg !2278

cond.true42:                                      ; preds = %if.then37
  %call43 = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %conv13) #10, !dbg !2278
  br label %cond.end46, !dbg !2278

cond.false44:                                     ; preds = %if.then37
  %_mp_d45 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !2278
  %11 = bitcast i64** %_mp_d45 to i8**, !dbg !2278
  %12 = load i8*, i8** %11, align 8, !dbg !2278, !tbaa !1334
  br label %cond.end46, !dbg !2278

cond.end46:                                       ; preds = %cond.false44, %cond.true42
  %cond47 = phi i8* [ %call43, %cond.true42 ], [ %12, %cond.false44 ], !dbg !2278
  %13 = bitcast i8* %cond47 to i64*, !dbg !2278
  call void @llvm.dbg.value(metadata i64* %13, metadata !2250, metadata !DIExpression()), !dbg !2259
  %14 = load i64*, i64** %_mp_d15, align 8, !dbg !2279, !tbaa !1334
  %15 = load i64*, i64** %_mp_d, align 8, !dbg !2279, !tbaa !1334
  %call52 = tail call i64 @mpn_sub(i64* %13, i64* %14, i64 %conv13, i64* %15, i64 %conv) #10, !dbg !2279
  call void @llvm.dbg.value(metadata i64 %call52, metadata !2255, metadata !DIExpression()), !dbg !2280
  %cmp53 = icmp eq i64 %call52, 0, !dbg !2281
  br i1 %cmp53, label %do.end59, label %if.else56, !dbg !2284

if.else56:                                        ; preds = %cond.end46
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1941, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.mpz_abs_sub, i64 0, i64 0)) #8, !dbg !2281
  unreachable, !dbg !2281

do.end59:                                         ; preds = %cond.end46
  %call60 = tail call fastcc i64 @mpn_normalized_size(i64* %13, i64 %conv13) #10, !dbg !2285
  %sub61 = sub nsw i64 0, %call60, !dbg !2286
  br label %cleanup, !dbg !2287

cleanup:                                          ; preds = %if.else34, %do.end59, %do.end
  %retval.0 = phi i64 [ %call33, %do.end ], [ %sub61, %do.end59 ], [ 0, %if.else34 ], !dbg !2288
  ret i64 %retval.0, !dbg !2289
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_sub(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, %struct.__mpz_struct* %b) local_unnamed_addr #0 !dbg !2290 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2292, metadata !DIExpression()), !dbg !2296
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %a, metadata !2293, metadata !DIExpression()), !dbg !2296
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %b, metadata !2294, metadata !DIExpression()), !dbg !2296
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %a, i64 0, i32 1, !dbg !2297
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2297, !tbaa !1330
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %b, i64 0, i32 1, !dbg !2299
  %1 = load i32, i32* %_mp_size1, align 4, !dbg !2299, !tbaa !1330
  %xor = xor i32 %0, %1, !dbg !2300
  %cmp = icmp sgt i32 %xor, -1, !dbg !2301
  br i1 %cmp, label %if.then, label %if.else, !dbg !2302

if.then:                                          ; preds = %entry
  %call = tail call fastcc i64 @mpz_abs_sub(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, %struct.__mpz_struct* %b) #10, !dbg !2303
  call void @llvm.dbg.value(metadata i64 %call, metadata !2295, metadata !DIExpression()), !dbg !2296
  br label %if.end, !dbg !2304

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc i64 @mpz_abs_add(%struct.__mpz_struct* %r, %struct.__mpz_struct* %a, %struct.__mpz_struct* %b) #10, !dbg !2305
  call void @llvm.dbg.value(metadata i64 %call2, metadata !2295, metadata !DIExpression()), !dbg !2296
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %rn.0 = phi i64 [ %call, %if.then ], [ %call2, %if.else ], !dbg !2306
  call void @llvm.dbg.value(metadata i64 %rn.0, metadata !2295, metadata !DIExpression()), !dbg !2296
  %2 = load i32, i32* %_mp_size, align 4, !dbg !2307, !tbaa !1330
  %cmp4 = icmp sgt i32 %2, -1, !dbg !2308
  %sub = sub nsw i64 0, %rn.0, !dbg !2309
  %cond = select i1 %cmp4, i64 %rn.0, i64 %sub, !dbg !2309
  %conv = trunc i64 %cond to i32, !dbg !2309
  %_mp_size5 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2310
  store i32 %conv, i32* %_mp_size5, align 4, !dbg !2311, !tbaa !1330
  ret void, !dbg !2312
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_mul_si(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %v) local_unnamed_addr #0 !dbg !2313 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2317, metadata !DIExpression()), !dbg !2320
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2318, metadata !DIExpression()), !dbg !2320
  call void @llvm.dbg.value(metadata i64 %v, metadata !2319, metadata !DIExpression()), !dbg !2320
  %cmp = icmp slt i64 %v, 0, !dbg !2321
  br i1 %cmp, label %if.then, label %if.else, !dbg !2323

if.then:                                          ; preds = %entry
  %sub1 = sub i64 0, %v, !dbg !2324
  tail call void @mpz_mul_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %sub1) #10, !dbg !2326
  tail call void @mpz_neg(%struct.__mpz_struct* %r, %struct.__mpz_struct* %r) #10, !dbg !2327
  br label %if.end, !dbg !2328

if.else:                                          ; preds = %entry
  tail call void @mpz_mul_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %v) #10, !dbg !2329
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2330
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_mul_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %v) local_unnamed_addr #0 !dbg !2331 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2333, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2334, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.value(metadata i64 %v, metadata !2335, metadata !DIExpression()), !dbg !2340
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !2341
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2341, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !2342
  call void @llvm.dbg.value(metadata i64 %conv, metadata !2337, metadata !DIExpression()), !dbg !2340
  %cmp = icmp eq i32 %0, 0, !dbg !2343
  %cmp2 = icmp eq i64 %v, 0, !dbg !2345
  %or.cond = or i1 %cmp, %cmp2, !dbg !2346
  br i1 %or.cond, label %if.then, label %if.end, !dbg !2346

if.then:                                          ; preds = %entry
  %_mp_size4 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2347
  store i32 0, i32* %_mp_size4, align 4, !dbg !2349, !tbaa !1330
  br label %cleanup.cont, !dbg !2350

if.end:                                           ; preds = %entry
  %cmp5 = icmp slt i64 %conv, 0, !dbg !2351
  %sub = sub nsw i64 0, %conv, !dbg !2351
  %cond = select i1 %cmp5, i64 %sub, i64 %conv, !dbg !2351
  call void @llvm.dbg.value(metadata i64 %cond, metadata !2336, metadata !DIExpression()), !dbg !2340
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !2352
  %1 = load i32, i32* %_mp_alloc, align 8, !dbg !2352, !tbaa !1326
  %conv7 = sext i32 %1 to i64, !dbg !2352
  %cmp8 = icmp slt i64 %cond, %conv7, !dbg !2352
  br i1 %cmp8, label %cond.false12, label %cond.true10, !dbg !2352

cond.true10:                                      ; preds = %if.end
  %add11 = add nuw nsw i64 %cond, 1, !dbg !2352
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %add11) #10, !dbg !2352
  br label %cond.end13, !dbg !2352

cond.false12:                                     ; preds = %if.end
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !2352
  %2 = bitcast i64** %_mp_d to i8**, !dbg !2352
  %3 = load i8*, i8** %2, align 8, !dbg !2352, !tbaa !1334
  br label %cond.end13, !dbg !2352

cond.end13:                                       ; preds = %cond.false12, %cond.true10
  %cond14 = phi i8* [ %call, %cond.true10 ], [ %3, %cond.false12 ], !dbg !2352
  %4 = bitcast i8* %cond14 to i64*, !dbg !2352
  call void @llvm.dbg.value(metadata i64* %4, metadata !2338, metadata !DIExpression()), !dbg !2340
  %_mp_d15 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !2353
  %5 = load i64*, i64** %_mp_d15, align 8, !dbg !2353, !tbaa !1334
  %call16 = tail call i64 @mpn_mul_1(i64* %4, i64* %5, i64 %cond, i64 %v) #10, !dbg !2354
  call void @llvm.dbg.value(metadata i64 %call16, metadata !2339, metadata !DIExpression()), !dbg !2340
  %arrayidx = getelementptr inbounds i64, i64* %4, i64 %cond, !dbg !2355
  store i64 %call16, i64* %arrayidx, align 8, !dbg !2356, !tbaa !168
  %cmp17 = icmp ne i64 %call16, 0, !dbg !2357
  %conv19 = zext i1 %cmp17 to i64, !dbg !2358
  %add20 = add nuw nsw i64 %cond, %conv19, !dbg !2359
  call void @llvm.dbg.value(metadata i64 %add20, metadata !2336, metadata !DIExpression()), !dbg !2340
  %cmp21 = icmp slt i32 %0, 0, !dbg !2360
  %sub24 = sub nsw i64 0, %add20, !dbg !2361
  %cond27 = select i1 %cmp21, i64 %sub24, i64 %add20, !dbg !2361
  %conv28 = trunc i64 %cond27 to i32, !dbg !2361
  %_mp_size29 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2362
  store i32 %conv28, i32* %_mp_size29, align 4, !dbg !2363, !tbaa !1330
  br label %cleanup.cont, !dbg !2364

cleanup.cont:                                     ; preds = %if.then, %cond.end13
  ret void, !dbg !2364
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_mul(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !2365 {
entry:
  %t = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2367, metadata !DIExpression()), !dbg !2380
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2368, metadata !DIExpression()), !dbg !2380
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !2369, metadata !DIExpression()), !dbg !2380
  %0 = bitcast [1 x %struct.__mpz_struct]* %t to i8*, !dbg !2381
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !2381
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %t, metadata !2374, metadata !DIExpression()), !dbg !2382
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !2383
  %1 = load i32, i32* %_mp_size, align 4, !dbg !2383, !tbaa !1330
  %conv = sext i32 %1 to i64, !dbg !2384
  call void @llvm.dbg.value(metadata i64 %conv, metadata !2371, metadata !DIExpression()), !dbg !2380
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 1, !dbg !2385
  %2 = load i32, i32* %_mp_size1, align 4, !dbg !2385, !tbaa !1330
  %conv2 = sext i32 %2 to i64, !dbg !2386
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !2372, metadata !DIExpression()), !dbg !2380
  %cmp = icmp eq i32 %1, 0, !dbg !2387
  %cmp4 = icmp eq i32 %2, 0, !dbg !2389
  %or.cond = or i1 %cmp, %cmp4, !dbg !2390
  br i1 %or.cond, label %if.then, label %if.end, !dbg !2390

if.then:                                          ; preds = %entry
  %_mp_size6 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2391
  store i32 0, i32* %_mp_size6, align 4, !dbg !2393, !tbaa !1330
  br label %cleanup, !dbg !2394

if.end:                                           ; preds = %entry
  %xor1 = xor i32 %1, %2, !dbg !2395
  call void @llvm.dbg.value(metadata i32 %xor1, metadata !2370, metadata !DIExpression(DW_OP_constu, 31, DW_OP_shr, DW_OP_stack_value)), !dbg !2380
  %cmp9 = icmp slt i64 %conv, 0, !dbg !2396
  %sub = sub nsw i64 0, %conv, !dbg !2396
  %cond = select i1 %cmp9, i64 %sub, i64 %conv, !dbg !2396
  call void @llvm.dbg.value(metadata i64 %cond, metadata !2371, metadata !DIExpression()), !dbg !2380
  %cmp11 = icmp slt i64 %conv2, 0, !dbg !2397
  %sub15 = sub nsw i64 0, %conv2, !dbg !2397
  %cond17 = select i1 %cmp11, i64 %sub15, i64 %conv2, !dbg !2397
  call void @llvm.dbg.value(metadata i64 %cond17, metadata !2372, metadata !DIExpression()), !dbg !2380
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t, i64 0, i64 0, !dbg !2398
  %add = add nuw nsw i64 %cond, %cond17, !dbg !2399
  %mul = shl nsw i64 %add, 6, !dbg !2400
  call void @mpz_init2(%struct.__mpz_struct* nonnull %arraydecay, i64 %mul) #10, !dbg !2401
  %_mp_d = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t, i64 0, i64 0, i32 2, !dbg !2402
  %3 = load i64*, i64** %_mp_d, align 8, !dbg !2402, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %3, metadata !2379, metadata !DIExpression()), !dbg !2380
  %cmp19 = icmp slt i64 %cond, %cond17, !dbg !2403
  br i1 %cmp19, label %if.else, label %if.then21, !dbg !2405

if.then21:                                        ; preds = %if.end
  %_mp_d22 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !2406
  %4 = load i64*, i64** %_mp_d22, align 8, !dbg !2406, !tbaa !1334
  %_mp_d23 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 2, !dbg !2407
  %5 = load i64*, i64** %_mp_d23, align 8, !dbg !2407, !tbaa !1334
  %call = call i64 @mpn_mul(i64* %3, i64* %4, i64 %cond, i64* %5, i64 %cond17) #10, !dbg !2408
  br label %if.end27, !dbg !2408

if.else:                                          ; preds = %if.end
  %_mp_d24 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 2, !dbg !2409
  %6 = load i64*, i64** %_mp_d24, align 8, !dbg !2409, !tbaa !1334
  %_mp_d25 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !2410
  %7 = load i64*, i64** %_mp_d25, align 8, !dbg !2410, !tbaa !1334
  %call26 = call i64 @mpn_mul(i64* %3, i64* %6, i64 %cond17, i64* %7, i64 %cond) #10, !dbg !2411
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then21
  call void @llvm.dbg.value(metadata i64 %add, metadata !2373, metadata !DIExpression()), !dbg !2380
  %sub29 = add nsw i64 %add, -1, !dbg !2412
  %arrayidx = getelementptr inbounds i64, i64* %3, i64 %sub29, !dbg !2413
  %8 = load i64, i64* %arrayidx, align 8, !dbg !2413, !tbaa !168
  %cmp30 = icmp eq i64 %8, 0, !dbg !2414
  %conv32 = zext i1 %cmp30 to i64, !dbg !2413
  %sub33 = sub nsw i64 %add, %conv32, !dbg !2415
  call void @llvm.dbg.value(metadata i64 %sub33, metadata !2373, metadata !DIExpression()), !dbg !2380
  %tobool = icmp slt i32 %xor1, 0, !dbg !2416
  %sub35 = sub nsw i64 0, %sub33, !dbg !2416
  %cond38 = select i1 %tobool, i64 %sub35, i64 %sub33, !dbg !2416
  %conv39 = trunc i64 %cond38 to i32, !dbg !2416
  %_mp_size41 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t, i64 0, i64 0, i32 1, !dbg !2417
  store i32 %conv39, i32* %_mp_size41, align 4, !dbg !2418, !tbaa !1330
  call void @mpz_swap(%struct.__mpz_struct* %r, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2419
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2420
  br label %cleanup, !dbg !2421

cleanup:                                          ; preds = %if.end27, %if.then
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !2421
  ret void, !dbg !2421
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_mul_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %bits) local_unnamed_addr #0 !dbg !2422 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2426, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2427, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.value(metadata i64 %bits, metadata !2428, metadata !DIExpression()), !dbg !2437
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !2438
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2438, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !2438
  %sub = sub nsw i32 0, %0, !dbg !2438
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !2438
  %conv = zext i32 %cond to i64, !dbg !2438
  call void @llvm.dbg.value(metadata i64 %conv, metadata !2429, metadata !DIExpression()), !dbg !2437
  %cmp3 = icmp eq i32 %cond, 0, !dbg !2439
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2441

if.then:                                          ; preds = %entry
  %_mp_size5 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2442
  store i32 0, i32* %_mp_size5, align 4, !dbg !2444, !tbaa !1330
  br label %cleanup.cont, !dbg !2445

if.end:                                           ; preds = %entry
  %div = lshr i64 %bits, 6, !dbg !2446
  call void @llvm.dbg.value(metadata i64 %div, metadata !2431, metadata !DIExpression()), !dbg !2437
  %1 = trunc i64 %bits to i32, !dbg !2447
  %conv6 = and i32 %1, 63, !dbg !2447
  call void @llvm.dbg.value(metadata i32 %conv6, metadata !2432, metadata !DIExpression()), !dbg !2437
  %add = add nuw nsw i64 %div, %conv, !dbg !2448
  %cmp7 = icmp ne i32 %conv6, 0, !dbg !2449
  %conv9 = zext i1 %cmp7 to i64, !dbg !2450
  %add10 = add nuw nsw i64 %add, %conv9, !dbg !2451
  call void @llvm.dbg.value(metadata i64 %add10, metadata !2430, metadata !DIExpression()), !dbg !2437
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !2452
  %2 = load i32, i32* %_mp_alloc, align 8, !dbg !2452, !tbaa !1326
  %conv11 = sext i32 %2 to i64, !dbg !2452
  %cmp12 = icmp sgt i64 %add10, %conv11, !dbg !2452
  br i1 %cmp12, label %cond.true14, label %cond.false15, !dbg !2452

cond.true14:                                      ; preds = %if.end
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %add10) #10, !dbg !2452
  br label %cond.end16, !dbg !2452

cond.false15:                                     ; preds = %if.end
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !2452
  %3 = bitcast i64** %_mp_d to i8**, !dbg !2452
  %4 = load i8*, i8** %3, align 8, !dbg !2452, !tbaa !1334
  br label %cond.end16, !dbg !2452

cond.end16:                                       ; preds = %cond.false15, %cond.true14
  %cond17 = phi i8* [ %call, %cond.true14 ], [ %4, %cond.false15 ], !dbg !2452
  %5 = bitcast i8* %cond17 to i64*, !dbg !2452
  call void @llvm.dbg.value(metadata i64* %5, metadata !2433, metadata !DIExpression()), !dbg !2437
  %cmp18 = icmp eq i32 %conv6, 0, !dbg !2453
  %add.ptr = getelementptr inbounds i64, i64* %5, i64 %div, !dbg !2454
  %_mp_d21 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !2454
  %6 = load i64*, i64** %_mp_d21, align 8, !dbg !2454, !tbaa !1334
  br i1 %cmp18, label %if.else, label %if.then20, !dbg !2455

if.then20:                                        ; preds = %cond.end16
  %call22 = tail call i64 @mpn_lshift(i64* %add.ptr, i64* %6, i64 %conv, i32 %conv6) #10, !dbg !2456
  call void @llvm.dbg.value(metadata i64 %call22, metadata !2434, metadata !DIExpression()), !dbg !2457
  %sub23 = add nsw i64 %add10, -1, !dbg !2458
  %arrayidx = getelementptr inbounds i64, i64* %5, i64 %sub23, !dbg !2459
  store i64 %call22, i64* %arrayidx, align 8, !dbg !2460, !tbaa !168
  %cmp24 = icmp eq i64 %call22, 0, !dbg !2461
  %conv26 = zext i1 %cmp24 to i64, !dbg !2462
  %sub27 = sub nsw i64 %add10, %conv26, !dbg !2463
  call void @llvm.dbg.value(metadata i64 %sub27, metadata !2430, metadata !DIExpression()), !dbg !2437
  br label %if.end30, !dbg !2464

if.else:                                          ; preds = %cond.end16
  tail call void @mpn_copyd(i64* %add.ptr, i64* %6, i64 %conv) #10, !dbg !2465
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then20
  %rn.0 = phi i64 [ %sub27, %if.then20 ], [ %add10, %if.else ], !dbg !2437
  call void @llvm.dbg.value(metadata i64 %rn.0, metadata !2430, metadata !DIExpression()), !dbg !2437
  br label %while.cond, !dbg !2466

while.cond:                                       ; preds = %while.body, %if.end30
  %limbs.0 = phi i64 [ %div, %if.end30 ], [ %dec, %while.body ], !dbg !2437
  call void @llvm.dbg.value(metadata i64 %limbs.0, metadata !2431, metadata !DIExpression()), !dbg !2437
  %cmp31 = icmp sgt i64 %limbs.0, 0, !dbg !2467
  br i1 %cmp31, label %while.body, label %while.end, !dbg !2466

while.body:                                       ; preds = %while.cond
  %dec = add nsw i64 %limbs.0, -1, !dbg !2468
  call void @llvm.dbg.value(metadata i64 %dec, metadata !2431, metadata !DIExpression()), !dbg !2437
  %arrayidx33 = getelementptr inbounds i64, i64* %5, i64 %dec, !dbg !2469
  store i64 0, i64* %arrayidx33, align 8, !dbg !2470, !tbaa !168
  br label %while.cond, !dbg !2466, !llvm.loop !2471

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* %_mp_size, align 4, !dbg !2473, !tbaa !1330
  %cmp35 = icmp slt i32 %7, 0, !dbg !2474
  %sub38 = sub nsw i64 0, %rn.0, !dbg !2475
  %cond41 = select i1 %cmp35, i64 %sub38, i64 %rn.0, !dbg !2475
  %conv42 = trunc i64 %cond41 to i32, !dbg !2475
  %_mp_size43 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2476
  store i32 %conv42, i32* %_mp_size43, align 4, !dbg !2477, !tbaa !1330
  br label %cleanup.cont, !dbg !2478

cleanup.cont:                                     ; preds = %if.then, %while.end
  ret void, !dbg !2478
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_addmul_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %v) local_unnamed_addr #0 !dbg !2479 {
entry:
  %t = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2481, metadata !DIExpression()), !dbg !2485
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2482, metadata !DIExpression()), !dbg !2485
  call void @llvm.dbg.value(metadata i64 %v, metadata !2483, metadata !DIExpression()), !dbg !2485
  %0 = bitcast [1 x %struct.__mpz_struct]* %t to i8*, !dbg !2486
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !2486
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %t, metadata !2484, metadata !DIExpression()), !dbg !2487
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t, i64 0, i64 0, !dbg !2488
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2489
  call void @mpz_mul_ui(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %u, i64 %v) #10, !dbg !2490
  call void @mpz_add(%struct.__mpz_struct* %r, %struct.__mpz_struct* %r, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2491
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2492
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !2493
  ret void, !dbg !2493
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_submul_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %v) local_unnamed_addr #0 !dbg !2494 {
entry:
  %t = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2496, metadata !DIExpression()), !dbg !2500
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2497, metadata !DIExpression()), !dbg !2500
  call void @llvm.dbg.value(metadata i64 %v, metadata !2498, metadata !DIExpression()), !dbg !2500
  %0 = bitcast [1 x %struct.__mpz_struct]* %t to i8*, !dbg !2501
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !2501
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %t, metadata !2499, metadata !DIExpression()), !dbg !2502
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t, i64 0, i64 0, !dbg !2503
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2504
  call void @mpz_mul_ui(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %u, i64 %v) #10, !dbg !2505
  call void @mpz_sub(%struct.__mpz_struct* %r, %struct.__mpz_struct* %r, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2506
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2507
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !2508
  ret void, !dbg !2508
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_addmul(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !2509 {
entry:
  %t = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2511, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2512, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !2513, metadata !DIExpression()), !dbg !2515
  %0 = bitcast [1 x %struct.__mpz_struct]* %t to i8*, !dbg !2516
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !2516
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %t, metadata !2514, metadata !DIExpression()), !dbg !2517
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t, i64 0, i64 0, !dbg !2518
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2519
  call void @mpz_mul(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) #10, !dbg !2520
  call void @mpz_add(%struct.__mpz_struct* %r, %struct.__mpz_struct* %r, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2521
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2522
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !2523
  ret void, !dbg !2523
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_submul(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !2524 {
entry:
  %t = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2526, metadata !DIExpression()), !dbg !2530
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2527, metadata !DIExpression()), !dbg !2530
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !2528, metadata !DIExpression()), !dbg !2530
  %0 = bitcast [1 x %struct.__mpz_struct]* %t to i8*, !dbg !2531
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !2531
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %t, metadata !2529, metadata !DIExpression()), !dbg !2532
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t, i64 0, i64 0, !dbg !2533
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2534
  call void @mpz_mul(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) #10, !dbg !2535
  call void @mpz_sub(%struct.__mpz_struct* %r, %struct.__mpz_struct* %r, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2536
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2537
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !2538
  ret void, !dbg !2538
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_cdiv_qr(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !2539 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !2543, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2544, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !2545, metadata !DIExpression()), !dbg !2547
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !2546, metadata !DIExpression()), !dbg !2547
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 1) #10, !dbg !2548
  ret void, !dbg !2549
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mpz_div_qr(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 %mode) unnamed_addr #0 !dbg !2550 {
entry:
  %tq = alloca [1 x %struct.__mpz_struct], align 16
  %tr = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !2554, metadata !DIExpression()), !dbg !2572
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2555, metadata !DIExpression()), !dbg !2572
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !2556, metadata !DIExpression()), !dbg !2572
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !2557, metadata !DIExpression()), !dbg !2572
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2558, metadata !DIExpression()), !dbg !2572
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %n, i64 0, i32 1, !dbg !2573
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2573, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !2574
  call void @llvm.dbg.value(metadata i64 %conv, metadata !2559, metadata !DIExpression()), !dbg !2572
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 1, !dbg !2575
  %1 = load i32, i32* %_mp_size1, align 4, !dbg !2575, !tbaa !1330
  %conv2 = sext i32 %1 to i64, !dbg !2576
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !2560, metadata !DIExpression()), !dbg !2572
  %cmp = icmp eq i32 %1, 0, !dbg !2577
  br i1 %cmp, label %if.then, label %if.end, !dbg !2579

if.then:                                          ; preds = %entry
  tail call fastcc void @gmp_die(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.44, i64 0, i64 0)) #10, !dbg !2580
  br label %if.end, !dbg !2580

if.end:                                           ; preds = %if.then, %entry
  %cmp4 = icmp eq i32 %0, 0, !dbg !2581
  br i1 %cmp4, label %if.then6, label %if.end14, !dbg !2583

if.then6:                                         ; preds = %if.end
  %tobool = icmp eq %struct.__mpz_struct* %q, null, !dbg !2584
  br i1 %tobool, label %if.end9, label %if.then7, !dbg !2587

if.then7:                                         ; preds = %if.then6
  %_mp_size8 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %q, i64 0, i32 1, !dbg !2588
  store i32 0, i32* %_mp_size8, align 4, !dbg !2589, !tbaa !1330
  br label %if.end9, !dbg !2590

if.end9:                                          ; preds = %if.then6, %if.then7
  %tobool10 = icmp eq %struct.__mpz_struct* %r, null, !dbg !2591
  br i1 %tobool10, label %cleanup, label %if.then11, !dbg !2593

if.then11:                                        ; preds = %if.end9
  %_mp_size12 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2594
  store i32 0, i32* %_mp_size12, align 4, !dbg !2595, !tbaa !1330
  br label %cleanup, !dbg !2596

if.end14:                                         ; preds = %if.end
  %cmp15 = icmp slt i64 %conv, 0, !dbg !2597
  %sub = sub nsw i64 0, %conv, !dbg !2597
  %cond = select i1 %cmp15, i64 %sub, i64 %conv, !dbg !2597
  call void @llvm.dbg.value(metadata i64 %cond, metadata !2561, metadata !DIExpression()), !dbg !2572
  %cmp17 = icmp slt i64 %conv2, 0, !dbg !2598
  %sub21 = sub nsw i64 0, %conv2, !dbg !2598
  %cond23 = select i1 %cmp17, i64 %sub21, i64 %conv2, !dbg !2598
  call void @llvm.dbg.value(metadata i64 %cond23, metadata !2562, metadata !DIExpression()), !dbg !2572
  %xor6 = xor i32 %1, %0, !dbg !2599
  %cmp24 = icmp slt i64 %cond, %cond23, !dbg !2600
  br i1 %cmp24, label %if.then26, label %if.else60, !dbg !2601

if.then26:                                        ; preds = %if.end14
  %cmp27 = icmp eq i32 %mode, 1, !dbg !2602
  %cmp29 = icmp sgt i32 %xor6, -1, !dbg !2605
  %or.cond = and i1 %cmp27, %cmp29, !dbg !2606
  br i1 %or.cond, label %if.then31, label %if.else, !dbg !2606

if.then31:                                        ; preds = %if.then26
  %tobool32 = icmp eq %struct.__mpz_struct* %r, null, !dbg !2607
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !2610

if.then33:                                        ; preds = %if.then31
  tail call void @mpz_sub(%struct.__mpz_struct* nonnull %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) #10, !dbg !2611
  br label %if.end34, !dbg !2611

if.end34:                                         ; preds = %if.then31, %if.then33
  %tobool35 = icmp eq %struct.__mpz_struct* %q, null, !dbg !2612
  br i1 %tobool35, label %cleanup, label %if.then36, !dbg !2614

if.then36:                                        ; preds = %if.end34
  tail call void @mpz_set_ui(%struct.__mpz_struct* nonnull %q, i64 1) #10, !dbg !2615
  br label %cleanup, !dbg !2615

if.else:                                          ; preds = %if.then26
  %cmp38 = icmp eq i32 %mode, 0, !dbg !2616
  %cmp41 = icmp slt i32 %xor6, 0, !dbg !2618
  %or.cond1 = and i1 %cmp38, %cmp41, !dbg !2619
  %tobool44 = icmp ne %struct.__mpz_struct* %r, null, !dbg !2620
  br i1 %or.cond1, label %if.then43, label %if.else50, !dbg !2619

if.then43:                                        ; preds = %if.else
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !2621

if.then45:                                        ; preds = %if.then43
  tail call void @mpz_add(%struct.__mpz_struct* nonnull %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) #10, !dbg !2623
  br label %if.end46, !dbg !2623

if.end46:                                         ; preds = %if.then45, %if.then43
  %tobool47 = icmp eq %struct.__mpz_struct* %q, null, !dbg !2625
  br i1 %tobool47, label %cleanup, label %if.then48, !dbg !2627

if.then48:                                        ; preds = %if.end46
  tail call void @mpz_set_si(%struct.__mpz_struct* nonnull %q, i64 -1) #10, !dbg !2628
  br label %cleanup, !dbg !2628

if.else50:                                        ; preds = %if.else
  br i1 %tobool44, label %if.then52, label %if.end53, !dbg !2629

if.then52:                                        ; preds = %if.else50
  tail call void @mpz_set(%struct.__mpz_struct* nonnull %r, %struct.__mpz_struct* %n) #10, !dbg !2631
  br label %if.end53, !dbg !2631

if.end53:                                         ; preds = %if.then52, %if.else50
  %tobool54 = icmp eq %struct.__mpz_struct* %q, null, !dbg !2633
  br i1 %tobool54, label %cleanup, label %if.then55, !dbg !2635

if.then55:                                        ; preds = %if.end53
  %_mp_size56 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %q, i64 0, i32 1, !dbg !2636
  store i32 0, i32* %_mp_size56, align 4, !dbg !2637, !tbaa !1330
  br label %cleanup, !dbg !2638

if.else60:                                        ; preds = %if.end14
  %2 = bitcast [1 x %struct.__mpz_struct]* %tq to i8*, !dbg !2639
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #11, !dbg !2639
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %tq, metadata !2570, metadata !DIExpression()), !dbg !2640
  %3 = bitcast [1 x %struct.__mpz_struct]* %tr to i8*, !dbg !2639
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #11, !dbg !2639
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %tr, metadata !2571, metadata !DIExpression()), !dbg !2641
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tr, i64 0, i64 0, !dbg !2642
  call void @mpz_init_set(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %n) #10, !dbg !2643
  %_mp_d = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tr, i64 0, i64 0, i32 2, !dbg !2644
  %4 = load i64*, i64** %_mp_d, align 8, !dbg !2644, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %4, metadata !2564, metadata !DIExpression()), !dbg !2645
  %sub62 = sub nsw i64 %cond, %cond23, !dbg !2646
  %add = add nsw i64 %sub62, 1, !dbg !2647
  call void @llvm.dbg.value(metadata i64 %add, metadata !2568, metadata !DIExpression()), !dbg !2645
  %tobool63 = icmp eq %struct.__mpz_struct* %q, null, !dbg !2648
  br i1 %tobool63, label %if.end69, label %if.then64, !dbg !2650

if.then64:                                        ; preds = %if.else60
  %arraydecay65 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tq, i64 0, i64 0, !dbg !2651
  %mul = shl nsw i64 %add, 6, !dbg !2653
  call void @mpz_init2(%struct.__mpz_struct* nonnull %arraydecay65, i64 %mul) #10, !dbg !2654
  %_mp_d67 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tq, i64 0, i64 0, i32 2, !dbg !2655
  %5 = load i64*, i64** %_mp_d67, align 8, !dbg !2655, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %5, metadata !2567, metadata !DIExpression()), !dbg !2645
  br label %if.end69, !dbg !2656

if.end69:                                         ; preds = %if.else60, %if.then64
  %qp.0 = phi i64* [ %5, %if.then64 ], [ null, %if.else60 ], !dbg !2657
  call void @llvm.dbg.value(metadata i64* %qp.0, metadata !2567, metadata !DIExpression()), !dbg !2645
  %_mp_d70 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 2, !dbg !2658
  %6 = load i64*, i64** %_mp_d70, align 8, !dbg !2658, !tbaa !1334
  call fastcc void @mpn_div_qr(i64* %qp.0, i64* %4, i64 %cond, i64* %6, i64 %cond23) #10, !dbg !2659
  %tobool71 = icmp eq i64* %qp.0, null, !dbg !2660
  br i1 %tobool71, label %if.end88, label %if.then72, !dbg !2662

if.then72:                                        ; preds = %if.end69
  %arrayidx = getelementptr inbounds i64, i64* %qp.0, i64 %sub62, !dbg !2663
  %7 = load i64, i64* %arrayidx, align 8, !dbg !2663, !tbaa !168
  %cmp74 = icmp eq i64 %7, 0, !dbg !2665
  %conv76 = zext i1 %cmp74 to i64, !dbg !2666
  %sub77 = sub nsw i64 %add, %conv76, !dbg !2667
  call void @llvm.dbg.value(metadata i64 %sub77, metadata !2568, metadata !DIExpression()), !dbg !2645
  %cmp78 = icmp slt i32 %xor6, 0, !dbg !2668
  %sub81 = sub nsw i64 0, %sub77, !dbg !2669
  %cond84 = select i1 %cmp78, i64 %sub81, i64 %sub77, !dbg !2669
  %conv85 = trunc i64 %cond84 to i32, !dbg !2669
  %_mp_size87 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tq, i64 0, i64 0, i32 1, !dbg !2670
  store i32 %conv85, i32* %_mp_size87, align 4, !dbg !2671, !tbaa !1330
  br label %if.end88, !dbg !2672

if.end88:                                         ; preds = %if.end69, %if.then72
  %call = call fastcc i64 @mpn_normalized_size(i64* %4, i64 %cond23) #10, !dbg !2673
  call void @llvm.dbg.value(metadata i64 %call, metadata !2569, metadata !DIExpression()), !dbg !2645
  %cmp89 = icmp slt i32 %0, 0, !dbg !2674
  %sub92 = sub nsw i64 0, %call, !dbg !2675
  %cond95 = select i1 %cmp89, i64 %sub92, i64 %call, !dbg !2675
  %conv96 = trunc i64 %cond95 to i32, !dbg !2675
  %_mp_size98 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tr, i64 0, i64 0, i32 1, !dbg !2676
  store i32 %conv96, i32* %_mp_size98, align 4, !dbg !2677, !tbaa !1330
  %cmp99 = icmp eq i32 %mode, 0, !dbg !2678
  %cmp102 = icmp slt i32 %xor6, 0, !dbg !2680
  %or.cond2 = and i1 %cmp99, %cmp102, !dbg !2681
  %cmp105 = icmp ne i64 %call, 0, !dbg !2682
  %or.cond3 = and i1 %or.cond2, %cmp105, !dbg !2681
  br i1 %or.cond3, label %if.then107, label %if.else118, !dbg !2681

if.then107:                                       ; preds = %if.end88
  br i1 %tobool63, label %if.end112, label %if.then109, !dbg !2683

if.then109:                                       ; preds = %if.then107
  %arraydecay110 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tq, i64 0, i64 0, !dbg !2685
  call void @mpz_sub_ui(%struct.__mpz_struct* nonnull %arraydecay110, %struct.__mpz_struct* nonnull %arraydecay110, i64 1) #10, !dbg !2687
  br label %if.end112, !dbg !2687

if.end112:                                        ; preds = %if.then107, %if.then109
  %tobool113 = icmp eq %struct.__mpz_struct* %r, null, !dbg !2688
  br i1 %tobool113, label %if.end139, label %if.then114, !dbg !2690

if.then114:                                       ; preds = %if.end112
  call void @mpz_add(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %d) #10, !dbg !2691
  br label %if.end139, !dbg !2691

if.else118:                                       ; preds = %if.end88
  %cmp119 = icmp eq i32 %mode, 1, !dbg !2692
  %cmp122 = icmp sgt i32 %xor6, -1, !dbg !2694
  %or.cond4 = and i1 %cmp119, %cmp122, !dbg !2695
  %or.cond5 = and i1 %or.cond4, %cmp105, !dbg !2695
  br i1 %or.cond5, label %if.then127, label %if.end139, !dbg !2695

if.then127:                                       ; preds = %if.else118
  br i1 %tobool63, label %if.end132, label %if.then129, !dbg !2696

if.then129:                                       ; preds = %if.then127
  %arraydecay130 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tq, i64 0, i64 0, !dbg !2698
  call void @mpz_add_ui(%struct.__mpz_struct* nonnull %arraydecay130, %struct.__mpz_struct* nonnull %arraydecay130, i64 1) #10, !dbg !2700
  br label %if.end132, !dbg !2700

if.end132:                                        ; preds = %if.then127, %if.then129
  %tobool133 = icmp eq %struct.__mpz_struct* %r, null, !dbg !2701
  br i1 %tobool133, label %if.end139, label %if.then134, !dbg !2703

if.then134:                                       ; preds = %if.end132
  call void @mpz_sub(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %d) #10, !dbg !2704
  br label %if.end139, !dbg !2704

if.end139:                                        ; preds = %if.end112, %if.end132, %if.else118, %if.then134, %if.then114
  br i1 %tobool63, label %if.end144, label %if.then141, !dbg !2705

if.then141:                                       ; preds = %if.end139
  %arraydecay142 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tq, i64 0, i64 0, !dbg !2706
  call void @mpz_swap(%struct.__mpz_struct* nonnull %arraydecay142, %struct.__mpz_struct* nonnull %q) #10, !dbg !2709
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay142) #10, !dbg !2710
  br label %if.end144, !dbg !2711

if.end144:                                        ; preds = %if.end139, %if.then141
  %tobool145 = icmp eq %struct.__mpz_struct* %r, null, !dbg !2712
  br i1 %tobool145, label %if.end148, label %if.then146, !dbg !2714

if.then146:                                       ; preds = %if.end144
  call void @mpz_swap(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %r) #10, !dbg !2715
  br label %if.end148, !dbg !2715

if.end148:                                        ; preds = %if.end144, %if.then146
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !2716
  %conv151 = zext i1 %cmp105 to i32, !dbg !2717
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #11, !dbg !2718
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #11, !dbg !2718
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %if.end34, %if.end46, %if.end53, %if.then36, %if.then55, %if.then48, %if.then11, %if.end148
  %retval.0 = phi i32 [ %conv151, %if.end148 ], [ 0, %if.then11 ], [ 0, %if.end9 ], [ 1, %if.then48 ], [ 1, %if.end46 ], [ 1, %if.then55 ], [ 1, %if.end53 ], [ 1, %if.end34 ], [ 1, %if.then36 ], !dbg !2572
  ret i32 %retval.0, !dbg !2719
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_fdiv_qr(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !2720 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !2722, metadata !DIExpression()), !dbg !2726
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2723, metadata !DIExpression()), !dbg !2726
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !2724, metadata !DIExpression()), !dbg !2726
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !2725, metadata !DIExpression()), !dbg !2726
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 0) #10, !dbg !2727
  ret void, !dbg !2728
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_tdiv_qr(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !2729 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !2731, metadata !DIExpression()), !dbg !2735
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2732, metadata !DIExpression()), !dbg !2735
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !2733, metadata !DIExpression()), !dbg !2735
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !2734, metadata !DIExpression()), !dbg !2735
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 2) #10, !dbg !2736
  ret void, !dbg !2737
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_cdiv_q(%struct.__mpz_struct* %q, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !2738 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !2740, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !2741, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !2742, metadata !DIExpression()), !dbg !2743
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* %q, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 1) #10, !dbg !2744
  ret void, !dbg !2745
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_fdiv_q(%struct.__mpz_struct* %q, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !2746 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !2748, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !2749, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !2750, metadata !DIExpression()), !dbg !2751
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* %q, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 0) #10, !dbg !2752
  ret void, !dbg !2753
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_tdiv_q(%struct.__mpz_struct* %q, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !2754 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !2756, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !2757, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !2758, metadata !DIExpression()), !dbg !2759
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* %q, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 2) #10, !dbg !2760
  ret void, !dbg !2761
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_cdiv_r(%struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !2762 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2764, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !2765, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !2766, metadata !DIExpression()), !dbg !2767
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* null, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 1) #10, !dbg !2768
  ret void, !dbg !2769
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_fdiv_r(%struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !2770 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2772, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !2773, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !2774, metadata !DIExpression()), !dbg !2775
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* null, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 0) #10, !dbg !2776
  ret void, !dbg !2777
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_tdiv_r(%struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !2778 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2780, metadata !DIExpression()), !dbg !2783
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !2781, metadata !DIExpression()), !dbg !2783
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !2782, metadata !DIExpression()), !dbg !2783
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* null, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 2) #10, !dbg !2784
  ret void, !dbg !2785
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_mod(%struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !2786 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2788, metadata !DIExpression()), !dbg !2791
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !2789, metadata !DIExpression()), !dbg !2791
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !2790, metadata !DIExpression()), !dbg !2791
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 1, !dbg !2792
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2792, !tbaa !1330
  %.lobit = lshr i32 %0, 31, !dbg !2793
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* null, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 %.lobit) #10, !dbg !2794
  ret void, !dbg !2795
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_cdiv_q_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt) local_unnamed_addr #0 !dbg !2796 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2798, metadata !DIExpression()), !dbg !2801
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2799, metadata !DIExpression()), !dbg !2801
  call void @llvm.dbg.value(metadata i64 %cnt, metadata !2800, metadata !DIExpression()), !dbg !2801
  tail call fastcc void @mpz_div_q_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt, i32 1) #10, !dbg !2802
  ret void, !dbg !2803
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mpz_div_q_2exp(%struct.__mpz_struct* %q, %struct.__mpz_struct* %u, i64 %bit_index, i32 %mode) unnamed_addr #0 !dbg !2804 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !2808, metadata !DIExpression()), !dbg !2817
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2809, metadata !DIExpression()), !dbg !2817
  call void @llvm.dbg.value(metadata i64 %bit_index, metadata !2810, metadata !DIExpression()), !dbg !2817
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2811, metadata !DIExpression()), !dbg !2817
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !2818
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2818, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !2819
  call void @llvm.dbg.value(metadata i64 %conv, metadata !2812, metadata !DIExpression()), !dbg !2817
  %cmp = icmp eq i32 %0, 0, !dbg !2820
  br i1 %cmp, label %if.then, label %if.end, !dbg !2822

if.then:                                          ; preds = %entry
  %_mp_size2 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %q, i64 0, i32 1, !dbg !2823
  store i32 0, i32* %_mp_size2, align 4, !dbg !2825, !tbaa !1330
  br label %cleanup.cont, !dbg !2826

if.end:                                           ; preds = %entry
  %div = lshr i64 %bit_index, 6, !dbg !2827
  call void @llvm.dbg.value(metadata i64 %div, metadata !2814, metadata !DIExpression()), !dbg !2817
  %cmp3 = icmp slt i64 %conv, 0, !dbg !2828
  %sub = sub nsw i64 0, %conv, !dbg !2828
  %cond = select i1 %cmp3, i64 %sub, i64 %conv, !dbg !2828
  %sub5 = sub nsw i64 %cond, %div, !dbg !2829
  call void @llvm.dbg.value(metadata i64 %sub5, metadata !2813, metadata !DIExpression()), !dbg !2817
  %rem = and i64 %bit_index, 63, !dbg !2830
  call void @llvm.dbg.value(metadata i64 %rem, metadata !2810, metadata !DIExpression()), !dbg !2817
  %cmp6 = icmp sgt i32 %0, 0, !dbg !2831
  %cond8 = zext i1 %cmp6 to i32, !dbg !2833
  %cmp9 = icmp eq i32 %cond8, %mode, !dbg !2834
  br i1 %cmp9, label %if.then11, label %if.end18, !dbg !2835

if.then11:                                        ; preds = %if.end
  %cmp12 = icmp slt i64 %sub5, 1, !dbg !2836
  br i1 %cmp12, label %lor.end, label %lor.lhs.false, !dbg !2837

lor.lhs.false:                                    ; preds = %if.then11
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !2838
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !2838, !tbaa !1334
  %call = tail call fastcc i64 @mpn_normalized_size(i64* %1, i64 %div) #10, !dbg !2838
  %cmp14 = icmp eq i64 %call, 0, !dbg !2838
  br i1 %cmp14, label %lor.rhs, label %lor.end, !dbg !2839

lor.rhs:                                          ; preds = %lor.lhs.false
  %2 = load i64*, i64** %_mp_d, align 8, !dbg !2840, !tbaa !1334
  %arrayidx = getelementptr inbounds i64, i64* %2, i64 %div, !dbg !2841
  %3 = load i64, i64* %arrayidx, align 8, !dbg !2841, !tbaa !168
  %notmask = shl nsw i64 -1, %rem, !dbg !2842
  %sub17 = xor i64 %notmask, -1, !dbg !2842
  %and = and i64 %3, %sub17, !dbg !2843
  %tobool = icmp ne i64 %and, 0, !dbg !2839
  %phitmp = zext i1 %tobool to i32, !dbg !2839
  br label %lor.end, !dbg !2839

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.then11
  %4 = phi i32 [ 1, %lor.lhs.false ], [ 1, %if.then11 ], [ %phitmp, %lor.rhs ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !2816, metadata !DIExpression()), !dbg !2817
  br label %if.end18, !dbg !2844

if.end18:                                         ; preds = %if.end, %lor.end
  %adjust.0 = phi i32 [ %4, %lor.end ], [ 0, %if.end ], !dbg !2845
  call void @llvm.dbg.value(metadata i32 %adjust.0, metadata !2816, metadata !DIExpression()), !dbg !2817
  %cmp19 = icmp slt i64 %sub5, 1, !dbg !2846
  br i1 %cmp19, label %if.end48, label %if.else22, !dbg !2848

if.else22:                                        ; preds = %if.end18
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %q, i64 0, i32 0, !dbg !2849
  %5 = load i32, i32* %_mp_alloc, align 8, !dbg !2849, !tbaa !1326
  %conv23 = sext i32 %5 to i64, !dbg !2849
  %cmp24 = icmp sgt i64 %sub5, %conv23, !dbg !2849
  br i1 %cmp24, label %cond.true26, label %cond.false28, !dbg !2849

cond.true26:                                      ; preds = %if.else22
  %call27 = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %q, i64 %sub5) #10, !dbg !2849
  br label %cond.end30, !dbg !2849

cond.false28:                                     ; preds = %if.else22
  %_mp_d29 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %q, i64 0, i32 2, !dbg !2849
  %6 = bitcast i64** %_mp_d29 to i8**, !dbg !2849
  %7 = load i8*, i8** %6, align 8, !dbg !2849, !tbaa !1334
  br label %cond.end30, !dbg !2849

cond.end30:                                       ; preds = %cond.false28, %cond.true26
  %cond31 = phi i8* [ %call27, %cond.true26 ], [ %7, %cond.false28 ], !dbg !2849
  %8 = bitcast i8* %cond31 to i64*, !dbg !2849
  call void @llvm.dbg.value(metadata i64* %8, metadata !2815, metadata !DIExpression()), !dbg !2817
  %cmp32 = icmp eq i64 %rem, 0, !dbg !2851
  %_mp_d35 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !2853
  %9 = load i64*, i64** %_mp_d35, align 8, !dbg !2853, !tbaa !1334
  %add.ptr = getelementptr inbounds i64, i64* %9, i64 %div, !dbg !2853
  br i1 %cmp32, label %if.else44, label %if.then34, !dbg !2854

if.then34:                                        ; preds = %cond.end30
  %conv36 = trunc i64 %rem to i32, !dbg !2855
  %call37 = tail call i64 @mpn_rshift(i64* %8, i64* %add.ptr, i64 %sub5, i32 %conv36) #10, !dbg !2857
  %sub38 = add nsw i64 %sub5, -1, !dbg !2858
  %arrayidx39 = getelementptr inbounds i64, i64* %8, i64 %sub38, !dbg !2859
  %10 = load i64, i64* %arrayidx39, align 8, !dbg !2859, !tbaa !168
  %cmp40 = icmp eq i64 %10, 0, !dbg !2860
  %conv42 = zext i1 %cmp40 to i64, !dbg !2859
  %sub43 = sub nsw i64 %sub5, %conv42, !dbg !2861
  call void @llvm.dbg.value(metadata i64 %sub43, metadata !2813, metadata !DIExpression()), !dbg !2817
  br label %if.end48, !dbg !2862

if.else44:                                        ; preds = %cond.end30
  tail call void @mpn_copyi(i64* %8, i64* %add.ptr, i64 %sub5) #10, !dbg !2863
  br label %if.end48

if.end48:                                         ; preds = %if.then34, %if.else44, %if.end18
  %qn.1 = phi i64 [ 0, %if.end18 ], [ %sub43, %if.then34 ], [ %sub5, %if.else44 ], !dbg !2865
  call void @llvm.dbg.value(metadata i64 %qn.1, metadata !2813, metadata !DIExpression()), !dbg !2817
  %conv49 = trunc i64 %qn.1 to i32, !dbg !2866
  %_mp_size50 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %q, i64 0, i32 1, !dbg !2867
  store i32 %conv49, i32* %_mp_size50, align 4, !dbg !2868, !tbaa !1330
  %tobool51 = icmp eq i32 %adjust.0, 0, !dbg !2869
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !2871

if.then52:                                        ; preds = %if.end48
  tail call void @mpz_add_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %q, i64 1) #10, !dbg !2872
  br label %if.end53, !dbg !2872

if.end53:                                         ; preds = %if.end48, %if.then52
  %cmp54 = icmp slt i32 %0, 0, !dbg !2873
  br i1 %cmp54, label %if.then56, label %cleanup.cont, !dbg !2875

if.then56:                                        ; preds = %if.end53
  tail call void @mpz_neg(%struct.__mpz_struct* %q, %struct.__mpz_struct* %q) #10, !dbg !2876
  br label %cleanup.cont, !dbg !2876

cleanup.cont:                                     ; preds = %if.then, %if.then56, %if.end53
  ret void, !dbg !2877
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_fdiv_q_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt) local_unnamed_addr #0 !dbg !2878 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2880, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2881, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata i64 %cnt, metadata !2882, metadata !DIExpression()), !dbg !2883
  tail call fastcc void @mpz_div_q_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt, i32 0) #10, !dbg !2884
  ret void, !dbg !2885
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_tdiv_q_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt) local_unnamed_addr #0 !dbg !2886 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2888, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2889, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata i64 %cnt, metadata !2890, metadata !DIExpression()), !dbg !2891
  tail call fastcc void @mpz_div_q_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt, i32 2) #10, !dbg !2892
  ret void, !dbg !2893
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_cdiv_r_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt) local_unnamed_addr #0 !dbg !2894 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2896, metadata !DIExpression()), !dbg !2899
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2897, metadata !DIExpression()), !dbg !2899
  call void @llvm.dbg.value(metadata i64 %cnt, metadata !2898, metadata !DIExpression()), !dbg !2899
  tail call fastcc void @mpz_div_r_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt, i32 1) #10, !dbg !2900
  ret void, !dbg !2901
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mpz_div_r_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %bit_index, i32 %mode) unnamed_addr #0 !dbg !2902 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !2904, metadata !DIExpression()), !dbg !2927
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !2905, metadata !DIExpression()), !dbg !2927
  call void @llvm.dbg.value(metadata i64 %bit_index, metadata !2906, metadata !DIExpression()), !dbg !2927
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2907, metadata !DIExpression()), !dbg !2927
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !2928
  %0 = load i32, i32* %_mp_size, align 4, !dbg !2928, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !2929
  call void @llvm.dbg.value(metadata i64 %conv, metadata !2908, metadata !DIExpression()), !dbg !2927
  %cmp = icmp eq i32 %0, 0, !dbg !2930
  %cmp2 = icmp eq i64 %bit_index, 0, !dbg !2932
  %or.cond = or i1 %cmp, %cmp2, !dbg !2933
  br i1 %or.cond, label %if.then, label %if.end, !dbg !2933

if.then:                                          ; preds = %entry
  %_mp_size4 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !2934
  store i32 0, i32* %_mp_size4, align 4, !dbg !2936, !tbaa !1330
  br label %cleanup.cont, !dbg !2937

if.end:                                           ; preds = %entry
  %sub = add i64 %bit_index, 63, !dbg !2938
  %div = lshr i64 %sub, 6, !dbg !2939
  call void @llvm.dbg.value(metadata i64 %div, metadata !2910, metadata !DIExpression()), !dbg !2927
  %cmp5 = icmp eq i64 %div, 0, !dbg !2940
  br i1 %cmp5, label %if.else, label %if.end8, !dbg !2943

if.else:                                          ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2373, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.mpz_div_r_2exp, i64 0, i64 0)) #8, !dbg !2940
  unreachable, !dbg !2940

if.end8:                                          ; preds = %if.end
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !2944
  %1 = load i32, i32* %_mp_alloc, align 8, !dbg !2944, !tbaa !1326
  %conv9 = sext i32 %1 to i64, !dbg !2944
  %cmp10 = icmp sgt i64 %div, %conv9, !dbg !2944
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !2944

cond.true:                                        ; preds = %if.end8
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %div) #10, !dbg !2944
  br label %cond.end, !dbg !2944

cond.false:                                       ; preds = %if.end8
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !2944
  %2 = bitcast i64** %_mp_d to i8**, !dbg !2944
  %3 = load i8*, i8** %2, align 8, !dbg !2944, !tbaa !1334
  br label %cond.end, !dbg !2944

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %3, %cond.false ], !dbg !2944
  %4 = bitcast i8* %cond to i64*, !dbg !2944
  call void @llvm.dbg.value(metadata i64* %4, metadata !2911, metadata !DIExpression()), !dbg !2927
  %cmp12 = icmp slt i64 %conv, 0, !dbg !2945
  %sub16 = sub nsw i64 0, %conv, !dbg !2945
  %cond18 = select i1 %cmp12, i64 %sub16, i64 %conv, !dbg !2945
  call void @llvm.dbg.value(metadata i64 %cond18, metadata !2909, metadata !DIExpression()), !dbg !2927
  %mul = and i64 %sub, -64, !dbg !2946
  %sub19 = sub i64 %mul, %bit_index, !dbg !2947
  %shr = lshr i64 -1, %sub19, !dbg !2948
  call void @llvm.dbg.value(metadata i64 %shr, metadata !2912, metadata !DIExpression()), !dbg !2927
  %cmp20 = icmp sgt i64 %div, %cond18, !dbg !2949
  br i1 %cmp20, label %if.then22, label %if.else61, !dbg !2950

if.then22:                                        ; preds = %cond.end
  %cmp23 = icmp sgt i32 %0, 0, !dbg !2951
  %cond25 = zext i1 %cmp23 to i32, !dbg !2952
  %cmp26 = icmp eq i32 %cond25, %mode, !dbg !2953
  br i1 %cmp26, label %for.cond.preheader, label %if.else54, !dbg !2954

for.cond.preheader:                               ; preds = %if.then22
  %_mp_d31 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !2955
  br label %for.cond, !dbg !2956

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %i.0 = phi i64 [ %inc, %for.body ], [ 0, %for.cond.preheader ], !dbg !2957
  %cy.0 = phi i64 [ %conv35, %for.body ], [ 1, %for.cond.preheader ], !dbg !2957
  call void @llvm.dbg.value(metadata i64 %cy.0, metadata !2918, metadata !DIExpression()), !dbg !2958
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !2913, metadata !DIExpression()), !dbg !2958
  %cmp29 = icmp slt i64 %i.0, %cond18, !dbg !2959
  br i1 %cmp29, label %for.body, label %for.end, !dbg !2956

for.body:                                         ; preds = %for.cond
  %5 = load i64*, i64** %_mp_d31, align 8, !dbg !2960, !tbaa !1334
  %arrayidx = getelementptr inbounds i64, i64* %5, i64 %i.0, !dbg !2961
  %6 = load i64, i64* %arrayidx, align 8, !dbg !2961, !tbaa !168
  %neg = xor i64 %6, -1, !dbg !2962
  %add32 = add i64 %cy.0, %neg, !dbg !2963
  call void @llvm.dbg.value(metadata i64 %add32, metadata !2919, metadata !DIExpression()), !dbg !2955
  %cmp33 = icmp ult i64 %add32, %cy.0, !dbg !2964
  %conv35 = zext i1 %cmp33 to i64, !dbg !2965
  call void @llvm.dbg.value(metadata i64 %conv35, metadata !2918, metadata !DIExpression()), !dbg !2958
  %arrayidx36 = getelementptr inbounds i64, i64* %4, i64 %i.0, !dbg !2966
  store i64 %add32, i64* %arrayidx36, align 8, !dbg !2967, !tbaa !168
  %inc = add nuw nsw i64 %i.0, 1, !dbg !2968
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2913, metadata !DIExpression()), !dbg !2958
  br label %for.cond, !dbg !2969, !llvm.loop !2970

for.end:                                          ; preds = %for.cond
  %i.0.lcssa = phi i64 [ %i.0, %for.cond ], !dbg !2957
  %cy.0.lcssa = phi i64 [ %cy.0, %for.cond ], !dbg !2957
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2913, metadata !DIExpression()), !dbg !2958
  call void @llvm.dbg.value(metadata i64 %cy.0.lcssa, metadata !2918, metadata !DIExpression()), !dbg !2958
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2913, metadata !DIExpression()), !dbg !2958
  call void @llvm.dbg.value(metadata i64 %cy.0.lcssa, metadata !2918, metadata !DIExpression()), !dbg !2958
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !2913, metadata !DIExpression()), !dbg !2958
  call void @llvm.dbg.value(metadata i64 %cy.0.lcssa, metadata !2918, metadata !DIExpression()), !dbg !2958
  %cmp37 = icmp eq i64 %cy.0.lcssa, 0, !dbg !2972
  br i1 %cmp37, label %for.cond42.preheader, label %if.else40, !dbg !2975

for.cond42.preheader:                             ; preds = %for.end
  %sub43 = add nsw i64 %div, -1, !dbg !2976
  br label %for.cond42, !dbg !2979

if.else40:                                        ; preds = %for.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2396, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.mpz_div_r_2exp, i64 0, i64 0)) #8, !dbg !2972
  unreachable, !dbg !2972

for.cond42:                                       ; preds = %for.cond42.preheader, %for.body46
  %i.1 = phi i64 [ %inc49, %for.body46 ], [ %i.0.lcssa, %for.cond42.preheader ], !dbg !2958
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !2913, metadata !DIExpression()), !dbg !2958
  %cmp44 = icmp slt i64 %i.1, %sub43, !dbg !2980
  br i1 %cmp44, label %for.body46, label %for.end50, !dbg !2979

for.body46:                                       ; preds = %for.cond42
  %arrayidx47 = getelementptr inbounds i64, i64* %4, i64 %i.1, !dbg !2981
  store i64 -1, i64* %arrayidx47, align 8, !dbg !2982, !tbaa !168
  %inc49 = add nuw nsw i64 %i.1, 1, !dbg !2983
  call void @llvm.dbg.value(metadata i64 %inc49, metadata !2913, metadata !DIExpression()), !dbg !2958
  br label %for.cond42, !dbg !2984, !llvm.loop !2985

for.end50:                                        ; preds = %for.cond42
  %arrayidx52 = getelementptr inbounds i64, i64* %4, i64 %sub43, !dbg !2987
  store i64 %shr, i64* %arrayidx52, align 8, !dbg !2988, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %sub16, metadata !2908, metadata !DIExpression()), !dbg !2927
  br label %if.end109, !dbg !2989

if.else54:                                        ; preds = %if.then22
  %cmp55 = icmp eq %struct.__mpz_struct* %r, %u, !dbg !2990
  br i1 %cmp55, label %if.end109, label %if.then57, !dbg !2993

if.then57:                                        ; preds = %if.else54
  %_mp_d58 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !2994
  %7 = load i64*, i64** %_mp_d58, align 8, !dbg !2994, !tbaa !1334
  tail call void @mpn_copyi(i64* %4, i64* %7, i64 %cond18) #10, !dbg !2995
  br label %if.end109, !dbg !2995

if.else61:                                        ; preds = %cond.end
  %cmp62 = icmp eq %struct.__mpz_struct* %r, %u, !dbg !2996
  br i1 %cmp62, label %if.else61.if.end67_crit_edge, label %if.then64, !dbg !2998

if.else61.if.end67_crit_edge:                     ; preds = %if.else61
  %.pre = add nsw i64 %div, -1, !dbg !2999
  br label %if.end67, !dbg !2998

if.then64:                                        ; preds = %if.else61
  %_mp_d65 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !3000
  %8 = load i64*, i64** %_mp_d65, align 8, !dbg !3000, !tbaa !1334
  %sub66 = add nsw i64 %div, -1, !dbg !3001
  tail call void @mpn_copyi(i64* %4, i64* %8, i64 %sub66) #10, !dbg !3002
  br label %if.end67, !dbg !3002

if.end67:                                         ; preds = %if.else61.if.end67_crit_edge, %if.then64
  %sub69.pre-phi = phi i64 [ %.pre, %if.else61.if.end67_crit_edge ], [ %sub66, %if.then64 ], !dbg !2999
  %_mp_d68 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !3003
  %9 = load i64*, i64** %_mp_d68, align 8, !dbg !3003, !tbaa !1334
  %arrayidx70 = getelementptr inbounds i64, i64* %9, i64 %sub69.pre-phi, !dbg !3004
  %10 = load i64, i64* %arrayidx70, align 8, !dbg !3004, !tbaa !168
  %and = and i64 %10, %shr, !dbg !3005
  %arrayidx72 = getelementptr inbounds i64, i64* %4, i64 %sub69.pre-phi, !dbg !3006
  store i64 %and, i64* %arrayidx72, align 8, !dbg !3007, !tbaa !168
  %cmp73 = icmp sgt i32 %0, 0, !dbg !3008
  %cond75 = zext i1 %cmp73 to i32, !dbg !3009
  %cmp76 = icmp eq i32 %cond75, %mode, !dbg !3010
  br i1 %cmp76, label %for.cond80.preheader, label %if.end109, !dbg !3011

for.cond80.preheader:                             ; preds = %if.end67
  br label %for.cond80, !dbg !3012

for.cond80:                                       ; preds = %for.cond80.preheader, %for.inc87
  %i79.0 = phi i64 [ %inc88, %for.inc87 ], [ 0, %for.cond80.preheader ], !dbg !3014
  call void @llvm.dbg.value(metadata i64 %i79.0, metadata !2923, metadata !DIExpression()), !dbg !3015
  %cmp81 = icmp ult i64 %i79.0, %div, !dbg !3016
  %exitcond = icmp eq i64 %i79.0, %div, !dbg !3016
  br i1 %exitcond, label %for.end89, label %land.rhs, !dbg !3018

land.rhs:                                         ; preds = %for.cond80
  %arrayidx83 = getelementptr inbounds i64, i64* %4, i64 %i79.0, !dbg !3019
  %11 = load i64, i64* %arrayidx83, align 8, !dbg !3019, !tbaa !168
  %cmp84 = icmp eq i64 %11, 0, !dbg !3020
  br i1 %cmp84, label %for.inc87, label %for.end89, !dbg !3012

for.inc87:                                        ; preds = %land.rhs
  %inc88 = add nuw nsw i64 %i79.0, 1, !dbg !3021
  call void @llvm.dbg.value(metadata i64 %inc88, metadata !2923, metadata !DIExpression()), !dbg !3015
  br label %for.cond80, !dbg !3022, !llvm.loop !3023

for.end89:                                        ; preds = %for.cond80, %land.rhs
  %i79.0.lcssa = phi i64 [ %i79.0, %for.cond80 ], [ %i79.0, %land.rhs ], !dbg !3014
  %cmp81.lcssa = phi i1 [ %cmp81, %for.cond80 ], [ %cmp81, %land.rhs ], !dbg !3016
  call void @llvm.dbg.value(metadata i64 %i79.0.lcssa, metadata !2923, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.value(metadata i64 %i79.0.lcssa, metadata !2923, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.value(metadata i64 %i79.0.lcssa, metadata !2923, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.value(metadata i64 %i79.0.lcssa, metadata !2923, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.value(metadata i64 %i79.0.lcssa, metadata !2923, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.value(metadata i64 %i79.0.lcssa, metadata !2923, metadata !DIExpression()), !dbg !3015
  br i1 %cmp81.lcssa, label %if.then92, label %if.end109, !dbg !3025

if.then92:                                        ; preds = %for.end89
  %arrayidx93 = getelementptr inbounds i64, i64* %4, i64 %i79.0.lcssa, !dbg !3026
  %12 = load i64, i64* %arrayidx93, align 8, !dbg !3026, !tbaa !168
  %add95 = sub i64 0, %12, !dbg !3029
  store i64 %add95, i64* %arrayidx93, align 8, !dbg !3030, !tbaa !168
  br label %while.cond, !dbg !3031

while.cond:                                       ; preds = %while.body, %if.then92
  %i79.1 = phi i64 [ %i79.0.lcssa, %if.then92 ], [ %inc97, %while.body ], !dbg !3015
  call void @llvm.dbg.value(metadata i64 %i79.1, metadata !2923, metadata !DIExpression()), !dbg !3015
  %inc97 = add nuw nsw i64 %i79.1, 1, !dbg !3032
  call void @llvm.dbg.value(metadata i64 %inc97, metadata !2923, metadata !DIExpression()), !dbg !3015
  %cmp98 = icmp ult i64 %inc97, %div, !dbg !3033
  br i1 %cmp98, label %while.body, label %while.end, !dbg !3031

while.body:                                       ; preds = %while.cond
  %arrayidx100 = getelementptr inbounds i64, i64* %4, i64 %inc97, !dbg !3034
  %13 = load i64, i64* %arrayidx100, align 8, !dbg !3034, !tbaa !168
  %neg101 = xor i64 %13, -1, !dbg !3035
  store i64 %neg101, i64* %arrayidx100, align 8, !dbg !3036, !tbaa !168
  br label %while.cond, !dbg !3031, !llvm.loop !3037

while.end:                                        ; preds = %while.cond
  %14 = load i64, i64* %arrayidx72, align 8, !dbg !3039, !tbaa !168
  %and105 = and i64 %14, %shr, !dbg !3039
  store i64 %and105, i64* %arrayidx72, align 8, !dbg !3039, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %sub16, metadata !2908, metadata !DIExpression()), !dbg !2927
  br label %if.end109, !dbg !3040

if.end109:                                        ; preds = %if.else54, %if.end67, %while.end, %for.end89, %for.end50, %if.then57
  %rn.1 = phi i64 [ %div, %for.end50 ], [ %cond18, %if.then57 ], [ %cond18, %if.else54 ], [ %div, %for.end89 ], [ %div, %while.end ], [ %div, %if.end67 ], !dbg !3041
  %us.3 = phi i64 [ %sub16, %for.end50 ], [ %conv, %if.then57 ], [ %conv, %if.else54 ], [ %conv, %for.end89 ], [ %sub16, %while.end ], [ %conv, %if.end67 ], !dbg !3042
  call void @llvm.dbg.value(metadata i64 %us.3, metadata !2908, metadata !DIExpression()), !dbg !2927
  call void @llvm.dbg.value(metadata i64 %rn.1, metadata !2910, metadata !DIExpression()), !dbg !2927
  %call110 = tail call fastcc i64 @mpn_normalized_size(i64* %4, i64 %rn.1) #10, !dbg !3043
  call void @llvm.dbg.value(metadata i64 %call110, metadata !2910, metadata !DIExpression()), !dbg !2927
  %cmp111 = icmp slt i64 %us.3, 0, !dbg !3044
  %sub114 = sub nsw i64 0, %call110, !dbg !3045
  %cond117 = select i1 %cmp111, i64 %sub114, i64 %call110, !dbg !3045
  %conv118 = trunc i64 %cond117 to i32, !dbg !3045
  %_mp_size119 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !3046
  store i32 %conv118, i32* %_mp_size119, align 4, !dbg !3047, !tbaa !1330
  br label %cleanup.cont, !dbg !3048

cleanup.cont:                                     ; preds = %if.then, %if.end109
  ret void, !dbg !3048
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_fdiv_r_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt) local_unnamed_addr #0 !dbg !3049 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3051, metadata !DIExpression()), !dbg !3054
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !3052, metadata !DIExpression()), !dbg !3054
  call void @llvm.dbg.value(metadata i64 %cnt, metadata !3053, metadata !DIExpression()), !dbg !3054
  tail call fastcc void @mpz_div_r_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt, i32 0) #10, !dbg !3055
  ret void, !dbg !3056
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_tdiv_r_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt) local_unnamed_addr #0 !dbg !3057 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3059, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !3060, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.value(metadata i64 %cnt, metadata !3061, metadata !DIExpression()), !dbg !3062
  tail call fastcc void @mpz_div_r_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %cnt, i32 2) #10, !dbg !3063
  ret void, !dbg !3064
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_divexact(%struct.__mpz_struct* %q, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !3065 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !3067, metadata !DIExpression()), !dbg !3072
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3068, metadata !DIExpression()), !dbg !3072
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !3069, metadata !DIExpression()), !dbg !3072
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* %q, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 2) #10, !dbg !3073
  %cmp = icmp eq i32 %call, 0, !dbg !3074
  br i1 %cmp, label %do.end, label %if.else, !dbg !3077

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2484, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__.mpz_divexact, i64 0, i64 0)) #8, !dbg !3074
  unreachable, !dbg !3074

do.end:                                           ; preds = %entry
  ret void, !dbg !3078
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_divisible_p(%struct.__mpz_struct* %n, %struct.__mpz_struct* %d) local_unnamed_addr #0 !dbg !3079 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3081, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !3082, metadata !DIExpression()), !dbg !3083
  %call = tail call fastcc i32 @mpz_div_qr(%struct.__mpz_struct* null, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, %struct.__mpz_struct* %d, i32 2) #10, !dbg !3084
  %cmp = icmp eq i32 %call, 0, !dbg !3085
  %conv = zext i1 %cmp to i32, !dbg !3085
  ret i32 %conv, !dbg !3086
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_congruent_p(%struct.__mpz_struct* %a, %struct.__mpz_struct* %b, %struct.__mpz_struct* %m) local_unnamed_addr #0 !dbg !3087 {
entry:
  %t = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %a, metadata !3091, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %b, metadata !3092, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %m, metadata !3093, metadata !DIExpression()), !dbg !3096
  %0 = bitcast [1 x %struct.__mpz_struct]* %t to i8*, !dbg !3097
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3097
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %t, metadata !3094, metadata !DIExpression()), !dbg !3098
  %call = tail call i32 @mpz_sgn(%struct.__mpz_struct* %m) #10, !dbg !3099
  %cmp = icmp eq i32 %call, 0, !dbg !3101
  br i1 %cmp, label %if.then, label %if.end, !dbg !3102

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @mpz_cmp(%struct.__mpz_struct* %a, %struct.__mpz_struct* %b) #10, !dbg !3103
  %cmp2 = icmp eq i32 %call1, 0, !dbg !3104
  %conv = zext i1 %cmp2 to i32, !dbg !3104
  br label %cleanup, !dbg !3105

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t, i64 0, i64 0, !dbg !3106
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3107
  call void @mpz_sub(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %a, %struct.__mpz_struct* %b) #10, !dbg !3108
  %call5 = call i32 @mpz_divisible_p(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %m) #10, !dbg !3109
  call void @llvm.dbg.value(metadata i32 %call5, metadata !3095, metadata !DIExpression()), !dbg !3096
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3110
  br label %cleanup, !dbg !3111

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %call5, %if.end ], !dbg !3096
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3112
  ret i32 %retval.0, !dbg !3112
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_cdiv_qr_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3113 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !3117, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3118, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3119, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.value(metadata i64 %d, metadata !3120, metadata !DIExpression()), !dbg !3121
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d, i32 1) #10, !dbg !3122
  ret i64 %call, !dbg !3123
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d, i32 %mode) unnamed_addr #0 !dbg !3124 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !3128, metadata !DIExpression()), !dbg !3143
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3129, metadata !DIExpression()), !dbg !3143
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3130, metadata !DIExpression()), !dbg !3143
  call void @llvm.dbg.value(metadata i64 %d, metadata !3131, metadata !DIExpression()), !dbg !3143
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3132, metadata !DIExpression()), !dbg !3143
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %n, i64 0, i32 1, !dbg !3144
  %0 = load i32, i32* %_mp_size, align 4, !dbg !3144, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !3145
  call void @llvm.dbg.value(metadata i64 %conv, metadata !3133, metadata !DIExpression()), !dbg !3143
  %cmp = icmp eq i32 %0, 0, !dbg !3146
  br i1 %cmp, label %if.then, label %if.end8, !dbg !3148

if.then:                                          ; preds = %entry
  %tobool = icmp eq %struct.__mpz_struct* %q, null, !dbg !3149
  br i1 %tobool, label %if.end, label %if.then2, !dbg !3152

if.then2:                                         ; preds = %if.then
  %_mp_size3 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %q, i64 0, i32 1, !dbg !3153
  store i32 0, i32* %_mp_size3, align 4, !dbg !3154, !tbaa !1330
  br label %if.end, !dbg !3155

if.end:                                           ; preds = %if.then, %if.then2
  %tobool4 = icmp eq %struct.__mpz_struct* %r, null, !dbg !3156
  br i1 %tobool4, label %cleanup, label %if.then5, !dbg !3158

if.then5:                                         ; preds = %if.end
  %_mp_size6 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !3159
  store i32 0, i32* %_mp_size6, align 4, !dbg !3160, !tbaa !1330
  br label %cleanup, !dbg !3161

if.end8:                                          ; preds = %entry
  %cmp9 = icmp slt i64 %conv, 0, !dbg !3162
  %sub = sub nsw i64 0, %conv, !dbg !3162
  %cond = select i1 %cmp9, i64 %sub, i64 %conv, !dbg !3162
  call void @llvm.dbg.value(metadata i64 %cond, metadata !3134, metadata !DIExpression()), !dbg !3143
  %tobool11 = icmp eq %struct.__mpz_struct* %q, null, !dbg !3163
  br i1 %tobool11, label %if.end20, label %if.then12, !dbg !3165

if.then12:                                        ; preds = %if.end8
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %q, i64 0, i32 0, !dbg !3166
  %1 = load i32, i32* %_mp_alloc, align 8, !dbg !3166, !tbaa !1326
  %conv13 = sext i32 %1 to i64, !dbg !3166
  %cmp14 = icmp sgt i64 %cond, %conv13, !dbg !3166
  br i1 %cmp14, label %cond.true16, label %cond.false17, !dbg !3166

cond.true16:                                      ; preds = %if.then12
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* nonnull %q, i64 %cond) #10, !dbg !3166
  br label %cond.end18, !dbg !3166

cond.false17:                                     ; preds = %if.then12
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %q, i64 0, i32 2, !dbg !3166
  %2 = bitcast i64** %_mp_d to i8**, !dbg !3166
  %3 = load i8*, i8** %2, align 8, !dbg !3166, !tbaa !1334
  br label %cond.end18, !dbg !3166

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond19 = phi i8* [ %call, %cond.true16 ], [ %3, %cond.false17 ], !dbg !3166
  %4 = bitcast i8* %cond19 to i64*, !dbg !3166
  call void @llvm.dbg.value(metadata i64* %4, metadata !3135, metadata !DIExpression()), !dbg !3143
  br label %if.end20, !dbg !3167

if.end20:                                         ; preds = %if.end8, %cond.end18
  %qp.0 = phi i64* [ %4, %cond.end18 ], [ null, %if.end8 ], !dbg !3168
  call void @llvm.dbg.value(metadata i64* %qp.0, metadata !3135, metadata !DIExpression()), !dbg !3143
  %_mp_d21 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %n, i64 0, i32 2, !dbg !3169
  %5 = load i64*, i64** %_mp_d21, align 8, !dbg !3169, !tbaa !1334
  %call22 = tail call fastcc i64 @mpn_div_qr_1(i64* %qp.0, i64* %5, i64 %cond, i64 %d) #10, !dbg !3170
  call void @llvm.dbg.value(metadata i64 %call22, metadata !3136, metadata !DIExpression()), !dbg !3143
  %cmp23 = icmp ult i64 %call22, %d, !dbg !3171
  br i1 %cmp23, label %if.end27, label %if.else26, !dbg !3174

if.else26:                                        ; preds = %if.end20
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2537, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__.mpz_div_qr_ui, i64 0, i64 0)) #8, !dbg !3171
  unreachable, !dbg !3171

if.end27:                                         ; preds = %if.end20
  %cmp28 = icmp ne i64 %call22, 0, !dbg !3175
  %conv30 = zext i1 %cmp28 to i64, !dbg !3176
  call void @llvm.dbg.value(metadata i64 %conv30, metadata !3137, metadata !DIExpression()), !dbg !3143
  %cmp31 = icmp slt i32 %0, 0, !dbg !3177
  %sub34 = sext i1 %cmp28 to i64, !dbg !3178
  %cond37 = select i1 %cmp31, i64 %sub34, i64 %conv30, !dbg !3178
  call void @llvm.dbg.value(metadata i64 %cond37, metadata !3137, metadata !DIExpression()), !dbg !3143
  %cmp38 = icmp eq i64 %call22, 0, !dbg !3179
  br i1 %cmp38, label %if.end62, label %land.lhs.true, !dbg !3180

land.lhs.true:                                    ; preds = %if.end27
  %cmp40 = icmp eq i32 %mode, 0, !dbg !3181
  %or.cond = and i1 %cmp40, %cmp31, !dbg !3182
  br i1 %or.cond, label %if.then50, label %lor.lhs.false, !dbg !3182

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp45 = icmp eq i32 %mode, 1, !dbg !3183
  %cmp48 = icmp sgt i32 %0, -1, !dbg !3184
  %or.cond1 = and i1 %cmp45, %cmp48, !dbg !3185
  br i1 %or.cond1, label %if.then50, label %if.end62, !dbg !3185

if.then50:                                        ; preds = %lor.lhs.false, %land.lhs.true
  br i1 %tobool11, label %if.end59, label %do.body, !dbg !3186

do.body:                                          ; preds = %if.then50
  %call53 = tail call i64 @mpn_add_1(i64* %qp.0, i64* %qp.0, i64 %cond, i64 1) #10, !dbg !3187
  call void @llvm.dbg.value(metadata i64 %call53, metadata !3138, metadata !DIExpression()), !dbg !3188
  %cmp54 = icmp eq i64 %call53, 0, !dbg !3189
  br i1 %cmp54, label %if.end59, label %if.else57, !dbg !3192

if.else57:                                        ; preds = %do.body
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2546, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__.mpz_div_qr_ui, i64 0, i64 0)) #8, !dbg !3189
  unreachable, !dbg !3189

if.end59:                                         ; preds = %if.then50, %do.body
  %sub60 = sub i64 %d, %call22, !dbg !3193
  call void @llvm.dbg.value(metadata i64 %sub60, metadata !3136, metadata !DIExpression()), !dbg !3143
  %sub61 = sub nsw i64 0, %cond37, !dbg !3194
  call void @llvm.dbg.value(metadata i64 %sub61, metadata !3137, metadata !DIExpression()), !dbg !3143
  br label %if.end62, !dbg !3195

if.end62:                                         ; preds = %if.end27, %if.end59, %lor.lhs.false
  %rl.0 = phi i64 [ %sub60, %if.end59 ], [ %call22, %lor.lhs.false ], [ 0, %if.end27 ], !dbg !3143
  %rs.0 = phi i64 [ %sub61, %if.end59 ], [ %cond37, %lor.lhs.false ], [ %cond37, %if.end27 ], !dbg !3143
  call void @llvm.dbg.value(metadata i64 %rs.0, metadata !3137, metadata !DIExpression()), !dbg !3143
  call void @llvm.dbg.value(metadata i64 %rl.0, metadata !3136, metadata !DIExpression()), !dbg !3143
  %tobool63 = icmp eq %struct.__mpz_struct* %r, null, !dbg !3196
  br i1 %tobool63, label %if.end68, label %if.then64, !dbg !3198

if.then64:                                        ; preds = %if.end62
  %_mp_d65 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !3199
  %6 = load i64*, i64** %_mp_d65, align 8, !dbg !3199, !tbaa !1334
  store i64 %rl.0, i64* %6, align 8, !dbg !3201, !tbaa !168
  %conv66 = trunc i64 %rs.0 to i32, !dbg !3202
  %_mp_size67 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !3203
  store i32 %conv66, i32* %_mp_size67, align 4, !dbg !3204, !tbaa !1330
  br label %if.end68, !dbg !3205

if.end68:                                         ; preds = %if.end62, %if.then64
  br i1 %tobool11, label %cleanup, label %if.then70, !dbg !3206

if.then70:                                        ; preds = %if.end68
  %sub71 = add nsw i64 %cond, -1, !dbg !3207
  %arrayidx72 = getelementptr inbounds i64, i64* %qp.0, i64 %sub71, !dbg !3210
  %7 = load i64, i64* %arrayidx72, align 8, !dbg !3210, !tbaa !168
  %cmp73 = icmp eq i64 %7, 0, !dbg !3211
  %conv75 = zext i1 %cmp73 to i64, !dbg !3212
  %sub76 = sub nsw i64 %cond, %conv75, !dbg !3213
  call void @llvm.dbg.value(metadata i64 %sub76, metadata !3134, metadata !DIExpression()), !dbg !3143
  %cmp77 = icmp eq i64 %sub76, 0, !dbg !3214
  br i1 %cmp77, label %if.end86, label %lor.lhs.false79, !dbg !3214

lor.lhs.false79:                                  ; preds = %if.then70
  %sub80 = add nsw i64 %sub76, -1, !dbg !3214
  %arrayidx81 = getelementptr inbounds i64, i64* %qp.0, i64 %sub80, !dbg !3214
  %8 = load i64, i64* %arrayidx81, align 8, !dbg !3214, !tbaa !168
  %cmp82 = icmp eq i64 %8, 0, !dbg !3214
  br i1 %cmp82, label %if.else85, label %if.end86, !dbg !3217

if.else85:                                        ; preds = %lor.lhs.false79
  tail call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2559, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__.mpz_div_qr_ui, i64 0, i64 0)) #8, !dbg !3214
  unreachable, !dbg !3214

if.end86:                                         ; preds = %lor.lhs.false79, %if.then70
  %sub90 = sub nsw i64 0, %sub76, !dbg !3218
  %cond93 = select i1 %cmp31, i64 %sub90, i64 %sub76, !dbg !3218
  %conv94 = trunc i64 %cond93 to i32, !dbg !3218
  %_mp_size95 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %q, i64 0, i32 1, !dbg !3219
  store i32 %conv94, i32* %_mp_size95, align 4, !dbg !3220, !tbaa !1330
  br label %cleanup, !dbg !3221

cleanup:                                          ; preds = %if.end, %if.end68, %if.end86, %if.then5
  %retval.0 = phi i64 [ 0, %if.then5 ], [ 0, %if.end ], [ %rl.0, %if.end86 ], [ %rl.0, %if.end68 ], !dbg !3143
  ret i64 %retval.0, !dbg !3222
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_fdiv_qr_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3223 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !3225, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3226, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3227, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata i64 %d, metadata !3228, metadata !DIExpression()), !dbg !3229
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d, i32 0) #10, !dbg !3230
  ret i64 %call, !dbg !3231
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_tdiv_qr_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3232 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !3234, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3235, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3236, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.value(metadata i64 %d, metadata !3237, metadata !DIExpression()), !dbg !3238
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d, i32 2) #10, !dbg !3239
  ret i64 %call, !dbg !3240
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_cdiv_q_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3241 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !3245, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3246, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata i64 %d, metadata !3247, metadata !DIExpression()), !dbg !3248
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, i64 %d, i32 1) #10, !dbg !3249
  ret i64 %call, !dbg !3250
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_fdiv_q_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3251 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !3253, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3254, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i64 %d, metadata !3255, metadata !DIExpression()), !dbg !3256
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, i64 %d, i32 0) #10, !dbg !3257
  ret i64 %call, !dbg !3258
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_tdiv_q_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3259 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !3261, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3262, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i64 %d, metadata !3263, metadata !DIExpression()), !dbg !3264
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, i64 %d, i32 2) #10, !dbg !3265
  ret i64 %call, !dbg !3266
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_cdiv_r_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3267 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3269, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3270, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i64 %d, metadata !3271, metadata !DIExpression()), !dbg !3272
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* null, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d, i32 1) #10, !dbg !3273
  ret i64 %call, !dbg !3274
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_fdiv_r_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3275 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3277, metadata !DIExpression()), !dbg !3280
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3278, metadata !DIExpression()), !dbg !3280
  call void @llvm.dbg.value(metadata i64 %d, metadata !3279, metadata !DIExpression()), !dbg !3280
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* null, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d, i32 0) #10, !dbg !3281
  ret i64 %call, !dbg !3282
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_tdiv_r_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3283 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3285, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3286, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata i64 %d, metadata !3287, metadata !DIExpression()), !dbg !3288
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* null, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d, i32 2) #10, !dbg !3289
  ret i64 %call, !dbg !3290
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_cdiv_ui(%struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3291 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3295, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i64 %d, metadata !3296, metadata !DIExpression()), !dbg !3297
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* null, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, i64 %d, i32 1) #10, !dbg !3298
  ret i64 %call, !dbg !3299
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_fdiv_ui(%struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3300 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3302, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.value(metadata i64 %d, metadata !3303, metadata !DIExpression()), !dbg !3304
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* null, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, i64 %d, i32 0) #10, !dbg !3305
  ret i64 %call, !dbg !3306
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_tdiv_ui(%struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3307 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3309, metadata !DIExpression()), !dbg !3311
  call void @llvm.dbg.value(metadata i64 %d, metadata !3310, metadata !DIExpression()), !dbg !3311
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* null, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, i64 %d, i32 2) #10, !dbg !3312
  ret i64 %call, !dbg !3313
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_mod_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3314 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3316, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3317, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.value(metadata i64 %d, metadata !3318, metadata !DIExpression()), !dbg !3319
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* null, %struct.__mpz_struct* %r, %struct.__mpz_struct* %n, i64 %d, i32 0) #10, !dbg !3320
  ret i64 %call, !dbg !3321
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_divexact_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3322 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !3324, metadata !DIExpression()), !dbg !3329
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3325, metadata !DIExpression()), !dbg !3329
  call void @llvm.dbg.value(metadata i64 %d, metadata !3326, metadata !DIExpression()), !dbg !3329
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* %q, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, i64 %d, i32 2) #10, !dbg !3330
  call void @llvm.dbg.value(metadata i64 %call, metadata !3327, metadata !DIExpression()), !dbg !3331
  %cmp = icmp eq i64 %call, 0, !dbg !3332
  br i1 %cmp, label %do.end, label %if.else, !dbg !3335

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2646, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__.mpz_divexact_ui, i64 0, i64 0)) #8, !dbg !3332
  unreachable, !dbg !3332

do.end:                                           ; preds = %entry
  ret void, !dbg !3336
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_divisible_ui_p(%struct.__mpz_struct* %n, i64 %d) local_unnamed_addr #0 !dbg !3337 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !3339, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.value(metadata i64 %d, metadata !3340, metadata !DIExpression()), !dbg !3341
  %call = tail call fastcc i64 @mpz_div_qr_ui(%struct.__mpz_struct* null, %struct.__mpz_struct* null, %struct.__mpz_struct* %n, i64 %d, i32 2) #10, !dbg !3342
  %cmp = icmp eq i64 %call, 0, !dbg !3343
  %conv = zext i1 %cmp to i32, !dbg !3343
  ret i32 %conv, !dbg !3344
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_gcd_ui(%struct.__mpz_struct* %g, %struct.__mpz_struct* %u, i64 %v) local_unnamed_addr #0 !dbg !3345 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %g, metadata !3347, metadata !DIExpression()), !dbg !3351
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !3348, metadata !DIExpression()), !dbg !3351
  call void @llvm.dbg.value(metadata i64 %v, metadata !3349, metadata !DIExpression()), !dbg !3351
  %cmp = icmp eq i64 %v, 0, !dbg !3352
  br i1 %cmp, label %if.then, label %if.else, !dbg !3354

if.then:                                          ; preds = %entry
  %tobool = icmp eq %struct.__mpz_struct* %g, null, !dbg !3355
  br i1 %tobool, label %if.end13, label %if.then1, !dbg !3358

if.then1:                                         ; preds = %if.then
  tail call void @mpz_abs(%struct.__mpz_struct* nonnull %g, %struct.__mpz_struct* %u) #10, !dbg !3359
  br label %if.end13, !dbg !3359

if.else:                                          ; preds = %entry
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !3360
  %0 = load i32, i32* %_mp_size, align 4, !dbg !3360, !tbaa !1330
  call void @llvm.dbg.value(metadata i32 undef, metadata !3350, metadata !DIExpression()), !dbg !3351
  %cmp5 = icmp eq i32 %0, 0, !dbg !3362
  br i1 %cmp5, label %if.end9, label %if.then7, !dbg !3364

if.then7:                                         ; preds = %if.else
  %cmp2 = icmp slt i32 %0, 0, !dbg !3360
  %sub = sub nsw i32 0, %0, !dbg !3360
  %cond = select i1 %cmp2, i32 %sub, i32 %0, !dbg !3360
  call void @llvm.dbg.value(metadata i32 %cond, metadata !3350, metadata !DIExpression()), !dbg !3351
  %conv = zext i32 %cond to i64, !dbg !3360
  call void @llvm.dbg.value(metadata i64 %conv, metadata !3350, metadata !DIExpression()), !dbg !3351
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !3365
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !3365, !tbaa !1334
  %call = tail call fastcc i64 @mpn_div_qr_1(i64* null, i64* %1, i64 %conv, i64 %v) #10, !dbg !3366
  %call8 = tail call fastcc i64 @mpn_gcd_11(i64 %call, i64 %v) #10, !dbg !3367
  call void @llvm.dbg.value(metadata i64 %call8, metadata !3349, metadata !DIExpression()), !dbg !3351
  br label %if.end9, !dbg !3368

if.end9:                                          ; preds = %if.else, %if.then7
  %v.addr.0 = phi i64 [ %call8, %if.then7 ], [ %v, %if.else ]
  call void @llvm.dbg.value(metadata i64 %v.addr.0, metadata !3349, metadata !DIExpression()), !dbg !3351
  %tobool10 = icmp eq %struct.__mpz_struct* %g, null, !dbg !3369
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !3371

if.then11:                                        ; preds = %if.end9
  tail call void @mpz_set_ui(%struct.__mpz_struct* nonnull %g, i64 %v.addr.0) #10, !dbg !3372
  br label %if.end13, !dbg !3372

if.end13:                                         ; preds = %if.then, %if.end9, %if.then11, %if.then1
  %v.addr.1 = phi i64 [ 0, %if.then1 ], [ 0, %if.then ], [ %v.addr.0, %if.then11 ], [ %v.addr.0, %if.end9 ]
  call void @llvm.dbg.value(metadata i64 %v.addr.1, metadata !3349, metadata !DIExpression()), !dbg !3351
  ret i64 %v.addr.1, !dbg !3373
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpn_gcd_11(i64 %u, i64 %v) unnamed_addr #0 !dbg !3374 {
entry:
  call void @llvm.dbg.value(metadata i64 %u, metadata !3376, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i64 %v, metadata !3377, metadata !DIExpression()), !dbg !3388
  %or = or i64 %u, %v, !dbg !3389
  %cmp = icmp eq i64 %or, 0, !dbg !3389
  br i1 %cmp, label %if.else, label %if.end, !dbg !3392

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2662, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__.mpn_gcd_11, i64 0, i64 0)) #8, !dbg !3389
  unreachable, !dbg !3389

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i64 %u, 0, !dbg !3393
  br i1 %cmp1, label %cleanup, label %if.else3, !dbg !3395

if.else3:                                         ; preds = %if.end
  %cmp4 = icmp eq i64 %v, 0, !dbg !3396
  br i1 %cmp4, label %cleanup, label %do.body, !dbg !3398

do.body:                                          ; preds = %if.else3
  call void @llvm.dbg.value(metadata i64 %or, metadata !3379, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.value(metadata i32 0, metadata !3381, metadata !DIExpression()), !dbg !3399
  %sub = sub i64 0, %or, !dbg !3400
  %and = and i64 %or, %sub, !dbg !3400
  call void @llvm.dbg.value(metadata i64 %and, metadata !3382, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i32 0, metadata !3384, metadata !DIExpression()), !dbg !3401
  br label %for.cond, !dbg !3402

for.cond:                                         ; preds = %for.body, %do.body
  %__clz_x.0 = phi i64 [ %and, %do.body ], [ %shl, %for.body ], !dbg !3401
  %__clz_c.0 = phi i32 [ 0, %do.body ], [ %add, %for.body ], !dbg !3404
  call void @llvm.dbg.value(metadata i32 %__clz_c.0, metadata !3384, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i64 %__clz_x.0, metadata !3382, metadata !DIExpression()), !dbg !3401
  %cmp11 = icmp ult i64 %__clz_x.0, 72057594037927936, !dbg !3405
  br i1 %cmp11, label %for.body, label %for.cond12.preheader, !dbg !3402

for.cond12.preheader:                             ; preds = %for.cond
  %__clz_x.0.lcssa = phi i64 [ %__clz_x.0, %for.cond ], !dbg !3401
  %__clz_c.0.lcssa = phi i32 [ %__clz_c.0, %for.cond ], !dbg !3404
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !3382, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !3384, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !3382, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !3384, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !3382, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !3384, metadata !DIExpression()), !dbg !3401
  br label %for.cond12, !dbg !3407

for.body:                                         ; preds = %for.cond
  %shl = shl i64 %__clz_x.0, 8, !dbg !3405
  call void @llvm.dbg.value(metadata i64 %shl, metadata !3382, metadata !DIExpression()), !dbg !3401
  %add = add i32 %__clz_c.0, 8, !dbg !3405
  call void @llvm.dbg.value(metadata i32 %add, metadata !3384, metadata !DIExpression()), !dbg !3401
  br label %for.cond, !dbg !3405, !llvm.loop !3409

for.cond12:                                       ; preds = %for.cond12.preheader, %for.body15
  %__clz_x.1 = phi i64 [ %shl16, %for.body15 ], [ %__clz_x.0.lcssa, %for.cond12.preheader ], !dbg !3401
  %__clz_c.1 = phi i32 [ %inc, %for.body15 ], [ %__clz_c.0.lcssa, %for.cond12.preheader ], !dbg !3401
  call void @llvm.dbg.value(metadata i32 %__clz_c.1, metadata !3384, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i64 %__clz_x.1, metadata !3382, metadata !DIExpression()), !dbg !3401
  %cmp14 = icmp sgt i64 %__clz_x.1, -1, !dbg !3410
  br i1 %cmp14, label %for.body15, label %do.end, !dbg !3407

for.body15:                                       ; preds = %for.cond12
  %shl16 = shl i64 %__clz_x.1, 1, !dbg !3410
  call void @llvm.dbg.value(metadata i64 %shl16, metadata !3382, metadata !DIExpression()), !dbg !3401
  %inc = add i32 %__clz_c.1, 1, !dbg !3410
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3384, metadata !DIExpression()), !dbg !3401
  br label %for.cond12, !dbg !3410, !llvm.loop !3412

do.end:                                           ; preds = %for.cond12
  %__clz_c.1.lcssa = phi i32 [ %__clz_c.1, %for.cond12 ], !dbg !3401
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !3384, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !3384, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !3384, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !3381, metadata !DIExpression()), !dbg !3399
  %sub19 = sub i32 63, %__clz_c.1.lcssa, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %sub19, metadata !3378, metadata !DIExpression()), !dbg !3388
  %sh_prom = zext i32 %sub19 to i64, !dbg !3414
  %shr = lshr i64 %u, %sh_prom, !dbg !3414
  call void @llvm.dbg.value(metadata i64 %shr, metadata !3376, metadata !DIExpression()), !dbg !3388
  %shr24 = lshr i64 %v, %sh_prom, !dbg !3415
  call void @llvm.dbg.value(metadata i64 %shr24, metadata !3377, metadata !DIExpression()), !dbg !3388
  %and25 = and i64 %shr, 1, !dbg !3416
  %cmp26 = icmp eq i64 %and25, 0, !dbg !3417
  %v.addr.0 = select i1 %cmp26, i64 %shr, i64 %shr24, !dbg !3418
  call void @llvm.dbg.value(metadata i64 %u.addr.0, metadata !3376, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i64 %v.addr.0, metadata !3377, metadata !DIExpression()), !dbg !3388
  br label %while.cond, !dbg !3419

while.cond:                                       ; preds = %while.body, %do.end
  %v.addr.1 = phi i64 [ %v.addr.0, %do.end ], [ %shr36, %while.body ], !dbg !3388
  call void @llvm.dbg.value(metadata i64 %v.addr.1, metadata !3377, metadata !DIExpression()), !dbg !3388
  %and33 = and i64 %v.addr.1, 1, !dbg !3420
  %cmp34 = icmp eq i64 %and33, 0, !dbg !3421
  br i1 %cmp34, label %while.body, label %while.cond37.preheader, !dbg !3419

while.cond37.preheader:                           ; preds = %while.cond
  %v.addr.1.lcssa = phi i64 [ %v.addr.1, %while.cond ], !dbg !3388
  call void @llvm.dbg.value(metadata i64 %v.addr.1.lcssa, metadata !3377, metadata !DIExpression()), !dbg !3388
  %u.addr.0 = select i1 %cmp26, i64 %shr24, i64 %shr, !dbg !3418
  call void @llvm.dbg.value(metadata i64 %v.addr.1.lcssa, metadata !3377, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i64 %v.addr.1.lcssa, metadata !3377, metadata !DIExpression()), !dbg !3388
  br label %while.cond37, !dbg !3422

while.body:                                       ; preds = %while.cond
  %shr36 = lshr i64 %v.addr.1, 1, !dbg !3423
  call void @llvm.dbg.value(metadata i64 %shr36, metadata !3377, metadata !DIExpression()), !dbg !3388
  br label %while.cond, !dbg !3419, !llvm.loop !3424

while.cond37:                                     ; preds = %while.cond37.preheader, %if.end61
  %v.addr.2 = phi i64 [ %v.addr.4, %if.end61 ], [ %v.addr.1.lcssa, %while.cond37.preheader ], !dbg !3426
  %u.addr.1 = phi i64 [ %u.addr.3, %if.end61 ], [ %u.addr.0, %while.cond37.preheader ], !dbg !3388
  call void @llvm.dbg.value(metadata i64 %u.addr.1, metadata !3376, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i64 %v.addr.2, metadata !3377, metadata !DIExpression()), !dbg !3388
  %cmp38 = icmp eq i64 %u.addr.1, %v.addr.2, !dbg !3427
  br i1 %cmp38, label %while.end62, label %while.body40, !dbg !3422

while.body40:                                     ; preds = %while.cond37
  %cmp41 = icmp ugt i64 %u.addr.1, %v.addr.2, !dbg !3428
  br i1 %cmp41, label %if.then43, label %if.else52, !dbg !3431

if.then43:                                        ; preds = %while.body40
  %sub44 = sub i64 %u.addr.1, %v.addr.2, !dbg !3432
  call void @llvm.dbg.value(metadata i64 %sub44, metadata !3376, metadata !DIExpression()), !dbg !3388
  br label %do.body45, !dbg !3434

do.body45:                                        ; preds = %do.body45, %if.then43
  %u.addr.2 = phi i64 [ %sub44, %if.then43 ], [ %shr46, %do.body45 ], !dbg !3435
  call void @llvm.dbg.value(metadata i64 %u.addr.2, metadata !3376, metadata !DIExpression()), !dbg !3388
  %shr46 = lshr i64 %u.addr.2, 1, !dbg !3436
  call void @llvm.dbg.value(metadata i64 %shr46, metadata !3376, metadata !DIExpression()), !dbg !3388
  %and48 = and i64 %u.addr.2, 2, !dbg !3437
  %cmp49 = icmp eq i64 %and48, 0, !dbg !3438
  br i1 %cmp49, label %do.body45, label %if.end61.loopexit, !dbg !3439, !llvm.loop !3440

if.else52:                                        ; preds = %while.body40
  %sub53 = sub i64 %v.addr.2, %u.addr.1, !dbg !3442
  call void @llvm.dbg.value(metadata i64 %sub53, metadata !3377, metadata !DIExpression()), !dbg !3388
  br label %do.body54, !dbg !3444

do.body54:                                        ; preds = %do.body54, %if.else52
  %v.addr.3 = phi i64 [ %sub53, %if.else52 ], [ %shr55, %do.body54 ], !dbg !3445
  call void @llvm.dbg.value(metadata i64 %v.addr.3, metadata !3377, metadata !DIExpression()), !dbg !3388
  %shr55 = lshr i64 %v.addr.3, 1, !dbg !3446
  call void @llvm.dbg.value(metadata i64 %shr55, metadata !3377, metadata !DIExpression()), !dbg !3388
  %and57 = and i64 %v.addr.3, 2, !dbg !3447
  %cmp58 = icmp eq i64 %and57, 0, !dbg !3448
  br i1 %cmp58, label %do.body54, label %if.end61.loopexit1, !dbg !3449, !llvm.loop !3450

if.end61.loopexit:                                ; preds = %do.body45
  %shr46.lcssa = phi i64 [ %shr46, %do.body45 ], !dbg !3436
  br label %if.end61, !dbg !3422

if.end61.loopexit1:                               ; preds = %do.body54
  %shr55.lcssa = phi i64 [ %shr55, %do.body54 ], !dbg !3446
  br label %if.end61, !dbg !3422

if.end61:                                         ; preds = %if.end61.loopexit1, %if.end61.loopexit
  %v.addr.4 = phi i64 [ %v.addr.2, %if.end61.loopexit ], [ %shr55.lcssa, %if.end61.loopexit1 ], !dbg !3388
  %u.addr.3 = phi i64 [ %shr46.lcssa, %if.end61.loopexit ], [ %u.addr.1, %if.end61.loopexit1 ], !dbg !3388
  call void @llvm.dbg.value(metadata i64 %u.addr.3, metadata !3376, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i64 %v.addr.4, metadata !3377, metadata !DIExpression()), !dbg !3388
  br label %while.cond37, !dbg !3422, !llvm.loop !3452

while.end62:                                      ; preds = %while.cond37
  %v.addr.2.lcssa = phi i64 [ %v.addr.2, %while.cond37 ], !dbg !3426
  call void @llvm.dbg.value(metadata i64 %v.addr.2.lcssa, metadata !3377, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i64 %v.addr.2.lcssa, metadata !3377, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i64 %u.addr.1, metadata !3376, metadata !DIExpression()), !dbg !3388
  %shl64 = shl i64 %v.addr.2.lcssa, %sh_prom, !dbg !3454
  br label %cleanup, !dbg !3455

cleanup:                                          ; preds = %if.else3, %if.end, %while.end62
  %retval.0 = phi i64 [ %shl64, %while.end62 ], [ %v, %if.end ], [ %u, %if.else3 ], !dbg !3388
  ret i64 %retval.0, !dbg !3456
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpn_div_qr_1(i64* %qp, i64* %np, i64 %nn, i64 %d) unnamed_addr #0 !dbg !3457 {
entry:
  %inv = alloca %struct.gmp_div_inverse, align 8
  call void @llvm.dbg.value(metadata i64* %qp, metadata !3459, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata i64* %np, metadata !3460, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata i64 %nn, metadata !3461, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata i64 %d, metadata !3462, metadata !DIExpression()), !dbg !3479
  %cmp = icmp eq i64 %d, 0, !dbg !3480
  br i1 %cmp, label %if.else, label %if.end, !dbg !3483

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_1, i64 0, i64 0)) #8, !dbg !3480
  unreachable, !dbg !3480

if.end:                                           ; preds = %entry
  %0 = tail call i64 @llvm.ctpop.i64(i64 %d), !dbg !3484, !range !3485
  %cmp1 = icmp ult i64 %0, 2, !dbg !3484
  br i1 %cmp1, label %if.then2, label %if.else27, !dbg !3486

if.then2:                                         ; preds = %if.end
  %1 = load i64, i64* %np, align 8, !dbg !3487, !tbaa !168
  %sub3 = add i64 %d, -1, !dbg !3488
  %and4 = and i64 %1, %sub3, !dbg !3489
  call void @llvm.dbg.value(metadata i64 %and4, metadata !3463, metadata !DIExpression()), !dbg !3490
  %tobool = icmp eq i64* %qp, null, !dbg !3491
  br i1 %tobool, label %return, label %if.then5, !dbg !3492

if.then5:                                         ; preds = %if.then2
  %cmp6 = icmp ult i64 %d, 2, !dbg !3493
  br i1 %cmp6, label %if.then7, label %do.body9, !dbg !3494

if.then7:                                         ; preds = %if.then5
  tail call void @mpn_copyi(i64* nonnull %qp, i64* %np, i64 %nn) #10, !dbg !3495
  br label %return, !dbg !3495

do.body9:                                         ; preds = %if.then5
  call void @llvm.dbg.value(metadata i64 %d, metadata !3471, metadata !DIExpression()), !dbg !3496
  call void @llvm.dbg.value(metadata i32 0, metadata !3473, metadata !DIExpression()), !dbg !3496
  %sub10 = sub i64 0, %d, !dbg !3497
  %and11 = and i64 %sub10, %d, !dbg !3497
  call void @llvm.dbg.value(metadata i64 %and11, metadata !3474, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i32 0, metadata !3476, metadata !DIExpression()), !dbg !3498
  br label %for.cond, !dbg !3499

for.cond:                                         ; preds = %for.body, %do.body9
  %__clz_x.0 = phi i64 [ %and11, %do.body9 ], [ %shl, %for.body ], !dbg !3498
  %__clz_c.0 = phi i32 [ 0, %do.body9 ], [ %add, %for.body ], !dbg !3501
  call void @llvm.dbg.value(metadata i32 %__clz_c.0, metadata !3476, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i64 %__clz_x.0, metadata !3474, metadata !DIExpression()), !dbg !3498
  %cmp13 = icmp ult i64 %__clz_x.0, 72057594037927936, !dbg !3502
  br i1 %cmp13, label %for.body, label %for.cond14.preheader, !dbg !3499

for.cond14.preheader:                             ; preds = %for.cond
  %__clz_x.0.lcssa = phi i64 [ %__clz_x.0, %for.cond ], !dbg !3498
  %__clz_c.0.lcssa = phi i32 [ %__clz_c.0, %for.cond ], !dbg !3501
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !3474, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !3476, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !3474, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !3476, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !3474, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !3476, metadata !DIExpression()), !dbg !3498
  br label %for.cond14, !dbg !3504

for.body:                                         ; preds = %for.cond
  %shl = shl i64 %__clz_x.0, 8, !dbg !3502
  call void @llvm.dbg.value(metadata i64 %shl, metadata !3474, metadata !DIExpression()), !dbg !3498
  %add = add i32 %__clz_c.0, 8, !dbg !3502
  call void @llvm.dbg.value(metadata i32 %add, metadata !3476, metadata !DIExpression()), !dbg !3498
  br label %for.cond, !dbg !3502, !llvm.loop !3506

for.cond14:                                       ; preds = %for.cond14.preheader, %for.body17
  %__clz_x.1 = phi i64 [ %shl18, %for.body17 ], [ %__clz_x.0.lcssa, %for.cond14.preheader ], !dbg !3498
  %__clz_c.1 = phi i32 [ %inc, %for.body17 ], [ %__clz_c.0.lcssa, %for.cond14.preheader ], !dbg !3498
  call void @llvm.dbg.value(metadata i32 %__clz_c.1, metadata !3476, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i64 %__clz_x.1, metadata !3474, metadata !DIExpression()), !dbg !3498
  %cmp16 = icmp sgt i64 %__clz_x.1, -1, !dbg !3507
  br i1 %cmp16, label %for.body17, label %do.end, !dbg !3504

for.body17:                                       ; preds = %for.cond14
  %shl18 = shl i64 %__clz_x.1, 1, !dbg !3507
  call void @llvm.dbg.value(metadata i64 %shl18, metadata !3474, metadata !DIExpression()), !dbg !3498
  %inc = add i32 %__clz_c.1, 1, !dbg !3507
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3476, metadata !DIExpression()), !dbg !3498
  br label %for.cond14, !dbg !3507, !llvm.loop !3509

do.end:                                           ; preds = %for.cond14
  %__clz_c.1.lcssa = phi i32 [ %__clz_c.1, %for.cond14 ], !dbg !3498
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !3476, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !3476, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !3476, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !3473, metadata !DIExpression()), !dbg !3496
  %sub21 = sub i32 63, %__clz_c.1.lcssa, !dbg !3510
  call void @llvm.dbg.value(metadata i32 %sub21, metadata !3466, metadata !DIExpression()), !dbg !3511
  %call = tail call i64 @mpn_rshift(i64* nonnull %qp, i64* %np, i64 %nn, i32 %sub21) #10, !dbg !3512
  br label %return

if.else27:                                        ; preds = %if.end
  %2 = bitcast %struct.gmp_div_inverse* %inv to i8*, !dbg !3513
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #11, !dbg !3513
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %inv, metadata !3477, metadata !DIExpression(DW_OP_deref)), !dbg !3514
  call fastcc void @mpn_div_qr_1_invert(%struct.gmp_div_inverse* nonnull %inv, i64 %d) #10, !dbg !3515
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %inv, metadata !3477, metadata !DIExpression(DW_OP_deref)), !dbg !3514
  %call28 = call fastcc i64 @mpn_div_qr_1_preinv(i64* %qp, i64* %np, i64 %nn, %struct.gmp_div_inverse* nonnull %inv) #10, !dbg !3516
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #11, !dbg !3517
  br label %return

return:                                           ; preds = %if.then2, %do.end, %if.then7, %if.else27
  %retval.0 = phi i64 [ %call28, %if.else27 ], [ %and4, %if.then7 ], [ %and4, %do.end ], [ %and4, %if.then2 ], !dbg !3518
  ret i64 %retval.0, !dbg !3519
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_gcd(%struct.__mpz_struct* %g, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !3520 {
entry:
  %tu = alloca [1 x %struct.__mpz_struct], align 16
  %tv = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %g, metadata !3522, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !3523, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !3524, metadata !DIExpression()), !dbg !3539
  %0 = bitcast [1 x %struct.__mpz_struct]* %tu to i8*, !dbg !3540
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3540
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %tu, metadata !3525, metadata !DIExpression()), !dbg !3541
  %1 = bitcast [1 x %struct.__mpz_struct]* %tv to i8*, !dbg !3540
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #11, !dbg !3540
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %tv, metadata !3526, metadata !DIExpression()), !dbg !3542
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !3543
  %2 = load i32, i32* %_mp_size, align 4, !dbg !3543, !tbaa !1330
  %cmp = icmp eq i32 %2, 0, !dbg !3545
  br i1 %cmp, label %if.then, label %if.end, !dbg !3546

if.then:                                          ; preds = %entry
  tail call void @mpz_abs(%struct.__mpz_struct* %g, %struct.__mpz_struct* %v) #10, !dbg !3547
  br label %cleanup58, !dbg !3549

if.end:                                           ; preds = %entry
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 1, !dbg !3550
  %3 = load i32, i32* %_mp_size1, align 4, !dbg !3550, !tbaa !1330
  %cmp2 = icmp eq i32 %3, 0, !dbg !3552
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3553

if.then3:                                         ; preds = %if.end
  tail call void @mpz_abs(%struct.__mpz_struct* %g, %struct.__mpz_struct* %u) #10, !dbg !3554
  br label %cleanup58, !dbg !3556

if.end4:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tu, i64 0, i64 0, !dbg !3557
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3558
  %arraydecay5 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tv, i64 0, i64 0, !dbg !3559
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay5) #10, !dbg !3560
  call void @mpz_abs(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %u) #10, !dbg !3561
  %call = call fastcc i64 @mpz_make_odd(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3562
  call void @llvm.dbg.value(metadata i64 %call, metadata !3527, metadata !DIExpression()), !dbg !3539
  call void @mpz_abs(%struct.__mpz_struct* nonnull %arraydecay5, %struct.__mpz_struct* %v) #10, !dbg !3563
  %call10 = call fastcc i64 @mpz_make_odd(%struct.__mpz_struct* nonnull %arraydecay5) #10, !dbg !3564
  call void @llvm.dbg.value(metadata i64 %call10, metadata !3528, metadata !DIExpression()), !dbg !3539
  %cmp11 = icmp ult i64 %call, %call10, !dbg !3565
  %call.call10 = select i1 %cmp11, i64 %call, i64 %call10, !dbg !3565
  call void @llvm.dbg.value(metadata i64 %call.call10, metadata !3529, metadata !DIExpression()), !dbg !3539
  %_mp_size13 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tu, i64 0, i64 0, i32 1, !dbg !3566
  %4 = load i32, i32* %_mp_size13, align 4, !dbg !3566, !tbaa !1330
  %_mp_size15 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tv, i64 0, i64 0, i32 1, !dbg !3568
  %5 = load i32, i32* %_mp_size15, align 4, !dbg !3568, !tbaa !1330
  %cmp16 = icmp slt i32 %4, %5, !dbg !3569
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !3570

if.then17:                                        ; preds = %if.end4
  call void @mpz_swap(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay5) #10, !dbg !3571
  br label %if.end20, !dbg !3571

if.end20:                                         ; preds = %if.then17, %if.end4
  call void @mpz_tdiv_r(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay5) #10, !dbg !3572
  %6 = load i32, i32* %_mp_size13, align 4, !dbg !3573, !tbaa !1330
  %cmp26 = icmp eq i32 %6, 0, !dbg !3574
  br i1 %cmp26, label %if.then27, label %for.cond.preheader, !dbg !3575

for.cond.preheader:                               ; preds = %if.end20
  %_mp_d = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tv, i64 0, i64 0, i32 2, !dbg !3576
  br label %for.cond, !dbg !3577

if.then27:                                        ; preds = %if.end20
  call void @mpz_swap(%struct.__mpz_struct* %g, %struct.__mpz_struct* nonnull %arraydecay5) #10, !dbg !3578
  br label %if.end55, !dbg !3580

for.cond:                                         ; preds = %for.cond.preheader, %cleanup
  %call30 = call fastcc i64 @mpz_make_odd(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3581
  %call33 = call i32 @mpz_cmp(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay5) #10, !dbg !3582
  call void @llvm.dbg.value(metadata i32 %call33, metadata !3530, metadata !DIExpression()), !dbg !3583
  %cmp34 = icmp eq i32 %call33, 0, !dbg !3584
  br i1 %cmp34, label %if.then35, label %if.end37, !dbg !3586

if.then35:                                        ; preds = %for.cond
  call void @mpz_swap(%struct.__mpz_struct* %g, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3587
  br label %cleanup, !dbg !3589

if.end37:                                         ; preds = %for.cond
  %cmp38 = icmp slt i32 %call33, 0, !dbg !3590
  br i1 %cmp38, label %if.then39, label %if.end42, !dbg !3592

if.then39:                                        ; preds = %if.end37
  call void @mpz_swap(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay5) #10, !dbg !3593
  br label %if.end42, !dbg !3593

if.end42:                                         ; preds = %if.then39, %if.end37
  %7 = load i32, i32* %_mp_size15, align 4, !dbg !3594, !tbaa !1330
  %cmp45 = icmp eq i32 %7, 1, !dbg !3595
  br i1 %cmp45, label %if.then46, label %if.end51, !dbg !3596

if.then46:                                        ; preds = %if.end42
  %8 = load i64*, i64** %_mp_d, align 8, !dbg !3597, !tbaa !1334
  %9 = load i64, i64* %8, align 8, !dbg !3598, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %9, metadata !3535, metadata !DIExpression()), !dbg !3576
  %call49 = call i64 @mpz_tdiv_ui(%struct.__mpz_struct* nonnull %arraydecay, i64 %9) #10, !dbg !3599
  call void @llvm.dbg.value(metadata i64 %call49, metadata !3538, metadata !DIExpression()), !dbg !3576
  %call50 = call fastcc i64 @mpn_gcd_11(i64 %call49, i64 %9) #10, !dbg !3600
  call void @mpz_set_ui(%struct.__mpz_struct* %g, i64 %call50) #10, !dbg !3601
  br label %cleanup

if.end51:                                         ; preds = %if.end42
  call void @mpz_sub(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay5) #10, !dbg !3602
  br label %cleanup, !dbg !3603

cleanup:                                          ; preds = %if.end51, %if.then46, %if.then35
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then35 ], [ false, %if.then46 ], [ true, %if.end51 ]
  br i1 %cleanup.dest.slot.0, label %for.cond, label %if.end55.loopexit, !llvm.loop !3604

if.end55.loopexit:                                ; preds = %cleanup
  br label %if.end55, !dbg !3606

if.end55:                                         ; preds = %if.end55.loopexit, %if.then27
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3607
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay5) #10, !dbg !3608
  call void @mpz_mul_2exp(%struct.__mpz_struct* %g, %struct.__mpz_struct* %g, i64 %call.call10) #10, !dbg !3609
  br label %cleanup58, !dbg !3610

cleanup58:                                        ; preds = %if.end55, %if.then3, %if.then
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #11, !dbg !3610
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3610
  ret void, !dbg !3610
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpz_make_odd(%struct.__mpz_struct* %r) unnamed_addr #0 !dbg !3611 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3615, metadata !DIExpression()), !dbg !3617
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !3618
  %0 = load i32, i32* %_mp_size, align 4, !dbg !3618, !tbaa !1330
  %cmp = icmp sgt i32 %0, 0, !dbg !3618
  br i1 %cmp, label %if.end, label %if.else, !dbg !3621

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2728, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.mpz_make_odd, i64 0, i64 0)) #8, !dbg !3618
  unreachable, !dbg !3618

if.end:                                           ; preds = %entry
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !3622
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !3622, !tbaa !1334
  %2 = load i64, i64* %1, align 8, !dbg !3623, !tbaa !168
  %call = tail call fastcc i64 @mpn_common_scan(i64 %2, i64 0, i64* %1, i64 0, i64 0) #10, !dbg !3624
  call void @llvm.dbg.value(metadata i64 %call, metadata !3616, metadata !DIExpression()), !dbg !3617
  tail call void @mpz_tdiv_q_2exp(%struct.__mpz_struct* %r, %struct.__mpz_struct* %r, i64 %call) #10, !dbg !3625
  ret i64 %call, !dbg !3626
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_gcdext(%struct.__mpz_struct* %g, %struct.__mpz_struct* %s, %struct.__mpz_struct* %t, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !3627 {
entry:
  %tu = alloca [1 x %struct.__mpz_struct], align 16
  %tv = alloca [1 x %struct.__mpz_struct], align 16
  %s0 = alloca [1 x %struct.__mpz_struct], align 16
  %s1 = alloca [1 x %struct.__mpz_struct], align 16
  %t0 = alloca [1 x %struct.__mpz_struct], align 16
  %t1 = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %g, metadata !3631, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %s, metadata !3632, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %t, metadata !3633, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !3634, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !3635, metadata !DIExpression()), !dbg !3668
  %0 = bitcast [1 x %struct.__mpz_struct]* %tu to i8*, !dbg !3669
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3669
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %tu, metadata !3636, metadata !DIExpression()), !dbg !3670
  %1 = bitcast [1 x %struct.__mpz_struct]* %tv to i8*, !dbg !3669
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #11, !dbg !3669
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %tv, metadata !3637, metadata !DIExpression()), !dbg !3671
  %2 = bitcast [1 x %struct.__mpz_struct]* %s0 to i8*, !dbg !3669
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #11, !dbg !3669
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %s0, metadata !3638, metadata !DIExpression()), !dbg !3672
  %3 = bitcast [1 x %struct.__mpz_struct]* %s1 to i8*, !dbg !3669
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #11, !dbg !3669
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %s1, metadata !3639, metadata !DIExpression()), !dbg !3673
  %4 = bitcast [1 x %struct.__mpz_struct]* %t0 to i8*, !dbg !3669
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11, !dbg !3669
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %t0, metadata !3640, metadata !DIExpression()), !dbg !3674
  %5 = bitcast [1 x %struct.__mpz_struct]* %t1 to i8*, !dbg !3669
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11, !dbg !3669
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %t1, metadata !3641, metadata !DIExpression()), !dbg !3675
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !3676
  %6 = load i32, i32* %_mp_size, align 4, !dbg !3676, !tbaa !1330
  %cmp = icmp eq i32 %6, 0, !dbg !3677
  br i1 %cmp, label %if.then, label %if.end5, !dbg !3678

if.then:                                          ; preds = %entry
  %call = tail call i32 @mpz_sgn(%struct.__mpz_struct* %v) #10, !dbg !3679
  %conv = sext i32 %call to i64, !dbg !3679
  call void @llvm.dbg.value(metadata i64 %conv, metadata !3646, metadata !DIExpression()), !dbg !3680
  tail call void @mpz_abs(%struct.__mpz_struct* %g, %struct.__mpz_struct* %v) #10, !dbg !3681
  %tobool = icmp eq %struct.__mpz_struct* %s, null, !dbg !3682
  br i1 %tobool, label %if.end, label %if.then1, !dbg !3684

if.then1:                                         ; preds = %if.then
  tail call void @mpz_set_ui(%struct.__mpz_struct* nonnull %s, i64 0) #10, !dbg !3685
  br label %if.end, !dbg !3685

if.end:                                           ; preds = %if.then, %if.then1
  %tobool2 = icmp eq %struct.__mpz_struct* %t, null, !dbg !3686
  br i1 %tobool2, label %cleanup200, label %if.then3, !dbg !3688

if.then3:                                         ; preds = %if.end
  tail call void @mpz_set_si(%struct.__mpz_struct* nonnull %t, i64 %conv) #10, !dbg !3689
  br label %cleanup200, !dbg !3689

if.end5:                                          ; preds = %entry
  %_mp_size6 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 1, !dbg !3690
  %7 = load i32, i32* %_mp_size6, align 4, !dbg !3690, !tbaa !1330
  %cmp7 = icmp eq i32 %7, 0, !dbg !3691
  br i1 %cmp7, label %if.then9, label %if.end19, !dbg !3692

if.then9:                                         ; preds = %if.end5
  %call11 = tail call i32 @mpz_sgn(%struct.__mpz_struct* %u) #10, !dbg !3693
  call void @llvm.dbg.value(metadata i64 undef, metadata !3649, metadata !DIExpression()), !dbg !3694
  tail call void @mpz_abs(%struct.__mpz_struct* %g, %struct.__mpz_struct* %u) #10, !dbg !3695
  %tobool13 = icmp eq %struct.__mpz_struct* %s, null, !dbg !3696
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !3698

if.then14:                                        ; preds = %if.then9
  %conv12 = sext i32 %call11 to i64, !dbg !3693
  call void @llvm.dbg.value(metadata i64 %conv12, metadata !3649, metadata !DIExpression()), !dbg !3694
  tail call void @mpz_set_si(%struct.__mpz_struct* nonnull %s, i64 %conv12) #10, !dbg !3699
  br label %if.end15, !dbg !3699

if.end15:                                         ; preds = %if.then9, %if.then14
  %tobool16 = icmp eq %struct.__mpz_struct* %t, null, !dbg !3700
  br i1 %tobool16, label %cleanup200, label %if.then17, !dbg !3702

if.then17:                                        ; preds = %if.end15
  tail call void @mpz_set_ui(%struct.__mpz_struct* nonnull %t, i64 0) #10, !dbg !3703
  br label %cleanup200, !dbg !3703

if.end19:                                         ; preds = %if.end5
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tu, i64 0, i64 0, !dbg !3704
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3705
  %arraydecay20 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tv, i64 0, i64 0, !dbg !3706
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay20) #10, !dbg !3707
  %arraydecay21 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %s0, i64 0, i64 0, !dbg !3708
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay21) #10, !dbg !3709
  %arraydecay22 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %s1, i64 0, i64 0, !dbg !3710
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay22) #10, !dbg !3711
  %arraydecay23 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t0, i64 0, i64 0, !dbg !3712
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay23) #10, !dbg !3713
  %arraydecay24 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t1, i64 0, i64 0, !dbg !3714
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay24) #10, !dbg !3715
  call void @mpz_abs(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %u) #10, !dbg !3716
  %call27 = call fastcc i64 @mpz_make_odd(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3717
  call void @llvm.dbg.value(metadata i64 %call27, metadata !3642, metadata !DIExpression()), !dbg !3668
  call void @mpz_abs(%struct.__mpz_struct* nonnull %arraydecay20, %struct.__mpz_struct* %v) #10, !dbg !3718
  %call30 = call fastcc i64 @mpz_make_odd(%struct.__mpz_struct* nonnull %arraydecay20) #10, !dbg !3719
  call void @llvm.dbg.value(metadata i64 %call30, metadata !3643, metadata !DIExpression()), !dbg !3668
  %cmp31 = icmp ult i64 %call27, %call30, !dbg !3720
  %call27.call30 = select i1 %cmp31, i64 %call27, i64 %call30, !dbg !3720
  call void @llvm.dbg.value(metadata i64 %call27.call30, metadata !3644, metadata !DIExpression()), !dbg !3668
  %sub = sub i64 %call27, %call27.call30, !dbg !3721
  call void @llvm.dbg.value(metadata i64 %sub, metadata !3642, metadata !DIExpression()), !dbg !3668
  %sub33 = sub i64 %call30, %call27.call30, !dbg !3722
  call void @llvm.dbg.value(metadata i64 %sub33, metadata !3643, metadata !DIExpression()), !dbg !3668
  %_mp_size35 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tu, i64 0, i64 0, i32 1, !dbg !3723
  %8 = load i32, i32* %_mp_size35, align 4, !dbg !3723, !tbaa !1330
  %_mp_size37 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tv, i64 0, i64 0, i32 1, !dbg !3724
  %9 = load i32, i32* %_mp_size37, align 4, !dbg !3724, !tbaa !1330
  %cmp38 = icmp slt i32 %8, %9, !dbg !3725
  br i1 %cmp38, label %if.then40, label %if.end49, !dbg !3726

if.then40:                                        ; preds = %if.end19
  call void @mpz_swap(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay20) #10, !dbg !3727
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !3634, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !3635, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %t, metadata !3632, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %s, metadata !3633, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata i64 %sub33, metadata !3642, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata i64 %sub, metadata !3643, metadata !DIExpression()), !dbg !3668
  br label %if.end49, !dbg !3728

if.end49:                                         ; preds = %if.then40, %if.end19
  %vz.0 = phi i64 [ %sub, %if.then40 ], [ %sub33, %if.end19 ], !dbg !3668
  %uz.0 = phi i64 [ %sub33, %if.then40 ], [ %sub, %if.end19 ], !dbg !3668
  %v.addr.0 = phi %struct.__mpz_struct* [ %u, %if.then40 ], [ %v, %if.end19 ]
  %u.addr.0 = phi %struct.__mpz_struct* [ %v, %if.then40 ], [ %u, %if.end19 ]
  %t.addr.0 = phi %struct.__mpz_struct* [ %s, %if.then40 ], [ %t, %if.end19 ]
  %s.addr.0 = phi %struct.__mpz_struct* [ %t, %if.then40 ], [ %s, %if.end19 ]
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %s.addr.0, metadata !3632, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %t.addr.0, metadata !3633, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u.addr.0, metadata !3634, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v.addr.0, metadata !3635, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata i64 %uz.0, metadata !3642, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata i64 %vz.0, metadata !3643, metadata !DIExpression()), !dbg !3668
  call void @mpz_setbit(%struct.__mpz_struct* nonnull %arraydecay23, i64 %uz.0) #10, !dbg !3729
  call void @mpz_tdiv_qr(%struct.__mpz_struct* nonnull %arraydecay24, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay20) #10, !dbg !3730
  call void @mpz_mul_2exp(%struct.__mpz_struct* nonnull %arraydecay24, %struct.__mpz_struct* nonnull %arraydecay24, i64 %uz.0) #10, !dbg !3731
  call void @mpz_setbit(%struct.__mpz_struct* nonnull %arraydecay22, i64 %vz.0) #10, !dbg !3732
  %add = add i64 %uz.0, %vz.0, !dbg !3733
  call void @llvm.dbg.value(metadata i64 %add, metadata !3645, metadata !DIExpression()), !dbg !3668
  %10 = load i32, i32* %_mp_size35, align 4, !dbg !3734, !tbaa !1330
  %cmp60 = icmp sgt i32 %10, 0, !dbg !3735
  br i1 %cmp60, label %if.then62, label %if.end112, !dbg !3736

if.then62:                                        ; preds = %if.end49
  %call64 = call fastcc i64 @mpz_make_odd(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3737
  call void @llvm.dbg.value(metadata i64 %call64, metadata !3661, metadata !DIExpression()), !dbg !3738
  call void @mpz_mul_2exp(%struct.__mpz_struct* nonnull %arraydecay23, %struct.__mpz_struct* nonnull %arraydecay23, i64 %call64) #10, !dbg !3739
  call void @mpz_mul_2exp(%struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay21, i64 %call64) #10, !dbg !3740
  %add69 = add i64 %add, %call64, !dbg !3741
  call void @llvm.dbg.value(metadata i64 %add69, metadata !3645, metadata !DIExpression()), !dbg !3668
  br label %for.cond, !dbg !3742

for.cond:                                         ; preds = %cleanup, %if.then62
  %power.0 = phi i64 [ %add69, %if.then62 ], [ %power.1, %cleanup ], !dbg !3741
  call void @llvm.dbg.value(metadata i64 %power.0, metadata !3645, metadata !DIExpression()), !dbg !3668
  %call72 = call i32 @mpz_cmp(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay20) #10, !dbg !3743
  call void @llvm.dbg.value(metadata i32 %call72, metadata !3664, metadata !DIExpression()), !dbg !3744
  %cmp73 = icmp eq i32 %call72, 0, !dbg !3745
  br i1 %cmp73, label %cleanup, label %if.end76, !dbg !3747

if.end76:                                         ; preds = %for.cond
  %cmp77 = icmp slt i32 %call72, 0, !dbg !3748
  br i1 %cmp77, label %if.then79, label %if.else, !dbg !3750

if.then79:                                        ; preds = %if.end76
  call void @mpz_sub(%struct.__mpz_struct* nonnull %arraydecay20, %struct.__mpz_struct* nonnull %arraydecay20, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3751
  call void @mpz_add(%struct.__mpz_struct* nonnull %arraydecay23, %struct.__mpz_struct* nonnull %arraydecay23, %struct.__mpz_struct* nonnull %arraydecay24) #10, !dbg !3753
  call void @mpz_add(%struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay22) #10, !dbg !3754
  %call90 = call fastcc i64 @mpz_make_odd(%struct.__mpz_struct* nonnull %arraydecay20) #10, !dbg !3755
  call void @llvm.dbg.value(metadata i64 %call90, metadata !3661, metadata !DIExpression()), !dbg !3738
  call void @mpz_mul_2exp(%struct.__mpz_struct* nonnull %arraydecay24, %struct.__mpz_struct* nonnull %arraydecay24, i64 %call90) #10, !dbg !3756
  call void @mpz_mul_2exp(%struct.__mpz_struct* nonnull %arraydecay22, %struct.__mpz_struct* nonnull %arraydecay22, i64 %call90) #10, !dbg !3757
  br label %if.end110, !dbg !3758

if.else:                                          ; preds = %if.end76
  call void @mpz_sub(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay20) #10, !dbg !3759
  call void @mpz_add(%struct.__mpz_struct* nonnull %arraydecay24, %struct.__mpz_struct* nonnull %arraydecay23, %struct.__mpz_struct* nonnull %arraydecay24) #10, !dbg !3761
  call void @mpz_add(%struct.__mpz_struct* nonnull %arraydecay22, %struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay22) #10, !dbg !3762
  %call105 = call fastcc i64 @mpz_make_odd(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3763
  call void @llvm.dbg.value(metadata i64 %call105, metadata !3661, metadata !DIExpression()), !dbg !3738
  call void @mpz_mul_2exp(%struct.__mpz_struct* nonnull %arraydecay23, %struct.__mpz_struct* nonnull %arraydecay23, i64 %call105) #10, !dbg !3764
  call void @mpz_mul_2exp(%struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay21, i64 %call105) #10, !dbg !3765
  br label %if.end110

if.end110:                                        ; preds = %if.else, %if.then79
  %shift.0 = phi i64 [ %call90, %if.then79 ], [ %call105, %if.else ], !dbg !3766
  call void @llvm.dbg.value(metadata i64 %shift.0, metadata !3661, metadata !DIExpression()), !dbg !3738
  %add111 = add i64 %power.0, %shift.0, !dbg !3767
  call void @llvm.dbg.value(metadata i64 %add111, metadata !3645, metadata !DIExpression()), !dbg !3668
  br label %cleanup, !dbg !3768

cleanup:                                          ; preds = %for.cond, %if.end110
  %power.1 = phi i64 [ %add111, %if.end110 ], [ %power.0, %for.cond ], !dbg !3738
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end110 ], [ false, %for.cond ]
  call void @llvm.dbg.value(metadata i64 %power.1, metadata !3645, metadata !DIExpression()), !dbg !3668
  br i1 %cleanup.dest.slot.0, label %for.cond, label %if.end112.loopexit, !llvm.loop !3769

if.end112.loopexit:                               ; preds = %cleanup
  %power.1.lcssa = phi i64 [ %power.1, %cleanup ], !dbg !3738
  call void @llvm.dbg.value(metadata i64 %power.1.lcssa, metadata !3645, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata i64 %power.1.lcssa, metadata !3645, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata i64 %power.1.lcssa, metadata !3645, metadata !DIExpression()), !dbg !3668
  br label %if.end112, !dbg !3772

if.end112:                                        ; preds = %if.end112.loopexit, %if.end49
  %power.2 = phi i64 [ %add, %if.end49 ], [ %power.1.lcssa, %if.end112.loopexit ], !dbg !3668
  call void @llvm.dbg.value(metadata i64 %power.2, metadata !3645, metadata !DIExpression()), !dbg !3668
  call void @mpz_mul_2exp(%struct.__mpz_struct* nonnull %arraydecay20, %struct.__mpz_struct* nonnull %arraydecay20, i64 %call27.call30) #10, !dbg !3773
  call void @mpz_neg(%struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay21) #10, !dbg !3774
  call void @mpz_divexact(%struct.__mpz_struct* nonnull %arraydecay22, %struct.__mpz_struct* %v.addr.0, %struct.__mpz_struct* nonnull %arraydecay20) #10, !dbg !3775
  call void @mpz_abs(%struct.__mpz_struct* nonnull %arraydecay22, %struct.__mpz_struct* nonnull %arraydecay22) #10, !dbg !3776
  call void @mpz_divexact(%struct.__mpz_struct* nonnull %arraydecay24, %struct.__mpz_struct* %u.addr.0, %struct.__mpz_struct* nonnull %arraydecay20) #10, !dbg !3777
  call void @mpz_abs(%struct.__mpz_struct* nonnull %arraydecay24, %struct.__mpz_struct* nonnull %arraydecay24) #10, !dbg !3778
  %_mp_size128 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %s0, i64 0, i64 0, i32 1, !dbg !3779
  %_mp_d = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %s0, i64 0, i64 0, i32 2, !dbg !3779
  %_mp_size135 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t0, i64 0, i64 0, i32 1, !dbg !3779
  %_mp_d139 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t0, i64 0, i64 0, i32 2, !dbg !3779
  br label %while.cond, !dbg !3782

while.cond:                                       ; preds = %if.end151, %if.end112
  %power.3 = phi i64 [ %power.2, %if.end112 ], [ %dec, %if.end151 ], !dbg !3668
  call void @llvm.dbg.value(metadata i64 %power.3, metadata !3645, metadata !DIExpression()), !dbg !3668
  %dec = add i64 %power.3, -1, !dbg !3783
  call void @llvm.dbg.value(metadata i64 %dec, metadata !3645, metadata !DIExpression()), !dbg !3668
  %cmp125 = icmp eq i64 %power.3, 0, !dbg !3784
  br i1 %cmp125, label %while.end, label %while.body, !dbg !3782

while.body:                                       ; preds = %while.cond
  %11 = load i32, i32* %_mp_size128, align 4, !dbg !3785, !tbaa !1330
  %cmp129 = icmp ne i32 %11, 0, !dbg !3785
  %conv130 = zext i1 %cmp129 to i32, !dbg !3785
  %12 = load i64*, i64** %_mp_d, align 8, !dbg !3785, !tbaa !1334
  %13 = load i64, i64* %12, align 8, !dbg !3785, !tbaa !168
  %conv132 = trunc i64 %13 to i32, !dbg !3785
  %and = and i32 %conv130, %conv132, !dbg !3785
  %tobool133 = icmp eq i32 %and, 0, !dbg !3785
  br i1 %tobool133, label %lor.lhs.false, label %if.then144, !dbg !3786

lor.lhs.false:                                    ; preds = %while.body
  %14 = load i32, i32* %_mp_size135, align 4, !dbg !3787, !tbaa !1330
  %cmp136 = icmp ne i32 %14, 0, !dbg !3787
  %conv137 = zext i1 %cmp136 to i32, !dbg !3787
  %15 = load i64*, i64** %_mp_d139, align 8, !dbg !3787, !tbaa !1334
  %16 = load i64, i64* %15, align 8, !dbg !3787, !tbaa !168
  %conv141 = trunc i64 %16 to i32, !dbg !3787
  %and142 = and i32 %conv137, %conv141, !dbg !3787
  %tobool143 = icmp eq i32 %and142, 0, !dbg !3787
  br i1 %tobool143, label %if.end151, label %if.then144, !dbg !3788

if.then144:                                       ; preds = %lor.lhs.false, %while.body
  call void @mpz_sub(%struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay22) #10, !dbg !3789
  call void @mpz_add(%struct.__mpz_struct* nonnull %arraydecay23, %struct.__mpz_struct* nonnull %arraydecay23, %struct.__mpz_struct* nonnull %arraydecay24) #10, !dbg !3791
  br label %if.end151, !dbg !3792

if.end151:                                        ; preds = %lor.lhs.false, %if.then144
  call void @mpz_divexact_ui(%struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay21, i64 2) #10, !dbg !3793
  call void @mpz_divexact_ui(%struct.__mpz_struct* nonnull %arraydecay23, %struct.__mpz_struct* nonnull %arraydecay23, i64 2) #10, !dbg !3794
  br label %while.cond, !dbg !3782, !llvm.loop !3795

while.end:                                        ; preds = %while.cond
  call void @mpz_add(%struct.__mpz_struct* nonnull %arraydecay22, %struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay22) #10, !dbg !3797
  %call161 = call i32 @mpz_cmpabs(%struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay22) #10, !dbg !3798
  %cmp162 = icmp sgt i32 %call161, 0, !dbg !3800
  br i1 %cmp162, label %if.then164, label %if.end170, !dbg !3801

if.then164:                                       ; preds = %while.end
  call void @mpz_swap(%struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay22) #10, !dbg !3802
  call void @mpz_sub(%struct.__mpz_struct* nonnull %arraydecay23, %struct.__mpz_struct* nonnull %arraydecay23, %struct.__mpz_struct* nonnull %arraydecay24) #10, !dbg !3804
  br label %if.end170, !dbg !3805

if.end170:                                        ; preds = %if.then164, %while.end
  %_mp_size171 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u.addr.0, i64 0, i32 1, !dbg !3806
  %17 = load i32, i32* %_mp_size171, align 4, !dbg !3806, !tbaa !1330
  %cmp172 = icmp slt i32 %17, 0, !dbg !3808
  br i1 %cmp172, label %if.then174, label %if.end177, !dbg !3809

if.then174:                                       ; preds = %if.end170
  call void @mpz_neg(%struct.__mpz_struct* nonnull %arraydecay21, %struct.__mpz_struct* nonnull %arraydecay21) #10, !dbg !3810
  br label %if.end177, !dbg !3810

if.end177:                                        ; preds = %if.then174, %if.end170
  %_mp_size178 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v.addr.0, i64 0, i32 1, !dbg !3811
  %18 = load i32, i32* %_mp_size178, align 4, !dbg !3811, !tbaa !1330
  %cmp179 = icmp slt i32 %18, 0, !dbg !3813
  br i1 %cmp179, label %if.then181, label %if.end184, !dbg !3814

if.then181:                                       ; preds = %if.end177
  call void @mpz_neg(%struct.__mpz_struct* nonnull %arraydecay23, %struct.__mpz_struct* nonnull %arraydecay23) #10, !dbg !3815
  br label %if.end184, !dbg !3815

if.end184:                                        ; preds = %if.then181, %if.end177
  call void @mpz_swap(%struct.__mpz_struct* %g, %struct.__mpz_struct* nonnull %arraydecay20) #10, !dbg !3816
  %tobool186 = icmp eq %struct.__mpz_struct* %s.addr.0, null, !dbg !3817
  br i1 %tobool186, label %if.end189, label %if.then187, !dbg !3819

if.then187:                                       ; preds = %if.end184
  call void @mpz_swap(%struct.__mpz_struct* nonnull %s.addr.0, %struct.__mpz_struct* nonnull %arraydecay21) #10, !dbg !3820
  br label %if.end189, !dbg !3820

if.end189:                                        ; preds = %if.end184, %if.then187
  %tobool190 = icmp eq %struct.__mpz_struct* %t.addr.0, null, !dbg !3821
  br i1 %tobool190, label %if.end193, label %if.then191, !dbg !3823

if.then191:                                       ; preds = %if.end189
  call void @mpz_swap(%struct.__mpz_struct* nonnull %t.addr.0, %struct.__mpz_struct* nonnull %arraydecay23) #10, !dbg !3824
  br label %if.end193, !dbg !3824

if.end193:                                        ; preds = %if.end189, %if.then191
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3825
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay20) #10, !dbg !3826
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay21) #10, !dbg !3827
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay22) #10, !dbg !3828
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay23) #10, !dbg !3829
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay24) #10, !dbg !3830
  br label %cleanup200, !dbg !3831

cleanup200:                                       ; preds = %if.end, %if.end15, %if.then17, %if.then3, %if.end193
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11, !dbg !3831
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11, !dbg !3831
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #11, !dbg !3831
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #11, !dbg !3831
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #11, !dbg !3831
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3831
  ret void, !dbg !3831
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_setbit(%struct.__mpz_struct* %d, i64 %bit_index) local_unnamed_addr #0 !dbg !3832 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !3834, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata i64 %bit_index, metadata !3835, metadata !DIExpression()), !dbg !3836
  %call = tail call i32 @mpz_tstbit(%struct.__mpz_struct* %d, i64 %bit_index) #10, !dbg !3837
  %tobool = icmp eq i32 %call, 0, !dbg !3837
  br i1 %tobool, label %if.then, label %if.end2, !dbg !3839

if.then:                                          ; preds = %entry
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 1, !dbg !3840
  %0 = load i32, i32* %_mp_size, align 4, !dbg !3840, !tbaa !1330
  %cmp = icmp sgt i32 %0, -1, !dbg !3843
  br i1 %cmp, label %if.then1, label %if.else, !dbg !3844

if.then1:                                         ; preds = %if.then
  tail call fastcc void @mpz_abs_add_bit(%struct.__mpz_struct* %d, i64 %bit_index) #10, !dbg !3845
  br label %if.end2, !dbg !3845

if.else:                                          ; preds = %if.then
  tail call fastcc void @mpz_abs_sub_bit(%struct.__mpz_struct* %d, i64 %bit_index) #10, !dbg !3846
  br label %if.end2

if.end2:                                          ; preds = %entry, %if.then1, %if.else
  ret void, !dbg !3847
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_lcm(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !3848 {
entry:
  %g = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3850, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !3851, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !3852, metadata !DIExpression()), !dbg !3854
  %0 = bitcast [1 x %struct.__mpz_struct]* %g to i8*, !dbg !3855
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3855
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %g, metadata !3853, metadata !DIExpression()), !dbg !3856
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !3857
  %1 = load i32, i32* %_mp_size, align 4, !dbg !3857, !tbaa !1330
  %cmp = icmp eq i32 %1, 0, !dbg !3859
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3860

lor.lhs.false:                                    ; preds = %entry
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 1, !dbg !3861
  %2 = load i32, i32* %_mp_size1, align 4, !dbg !3861, !tbaa !1330
  %cmp2 = icmp eq i32 %2, 0, !dbg !3862
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3863

if.then:                                          ; preds = %lor.lhs.false, %entry
  %_mp_size3 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !3864
  store i32 0, i32* %_mp_size3, align 4, !dbg !3866, !tbaa !1330
  br label %cleanup, !dbg !3867

if.end:                                           ; preds = %lor.lhs.false
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %g, i64 0, i64 0, !dbg !3868
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3869
  call void @mpz_gcd(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) #10, !dbg !3870
  call void @mpz_divexact(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %u, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3871
  call void @mpz_mul(%struct.__mpz_struct* %r, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %v) #10, !dbg !3872
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3873
  call void @mpz_abs(%struct.__mpz_struct* %r, %struct.__mpz_struct* %r) #10, !dbg !3874
  br label %cleanup, !dbg !3875

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3875
  ret void, !dbg !3875
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_lcm_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %v) local_unnamed_addr #0 !dbg !3876 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3878, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !3879, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i64 %v, metadata !3880, metadata !DIExpression()), !dbg !3881
  %cmp = icmp eq i64 %v, 0, !dbg !3882
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3884

lor.lhs.false:                                    ; preds = %entry
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !3885
  %0 = load i32, i32* %_mp_size, align 4, !dbg !3885, !tbaa !1330
  %cmp1 = icmp eq i32 %0, 0, !dbg !3886
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3887

if.then:                                          ; preds = %lor.lhs.false, %entry
  %_mp_size2 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !3888
  store i32 0, i32* %_mp_size2, align 4, !dbg !3890, !tbaa !1330
  br label %return, !dbg !3891

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call i64 @mpz_gcd_ui(%struct.__mpz_struct* null, %struct.__mpz_struct* %u, i64 %v) #10, !dbg !3892
  %div = udiv i64 %v, %call, !dbg !3893
  call void @llvm.dbg.value(metadata i64 %div, metadata !3880, metadata !DIExpression()), !dbg !3881
  tail call void @mpz_mul_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 %div) #10, !dbg !3894
  tail call void @mpz_abs(%struct.__mpz_struct* %r, %struct.__mpz_struct* %r) #10, !dbg !3895
  br label %return, !dbg !3896

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3896
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_invert(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, %struct.__mpz_struct* %m) local_unnamed_addr #0 !dbg !3897 {
entry:
  %g = alloca [1 x %struct.__mpz_struct], align 16
  %tr = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3901, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !3902, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %m, metadata !3903, metadata !DIExpression()), !dbg !3907
  %0 = bitcast [1 x %struct.__mpz_struct]* %g to i8*, !dbg !3908
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3908
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %g, metadata !3904, metadata !DIExpression()), !dbg !3909
  %1 = bitcast [1 x %struct.__mpz_struct]* %tr to i8*, !dbg !3908
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #11, !dbg !3908
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %tr, metadata !3905, metadata !DIExpression()), !dbg !3910
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !3911
  %2 = load i32, i32* %_mp_size, align 4, !dbg !3911, !tbaa !1330
  %cmp = icmp eq i32 %2, 0, !dbg !3913
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !3914

lor.lhs.false:                                    ; preds = %entry
  %call = tail call i32 @mpz_cmpabs_ui(%struct.__mpz_struct* %m, i64 1) #10, !dbg !3915
  %cmp1 = icmp slt i32 %call, 1, !dbg !3916
  br i1 %cmp1, label %cleanup, label %if.end, !dbg !3917

if.end:                                           ; preds = %lor.lhs.false
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %g, i64 0, i64 0, !dbg !3918
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3919
  %arraydecay2 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tr, i64 0, i64 0, !dbg !3920
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay2) #10, !dbg !3921
  call void @mpz_gcdext(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay2, %struct.__mpz_struct* null, %struct.__mpz_struct* %u, %struct.__mpz_struct* %m) #10, !dbg !3922
  %call6 = call i32 @mpz_cmp_ui(%struct.__mpz_struct* nonnull %arraydecay, i64 1) #10, !dbg !3923
  %cmp7 = icmp eq i32 %call6, 0, !dbg !3924
  %conv = zext i1 %cmp7 to i32, !dbg !3924
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3906, metadata !DIExpression()), !dbg !3907
  br i1 %cmp7, label %if.then8, label %if.end25, !dbg !3925

if.then8:                                         ; preds = %if.end
  %_mp_size10 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tr, i64 0, i64 0, i32 1, !dbg !3926
  %3 = load i32, i32* %_mp_size10, align 4, !dbg !3926, !tbaa !1330
  %cmp11 = icmp slt i32 %3, 0, !dbg !3930
  br i1 %cmp11, label %if.then13, label %if.end23, !dbg !3931

if.then13:                                        ; preds = %if.then8
  %_mp_size14 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %m, i64 0, i32 1, !dbg !3932
  %4 = load i32, i32* %_mp_size14, align 4, !dbg !3932, !tbaa !1330
  %cmp15 = icmp sgt i32 %4, -1, !dbg !3935
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !3936

if.then17:                                        ; preds = %if.then13
  call void @mpz_add(%struct.__mpz_struct* nonnull %arraydecay2, %struct.__mpz_struct* nonnull %arraydecay2, %struct.__mpz_struct* %m) #10, !dbg !3937
  br label %if.end23, !dbg !3937

if.else:                                          ; preds = %if.then13
  call void @mpz_sub(%struct.__mpz_struct* nonnull %arraydecay2, %struct.__mpz_struct* nonnull %arraydecay2, %struct.__mpz_struct* %m) #10, !dbg !3938
  br label %if.end23

if.end23:                                         ; preds = %if.then17, %if.else, %if.then8
  call void @mpz_swap(%struct.__mpz_struct* %r, %struct.__mpz_struct* nonnull %arraydecay2) #10, !dbg !3939
  br label %if.end25, !dbg !3940

if.end25:                                         ; preds = %if.end23, %if.end
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3941
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay2) #10, !dbg !3942
  br label %cleanup, !dbg !3943

cleanup:                                          ; preds = %entry, %lor.lhs.false, %if.end25
  %retval.0 = phi i32 [ %conv, %if.end25 ], [ 0, %lor.lhs.false ], [ 0, %entry ], !dbg !3907
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #11, !dbg !3944
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3944
  ret i32 %retval.0, !dbg !3944
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_pow_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %b, i64 %e) local_unnamed_addr #0 !dbg !3945 {
entry:
  %tr = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3947, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %b, metadata !3948, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i64 %e, metadata !3949, metadata !DIExpression()), !dbg !3952
  %0 = bitcast [1 x %struct.__mpz_struct]* %tr to i8*, !dbg !3953
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3953
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %tr, metadata !3951, metadata !DIExpression()), !dbg !3954
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tr, i64 0, i64 0, !dbg !3955
  call void @mpz_init_set_ui(%struct.__mpz_struct* nonnull %arraydecay, i64 1) #10, !dbg !3956
  call void @llvm.dbg.value(metadata i64 -9223372036854775808, metadata !3950, metadata !DIExpression()), !dbg !3952
  br label %do.body, !dbg !3957

do.body:                                          ; preds = %if.end, %entry
  %bit.0 = phi i64 [ -9223372036854775808, %entry ], [ %shr, %if.end ], !dbg !3952
  call void @llvm.dbg.value(metadata i64 %bit.0, metadata !3950, metadata !DIExpression()), !dbg !3952
  call void @mpz_mul(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3958
  %and = and i64 %bit.0, %e, !dbg !3960
  %tobool = icmp eq i64 %and, 0, !dbg !3960
  br i1 %tobool, label %if.end, label %if.then, !dbg !3962

if.then:                                          ; preds = %do.body
  call void @mpz_mul(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %b) #10, !dbg !3963
  br label %if.end, !dbg !3963

if.end:                                           ; preds = %do.body, %if.then
  %shr = lshr i64 %bit.0, 1, !dbg !3964
  call void @llvm.dbg.value(metadata i64 %shr, metadata !3950, metadata !DIExpression()), !dbg !3952
  %cmp = icmp eq i64 %shr, 0, !dbg !3965
  br i1 %cmp, label %do.end, label %do.body, !dbg !3966, !llvm.loop !3967

do.end:                                           ; preds = %if.end
  call void @mpz_swap(%struct.__mpz_struct* %r, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3969
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3970
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3971
  ret void, !dbg !3971
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_ui_pow_ui(%struct.__mpz_struct* %r, i64 %blimb, i64 %e) local_unnamed_addr #0 !dbg !3972 {
entry:
  %b = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3976, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i64 %blimb, metadata !3977, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i64 %e, metadata !3978, metadata !DIExpression()), !dbg !3980
  %0 = bitcast [1 x %struct.__mpz_struct]* %b to i8*, !dbg !3981
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3981
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %b, metadata !3979, metadata !DIExpression()), !dbg !3982
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %b, i64 0, i64 0, !dbg !3983
  call void @mpz_init_set_ui(%struct.__mpz_struct* nonnull %arraydecay, i64 %blimb) #10, !dbg !3984
  call void @mpz_pow_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* nonnull %arraydecay, i64 %e) #10, !dbg !3985
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !3986
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !3987
  ret void, !dbg !3987
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_powm(%struct.__mpz_struct* %r, %struct.__mpz_struct* %b, %struct.__mpz_struct* %e, %struct.__mpz_struct* %m) local_unnamed_addr #0 !dbg !3988 {
entry:
  %tr = alloca [1 x %struct.__mpz_struct], align 16
  %base = alloca [1 x %struct.__mpz_struct], align 16
  %minv = alloca %struct.gmp_div_inverse, align 8
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !3992, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %b, metadata !3993, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %e, metadata !3994, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %m, metadata !3995, metadata !DIExpression()), !dbg !4019
  %0 = bitcast [1 x %struct.__mpz_struct]* %tr to i8*, !dbg !4020
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4020
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %tr, metadata !3996, metadata !DIExpression()), !dbg !4021
  %1 = bitcast [1 x %struct.__mpz_struct]* %base to i8*, !dbg !4022
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #11, !dbg !4022
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %base, metadata !3997, metadata !DIExpression()), !dbg !4023
  %2 = bitcast %struct.gmp_div_inverse* %minv to i8*, !dbg !4024
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #11, !dbg !4024
  call void @llvm.dbg.value(metadata i64* null, metadata !4003, metadata !DIExpression()), !dbg !4019
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %e, i64 0, i32 1, !dbg !4025
  %3 = load i32, i32* %_mp_size, align 4, !dbg !4025, !tbaa !1330
  %cmp = icmp slt i32 %3, 0, !dbg !4025
  %sub = sub nsw i32 0, %3, !dbg !4025
  %cond = select i1 %cmp, i32 %sub, i32 %3, !dbg !4025
  %conv = zext i32 %cond to i64, !dbg !4025
  call void @llvm.dbg.value(metadata i64 %conv, metadata !3998, metadata !DIExpression()), !dbg !4019
  %_mp_size3 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %m, i64 0, i32 1, !dbg !4026
  %4 = load i32, i32* %_mp_size3, align 4, !dbg !4026, !tbaa !1330
  %cmp4 = icmp slt i32 %4, 0, !dbg !4026
  %sub10 = sub nsw i32 0, %4, !dbg !4026
  %cond12 = select i1 %cmp4, i32 %sub10, i32 %4, !dbg !4026
  %conv13 = zext i32 %cond12 to i64, !dbg !4026
  call void @llvm.dbg.value(metadata i64 %conv13, metadata !3999, metadata !DIExpression()), !dbg !4019
  %cmp14 = icmp eq i32 %cond12, 0, !dbg !4027
  br i1 %cmp14, label %if.then, label %if.end, !dbg !4029

if.then:                                          ; preds = %entry
  tail call fastcc void @gmp_die(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #10, !dbg !4030
  br label %if.end, !dbg !4030

if.end:                                           ; preds = %if.then, %entry
  %cmp16 = icmp eq i32 %cond, 0, !dbg !4031
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !4033

if.then18:                                        ; preds = %if.end
  tail call void @mpz_set_ui(%struct.__mpz_struct* %r, i64 1) #10, !dbg !4034
  br label %cleanup, !dbg !4036

if.end19:                                         ; preds = %if.end
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %m, i64 0, i32 2, !dbg !4037
  %5 = load i64*, i64** %_mp_d, align 8, !dbg !4037, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %5, metadata !4000, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %minv, metadata !4001, metadata !DIExpression(DW_OP_deref)), !dbg !4019
  call fastcc void @mpn_div_qr_invert(%struct.gmp_div_inverse* nonnull %minv, i64* %5, i64 %conv13) #10, !dbg !4038
  %shift20 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %minv, i64 0, i32 0, !dbg !4039
  %6 = load i32, i32* %shift20, align 8, !dbg !4039, !tbaa !4040
  call void @llvm.dbg.value(metadata i32 %6, metadata !4002, metadata !DIExpression()), !dbg !4019
  %cmp21 = icmp eq i32 %6, 0, !dbg !4042
  br i1 %cmp21, label %if.end30, label %if.then23, !dbg !4043

if.then23:                                        ; preds = %if.end19
  store i32 0, i32* %shift20, align 8, !dbg !4044, !tbaa !4040
  %call = call fastcc i64* @gmp_xalloc_limbs(i64 %conv13) #10, !dbg !4045
  call void @llvm.dbg.value(metadata i64* %call, metadata !4003, metadata !DIExpression()), !dbg !4019
  %call25 = call i64 @mpn_lshift(i64* %call, i64* %5, i64 %conv13, i32 %6) #10, !dbg !4046
  call void @llvm.dbg.value(metadata i64 %call25, metadata !4004, metadata !DIExpression()), !dbg !4047
  %cmp26 = icmp eq i64 %call25, 0, !dbg !4048
  br i1 %cmp26, label %if.end30, label %if.else, !dbg !4051

if.else:                                          ; preds = %if.then23
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3115, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.mpz_powm, i64 0, i64 0)) #8, !dbg !4048
  unreachable, !dbg !4048

if.end30:                                         ; preds = %if.end19, %if.then23
  %mp.0 = phi i64* [ %5, %if.end19 ], [ %call, %if.then23 ], !dbg !4019
  %tp.0 = phi i64* [ null, %if.end19 ], [ %call, %if.then23 ], !dbg !4019
  call void @llvm.dbg.value(metadata i64* %tp.0, metadata !4003, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i64* %mp.0, metadata !4000, metadata !DIExpression()), !dbg !4019
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %base, i64 0, i64 0, !dbg !4052
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4053
  %7 = load i32, i32* %_mp_size, align 4, !dbg !4054, !tbaa !1330
  %cmp32 = icmp slt i32 %7, 0, !dbg !4055
  br i1 %cmp32, label %if.then34, label %if.else39, !dbg !4056

if.then34:                                        ; preds = %if.end30
  %call36 = call i32 @mpz_invert(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %b, %struct.__mpz_struct* %m) #10, !dbg !4057
  %tobool = icmp eq i32 %call36, 0, !dbg !4057
  br i1 %tobool, label %if.then37, label %if.end86, !dbg !4060

if.then37:                                        ; preds = %if.then34
  call fastcc void @gmp_die(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !4061
  br label %if.end86, !dbg !4061

if.else39:                                        ; preds = %if.end30
  call void @mpz_abs(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %b) #10, !dbg !4062
  %_mp_size42 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %base, i64 0, i64 0, i32 1, !dbg !4063
  %8 = load i32, i32* %_mp_size42, align 4, !dbg !4063, !tbaa !1330
  %conv43 = sext i32 %8 to i64, !dbg !4064
  call void @llvm.dbg.value(metadata i64 %conv43, metadata !4008, metadata !DIExpression()), !dbg !4065
  %cmp44 = icmp slt i64 %conv43, %conv13, !dbg !4066
  br i1 %cmp44, label %if.end52, label %if.then46, !dbg !4068

if.then46:                                        ; preds = %if.else39
  %_mp_d48 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %base, i64 0, i64 0, i32 2, !dbg !4069
  %9 = load i64*, i64** %_mp_d48, align 8, !dbg !4069, !tbaa !1334
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %minv, metadata !4001, metadata !DIExpression(DW_OP_deref)), !dbg !4019
  call fastcc void @mpn_div_qr_preinv(i64* null, i64* %9, i64 %conv43, i64* %mp.0, i64 %conv13, %struct.gmp_div_inverse* nonnull %minv) #10, !dbg !4071
  call void @llvm.dbg.value(metadata i64 %conv13, metadata !4008, metadata !DIExpression()), !dbg !4065
  br label %if.end52, !dbg !4072

if.end52:                                         ; preds = %if.else39, %if.then46
  %bn.0 = phi i64 [ %conv13, %if.then46 ], [ %conv43, %if.else39 ], !dbg !4065
  call void @llvm.dbg.value(metadata i64 %bn.0, metadata !4008, metadata !DIExpression()), !dbg !4065
  %_mp_size53 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %b, i64 0, i32 1, !dbg !4073
  %10 = load i32, i32* %_mp_size53, align 4, !dbg !4073, !tbaa !1330
  %cmp54 = icmp slt i32 %10, 0, !dbg !4074
  br i1 %cmp54, label %if.then56, label %if.end79, !dbg !4075

if.then56:                                        ; preds = %if.end52
  %_mp_alloc = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %base, i64 0, i64 0, i32 0, !dbg !4076
  %11 = load i32, i32* %_mp_alloc, align 16, !dbg !4076, !tbaa !1326
  %conv58 = sext i32 %11 to i64, !dbg !4076
  %cmp59 = icmp sgt i64 %conv13, %conv58, !dbg !4076
  br i1 %cmp59, label %cond.true61, label %cond.false64, !dbg !4076

cond.true61:                                      ; preds = %if.then56
  %call63 = call fastcc i8* @mpz_realloc(%struct.__mpz_struct* nonnull %arraydecay, i64 %conv13) #10, !dbg !4076
  br label %cond.end67, !dbg !4076

cond.false64:                                     ; preds = %if.then56
  %_mp_d66 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %base, i64 0, i64 0, i32 2, !dbg !4076
  %12 = bitcast i64** %_mp_d66 to i8**, !dbg !4076
  %13 = load i8*, i8** %12, align 8, !dbg !4076, !tbaa !1334
  br label %cond.end67, !dbg !4076

cond.end67:                                       ; preds = %cond.false64, %cond.true61
  %cond68 = phi i8* [ %call63, %cond.true61 ], [ %13, %cond.false64 ], !dbg !4076
  %14 = bitcast i8* %cond68 to i64*, !dbg !4076
  call void @llvm.dbg.value(metadata i64* %14, metadata !4011, metadata !DIExpression()), !dbg !4077
  %call71 = call i64 @mpn_sub(i64* %14, i64* %mp.0, i64 %conv13, i64* %14, i64 %bn.0) #10, !dbg !4078
  call void @llvm.dbg.value(metadata i64 %call71, metadata !4014, metadata !DIExpression()), !dbg !4079
  %cmp72 = icmp eq i64 %call71, 0, !dbg !4080
  br i1 %cmp72, label %if.end79, label %if.else75, !dbg !4083

if.else75:                                        ; preds = %cond.end67
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3144, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.mpz_powm, i64 0, i64 0)) #8, !dbg !4080
  unreachable, !dbg !4080

if.end79:                                         ; preds = %cond.end67, %if.end52
  %bn.1 = phi i64 [ %bn.0, %if.end52 ], [ %conv13, %cond.end67 ], !dbg !4065
  call void @llvm.dbg.value(metadata i64 %bn.1, metadata !4008, metadata !DIExpression()), !dbg !4065
  %_mp_d81 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %base, i64 0, i64 0, i32 2, !dbg !4084
  %15 = load i64*, i64** %_mp_d81, align 8, !dbg !4084, !tbaa !1334
  %call82 = call fastcc i64 @mpn_normalized_size(i64* %15, i64 %bn.1) #10, !dbg !4085
  %conv83 = trunc i64 %call82 to i32, !dbg !4085
  store i32 %conv83, i32* %_mp_size42, align 4, !dbg !4086, !tbaa !1330
  br label %if.end86

if.end86:                                         ; preds = %if.then34, %if.then37, %if.end79
  %arraydecay87 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tr, i64 0, i64 0, !dbg !4087
  call void @mpz_init_set_ui(%struct.__mpz_struct* nonnull %arraydecay87, i64 1) #10, !dbg !4088
  %_mp_d90 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %e, i64 0, i32 2, !dbg !4089
  %_mp_size102 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tr, i64 0, i64 0, i32 1, !dbg !4090
  %_mp_d108 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %tr, i64 0, i64 0, i32 2, !dbg !4093
  br label %while.cond, !dbg !4095

while.cond.loopexit:                              ; preds = %if.end118
  br label %while.cond, !dbg !4095

while.cond:                                       ; preds = %while.cond.loopexit, %if.end86
  %en.0 = phi i64 [ %conv, %if.end86 ], [ %dec, %while.cond.loopexit ], !dbg !4019
  call void @llvm.dbg.value(metadata i64 %en.0, metadata !3998, metadata !DIExpression()), !dbg !4019
  %dec = add nsw i64 %en.0, -1, !dbg !4096
  call void @llvm.dbg.value(metadata i64 %dec, metadata !3998, metadata !DIExpression()), !dbg !4019
  %cmp88 = icmp sgt i64 %en.0, 0, !dbg !4097
  br i1 %cmp88, label %while.body, label %while.end, !dbg !4095

while.body:                                       ; preds = %while.cond
  %16 = load i64*, i64** %_mp_d90, align 8, !dbg !4098, !tbaa !1334
  %arrayidx = getelementptr inbounds i64, i64* %16, i64 %dec, !dbg !4099
  %17 = load i64, i64* %arrayidx, align 8, !dbg !4099, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %17, metadata !4016, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i64 -9223372036854775808, metadata !4018, metadata !DIExpression()), !dbg !4089
  br label %do.body91, !dbg !4100

do.body91:                                        ; preds = %if.end118, %while.body
  %bit.0 = phi i64 [ -9223372036854775808, %while.body ], [ %shr, %if.end118 ], !dbg !4089
  call void @llvm.dbg.value(metadata i64 %bit.0, metadata !4018, metadata !DIExpression()), !dbg !4089
  call void @mpz_mul(%struct.__mpz_struct* nonnull %arraydecay87, %struct.__mpz_struct* nonnull %arraydecay87, %struct.__mpz_struct* nonnull %arraydecay87) #10, !dbg !4101
  %and = and i64 %17, %bit.0, !dbg !4102
  %tobool95 = icmp eq i64 %and, 0, !dbg !4102
  br i1 %tobool95, label %if.end100, label %if.then96, !dbg !4104

if.then96:                                        ; preds = %do.body91
  call void @mpz_mul(%struct.__mpz_struct* nonnull %arraydecay87, %struct.__mpz_struct* nonnull %arraydecay87, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4105
  br label %if.end100, !dbg !4105

if.end100:                                        ; preds = %do.body91, %if.then96
  %18 = load i32, i32* %_mp_size102, align 4, !dbg !4106, !tbaa !1330
  %conv103 = sext i32 %18 to i64, !dbg !4107
  %cmp104 = icmp sgt i64 %conv103, %conv13, !dbg !4108
  br i1 %cmp104, label %if.then106, label %if.end118, !dbg !4109

if.then106:                                       ; preds = %if.end100
  %19 = load i64*, i64** %_mp_d108, align 8, !dbg !4110, !tbaa !1334
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %minv, metadata !4001, metadata !DIExpression(DW_OP_deref)), !dbg !4019
  call fastcc void @mpn_div_qr_preinv(i64* null, i64* %19, i64 %conv103, i64* %mp.0, i64 %conv13, %struct.gmp_div_inverse* nonnull %minv) #10, !dbg !4111
  %20 = load i64*, i64** %_mp_d108, align 8, !dbg !4112, !tbaa !1334
  %call114 = call fastcc i64 @mpn_normalized_size(i64* %20, i64 %conv13) #10, !dbg !4113
  %conv115 = trunc i64 %call114 to i32, !dbg !4113
  store i32 %conv115, i32* %_mp_size102, align 4, !dbg !4114, !tbaa !1330
  br label %if.end118, !dbg !4115

if.end118:                                        ; preds = %if.then106, %if.end100
  %shr = lshr i64 %bit.0, 1, !dbg !4116
  call void @llvm.dbg.value(metadata i64 %shr, metadata !4018, metadata !DIExpression()), !dbg !4089
  %cmp120 = icmp eq i64 %shr, 0, !dbg !4117
  br i1 %cmp120, label %while.cond.loopexit, label %do.body91, !dbg !4118, !llvm.loop !4119

while.end:                                        ; preds = %while.cond
  %21 = load i32, i32* %_mp_size102, align 4, !dbg !4121, !tbaa !1330
  %conv125 = sext i32 %21 to i64, !dbg !4123
  %cmp126 = icmp slt i64 %conv125, %conv13, !dbg !4124
  br i1 %cmp126, label %if.end141, label %if.then128, !dbg !4125

if.then128:                                       ; preds = %while.end
  store i32 %6, i32* %shift20, align 8, !dbg !4126, !tbaa !4040
  %22 = load i64*, i64** %_mp_d108, align 8, !dbg !4128, !tbaa !1334
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %minv, metadata !4001, metadata !DIExpression(DW_OP_deref)), !dbg !4019
  call fastcc void @mpn_div_qr_preinv(i64* null, i64* %22, i64 %conv125, i64* %mp.0, i64 %conv13, %struct.gmp_div_inverse* nonnull %minv) #10, !dbg !4129
  %23 = load i64*, i64** %_mp_d108, align 8, !dbg !4130, !tbaa !1334
  %call137 = call fastcc i64 @mpn_normalized_size(i64* %23, i64 %conv13) #10, !dbg !4131
  %conv138 = trunc i64 %call137 to i32, !dbg !4131
  store i32 %conv138, i32* %_mp_size102, align 4, !dbg !4132, !tbaa !1330
  br label %if.end141, !dbg !4133

if.end141:                                        ; preds = %while.end, %if.then128
  %tobool142 = icmp eq i64* %tp.0, null, !dbg !4134
  br i1 %tobool142, label %if.end144, label %if.then143, !dbg !4136

if.then143:                                       ; preds = %if.end141
  %24 = load void (i8*, i64)*, void (i8*, i64)** @gmp_free_func, align 8, !dbg !4137, !tbaa !73
  %25 = bitcast i64* %tp.0 to i8*, !dbg !4137
  call void %24(i8* nonnull %25, i64 0) #9, !dbg !4137
  br label %if.end144, !dbg !4137

if.end144:                                        ; preds = %if.end141, %if.then143
  call void @mpz_swap(%struct.__mpz_struct* %r, %struct.__mpz_struct* nonnull %arraydecay87) #10, !dbg !4138
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay87) #10, !dbg !4139
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4140
  br label %cleanup, !dbg !4141

cleanup:                                          ; preds = %if.end144, %if.then18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #11, !dbg !4141
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #11, !dbg !4141
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4141
  ret void, !dbg !4141
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gmp_die(i8* %msg) unnamed_addr #0 !dbg !4142 {
entry:
  call void @llvm.dbg.value(metadata i8* %msg, metadata !4149, metadata !DIExpression()), !dbg !4150
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4151, !tbaa !73
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i8* %msg) #9, !dbg !4152
  tail call void @abort() #8, !dbg !4153
  unreachable, !dbg !4153
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mpn_div_qr_invert(%struct.gmp_div_inverse* %inv, i64* %dp, i64 %dn) unnamed_addr #0 !dbg !4154 {
entry:
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %inv, metadata !4159, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i64* %dp, metadata !4160, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i64 %dn, metadata !4161, metadata !DIExpression()), !dbg !4171
  %cmp = icmp sgt i64 %dn, 0, !dbg !4172
  br i1 %cmp, label %if.end, label %if.else, !dbg !4175

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 831, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_invert, i64 0, i64 0)) #8, !dbg !4172
  unreachable, !dbg !4172

if.end:                                           ; preds = %entry
  switch i64 %dn, label %if.else8 [
    i64 1, label %if.then2
    i64 2, label %if.then5
  ], !dbg !4176

if.then2:                                         ; preds = %if.end
  %0 = load i64, i64* %dp, align 8, !dbg !4177, !tbaa !168
  tail call fastcc void @mpn_div_qr_1_invert(%struct.gmp_div_inverse* %inv, i64 %0) #10, !dbg !4178
  br label %if.end41, !dbg !4178

if.then5:                                         ; preds = %if.end
  %arrayidx6 = getelementptr inbounds i64, i64* %dp, i64 1, !dbg !4179
  %1 = load i64, i64* %arrayidx6, align 8, !dbg !4179, !tbaa !168
  %2 = load i64, i64* %dp, align 8, !dbg !4180, !tbaa !168
  tail call fastcc void @mpn_div_qr_2_invert(%struct.gmp_div_inverse* %inv, i64 %1, i64 %2) #10, !dbg !4181
  br label %if.end41, !dbg !4181

if.else8:                                         ; preds = %if.end
  %sub = add nsw i64 %dn, -1, !dbg !4182
  %arrayidx9 = getelementptr inbounds i64, i64* %dp, i64 %sub, !dbg !4183
  %3 = load i64, i64* %arrayidx9, align 8, !dbg !4183, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %3, metadata !4166, metadata !DIExpression()), !dbg !4184
  %sub10 = add nsw i64 %dn, -2, !dbg !4185
  %arrayidx11 = getelementptr inbounds i64, i64* %dp, i64 %sub10, !dbg !4186
  %4 = load i64, i64* %arrayidx11, align 8, !dbg !4186, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %4, metadata !4167, metadata !DIExpression()), !dbg !4184
  %cmp12 = icmp eq i64 %3, 0, !dbg !4187
  br i1 %cmp12, label %if.else14, label %for.cond.preheader, !dbg !4190

for.cond.preheader:                               ; preds = %if.else8
  br label %for.cond, !dbg !4191

if.else14:                                        ; preds = %if.else8
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 844, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_invert, i64 0, i64 0)) #8, !dbg !4187
  unreachable, !dbg !4187

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %__clz_x.0 = phi i64 [ %shl, %for.body ], [ %3, %for.cond.preheader ], !dbg !4193
  %__clz_c.0 = phi i32 [ %add, %for.body ], [ 0, %for.cond.preheader ], !dbg !4194
  call void @llvm.dbg.value(metadata i32 %__clz_c.0, metadata !4170, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i64 %__clz_x.0, metadata !4168, metadata !DIExpression()), !dbg !4193
  %cmp16 = icmp ult i64 %__clz_x.0, 72057594037927936, !dbg !4195
  br i1 %cmp16, label %for.body, label %for.cond17.preheader, !dbg !4191

for.cond17.preheader:                             ; preds = %for.cond
  %__clz_x.0.lcssa = phi i64 [ %__clz_x.0, %for.cond ], !dbg !4193
  %__clz_c.0.lcssa = phi i32 [ %__clz_c.0, %for.cond ], !dbg !4194
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !4168, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !4170, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !4168, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !4170, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !4168, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !4170, metadata !DIExpression()), !dbg !4193
  br label %for.cond17, !dbg !4197

for.body:                                         ; preds = %for.cond
  %shl = shl i64 %__clz_x.0, 8, !dbg !4195
  call void @llvm.dbg.value(metadata i64 %shl, metadata !4168, metadata !DIExpression()), !dbg !4193
  %add = add i32 %__clz_c.0, 8, !dbg !4195
  call void @llvm.dbg.value(metadata i32 %add, metadata !4170, metadata !DIExpression()), !dbg !4193
  br label %for.cond, !dbg !4195, !llvm.loop !4199

for.cond17:                                       ; preds = %for.cond17.preheader, %for.body20
  %__clz_x.1 = phi i64 [ %shl21, %for.body20 ], [ %__clz_x.0.lcssa, %for.cond17.preheader ], !dbg !4193
  %__clz_c.1 = phi i32 [ %inc, %for.body20 ], [ %__clz_c.0.lcssa, %for.cond17.preheader ], !dbg !4193
  call void @llvm.dbg.value(metadata i32 %__clz_c.1, metadata !4170, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i64 %__clz_x.1, metadata !4168, metadata !DIExpression()), !dbg !4193
  %cmp19 = icmp sgt i64 %__clz_x.1, -1, !dbg !4200
  br i1 %cmp19, label %for.body20, label %do.end, !dbg !4197

for.body20:                                       ; preds = %for.cond17
  %shl21 = shl i64 %__clz_x.1, 1, !dbg !4200
  call void @llvm.dbg.value(metadata i64 %shl21, metadata !4168, metadata !DIExpression()), !dbg !4193
  %inc = add i32 %__clz_c.1, 1, !dbg !4200
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4170, metadata !DIExpression()), !dbg !4193
  br label %for.cond17, !dbg !4200, !llvm.loop !4202

do.end:                                           ; preds = %for.cond17
  %__clz_c.1.lcssa = phi i32 [ %__clz_c.1, %for.cond17 ], !dbg !4193
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !4170, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !4170, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !4170, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !4162, metadata !DIExpression()), !dbg !4184
  %shift24 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 0, !dbg !4203
  store i32 %__clz_c.1.lcssa, i32* %shift24, align 8, !dbg !4204, !tbaa !4040
  %cmp25 = icmp eq i32 %__clz_c.1.lcssa, 0, !dbg !4205
  br i1 %cmp25, label %if.end37, label %if.then26, !dbg !4207

if.then26:                                        ; preds = %do.end
  %sh_prom = zext i32 %__clz_c.1.lcssa to i64, !dbg !4208
  %shl27 = shl i64 %3, %sh_prom, !dbg !4208
  %sub28 = sub nsw i64 64, %sh_prom, !dbg !4210
  %shr = lshr i64 %4, %sub28, !dbg !4211
  %or = or i64 %shl27, %shr, !dbg !4212
  call void @llvm.dbg.value(metadata i64 %or, metadata !4166, metadata !DIExpression()), !dbg !4184
  %shl30 = shl i64 %4, %sh_prom, !dbg !4213
  %sub31 = add nsw i64 %dn, -3, !dbg !4214
  %arrayidx32 = getelementptr inbounds i64, i64* %dp, i64 %sub31, !dbg !4215
  %5 = load i64, i64* %arrayidx32, align 8, !dbg !4215, !tbaa !168
  %shr35 = lshr i64 %5, %sub28, !dbg !4216
  %or36 = or i64 %shl30, %shr35, !dbg !4217
  call void @llvm.dbg.value(metadata i64 %or36, metadata !4167, metadata !DIExpression()), !dbg !4184
  br label %if.end37, !dbg !4218

if.end37:                                         ; preds = %do.end, %if.then26
  %d1.0 = phi i64 [ %or, %if.then26 ], [ %3, %do.end ], !dbg !4184
  %d0.0 = phi i64 [ %or36, %if.then26 ], [ %4, %do.end ], !dbg !4184
  call void @llvm.dbg.value(metadata i64 %d0.0, metadata !4167, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i64 %d1.0, metadata !4166, metadata !DIExpression()), !dbg !4184
  %d138 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 1, !dbg !4219
  store i64 %d1.0, i64* %d138, align 8, !dbg !4220, !tbaa !4221
  %d039 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 2, !dbg !4222
  store i64 %d0.0, i64* %d039, align 8, !dbg !4223, !tbaa !4224
  %call = tail call i64 @mpn_invert_3by2(i64 %d1.0, i64 %d0.0) #10, !dbg !4225
  %di = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 3, !dbg !4226
  store i64 %call, i64* %di, align 8, !dbg !4227, !tbaa !4228
  br label %if.end41

if.end41:                                         ; preds = %if.then5, %if.end37, %if.then2
  ret void, !dbg !4229
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mpn_div_qr_preinv(i64* %qp, i64* %np, i64 %nn, i64* %dp, i64 %dn, %struct.gmp_div_inverse* %inv) unnamed_addr #0 !dbg !4230 {
entry:
  call void @llvm.dbg.value(metadata i64* %qp, metadata !4236, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata i64* %np, metadata !4237, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata i64 %nn, metadata !4238, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata i64* %dp, metadata !4239, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata i64 %dn, metadata !4240, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %inv, metadata !4241, metadata !DIExpression()), !dbg !4250
  %cmp = icmp sgt i64 %dn, 0, !dbg !4251
  br i1 %cmp, label %if.end, label %if.else, !dbg !4254

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1055, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #8, !dbg !4251
  unreachable, !dbg !4251

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i64 %nn, %dn, !dbg !4255
  br i1 %cmp1, label %if.else3, label %if.end4, !dbg !4258

if.else3:                                         ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1056, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #8, !dbg !4255
  unreachable, !dbg !4255

if.end4:                                          ; preds = %if.end
  switch i64 %dn, label %if.else10 [
    i64 1, label %if.then6
    i64 2, label %if.then9
  ], !dbg !4259

if.then6:                                         ; preds = %if.end4
  %call = tail call fastcc i64 @mpn_div_qr_1_preinv(i64* %qp, i64* %np, i64 %nn, %struct.gmp_div_inverse* %inv) #10, !dbg !4260
  store i64 %call, i64* %np, align 8, !dbg !4261, !tbaa !168
  br label %if.end42, !dbg !4262

if.then9:                                         ; preds = %if.end4
  tail call fastcc void @mpn_div_qr_2_preinv(i64* %qp, i64* %np, i64* %np, i64 %nn, %struct.gmp_div_inverse* %inv) #10, !dbg !4263
  br label %if.end42, !dbg !4263

if.else10:                                        ; preds = %if.end4
  %d1 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 1, !dbg !4264
  %0 = load i64, i64* %d1, align 8, !dbg !4264, !tbaa !4221
  %sub = add nsw i64 %dn, -1, !dbg !4264
  %arrayidx11 = getelementptr inbounds i64, i64* %dp, i64 %sub, !dbg !4264
  %1 = load i64, i64* %arrayidx11, align 8, !dbg !4264, !tbaa !168
  %cmp12 = icmp eq i64 %0, %1, !dbg !4264
  br i1 %cmp12, label %if.end15, label %if.else14, !dbg !4267

if.else14:                                        ; preds = %if.else10
  tail call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1067, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #8, !dbg !4264
  unreachable, !dbg !4264

if.end15:                                         ; preds = %if.else10
  %d0 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 2, !dbg !4268
  %2 = load i64, i64* %d0, align 8, !dbg !4268, !tbaa !4224
  %sub16 = add nsw i64 %dn, -2, !dbg !4268
  %arrayidx17 = getelementptr inbounds i64, i64* %dp, i64 %sub16, !dbg !4268
  %3 = load i64, i64* %arrayidx17, align 8, !dbg !4268, !tbaa !168
  %cmp18 = icmp eq i64 %2, %3, !dbg !4268
  br i1 %cmp18, label %if.end21, label %if.else20, !dbg !4271

if.else20:                                        ; preds = %if.end15
  tail call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1068, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #8, !dbg !4268
  unreachable, !dbg !4268

if.end21:                                         ; preds = %if.end15
  %cmp23 = icmp slt i64 %0, 0, !dbg !4272
  br i1 %cmp23, label %if.end26, label %if.else25, !dbg !4275

if.else25:                                        ; preds = %if.end21
  tail call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1069, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #8, !dbg !4272
  unreachable, !dbg !4272

if.end26:                                         ; preds = %if.end21
  %shift27 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 0, !dbg !4276
  %4 = load i32, i32* %shift27, align 8, !dbg !4276, !tbaa !4040
  call void @llvm.dbg.value(metadata i32 %4, metadata !4246, metadata !DIExpression()), !dbg !4277
  %cmp28 = icmp eq i32 %4, 0, !dbg !4278
  br i1 %cmp28, label %if.end32, label %if.then29, !dbg !4280

if.then29:                                        ; preds = %if.end26
  %call30 = tail call i64 @mpn_lshift(i64* %np, i64* %np, i64 %nn, i32 %4) #10, !dbg !4281
  call void @llvm.dbg.value(metadata i64 %call30, metadata !4242, metadata !DIExpression()), !dbg !4277
  br label %if.end32, !dbg !4282

if.end32:                                         ; preds = %if.end26, %if.then29
  %nh.0 = phi i64 [ %call30, %if.then29 ], [ 0, %if.end26 ], !dbg !4283
  call void @llvm.dbg.value(metadata i64 %nh.0, metadata !4242, metadata !DIExpression()), !dbg !4277
  %di = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 3, !dbg !4284
  %5 = load i64, i64* %di, align 8, !dbg !4284, !tbaa !4228
  tail call fastcc void @mpn_div_qr_pi1(i64* %qp, i64* %np, i64 %nn, i64 %nh.0, i64* %dp, i64 %dn, i64 %5) #10, !dbg !4285
  br i1 %cmp28, label %if.end42, label %do.body, !dbg !4286

do.body:                                          ; preds = %if.end32
  %call35 = tail call i64 @mpn_rshift(i64* %np, i64* %np, i64 %dn, i32 %4) #10, !dbg !4287
  call void @llvm.dbg.value(metadata i64 %call35, metadata !4247, metadata !DIExpression()), !dbg !4288
  %cmp36 = icmp eq i64 %call35, 0, !dbg !4289
  br i1 %cmp36, label %if.end42, label %if.else38, !dbg !4292

if.else38:                                        ; preds = %do.body
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1080, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_preinv, i64 0, i64 0)) #8, !dbg !4289
  unreachable, !dbg !4289

if.end42:                                         ; preds = %if.end32, %if.then9, %do.body, %if.then6
  ret void, !dbg !4293
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_powm_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %b, i64 %elimb, %struct.__mpz_struct* %m) local_unnamed_addr #0 !dbg !4294 {
entry:
  %e = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !4298, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %b, metadata !4299, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata i64 %elimb, metadata !4300, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %m, metadata !4301, metadata !DIExpression()), !dbg !4303
  %0 = bitcast [1 x %struct.__mpz_struct]* %e to i8*, !dbg !4304
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4304
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %e, metadata !4302, metadata !DIExpression()), !dbg !4305
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %e, i64 0, i64 0, !dbg !4306
  call void @mpz_init_set_ui(%struct.__mpz_struct* nonnull %arraydecay, i64 %elimb) #10, !dbg !4307
  call void @mpz_powm(%struct.__mpz_struct* %r, %struct.__mpz_struct* %b, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %m) #10, !dbg !4308
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4309
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4310
  ret void, !dbg !4310
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_rootrem(%struct.__mpz_struct* %x, %struct.__mpz_struct* %r, %struct.__mpz_struct* %y, i64 %z) local_unnamed_addr #0 !dbg !4311 {
entry:
  %t = alloca [1 x %struct.__mpz_struct], align 16
  %u = alloca [1 x %struct.__mpz_struct], align 16
  %v = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !4315, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !4316, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %y, metadata !4317, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.value(metadata i64 %z, metadata !4318, metadata !DIExpression()), !dbg !4327
  %0 = bitcast [1 x %struct.__mpz_struct]* %t to i8*, !dbg !4328
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4328
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %t, metadata !4320, metadata !DIExpression()), !dbg !4329
  %1 = bitcast [1 x %struct.__mpz_struct]* %u to i8*, !dbg !4328
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #11, !dbg !4328
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %u, metadata !4321, metadata !DIExpression()), !dbg !4330
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %y, i64 0, i32 1, !dbg !4331
  %2 = load i32, i32* %_mp_size, align 4, !dbg !4331, !tbaa !1330
  %.lobit = lshr i32 %2, 31, !dbg !4332
  call void @llvm.dbg.value(metadata i32 %.lobit, metadata !4319, metadata !DIExpression()), !dbg !4327
  %neg = xor i64 %z, 1, !dbg !4333
  %conv1 = zext i32 %.lobit to i64, !dbg !4335
  %and = and i64 %neg, %conv1, !dbg !4336
  %cmp2 = icmp eq i64 %and, 0, !dbg !4337
  br i1 %cmp2, label %if.end, label %if.then, !dbg !4338

if.then:                                          ; preds = %entry
  tail call fastcc void @gmp_die(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !4339
  br label %if.end, !dbg !4339

if.end:                                           ; preds = %entry, %if.then
  %cmp4 = icmp eq i64 %z, 0, !dbg !4340
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !4342

if.then6:                                         ; preds = %if.end
  tail call fastcc void @gmp_die(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !4343
  br label %if.end7, !dbg !4343

if.end7:                                          ; preds = %if.then6, %if.end
  %call = tail call i32 @mpz_cmpabs_ui(%struct.__mpz_struct* %y, i64 1) #10, !dbg !4344
  %cmp8 = icmp slt i32 %call, 1, !dbg !4346
  br i1 %cmp8, label %if.then10, label %if.end17, !dbg !4347

if.then10:                                        ; preds = %if.end7
  %tobool = icmp eq %struct.__mpz_struct* %x, null, !dbg !4348
  br i1 %tobool, label %if.end12, label %if.then11, !dbg !4351

if.then11:                                        ; preds = %if.then10
  tail call void @mpz_set(%struct.__mpz_struct* nonnull %x, %struct.__mpz_struct* %y) #10, !dbg !4352
  br label %if.end12, !dbg !4352

if.end12:                                         ; preds = %if.then10, %if.then11
  %tobool13 = icmp eq %struct.__mpz_struct* %r, null, !dbg !4353
  br i1 %tobool13, label %cleanup, label %if.then14, !dbg !4355

if.then14:                                        ; preds = %if.end12
  %_mp_size15 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !4356
  store i32 0, i32* %_mp_size15, align 4, !dbg !4357, !tbaa !1330
  br label %cleanup, !dbg !4358

if.end17:                                         ; preds = %if.end7
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %u, i64 0, i64 0, !dbg !4359
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4360
  %call18 = call i64 @mpz_sizeinbase(%struct.__mpz_struct* %y, i32 2) #10, !dbg !4361
  %div = udiv i64 %call18, %z, !dbg !4362
  %add = add i64 %div, 1, !dbg !4363
  call void @llvm.dbg.value(metadata i64 %add, metadata !4322, metadata !DIExpression()), !dbg !4364
  %arraydecay19 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t, i64 0, i64 0, !dbg !4365
  call void @mpz_init2(%struct.__mpz_struct* nonnull %arraydecay19, i64 %add) #10, !dbg !4366
  call void @mpz_setbit(%struct.__mpz_struct* nonnull %arraydecay19, i64 %add) #10, !dbg !4367
  %cmp21 = icmp eq i64 %z, 2, !dbg !4368
  br i1 %cmp21, label %do.body.preheader, label %if.else, !dbg !4369

do.body.preheader:                                ; preds = %if.end17
  br label %do.body, !dbg !4370

do.body:                                          ; preds = %do.body.preheader, %do.body
  call void @mpz_swap(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay19) #10, !dbg !4371
  call void @mpz_tdiv_q(%struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* %y, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4373
  call void @mpz_add(%struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4374
  call void @mpz_tdiv_q_2exp(%struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* nonnull %arraydecay19, i64 1) #10, !dbg !4375
  %call35 = call i32 @mpz_cmpabs(%struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4376
  %cmp36 = icmp slt i32 %call35, 0, !dbg !4377
  br i1 %cmp36, label %do.body, label %if.end68.loopexit, !dbg !4378, !llvm.loop !4379

if.else:                                          ; preds = %if.end17
  %3 = bitcast [1 x %struct.__mpz_struct]* %v to i8*, !dbg !4381
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #11, !dbg !4381
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %v, metadata !4324, metadata !DIExpression()), !dbg !4382
  %arraydecay38 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %v, i64 0, i64 0, !dbg !4383
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay38) #10, !dbg !4384
  %tobool39 = icmp eq i32 %.lobit, 0, !dbg !4385
  br i1 %tobool39, label %if.end43, label %if.then40, !dbg !4387

if.then40:                                        ; preds = %if.else
  call void @mpz_neg(%struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* nonnull %arraydecay19) #10, !dbg !4388
  br label %if.end43, !dbg !4388

if.end43:                                         ; preds = %if.else, %if.then40
  %sub = add i64 %z, -1, !dbg !4389
  br label %do.body44, !dbg !4391

do.body44:                                        ; preds = %do.body44, %if.end43
  call void @mpz_swap(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay19) #10, !dbg !4392
  call void @mpz_pow_ui(%struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* nonnull %arraydecay, i64 %sub) #10, !dbg !4393
  call void @mpz_tdiv_q(%struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* %y, %struct.__mpz_struct* nonnull %arraydecay19) #10, !dbg !4394
  call void @mpz_mul_ui(%struct.__mpz_struct* nonnull %arraydecay38, %struct.__mpz_struct* nonnull %arraydecay, i64 %sub) #10, !dbg !4395
  call void @mpz_add(%struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* nonnull %arraydecay38) #10, !dbg !4396
  %call59 = call i64 @mpz_tdiv_q_ui(%struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* nonnull %arraydecay19, i64 %z) #10, !dbg !4397
  %call63 = call i32 @mpz_cmpabs(%struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4398
  %cmp64 = icmp slt i32 %call63, 0, !dbg !4399
  br i1 %cmp64, label %do.body44, label %do.end66, !dbg !4400, !llvm.loop !4401

do.end66:                                         ; preds = %do.body44
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay38) #10, !dbg !4403
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #11, !dbg !4404
  br label %if.end68

if.end68.loopexit:                                ; preds = %do.body
  br label %if.end68, !dbg !4405

if.end68:                                         ; preds = %if.end68.loopexit, %do.end66
  %tobool69 = icmp eq %struct.__mpz_struct* %r, null, !dbg !4405
  br i1 %tobool69, label %if.end74, label %if.then70, !dbg !4407

if.then70:                                        ; preds = %if.end68
  call void @mpz_pow_ui(%struct.__mpz_struct* nonnull %arraydecay19, %struct.__mpz_struct* nonnull %arraydecay, i64 %z) #10, !dbg !4408
  call void @mpz_sub(%struct.__mpz_struct* nonnull %r, %struct.__mpz_struct* %y, %struct.__mpz_struct* nonnull %arraydecay19) #10, !dbg !4410
  br label %if.end74, !dbg !4411

if.end74:                                         ; preds = %if.end68, %if.then70
  %tobool75 = icmp eq %struct.__mpz_struct* %x, null, !dbg !4412
  br i1 %tobool75, label %if.end78, label %if.then76, !dbg !4414

if.then76:                                        ; preds = %if.end74
  call void @mpz_swap(%struct.__mpz_struct* nonnull %x, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4415
  br label %if.end78, !dbg !4415

if.end78:                                         ; preds = %if.end74, %if.then76
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4416
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay19) #10, !dbg !4417
  br label %cleanup, !dbg !4418

cleanup:                                          ; preds = %if.end12, %if.then14, %if.end78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #11, !dbg !4418
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4418
  ret void, !dbg !4418
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_sizeinbase(%struct.__mpz_struct* %u, i32 %base) local_unnamed_addr #0 !dbg !4419 {
entry:
  %bi = alloca %struct.gmp_div_inverse, align 8
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !4423, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i32 %base, metadata !4424, metadata !DIExpression()), !dbg !4431
  %0 = bitcast %struct.gmp_div_inverse* %bi to i8*, !dbg !4432
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #11, !dbg !4432
  %cmp = icmp sgt i32 %base, 1, !dbg !4433
  br i1 %cmp, label %if.end, label %if.else, !dbg !4436

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4001, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__.mpz_sizeinbase, i64 0, i64 0)) #8, !dbg !4433
  unreachable, !dbg !4433

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i32 %base, 37, !dbg !4437
  br i1 %cmp1, label %if.end4, label %if.else3, !dbg !4440

if.else3:                                         ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4002, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__PRETTY_FUNCTION__.mpz_sizeinbase, i64 0, i64 0)) #8, !dbg !4437
  unreachable, !dbg !4437

if.end4:                                          ; preds = %if.end
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !4441
  %1 = load i32, i32* %_mp_size, align 4, !dbg !4441, !tbaa !1330
  %cmp5 = icmp slt i32 %1, 0, !dbg !4441
  %sub = sub nsw i32 0, %1, !dbg !4441
  %cond = select i1 %cmp5, i32 %sub, i32 %1, !dbg !4441
  %conv = zext i32 %cond to i64, !dbg !4441
  call void @llvm.dbg.value(metadata i64 %conv, metadata !4425, metadata !DIExpression()), !dbg !4431
  %cmp8 = icmp eq i32 %cond, 0, !dbg !4442
  br i1 %cmp8, label %cleanup, label %if.end11, !dbg !4444

if.end11:                                         ; preds = %if.end4
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !4445
  %2 = load i64*, i64** %_mp_d, align 8, !dbg !4445, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %2, metadata !4426, metadata !DIExpression()), !dbg !4431
  %sub12 = shl nuw nsw i64 %conv, 6, !dbg !4446
  %mul = add nsw i64 %sub12, -64, !dbg !4446
  %sub13 = add nsw i64 %conv, -1, !dbg !4447
  %arrayidx = getelementptr inbounds i64, i64* %2, i64 %sub13, !dbg !4448
  %3 = load i64, i64* %arrayidx, align 8, !dbg !4448, !tbaa !168
  %call = tail call fastcc i64 @mpn_limb_size_in_base_2(i64 %3) #10, !dbg !4449
  %add = add i64 %mul, %call, !dbg !4450
  call void @llvm.dbg.value(metadata i64 %add, metadata !4428, metadata !DIExpression()), !dbg !4431
  switch i32 %base, label %sw.epilog [
    i32 2, label %cleanup
    i32 4, label %sw.bb14
    i32 8, label %sw.bb16
    i32 16, label %sw.bb19
    i32 32, label %sw.bb22
  ], !dbg !4451

sw.bb14:                                          ; preds = %if.end11
  %add15 = add i64 %add, 1, !dbg !4452
  %div = lshr i64 %add15, 1, !dbg !4454
  br label %cleanup, !dbg !4455

sw.bb16:                                          ; preds = %if.end11
  %add17 = add i64 %add, 2, !dbg !4456
  %div18 = udiv i64 %add17, 3, !dbg !4457
  br label %cleanup, !dbg !4458

sw.bb19:                                          ; preds = %if.end11
  %add20 = add i64 %add, 3, !dbg !4459
  %div21 = lshr i64 %add20, 2, !dbg !4460
  br label %cleanup, !dbg !4461

sw.bb22:                                          ; preds = %if.end11
  %add23 = add i64 %add, 4, !dbg !4462
  %div24 = udiv i64 %add23, 5, !dbg !4463
  br label %cleanup, !dbg !4464

sw.epilog:                                        ; preds = %if.end11
  %call25 = tail call fastcc i64* @gmp_xalloc_limbs(i64 %conv) #10, !dbg !4465
  call void @llvm.dbg.value(metadata i64* %call25, metadata !4427, metadata !DIExpression()), !dbg !4431
  tail call void @mpn_copyi(i64* %call25, i64* %2, i64 %conv) #10, !dbg !4466
  %conv26 = sext i32 %base to i64, !dbg !4467
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %bi, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4431
  call fastcc void @mpn_div_qr_1_invert(%struct.gmp_div_inverse* nonnull %bi, i64 %conv26) #10, !dbg !4468
  call void @llvm.dbg.value(metadata i64 0, metadata !4430, metadata !DIExpression()), !dbg !4431
  br label %do.body, !dbg !4469

do.body:                                          ; preds = %do.body, %sw.epilog
  %un.0 = phi i64 [ %conv, %sw.epilog ], [ %sub33, %do.body ], !dbg !4431
  %ndigits.0 = phi i64 [ 0, %sw.epilog ], [ %inc, %do.body ], !dbg !4431
  call void @llvm.dbg.value(metadata i64 %ndigits.0, metadata !4430, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i64 %un.0, metadata !4425, metadata !DIExpression()), !dbg !4431
  %inc = add i64 %ndigits.0, 1, !dbg !4470
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4430, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %bi, metadata !4429, metadata !DIExpression(DW_OP_deref)), !dbg !4431
  %call27 = call fastcc i64 @mpn_div_qr_1_preinv(i64* %call25, i64* %call25, i64 %un.0, %struct.gmp_div_inverse* nonnull %bi) #10, !dbg !4472
  %sub28 = add nsw i64 %un.0, -1, !dbg !4473
  %arrayidx29 = getelementptr inbounds i64, i64* %call25, i64 %sub28, !dbg !4474
  %4 = load i64, i64* %arrayidx29, align 8, !dbg !4474, !tbaa !168
  %cmp30 = icmp eq i64 %4, 0, !dbg !4475
  %conv32 = zext i1 %cmp30 to i64, !dbg !4476
  %sub33 = sub nsw i64 %un.0, %conv32, !dbg !4477
  call void @llvm.dbg.value(metadata i64 %sub33, metadata !4425, metadata !DIExpression()), !dbg !4431
  %cmp34 = icmp sgt i64 %sub33, 0, !dbg !4478
  br i1 %cmp34, label %do.body, label %do.end, !dbg !4479, !llvm.loop !4480

do.end:                                           ; preds = %do.body
  %inc.lcssa = phi i64 [ %inc, %do.body ], !dbg !4470
  %5 = load void (i8*, i64)*, void (i8*, i64)** @gmp_free_func, align 8, !dbg !4482, !tbaa !73
  %6 = bitcast i64* %call25 to i8*, !dbg !4482
  call void %5(i8* %6, i64 0) #9, !dbg !4482
  br label %cleanup, !dbg !4483

cleanup:                                          ; preds = %if.end11, %if.end4, %do.end, %sw.bb22, %sw.bb19, %sw.bb16, %sw.bb14
  %retval.0 = phi i64 [ %inc.lcssa, %do.end ], [ %div24, %sw.bb22 ], [ %div21, %sw.bb19 ], [ %div18, %sw.bb16 ], [ %div, %sw.bb14 ], [ 1, %if.end4 ], [ %add, %if.end11 ], !dbg !4431
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #11, !dbg !4484
  ret i64 %retval.0, !dbg !4484
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_root(%struct.__mpz_struct* %x, %struct.__mpz_struct* %y, i64 %z) local_unnamed_addr #0 !dbg !4485 {
entry:
  %r = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !4489, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %y, metadata !4490, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i64 %z, metadata !4491, metadata !DIExpression()), !dbg !4494
  %0 = bitcast [1 x %struct.__mpz_struct]* %r to i8*, !dbg !4495
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4495
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %r, metadata !4493, metadata !DIExpression()), !dbg !4496
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %r, i64 0, i64 0, !dbg !4497
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4498
  call void @mpz_rootrem(%struct.__mpz_struct* %x, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %y, i64 %z) #10, !dbg !4499
  %_mp_size = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %r, i64 0, i64 0, i32 1, !dbg !4500
  %1 = load i32, i32* %_mp_size, align 4, !dbg !4500, !tbaa !1330
  %cmp = icmp eq i32 %1, 0, !dbg !4501
  %conv = zext i1 %cmp to i32, !dbg !4501
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4492, metadata !DIExpression()), !dbg !4494
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4502
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4503
  ret i32 %conv, !dbg !4504
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_sqrtrem(%struct.__mpz_struct* %s, %struct.__mpz_struct* %r, %struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !4505 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %s, metadata !4509, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !4510, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !4511, metadata !DIExpression()), !dbg !4512
  tail call void @mpz_rootrem(%struct.__mpz_struct* %s, %struct.__mpz_struct* %r, %struct.__mpz_struct* %u, i64 2) #10, !dbg !4513
  ret void, !dbg !4514
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_sqrt(%struct.__mpz_struct* %s, %struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !4515 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %s, metadata !4517, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !4518, metadata !DIExpression()), !dbg !4519
  tail call void @mpz_rootrem(%struct.__mpz_struct* %s, %struct.__mpz_struct* null, %struct.__mpz_struct* %u, i64 2) #10, !dbg !4520
  ret void, !dbg !4521
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_perfect_square_p(%struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !4522 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !4524, metadata !DIExpression()), !dbg !4525
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !4526
  %0 = load i32, i32* %_mp_size, align 4, !dbg !4526, !tbaa !1330
  %cmp = icmp slt i32 %0, 1, !dbg !4528
  br i1 %cmp, label %if.then, label %if.else, !dbg !4529

if.then:                                          ; preds = %entry
  %cmp2 = icmp eq i32 %0, 0, !dbg !4530
  %conv = zext i1 %cmp2 to i32, !dbg !4530
  br label %return, !dbg !4531

if.else:                                          ; preds = %entry
  %call = tail call i32 @mpz_root(%struct.__mpz_struct* null, %struct.__mpz_struct* %u, i64 2) #10, !dbg !4532
  br label %return, !dbg !4533

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %call, %if.else ], !dbg !4534
  ret i32 %retval.0, !dbg !4535
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpn_perfect_square_p(i64* %p, i64 %n) local_unnamed_addr #0 !dbg !4536 {
entry:
  %t = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata i64* %p, metadata !4540, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.value(metadata i64 %n, metadata !4541, metadata !DIExpression()), !dbg !4543
  %0 = bitcast [1 x %struct.__mpz_struct]* %t to i8*, !dbg !4544
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4544
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %t, metadata !4542, metadata !DIExpression()), !dbg !4545
  %cmp = icmp sgt i64 %n, 0, !dbg !4546
  br i1 %cmp, label %if.end, label %if.else, !dbg !4549

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3302, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.mpn_perfect_square_p, i64 0, i64 0)) #8, !dbg !4546
  unreachable, !dbg !4546

if.end:                                           ; preds = %entry
  %sub = add nsw i64 %n, -1, !dbg !4550
  %arrayidx = getelementptr inbounds i64, i64* %p, i64 %sub, !dbg !4550
  %1 = load i64, i64* %arrayidx, align 8, !dbg !4550, !tbaa !168
  %cmp1 = icmp eq i64 %1, 0, !dbg !4550
  br i1 %cmp1, label %if.else3, label %if.end4, !dbg !4553

if.else3:                                         ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3303, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.mpn_perfect_square_p, i64 0, i64 0)) #8, !dbg !4550
  unreachable, !dbg !4550

if.end4:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t, i64 0, i64 0, !dbg !4554
  %call = call %struct.__mpz_struct* @mpz_roinit_n(%struct.__mpz_struct* nonnull %arraydecay, i64* %p, i64 %n) #10, !dbg !4555
  %call5 = call i32 @mpz_root(%struct.__mpz_struct* null, %struct.__mpz_struct* %call, i64 2) #10, !dbg !4556
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4557
  ret i32 %call5, !dbg !4558
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_sqrtrem(i64* %sp, i64* %rp, i64* %p, i64 %n) local_unnamed_addr #0 !dbg !4559 {
entry:
  %s = alloca [1 x %struct.__mpz_struct], align 16
  %r = alloca [1 x %struct.__mpz_struct], align 16
  %u = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata i64* %sp, metadata !4563, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata i64* %rp, metadata !4564, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata i64* %p, metadata !4565, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.value(metadata i64 %n, metadata !4566, metadata !DIExpression()), !dbg !4571
  %0 = bitcast [1 x %struct.__mpz_struct]* %s to i8*, !dbg !4572
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4572
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %s, metadata !4567, metadata !DIExpression()), !dbg !4573
  %1 = bitcast [1 x %struct.__mpz_struct]* %r to i8*, !dbg !4572
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #11, !dbg !4572
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %r, metadata !4568, metadata !DIExpression()), !dbg !4574
  %2 = bitcast [1 x %struct.__mpz_struct]* %u to i8*, !dbg !4572
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #11, !dbg !4572
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %u, metadata !4569, metadata !DIExpression()), !dbg !4575
  %cmp = icmp sgt i64 %n, 0, !dbg !4576
  br i1 %cmp, label %if.end, label %if.else, !dbg !4579

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3313, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.mpn_sqrtrem, i64 0, i64 0)) #8, !dbg !4576
  unreachable, !dbg !4576

if.end:                                           ; preds = %entry
  %sub = add nsw i64 %n, -1, !dbg !4580
  %arrayidx = getelementptr inbounds i64, i64* %p, i64 %sub, !dbg !4580
  %3 = load i64, i64* %arrayidx, align 8, !dbg !4580, !tbaa !168
  %cmp1 = icmp eq i64 %3, 0, !dbg !4580
  br i1 %cmp1, label %if.else3, label %if.end4, !dbg !4583

if.else3:                                         ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3314, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.mpn_sqrtrem, i64 0, i64 0)) #8, !dbg !4580
  unreachable, !dbg !4580

if.end4:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %r, i64 0, i64 0, !dbg !4584
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4585
  %arraydecay5 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %s, i64 0, i64 0, !dbg !4586
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay5) #10, !dbg !4587
  %arraydecay8 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %u, i64 0, i64 0, !dbg !4588
  %call = call %struct.__mpz_struct* @mpz_roinit_n(%struct.__mpz_struct* nonnull %arraydecay8, i64* %p, i64 %n) #10, !dbg !4589
  call void @mpz_rootrem(%struct.__mpz_struct* nonnull %arraydecay5, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %call, i64 2) #10, !dbg !4590
  %_mp_size = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %s, i64 0, i64 0, i32 1, !dbg !4591
  %4 = load i32, i32* %_mp_size, align 4, !dbg !4591, !tbaa !1330
  %conv = sext i32 %4 to i64, !dbg !4591
  %add = add nsw i64 %n, 1, !dbg !4591
  %div = sdiv i64 %add, 2, !dbg !4591
  %cmp10 = icmp eq i64 %div, %conv, !dbg !4591
  br i1 %cmp10, label %if.end14, label %if.else13, !dbg !4594

if.else13:                                        ; preds = %if.end4
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3320, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.mpn_sqrtrem, i64 0, i64 0)) #8, !dbg !4591
  unreachable, !dbg !4591

if.end14:                                         ; preds = %if.end4
  %_mp_d = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %s, i64 0, i64 0, i32 2, !dbg !4595
  %5 = load i64*, i64** %_mp_d, align 8, !dbg !4595, !tbaa !1334
  call void @mpn_copyd(i64* %sp, i64* %5, i64 %conv) #10, !dbg !4596
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay5) #10, !dbg !4597
  %_mp_size21 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %r, i64 0, i64 0, i32 1, !dbg !4598
  %6 = load i32, i32* %_mp_size21, align 4, !dbg !4598, !tbaa !1330
  %conv22 = sext i32 %6 to i64, !dbg !4599
  call void @llvm.dbg.value(metadata i64 %conv22, metadata !4570, metadata !DIExpression()), !dbg !4571
  %tobool = icmp eq i64* %rp, null, !dbg !4600
  br i1 %tobool, label %if.end26, label %if.then23, !dbg !4602

if.then23:                                        ; preds = %if.end14
  %_mp_d25 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %r, i64 0, i64 0, i32 2, !dbg !4603
  %7 = load i64*, i64** %_mp_d25, align 8, !dbg !4603, !tbaa !1334
  call void @mpn_copyd(i64* nonnull %rp, i64* %7, i64 %conv22) #10, !dbg !4604
  br label %if.end26, !dbg !4604

if.end26:                                         ; preds = %if.end14, %if.then23
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4605
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #11, !dbg !4606
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #11, !dbg !4606
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4606
  ret i64 %conv22, !dbg !4607
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_fac_ui(%struct.__mpz_struct* %x, i64 %n) local_unnamed_addr #0 !dbg !4608 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !4610, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i64 %n, metadata !4611, metadata !DIExpression()), !dbg !4612
  %cmp = icmp eq i64 %n, 0, !dbg !4613
  %conv1 = zext i1 %cmp to i64, !dbg !4614
  %add = add i64 %conv1, %n, !dbg !4615
  tail call void @mpz_set_ui(%struct.__mpz_struct* %x, i64 %add) #10, !dbg !4616
  br label %for.cond, !dbg !4617

for.cond:                                         ; preds = %for.body, %entry
  %n.addr.0 = phi i64 [ %n, %entry ], [ %dec, %for.body ]
  call void @llvm.dbg.value(metadata i64 %n.addr.0, metadata !4611, metadata !DIExpression()), !dbg !4612
  %cmp2 = icmp ugt i64 %n.addr.0, 2, !dbg !4618
  br i1 %cmp2, label %for.body, label %for.end, !dbg !4621

for.body:                                         ; preds = %for.cond
  %dec = add i64 %n.addr.0, -1, !dbg !4622
  call void @llvm.dbg.value(metadata i64 %dec, metadata !4611, metadata !DIExpression()), !dbg !4612
  tail call void @mpz_mul_ui(%struct.__mpz_struct* %x, %struct.__mpz_struct* %x, i64 %dec) #10, !dbg !4623
  br label %for.cond, !dbg !4624, !llvm.loop !4625

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4627
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_bin_uiui(%struct.__mpz_struct* %r, i64 %n, i64 %k) local_unnamed_addr #0 !dbg !4628 {
entry:
  %t = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !4630, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i64 %n, metadata !4631, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i64 %k, metadata !4632, metadata !DIExpression()), !dbg !4634
  %0 = bitcast [1 x %struct.__mpz_struct]* %t to i8*, !dbg !4635
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4635
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %t, metadata !4633, metadata !DIExpression()), !dbg !4636
  %cmp = icmp uge i64 %n, %k, !dbg !4637
  %conv1 = zext i1 %cmp to i64, !dbg !4638
  tail call void @mpz_set_ui(%struct.__mpz_struct* %r, i64 %conv1) #10, !dbg !4639
  %shr = lshr i64 %n, 1, !dbg !4640
  %cmp2 = icmp ult i64 %shr, %k, !dbg !4642
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4643

if.then:                                          ; preds = %entry
  %1 = tail call i64 @llvm.usub.sat.i64(i64 %n, i64 %k), !dbg !4644
  br label %if.end, !dbg !4644

if.end:                                           ; preds = %if.then, %entry
  %k.addr.0 = phi i64 [ %k, %entry ], [ %1, %if.then ]
  call void @llvm.dbg.value(metadata i64 %k.addr.0, metadata !4632, metadata !DIExpression()), !dbg !4634
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %t, i64 0, i64 0, !dbg !4645
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4646
  call void @mpz_fac_ui(%struct.__mpz_struct* nonnull %arraydecay, i64 %k.addr.0) #10, !dbg !4647
  br label %for.cond, !dbg !4648

for.cond:                                         ; preds = %for.body, %if.end
  %n.addr.0 = phi i64 [ %n, %if.end ], [ %dec, %for.body ]
  %k.addr.1 = phi i64 [ %k.addr.0, %if.end ], [ %dec9, %for.body ], !dbg !4634
  call void @llvm.dbg.value(metadata i64 %k.addr.1, metadata !4632, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i64 %n.addr.0, metadata !4631, metadata !DIExpression()), !dbg !4634
  %cmp7 = icmp eq i64 %k.addr.1, 0, !dbg !4649
  br i1 %cmp7, label %for.end, label %for.body, !dbg !4652

for.body:                                         ; preds = %for.cond
  %dec = add i64 %n.addr.0, -1, !dbg !4653
  call void @llvm.dbg.value(metadata i64 %dec, metadata !4631, metadata !DIExpression()), !dbg !4634
  call void @mpz_mul_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %r, i64 %n.addr.0) #10, !dbg !4654
  %dec9 = add i64 %k.addr.1, -1, !dbg !4655
  call void @llvm.dbg.value(metadata i64 %dec9, metadata !4632, metadata !DIExpression()), !dbg !4634
  br label %for.cond, !dbg !4656, !llvm.loop !4657

for.end:                                          ; preds = %for.cond
  call void @mpz_divexact(%struct.__mpz_struct* %r, %struct.__mpz_struct* %r, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4659
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4660
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4661
  ret void, !dbg !4661
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_probab_prime_p(%struct.__mpz_struct* %n, i32 %reps) local_unnamed_addr #0 !dbg !4662 {
entry:
  %nm1 = alloca [1 x %struct.__mpz_struct], align 16
  %q = alloca [1 x %struct.__mpz_struct], align 16
  %y = alloca [1 x %struct.__mpz_struct], align 16
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !4666, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %reps, metadata !4667, metadata !DIExpression()), !dbg !4674
  %0 = bitcast [1 x %struct.__mpz_struct]* %nm1 to i8*, !dbg !4675
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4675
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %nm1, metadata !4668, metadata !DIExpression()), !dbg !4676
  %1 = bitcast [1 x %struct.__mpz_struct]* %q to i8*, !dbg !4677
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #11, !dbg !4677
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %q, metadata !4669, metadata !DIExpression()), !dbg !4678
  %2 = bitcast [1 x %struct.__mpz_struct]* %y to i8*, !dbg !4679
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #11, !dbg !4679
  call void @llvm.dbg.declare(metadata [1 x %struct.__mpz_struct]* %y, metadata !4670, metadata !DIExpression()), !dbg !4680
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %n, i64 0, i32 1, !dbg !4681
  %3 = load i32, i32* %_mp_size, align 4, !dbg !4681, !tbaa !1330
  %cmp = icmp ne i32 %3, 0, !dbg !4681
  %conv = zext i1 %cmp to i32, !dbg !4681
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %n, i64 0, i32 2, !dbg !4681
  %4 = load i64*, i64** %_mp_d, align 8, !dbg !4681, !tbaa !1334
  %5 = load i64, i64* %4, align 8, !dbg !4681, !tbaa !168
  %conv1 = trunc i64 %5 to i32, !dbg !4681
  %and = and i32 %conv, %conv1, !dbg !4681
  %tobool = icmp eq i32 %and, 0, !dbg !4681
  br i1 %tobool, label %if.then, label %if.end, !dbg !4683

if.then:                                          ; preds = %entry
  %call = tail call i32 @mpz_cmpabs_ui(%struct.__mpz_struct* %n, i64 2) #10, !dbg !4684
  %cmp2 = icmp eq i32 %call, 0, !dbg !4685
  %cond = select i1 %cmp2, i32 2, i32 0, !dbg !4686
  br label %cleanup, !dbg !4687

if.end:                                           ; preds = %entry
  %cmp5 = icmp eq i32 %3, 0, !dbg !4688
  br i1 %cmp5, label %if.else, label %if.end8, !dbg !4691

if.else:                                          ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3411, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.mpz_probab_prime_p, i64 0, i64 0)) #8, !dbg !4688
  unreachable, !dbg !4688

if.end8:                                          ; preds = %if.end
  %call9 = tail call i32 @mpz_cmpabs_ui(%struct.__mpz_struct* %n, i64 64) #10, !dbg !4692
  %cmp10 = icmp slt i32 %call9, 0, !dbg !4694
  br i1 %cmp10, label %if.then12, label %if.end18, !dbg !4695

if.then12:                                        ; preds = %if.end8
  %6 = load i64*, i64** %_mp_d, align 8, !dbg !4696, !tbaa !1334
  %7 = load i64, i64* %6, align 8, !dbg !4697, !tbaa !168
  %shr = lshr i64 %7, 1, !dbg !4698
  %shr15 = lshr i64 3379140316, %shr, !dbg !4699
  %8 = trunc i64 %shr15 to i32, !dbg !4700
  %conv17 = and i32 %8, 2, !dbg !4700
  br label %cleanup, !dbg !4701

if.end18:                                         ; preds = %if.end8
  %call19 = tail call i64 @mpz_gcd_ui(%struct.__mpz_struct* null, %struct.__mpz_struct* %n, i64 3234846615) #10, !dbg !4702
  %cmp20 = icmp eq i64 %call19, 1, !dbg !4704
  br i1 %cmp20, label %if.end23, label %cleanup, !dbg !4705

if.end23:                                         ; preds = %if.end18
  %call24 = tail call i32 @mpz_cmpabs_ui(%struct.__mpz_struct* %n, i64 961) #10, !dbg !4706
  %cmp25 = icmp slt i32 %call24, 0, !dbg !4708
  br i1 %cmp25, label %cleanup, label %if.end28, !dbg !4709

if.end28:                                         ; preds = %if.end23
  %arraydecay = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %nm1, i64 0, i64 0, !dbg !4710
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4711
  %arraydecay29 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %q, i64 0, i64 0, !dbg !4712
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay29) #10, !dbg !4713
  %arraydecay30 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %y, i64 0, i64 0, !dbg !4714
  call void @mpz_init(%struct.__mpz_struct* nonnull %arraydecay30) #10, !dbg !4715
  %call32 = call fastcc i64 @mpz_abs_sub_ui(%struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* %n, i64 1) #10, !dbg !4716
  %conv33 = trunc i64 %call32 to i32, !dbg !4716
  %_mp_size35 = getelementptr inbounds [1 x %struct.__mpz_struct], [1 x %struct.__mpz_struct]* %nm1, i64 0, i64 0, i32 1, !dbg !4717
  store i32 %conv33, i32* %_mp_size35, align 4, !dbg !4718, !tbaa !1330
  %call37 = call i64 @mpz_scan1(%struct.__mpz_struct* nonnull %arraydecay, i64 0) #10, !dbg !4719
  call void @llvm.dbg.value(metadata i64 %call37, metadata !4671, metadata !DIExpression()), !dbg !4674
  call void @mpz_tdiv_q_2exp(%struct.__mpz_struct* nonnull %arraydecay29, %struct.__mpz_struct* nonnull %arraydecay, i64 %call37) #10, !dbg !4720
  call void @llvm.dbg.value(metadata i32 0, metadata !4673, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 1, metadata !4672, metadata !DIExpression()), !dbg !4674
  %9 = sext i32 %reps to i64, !dbg !4721
  br label %for.cond, !dbg !4721

for.cond:                                         ; preds = %if.end60, %if.end28
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end60 ], [ 0, %if.end28 ], !dbg !4723
  %is_prime.0 = phi i32 [ %call64, %if.end60 ], [ 1, %if.end28 ], !dbg !4723
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4673, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %is_prime.0, metadata !4672, metadata !DIExpression()), !dbg !4674
  %cmp40 = icmp slt i64 %indvars.iv, %9, !dbg !4724
  %conv41 = zext i1 %cmp40 to i32, !dbg !4724
  %and42 = and i32 %is_prime.0, %conv41, !dbg !4726
  %tobool43 = icmp eq i32 %and42, 0, !dbg !4727
  br i1 %tobool43, label %for.end.loopexit, label %for.body, !dbg !4727

for.body:                                         ; preds = %for.cond
  %mul = mul nuw nsw i64 %indvars.iv, %indvars.iv, !dbg !4728
  %add = add nuw nsw i64 %mul, %indvars.iv, !dbg !4730
  %add48 = add nuw i64 %add, 41, !dbg !4731
  call void @mpz_set_ui(%struct.__mpz_struct* nonnull %arraydecay30, i64 %add48) #10, !dbg !4732
  %call51 = call i32 @mpz_cmp(%struct.__mpz_struct* nonnull %arraydecay30, %struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4733
  %cmp52 = icmp sgt i32 %call51, -1, !dbg !4735
  br i1 %cmp52, label %if.then54, label %if.end60, !dbg !4736

if.then54:                                        ; preds = %for.body
  %indvars.iv.lcssa9 = phi i64 [ %indvars.iv, %for.body ], !dbg !4723
  %is_prime.0.lcssa7 = phi i32 [ %is_prime.0, %for.body ], !dbg !4723
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa9, metadata !4673, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %is_prime.0.lcssa7, metadata !4672, metadata !DIExpression()), !dbg !4674
  %10 = trunc i64 %indvars.iv.lcssa9 to i32, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %is_prime.0.lcssa7, metadata !4672, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %10, metadata !4673, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %is_prime.0.lcssa7, metadata !4672, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %10, metadata !4673, metadata !DIExpression()), !dbg !4674
  %cmp55 = icmp ugt i32 %10, 29, !dbg !4737
  br i1 %cmp55, label %for.end, label %if.else58, !dbg !4741

if.else58:                                        ; preds = %if.then54
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3444, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.mpz_probab_prime_p, i64 0, i64 0)) #8, !dbg !4737
  unreachable, !dbg !4737

if.end60:                                         ; preds = %for.body
  %call64 = call fastcc i32 @gmp_millerrabin(%struct.__mpz_struct* %n, %struct.__mpz_struct* nonnull %arraydecay, %struct.__mpz_struct* nonnull %arraydecay30, %struct.__mpz_struct* nonnull %arraydecay29, i64 %call37) #10, !dbg !4742
  call void @llvm.dbg.value(metadata i32 %call64, metadata !4672, metadata !DIExpression()), !dbg !4674
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !4743
  call void @llvm.dbg.value(metadata i32 undef, metadata !4673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4674
  br label %for.cond, !dbg !4744, !llvm.loop !4745

for.end.loopexit:                                 ; preds = %for.cond
  %is_prime.0.lcssa = phi i32 [ %is_prime.0, %for.cond ], !dbg !4723
  call void @llvm.dbg.value(metadata i32 %is_prime.0.lcssa, metadata !4672, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %is_prime.0.lcssa, metadata !4672, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %is_prime.0.lcssa, metadata !4672, metadata !DIExpression()), !dbg !4674
  br label %for.end, !dbg !4747

for.end:                                          ; preds = %for.end.loopexit, %if.then54
  %is_prime.08 = phi i32 [ %is_prime.0.lcssa, %for.end.loopexit ], [ %is_prime.0.lcssa7, %if.then54 ]
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay) #10, !dbg !4748
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay29) #10, !dbg !4749
  call void @mpz_clear(%struct.__mpz_struct* nonnull %arraydecay30) #10, !dbg !4750
  br label %cleanup, !dbg !4751

cleanup:                                          ; preds = %if.end18, %if.end23, %for.end, %if.then12, %if.then
  %retval.0 = phi i32 [ %conv17, %if.then12 ], [ %is_prime.08, %for.end ], [ %cond, %if.then ], [ 0, %if.end18 ], [ 2, %if.end23 ], !dbg !4674
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #11, !dbg !4752
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #11, !dbg !4752
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11, !dbg !4752
  ret i32 %retval.0, !dbg !4752
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_scan1(%struct.__mpz_struct* %u, i64 %starting_bit) local_unnamed_addr #0 !dbg !4753 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !4757, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.value(metadata i64 %starting_bit, metadata !4758, metadata !DIExpression()), !dbg !4765
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !4766
  %0 = load i32, i32* %_mp_size, align 4, !dbg !4766, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !4767
  call void @llvm.dbg.value(metadata i64 %conv, metadata !4760, metadata !DIExpression()), !dbg !4765
  %cmp = icmp slt i64 %conv, 0, !dbg !4768
  %sub = sub nsw i64 0, %conv, !dbg !4768
  %cond = select i1 %cmp, i64 %sub, i64 %conv, !dbg !4768
  call void @llvm.dbg.value(metadata i64 %cond, metadata !4761, metadata !DIExpression()), !dbg !4765
  %div = lshr i64 %starting_bit, 6, !dbg !4769
  call void @llvm.dbg.value(metadata i64 %div, metadata !4762, metadata !DIExpression()), !dbg !4765
  %cmp2 = icmp slt i64 %div, %cond, !dbg !4770
  br i1 %cmp2, label %if.end, label %if.then, !dbg !4772

if.then:                                          ; preds = %entry
  %cmp4 = icmp sgt i32 %0, -1, !dbg !4773
  %.starting_bit = select i1 %cmp4, i64 -1, i64 %starting_bit, !dbg !4774
  br label %cleanup, !dbg !4775

if.end:                                           ; preds = %entry
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !4776
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !4776, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %1, metadata !4759, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.value(metadata i64 0, metadata !4764, metadata !DIExpression()), !dbg !4765
  %arrayidx = getelementptr inbounds i64, i64* %1, i64 %div, !dbg !4777
  %2 = load i64, i64* %arrayidx, align 8, !dbg !4777, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %2, metadata !4763, metadata !DIExpression()), !dbg !4765
  %cmp10 = icmp eq i64 %starting_bit, 0, !dbg !4778
  br i1 %cmp10, label %if.end24, label %if.then12, !dbg !4780

if.then12:                                        ; preds = %if.end
  %cmp13 = icmp slt i32 %0, 0, !dbg !4781
  br i1 %cmp13, label %if.then15, label %if.end23, !dbg !4784

if.then15:                                        ; preds = %if.then12
  %call = tail call fastcc i64 @mpn_normalized_size(i64* %1, i64 %div) #10, !dbg !4785
  %cmp16 = icmp eq i64 %call, 0, !dbg !4785
  %conv18 = zext i1 %cmp16 to i64, !dbg !4785
  call void @llvm.dbg.value(metadata i64 %conv18, metadata !4764, metadata !DIExpression()), !dbg !4765
  %neg = xor i64 %2, -1, !dbg !4787
  %add = add i64 %neg, %conv18, !dbg !4788
  call void @llvm.dbg.value(metadata i64 %add, metadata !4763, metadata !DIExpression()), !dbg !4765
  %cmp19 = icmp uge i64 %add, %conv18, !dbg !4789
  %sub22 = sext i1 %cmp19 to i64, !dbg !4790
  call void @llvm.dbg.value(metadata i64 %sub22, metadata !4764, metadata !DIExpression()), !dbg !4765
  br label %if.end23, !dbg !4791

if.end23:                                         ; preds = %if.then15, %if.then12
  %limb.0 = phi i64 [ %add, %if.then15 ], [ %2, %if.then12 ], !dbg !4765
  %ux.0 = phi i64 [ %sub22, %if.then15 ], [ 0, %if.then12 ], !dbg !4765
  call void @llvm.dbg.value(metadata i64 %ux.0, metadata !4764, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.value(metadata i64 %limb.0, metadata !4763, metadata !DIExpression()), !dbg !4765
  %rem = and i64 %starting_bit, 63, !dbg !4792
  %shl = shl i64 -1, %rem, !dbg !4793
  %and = and i64 %limb.0, %shl, !dbg !4794
  call void @llvm.dbg.value(metadata i64 %and, metadata !4763, metadata !DIExpression()), !dbg !4765
  br label %if.end24, !dbg !4795

if.end24:                                         ; preds = %if.end, %if.end23
  %limb.1 = phi i64 [ %and, %if.end23 ], [ %2, %if.end ], !dbg !4765
  %ux.1 = phi i64 [ %ux.0, %if.end23 ], [ 0, %if.end ], !dbg !4765
  call void @llvm.dbg.value(metadata i64 %ux.1, metadata !4764, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.value(metadata i64 %limb.1, metadata !4763, metadata !DIExpression()), !dbg !4765
  %call25 = tail call fastcc i64 @mpn_common_scan(i64 %limb.1, i64 %div, i64* %1, i64 %cond, i64 %ux.1) #10, !dbg !4796
  br label %cleanup, !dbg !4797

cleanup:                                          ; preds = %if.end24, %if.then
  %retval.0 = phi i64 [ %.starting_bit, %if.then ], [ %call25, %if.end24 ], !dbg !4765
  ret i64 %retval.0, !dbg !4798
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gmp_millerrabin(%struct.__mpz_struct* %n, %struct.__mpz_struct* %nm1, %struct.__mpz_struct* %y, %struct.__mpz_struct* %q, i64 %k) unnamed_addr #0 !dbg !4799 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %n, metadata !4803, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %nm1, metadata !4804, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %y, metadata !4805, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %q, metadata !4806, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i64 %k, metadata !4807, metadata !DIExpression()), !dbg !4808
  %cmp = icmp eq i64 %k, 0, !dbg !4809
  br i1 %cmp, label %if.else, label %if.end, !dbg !4812

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3366, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__.gmp_millerrabin, i64 0, i64 0)) #8, !dbg !4809
  unreachable, !dbg !4809

if.end:                                           ; preds = %entry
  tail call void @mpz_powm(%struct.__mpz_struct* %y, %struct.__mpz_struct* %y, %struct.__mpz_struct* %q, %struct.__mpz_struct* %n) #10, !dbg !4813
  %call = tail call i32 @mpz_cmp_ui(%struct.__mpz_struct* %y, i64 1) #10, !dbg !4814
  %cmp1 = icmp eq i32 %call, 0, !dbg !4816
  br i1 %cmp1, label %return, label %lor.lhs.false, !dbg !4817

lor.lhs.false:                                    ; preds = %if.end
  %call2 = tail call i32 @mpz_cmp(%struct.__mpz_struct* %y, %struct.__mpz_struct* %nm1) #10, !dbg !4818
  %cmp3 = icmp eq i32 %call2, 0, !dbg !4819
  br i1 %cmp3, label %return, label %while.cond.preheader, !dbg !4820

while.cond.preheader:                             ; preds = %lor.lhs.false
  br label %while.cond, !dbg !4821

while.cond:                                       ; preds = %while.cond.preheader, %if.end10
  %k.addr.0 = phi i64 [ %dec, %if.end10 ], [ %k, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata i64 %k.addr.0, metadata !4807, metadata !DIExpression()), !dbg !4808
  %dec = add i64 %k.addr.0, -1, !dbg !4822
  call void @llvm.dbg.value(metadata i64 %dec, metadata !4807, metadata !DIExpression()), !dbg !4808
  %cmp6 = icmp eq i64 %dec, 0, !dbg !4823
  br i1 %cmp6, label %return.loopexit, label %while.body, !dbg !4821

while.body:                                       ; preds = %while.cond
  tail call void @mpz_powm_ui(%struct.__mpz_struct* %y, %struct.__mpz_struct* %y, i64 2, %struct.__mpz_struct* %n) #10, !dbg !4824
  %call7 = tail call i32 @mpz_cmp(%struct.__mpz_struct* %y, %struct.__mpz_struct* %nm1) #10, !dbg !4826
  %cmp8 = icmp eq i32 %call7, 0, !dbg !4828
  br i1 %cmp8, label %return.loopexit, label %if.end10, !dbg !4829

if.end10:                                         ; preds = %while.body
  %call11 = tail call i32 @mpz_cmp_ui(%struct.__mpz_struct* %y, i64 1) #10, !dbg !4830
  %cmp12 = icmp slt i32 %call11, 1, !dbg !4832
  br i1 %cmp12, label %return.loopexit, label %while.cond, !dbg !4833, !llvm.loop !4834

return.loopexit:                                  ; preds = %while.body, %if.end10, %while.cond
  %retval.0.ph = phi i32 [ 0, %while.cond ], [ 0, %if.end10 ], [ 1, %while.body ]
  br label %return, !dbg !4836

return:                                           ; preds = %return.loopexit, %if.end, %lor.lhs.false
  %retval.0 = phi i32 [ 1, %lor.lhs.false ], [ 1, %if.end ], [ %retval.0.ph, %return.loopexit ], !dbg !4808
  ret i32 %retval.0, !dbg !4836
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_tstbit(%struct.__mpz_struct* %d, i64 %bit_index) local_unnamed_addr #0 !dbg !4837 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !4841, metadata !DIExpression()), !dbg !4849
  call void @llvm.dbg.value(metadata i64 %bit_index, metadata !4842, metadata !DIExpression()), !dbg !4849
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 1, !dbg !4850
  %0 = load i32, i32* %_mp_size, align 4, !dbg !4850, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !4851
  call void @llvm.dbg.value(metadata i64 %conv, metadata !4845, metadata !DIExpression()), !dbg !4849
  %cmp = icmp slt i64 %conv, 0, !dbg !4852
  %sub = sub nsw i64 0, %conv, !dbg !4852
  %cond = select i1 %cmp, i64 %sub, i64 %conv, !dbg !4852
  call void @llvm.dbg.value(metadata i64 %cond, metadata !4846, metadata !DIExpression()), !dbg !4849
  %div = lshr i64 %bit_index, 6, !dbg !4853
  call void @llvm.dbg.value(metadata i64 %div, metadata !4843, metadata !DIExpression()), !dbg !4849
  %cmp2 = icmp slt i64 %div, %cond, !dbg !4854
  br i1 %cmp2, label %if.end, label %if.then, !dbg !4856

if.then:                                          ; preds = %entry
  %.lobit = lshr i32 %0, 31, !dbg !4857
  br label %cleanup, !dbg !4858

if.end:                                           ; preds = %entry
  %1 = trunc i64 %bit_index to i32, !dbg !4859
  %conv6 = and i32 %1, 63, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %conv6, metadata !4844, metadata !DIExpression()), !dbg !4849
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 2, !dbg !4860
  %2 = load i64*, i64** %_mp_d, align 8, !dbg !4860, !tbaa !1334
  %arrayidx = getelementptr inbounds i64, i64* %2, i64 %div, !dbg !4861
  %3 = load i64, i64* %arrayidx, align 8, !dbg !4861, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %3, metadata !4847, metadata !DIExpression()), !dbg !4849
  %sh_prom = zext i32 %conv6 to i64, !dbg !4862
  %shr = lshr i64 %3, %sh_prom, !dbg !4862
  %4 = trunc i64 %shr to i32, !dbg !4863
  %conv7 = and i32 %4, 1, !dbg !4863
  call void @llvm.dbg.value(metadata i32 %conv7, metadata !4848, metadata !DIExpression()), !dbg !4849
  %cmp8 = icmp slt i32 %0, 0, !dbg !4864
  br i1 %cmp8, label %if.then10, label %cleanup, !dbg !4866

if.then10:                                        ; preds = %if.end
  %cmp11 = icmp eq i32 %conv6, 0, !dbg !4867
  br i1 %cmp11, label %if.end18, label %land.lhs.true, !dbg !4870

land.lhs.true:                                    ; preds = %if.then10
  %narrow = sub nuw nsw i32 64, %conv6, !dbg !4871
  %sub14 = zext i32 %narrow to i64, !dbg !4871
  %shl = shl i64 %3, %sub14, !dbg !4872
  %cmp15 = icmp eq i64 %shl, 0, !dbg !4873
  br i1 %cmp15, label %if.end18, label %if.then17, !dbg !4874

if.then17:                                        ; preds = %land.lhs.true
  %xor = xor i32 %conv7, 1, !dbg !4875
  br label %cleanup, !dbg !4876

if.end18:                                         ; preds = %land.lhs.true, %if.then10
  br label %while.cond, !dbg !4877

while.cond:                                       ; preds = %while.body, %if.end18
  %limb_index.0 = phi i64 [ %div, %if.end18 ], [ %dec, %while.body ], !dbg !4849
  call void @llvm.dbg.value(metadata i64 %limb_index.0, metadata !4843, metadata !DIExpression()), !dbg !4849
  %dec = add nsw i64 %limb_index.0, -1, !dbg !4878
  call void @llvm.dbg.value(metadata i64 %dec, metadata !4843, metadata !DIExpression()), !dbg !4849
  %cmp19 = icmp sgt i64 %limb_index.0, 0, !dbg !4879
  br i1 %cmp19, label %while.body, label %cleanup.loopexit, !dbg !4877

while.body:                                       ; preds = %while.cond
  %arrayidx22 = getelementptr inbounds i64, i64* %2, i64 %dec, !dbg !4880
  %5 = load i64, i64* %arrayidx22, align 8, !dbg !4880, !tbaa !168
  %cmp23 = icmp eq i64 %5, 0, !dbg !4882
  br i1 %cmp23, label %while.cond, label %if.then25, !dbg !4883, !llvm.loop !4884

if.then25:                                        ; preds = %while.body
  %xor26 = xor i32 %conv7, 1, !dbg !4886
  br label %cleanup, !dbg !4887

cleanup.loopexit:                                 ; preds = %while.cond
  br label %cleanup, !dbg !4888

cleanup:                                          ; preds = %cleanup.loopexit, %if.end, %if.then25, %if.then17, %if.then
  %retval.0 = phi i32 [ %.lobit, %if.then ], [ %xor, %if.then17 ], [ %xor26, %if.then25 ], [ %conv7, %if.end ], [ %conv7, %cleanup.loopexit ], !dbg !4849
  ret i32 %retval.0, !dbg !4888
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mpz_abs_add_bit(%struct.__mpz_struct* %d, i64 %bit_index) unnamed_addr #0 !dbg !4889 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !4891, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i64 %bit_index, metadata !4892, metadata !DIExpression()), !dbg !4902
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 1, !dbg !4903
  %0 = load i32, i32* %_mp_size, align 4, !dbg !4903, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !4903
  %sub = sub nsw i32 0, %0, !dbg !4903
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !4903
  %conv = zext i32 %cond to i64, !dbg !4903
  call void @llvm.dbg.value(metadata i64 %conv, metadata !4893, metadata !DIExpression()), !dbg !4902
  %div = lshr i64 %bit_index, 6, !dbg !4904
  call void @llvm.dbg.value(metadata i64 %div, metadata !4894, metadata !DIExpression()), !dbg !4902
  %rem = and i64 %bit_index, 63, !dbg !4905
  %shl = shl i64 1, %rem, !dbg !4906
  call void @llvm.dbg.value(metadata i64 %shl, metadata !4895, metadata !DIExpression()), !dbg !4902
  %cmp3 = icmp ult i64 %div, %conv, !dbg !4907
  br i1 %cmp3, label %if.else, label %if.then, !dbg !4908

if.then:                                          ; preds = %entry
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 0, !dbg !4909
  %1 = load i32, i32* %_mp_alloc, align 8, !dbg !4909, !tbaa !1326
  %conv5 = sext i32 %1 to i64, !dbg !4909
  %cmp6 = icmp slt i64 %div, %conv5, !dbg !4909
  br i1 %cmp6, label %cond.false10, label %cond.true8, !dbg !4909

cond.true8:                                       ; preds = %if.then
  %add9 = add nuw nsw i64 %div, 1, !dbg !4909
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %d, i64 %add9) #10, !dbg !4909
  br label %cond.end11, !dbg !4909

cond.false10:                                     ; preds = %if.then
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 2, !dbg !4909
  %2 = bitcast i64** %_mp_d to i8**, !dbg !4909
  %3 = load i8*, i8** %2, align 8, !dbg !4909, !tbaa !1334
  br label %cond.end11, !dbg !4909

cond.end11:                                       ; preds = %cond.false10, %cond.true8
  %cond12 = phi i8* [ %call, %cond.true8 ], [ %3, %cond.false10 ], !dbg !4909
  %4 = bitcast i8* %cond12 to i64*, !dbg !4909
  call void @llvm.dbg.value(metadata i64* %4, metadata !4896, metadata !DIExpression()), !dbg !4902
  %arrayidx = getelementptr inbounds i64, i64* %4, i64 %div, !dbg !4910
  store i64 %shl, i64* %arrayidx, align 8, !dbg !4911, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %conv, metadata !4897, metadata !DIExpression()), !dbg !4912
  br label %for.cond, !dbg !4913

for.cond:                                         ; preds = %for.body, %cond.end11
  %i.0 = phi i64 [ %conv, %cond.end11 ], [ %inc, %for.body ], !dbg !4915
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4897, metadata !DIExpression()), !dbg !4912
  %cmp13 = icmp ult i64 %i.0, %div, !dbg !4916
  br i1 %cmp13, label %for.body, label %for.end, !dbg !4918

for.body:                                         ; preds = %for.cond
  %arrayidx15 = getelementptr inbounds i64, i64* %4, i64 %i.0, !dbg !4919
  store i64 0, i64* %arrayidx15, align 8, !dbg !4920, !tbaa !168
  %inc = add nuw nsw i64 %i.0, 1, !dbg !4921
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4897, metadata !DIExpression()), !dbg !4912
  br label %for.cond, !dbg !4922, !llvm.loop !4923

for.end:                                          ; preds = %for.cond
  %add16 = add nuw nsw i64 %div, 1, !dbg !4925
  call void @llvm.dbg.value(metadata i64 %add16, metadata !4893, metadata !DIExpression()), !dbg !4902
  br label %if.end38, !dbg !4926

if.else:                                          ; preds = %entry
  %_mp_d17 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 2, !dbg !4927
  %5 = load i64*, i64** %_mp_d17, align 8, !dbg !4927, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %5, metadata !4896, metadata !DIExpression()), !dbg !4902
  %add.ptr = getelementptr inbounds i64, i64* %5, i64 %div, !dbg !4928
  %sub19 = sub nsw i64 %conv, %div, !dbg !4929
  %call20 = tail call i64 @mpn_add_1(i64* %add.ptr, i64* %add.ptr, i64 %sub19, i64 %shl) #10, !dbg !4930
  call void @llvm.dbg.value(metadata i64 %call20, metadata !4900, metadata !DIExpression()), !dbg !4931
  %cmp21 = icmp eq i64 %call20, 0, !dbg !4932
  br i1 %cmp21, label %if.end38, label %if.then23, !dbg !4934

if.then23:                                        ; preds = %if.else
  %_mp_alloc25 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 0, !dbg !4935
  %6 = load i32, i32* %_mp_alloc25, align 8, !dbg !4935, !tbaa !1326
  %conv26 = sext i32 %6 to i64, !dbg !4935
  %cmp27 = icmp slt i64 %conv, %conv26, !dbg !4935
  br i1 %cmp27, label %cond.false32, label %cond.true29, !dbg !4935

cond.true29:                                      ; preds = %if.then23
  %add30 = add nuw nsw i64 %conv, 1, !dbg !4935
  %call31 = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %d, i64 %add30) #10, !dbg !4935
  br label %cond.end34, !dbg !4935

cond.false32:                                     ; preds = %if.then23
  %7 = bitcast i64** %_mp_d17 to i8**, !dbg !4935
  %8 = load i8*, i8** %7, align 8, !dbg !4935, !tbaa !1334
  %.pre = add nuw nsw i64 %conv, 1, !dbg !4937
  br label %cond.end34, !dbg !4935

cond.end34:                                       ; preds = %cond.false32, %cond.true29
  %inc36.pre-phi = phi i64 [ %.pre, %cond.false32 ], [ %add30, %cond.true29 ], !dbg !4937
  %cond35 = phi i8* [ %8, %cond.false32 ], [ %call31, %cond.true29 ], !dbg !4935
  %9 = bitcast i8* %cond35 to i64*, !dbg !4935
  call void @llvm.dbg.value(metadata i64* %9, metadata !4896, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i64 %inc36.pre-phi, metadata !4893, metadata !DIExpression()), !dbg !4902
  %arrayidx37 = getelementptr inbounds i64, i64* %9, i64 %conv, !dbg !4938
  store i64 %call20, i64* %arrayidx37, align 8, !dbg !4939, !tbaa !168
  br label %if.end38, !dbg !4940

if.end38:                                         ; preds = %if.else, %cond.end34, %for.end
  %dn.1 = phi i64 [ %add16, %for.end ], [ %inc36.pre-phi, %cond.end34 ], [ %conv, %if.else ], !dbg !4941
  call void @llvm.dbg.value(metadata i64 %dn.1, metadata !4893, metadata !DIExpression()), !dbg !4902
  %10 = load i32, i32* %_mp_size, align 4, !dbg !4942, !tbaa !1330
  %cmp40 = icmp slt i32 %10, 0, !dbg !4943
  %sub43 = sub nsw i64 0, %dn.1, !dbg !4944
  %cond46 = select i1 %cmp40, i64 %sub43, i64 %dn.1, !dbg !4944
  %conv47 = trunc i64 %cond46 to i32, !dbg !4944
  store i32 %conv47, i32* %_mp_size, align 4, !dbg !4945, !tbaa !1330
  ret void, !dbg !4946
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mpz_abs_sub_bit(%struct.__mpz_struct* %d, i64 %bit_index) unnamed_addr #0 !dbg !4947 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !4949, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata i64 %bit_index, metadata !4950, metadata !DIExpression()), !dbg !4957
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 1, !dbg !4958
  %0 = load i32, i32* %_mp_size, align 4, !dbg !4958, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !4958
  %sub = sub nsw i32 0, %0, !dbg !4958
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !4958
  %conv = zext i32 %cond to i64, !dbg !4958
  call void @llvm.dbg.value(metadata i64 %conv, metadata !4951, metadata !DIExpression()), !dbg !4957
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 2, !dbg !4959
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !4959, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %1, metadata !4953, metadata !DIExpression()), !dbg !4957
  %div = lshr i64 %bit_index, 6, !dbg !4960
  call void @llvm.dbg.value(metadata i64 %div, metadata !4952, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata i64 undef, metadata !4954, metadata !DIExpression()), !dbg !4957
  %cmp3 = icmp ult i64 %div, %conv, !dbg !4961
  br i1 %cmp3, label %do.body, label %if.else, !dbg !4964

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3568, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.mpz_abs_sub_bit, i64 0, i64 0)) #8, !dbg !4961
  unreachable, !dbg !4961

do.body:                                          ; preds = %entry
  %rem = and i64 %bit_index, 63, !dbg !4965
  %shl = shl i64 1, %rem, !dbg !4966
  call void @llvm.dbg.value(metadata i64 %shl, metadata !4954, metadata !DIExpression()), !dbg !4957
  %add.ptr = getelementptr inbounds i64, i64* %1, i64 %div, !dbg !4967
  %sub6 = sub nsw i64 %conv, %div, !dbg !4967
  %call = tail call i64 @mpn_sub_1(i64* %add.ptr, i64* %add.ptr, i64 %sub6, i64 %shl) #10, !dbg !4967
  call void @llvm.dbg.value(metadata i64 %call, metadata !4955, metadata !DIExpression()), !dbg !4968
  %cmp7 = icmp eq i64 %call, 0, !dbg !4969
  br i1 %cmp7, label %do.end, label %if.else10, !dbg !4972

if.else10:                                        ; preds = %do.body
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3571, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.mpz_abs_sub_bit, i64 0, i64 0)) #8, !dbg !4969
  unreachable, !dbg !4969

do.end:                                           ; preds = %do.body
  %sub12 = add nsw i64 %conv, -1, !dbg !4973
  %arrayidx = getelementptr inbounds i64, i64* %1, i64 %sub12, !dbg !4974
  %2 = load i64, i64* %arrayidx, align 8, !dbg !4974, !tbaa !168
  %cmp13 = icmp eq i64 %2, 0, !dbg !4975
  %conv15 = zext i1 %cmp13 to i64, !dbg !4976
  %sub16 = sub nsw i64 %conv, %conv15, !dbg !4977
  call void @llvm.dbg.value(metadata i64 %sub16, metadata !4951, metadata !DIExpression()), !dbg !4957
  %3 = load i32, i32* %_mp_size, align 4, !dbg !4978, !tbaa !1330
  %cmp18 = icmp slt i32 %3, 0, !dbg !4979
  %sub21 = sub nsw i64 0, %sub16, !dbg !4980
  %cond24 = select i1 %cmp18, i64 %sub21, i64 %sub16, !dbg !4980
  %conv25 = trunc i64 %cond24 to i32, !dbg !4980
  store i32 %conv25, i32* %_mp_size, align 4, !dbg !4981, !tbaa !1330
  ret void, !dbg !4982
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_clrbit(%struct.__mpz_struct* %d, i64 %bit_index) local_unnamed_addr #0 !dbg !4983 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !4985, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i64 %bit_index, metadata !4986, metadata !DIExpression()), !dbg !4987
  %call = tail call i32 @mpz_tstbit(%struct.__mpz_struct* %d, i64 %bit_index) #10, !dbg !4988
  %tobool = icmp eq i32 %call, 0, !dbg !4988
  br i1 %tobool, label %if.end2, label %if.then, !dbg !4990

if.then:                                          ; preds = %entry
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 1, !dbg !4991
  %0 = load i32, i32* %_mp_size, align 4, !dbg !4991, !tbaa !1330
  %cmp = icmp sgt i32 %0, -1, !dbg !4994
  br i1 %cmp, label %if.then1, label %if.else, !dbg !4995

if.then1:                                         ; preds = %if.then
  tail call fastcc void @mpz_abs_sub_bit(%struct.__mpz_struct* %d, i64 %bit_index) #10, !dbg !4996
  br label %if.end2, !dbg !4996

if.else:                                          ; preds = %if.then
  tail call fastcc void @mpz_abs_add_bit(%struct.__mpz_struct* %d, i64 %bit_index) #10, !dbg !4997
  br label %if.end2

if.end2:                                          ; preds = %entry, %if.then1, %if.else
  ret void, !dbg !4998
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_combit(%struct.__mpz_struct* %d, i64 %bit_index) local_unnamed_addr #0 !dbg !4999 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %d, metadata !5001, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i64 %bit_index, metadata !5002, metadata !DIExpression()), !dbg !5003
  %call = tail call i32 @mpz_tstbit(%struct.__mpz_struct* %d, i64 %bit_index) #10, !dbg !5004
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %d, i64 0, i32 1, !dbg !5006
  %0 = load i32, i32* %_mp_size, align 4, !dbg !5006, !tbaa !1330
  %.lobit = lshr i32 %0, 31, !dbg !5007
  %tobool = icmp eq i32 %call, %.lobit, !dbg !5008
  br i1 %tobool, label %if.else, label %if.then, !dbg !5009

if.then:                                          ; preds = %entry
  tail call fastcc void @mpz_abs_sub_bit(%struct.__mpz_struct* %d, i64 %bit_index) #10, !dbg !5010
  br label %if.end, !dbg !5010

if.else:                                          ; preds = %entry
  tail call fastcc void @mpz_abs_add_bit(%struct.__mpz_struct* %d, i64 %bit_index) #10, !dbg !5011
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5012
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_com(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !5013 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !5015, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !5016, metadata !DIExpression()), !dbg !5017
  tail call void @mpz_neg(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u) #10, !dbg !5018
  tail call void @mpz_sub_ui(%struct.__mpz_struct* %r, %struct.__mpz_struct* %r, i64 1) #10, !dbg !5019
  ret void, !dbg !5020
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_and(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !5021 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !5023, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !5024, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !5025, metadata !DIExpression()), !dbg !5048
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !5049
  %0 = load i32, i32* %_mp_size, align 4, !dbg !5049, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !5049
  %sub = sub nsw i32 0, %0, !dbg !5049
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !5049
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5026, metadata !DIExpression()), !dbg !5048
  %_mp_size3 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 1, !dbg !5050
  %1 = load i32, i32* %_mp_size3, align 4, !dbg !5050, !tbaa !1330
  %cmp4 = icmp slt i32 %1, 0, !dbg !5050
  %sub10 = sub nsw i32 0, %1, !dbg !5050
  %cond12 = select i1 %cmp4, i32 %sub10, i32 %1, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %cond12, metadata !5027, metadata !DIExpression()), !dbg !5048
  %cmp14 = icmp ult i32 %cond, %cond12, !dbg !5051
  %spec.select4 = select i1 %cmp14, i32 %cond, i32 %cond12, !dbg !5052
  %2 = zext i32 %spec.select4 to i64, !dbg !5052
  %spec.select2 = select i1 %cmp14, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v, !dbg !5052
  %spec.select3 = select i1 %cmp14, %struct.__mpz_struct* %v, %struct.__mpz_struct* %u, !dbg !5052
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %spec.select3, metadata !5024, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %spec.select2, metadata !5025, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i64 undef, metadata !5026, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i64 %2, metadata !5027, metadata !DIExpression()), !dbg !5048
  %cmp19 = icmp eq i32 %spec.select4, 0, !dbg !5053
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !5055

if.then21:                                        ; preds = %entry
  %_mp_size22 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !5056
  store i32 0, i32* %_mp_size22, align 4, !dbg !5058, !tbaa !1330
  br label %cleanup.cont, !dbg !5059

if.end23:                                         ; preds = %entry
  %spec.select1.v = select i1 %cmp14, i32 %cond12, i32 %cond, !dbg !5052
  %spec.select1 = zext i32 %spec.select1.v to i64, !dbg !5052
  call void @llvm.dbg.value(metadata i64 %spec.select1, metadata !5026, metadata !DIExpression()), !dbg !5048
  %_mp_size24 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select3, i64 0, i32 1, !dbg !5060
  %3 = load i32, i32* %_mp_size24, align 4, !dbg !5060, !tbaa !1330
  %.lobit = lshr i32 %3, 31, !dbg !5061
  %conv27 = zext i32 %.lobit to i64, !dbg !5062
  call void @llvm.dbg.value(metadata i64 %conv27, metadata !5036, metadata !DIExpression()), !dbg !5048
  %_mp_size28 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select2, i64 0, i32 1, !dbg !5063
  %4 = load i32, i32* %_mp_size28, align 4, !dbg !5063, !tbaa !1330
  %.lobit5 = lshr i32 %4, 31, !dbg !5064
  %conv31 = zext i32 %.lobit5 to i64, !dbg !5065
  call void @llvm.dbg.value(metadata i64 %conv31, metadata !5037, metadata !DIExpression()), !dbg !5048
  %and6 = and i32 %.lobit, %.lobit5, !dbg !5066
  %and = zext i32 %and6 to i64, !dbg !5066
  call void @llvm.dbg.value(metadata i64 %and, metadata !5038, metadata !DIExpression()), !dbg !5048
  %sub32 = sub nsw i64 0, %conv27, !dbg !5067
  call void @llvm.dbg.value(metadata i64 %sub32, metadata !5033, metadata !DIExpression()), !dbg !5048
  %sub33 = sub nsw i64 0, %conv31, !dbg !5068
  call void @llvm.dbg.value(metadata i64 %sub33, metadata !5034, metadata !DIExpression()), !dbg !5048
  %sub34 = sub nsw i64 0, %and, !dbg !5069
  call void @llvm.dbg.value(metadata i64 %sub34, metadata !5035, metadata !DIExpression()), !dbg !5048
  %tobool = icmp eq i32 %.lobit5, 0, !dbg !5070
  %un.0.vn.0 = select i1 %tobool, i64 %2, i64 %spec.select1, !dbg !5070
  call void @llvm.dbg.value(metadata i64 %un.0.vn.0, metadata !5028, metadata !DIExpression()), !dbg !5048
  %add = add nuw nsw i64 %un.0.vn.0, %and, !dbg !5071
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !5071
  %5 = load i32, i32* %_mp_alloc, align 8, !dbg !5071, !tbaa !1326
  %conv39 = sext i32 %5 to i64, !dbg !5071
  %cmp40 = icmp ugt i64 %add, %conv39, !dbg !5071
  br i1 %cmp40, label %cond.true42, label %cond.false44, !dbg !5071

cond.true42:                                      ; preds = %if.end23
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %add) #10, !dbg !5071
  br label %cond.end45, !dbg !5071

cond.false44:                                     ; preds = %if.end23
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !5071
  %6 = bitcast i64** %_mp_d to i8**, !dbg !5071
  %7 = load i8*, i8** %6, align 8, !dbg !5071, !tbaa !1334
  br label %cond.end45, !dbg !5071

cond.end45:                                       ; preds = %cond.false44, %cond.true42
  %cond46 = phi i8* [ %call, %cond.true42 ], [ %7, %cond.false44 ], !dbg !5071
  %8 = bitcast i8* %cond46 to i64*, !dbg !5071
  call void @llvm.dbg.value(metadata i64* %8, metadata !5032, metadata !DIExpression()), !dbg !5048
  %_mp_d47 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select3, i64 0, i32 2, !dbg !5072
  %9 = load i64*, i64** %_mp_d47, align 8, !dbg !5072, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %9, metadata !5030, metadata !DIExpression()), !dbg !5048
  %_mp_d48 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select2, i64 0, i32 2, !dbg !5073
  %10 = load i64*, i64** %_mp_d48, align 8, !dbg !5073, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %10, metadata !5031, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i64 0, metadata !5029, metadata !DIExpression()), !dbg !5048
  br label %do.body49, !dbg !5074

do.body49:                                        ; preds = %do.body49, %cond.end45
  %uc.0 = phi i64 [ %conv27, %cond.end45 ], [ %conv53, %do.body49 ], !dbg !5048
  %vc.0 = phi i64 [ %conv31, %cond.end45 ], [ %conv59, %do.body49 ], !dbg !5048
  %rc.0 = phi i64 [ %and, %cond.end45 ], [ %conv65, %do.body49 ], !dbg !5048
  %i.0 = phi i64 [ 0, %cond.end45 ], [ %inc, %do.body49 ], !dbg !5048
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5029, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i64 %rc.0, metadata !5038, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i64 %vc.0, metadata !5037, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i64 %uc.0, metadata !5036, metadata !DIExpression()), !dbg !5048
  %arrayidx = getelementptr inbounds i64, i64* %9, i64 %i.0, !dbg !5075
  %11 = load i64, i64* %arrayidx, align 8, !dbg !5075, !tbaa !168
  %xor = xor i64 %11, %sub32, !dbg !5077
  %add50 = add i64 %xor, %uc.0, !dbg !5078
  call void @llvm.dbg.value(metadata i64 %add50, metadata !5039, metadata !DIExpression()), !dbg !5048
  %cmp51 = icmp ult i64 %add50, %uc.0, !dbg !5079
  %conv53 = zext i1 %cmp51 to i64, !dbg !5080
  call void @llvm.dbg.value(metadata i64 %conv53, metadata !5036, metadata !DIExpression()), !dbg !5048
  %arrayidx54 = getelementptr inbounds i64, i64* %10, i64 %i.0, !dbg !5081
  %12 = load i64, i64* %arrayidx54, align 8, !dbg !5081, !tbaa !168
  %xor55 = xor i64 %12, %sub33, !dbg !5082
  %add56 = add i64 %xor55, %vc.0, !dbg !5083
  call void @llvm.dbg.value(metadata i64 %add56, metadata !5040, metadata !DIExpression()), !dbg !5048
  %cmp57 = icmp ult i64 %add56, %vc.0, !dbg !5084
  %conv59 = zext i1 %cmp57 to i64, !dbg !5085
  call void @llvm.dbg.value(metadata i64 %conv59, metadata !5037, metadata !DIExpression()), !dbg !5048
  %and60 = and i64 %add50, %add56, !dbg !5086
  %xor61 = xor i64 %and60, %sub34, !dbg !5087
  %add62 = add i64 %xor61, %rc.0, !dbg !5088
  call void @llvm.dbg.value(metadata i64 %add62, metadata !5041, metadata !DIExpression()), !dbg !5048
  %cmp63 = icmp ult i64 %add62, %rc.0, !dbg !5089
  %conv65 = zext i1 %cmp63 to i64, !dbg !5090
  call void @llvm.dbg.value(metadata i64 %conv65, metadata !5038, metadata !DIExpression()), !dbg !5048
  %arrayidx66 = getelementptr inbounds i64, i64* %8, i64 %i.0, !dbg !5091
  store i64 %add62, i64* %arrayidx66, align 8, !dbg !5092, !tbaa !168
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5093
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5029, metadata !DIExpression()), !dbg !5048
  %cmp68 = icmp ult i64 %inc, %2, !dbg !5094
  br i1 %cmp68, label %do.body49, label %do.end70, !dbg !5095, !llvm.loop !5096

do.end70:                                         ; preds = %do.body49
  %conv53.lcssa = phi i64 [ %conv53, %do.body49 ], !dbg !5080
  %cmp57.lcssa = phi i1 [ %cmp57, %do.body49 ], !dbg !5084
  %conv65.lcssa = phi i64 [ %conv65, %do.body49 ], !dbg !5090
  %inc.lcssa = phi i64 [ %inc, %do.body49 ], !dbg !5093
  br i1 %cmp57.lcssa, label %if.else, label %for.cond.preheader, !dbg !5098

for.cond.preheader:                               ; preds = %do.end70
  br label %for.cond, !dbg !5100

if.else:                                          ; preds = %do.end70
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3669, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__.mpz_and, i64 0, i64 0)) #8, !dbg !5102
  unreachable, !dbg !5102

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %uc.1 = phi i64 [ %conv82, %for.body ], [ %conv53.lcssa, %for.cond.preheader ], !dbg !5048
  %rc.1 = phi i64 [ %conv88, %for.body ], [ %conv65.lcssa, %for.cond.preheader ], !dbg !5048
  %i.1 = phi i64 [ %inc90, %for.body ], [ %inc.lcssa, %for.cond.preheader ], !dbg !5048
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !5029, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i64 %rc.1, metadata !5038, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i64 %uc.1, metadata !5036, metadata !DIExpression()), !dbg !5048
  %cmp75 = icmp ult i64 %i.1, %un.0.vn.0, !dbg !5104
  br i1 %cmp75, label %for.body, label %for.end, !dbg !5100

for.body:                                         ; preds = %for.cond
  %arrayidx77 = getelementptr inbounds i64, i64* %9, i64 %i.1, !dbg !5106
  %13 = load i64, i64* %arrayidx77, align 8, !dbg !5106, !tbaa !168
  %xor78 = xor i64 %13, %sub32, !dbg !5108
  %add79 = add i64 %xor78, %uc.1, !dbg !5109
  call void @llvm.dbg.value(metadata i64 %add79, metadata !5039, metadata !DIExpression()), !dbg !5048
  %cmp80 = icmp ult i64 %add79, %uc.1, !dbg !5110
  %conv82 = zext i1 %cmp80 to i64, !dbg !5111
  call void @llvm.dbg.value(metadata i64 %conv82, metadata !5036, metadata !DIExpression()), !dbg !5048
  %and83 = and i64 %add79, %sub33, !dbg !5112
  %xor84 = xor i64 %and83, %sub34, !dbg !5113
  %add85 = add i64 %xor84, %rc.1, !dbg !5114
  call void @llvm.dbg.value(metadata i64 %add85, metadata !5041, metadata !DIExpression()), !dbg !5048
  %cmp86 = icmp ult i64 %add85, %rc.1, !dbg !5115
  %conv88 = zext i1 %cmp86 to i64, !dbg !5116
  call void @llvm.dbg.value(metadata i64 %conv88, metadata !5038, metadata !DIExpression()), !dbg !5048
  %arrayidx89 = getelementptr inbounds i64, i64* %8, i64 %i.1, !dbg !5117
  store i64 %add85, i64* %arrayidx89, align 8, !dbg !5118, !tbaa !168
  %inc90 = add nuw nsw i64 %i.1, 1, !dbg !5119
  call void @llvm.dbg.value(metadata i64 %inc90, metadata !5029, metadata !DIExpression()), !dbg !5048
  br label %for.cond, !dbg !5120, !llvm.loop !5121

for.end:                                          ; preds = %for.cond
  %rc.1.lcssa = phi i64 [ %rc.1, %for.cond ], !dbg !5048
  call void @llvm.dbg.value(metadata i64 %rc.1.lcssa, metadata !5038, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i64 %rc.1.lcssa, metadata !5038, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i64 %rc.1.lcssa, metadata !5038, metadata !DIExpression()), !dbg !5048
  %tobool91 = icmp eq i64 %rc.1.lcssa, 0, !dbg !5123
  br i1 %tobool91, label %if.else95, label %if.then92, !dbg !5125

if.then92:                                        ; preds = %for.end
  %inc93 = add nuw nsw i64 %un.0.vn.0, 1, !dbg !5126
  call void @llvm.dbg.value(metadata i64 %inc93, metadata !5028, metadata !DIExpression()), !dbg !5048
  %arrayidx94 = getelementptr inbounds i64, i64* %8, i64 %un.0.vn.0, !dbg !5127
  store i64 %rc.1.lcssa, i64* %arrayidx94, align 8, !dbg !5128, !tbaa !168
  br label %if.end97, !dbg !5127

if.else95:                                        ; preds = %for.end
  %call96 = tail call fastcc i64 @mpn_normalized_size(i64* %8, i64 %un.0.vn.0) #10, !dbg !5129
  call void @llvm.dbg.value(metadata i64 %call96, metadata !5028, metadata !DIExpression()), !dbg !5048
  br label %if.end97

if.end97:                                         ; preds = %if.else95, %if.then92
  %rn.0 = phi i64 [ %inc93, %if.then92 ], [ %call96, %if.else95 ], !dbg !5130
  call void @llvm.dbg.value(metadata i64 %rn.0, metadata !5028, metadata !DIExpression()), !dbg !5048
  %tobool98 = icmp eq i32 %and6, 0, !dbg !5131
  %sub100 = sub nsw i64 0, %rn.0, !dbg !5131
  %cond103 = select i1 %tobool98, i64 %rn.0, i64 %sub100, !dbg !5131
  %conv104 = trunc i64 %cond103 to i32, !dbg !5131
  %_mp_size105 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !5132
  store i32 %conv104, i32* %_mp_size105, align 4, !dbg !5133, !tbaa !1330
  br label %cleanup.cont, !dbg !5134

cleanup.cont:                                     ; preds = %if.then21, %if.end97
  ret void, !dbg !5134
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_ior(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !5135 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !5137, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !5138, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !5139, metadata !DIExpression()), !dbg !5162
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !5163
  %0 = load i32, i32* %_mp_size, align 4, !dbg !5163, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !5163
  %sub = sub nsw i32 0, %0, !dbg !5163
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !5163
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5140, metadata !DIExpression()), !dbg !5162
  %_mp_size3 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 1, !dbg !5164
  %1 = load i32, i32* %_mp_size3, align 4, !dbg !5164, !tbaa !1330
  %cmp4 = icmp slt i32 %1, 0, !dbg !5164
  %sub10 = sub nsw i32 0, %1, !dbg !5164
  %cond12 = select i1 %cmp4, i32 %sub10, i32 %1, !dbg !5164
  call void @llvm.dbg.value(metadata i32 %cond12, metadata !5141, metadata !DIExpression()), !dbg !5162
  %cmp14 = icmp ult i32 %cond, %cond12, !dbg !5165
  %spec.select4 = select i1 %cmp14, i32 %cond, i32 %cond12, !dbg !5166
  %2 = zext i32 %spec.select4 to i64, !dbg !5166
  %spec.select2 = select i1 %cmp14, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v, !dbg !5166
  %spec.select3 = select i1 %cmp14, %struct.__mpz_struct* %v, %struct.__mpz_struct* %u, !dbg !5166
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %spec.select3, metadata !5138, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %spec.select2, metadata !5139, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i64 undef, metadata !5140, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i64 %2, metadata !5141, metadata !DIExpression()), !dbg !5162
  %cmp19 = icmp eq i32 %spec.select4, 0, !dbg !5167
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !5169

if.then21:                                        ; preds = %entry
  tail call void @mpz_set(%struct.__mpz_struct* %r, %struct.__mpz_struct* %spec.select3) #10, !dbg !5170
  br label %cleanup.cont, !dbg !5172

if.end22:                                         ; preds = %entry
  %spec.select1.v = select i1 %cmp14, i32 %cond12, i32 %cond, !dbg !5166
  %spec.select1 = zext i32 %spec.select1.v to i64, !dbg !5166
  call void @llvm.dbg.value(metadata i64 %spec.select1, metadata !5140, metadata !DIExpression()), !dbg !5162
  %_mp_size23 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select3, i64 0, i32 1, !dbg !5173
  %3 = load i32, i32* %_mp_size23, align 4, !dbg !5173, !tbaa !1330
  %.lobit = lshr i32 %3, 31, !dbg !5174
  %conv26 = zext i32 %.lobit to i64, !dbg !5175
  call void @llvm.dbg.value(metadata i64 %conv26, metadata !5150, metadata !DIExpression()), !dbg !5162
  %_mp_size27 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select2, i64 0, i32 1, !dbg !5176
  %4 = load i32, i32* %_mp_size27, align 4, !dbg !5176, !tbaa !1330
  %.lobit5 = lshr i32 %4, 31, !dbg !5177
  %conv30 = zext i32 %.lobit5 to i64, !dbg !5178
  call void @llvm.dbg.value(metadata i64 %conv30, metadata !5151, metadata !DIExpression()), !dbg !5162
  %or6 = or i32 %.lobit, %.lobit5, !dbg !5179
  %or = zext i32 %or6 to i64, !dbg !5179
  call void @llvm.dbg.value(metadata i64 %or, metadata !5152, metadata !DIExpression()), !dbg !5162
  %sub31 = sub nsw i64 0, %conv26, !dbg !5180
  call void @llvm.dbg.value(metadata i64 %sub31, metadata !5147, metadata !DIExpression()), !dbg !5162
  %sub32 = sub nsw i64 0, %conv30, !dbg !5181
  call void @llvm.dbg.value(metadata i64 %sub32, metadata !5148, metadata !DIExpression()), !dbg !5162
  %sub33 = sub nsw i64 0, %or, !dbg !5182
  call void @llvm.dbg.value(metadata i64 %sub33, metadata !5149, metadata !DIExpression()), !dbg !5162
  %tobool = icmp eq i32 %.lobit5, 0, !dbg !5183
  %vn.0.un.0 = select i1 %tobool, i64 %spec.select1, i64 %2, !dbg !5183
  call void @llvm.dbg.value(metadata i64 %vn.0.un.0, metadata !5142, metadata !DIExpression()), !dbg !5162
  %add = add nuw nsw i64 %vn.0.un.0, %or, !dbg !5184
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !5184
  %5 = load i32, i32* %_mp_alloc, align 8, !dbg !5184, !tbaa !1326
  %conv38 = sext i32 %5 to i64, !dbg !5184
  %cmp39 = icmp ugt i64 %add, %conv38, !dbg !5184
  br i1 %cmp39, label %cond.true41, label %cond.false43, !dbg !5184

cond.true41:                                      ; preds = %if.end22
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %add) #10, !dbg !5184
  br label %cond.end44, !dbg !5184

cond.false43:                                     ; preds = %if.end22
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !5184
  %6 = bitcast i64** %_mp_d to i8**, !dbg !5184
  %7 = load i8*, i8** %6, align 8, !dbg !5184, !tbaa !1334
  br label %cond.end44, !dbg !5184

cond.end44:                                       ; preds = %cond.false43, %cond.true41
  %cond45 = phi i8* [ %call, %cond.true41 ], [ %7, %cond.false43 ], !dbg !5184
  %8 = bitcast i8* %cond45 to i64*, !dbg !5184
  call void @llvm.dbg.value(metadata i64* %8, metadata !5146, metadata !DIExpression()), !dbg !5162
  %_mp_d46 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select3, i64 0, i32 2, !dbg !5185
  %9 = load i64*, i64** %_mp_d46, align 8, !dbg !5185, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %9, metadata !5144, metadata !DIExpression()), !dbg !5162
  %_mp_d47 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select2, i64 0, i32 2, !dbg !5186
  %10 = load i64*, i64** %_mp_d47, align 8, !dbg !5186, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %10, metadata !5145, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i64 0, metadata !5143, metadata !DIExpression()), !dbg !5162
  br label %do.body48, !dbg !5187

do.body48:                                        ; preds = %do.body48, %cond.end44
  %uc.0 = phi i64 [ %conv26, %cond.end44 ], [ %conv52, %do.body48 ], !dbg !5162
  %vc.0 = phi i64 [ %conv30, %cond.end44 ], [ %conv58, %do.body48 ], !dbg !5162
  %rc.0 = phi i64 [ %or, %cond.end44 ], [ %conv64, %do.body48 ], !dbg !5162
  %i.0 = phi i64 [ 0, %cond.end44 ], [ %inc, %do.body48 ], !dbg !5162
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5143, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i64 %rc.0, metadata !5152, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i64 %vc.0, metadata !5151, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i64 %uc.0, metadata !5150, metadata !DIExpression()), !dbg !5162
  %arrayidx = getelementptr inbounds i64, i64* %9, i64 %i.0, !dbg !5188
  %11 = load i64, i64* %arrayidx, align 8, !dbg !5188, !tbaa !168
  %xor = xor i64 %11, %sub31, !dbg !5190
  %add49 = add i64 %xor, %uc.0, !dbg !5191
  call void @llvm.dbg.value(metadata i64 %add49, metadata !5153, metadata !DIExpression()), !dbg !5162
  %cmp50 = icmp ult i64 %add49, %uc.0, !dbg !5192
  %conv52 = zext i1 %cmp50 to i64, !dbg !5193
  call void @llvm.dbg.value(metadata i64 %conv52, metadata !5150, metadata !DIExpression()), !dbg !5162
  %arrayidx53 = getelementptr inbounds i64, i64* %10, i64 %i.0, !dbg !5194
  %12 = load i64, i64* %arrayidx53, align 8, !dbg !5194, !tbaa !168
  %xor54 = xor i64 %12, %sub32, !dbg !5195
  %add55 = add i64 %xor54, %vc.0, !dbg !5196
  call void @llvm.dbg.value(metadata i64 %add55, metadata !5154, metadata !DIExpression()), !dbg !5162
  %cmp56 = icmp ult i64 %add55, %vc.0, !dbg !5197
  %conv58 = zext i1 %cmp56 to i64, !dbg !5198
  call void @llvm.dbg.value(metadata i64 %conv58, metadata !5151, metadata !DIExpression()), !dbg !5162
  %or59 = or i64 %add49, %add55, !dbg !5199
  %xor60 = xor i64 %or59, %sub33, !dbg !5200
  %add61 = add i64 %xor60, %rc.0, !dbg !5201
  call void @llvm.dbg.value(metadata i64 %add61, metadata !5155, metadata !DIExpression()), !dbg !5162
  %cmp62 = icmp ult i64 %add61, %rc.0, !dbg !5202
  %conv64 = zext i1 %cmp62 to i64, !dbg !5203
  call void @llvm.dbg.value(metadata i64 %conv64, metadata !5152, metadata !DIExpression()), !dbg !5162
  %arrayidx65 = getelementptr inbounds i64, i64* %8, i64 %i.0, !dbg !5204
  store i64 %add61, i64* %arrayidx65, align 8, !dbg !5205, !tbaa !168
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5206
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5143, metadata !DIExpression()), !dbg !5162
  %cmp67 = icmp ult i64 %inc, %2, !dbg !5207
  br i1 %cmp67, label %do.body48, label %do.end69, !dbg !5208, !llvm.loop !5209

do.end69:                                         ; preds = %do.body48
  %conv52.lcssa = phi i64 [ %conv52, %do.body48 ], !dbg !5193
  %cmp56.lcssa = phi i1 [ %cmp56, %do.body48 ], !dbg !5197
  %conv64.lcssa = phi i64 [ %conv64, %do.body48 ], !dbg !5203
  %inc.lcssa = phi i64 [ %inc, %do.body48 ], !dbg !5206
  br i1 %cmp56.lcssa, label %if.else, label %for.cond.preheader, !dbg !5211

for.cond.preheader:                               ; preds = %do.end69
  br label %for.cond, !dbg !5213

if.else:                                          ; preds = %do.end69
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3742, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__.mpz_ior, i64 0, i64 0)) #8, !dbg !5215
  unreachable, !dbg !5215

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %uc.1 = phi i64 [ %conv81, %for.body ], [ %conv52.lcssa, %for.cond.preheader ], !dbg !5162
  %rc.1 = phi i64 [ %conv87, %for.body ], [ %conv64.lcssa, %for.cond.preheader ], !dbg !5162
  %i.1 = phi i64 [ %inc89, %for.body ], [ %inc.lcssa, %for.cond.preheader ], !dbg !5162
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !5143, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i64 %rc.1, metadata !5152, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i64 %uc.1, metadata !5150, metadata !DIExpression()), !dbg !5162
  %cmp74 = icmp ult i64 %i.1, %vn.0.un.0, !dbg !5217
  br i1 %cmp74, label %for.body, label %for.end, !dbg !5213

for.body:                                         ; preds = %for.cond
  %arrayidx76 = getelementptr inbounds i64, i64* %9, i64 %i.1, !dbg !5219
  %13 = load i64, i64* %arrayidx76, align 8, !dbg !5219, !tbaa !168
  %xor77 = xor i64 %13, %sub31, !dbg !5221
  %add78 = add i64 %xor77, %uc.1, !dbg !5222
  call void @llvm.dbg.value(metadata i64 %add78, metadata !5153, metadata !DIExpression()), !dbg !5162
  %cmp79 = icmp ult i64 %add78, %uc.1, !dbg !5223
  %conv81 = zext i1 %cmp79 to i64, !dbg !5224
  call void @llvm.dbg.value(metadata i64 %conv81, metadata !5150, metadata !DIExpression()), !dbg !5162
  %or82 = or i64 %add78, %sub32, !dbg !5225
  %xor83 = xor i64 %or82, %sub33, !dbg !5226
  %add84 = add i64 %xor83, %rc.1, !dbg !5227
  call void @llvm.dbg.value(metadata i64 %add84, metadata !5155, metadata !DIExpression()), !dbg !5162
  %cmp85 = icmp ult i64 %add84, %rc.1, !dbg !5228
  %conv87 = zext i1 %cmp85 to i64, !dbg !5229
  call void @llvm.dbg.value(metadata i64 %conv87, metadata !5152, metadata !DIExpression()), !dbg !5162
  %arrayidx88 = getelementptr inbounds i64, i64* %8, i64 %i.1, !dbg !5230
  store i64 %add84, i64* %arrayidx88, align 8, !dbg !5231, !tbaa !168
  %inc89 = add nuw nsw i64 %i.1, 1, !dbg !5232
  call void @llvm.dbg.value(metadata i64 %inc89, metadata !5143, metadata !DIExpression()), !dbg !5162
  br label %for.cond, !dbg !5233, !llvm.loop !5234

for.end:                                          ; preds = %for.cond
  %rc.1.lcssa = phi i64 [ %rc.1, %for.cond ], !dbg !5162
  call void @llvm.dbg.value(metadata i64 %rc.1.lcssa, metadata !5152, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i64 %rc.1.lcssa, metadata !5152, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i64 %rc.1.lcssa, metadata !5152, metadata !DIExpression()), !dbg !5162
  %tobool90 = icmp eq i64 %rc.1.lcssa, 0, !dbg !5236
  br i1 %tobool90, label %if.else94, label %if.then91, !dbg !5238

if.then91:                                        ; preds = %for.end
  %inc92 = add nuw nsw i64 %vn.0.un.0, 1, !dbg !5239
  call void @llvm.dbg.value(metadata i64 %inc92, metadata !5142, metadata !DIExpression()), !dbg !5162
  %arrayidx93 = getelementptr inbounds i64, i64* %8, i64 %vn.0.un.0, !dbg !5240
  store i64 %rc.1.lcssa, i64* %arrayidx93, align 8, !dbg !5241, !tbaa !168
  br label %if.end96, !dbg !5240

if.else94:                                        ; preds = %for.end
  %call95 = tail call fastcc i64 @mpn_normalized_size(i64* %8, i64 %vn.0.un.0) #10, !dbg !5242
  call void @llvm.dbg.value(metadata i64 %call95, metadata !5142, metadata !DIExpression()), !dbg !5162
  br label %if.end96

if.end96:                                         ; preds = %if.else94, %if.then91
  %rn.0 = phi i64 [ %inc92, %if.then91 ], [ %call95, %if.else94 ], !dbg !5243
  call void @llvm.dbg.value(metadata i64 %rn.0, metadata !5142, metadata !DIExpression()), !dbg !5162
  %tobool97 = icmp eq i32 %or6, 0, !dbg !5244
  %sub99 = sub nsw i64 0, %rn.0, !dbg !5244
  %cond102 = select i1 %tobool97, i64 %rn.0, i64 %sub99, !dbg !5244
  %conv103 = trunc i64 %cond102 to i32, !dbg !5244
  %_mp_size104 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !5245
  store i32 %conv103, i32* %_mp_size104, align 4, !dbg !5246, !tbaa !1330
  br label %cleanup.cont, !dbg !5247

cleanup.cont:                                     ; preds = %if.then21, %if.end96
  ret void, !dbg !5247
}

; Function Attrs: nounwind uwtable
define dso_local void @mpz_xor(%struct.__mpz_struct* %r, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !5248 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !5250, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !5251, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !5252, metadata !DIExpression()), !dbg !5274
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !5275
  %0 = load i32, i32* %_mp_size, align 4, !dbg !5275, !tbaa !1330
  %cmp = icmp slt i32 %0, 0, !dbg !5275
  %sub = sub nsw i32 0, %0, !dbg !5275
  %cond = select i1 %cmp, i32 %sub, i32 %0, !dbg !5275
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5253, metadata !DIExpression()), !dbg !5274
  %_mp_size3 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 1, !dbg !5276
  %1 = load i32, i32* %_mp_size3, align 4, !dbg !5276, !tbaa !1330
  %cmp4 = icmp slt i32 %1, 0, !dbg !5276
  %sub10 = sub nsw i32 0, %1, !dbg !5276
  %cond12 = select i1 %cmp4, i32 %sub10, i32 %1, !dbg !5276
  call void @llvm.dbg.value(metadata i32 %cond12, metadata !5254, metadata !DIExpression()), !dbg !5274
  %cmp14 = icmp ult i32 %cond, %cond12, !dbg !5277
  %spec.select4 = select i1 %cmp14, i32 %cond, i32 %cond12, !dbg !5278
  %2 = zext i32 %spec.select4 to i64, !dbg !5278
  %spec.select1.v = select i1 %cmp14, i32 %cond12, i32 %cond, !dbg !5278
  %spec.select1 = zext i32 %spec.select1.v to i64, !dbg !5278
  %spec.select2 = select i1 %cmp14, %struct.__mpz_struct* %u, %struct.__mpz_struct* %v, !dbg !5278
  %spec.select3 = select i1 %cmp14, %struct.__mpz_struct* %v, %struct.__mpz_struct* %u, !dbg !5278
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %spec.select3, metadata !5251, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %spec.select2, metadata !5252, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i64 %spec.select1, metadata !5253, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i64 %2, metadata !5254, metadata !DIExpression()), !dbg !5274
  %cmp19 = icmp eq i32 %spec.select4, 0, !dbg !5279
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !5281

if.then21:                                        ; preds = %entry
  tail call void @mpz_set(%struct.__mpz_struct* %r, %struct.__mpz_struct* %spec.select3) #10, !dbg !5282
  br label %cleanup.cont, !dbg !5284

if.end22:                                         ; preds = %entry
  %_mp_size23 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select3, i64 0, i32 1, !dbg !5285
  %3 = load i32, i32* %_mp_size23, align 4, !dbg !5285, !tbaa !1330
  %.lobit = lshr i32 %3, 31, !dbg !5286
  %conv26 = zext i32 %.lobit to i64, !dbg !5287
  call void @llvm.dbg.value(metadata i64 %conv26, metadata !5262, metadata !DIExpression()), !dbg !5274
  %_mp_size27 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select2, i64 0, i32 1, !dbg !5288
  %4 = load i32, i32* %_mp_size27, align 4, !dbg !5288, !tbaa !1330
  %.lobit5 = lshr i32 %4, 31, !dbg !5289
  %conv30 = zext i32 %.lobit5 to i64, !dbg !5290
  call void @llvm.dbg.value(metadata i64 %conv30, metadata !5263, metadata !DIExpression()), !dbg !5274
  %xor6 = xor i32 %.lobit, %.lobit5, !dbg !5291
  %xor = zext i32 %xor6 to i64, !dbg !5291
  call void @llvm.dbg.value(metadata i64 %xor, metadata !5264, metadata !DIExpression()), !dbg !5274
  %sub31 = sub nsw i64 0, %conv26, !dbg !5292
  call void @llvm.dbg.value(metadata i64 %sub31, metadata !5259, metadata !DIExpression()), !dbg !5274
  %sub32 = sub nsw i64 0, %conv30, !dbg !5293
  call void @llvm.dbg.value(metadata i64 %sub32, metadata !5260, metadata !DIExpression()), !dbg !5274
  %sub33 = sub nsw i64 0, %xor, !dbg !5294
  call void @llvm.dbg.value(metadata i64 %sub33, metadata !5261, metadata !DIExpression()), !dbg !5274
  %add = add nuw nsw i64 %spec.select1, %xor, !dbg !5295
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !5295
  %5 = load i32, i32* %_mp_alloc, align 8, !dbg !5295, !tbaa !1326
  %conv34 = sext i32 %5 to i64, !dbg !5295
  %cmp35 = icmp ugt i64 %add, %conv34, !dbg !5295
  br i1 %cmp35, label %cond.true37, label %cond.false39, !dbg !5295

cond.true37:                                      ; preds = %if.end22
  %call = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %add) #10, !dbg !5295
  br label %cond.end40, !dbg !5295

cond.false39:                                     ; preds = %if.end22
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !5295
  %6 = bitcast i64** %_mp_d to i8**, !dbg !5295
  %7 = load i8*, i8** %6, align 8, !dbg !5295, !tbaa !1334
  br label %cond.end40, !dbg !5295

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi i8* [ %call, %cond.true37 ], [ %7, %cond.false39 ], !dbg !5295
  %8 = bitcast i8* %cond41 to i64*, !dbg !5295
  call void @llvm.dbg.value(metadata i64* %8, metadata !5258, metadata !DIExpression()), !dbg !5274
  %_mp_d42 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select3, i64 0, i32 2, !dbg !5296
  %9 = load i64*, i64** %_mp_d42, align 8, !dbg !5296, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %9, metadata !5256, metadata !DIExpression()), !dbg !5274
  %_mp_d43 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %spec.select2, i64 0, i32 2, !dbg !5297
  %10 = load i64*, i64** %_mp_d43, align 8, !dbg !5297, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %10, metadata !5257, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i64 0, metadata !5255, metadata !DIExpression()), !dbg !5274
  br label %do.body44, !dbg !5298

do.body44:                                        ; preds = %do.body44, %cond.end40
  %uc.0 = phi i64 [ %conv26, %cond.end40 ], [ %conv49, %do.body44 ], !dbg !5274
  %vc.0 = phi i64 [ %conv30, %cond.end40 ], [ %conv55, %do.body44 ], !dbg !5274
  %rc.0 = phi i64 [ %xor, %cond.end40 ], [ %conv61, %do.body44 ], !dbg !5274
  %i.0 = phi i64 [ 0, %cond.end40 ], [ %inc, %do.body44 ], !dbg !5274
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5255, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i64 %rc.0, metadata !5264, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i64 %vc.0, metadata !5263, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i64 %uc.0, metadata !5262, metadata !DIExpression()), !dbg !5274
  %arrayidx = getelementptr inbounds i64, i64* %9, i64 %i.0, !dbg !5299
  %11 = load i64, i64* %arrayidx, align 8, !dbg !5299, !tbaa !168
  %xor45 = xor i64 %11, %sub31, !dbg !5301
  %add46 = add i64 %xor45, %uc.0, !dbg !5302
  call void @llvm.dbg.value(metadata i64 %add46, metadata !5265, metadata !DIExpression()), !dbg !5274
  %cmp47 = icmp ult i64 %add46, %uc.0, !dbg !5303
  %conv49 = zext i1 %cmp47 to i64, !dbg !5304
  call void @llvm.dbg.value(metadata i64 %conv49, metadata !5262, metadata !DIExpression()), !dbg !5274
  %arrayidx50 = getelementptr inbounds i64, i64* %10, i64 %i.0, !dbg !5305
  %12 = load i64, i64* %arrayidx50, align 8, !dbg !5305, !tbaa !168
  %xor51 = xor i64 %12, %sub32, !dbg !5306
  %add52 = add i64 %xor51, %vc.0, !dbg !5307
  call void @llvm.dbg.value(metadata i64 %add52, metadata !5266, metadata !DIExpression()), !dbg !5274
  %cmp53 = icmp ult i64 %add52, %vc.0, !dbg !5308
  %conv55 = zext i1 %cmp53 to i64, !dbg !5309
  call void @llvm.dbg.value(metadata i64 %conv55, metadata !5263, metadata !DIExpression()), !dbg !5274
  %xor56 = xor i64 %add46, %add52, !dbg !5310
  %xor57 = xor i64 %xor56, %sub33, !dbg !5311
  %add58 = add i64 %xor57, %rc.0, !dbg !5312
  call void @llvm.dbg.value(metadata i64 %add58, metadata !5267, metadata !DIExpression()), !dbg !5274
  %cmp59 = icmp ult i64 %add58, %rc.0, !dbg !5313
  %conv61 = zext i1 %cmp59 to i64, !dbg !5314
  call void @llvm.dbg.value(metadata i64 %conv61, metadata !5264, metadata !DIExpression()), !dbg !5274
  %arrayidx62 = getelementptr inbounds i64, i64* %8, i64 %i.0, !dbg !5315
  store i64 %add58, i64* %arrayidx62, align 8, !dbg !5316, !tbaa !168
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5317
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5255, metadata !DIExpression()), !dbg !5274
  %cmp64 = icmp ult i64 %inc, %2, !dbg !5318
  br i1 %cmp64, label %do.body44, label %do.end66, !dbg !5319, !llvm.loop !5320

do.end66:                                         ; preds = %do.body44
  %conv49.lcssa = phi i64 [ %conv49, %do.body44 ], !dbg !5304
  %cmp53.lcssa = phi i1 [ %cmp53, %do.body44 ], !dbg !5308
  %conv61.lcssa = phi i64 [ %conv61, %do.body44 ], !dbg !5314
  %inc.lcssa = phi i64 [ %inc, %do.body44 ], !dbg !5317
  br i1 %cmp53.lcssa, label %if.else, label %for.cond.preheader, !dbg !5322

for.cond.preheader:                               ; preds = %do.end66
  br label %for.cond, !dbg !5324

if.else:                                          ; preds = %do.end66
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3811, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__.mpz_xor, i64 0, i64 0)) #8, !dbg !5326
  unreachable, !dbg !5326

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %uc.1 = phi i64 [ %conv78, %for.body ], [ %conv49.lcssa, %for.cond.preheader ], !dbg !5274
  %rc.1 = phi i64 [ %conv83, %for.body ], [ %conv61.lcssa, %for.cond.preheader ], !dbg !5274
  %i.1 = phi i64 [ %inc85, %for.body ], [ %inc.lcssa, %for.cond.preheader ], !dbg !5274
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !5255, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i64 %rc.1, metadata !5264, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i64 %uc.1, metadata !5262, metadata !DIExpression()), !dbg !5274
  %cmp71 = icmp ult i64 %i.1, %spec.select1, !dbg !5328
  br i1 %cmp71, label %for.body, label %for.end, !dbg !5324

for.body:                                         ; preds = %for.cond
  %arrayidx73 = getelementptr inbounds i64, i64* %9, i64 %i.1, !dbg !5330
  %13 = load i64, i64* %arrayidx73, align 8, !dbg !5330, !tbaa !168
  %xor74 = xor i64 %13, %sub31, !dbg !5332
  %add75 = add i64 %xor74, %uc.1, !dbg !5333
  call void @llvm.dbg.value(metadata i64 %add75, metadata !5265, metadata !DIExpression()), !dbg !5274
  %cmp76 = icmp ult i64 %add75, %uc.1, !dbg !5334
  %conv78 = zext i1 %cmp76 to i64, !dbg !5335
  call void @llvm.dbg.value(metadata i64 %conv78, metadata !5262, metadata !DIExpression()), !dbg !5274
  %xor79 = xor i64 %add75, %sub31, !dbg !5336
  %add80 = add i64 %xor79, %rc.1, !dbg !5337
  call void @llvm.dbg.value(metadata i64 %add80, metadata !5267, metadata !DIExpression()), !dbg !5274
  %cmp81 = icmp ult i64 %add80, %rc.1, !dbg !5338
  %conv83 = zext i1 %cmp81 to i64, !dbg !5339
  call void @llvm.dbg.value(metadata i64 %conv83, metadata !5264, metadata !DIExpression()), !dbg !5274
  %arrayidx84 = getelementptr inbounds i64, i64* %8, i64 %i.1, !dbg !5340
  store i64 %add80, i64* %arrayidx84, align 8, !dbg !5341, !tbaa !168
  %inc85 = add nuw nsw i64 %i.1, 1, !dbg !5342
  call void @llvm.dbg.value(metadata i64 %inc85, metadata !5255, metadata !DIExpression()), !dbg !5274
  br label %for.cond, !dbg !5343, !llvm.loop !5344

for.end:                                          ; preds = %for.cond
  %rc.1.lcssa = phi i64 [ %rc.1, %for.cond ], !dbg !5274
  call void @llvm.dbg.value(metadata i64 %rc.1.lcssa, metadata !5264, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i64 %rc.1.lcssa, metadata !5264, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i64 %rc.1.lcssa, metadata !5264, metadata !DIExpression()), !dbg !5274
  %tobool = icmp eq i64 %rc.1.lcssa, 0, !dbg !5346
  br i1 %tobool, label %if.else89, label %if.then86, !dbg !5348

if.then86:                                        ; preds = %for.end
  %inc87 = add nuw nsw i64 %spec.select1, 1, !dbg !5349
  call void @llvm.dbg.value(metadata i64 %inc87, metadata !5253, metadata !DIExpression()), !dbg !5274
  %arrayidx88 = getelementptr inbounds i64, i64* %8, i64 %spec.select1, !dbg !5350
  store i64 %rc.1.lcssa, i64* %arrayidx88, align 8, !dbg !5351, !tbaa !168
  br label %if.end91, !dbg !5350

if.else89:                                        ; preds = %for.end
  %call90 = tail call fastcc i64 @mpn_normalized_size(i64* %8, i64 %spec.select1) #10, !dbg !5352
  call void @llvm.dbg.value(metadata i64 %call90, metadata !5253, metadata !DIExpression()), !dbg !5274
  br label %if.end91

if.end91:                                         ; preds = %if.else89, %if.then86
  %un.1 = phi i64 [ %inc87, %if.then86 ], [ %call90, %if.else89 ], !dbg !5353
  call void @llvm.dbg.value(metadata i64 %un.1, metadata !5253, metadata !DIExpression()), !dbg !5274
  %tobool92 = icmp eq i32 %xor6, 0, !dbg !5354
  %sub94 = sub nsw i64 0, %un.1, !dbg !5354
  %cond97 = select i1 %tobool92, i64 %un.1, i64 %sub94, !dbg !5354
  %conv98 = trunc i64 %cond97 to i32, !dbg !5354
  %_mp_size99 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !5355
  store i32 %conv98, i32* %_mp_size99, align 4, !dbg !5356, !tbaa !1330
  br label %cleanup.cont, !dbg !5357

cleanup.cont:                                     ; preds = %if.then21, %if.end91
  ret void, !dbg !5357
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpn_popcount(i64* %p, i64 %n) local_unnamed_addr #0 !dbg !5358 {
entry:
  call void @llvm.dbg.value(metadata i64* %p, metadata !5362, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i64 %n, metadata !5363, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i64 0, metadata !5365, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i64 0, metadata !5364, metadata !DIExpression()), !dbg !5366
  br label %for.cond, !dbg !5367

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ], !dbg !5369
  %c.0 = phi i64 [ 0, %entry ], [ %add, %for.body ], !dbg !5369
  call void @llvm.dbg.value(metadata i64 %c.0, metadata !5365, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5364, metadata !DIExpression()), !dbg !5366
  %cmp = icmp slt i64 %i.0, %n, !dbg !5370
  br i1 %cmp, label %for.body, label %for.end, !dbg !5372

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i64, i64* %p, i64 %i.0, !dbg !5373
  %0 = load i64, i64* %arrayidx, align 8, !dbg !5373, !tbaa !168
  %call = tail call fastcc i32 @gmp_popcount_limb(i64 %0) #10, !dbg !5374
  %conv = zext i32 %call to i64, !dbg !5374
  %add = add i64 %c.0, %conv, !dbg !5375
  call void @llvm.dbg.value(metadata i64 %add, metadata !5365, metadata !DIExpression()), !dbg !5366
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5376
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5364, metadata !DIExpression()), !dbg !5366
  br label %for.cond, !dbg !5377, !llvm.loop !5378

for.end:                                          ; preds = %for.cond
  %c.0.lcssa = phi i64 [ %c.0, %for.cond ], !dbg !5369
  call void @llvm.dbg.value(metadata i64 %c.0.lcssa, metadata !5365, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i64 %c.0.lcssa, metadata !5365, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i64 %c.0.lcssa, metadata !5365, metadata !DIExpression()), !dbg !5366
  ret i64 %c.0.lcssa, !dbg !5380
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gmp_popcount_limb(i64 %x) unnamed_addr #0 !dbg !5381 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !5385, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 0, metadata !5386, metadata !DIExpression()), !dbg !5391
  br label %for.cond, !dbg !5392

for.cond:                                         ; preds = %for.body, %entry
  %c.0 = phi i32 [ 0, %entry ], [ %add13, %for.body ], !dbg !5393
  %x.addr.0 = phi i64 [ %x, %entry ], [ %shr14, %for.body ]
  call void @llvm.dbg.value(metadata i64 %x.addr.0, metadata !5385, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 %c.0, metadata !5386, metadata !DIExpression()), !dbg !5391
  %cmp = icmp eq i64 %x.addr.0, 0, !dbg !5394
  br i1 %cmp, label %for.end, label %for.body, !dbg !5395

for.body:                                         ; preds = %for.cond
  %shr = lshr i64 %x.addr.0, 1, !dbg !5396
  %and = and i64 %shr, 21845, !dbg !5397
  %and1 = and i64 %x.addr.0, 21845, !dbg !5398
  %add = add nuw nsw i64 %and, %and1, !dbg !5399
  %conv = trunc i64 %add to i32, !dbg !5400
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5387, metadata !DIExpression()), !dbg !5401
  %shr2 = lshr i32 %conv, 2, !dbg !5402
  %and3 = and i32 %shr2, 13107, !dbg !5403
  %and4 = and i32 %conv, 13107, !dbg !5404
  %add5 = add nuw nsw i32 %and3, %and4, !dbg !5405
  call void @llvm.dbg.value(metadata i32 %add5, metadata !5387, metadata !DIExpression()), !dbg !5401
  %shr6 = lshr i32 %add5, 4, !dbg !5406
  %and7 = and i32 %shr6, 1799, !dbg !5407
  %and8 = and i32 %add5, 1799, !dbg !5408
  %add9 = add nuw nsw i32 %and7, %and8, !dbg !5409
  call void @llvm.dbg.value(metadata i32 %add9, metadata !5387, metadata !DIExpression()), !dbg !5401
  %shr10 = lshr i32 %add9, 8, !dbg !5410
  %and11 = and i32 %add9, 15, !dbg !5411
  %add12 = add nuw nsw i32 %shr10, %and11, !dbg !5412
  call void @llvm.dbg.value(metadata i32 %add12, metadata !5387, metadata !DIExpression()), !dbg !5401
  %add13 = add i32 %c.0, %add12, !dbg !5413
  call void @llvm.dbg.value(metadata i32 %add13, metadata !5386, metadata !DIExpression()), !dbg !5391
  %shr14 = lshr i64 %x.addr.0, 16, !dbg !5414
  call void @llvm.dbg.value(metadata i64 %shr14, metadata !5385, metadata !DIExpression()), !dbg !5391
  br label %for.cond, !dbg !5415, !llvm.loop !5416

for.end:                                          ; preds = %for.cond
  %c.0.lcssa = phi i32 [ %c.0, %for.cond ], !dbg !5393
  call void @llvm.dbg.value(metadata i32 %c.0.lcssa, metadata !5386, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 %c.0.lcssa, metadata !5386, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 %c.0.lcssa, metadata !5386, metadata !DIExpression()), !dbg !5391
  ret i32 %c.0.lcssa, !dbg !5418
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_popcount(%struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !5419 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !5423, metadata !DIExpression()), !dbg !5425
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !5426
  %0 = load i32, i32* %_mp_size, align 4, !dbg !5426, !tbaa !1330
  call void @llvm.dbg.value(metadata i64 undef, metadata !5424, metadata !DIExpression()), !dbg !5425
  %cmp = icmp slt i32 %0, 0, !dbg !5427
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5429

if.end:                                           ; preds = %entry
  %conv = sext i32 %0 to i64, !dbg !5430
  call void @llvm.dbg.value(metadata i64 %conv, metadata !5424, metadata !DIExpression()), !dbg !5425
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !5431
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !5431, !tbaa !1334
  %call = tail call i64 @mpn_popcount(i64* %1, i64 %conv) #10, !dbg !5432
  br label %cleanup, !dbg !5433

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i64 [ %call, %if.end ], [ -1, %entry ], !dbg !5425
  ret i64 %retval.0, !dbg !5434
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_hamdist(%struct.__mpz_struct* %u, %struct.__mpz_struct* %v) local_unnamed_addr #0 !dbg !5435 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !5439, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %v, metadata !5440, metadata !DIExpression()), !dbg !5458
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !5459
  %0 = load i32, i32* %_mp_size, align 4, !dbg !5459, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !5460
  call void @llvm.dbg.value(metadata i64 %conv, metadata !5441, metadata !DIExpression()), !dbg !5458
  %_mp_size1 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 1, !dbg !5461
  %1 = load i32, i32* %_mp_size1, align 4, !dbg !5461, !tbaa !1330
  %conv2 = sext i32 %1 to i64, !dbg !5462
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !5442, metadata !DIExpression()), !dbg !5458
  %xor4 = xor i32 %0, %1, !dbg !5463
  %cmp = icmp slt i32 %xor4, 0, !dbg !5465
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5466

if.end:                                           ; preds = %entry
  %.lobit = lshr i32 %0, 31, !dbg !5467
  %conv6 = zext i32 %.lobit to i64, !dbg !5468
  call void @llvm.dbg.value(metadata i64 %conv6, metadata !5445, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %conv6, metadata !5444, metadata !DIExpression()), !dbg !5458
  %sub = sub nsw i64 0, %conv6, !dbg !5469
  call void @llvm.dbg.value(metadata i64 %sub, metadata !5448, metadata !DIExpression()), !dbg !5458
  %tobool = icmp eq i32 %.lobit, 0, !dbg !5470
  br i1 %tobool, label %if.end14, label %if.then7, !dbg !5472

if.then7:                                         ; preds = %if.end
  %cmp8 = icmp slt i32 %1, 0, !dbg !5473
  br i1 %cmp8, label %if.end11, label %if.else, !dbg !5477

if.else:                                          ; preds = %if.then7
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3889, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__.mpz_hamdist, i64 0, i64 0)) #8, !dbg !5473
  unreachable, !dbg !5473

if.end11:                                         ; preds = %if.then7
  %sub12 = sub nsw i64 0, %conv, !dbg !5478
  call void @llvm.dbg.value(metadata i64 %sub12, metadata !5441, metadata !DIExpression()), !dbg !5458
  %sub13 = sub nsw i64 0, %conv2, !dbg !5479
  call void @llvm.dbg.value(metadata i64 %sub13, metadata !5442, metadata !DIExpression()), !dbg !5458
  br label %if.end14, !dbg !5480

if.end14:                                         ; preds = %if.end, %if.end11
  %vn.0 = phi i64 [ %sub13, %if.end11 ], [ %conv2, %if.end ], !dbg !5458
  %un.0 = phi i64 [ %sub12, %if.end11 ], [ %conv, %if.end ], !dbg !5458
  call void @llvm.dbg.value(metadata i64 %un.0, metadata !5441, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %vn.0, metadata !5442, metadata !DIExpression()), !dbg !5458
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !5481
  %2 = load i64*, i64** %_mp_d, align 8, !dbg !5481, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %2, metadata !5449, metadata !DIExpression()), !dbg !5458
  %_mp_d15 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %v, i64 0, i32 2, !dbg !5482
  %3 = load i64*, i64** %_mp_d15, align 8, !dbg !5482, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %3, metadata !5450, metadata !DIExpression()), !dbg !5458
  %cmp16 = icmp slt i64 %un.0, %vn.0, !dbg !5483
  %spec.select = select i1 %cmp16, i64* %3, i64* %2, !dbg !5484
  %spec.select1 = select i1 %cmp16, i64* %2, i64* %3, !dbg !5484
  %spec.select2 = select i1 %cmp16, i64 %un.0, i64 %vn.0, !dbg !5484
  call void @llvm.dbg.value(metadata i64 %spec.select3, metadata !5441, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %spec.select2, metadata !5442, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64* %spec.select1, metadata !5450, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64* %spec.select, metadata !5449, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 0, metadata !5443, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 0, metadata !5451, metadata !DIExpression()), !dbg !5458
  br label %for.cond, !dbg !5485

for.cond:                                         ; preds = %for.body, %if.end14
  %vc.0 = phi i64 [ %conv6, %if.end14 ], [ %conv37, %for.body ], !dbg !5458
  %uc.0 = phi i64 [ %conv6, %if.end14 ], [ %conv31, %for.body ], !dbg !5458
  %i.0 = phi i64 [ 0, %if.end14 ], [ %inc, %for.body ], !dbg !5487
  %c.0 = phi i64 [ 0, %if.end14 ], [ %add40, %for.body ], !dbg !5487
  call void @llvm.dbg.value(metadata i64 %c.0, metadata !5451, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5443, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %uc.0, metadata !5444, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %vc.0, metadata !5445, metadata !DIExpression()), !dbg !5458
  %cmp26 = icmp slt i64 %i.0, %spec.select2, !dbg !5488
  br i1 %cmp26, label %for.body, label %for.end, !dbg !5490

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i64, i64* %spec.select, i64 %i.0, !dbg !5491
  %4 = load i64, i64* %arrayidx, align 8, !dbg !5491, !tbaa !168
  %xor28 = xor i64 %4, %sub, !dbg !5493
  %add = add i64 %xor28, %uc.0, !dbg !5494
  call void @llvm.dbg.value(metadata i64 %add, metadata !5446, metadata !DIExpression()), !dbg !5458
  %cmp29 = icmp ult i64 %add, %uc.0, !dbg !5495
  %conv31 = zext i1 %cmp29 to i64, !dbg !5496
  call void @llvm.dbg.value(metadata i64 %conv31, metadata !5444, metadata !DIExpression()), !dbg !5458
  %arrayidx32 = getelementptr inbounds i64, i64* %spec.select1, i64 %i.0, !dbg !5497
  %5 = load i64, i64* %arrayidx32, align 8, !dbg !5497, !tbaa !168
  %xor33 = xor i64 %5, %sub, !dbg !5498
  %add34 = add i64 %xor33, %vc.0, !dbg !5499
  call void @llvm.dbg.value(metadata i64 %add34, metadata !5447, metadata !DIExpression()), !dbg !5458
  %cmp35 = icmp ult i64 %add34, %vc.0, !dbg !5500
  %conv37 = zext i1 %cmp35 to i64, !dbg !5501
  call void @llvm.dbg.value(metadata i64 %conv37, metadata !5445, metadata !DIExpression()), !dbg !5458
  %xor38 = xor i64 %add, %add34, !dbg !5502
  %call = tail call fastcc i32 @gmp_popcount_limb(i64 %xor38) #10, !dbg !5503
  %conv39 = zext i32 %call to i64, !dbg !5503
  %add40 = add i64 %c.0, %conv39, !dbg !5504
  call void @llvm.dbg.value(metadata i64 %add40, metadata !5451, metadata !DIExpression()), !dbg !5458
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5505
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5443, metadata !DIExpression()), !dbg !5458
  br label %for.cond, !dbg !5506, !llvm.loop !5507

for.end:                                          ; preds = %for.cond
  %vc.0.lcssa = phi i64 [ %vc.0, %for.cond ], !dbg !5458
  %uc.0.lcssa = phi i64 [ %uc.0, %for.cond ], !dbg !5458
  %i.0.lcssa = phi i64 [ %i.0, %for.cond ], !dbg !5487
  %c.0.lcssa = phi i64 [ %c.0, %for.cond ], !dbg !5487
  call void @llvm.dbg.value(metadata i64 %vc.0.lcssa, metadata !5445, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %uc.0.lcssa, metadata !5444, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !5443, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %c.0.lcssa, metadata !5451, metadata !DIExpression()), !dbg !5458
  %spec.select3 = select i1 %cmp16, i64 %vn.0, i64 %un.0, !dbg !5484
  call void @llvm.dbg.value(metadata i64 %vc.0.lcssa, metadata !5445, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %uc.0.lcssa, metadata !5444, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !5443, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %c.0.lcssa, metadata !5451, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %vc.0.lcssa, metadata !5445, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %uc.0.lcssa, metadata !5444, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !5443, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %c.0.lcssa, metadata !5451, metadata !DIExpression()), !dbg !5458
  %cmp41 = icmp eq i64 %vc.0.lcssa, 0, !dbg !5509
  br i1 %cmp41, label %for.cond46.preheader, label %if.else44, !dbg !5512

for.cond46.preheader:                             ; preds = %for.end
  br label %for.cond46, !dbg !5513

if.else44:                                        ; preds = %for.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3910, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__.mpz_hamdist, i64 0, i64 0)) #8, !dbg !5509
  unreachable, !dbg !5509

for.cond46:                                       ; preds = %for.cond46.preheader, %for.body49
  %uc.1 = phi i64 [ %conv55, %for.body49 ], [ %uc.0.lcssa, %for.cond46.preheader ], !dbg !5458
  %i.1 = phi i64 [ %inc61, %for.body49 ], [ %i.0.lcssa, %for.cond46.preheader ], !dbg !5458
  %c.1 = phi i64 [ %add59, %for.body49 ], [ %c.0.lcssa, %for.cond46.preheader ], !dbg !5458
  call void @llvm.dbg.value(metadata i64 %c.1, metadata !5451, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !5443, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %uc.1, metadata !5444, metadata !DIExpression()), !dbg !5458
  %cmp47 = icmp slt i64 %i.1, %spec.select3, !dbg !5515
  br i1 %cmp47, label %for.body49, label %cleanup.loopexit, !dbg !5513

for.body49:                                       ; preds = %for.cond46
  %arrayidx50 = getelementptr inbounds i64, i64* %spec.select, i64 %i.1, !dbg !5517
  %6 = load i64, i64* %arrayidx50, align 8, !dbg !5517, !tbaa !168
  %xor51 = xor i64 %6, %sub, !dbg !5519
  %add52 = add i64 %xor51, %uc.1, !dbg !5520
  call void @llvm.dbg.value(metadata i64 %add52, metadata !5446, metadata !DIExpression()), !dbg !5458
  %cmp53 = icmp ult i64 %add52, %uc.1, !dbg !5521
  %conv55 = zext i1 %cmp53 to i64, !dbg !5522
  call void @llvm.dbg.value(metadata i64 %conv55, metadata !5444, metadata !DIExpression()), !dbg !5458
  %xor56 = xor i64 %add52, %sub, !dbg !5523
  %call57 = tail call fastcc i32 @gmp_popcount_limb(i64 %xor56) #10, !dbg !5524
  %conv58 = zext i32 %call57 to i64, !dbg !5524
  %add59 = add i64 %c.1, %conv58, !dbg !5525
  call void @llvm.dbg.value(metadata i64 %add59, metadata !5451, metadata !DIExpression()), !dbg !5458
  %inc61 = add nuw nsw i64 %i.1, 1, !dbg !5526
  call void @llvm.dbg.value(metadata i64 %inc61, metadata !5443, metadata !DIExpression()), !dbg !5458
  br label %for.cond46, !dbg !5527, !llvm.loop !5528

cleanup.loopexit:                                 ; preds = %for.cond46
  %c.1.lcssa = phi i64 [ %c.1, %for.cond46 ], !dbg !5458
  call void @llvm.dbg.value(metadata i64 %c.1.lcssa, metadata !5451, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %c.1.lcssa, metadata !5451, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i64 %c.1.lcssa, metadata !5451, metadata !DIExpression()), !dbg !5458
  br label %cleanup, !dbg !5530

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i64 [ -1, %entry ], [ %c.1.lcssa, %cleanup.loopexit ], !dbg !5458
  ret i64 %retval.0, !dbg !5530
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_scan0(%struct.__mpz_struct* %u, i64 %starting_bit) local_unnamed_addr #0 !dbg !5531 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !5533, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.value(metadata i64 %starting_bit, metadata !5534, metadata !DIExpression()), !dbg !5541
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !5542
  %0 = load i32, i32* %_mp_size, align 4, !dbg !5542, !tbaa !1330
  %conv = sext i32 %0 to i64, !dbg !5543
  call void @llvm.dbg.value(metadata i64 %conv, metadata !5536, metadata !DIExpression()), !dbg !5541
  %.lobit = lshr i32 %0, 31, !dbg !5544
  %.lobit.not = xor i32 %.lobit, 1, !dbg !5544
  %conv2 = zext i32 %.lobit.not to i64, !dbg !5545
  %sub = sub nsw i64 0, %conv2, !dbg !5546
  call void @llvm.dbg.value(metadata i64 %sub, metadata !5540, metadata !DIExpression()), !dbg !5541
  %cmp3 = icmp slt i64 %conv, 0, !dbg !5547
  %sub5 = sub nsw i64 0, %conv, !dbg !5547
  %cond = select i1 %cmp3, i64 %sub5, i64 %conv, !dbg !5547
  call void @llvm.dbg.value(metadata i64 %cond, metadata !5537, metadata !DIExpression()), !dbg !5541
  %div = lshr i64 %starting_bit, 6, !dbg !5548
  call void @llvm.dbg.value(metadata i64 %div, metadata !5538, metadata !DIExpression()), !dbg !5541
  %cmp6 = icmp slt i64 %div, %cond, !dbg !5549
  br i1 %cmp6, label %if.end, label %if.then, !dbg !5551

if.then:                                          ; preds = %entry
  %tobool = icmp eq i32 %.lobit.not, 0, !dbg !5552
  %starting_bit. = select i1 %tobool, i64 -1, i64 %starting_bit, !dbg !5552
  br label %cleanup, !dbg !5553

if.end:                                           ; preds = %entry
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !5554
  %1 = load i64*, i64** %_mp_d, align 8, !dbg !5554, !tbaa !1334
  call void @llvm.dbg.value(metadata i64* %1, metadata !5535, metadata !DIExpression()), !dbg !5541
  %arrayidx = getelementptr inbounds i64, i64* %1, i64 %div, !dbg !5555
  %2 = load i64, i64* %arrayidx, align 8, !dbg !5555, !tbaa !168
  %xor = xor i64 %2, %sub, !dbg !5556
  call void @llvm.dbg.value(metadata i64 %xor, metadata !5539, metadata !DIExpression()), !dbg !5541
  %cmp12 = icmp eq i32 %.lobit.not, 0, !dbg !5557
  br i1 %cmp12, label %if.then14, label %if.end19, !dbg !5559

if.then14:                                        ; preds = %if.end
  %call = tail call fastcc i64 @mpn_normalized_size(i64* %1, i64 %div) #10, !dbg !5560
  %cmp15 = icmp eq i64 %call, 0, !dbg !5560
  %conv17 = zext i1 %cmp15 to i64, !dbg !5560
  %sub18 = sub i64 %xor, %conv17, !dbg !5561
  call void @llvm.dbg.value(metadata i64 %sub18, metadata !5539, metadata !DIExpression()), !dbg !5541
  br label %if.end19, !dbg !5562

if.end19:                                         ; preds = %if.then14, %if.end
  %limb.0 = phi i64 [ %sub18, %if.then14 ], [ %xor, %if.end ], !dbg !5541
  call void @llvm.dbg.value(metadata i64 %limb.0, metadata !5539, metadata !DIExpression()), !dbg !5541
  %rem = and i64 %starting_bit, 63, !dbg !5563
  %shl = shl i64 -1, %rem, !dbg !5564
  %and = and i64 %limb.0, %shl, !dbg !5565
  call void @llvm.dbg.value(metadata i64 %and, metadata !5539, metadata !DIExpression()), !dbg !5541
  %call20 = tail call fastcc i64 @mpn_common_scan(i64 %and, i64 %div, i64* %1, i64 %cond, i64 %sub) #10, !dbg !5566
  br label %cleanup, !dbg !5567

cleanup:                                          ; preds = %if.end19, %if.then
  %retval.0 = phi i64 [ %starting_bit., %if.then ], [ %call20, %if.end19 ], !dbg !5541
  ret i64 %retval.0, !dbg !5568
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpn_limb_size_in_base_2(i64 %u) unnamed_addr #0 !dbg !5569 {
entry:
  call void @llvm.dbg.value(metadata i64 %u, metadata !5573, metadata !DIExpression()), !dbg !5578
  %cmp = icmp eq i64 %u, 0, !dbg !5579
  br i1 %cmp, label %if.else, label %for.cond.preheader, !dbg !5582

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5583

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1152, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.mpn_limb_size_in_base_2, i64 0, i64 0)) #8, !dbg !5579
  unreachable, !dbg !5579

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %__clz_x.0 = phi i64 [ %shl, %for.body ], [ %u, %for.cond.preheader ], !dbg !5585
  %__clz_c.0 = phi i32 [ %add, %for.body ], [ 0, %for.cond.preheader ], !dbg !5586
  call void @llvm.dbg.value(metadata i32 %__clz_c.0, metadata !5577, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i64 %__clz_x.0, metadata !5575, metadata !DIExpression()), !dbg !5585
  %cmp1 = icmp ult i64 %__clz_x.0, 72057594037927936, !dbg !5587
  br i1 %cmp1, label %for.body, label %for.cond2.preheader, !dbg !5583

for.cond2.preheader:                              ; preds = %for.cond
  %__clz_x.0.lcssa = phi i64 [ %__clz_x.0, %for.cond ], !dbg !5585
  %__clz_c.0.lcssa = phi i32 [ %__clz_c.0, %for.cond ], !dbg !5586
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !5575, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !5577, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !5575, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !5577, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !5575, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !5577, metadata !DIExpression()), !dbg !5585
  br label %for.cond2, !dbg !5589

for.body:                                         ; preds = %for.cond
  %shl = shl i64 %__clz_x.0, 8, !dbg !5587
  call void @llvm.dbg.value(metadata i64 %shl, metadata !5575, metadata !DIExpression()), !dbg !5585
  %add = add i32 %__clz_c.0, 8, !dbg !5587
  call void @llvm.dbg.value(metadata i32 %add, metadata !5577, metadata !DIExpression()), !dbg !5585
  br label %for.cond, !dbg !5587, !llvm.loop !5591

for.cond2:                                        ; preds = %for.cond2.preheader, %for.body5
  %__clz_x.1 = phi i64 [ %shl6, %for.body5 ], [ %__clz_x.0.lcssa, %for.cond2.preheader ], !dbg !5585
  %__clz_c.1 = phi i32 [ %inc, %for.body5 ], [ %__clz_c.0.lcssa, %for.cond2.preheader ], !dbg !5585
  call void @llvm.dbg.value(metadata i32 %__clz_c.1, metadata !5577, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i64 %__clz_x.1, metadata !5575, metadata !DIExpression()), !dbg !5585
  %cmp4 = icmp sgt i64 %__clz_x.1, -1, !dbg !5592
  br i1 %cmp4, label %for.body5, label %do.end, !dbg !5589

for.body5:                                        ; preds = %for.cond2
  %shl6 = shl i64 %__clz_x.1, 1, !dbg !5592
  call void @llvm.dbg.value(metadata i64 %shl6, metadata !5575, metadata !DIExpression()), !dbg !5585
  %inc = add i32 %__clz_c.1, 1, !dbg !5592
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5577, metadata !DIExpression()), !dbg !5585
  br label %for.cond2, !dbg !5592, !llvm.loop !5594

do.end:                                           ; preds = %for.cond2
  %__clz_c.1.lcssa = phi i32 [ %__clz_c.1, %for.cond2 ], !dbg !5585
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !5577, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !5577, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !5577, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !5574, metadata !DIExpression()), !dbg !5578
  %conv = zext i32 %__clz_c.1.lcssa to i64, !dbg !5595
  %sub = sub nsw i64 64, %conv, !dbg !5596
  ret i64 %sub, !dbg !5597
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mpn_div_qr_1_invert(%struct.gmp_div_inverse* %inv, i64 %d) unnamed_addr #0 !dbg !5598 {
entry:
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %inv, metadata !5602, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.value(metadata i64 %d, metadata !5603, metadata !DIExpression()), !dbg !5608
  %cmp = icmp eq i64 %d, 0, !dbg !5609
  br i1 %cmp, label %if.else, label %for.cond.preheader, !dbg !5612

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5613

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 801, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_1_invert, i64 0, i64 0)) #8, !dbg !5609
  unreachable, !dbg !5609

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %__clz_x.0 = phi i64 [ %shl, %for.body ], [ %d, %for.cond.preheader ], !dbg !5615
  %__clz_c.0 = phi i32 [ %add, %for.body ], [ 0, %for.cond.preheader ], !dbg !5616
  call void @llvm.dbg.value(metadata i32 %__clz_c.0, metadata !5607, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i64 %__clz_x.0, metadata !5605, metadata !DIExpression()), !dbg !5615
  %cmp1 = icmp ult i64 %__clz_x.0, 72057594037927936, !dbg !5617
  br i1 %cmp1, label %for.body, label %for.cond2.preheader, !dbg !5613

for.cond2.preheader:                              ; preds = %for.cond
  %__clz_x.0.lcssa = phi i64 [ %__clz_x.0, %for.cond ], !dbg !5615
  %__clz_c.0.lcssa = phi i32 [ %__clz_c.0, %for.cond ], !dbg !5616
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !5605, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !5607, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !5605, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !5607, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !5605, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !5607, metadata !DIExpression()), !dbg !5615
  br label %for.cond2, !dbg !5619

for.body:                                         ; preds = %for.cond
  %shl = shl i64 %__clz_x.0, 8, !dbg !5617
  call void @llvm.dbg.value(metadata i64 %shl, metadata !5605, metadata !DIExpression()), !dbg !5615
  %add = add i32 %__clz_c.0, 8, !dbg !5617
  call void @llvm.dbg.value(metadata i32 %add, metadata !5607, metadata !DIExpression()), !dbg !5615
  br label %for.cond, !dbg !5617, !llvm.loop !5621

for.cond2:                                        ; preds = %for.cond2.preheader, %for.body5
  %__clz_x.1 = phi i64 [ %shl6, %for.body5 ], [ %__clz_x.0.lcssa, %for.cond2.preheader ], !dbg !5615
  %__clz_c.1 = phi i32 [ %inc, %for.body5 ], [ %__clz_c.0.lcssa, %for.cond2.preheader ], !dbg !5615
  call void @llvm.dbg.value(metadata i32 %__clz_c.1, metadata !5607, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i64 %__clz_x.1, metadata !5605, metadata !DIExpression()), !dbg !5615
  %cmp4 = icmp sgt i64 %__clz_x.1, -1, !dbg !5622
  br i1 %cmp4, label %for.body5, label %do.end, !dbg !5619

for.body5:                                        ; preds = %for.cond2
  %shl6 = shl i64 %__clz_x.1, 1, !dbg !5622
  call void @llvm.dbg.value(metadata i64 %shl6, metadata !5605, metadata !DIExpression()), !dbg !5615
  %inc = add i32 %__clz_c.1, 1, !dbg !5622
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5607, metadata !DIExpression()), !dbg !5615
  br label %for.cond2, !dbg !5622, !llvm.loop !5624

do.end:                                           ; preds = %for.cond2
  %__clz_c.1.lcssa = phi i32 [ %__clz_c.1, %for.cond2 ], !dbg !5615
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !5607, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !5607, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !5607, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !5604, metadata !DIExpression()), !dbg !5608
  %shift9 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 0, !dbg !5625
  store i32 %__clz_c.1.lcssa, i32* %shift9, align 8, !dbg !5626, !tbaa !4040
  %sh_prom = zext i32 %__clz_c.1.lcssa to i64, !dbg !5627
  %shl10 = shl i64 %d, %sh_prom, !dbg !5627
  %d1 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 1, !dbg !5628
  store i64 %shl10, i64* %d1, align 8, !dbg !5629, !tbaa !4221
  %call = tail call i64 @mpn_invert_3by2(i64 %shl10, i64 0) #10, !dbg !5630
  %di = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 3, !dbg !5631
  store i64 %call, i64* %di, align 8, !dbg !5632, !tbaa !4228
  ret void, !dbg !5633
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpn_div_qr_1_preinv(i64* %qp, i64* %np, i64 %nn, %struct.gmp_div_inverse* %inv) unnamed_addr #0 !dbg !5634 {
entry:
  call void @llvm.dbg.value(metadata i64* %qp, metadata !5638, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i64* %np, metadata !5639, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i64 %nn, metadata !5640, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %inv, metadata !5641, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i64* null, metadata !5645, metadata !DIExpression()), !dbg !5666
  %shift = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 0, !dbg !5667
  %0 = load i32, i32* %shift, align 8, !dbg !5667, !tbaa !4040
  %cmp = icmp eq i32 %0, 0, !dbg !5669
  br i1 %cmp, label %if.end, label %if.then, !dbg !5670

if.then:                                          ; preds = %entry
  %call = tail call fastcc i64* @gmp_xalloc_limbs(i64 %nn) #10, !dbg !5671
  call void @llvm.dbg.value(metadata i64* %call, metadata !5645, metadata !DIExpression()), !dbg !5666
  %1 = load i32, i32* %shift, align 8, !dbg !5673, !tbaa !4040
  %call2 = tail call i64 @mpn_lshift(i64* %call, i64* %np, i64 %nn, i32 %1) #10, !dbg !5674
  call void @llvm.dbg.value(metadata i64 %call2, metadata !5644, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i64* %call, metadata !5639, metadata !DIExpression()), !dbg !5666
  %phitmp = bitcast i64* %call to i8*, !dbg !5675
  br label %if.end, !dbg !5675

if.end:                                           ; preds = %entry, %if.then
  %tp.0 = phi i8* [ %phitmp, %if.then ], [ null, %entry ]
  %r.0 = phi i64 [ %call2, %if.then ], [ 0, %entry ], !dbg !5676
  %np.addr.0 = phi i64* [ %call, %if.then ], [ %np, %entry ]
  call void @llvm.dbg.value(metadata i64* %np.addr.0, metadata !5639, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i64 %r.0, metadata !5644, metadata !DIExpression()), !dbg !5666
  %d1 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 1, !dbg !5677
  %2 = load i64, i64* %d1, align 8, !dbg !5677, !tbaa !4221
  call void @llvm.dbg.value(metadata i64 %2, metadata !5642, metadata !DIExpression()), !dbg !5666
  %di3 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 3, !dbg !5678
  %3 = load i64, i64* %di3, align 8, !dbg !5678, !tbaa !4228
  call void @llvm.dbg.value(metadata i64 %3, metadata !5643, metadata !DIExpression()), !dbg !5666
  %shr9 = lshr i64 %3, 32, !dbg !5679
  %conv12 = and i64 %3, 4294967295, !dbg !5679
  %tobool = icmp eq i64* %qp, null, !dbg !5680
  br i1 %tobool, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !5682

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %while.cond, !dbg !5682

if.end.split.us:                                  ; preds = %if.end
  br label %while.cond.us, !dbg !5682

while.cond.us:                                    ; preds = %do.body5.us, %if.end.split.us
  %r.1.us = phi i64 [ %r.0, %if.end.split.us ], [ %_r.0.us, %do.body5.us ], !dbg !5666
  %nn.addr.0.us = phi i64 [ %nn, %if.end.split.us ], [ %dec.us, %do.body5.us ]
  call void @llvm.dbg.value(metadata i64 %nn.addr.0.us, metadata !5640, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i64 %r.1.us, metadata !5644, metadata !DIExpression()), !dbg !5666
  %dec.us = add nsw i64 %nn.addr.0.us, -1, !dbg !5683
  call void @llvm.dbg.value(metadata i64 %dec.us, metadata !5640, metadata !DIExpression()), !dbg !5666
  %cmp4.us = icmp sgt i64 %nn.addr.0.us, 0, !dbg !5684
  br i1 %cmp4.us, label %do.body5.us, label %while.end.us-lcssa.us, !dbg !5682

do.body5.us:                                      ; preds = %while.cond.us
  call void @llvm.dbg.value(metadata i64 %r.1.us, metadata !5662, metadata !DIExpression()), !dbg !5679
  call void @llvm.dbg.value(metadata i64 %3, metadata !5663, metadata !DIExpression()), !dbg !5679
  %shr.us = lshr i64 %r.1.us, 32, !dbg !5685
  %conv11.us = and i64 %r.1.us, 4294967295, !dbg !5685
  %mul.us = mul nuw i64 %conv11.us, %conv12, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %mul.us, metadata !5653, metadata !DIExpression()), !dbg !5679
  %mul15.us = mul nuw i64 %conv11.us, %shr9, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %mul15.us, metadata !5655, metadata !DIExpression()), !dbg !5679
  %mul18.us = mul nuw i64 %shr.us, %conv12, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %mul18.us, metadata !5656, metadata !DIExpression()), !dbg !5679
  %mul21.us = mul nuw i64 %shr.us, %shr9, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %mul21.us, metadata !5657, metadata !DIExpression()), !dbg !5679
  %shr22.us = lshr i64 %mul.us, 32, !dbg !5685
  %add.us = add i64 %mul15.us, %shr22.us, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %add.us, metadata !5655, metadata !DIExpression()), !dbg !5679
  %add23.us = add i64 %add.us, %mul18.us, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %add23.us, metadata !5655, metadata !DIExpression()), !dbg !5679
  %cmp24.us = icmp ult i64 %add23.us, %mul18.us, !dbg !5686
  %add27.us = add i64 %mul21.us, 4294967296, !dbg !5686
  %spec.select.us = select i1 %cmp24.us, i64 %add27.us, i64 %mul21.us, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %spec.select.us, metadata !5657, metadata !DIExpression()), !dbg !5679
  %shr29.us = lshr i64 %add23.us, 32, !dbg !5685
  %add30.us = add i64 %spec.select.us, %shr29.us, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %add30.us, metadata !5648, metadata !DIExpression()), !dbg !5688
  %shl.us = shl i64 %add23.us, 32, !dbg !5685
  %and31.us = and i64 %mul.us, 4294967295, !dbg !5685
  %add32.us = or i64 %shl.us, %and31.us, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %add32.us, metadata !5650, metadata !DIExpression()), !dbg !5688
  %arrayidx.us = getelementptr inbounds i64, i64* %np.addr.0, i64 %dec.us, !dbg !5689
  %4 = load i64, i64* %arrayidx.us, align 8, !dbg !5689, !tbaa !168
  %add34.us = add i64 %add32.us, %4, !dbg !5689
  call void @llvm.dbg.value(metadata i64 %add34.us, metadata !5664, metadata !DIExpression()), !dbg !5690
  %add35.us = add i64 %r.1.us, 1, !dbg !5689
  %add36.us = add i64 %add30.us, %add35.us, !dbg !5689
  %cmp37.us = icmp ult i64 %add34.us, %add32.us, !dbg !5689
  %conv39.us = zext i1 %cmp37.us to i64, !dbg !5689
  %add40.us = add i64 %add36.us, %conv39.us, !dbg !5689
  call void @llvm.dbg.value(metadata i64 %add40.us, metadata !5648, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i64 %add34.us, metadata !5650, metadata !DIExpression()), !dbg !5688
  %mul44.us = mul i64 %add40.us, %2, !dbg !5691
  %sub.us = sub i64 %4, %mul44.us, !dbg !5691
  call void @llvm.dbg.value(metadata i64 %sub.us, metadata !5651, metadata !DIExpression()), !dbg !5688
  %cmp45.us = icmp ugt i64 %sub.us, %add34.us, !dbg !5691
  call void @llvm.dbg.value(metadata i64 undef, metadata !5648, metadata !DIExpression()), !dbg !5688
  %and50.us = select i1 %cmp45.us, i64 %2, i64 0, !dbg !5691
  %add51.us = add i64 %sub.us, %and50.us, !dbg !5691
  call void @llvm.dbg.value(metadata i64 %add51.us, metadata !5651, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i64 undef, metadata !5651, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i64 undef, metadata !5648, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i64 undef, metadata !5644, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i64 undef, metadata !5646, metadata !DIExpression()), !dbg !5692
  %cmp52.us = icmp ult i64 %add51.us, %2, !dbg !5693
  %sub55.us = select i1 %cmp52.us, i64 0, i64 %2, !dbg !5691
  %_r.0.us = sub i64 %add51.us, %sub55.us, !dbg !5691
  call void @llvm.dbg.value(metadata i64 %_r.0.us, metadata !5651, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i64 %_r.0.us, metadata !5644, metadata !DIExpression()), !dbg !5666
  br label %while.cond.us, !dbg !5682, !llvm.loop !5695

while.end.us-lcssa.us:                            ; preds = %while.cond.us
  %r.1.us.lcssa = phi i64 [ %r.1.us, %while.cond.us ], !dbg !5666
  call void @llvm.dbg.value(metadata i64 %r.1.us.lcssa, metadata !5644, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i64 %r.1.us.lcssa, metadata !5644, metadata !DIExpression()), !dbg !5666
  br label %while.end, !dbg !5697

while.cond:                                       ; preds = %do.body5, %if.end.if.end.split_crit_edge
  %r.1 = phi i64 [ %r.0, %if.end.if.end.split_crit_edge ], [ %_r.0, %do.body5 ], !dbg !5666
  %nn.addr.0 = phi i64 [ %nn, %if.end.if.end.split_crit_edge ], [ %dec, %do.body5 ]
  call void @llvm.dbg.value(metadata i64 %nn.addr.0, metadata !5640, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i64 %r.1, metadata !5644, metadata !DIExpression()), !dbg !5666
  %dec = add nsw i64 %nn.addr.0, -1, !dbg !5683
  call void @llvm.dbg.value(metadata i64 %dec, metadata !5640, metadata !DIExpression()), !dbg !5666
  %cmp4 = icmp sgt i64 %nn.addr.0, 0, !dbg !5684
  br i1 %cmp4, label %do.body5, label %while.end.us-lcssa, !dbg !5682

do.body5:                                         ; preds = %while.cond
  call void @llvm.dbg.value(metadata i64 %r.1, metadata !5662, metadata !DIExpression()), !dbg !5679
  call void @llvm.dbg.value(metadata i64 %3, metadata !5663, metadata !DIExpression()), !dbg !5679
  %shr = lshr i64 %r.1, 32, !dbg !5685
  %conv11 = and i64 %r.1, 4294967295, !dbg !5685
  %mul = mul nuw i64 %conv11, %conv12, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %mul, metadata !5653, metadata !DIExpression()), !dbg !5679
  %mul15 = mul nuw i64 %conv11, %shr9, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %mul15, metadata !5655, metadata !DIExpression()), !dbg !5679
  %mul18 = mul nuw i64 %shr, %conv12, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %mul18, metadata !5656, metadata !DIExpression()), !dbg !5679
  %mul21 = mul nuw i64 %shr, %shr9, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %mul21, metadata !5657, metadata !DIExpression()), !dbg !5679
  %shr22 = lshr i64 %mul, 32, !dbg !5685
  %add = add i64 %mul15, %shr22, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %add, metadata !5655, metadata !DIExpression()), !dbg !5679
  %add23 = add i64 %add, %mul18, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %add23, metadata !5655, metadata !DIExpression()), !dbg !5679
  %cmp24 = icmp ult i64 %add23, %mul18, !dbg !5686
  %add27 = add i64 %mul21, 4294967296, !dbg !5686
  %spec.select = select i1 %cmp24, i64 %add27, i64 %mul21, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !5657, metadata !DIExpression()), !dbg !5679
  %shr29 = lshr i64 %add23, 32, !dbg !5685
  %add30 = add i64 %spec.select, %shr29, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %add30, metadata !5648, metadata !DIExpression()), !dbg !5688
  %shl = shl i64 %add23, 32, !dbg !5685
  %and31 = and i64 %mul, 4294967295, !dbg !5685
  %add32 = or i64 %shl, %and31, !dbg !5685
  call void @llvm.dbg.value(metadata i64 %add32, metadata !5650, metadata !DIExpression()), !dbg !5688
  %arrayidx = getelementptr inbounds i64, i64* %np.addr.0, i64 %dec, !dbg !5689
  %5 = load i64, i64* %arrayidx, align 8, !dbg !5689, !tbaa !168
  %add34 = add i64 %add32, %5, !dbg !5689
  call void @llvm.dbg.value(metadata i64 %add34, metadata !5664, metadata !DIExpression()), !dbg !5690
  %add35 = add i64 %r.1, 1, !dbg !5689
  %add36 = add i64 %add30, %add35, !dbg !5689
  %cmp37 = icmp ult i64 %add34, %add32, !dbg !5689
  %conv39 = zext i1 %cmp37 to i64, !dbg !5689
  %add40 = add i64 %add36, %conv39, !dbg !5689
  call void @llvm.dbg.value(metadata i64 %add40, metadata !5648, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i64 %add34, metadata !5650, metadata !DIExpression()), !dbg !5688
  %mul44 = mul i64 %add40, %2, !dbg !5691
  %sub = sub i64 %5, %mul44, !dbg !5691
  call void @llvm.dbg.value(metadata i64 %sub, metadata !5651, metadata !DIExpression()), !dbg !5688
  %cmp45 = icmp ugt i64 %sub, %add34, !dbg !5691
  %sub48 = sext i1 %cmp45 to i64, !dbg !5691
  call void @llvm.dbg.value(metadata i64 %sub48, metadata !5652, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i64 undef, metadata !5648, metadata !DIExpression()), !dbg !5688
  %and50 = and i64 %2, %sub48, !dbg !5691
  %add51 = add i64 %sub, %and50, !dbg !5691
  call void @llvm.dbg.value(metadata i64 %add51, metadata !5651, metadata !DIExpression()), !dbg !5688
  %cmp52 = icmp uge i64 %add51, %2, !dbg !5693
  %sub55 = select i1 %cmp52, i64 %2, i64 0, !dbg !5691
  %_r.0 = sub i64 %add51, %sub55, !dbg !5691
  call void @llvm.dbg.value(metadata i64 %_r.0, metadata !5651, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i64 undef, metadata !5648, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i64 %_r.0, metadata !5644, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i64 undef, metadata !5646, metadata !DIExpression()), !dbg !5692
  %add49 = add i64 %add40, %sub48, !dbg !5691
  call void @llvm.dbg.value(metadata i64 %add49, metadata !5648, metadata !DIExpression()), !dbg !5688
  %inc = zext i1 %cmp52 to i64, !dbg !5691
  %_qh.0 = add i64 %add49, %inc, !dbg !5691
  call void @llvm.dbg.value(metadata i64 %_qh.0, metadata !5648, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i64 %_qh.0, metadata !5646, metadata !DIExpression()), !dbg !5692
  %arrayidx60 = getelementptr inbounds i64, i64* %qp, i64 %dec, !dbg !5699
  store i64 %_qh.0, i64* %arrayidx60, align 8, !dbg !5700, !tbaa !168
  br label %while.cond, !dbg !5682, !llvm.loop !5695

while.end.us-lcssa:                               ; preds = %while.cond
  %r.1.lcssa3 = phi i64 [ %r.1, %while.cond ], !dbg !5666
  call void @llvm.dbg.value(metadata i64 %r.1.lcssa3, metadata !5644, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i64 %r.1.lcssa3, metadata !5644, metadata !DIExpression()), !dbg !5666
  br label %while.end, !dbg !5697

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %r.1.lcssa = phi i64 [ %r.1.lcssa3, %while.end.us-lcssa ], [ %r.1.us.lcssa, %while.end.us-lcssa.us ], !dbg !5666
  call void @llvm.dbg.value(metadata i64 %r.1.lcssa, metadata !5644, metadata !DIExpression()), !dbg !5666
  %6 = load i32, i32* %shift, align 8, !dbg !5697, !tbaa !4040
  %cmp63 = icmp eq i32 %6, 0, !dbg !5701
  br i1 %cmp63, label %if.end66, label %if.then65, !dbg !5702

if.then65:                                        ; preds = %while.end
  %7 = load void (i8*, i64)*, void (i8*, i64)** @gmp_free_func, align 8, !dbg !5703, !tbaa !73
  tail call void %7(i8* %tp.0, i64 0) #9, !dbg !5703
  %.pre = load i32, i32* %shift, align 8, !dbg !5704, !tbaa !4040
  %phitmp2 = zext i32 %.pre to i64, !dbg !5703
  br label %if.end66, !dbg !5703

if.end66:                                         ; preds = %while.end, %if.then65
  %8 = phi i64 [ 0, %while.end ], [ %phitmp2, %if.then65 ]
  %shr68 = lshr i64 %r.1.lcssa, %8, !dbg !5705
  ret i64 %shr68, !dbg !5706
}

; Function Attrs: nounwind uwtable
define dso_local i8* @mpz_get_str(i8* %sp, i32 %base, %struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !5707 {
entry:
  %info = alloca %struct.mpn_base_info, align 8
  call void @llvm.dbg.value(metadata i8* %sp, metadata !5712, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.value(metadata i32 %base, metadata !5713, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !5714, metadata !DIExpression()), !dbg !5724
  %cmp = icmp sgt i32 %base, -1, !dbg !5725
  %sub = sub nsw i32 0, %base, !dbg !5727
  %digits.0 = select i1 %cmp, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.26, i64 0, i64 0), !dbg !5727
  %base.addr.0 = select i1 %cmp, i32 %base, i32 %sub, !dbg !5727
  call void @llvm.dbg.value(metadata i32 %base.addr.0, metadata !5713, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.value(metadata i8* %digits.0, metadata !5716, metadata !DIExpression()), !dbg !5724
  %cmp1 = icmp slt i32 %base.addr.0, 2, !dbg !5728
  %spec.select = select i1 %cmp1, i32 10, i32 %base.addr.0, !dbg !5730
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5713, metadata !DIExpression()), !dbg !5724
  %cmp4 = icmp ugt i32 %spec.select, 36, !dbg !5731
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !5733

if.end6:                                          ; preds = %entry
  %call = tail call i64 @mpz_sizeinbase(%struct.__mpz_struct* %u, i32 %spec.select) #10, !dbg !5734
  call void @llvm.dbg.value(metadata i64 undef, metadata !5719, metadata !DIExpression()), !dbg !5724
  %tobool = icmp eq i8* %sp, null, !dbg !5735
  br i1 %tobool, label %if.then7, label %if.end10, !dbg !5737

if.then7:                                         ; preds = %if.end6
  call void @llvm.dbg.value(metadata i64 %call, metadata !5719, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5724
  %0 = load i8* (i64)*, i8* (i64)** @gmp_allocate_func, align 8, !dbg !5738, !tbaa !73
  %add8 = add i64 %call, 2, !dbg !5738
  %call9 = tail call i8* %0(i64 %add8) #9, !dbg !5738
  call void @llvm.dbg.value(metadata i8* %call9, metadata !5712, metadata !DIExpression()), !dbg !5724
  br label %if.end10, !dbg !5739

if.end10:                                         ; preds = %if.end6, %if.then7
  %sp.addr.0 = phi i8* [ %sp, %if.end6 ], [ %call9, %if.then7 ]
  call void @llvm.dbg.value(metadata i8* %sp.addr.0, metadata !5712, metadata !DIExpression()), !dbg !5724
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !5740
  %1 = load i32, i32* %_mp_size, align 4, !dbg !5740, !tbaa !1330
  %cmp11 = icmp slt i32 %1, 0, !dbg !5740
  %sub14 = sub nsw i32 0, %1, !dbg !5740
  %cond = select i1 %cmp11, i32 %sub14, i32 %1, !dbg !5740
  %conv = zext i32 %cond to i64, !dbg !5740
  call void @llvm.dbg.value(metadata i64 %conv, metadata !5717, metadata !DIExpression()), !dbg !5724
  %cmp15 = icmp eq i32 %cond, 0, !dbg !5741
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !5743

if.then17:                                        ; preds = %if.end10
  store i8 48, i8* %sp.addr.0, align 1, !dbg !5744, !tbaa !1018
  %arrayidx18 = getelementptr inbounds i8, i8* %sp.addr.0, i64 1, !dbg !5746
  store i8 0, i8* %arrayidx18, align 1, !dbg !5747, !tbaa !1018
  br label %cleanup, !dbg !5748

if.end19:                                         ; preds = %if.end10
  call void @llvm.dbg.value(metadata i64 0, metadata !5718, metadata !DIExpression()), !dbg !5724
  br i1 %cmp11, label %if.then23, label %if.end25, !dbg !5749

if.then23:                                        ; preds = %if.end19
  call void @llvm.dbg.value(metadata i64 1, metadata !5718, metadata !DIExpression()), !dbg !5724
  store i8 45, i8* %sp.addr.0, align 1, !dbg !5750, !tbaa !1018
  br label %if.end25, !dbg !5752

if.end25:                                         ; preds = %if.then23, %if.end19
  %i.0 = phi i64 [ 1, %if.then23 ], [ 0, %if.end19 ], !dbg !5724
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5718, metadata !DIExpression()), !dbg !5724
  %call26 = tail call fastcc i32 @mpn_base_power_of_two_p(i32 %spec.select) #10, !dbg !5753
  call void @llvm.dbg.value(metadata i32 %call26, metadata !5715, metadata !DIExpression()), !dbg !5724
  %tobool27 = icmp eq i32 %call26, 0, !dbg !5754
  br i1 %tobool27, label %if.else31, label %if.then28, !dbg !5755

if.then28:                                        ; preds = %if.end25
  %add.ptr = getelementptr inbounds i8, i8* %sp.addr.0, i64 %i.0, !dbg !5756
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !5757
  %2 = load i64*, i64** %_mp_d, align 8, !dbg !5757, !tbaa !1334
  %call29 = tail call fastcc i64 @mpn_get_str_bits(i8* %add.ptr, i32 %call26, i64* %2, i64 %conv) #10, !dbg !5758
  br label %if.end38, !dbg !5759

if.else31:                                        ; preds = %if.end25
  %3 = bitcast %struct.mpn_base_info* %info to i8*, !dbg !5760
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #11, !dbg !5760
  %conv32 = zext i32 %spec.select to i64, !dbg !5761
  call void @llvm.dbg.value(metadata %struct.mpn_base_info* %info, metadata !5720, metadata !DIExpression(DW_OP_deref)), !dbg !5762
  call fastcc void @mpn_get_base_info(%struct.mpn_base_info* nonnull %info, i64 %conv32) #10, !dbg !5763
  %call33 = call fastcc i64* @gmp_xalloc_limbs(i64 %conv) #10, !dbg !5764
  call void @llvm.dbg.value(metadata i64* %call33, metadata !5723, metadata !DIExpression()), !dbg !5762
  %_mp_d34 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !5765
  %4 = load i64*, i64** %_mp_d34, align 8, !dbg !5765, !tbaa !1334
  call void @mpn_copyi(i64* %call33, i64* %4, i64 %conv) #10, !dbg !5766
  %add.ptr35 = getelementptr inbounds i8, i8* %sp.addr.0, i64 %i.0, !dbg !5767
  call void @llvm.dbg.value(metadata %struct.mpn_base_info* %info, metadata !5720, metadata !DIExpression(DW_OP_deref)), !dbg !5762
  %call36 = call fastcc i64 @mpn_get_str_other(i8* %add.ptr35, i32 %spec.select, %struct.mpn_base_info* nonnull %info, i64* %call33, i64 %conv) #10, !dbg !5768
  %5 = load void (i8*, i64)*, void (i8*, i64)** @gmp_free_func, align 8, !dbg !5769, !tbaa !73
  %6 = bitcast i64* %call33 to i8*, !dbg !5769
  call void %5(i8* %6, i64 0) #9, !dbg !5769
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #11, !dbg !5770
  br label %if.end38

if.end38:                                         ; preds = %if.else31, %if.then28
  %call29.pn = phi i64 [ %call29, %if.then28 ], [ %call36, %if.else31 ]
  %sn.0 = add i64 %i.0, %call29.pn, !dbg !5771
  call void @llvm.dbg.value(metadata i64 %sn.0, metadata !5719, metadata !DIExpression()), !dbg !5724
  br label %for.cond, !dbg !5772

for.cond:                                         ; preds = %for.body, %if.end38
  %i.1 = phi i64 [ %i.0, %if.end38 ], [ %inc44, %for.body ], !dbg !5724
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !5718, metadata !DIExpression()), !dbg !5724
  %cmp39 = icmp ult i64 %i.1, %sn.0, !dbg !5773
  br i1 %cmp39, label %for.body, label %for.end, !dbg !5776

for.body:                                         ; preds = %for.cond
  %arrayidx41 = getelementptr inbounds i8, i8* %sp.addr.0, i64 %i.1, !dbg !5777
  %7 = load i8, i8* %arrayidx41, align 1, !dbg !5777, !tbaa !1018
  %idxprom = zext i8 %7 to i64, !dbg !5778
  %arrayidx42 = getelementptr inbounds i8, i8* %digits.0, i64 %idxprom, !dbg !5778
  %8 = load i8, i8* %arrayidx42, align 1, !dbg !5778, !tbaa !1018
  store i8 %8, i8* %arrayidx41, align 1, !dbg !5779, !tbaa !1018
  %inc44 = add i64 %i.1, 1, !dbg !5780
  call void @llvm.dbg.value(metadata i64 %inc44, metadata !5718, metadata !DIExpression()), !dbg !5724
  br label %for.cond, !dbg !5781, !llvm.loop !5782

for.end:                                          ; preds = %for.cond
  %arrayidx45 = getelementptr inbounds i8, i8* %sp.addr.0, i64 %sn.0, !dbg !5784
  store i8 0, i8* %arrayidx45, align 1, !dbg !5785, !tbaa !1018
  br label %cleanup, !dbg !5786

cleanup:                                          ; preds = %entry, %for.end, %if.then17
  %retval.0 = phi i8* [ %sp.addr.0, %if.then17 ], [ %sp.addr.0, %for.end ], [ null, %entry ], !dbg !5724
  ret i8* %retval.0, !dbg !5787
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_set_str(%struct.__mpz_struct* %r, i8* %sp, i32 %base) local_unnamed_addr #0 !dbg !5788 {
entry:
  %info = alloca %struct.mpn_base_info, align 8
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !5792, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i8* %sp, metadata !5793, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i32 %base, metadata !5794, metadata !DIExpression()), !dbg !5809
  %cmp = icmp eq i32 %base, 0, !dbg !5810
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !5810

lor.lhs.false:                                    ; preds = %entry
  %base.off = add i32 %base, -2, !dbg !5810
  %0 = icmp ult i32 %base.off, 35, !dbg !5810
  br i1 %0, label %if.end, label %if.else, !dbg !5810

if.else:                                          ; preds = %lor.lhs.false
  tail call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4119, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.mpz_set_str, i64 0, i64 0)) #8, !dbg !5810
  unreachable, !dbg !5810

if.end:                                           ; preds = %entry, %lor.lhs.false
  %call = tail call i16** @__ctype_b_loc() #12, !dbg !5809
  %1 = load i16*, i16** %call, align 8, !dbg !5809, !tbaa !73
  br label %while.cond, !dbg !5813

while.cond:                                       ; preds = %while.body, %if.end
  %sp.addr.0 = phi i8* [ %sp, %if.end ], [ %incdec.ptr, %while.body ]
  call void @llvm.dbg.value(metadata i8* %sp.addr.0, metadata !5793, metadata !DIExpression()), !dbg !5809
  %2 = load i8, i8* %sp.addr.0, align 1, !dbg !5814, !tbaa !1018
  %idxprom = zext i8 %2 to i64, !dbg !5814
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 %idxprom, !dbg !5814
  %3 = load i16, i16* %arrayidx, align 2, !dbg !5814, !tbaa !5815
  %4 = and i16 %3, 8192, !dbg !5814
  %tobool = icmp eq i16 %4, 0, !dbg !5813
  br i1 %tobool, label %while.end, label %while.body, !dbg !5813

while.body:                                       ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %sp.addr.0, i64 1, !dbg !5817
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !5793, metadata !DIExpression()), !dbg !5809
  br label %while.cond, !dbg !5813, !llvm.loop !5818

while.end:                                        ; preds = %while.cond
  %sp.addr.0.lcssa = phi i8* [ %sp.addr.0, %while.cond ]
  %.lcssa = phi i8 [ %2, %while.cond ], !dbg !5814
  call void @llvm.dbg.value(metadata i8* %sp.addr.0.lcssa, metadata !5793, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i8* %sp.addr.0.lcssa, metadata !5793, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i8* %sp.addr.0.lcssa, metadata !5793, metadata !DIExpression()), !dbg !5809
  %cmp5 = icmp eq i8 %.lcssa, 45, !dbg !5819
  call void @llvm.dbg.value(metadata i1 %cmp5, metadata !5800, metadata !DIExpression()), !dbg !5809
  %idx.ext = zext i1 %cmp5 to i64, !dbg !5820
  %add.ptr = getelementptr inbounds i8, i8* %sp.addr.0.lcssa, i64 %idx.ext, !dbg !5820
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !5793, metadata !DIExpression()), !dbg !5809
  br i1 %cmp, label %if.then9, label %if.end39, !dbg !5821

if.then9:                                         ; preds = %while.end
  %5 = load i8, i8* %add.ptr, align 1, !dbg !5822, !tbaa !1018
  %cmp11 = icmp eq i8 %5, 48, !dbg !5826
  br i1 %cmp11, label %if.then13, label %if.end39, !dbg !5827

if.then13:                                        ; preds = %if.then9
  %incdec.ptr14 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !5828
  call void @llvm.dbg.value(metadata i8* %incdec.ptr14, metadata !5793, metadata !DIExpression()), !dbg !5809
  %6 = load i8, i8* %incdec.ptr14, align 1, !dbg !5830, !tbaa !1018
  %cmp16 = icmp eq i8 %6, 120, !dbg !5832
  br i1 %cmp16, label %if.then22, label %lor.lhs.false18, !dbg !5833

lor.lhs.false18:                                  ; preds = %if.then13
  %cmp20 = icmp eq i8 %6, 88, !dbg !5834
  br i1 %cmp20, label %if.then22, label %if.else24, !dbg !5835

if.then22:                                        ; preds = %lor.lhs.false18, %if.then13
  call void @llvm.dbg.value(metadata i32 16, metadata !5794, metadata !DIExpression()), !dbg !5809
  %incdec.ptr23 = getelementptr inbounds i8, i8* %incdec.ptr14, i64 1, !dbg !5836
  call void @llvm.dbg.value(metadata i8* %incdec.ptr23, metadata !5793, metadata !DIExpression()), !dbg !5809
  br label %if.end39, !dbg !5838

if.else24:                                        ; preds = %lor.lhs.false18
  %cmp26 = icmp eq i8 %6, 98, !dbg !5839
  br i1 %cmp26, label %if.then32, label %lor.lhs.false28, !dbg !5841

lor.lhs.false28:                                  ; preds = %if.else24
  %cmp30 = icmp eq i8 %6, 66, !dbg !5842
  br i1 %cmp30, label %if.then32, label %if.end39, !dbg !5843

if.then32:                                        ; preds = %lor.lhs.false28, %if.else24
  call void @llvm.dbg.value(metadata i32 2, metadata !5794, metadata !DIExpression()), !dbg !5809
  %incdec.ptr33 = getelementptr inbounds i8, i8* %incdec.ptr14, i64 1, !dbg !5844
  call void @llvm.dbg.value(metadata i8* %incdec.ptr33, metadata !5793, metadata !DIExpression()), !dbg !5809
  br label %if.end39, !dbg !5846

if.end39:                                         ; preds = %if.then32, %lor.lhs.false28, %if.then22, %if.then9, %while.end
  %base.addr.3 = phi i32 [ %base, %while.end ], [ 16, %if.then22 ], [ 2, %if.then32 ], [ 8, %lor.lhs.false28 ], [ 10, %if.then9 ]
  %sp.addr.4 = phi i8* [ %add.ptr, %while.end ], [ %incdec.ptr23, %if.then22 ], [ %incdec.ptr33, %if.then32 ], [ %incdec.ptr14, %lor.lhs.false28 ], [ %add.ptr, %if.then9 ], !dbg !5809
  call void @llvm.dbg.value(metadata i8* %sp.addr.4, metadata !5793, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i32 %base.addr.3, metadata !5794, metadata !DIExpression()), !dbg !5809
  %call40 = tail call i64 @strlen(i8* %sp.addr.4) #13, !dbg !5847
  call void @llvm.dbg.value(metadata i64 %call40, metadata !5799, metadata !DIExpression()), !dbg !5809
  %7 = load i8* (i64)*, i8* (i64)** @gmp_allocate_func, align 8, !dbg !5848, !tbaa !73
  %cmp41 = icmp eq i64 %call40, 0, !dbg !5848
  %conv43 = zext i1 %cmp41 to i64, !dbg !5848
  %add = add i64 %call40, %conv43, !dbg !5848
  %call44 = tail call i8* %7(i64 %add) #9, !dbg !5848
  call void @llvm.dbg.value(metadata i8* %call44, metadata !5801, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i64 0, metadata !5799, metadata !DIExpression()), !dbg !5809
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !5849
  br label %for.cond, !dbg !5852

for.cond:                                         ; preds = %for.inc, %if.end39
  %sn.0 = phi i64 [ 0, %if.end39 ], [ %sn.1, %for.inc ], !dbg !5853
  %sp.addr.5 = phi i8* [ %sp.addr.4, %if.end39 ], [ %incdec.ptr98, %for.inc ], !dbg !5809
  call void @llvm.dbg.value(metadata i8* %sp.addr.5, metadata !5793, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i64 %sn.0, metadata !5799, metadata !DIExpression()), !dbg !5809
  %8 = load i8, i8* %sp.addr.5, align 1, !dbg !5854, !tbaa !1018
  %tobool45 = icmp eq i8 %8, 0, !dbg !5855
  br i1 %tobool45, label %for.end, label %for.body, !dbg !5855

for.body:                                         ; preds = %for.cond
  %9 = load i16*, i16** %call, align 8, !dbg !5856, !tbaa !73
  %idxprom48 = zext i8 %8 to i64, !dbg !5856
  %arrayidx49 = getelementptr inbounds i16, i16* %9, i64 %idxprom48, !dbg !5856
  %10 = load i16, i16* %arrayidx49, align 2, !dbg !5856, !tbaa !5815
  %11 = and i16 %10, 8192, !dbg !5856
  %tobool52 = icmp eq i16 %11, 0, !dbg !5856
  br i1 %tobool52, label %if.end54, label %cleanup, !dbg !5858

if.end54:                                         ; preds = %for.body
  %cmp56 = icmp sgt i8 %8, 47, !dbg !5859
  br i1 %cmp56, label %land.lhs.true58, label %if.else64, !dbg !5861

land.lhs.true58:                                  ; preds = %if.end54
  %cmp60 = icmp slt i8 %8, 58, !dbg !5862
  br i1 %cmp60, label %if.then62, label %if.else64, !dbg !5863

if.then62:                                        ; preds = %land.lhs.true58
  %conv63 = sext i8 %8 to i32, !dbg !5864
  %sub = add nsw i32 %conv63, -48, !dbg !5865
  call void @llvm.dbg.value(metadata i32 %sub, metadata !5802, metadata !DIExpression()), !dbg !5866
  br label %if.end91, !dbg !5867

if.else64:                                        ; preds = %land.lhs.true58, %if.end54
  %cmp66 = icmp sgt i8 %8, 96, !dbg !5868
  br i1 %cmp66, label %land.lhs.true68, label %if.else76, !dbg !5870

land.lhs.true68:                                  ; preds = %if.else64
  %cmp70 = icmp slt i8 %8, 123, !dbg !5871
  br i1 %cmp70, label %if.then72, label %if.else76, !dbg !5872

if.then72:                                        ; preds = %land.lhs.true68
  %conv73 = sext i8 %8 to i32, !dbg !5873
  %add75 = add nsw i32 %conv73, -87, !dbg !5874
  call void @llvm.dbg.value(metadata i32 %add75, metadata !5802, metadata !DIExpression()), !dbg !5866
  br label %if.end91, !dbg !5875

if.else76:                                        ; preds = %land.lhs.true68, %if.else64
  %cmp78 = icmp sgt i8 %8, 64, !dbg !5876
  br i1 %cmp78, label %land.lhs.true80, label %if.end91, !dbg !5878

land.lhs.true80:                                  ; preds = %if.else76
  %cmp82 = icmp slt i8 %8, 91, !dbg !5879
  br i1 %cmp82, label %if.then84, label %if.end91, !dbg !5880

if.then84:                                        ; preds = %land.lhs.true80
  %conv85 = sext i8 %8 to i32, !dbg !5881
  %add87 = add nsw i32 %conv85, -55, !dbg !5882
  call void @llvm.dbg.value(metadata i32 %add87, metadata !5802, metadata !DIExpression()), !dbg !5866
  br label %if.end91, !dbg !5883

if.end91:                                         ; preds = %if.then72, %if.else76, %land.lhs.true80, %if.then84, %if.then62
  %digit.2 = phi i32 [ %sub, %if.then62 ], [ %add75, %if.then72 ], [ %add87, %if.then84 ], [ %base.addr.3, %land.lhs.true80 ], [ %base.addr.3, %if.else76 ], !dbg !5884
  call void @llvm.dbg.value(metadata i32 %digit.2, metadata !5802, metadata !DIExpression()), !dbg !5866
  %cmp92 = icmp ult i32 %digit.2, %base.addr.3, !dbg !5885
  br i1 %cmp92, label %if.end95, label %if.then94, !dbg !5886

if.then94:                                        ; preds = %if.end91
  %12 = load void (i8*, i64)*, void (i8*, i64)** @gmp_free_func, align 8, !dbg !5887, !tbaa !73
  tail call void %12(i8* %call44, i64 0) #9, !dbg !5887
  store i32 0, i32* %_mp_size, align 4, !dbg !5888, !tbaa !1330
  br label %cleanup, !dbg !5889

if.end95:                                         ; preds = %if.end91
  %conv96 = trunc i32 %digit.2 to i8, !dbg !5890
  %inc = add i64 %sn.0, 1, !dbg !5891
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5799, metadata !DIExpression()), !dbg !5809
  %arrayidx97 = getelementptr inbounds i8, i8* %call44, i64 %sn.0, !dbg !5892
  store i8 %conv96, i8* %arrayidx97, align 1, !dbg !5893, !tbaa !1018
  br label %cleanup, !dbg !5894

cleanup:                                          ; preds = %for.body, %if.end95, %if.then94
  %sn.1 = phi i64 [ %sn.0, %if.then94 ], [ %inc, %if.end95 ], [ %sn.0, %for.body ], !dbg !5895
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then94 ], [ 0, %if.end95 ], [ 6, %for.body ]
  call void @llvm.dbg.value(metadata i64 %sn.1, metadata !5799, metadata !DIExpression()), !dbg !5809
  switch i32 %cleanup.dest.slot.0, label %cleanup145.loopexit [
    i32 0, label %for.inc
    i32 6, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %incdec.ptr98 = getelementptr inbounds i8, i8* %sp.addr.5, i64 1, !dbg !5896
  call void @llvm.dbg.value(metadata i8* %incdec.ptr98, metadata !5793, metadata !DIExpression()), !dbg !5809
  br label %for.cond, !dbg !5897, !llvm.loop !5898

for.end:                                          ; preds = %for.cond
  %sn.0.lcssa = phi i64 [ %sn.0, %for.cond ], !dbg !5853
  call void @llvm.dbg.value(metadata i64 %sn.0.lcssa, metadata !5799, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i64 %sn.0.lcssa, metadata !5799, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i64 %sn.0.lcssa, metadata !5799, metadata !DIExpression()), !dbg !5809
  %call99 = tail call fastcc i32 @mpn_base_power_of_two_p(i32 %base.addr.3) #10, !dbg !5900
  call void @llvm.dbg.value(metadata i32 %call99, metadata !5795, metadata !DIExpression()), !dbg !5809
  %cmp100 = icmp eq i32 %call99, 0, !dbg !5901
  br i1 %cmp100, label %if.else111, label %if.then102, !dbg !5902

if.then102:                                       ; preds = %for.end
  %conv103 = zext i32 %call99 to i64, !dbg !5903
  %mul = mul i64 %sn.0.lcssa, %conv103, !dbg !5905
  %sub105 = add i64 %mul, 63, !dbg !5906
  %div = lshr i64 %sub105, 6, !dbg !5907
  call void @llvm.dbg.value(metadata i64 %div, metadata !5797, metadata !DIExpression()), !dbg !5809
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !5908
  %13 = load i32, i32* %_mp_alloc, align 8, !dbg !5908, !tbaa !1326
  %conv106 = sext i32 %13 to i64, !dbg !5908
  %cmp107 = icmp sgt i64 %div, %conv106, !dbg !5908
  br i1 %cmp107, label %cond.true, label %cond.false, !dbg !5908

cond.true:                                        ; preds = %if.then102
  %call109 = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %div) #10, !dbg !5908
  br label %cond.end, !dbg !5908

cond.false:                                       ; preds = %if.then102
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !5908
  %14 = bitcast i64** %_mp_d to i8**, !dbg !5908
  %15 = load i8*, i8** %14, align 8, !dbg !5908, !tbaa !1334
  br label %cond.end, !dbg !5908

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call109, %cond.true ], [ %15, %cond.false ], !dbg !5908
  %16 = bitcast i8* %cond to i64*, !dbg !5908
  call void @llvm.dbg.value(metadata i64* %16, metadata !5798, metadata !DIExpression()), !dbg !5809
  %call110 = tail call fastcc i64 @mpn_set_str_bits(i64* %16, i8* %call44, i64 %sn.0.lcssa, i32 %call99) #10, !dbg !5909
  call void @llvm.dbg.value(metadata i64 %call110, metadata !5796, metadata !DIExpression()), !dbg !5809
  br label %if.end131, !dbg !5910

if.else111:                                       ; preds = %for.end
  %17 = bitcast %struct.mpn_base_info* %info to i8*, !dbg !5911
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11, !dbg !5911
  %conv112 = sext i32 %base.addr.3 to i64, !dbg !5912
  call void @llvm.dbg.value(metadata %struct.mpn_base_info* %info, metadata !5806, metadata !DIExpression(DW_OP_deref)), !dbg !5913
  call fastcc void @mpn_get_base_info(%struct.mpn_base_info* nonnull %info, i64 %conv112) #10, !dbg !5914
  %exp = getelementptr inbounds %struct.mpn_base_info, %struct.mpn_base_info* %info, i64 0, i32 0, !dbg !5915
  %18 = load i32, i32* %exp, align 8, !dbg !5915, !tbaa !1048
  %conv113 = zext i32 %18 to i64, !dbg !5916
  %add114 = add i64 %sn.0.lcssa, %conv113, !dbg !5917
  %sub115 = add i64 %add114, -1, !dbg !5918
  %div118 = udiv i64 %sub115, %conv113, !dbg !5919
  call void @llvm.dbg.value(metadata i64 %div118, metadata !5797, metadata !DIExpression()), !dbg !5809
  %_mp_alloc119 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !5920
  %19 = load i32, i32* %_mp_alloc119, align 8, !dbg !5920, !tbaa !1326
  %conv120 = sext i32 %19 to i64, !dbg !5920
  %cmp121 = icmp sgt i64 %div118, %conv120, !dbg !5920
  br i1 %cmp121, label %cond.true123, label %cond.false125, !dbg !5920

cond.true123:                                     ; preds = %if.else111
  %call124 = call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %div118) #10, !dbg !5920
  br label %cond.end127, !dbg !5920

cond.false125:                                    ; preds = %if.else111
  %_mp_d126 = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !5920
  %20 = bitcast i64** %_mp_d126 to i8**, !dbg !5920
  %21 = load i8*, i8** %20, align 8, !dbg !5920, !tbaa !1334
  br label %cond.end127, !dbg !5920

cond.end127:                                      ; preds = %cond.false125, %cond.true123
  %cond128 = phi i8* [ %call124, %cond.true123 ], [ %21, %cond.false125 ], !dbg !5920
  %22 = bitcast i8* %cond128 to i64*, !dbg !5920
  call void @llvm.dbg.value(metadata i64* %22, metadata !5798, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata %struct.mpn_base_info* %info, metadata !5806, metadata !DIExpression(DW_OP_deref)), !dbg !5913
  %call130 = call fastcc i64 @mpn_set_str_other(i64* %22, i8* %call44, i64 %sn.0.lcssa, i64 %conv112, %struct.mpn_base_info* nonnull %info) #10, !dbg !5921
  call void @llvm.dbg.value(metadata i64 %call130, metadata !5796, metadata !DIExpression()), !dbg !5809
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11, !dbg !5922
  br label %if.end131

if.end131:                                        ; preds = %cond.end127, %cond.end
  %alloc.0 = phi i64 [ %div, %cond.end ], [ %div118, %cond.end127 ], !dbg !5923
  %rn.0 = phi i64 [ %call110, %cond.end ], [ %call130, %cond.end127 ], !dbg !5923
  call void @llvm.dbg.value(metadata i64 %rn.0, metadata !5796, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i64 %alloc.0, metadata !5797, metadata !DIExpression()), !dbg !5809
  %cmp132 = icmp sgt i64 %rn.0, %alloc.0, !dbg !5924
  br i1 %cmp132, label %if.else135, label %if.end136, !dbg !5927

if.else135:                                       ; preds = %if.end131
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4193, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.mpz_set_str, i64 0, i64 0)) #8, !dbg !5924
  unreachable, !dbg !5924

if.end136:                                        ; preds = %if.end131
  %23 = load void (i8*, i64)*, void (i8*, i64)** @gmp_free_func, align 8, !dbg !5928, !tbaa !73
  call void %23(i8* %call44, i64 0) #9, !dbg !5928
  %sub139 = sub nsw i64 0, %rn.0, !dbg !5929
  %cond142 = select i1 %cmp5, i64 %sub139, i64 %rn.0, !dbg !5929
  %conv143 = trunc i64 %cond142 to i32, !dbg !5929
  store i32 %conv143, i32* %_mp_size, align 4, !dbg !5930, !tbaa !1330
  br label %cleanup145, !dbg !5931

cleanup145.loopexit:                              ; preds = %cleanup
  br label %cleanup145, !dbg !5932

cleanup145:                                       ; preds = %cleanup145.loopexit, %if.end136
  %retval.2 = phi i32 [ 0, %if.end136 ], [ -1, %cleanup145.loopexit ]
  ret i32 %retval.2, !dbg !5932
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() local_unnamed_addr #4

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @mpz_init_set_str(%struct.__mpz_struct* %r, i8* %sp, i32 %base) local_unnamed_addr #0 !dbg !5933 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !5935, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i8* %sp, metadata !5936, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i32 %base, metadata !5937, metadata !DIExpression()), !dbg !5938
  tail call void @mpz_init(%struct.__mpz_struct* %r) #10, !dbg !5939
  %call = tail call i32 @mpz_set_str(%struct.__mpz_struct* %r, i8* %sp, i32 %base) #10, !dbg !5940
  ret i32 %call, !dbg !5941
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mpz_out_str(%struct._IO_FILE* %stream, i32 %base, %struct.__mpz_struct* %x) local_unnamed_addr #0 !dbg !5942 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %stream, metadata !5998, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata i32 %base, metadata !5999, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %x, metadata !6000, metadata !DIExpression()), !dbg !6003
  %call = tail call i8* @mpz_get_str(i8* null, i32 %base, %struct.__mpz_struct* %x) #10, !dbg !6004
  call void @llvm.dbg.value(metadata i8* %call, metadata !6001, metadata !DIExpression()), !dbg !6003
  %call1 = tail call i64 @strlen(i8* %call) #13, !dbg !6005
  call void @llvm.dbg.value(metadata i64 %call1, metadata !6002, metadata !DIExpression()), !dbg !6003
  %call2 = tail call i64 @fwrite(i8* %call, i64 1, i64 %call1, %struct._IO_FILE* %stream) #9, !dbg !6006
  call void @llvm.dbg.value(metadata i64 %call2, metadata !6002, metadata !DIExpression()), !dbg !6003
  %0 = load void (i8*, i64)*, void (i8*, i64)** @gmp_free_func, align 8, !dbg !6007, !tbaa !73
  tail call void %0(i8* %call, i64 0) #9, !dbg !6007
  ret i64 %call2, !dbg !6008
}

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define dso_local void @mpz_import(%struct.__mpz_struct* %r, i64 %count, i32 %order, i64 %size, i32 %endian, i64 %nails, i8* %src) local_unnamed_addr #0 !dbg !6009 {
entry:
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %r, metadata !6015, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %count, metadata !6016, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %order, metadata !6017, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %size, metadata !6018, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %endian, metadata !6019, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %nails, metadata !6020, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %src, metadata !6021, metadata !DIExpression()), !dbg !6033
  %cmp = icmp eq i64 %nails, 0, !dbg !6034
  br i1 %cmp, label %if.end, label %if.then, !dbg !6036

if.then:                                          ; preds = %entry
  tail call fastcc void @gmp_die(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0)) #10, !dbg !6037
  br label %if.end, !dbg !6037

if.end:                                           ; preds = %entry, %if.then
  switch i32 %order, label %if.else [
    i32 1, label %if.end4
    i32 -1, label %if.end4
  ], !dbg !6038

if.else:                                          ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4251, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__.mpz_import, i64 0, i64 0)) #8, !dbg !6038
  unreachable, !dbg !6038

if.end4:                                          ; preds = %if.end, %if.end
  %endian.off = add i32 %endian, 1, !dbg !6041
  %0 = icmp ult i32 %endian.off, 3, !dbg !6041
  br i1 %0, label %if.end9, label %if.else8, !dbg !6041

if.else8:                                         ; preds = %if.end4
  tail call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4252, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__.mpz_import, i64 0, i64 0)) #8, !dbg !6041
  unreachable, !dbg !6041

if.end9:                                          ; preds = %if.end4
  %cmp10 = icmp eq i32 %endian, 0, !dbg !6044
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !6046

if.then11:                                        ; preds = %if.end9
  %call = tail call fastcc i32 @gmp_detect_endian() #10, !dbg !6047
  call void @llvm.dbg.value(metadata i32 -1, metadata !6019, metadata !DIExpression()), !dbg !6033
  br label %if.end12, !dbg !6048

if.end12:                                         ; preds = %if.then11, %if.end9
  %endian.addr.0 = phi i32 [ -1, %if.then11 ], [ %endian, %if.end9 ]
  call void @llvm.dbg.value(metadata i32 %endian.addr.0, metadata !6019, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %src, metadata !6022, metadata !DIExpression()), !dbg !6033
  %cmp13 = icmp eq i32 %endian.addr.0, %order, !dbg !6049
  %mul = shl i64 %size, 1, !dbg !6050
  %cond = select i1 %cmp13, i64 0, i64 %mul, !dbg !6050
  call void @llvm.dbg.value(metadata i64 %cond, metadata !6023, metadata !DIExpression()), !dbg !6033
  %cmp14 = icmp eq i32 %order, 1, !dbg !6051
  br i1 %cmp14, label %if.then15, label %if.end18, !dbg !6053

if.then15:                                        ; preds = %if.end12
  %sub = add i64 %count, -1, !dbg !6054
  %mul16 = mul i64 %sub, %size, !dbg !6056
  %add.ptr = getelementptr inbounds i8, i8* %src, i64 %mul16, !dbg !6057
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !6022, metadata !DIExpression()), !dbg !6033
  %sub17 = sub nsw i64 0, %cond, !dbg !6058
  call void @llvm.dbg.value(metadata i64 %sub17, metadata !6023, metadata !DIExpression()), !dbg !6033
  br label %if.end18, !dbg !6059

if.end18:                                         ; preds = %if.then15, %if.end12
  %p.0 = phi i8* [ %add.ptr, %if.then15 ], [ %src, %if.end12 ], !dbg !6033
  %word_step.0 = phi i64 [ %sub17, %if.then15 ], [ %cond, %if.end12 ], !dbg !6033
  call void @llvm.dbg.value(metadata i64 %word_step.0, metadata !6023, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !6022, metadata !DIExpression()), !dbg !6033
  %cmp19 = icmp eq i32 %endian.addr.0, 1, !dbg !6060
  %sub21 = add i64 %size, -1, !dbg !6062
  %add.ptr22 = getelementptr inbounds i8, i8* %p.0, i64 %sub21, !dbg !6062
  %p.1 = select i1 %cmp19, i8* %add.ptr22, i8* %p.0, !dbg !6062
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !6022, metadata !DIExpression()), !dbg !6033
  %mul24 = mul i64 %size, %count, !dbg !6063
  %sub25 = add i64 %mul24, 7, !dbg !6064
  %div = lshr i64 %sub25, 3, !dbg !6065
  call void @llvm.dbg.value(metadata i64 %div, metadata !6025, metadata !DIExpression()), !dbg !6033
  %_mp_alloc = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 0, !dbg !6066
  %1 = load i32, i32* %_mp_alloc, align 8, !dbg !6066, !tbaa !1326
  %conv = sext i32 %1 to i64, !dbg !6066
  %cmp26 = icmp sgt i64 %div, %conv, !dbg !6066
  br i1 %cmp26, label %cond.true28, label %cond.false30, !dbg !6066

cond.true28:                                      ; preds = %if.end18
  %call29 = tail call fastcc i8* @mpz_realloc(%struct.__mpz_struct* %r, i64 %div) #10, !dbg !6066
  br label %cond.end31, !dbg !6066

cond.false30:                                     ; preds = %if.end18
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 2, !dbg !6066
  %2 = bitcast i64** %_mp_d to i8**, !dbg !6066
  %3 = load i8*, i8** %2, align 8, !dbg !6066, !tbaa !1334
  br label %cond.end31, !dbg !6066

cond.end31:                                       ; preds = %cond.false30, %cond.true28
  %cond32 = phi i8* [ %call29, %cond.true28 ], [ %3, %cond.false30 ], !dbg !6066
  %4 = bitcast i8* %cond32 to i64*, !dbg !6066
  call void @llvm.dbg.value(metadata i64* %4, metadata !6024, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 0, metadata !6026, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 0, metadata !6027, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 0, metadata !6028, metadata !DIExpression()), !dbg !6033
  %conv47 = sext i32 %endian.addr.0 to i64, !dbg !6067
  %idx.neg = sub nsw i64 0, %conv47, !dbg !6067
  br label %for.cond, !dbg !6070

for.cond:                                         ; preds = %for.inc49, %cond.end31
  %p.2 = phi i8* [ %p.1, %cond.end31 ], [ %add.ptr50, %for.inc49 ], !dbg !6033
  %limb.0 = phi i64 [ 0, %cond.end31 ], [ %limb.1.lcssa, %for.inc49 ], !dbg !6071
  %bytes.0 = phi i64 [ 0, %cond.end31 ], [ %bytes.1.lcssa, %for.inc49 ], !dbg !6072
  %i.0 = phi i64 [ 0, %cond.end31 ], [ %i.1.lcssa, %for.inc49 ], !dbg !6073
  %count.addr.0 = phi i64 [ %count, %cond.end31 ], [ %dec, %for.inc49 ]
  call void @llvm.dbg.value(metadata i64 %count.addr.0, metadata !6016, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6028, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %bytes.0, metadata !6027, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %limb.0, metadata !6026, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %p.2, metadata !6022, metadata !DIExpression()), !dbg !6033
  %cmp33 = icmp eq i64 %count.addr.0, 0, !dbg !6074
  br i1 %cmp33, label %for.end51, label %for.cond35.preheader, !dbg !6075

for.cond35.preheader:                             ; preds = %for.cond
  br label %for.cond35, !dbg !6076

for.cond35:                                       ; preds = %for.cond35.preheader, %for.inc
  %p.3 = phi i8* [ %add.ptr48, %for.inc ], [ %p.2, %for.cond35.preheader ], !dbg !6033
  %limb.1 = phi i64 [ %limb.2, %for.inc ], [ %limb.0, %for.cond35.preheader ], !dbg !6077
  %bytes.1 = phi i64 [ %bytes.2, %for.inc ], [ %bytes.0, %for.cond35.preheader ], !dbg !6077
  %i.1 = phi i64 [ %i.2, %for.inc ], [ %i.0, %for.cond35.preheader ], !dbg !6077
  %j.0 = phi i64 [ %inc46, %for.inc ], [ 0, %for.cond35.preheader ], !dbg !6078
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !6029, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !6028, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %bytes.1, metadata !6027, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %limb.1, metadata !6026, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %p.3, metadata !6022, metadata !DIExpression()), !dbg !6033
  %exitcond = icmp eq i64 %j.0, %size, !dbg !6080
  br i1 %exitcond, label %for.inc49, label %for.body38, !dbg !6076

for.body38:                                       ; preds = %for.cond35
  %5 = load i8, i8* %p.3, align 1, !dbg !6081, !tbaa !1018
  %conv39 = zext i8 %5 to i64, !dbg !6083
  %inc = add i64 %bytes.1, 1, !dbg !6084
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6027, metadata !DIExpression()), !dbg !6033
  %mul40 = shl i64 %bytes.1, 3, !dbg !6085
  %shl = shl i64 %conv39, %mul40, !dbg !6086
  %or = or i64 %limb.1, %shl, !dbg !6087
  call void @llvm.dbg.value(metadata i64 %or, metadata !6026, metadata !DIExpression()), !dbg !6033
  %cmp41 = icmp eq i64 %inc, 8, !dbg !6088
  br i1 %cmp41, label %if.then43, label %for.inc, !dbg !6090

if.then43:                                        ; preds = %for.body38
  %inc44 = add nsw i64 %i.1, 1, !dbg !6091
  call void @llvm.dbg.value(metadata i64 %inc44, metadata !6028, metadata !DIExpression()), !dbg !6033
  %arrayidx = getelementptr inbounds i64, i64* %4, i64 %i.1, !dbg !6093
  store i64 %or, i64* %arrayidx, align 8, !dbg !6094, !tbaa !168
  call void @llvm.dbg.value(metadata i64 0, metadata !6027, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 0, metadata !6026, metadata !DIExpression()), !dbg !6033
  br label %for.inc, !dbg !6095

for.inc:                                          ; preds = %for.body38, %if.then43
  %limb.2 = phi i64 [ 0, %if.then43 ], [ %or, %for.body38 ], !dbg !6096
  %bytes.2 = phi i64 [ 0, %if.then43 ], [ %inc, %for.body38 ], !dbg !6096
  %i.2 = phi i64 [ %inc44, %if.then43 ], [ %i.1, %for.body38 ], !dbg !6077
  call void @llvm.dbg.value(metadata i64 %i.2, metadata !6028, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %bytes.2, metadata !6027, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %limb.2, metadata !6026, metadata !DIExpression()), !dbg !6033
  %inc46 = add i64 %j.0, 1, !dbg !6097
  call void @llvm.dbg.value(metadata i64 %inc46, metadata !6029, metadata !DIExpression()), !dbg !6079
  %add.ptr48 = getelementptr inbounds i8, i8* %p.3, i64 %idx.neg, !dbg !6098
  call void @llvm.dbg.value(metadata i8* %add.ptr48, metadata !6022, metadata !DIExpression()), !dbg !6033
  br label %for.cond35, !dbg !6099, !llvm.loop !6100

for.inc49:                                        ; preds = %for.cond35
  %p.3.lcssa = phi i8* [ %p.3, %for.cond35 ], !dbg !6033
  %limb.1.lcssa = phi i64 [ %limb.1, %for.cond35 ], !dbg !6077
  %bytes.1.lcssa = phi i64 [ %bytes.1, %for.cond35 ], !dbg !6077
  %i.1.lcssa = phi i64 [ %i.1, %for.cond35 ], !dbg !6077
  call void @llvm.dbg.value(metadata i8* %p.3.lcssa, metadata !6022, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %limb.1.lcssa, metadata !6026, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %bytes.1.lcssa, metadata !6027, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !6028, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %p.3.lcssa, metadata !6022, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %limb.1.lcssa, metadata !6026, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %bytes.1.lcssa, metadata !6027, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !6028, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %p.3.lcssa, metadata !6022, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %limb.1.lcssa, metadata !6026, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %bytes.1.lcssa, metadata !6027, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !6028, metadata !DIExpression()), !dbg !6033
  %dec = add i64 %count.addr.0, -1, !dbg !6102
  call void @llvm.dbg.value(metadata i64 %dec, metadata !6016, metadata !DIExpression()), !dbg !6033
  %add.ptr50 = getelementptr inbounds i8, i8* %p.3.lcssa, i64 %word_step.0, !dbg !6103
  call void @llvm.dbg.value(metadata i8* %add.ptr50, metadata !6022, metadata !DIExpression()), !dbg !6033
  br label %for.cond, !dbg !6104, !llvm.loop !6105

for.end51:                                        ; preds = %for.cond
  %limb.0.lcssa = phi i64 [ %limb.0, %for.cond ], !dbg !6071
  %bytes.0.lcssa = phi i64 [ %bytes.0, %for.cond ], !dbg !6072
  %i.0.lcssa = phi i64 [ %i.0, %for.cond ], !dbg !6073
  call void @llvm.dbg.value(metadata i64 %limb.0.lcssa, metadata !6026, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %bytes.0.lcssa, metadata !6027, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6028, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %limb.0.lcssa, metadata !6026, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %bytes.0.lcssa, metadata !6027, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6028, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %limb.0.lcssa, metadata !6026, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %bytes.0.lcssa, metadata !6027, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6028, metadata !DIExpression()), !dbg !6033
  %cmp52 = icmp ne i64 %bytes.0.lcssa, 0, !dbg !6107
  %conv54 = zext i1 %cmp52 to i64, !dbg !6107
  %add55 = add nsw i64 %i.0.lcssa, %conv54, !dbg !6107
  %cmp56 = icmp eq i64 %add55, %div, !dbg !6107
  br i1 %cmp56, label %if.end60, label %if.else59, !dbg !6110

if.else59:                                        ; preds = %for.end51
  tail call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4290, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__.mpz_import, i64 0, i64 0)) #8, !dbg !6107
  unreachable, !dbg !6107

if.end60:                                         ; preds = %for.end51
  %cmp61 = icmp eq i64 %limb.0.lcssa, 0, !dbg !6111
  br i1 %cmp61, label %if.else66, label %if.then63, !dbg !6113

if.then63:                                        ; preds = %if.end60
  %inc64 = add nsw i64 %i.0.lcssa, 1, !dbg !6114
  call void @llvm.dbg.value(metadata i64 %inc64, metadata !6028, metadata !DIExpression()), !dbg !6033
  %arrayidx65 = getelementptr inbounds i64, i64* %4, i64 %i.0.lcssa, !dbg !6115
  store i64 %limb.0.lcssa, i64* %arrayidx65, align 8, !dbg !6116, !tbaa !168
  br label %if.end68, !dbg !6115

if.else66:                                        ; preds = %if.end60
  %call67 = tail call fastcc i64 @mpn_normalized_size(i64* %4, i64 %i.0.lcssa) #10, !dbg !6117
  call void @llvm.dbg.value(metadata i64 %call67, metadata !6028, metadata !DIExpression()), !dbg !6033
  br label %if.end68

if.end68:                                         ; preds = %if.else66, %if.then63
  %i.3 = phi i64 [ %inc64, %if.then63 ], [ %call67, %if.else66 ], !dbg !6118
  call void @llvm.dbg.value(metadata i64 %i.3, metadata !6028, metadata !DIExpression()), !dbg !6033
  %conv69 = trunc i64 %i.3 to i32, !dbg !6119
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %r, i64 0, i32 1, !dbg !6120
  store i32 %conv69, i32* %_mp_size, align 4, !dbg !6121, !tbaa !1330
  ret void, !dbg !6122
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @gmp_detect_endian() unnamed_addr #0 !dbg !48 {
entry:
  ret i32 undef, !dbg !6123
}

; Function Attrs: nounwind uwtable
define dso_local i8* @mpz_export(i8* %r, i64* %countp, i32 %order, i64 %size, i32 %endian, i64 %nails, %struct.__mpz_struct* %u) local_unnamed_addr #0 !dbg !6124 {
entry:
  call void @llvm.dbg.value(metadata i8* %r, metadata !6129, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i64* %countp, metadata !6130, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i32 %order, metadata !6131, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i64 %size, metadata !6132, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i32 %endian, metadata !6133, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i64 %nails, metadata !6134, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata %struct.__mpz_struct* %u, metadata !6135, metadata !DIExpression()), !dbg !6150
  %cmp = icmp eq i64 %nails, 0, !dbg !6151
  br i1 %cmp, label %if.end, label %if.then, !dbg !6153

if.then:                                          ; preds = %entry
  tail call fastcc void @gmp_die(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0)) #10, !dbg !6154
  br label %if.end, !dbg !6154

if.end:                                           ; preds = %entry, %if.then
  switch i32 %order, label %if.else [
    i32 1, label %if.end4
    i32 -1, label %if.end4
  ], !dbg !6155

if.else:                                          ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4309, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.mpz_export, i64 0, i64 0)) #8, !dbg !6155
  unreachable, !dbg !6155

if.end4:                                          ; preds = %if.end, %if.end
  %endian.off = add i32 %endian, 1, !dbg !6158
  %0 = icmp ult i32 %endian.off, 3, !dbg !6158
  br i1 %0, label %if.end9, label %if.else8, !dbg !6158

if.else8:                                         ; preds = %if.end4
  tail call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4310, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.mpz_export, i64 0, i64 0)) #8, !dbg !6158
  unreachable, !dbg !6158

if.end9:                                          ; preds = %if.end4
  %cmp10 = icmp eq i64 %size, 0, !dbg !6161
  br i1 %cmp10, label %lor.lhs.false11, label %if.end9.if.end15_crit_edge, !dbg !6161

if.end9.if.end15_crit_edge:                       ; preds = %if.end9
  %_mp_size16.phi.trans.insert = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !6150
  %.pre = load i32, i32* %_mp_size16.phi.trans.insert, align 4, !dbg !6164, !tbaa !1330
  br label %if.end15, !dbg !6161

lor.lhs.false11:                                  ; preds = %if.end9
  %_mp_size = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 1, !dbg !6161
  %1 = load i32, i32* %_mp_size, align 4, !dbg !6161, !tbaa !1330
  %cmp12 = icmp eq i32 %1, 0, !dbg !6161
  br i1 %cmp12, label %if.end15, label %if.else14, !dbg !6165

if.else14:                                        ; preds = %lor.lhs.false11
  tail call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4311, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.mpz_export, i64 0, i64 0)) #8, !dbg !6161
  unreachable, !dbg !6161

if.end15:                                         ; preds = %if.end9.if.end15_crit_edge, %lor.lhs.false11
  %2 = phi i32 [ %.pre, %if.end9.if.end15_crit_edge ], [ 0, %lor.lhs.false11 ], !dbg !6164
  %conv = sext i32 %2 to i64, !dbg !6166
  call void @llvm.dbg.value(metadata i64 %conv, metadata !6137, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i64 0, metadata !6136, metadata !DIExpression()), !dbg !6150
  %cmp17 = icmp eq i32 %2, 0, !dbg !6167
  br i1 %cmp17, label %if.end97, label %if.then19, !dbg !6168

if.then19:                                        ; preds = %if.end15
  %cmp20 = icmp slt i64 %conv, 0, !dbg !6169
  %sub = sub nsw i64 0, %conv, !dbg !6169
  %cond = select i1 %cmp20, i64 %sub, i64 %conv, !dbg !6169
  call void @llvm.dbg.value(metadata i64 %cond, metadata !6137, metadata !DIExpression()), !dbg !6150
  %_mp_d = getelementptr inbounds %struct.__mpz_struct, %struct.__mpz_struct* %u, i64 0, i32 2, !dbg !6170
  %3 = load i64*, i64** %_mp_d, align 8, !dbg !6170, !tbaa !1334
  %sub22 = add nsw i64 %cond, -1, !dbg !6171
  %arrayidx = getelementptr inbounds i64, i64* %3, i64 %sub22, !dbg !6172
  %4 = load i64, i64* %arrayidx, align 8, !dbg !6172, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %4, metadata !6143, metadata !DIExpression()), !dbg !6173
  %cmp23 = icmp eq i64 %4, 0, !dbg !6174
  br i1 %cmp23, label %if.else26, label %do.body.preheader, !dbg !6177

do.body.preheader:                                ; preds = %if.then19
  br label %do.body, !dbg !6178

if.else26:                                        ; preds = %if.then19
  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4331, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.mpz_export, i64 0, i64 0)) #8, !dbg !6174
  unreachable, !dbg !6174

do.body:                                          ; preds = %do.body.preheader, %do.body
  %k.0 = phi i64 [ %inc, %do.body ], [ 0, %do.body.preheader ], !dbg !6173
  %limb.0 = phi i64 [ %shr, %do.body ], [ %4, %do.body.preheader ], !dbg !6173
  call void @llvm.dbg.value(metadata i64 %limb.0, metadata !6143, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %k.0, metadata !6138, metadata !DIExpression()), !dbg !6173
  %inc = add nuw nsw i64 %k.0, 1, !dbg !6179
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6138, metadata !DIExpression()), !dbg !6173
  %shr = lshr i64 %limb.0, 8, !dbg !6181
  call void @llvm.dbg.value(metadata i64 %shr, metadata !6143, metadata !DIExpression()), !dbg !6173
  %cmp28 = icmp eq i64 %shr, 0, !dbg !6182
  br i1 %cmp28, label %do.end, label %do.body, !dbg !6183, !llvm.loop !6184

do.end:                                           ; preds = %do.body
  %inc.lcssa = phi i64 [ %inc, %do.body ], !dbg !6179
  %sub30 = shl nsw i64 %cond, 3, !dbg !6186
  %mul = add nsw i64 %sub30, -8, !dbg !6186
  %add = add i64 %inc.lcssa, %mul, !dbg !6187
  %add31 = add i64 %add, %size, !dbg !6188
  %sub32 = add i64 %add31, -1, !dbg !6189
  %div = udiv i64 %sub32, %size, !dbg !6190
  call void @llvm.dbg.value(metadata i64 %div, metadata !6136, metadata !DIExpression()), !dbg !6150
  %tobool = icmp eq i8* %r, null, !dbg !6191
  br i1 %tobool, label %if.then33, label %if.end35, !dbg !6193

if.then33:                                        ; preds = %do.end
  %5 = load i8* (i64)*, i8* (i64)** @gmp_allocate_func, align 8, !dbg !6194, !tbaa !73
  %mul34 = mul i64 %div, %size, !dbg !6194
  %call = tail call i8* %5(i64 %mul34) #9, !dbg !6194
  call void @llvm.dbg.value(metadata i8* %call, metadata !6129, metadata !DIExpression()), !dbg !6150
  br label %if.end35, !dbg !6195

if.end35:                                         ; preds = %do.end, %if.then33
  %r.addr.0 = phi i8* [ %r, %do.end ], [ %call, %if.then33 ]
  call void @llvm.dbg.value(metadata i8* %r.addr.0, metadata !6129, metadata !DIExpression()), !dbg !6150
  %cmp36 = icmp eq i32 %endian, 0, !dbg !6196
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !6198

if.then38:                                        ; preds = %if.end35
  %call39 = tail call fastcc i32 @gmp_detect_endian() #10, !dbg !6199
  call void @llvm.dbg.value(metadata i32 -1, metadata !6133, metadata !DIExpression()), !dbg !6150
  br label %if.end40, !dbg !6200

if.end40:                                         ; preds = %if.then38, %if.end35
  %endian.addr.0 = phi i32 [ -1, %if.then38 ], [ %endian, %if.end35 ]
  call void @llvm.dbg.value(metadata i32 %endian.addr.0, metadata !6133, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i8* %r.addr.0, metadata !6141, metadata !DIExpression()), !dbg !6173
  %cmp41 = icmp eq i32 %endian.addr.0, %order, !dbg !6201
  %mul44 = shl i64 %size, 1, !dbg !6202
  %cond47 = select i1 %cmp41, i64 0, i64 %mul44, !dbg !6202
  call void @llvm.dbg.value(metadata i64 %cond47, metadata !6142, metadata !DIExpression()), !dbg !6173
  %cmp48 = icmp eq i32 %order, 1, !dbg !6203
  br i1 %cmp48, label %if.then50, label %if.end54, !dbg !6205

if.then50:                                        ; preds = %if.end40
  %sub51 = add i64 %div, -1, !dbg !6206
  %mul52 = mul i64 %sub51, %size, !dbg !6208
  %add.ptr = getelementptr inbounds i8, i8* %r.addr.0, i64 %mul52, !dbg !6209
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !6141, metadata !DIExpression()), !dbg !6173
  %sub53 = sub nsw i64 0, %cond47, !dbg !6210
  call void @llvm.dbg.value(metadata i64 %sub53, metadata !6142, metadata !DIExpression()), !dbg !6173
  br label %if.end54, !dbg !6211

if.end54:                                         ; preds = %if.then50, %if.end40
  %p.0 = phi i8* [ %add.ptr, %if.then50 ], [ %r.addr.0, %if.end40 ], !dbg !6173
  %word_step.0 = phi i64 [ %sub53, %if.then50 ], [ %cond47, %if.end40 ], !dbg !6173
  call void @llvm.dbg.value(metadata i64 %word_step.0, metadata !6142, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !6141, metadata !DIExpression()), !dbg !6173
  %cmp55 = icmp eq i32 %endian.addr.0, 1, !dbg !6212
  %sub58 = add i64 %size, -1, !dbg !6214
  %add.ptr59 = getelementptr inbounds i8, i8* %p.0, i64 %sub58, !dbg !6214
  %p.1 = select i1 %cmp55, i8* %add.ptr59, i8* %p.0, !dbg !6214
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !6141, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 0, metadata !6144, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 0, metadata !6145, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 0, metadata !6138, metadata !DIExpression()), !dbg !6173
  %conv81 = sext i32 %endian.addr.0 to i64, !dbg !6215
  %idx.neg = sub nsw i64 0, %conv81, !dbg !6215
  br label %for.cond, !dbg !6218

for.cond:                                         ; preds = %for.inc83, %if.end54
  %p.2 = phi i8* [ %p.1, %if.end54 ], [ %add.ptr85, %for.inc83 ], !dbg !6173
  %k.1 = phi i64 [ 0, %if.end54 ], [ %inc84, %for.inc83 ], !dbg !6219
  %limb.1 = phi i64 [ 0, %if.end54 ], [ %limb.2.lcssa, %for.inc83 ], !dbg !6181
  %bytes.0 = phi i64 [ 0, %if.end54 ], [ %bytes.1.lcssa, %for.inc83 ], !dbg !6220
  %i.0 = phi i64 [ 0, %if.end54 ], [ %i.1.lcssa, %for.inc83 ], !dbg !6221
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6145, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %bytes.0, metadata !6144, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %limb.1, metadata !6143, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %k.1, metadata !6138, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i8* %p.2, metadata !6141, metadata !DIExpression()), !dbg !6173
  %cmp61 = icmp ult i64 %k.1, %div, !dbg !6222
  br i1 %cmp61, label %for.cond63.preheader, label %for.end86, !dbg !6223

for.cond63.preheader:                             ; preds = %for.cond
  br label %for.cond63, !dbg !6224

for.cond63:                                       ; preds = %for.cond63.preheader, %if.end77
  %p.3 = phi i8* [ %add.ptr82, %if.end77 ], [ %p.2, %for.cond63.preheader ], !dbg !6173
  %limb.2 = phi i64 [ %shr79, %if.end77 ], [ %limb.1, %for.cond63.preheader ], !dbg !6173
  %bytes.1 = phi i64 [ %dec, %if.end77 ], [ %bytes.0, %for.cond63.preheader ], !dbg !6219
  %i.1 = phi i64 [ %i.3, %if.end77 ], [ %i.0, %for.cond63.preheader ], !dbg !6219
  %j.0 = phi i64 [ %inc80, %if.end77 ], [ 0, %for.cond63.preheader ], !dbg !6225
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !6146, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !6145, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %bytes.1, metadata !6144, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %limb.2, metadata !6143, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i8* %p.3, metadata !6141, metadata !DIExpression()), !dbg !6173
  %exitcond = icmp eq i64 %j.0, %size, !dbg !6227
  br i1 %exitcond, label %for.inc83, label %for.body66, !dbg !6224

for.body66:                                       ; preds = %for.cond63
  %cmp67 = icmp eq i64 %bytes.1, 0, !dbg !6228
  br i1 %cmp67, label %if.then69, label %if.end77, !dbg !6231

if.then69:                                        ; preds = %for.body66
  %cmp70 = icmp slt i64 %i.1, %cond, !dbg !6232
  br i1 %cmp70, label %if.then72, label %if.end77, !dbg !6235

if.then72:                                        ; preds = %if.then69
  %6 = load i64*, i64** %_mp_d, align 8, !dbg !6236, !tbaa !1334
  %inc74 = add nsw i64 %i.1, 1, !dbg !6237
  call void @llvm.dbg.value(metadata i64 %inc74, metadata !6145, metadata !DIExpression()), !dbg !6173
  %arrayidx75 = getelementptr inbounds i64, i64* %6, i64 %i.1, !dbg !6238
  %7 = load i64, i64* %arrayidx75, align 8, !dbg !6238, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %7, metadata !6143, metadata !DIExpression()), !dbg !6173
  br label %if.end77, !dbg !6239

if.end77:                                         ; preds = %if.then69, %if.then72, %for.body66
  %limb.4 = phi i64 [ %limb.2, %for.body66 ], [ %7, %if.then72 ], [ %limb.2, %if.then69 ], !dbg !6173
  %bytes.2 = phi i64 [ %bytes.1, %for.body66 ], [ 8, %if.then72 ], [ 8, %if.then69 ], !dbg !6219
  %i.3 = phi i64 [ %i.1, %for.body66 ], [ %inc74, %if.then72 ], [ %i.1, %if.then69 ], !dbg !6219
  call void @llvm.dbg.value(metadata i64 %i.3, metadata !6145, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %bytes.2, metadata !6144, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %limb.4, metadata !6143, metadata !DIExpression()), !dbg !6173
  %conv78 = trunc i64 %limb.4 to i8, !dbg !6240
  store i8 %conv78, i8* %p.3, align 1, !dbg !6241, !tbaa !1018
  %shr79 = lshr i64 %limb.4, 8, !dbg !6242
  call void @llvm.dbg.value(metadata i64 %shr79, metadata !6143, metadata !DIExpression()), !dbg !6173
  %dec = add i64 %bytes.2, -1, !dbg !6243
  call void @llvm.dbg.value(metadata i64 %dec, metadata !6144, metadata !DIExpression()), !dbg !6173
  %inc80 = add i64 %j.0, 1, !dbg !6244
  call void @llvm.dbg.value(metadata i64 %inc80, metadata !6146, metadata !DIExpression()), !dbg !6226
  %add.ptr82 = getelementptr inbounds i8, i8* %p.3, i64 %idx.neg, !dbg !6245
  call void @llvm.dbg.value(metadata i8* %add.ptr82, metadata !6141, metadata !DIExpression()), !dbg !6173
  br label %for.cond63, !dbg !6246, !llvm.loop !6247

for.inc83:                                        ; preds = %for.cond63
  %p.3.lcssa = phi i8* [ %p.3, %for.cond63 ], !dbg !6173
  %limb.2.lcssa = phi i64 [ %limb.2, %for.cond63 ], !dbg !6173
  %bytes.1.lcssa = phi i64 [ %bytes.1, %for.cond63 ], !dbg !6219
  %i.1.lcssa = phi i64 [ %i.1, %for.cond63 ], !dbg !6219
  call void @llvm.dbg.value(metadata i8* %p.3.lcssa, metadata !6141, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %limb.2.lcssa, metadata !6143, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %bytes.1.lcssa, metadata !6144, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !6145, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i8* %p.3.lcssa, metadata !6141, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %limb.2.lcssa, metadata !6143, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %bytes.1.lcssa, metadata !6144, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !6145, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i8* %p.3.lcssa, metadata !6141, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %limb.2.lcssa, metadata !6143, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %bytes.1.lcssa, metadata !6144, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %i.1.lcssa, metadata !6145, metadata !DIExpression()), !dbg !6173
  %inc84 = add i64 %k.1, 1, !dbg !6249
  call void @llvm.dbg.value(metadata i64 %inc84, metadata !6138, metadata !DIExpression()), !dbg !6173
  %add.ptr85 = getelementptr inbounds i8, i8* %p.3.lcssa, i64 %word_step.0, !dbg !6250
  call void @llvm.dbg.value(metadata i8* %add.ptr85, metadata !6141, metadata !DIExpression()), !dbg !6173
  br label %for.cond, !dbg !6251, !llvm.loop !6252

for.end86:                                        ; preds = %for.cond
  %k.1.lcssa = phi i64 [ %k.1, %for.cond ], !dbg !6219
  %i.0.lcssa = phi i64 [ %i.0, %for.cond ], !dbg !6221
  call void @llvm.dbg.value(metadata i64 %k.1.lcssa, metadata !6138, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6145, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %k.1.lcssa, metadata !6138, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6145, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %k.1.lcssa, metadata !6138, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6145, metadata !DIExpression()), !dbg !6173
  %cmp87 = icmp eq i64 %i.0.lcssa, %cond, !dbg !6254
  br i1 %cmp87, label %if.end91, label %if.else90, !dbg !6257

if.else90:                                        ; preds = %for.end86
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4378, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.mpz_export, i64 0, i64 0)) #8, !dbg !6254
  unreachable, !dbg !6254

if.end91:                                         ; preds = %for.end86
  %cmp92 = icmp eq i64 %k.1.lcssa, %div, !dbg !6258
  br i1 %cmp92, label %if.end97, label %if.else95, !dbg !6261

if.else95:                                        ; preds = %if.end91
  tail call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4379, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__.mpz_export, i64 0, i64 0)) #8, !dbg !6258
  unreachable, !dbg !6258

if.end97:                                         ; preds = %if.end15, %if.end91
  %count.0 = phi i64 [ 0, %if.end15 ], [ %div, %if.end91 ], !dbg !6150
  %r.addr.1 = phi i8* [ %r, %if.end15 ], [ %r.addr.0, %if.end91 ]
  call void @llvm.dbg.value(metadata i8* %r.addr.1, metadata !6129, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i64 %count.0, metadata !6136, metadata !DIExpression()), !dbg !6150
  %tobool98 = icmp eq i64* %countp, null, !dbg !6262
  br i1 %tobool98, label %if.end100, label %if.then99, !dbg !6264

if.then99:                                        ; preds = %if.end97
  store i64 %count.0, i64* %countp, align 8, !dbg !6265, !tbaa !168
  br label %if.end100, !dbg !6266

if.end100:                                        ; preds = %if.end97, %if.then99
  ret i8* %r.addr.1, !dbg !6267
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare dso_local void @free(i8*) local_unnamed_addr #7

; Function Attrs: nounwind uwtable
define internal fastcc i64 @mpn_limb_get_str(i8* %sp, i64 %w, %struct.gmp_div_inverse* %binv) unnamed_addr #0 !dbg !6268 {
entry:
  call void @llvm.dbg.value(metadata i8* %sp, metadata !6272, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i64 %w, metadata !6273, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %binv, metadata !6274, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i64 0, metadata !6275, metadata !DIExpression()), !dbg !6300
  %shift = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %binv, i64 0, i32 0, !dbg !6301
  %di = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %binv, i64 0, i32 3, !dbg !6302
  %d1 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %binv, i64 0, i32 1, !dbg !6303
  br label %for.cond, !dbg !6304

for.cond:                                         ; preds = %if.end67, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc72, %if.end67 ], !dbg !6305
  %w.addr.0 = phi i64 [ %w, %entry ], [ %_qh.0, %if.end67 ]
  call void @llvm.dbg.value(metadata i64 %w.addr.0, metadata !6273, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6275, metadata !DIExpression()), !dbg !6300
  %cmp = icmp eq i64 %w.addr.0, 0, !dbg !6306
  br i1 %cmp, label %for.end, label %for.body, !dbg !6307

for.body:                                         ; preds = %for.cond
  %0 = load i32, i32* %shift, align 8, !dbg !6308, !tbaa !4040
  %conv = zext i32 %0 to i64, !dbg !6309
  %sub = sub nsw i64 64, %conv, !dbg !6310
  %shr = lshr i64 %w.addr.0, %sub, !dbg !6311
  call void @llvm.dbg.value(metadata i64 %shr, metadata !6276, metadata !DIExpression()), !dbg !6301
  %shl = shl i64 %w.addr.0, %conv, !dbg !6312
  call void @llvm.dbg.value(metadata i64 %shl, metadata !6280, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i64 %shr, metadata !6296, metadata !DIExpression()), !dbg !6302
  %1 = load i64, i64* %di, align 8, !dbg !6313, !tbaa !4228
  call void @llvm.dbg.value(metadata i64 %1, metadata !6297, metadata !DIExpression()), !dbg !6302
  %shr4 = lshr i64 %shr, 32, !dbg !6313
  %shr8 = lshr i64 %1, 32, !dbg !6313
  %conv10 = and i64 %shr, 4294967295, !dbg !6313
  %conv11 = and i64 %1, 4294967295, !dbg !6313
  %mul = mul nuw i64 %conv10, %conv11, !dbg !6313
  call void @llvm.dbg.value(metadata i64 %mul, metadata !6287, metadata !DIExpression()), !dbg !6302
  %mul14 = mul nuw i64 %conv10, %shr8, !dbg !6313
  call void @llvm.dbg.value(metadata i64 %mul14, metadata !6289, metadata !DIExpression()), !dbg !6302
  %mul17 = mul nuw i64 %shr4, %conv11, !dbg !6313
  call void @llvm.dbg.value(metadata i64 %mul17, metadata !6290, metadata !DIExpression()), !dbg !6302
  %mul20 = mul nuw i64 %shr4, %shr8, !dbg !6313
  call void @llvm.dbg.value(metadata i64 %mul20, metadata !6291, metadata !DIExpression()), !dbg !6302
  %shr21 = lshr i64 %mul, 32, !dbg !6313
  %add = add i64 %mul14, %shr21, !dbg !6313
  call void @llvm.dbg.value(metadata i64 %add, metadata !6289, metadata !DIExpression()), !dbg !6302
  %add22 = add i64 %add, %mul17, !dbg !6313
  call void @llvm.dbg.value(metadata i64 %add22, metadata !6289, metadata !DIExpression()), !dbg !6302
  %cmp23 = icmp ult i64 %add22, %mul17, !dbg !6314
  %add25 = add i64 %mul20, 4294967296, !dbg !6313
  %__x3.0 = select i1 %cmp23, i64 %add25, i64 %mul20, !dbg !6313
  call void @llvm.dbg.value(metadata i64 %__x3.0, metadata !6291, metadata !DIExpression()), !dbg !6302
  %shr26 = lshr i64 %add22, 32, !dbg !6313
  %add27 = add i64 %__x3.0, %shr26, !dbg !6313
  call void @llvm.dbg.value(metadata i64 %add27, metadata !6282, metadata !DIExpression()), !dbg !6303
  %shl28 = shl i64 %add22, 32, !dbg !6313
  %and29 = and i64 %mul, 4294967295, !dbg !6313
  %add30 = or i64 %shl28, %and29, !dbg !6313
  call void @llvm.dbg.value(metadata i64 %add30, metadata !6284, metadata !DIExpression()), !dbg !6303
  %add32 = add i64 %add30, %shl, !dbg !6316
  call void @llvm.dbg.value(metadata i64 %add32, metadata !6298, metadata !DIExpression()), !dbg !6317
  %add33 = add i64 %shr, 1, !dbg !6316
  %add34 = add i64 %add27, %add33, !dbg !6316
  %cmp35 = icmp ult i64 %add32, %add30, !dbg !6316
  %conv37 = zext i1 %cmp35 to i64, !dbg !6316
  %add38 = add i64 %add34, %conv37, !dbg !6316
  call void @llvm.dbg.value(metadata i64 %add38, metadata !6282, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.value(metadata i64 %add32, metadata !6284, metadata !DIExpression()), !dbg !6303
  %2 = load i64, i64* %d1, align 8, !dbg !6318, !tbaa !4221
  %mul41 = mul i64 %add38, %2, !dbg !6318
  %sub42 = sub i64 %shl, %mul41, !dbg !6318
  call void @llvm.dbg.value(metadata i64 %sub42, metadata !6285, metadata !DIExpression()), !dbg !6303
  %cmp43 = icmp ugt i64 %sub42, %add32, !dbg !6318
  %sub46 = sext i1 %cmp43 to i64, !dbg !6318
  call void @llvm.dbg.value(metadata i64 %sub46, metadata !6286, metadata !DIExpression()), !dbg !6303
  %add47 = add i64 %add38, %sub46, !dbg !6318
  call void @llvm.dbg.value(metadata i64 %add47, metadata !6282, metadata !DIExpression()), !dbg !6303
  %and49 = and i64 %2, %sub46, !dbg !6318
  %add50 = add i64 %sub42, %and49, !dbg !6318
  call void @llvm.dbg.value(metadata i64 %add50, metadata !6285, metadata !DIExpression()), !dbg !6303
  %cmp52 = icmp ult i64 %add50, %2, !dbg !6319
  br i1 %cmp52, label %do.end59, label %if.then54, !dbg !6318

if.then54:                                        ; preds = %for.body
  %sub56 = sub i64 %add50, %2, !dbg !6321
  call void @llvm.dbg.value(metadata i64 %sub56, metadata !6285, metadata !DIExpression()), !dbg !6303
  %inc = add i64 %add47, 1, !dbg !6321
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6282, metadata !DIExpression()), !dbg !6303
  br label %do.end59, !dbg !6321

do.end59:                                         ; preds = %for.body, %if.then54
  %_qh.0 = phi i64 [ %inc, %if.then54 ], [ %add47, %for.body ], !dbg !6303
  %_r.0 = phi i64 [ %sub56, %if.then54 ], [ %add50, %for.body ], !dbg !6303
  call void @llvm.dbg.value(metadata i64 %_r.0, metadata !6285, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.value(metadata i64 %_qh.0, metadata !6282, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.value(metadata i64 %_r.0, metadata !6281, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i64 %_qh.0, metadata !6273, metadata !DIExpression()), !dbg !6300
  %shl63 = shl i64 %_r.0, %sub, !dbg !6323
  %cmp64 = icmp eq i64 %shl63, 0, !dbg !6323
  br i1 %cmp64, label %if.end67, label %if.else, !dbg !6326

if.else:                                          ; preds = %do.end59
  tail call void @__assert_fail(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1201, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__.mpn_limb_get_str, i64 0, i64 0)) #8, !dbg !6323
  unreachable, !dbg !6323

if.end67:                                         ; preds = %do.end59
  %shr70 = lshr i64 %_r.0, %conv, !dbg !6327
  call void @llvm.dbg.value(metadata i64 %shr70, metadata !6281, metadata !DIExpression()), !dbg !6301
  %conv71 = trunc i64 %shr70 to i8, !dbg !6328
  %arrayidx = getelementptr inbounds i8, i8* %sp, i64 %i.0, !dbg !6329
  store i8 %conv71, i8* %arrayidx, align 1, !dbg !6330, !tbaa !1018
  %inc72 = add nuw nsw i64 %i.0, 1, !dbg !6331
  call void @llvm.dbg.value(metadata i64 %inc72, metadata !6275, metadata !DIExpression()), !dbg !6300
  br label %for.cond, !dbg !6332, !llvm.loop !6333

for.end:                                          ; preds = %for.cond
  %i.0.lcssa = phi i64 [ %i.0, %for.cond ], !dbg !6305
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6275, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6275, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !6275, metadata !DIExpression()), !dbg !6300
  ret i64 %i.0.lcssa, !dbg !6335
}

; Function Attrs: nounwind uwtable
define internal fastcc i64* @gmp_xrealloc_limbs(i64* %old, i64 %size) unnamed_addr #0 !dbg !6336 {
entry:
  call void @llvm.dbg.value(metadata i64* %old, metadata !6340, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.value(metadata i64 %size, metadata !6341, metadata !DIExpression()), !dbg !6342
  %cmp = icmp sgt i64 %size, 0, !dbg !6343
  br i1 %cmp, label %if.end, label %if.else, !dbg !6346

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 331, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.gmp_xrealloc_limbs, i64 0, i64 0)) #8, !dbg !6343
  unreachable, !dbg !6343

if.end:                                           ; preds = %entry
  %0 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** @gmp_reallocate_func, align 8, !dbg !6347, !tbaa !73
  %1 = bitcast i64* %old to i8*, !dbg !6348
  %mul = shl i64 %size, 3, !dbg !6349
  %call = tail call i8* %0(i8* %1, i64 0, i64 %mul) #9, !dbg !6350
  %2 = bitcast i8* %call to i64*, !dbg !6350
  ret i64* %2, !dbg !6351
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mpn_div_qr(i64* %qp, i64* %np, i64 %nn, i64* %dp, i64 %dn) unnamed_addr #0 !dbg !6352 {
entry:
  %inv = alloca %struct.gmp_div_inverse, align 8
  call void @llvm.dbg.value(metadata i64* %qp, metadata !6356, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.value(metadata i64* %np, metadata !6357, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.value(metadata i64 %nn, metadata !6358, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.value(metadata i64* %dp, metadata !6359, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.value(metadata i64 %dn, metadata !6360, metadata !DIExpression()), !dbg !6367
  %0 = bitcast %struct.gmp_div_inverse* %inv to i8*, !dbg !6368
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #11, !dbg !6368
  call void @llvm.dbg.value(metadata i64* null, metadata !6362, metadata !DIExpression()), !dbg !6367
  %cmp = icmp sgt i64 %dn, 0, !dbg !6369
  br i1 %cmp, label %if.end, label %if.else, !dbg !6372

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1090, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr, i64 0, i64 0)) #8, !dbg !6369
  unreachable, !dbg !6369

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i64 %nn, %dn, !dbg !6373
  br i1 %cmp1, label %if.else3, label %if.end4, !dbg !6376

if.else3:                                         ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1091, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr, i64 0, i64 0)) #8, !dbg !6373
  unreachable, !dbg !6373

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %inv, metadata !6361, metadata !DIExpression(DW_OP_deref)), !dbg !6367
  call fastcc void @mpn_div_qr_invert(%struct.gmp_div_inverse* nonnull %inv, i64* %dp, i64 %dn) #10, !dbg !6377
  %cmp5 = icmp sgt i64 %dn, 2, !dbg !6378
  br i1 %cmp5, label %land.lhs.true, label %if.end14, !dbg !6379

land.lhs.true:                                    ; preds = %if.end4
  %shift = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 0, !dbg !6380
  %1 = load i32, i32* %shift, align 8, !dbg !6380, !tbaa !4040
  %cmp6 = icmp eq i32 %1, 0, !dbg !6381
  br i1 %cmp6, label %if.end14, label %if.then7, !dbg !6382

if.then7:                                         ; preds = %land.lhs.true
  %call = call fastcc i64* @gmp_xalloc_limbs(i64 %dn) #10, !dbg !6383
  call void @llvm.dbg.value(metadata i64* %call, metadata !6362, metadata !DIExpression()), !dbg !6367
  %2 = load i32, i32* %shift, align 8, !dbg !6384, !tbaa !4040
  %call9 = call i64 @mpn_lshift(i64* %call, i64* %dp, i64 %dn, i32 %2) #10, !dbg !6384
  call void @llvm.dbg.value(metadata i64 %call9, metadata !6363, metadata !DIExpression()), !dbg !6385
  %cmp10 = icmp eq i64 %call9, 0, !dbg !6386
  br i1 %cmp10, label %if.end14, label %if.else12, !dbg !6389

if.else12:                                        ; preds = %if.then7
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1097, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr, i64 0, i64 0)) #8, !dbg !6386
  unreachable, !dbg !6386

if.end14:                                         ; preds = %land.lhs.true, %if.then7, %if.end4
  %dp.addr.0 = phi i64* [ %dp, %land.lhs.true ], [ %dp, %if.end4 ], [ %call, %if.then7 ]
  %tp.0 = phi i64* [ null, %land.lhs.true ], [ null, %if.end4 ], [ %call, %if.then7 ], !dbg !6367
  call void @llvm.dbg.value(metadata i64* %tp.0, metadata !6362, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.value(metadata i64* %dp.addr.0, metadata !6359, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %inv, metadata !6361, metadata !DIExpression(DW_OP_deref)), !dbg !6367
  call fastcc void @mpn_div_qr_preinv(i64* %qp, i64* %np, i64 %nn, i64* %dp.addr.0, i64 %dn, %struct.gmp_div_inverse* nonnull %inv) #10, !dbg !6390
  %tobool = icmp eq i64* %tp.0, null, !dbg !6391
  br i1 %tobool, label %if.end16, label %if.then15, !dbg !6393

if.then15:                                        ; preds = %if.end14
  %3 = load void (i8*, i64)*, void (i8*, i64)** @gmp_free_func, align 8, !dbg !6394, !tbaa !73
  %4 = bitcast i64* %tp.0 to i8*, !dbg !6394
  call void %3(i8* nonnull %4, i64 0) #9, !dbg !6394
  br label %if.end16, !dbg !6394

if.end16:                                         ; preds = %if.end14, %if.then15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #11, !dbg !6395
  ret void, !dbg !6395
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare dso_local void @abort() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @mpn_div_qr_2_invert(%struct.gmp_div_inverse* %inv, i64 %d1, i64 %d0) unnamed_addr #0 !dbg !6396 {
entry:
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %inv, metadata !6400, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata i64 %d1, metadata !6401, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata i64 %d0, metadata !6402, metadata !DIExpression()), !dbg !6407
  %cmp = icmp eq i64 %d1, 0, !dbg !6408
  br i1 %cmp, label %if.else, label %for.cond.preheader, !dbg !6411

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !6412

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 814, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_2_invert, i64 0, i64 0)) #8, !dbg !6408
  unreachable, !dbg !6408

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %__clz_x.0 = phi i64 [ %shl, %for.body ], [ %d1, %for.cond.preheader ], !dbg !6414
  %__clz_c.0 = phi i32 [ %add, %for.body ], [ 0, %for.cond.preheader ], !dbg !6415
  call void @llvm.dbg.value(metadata i32 %__clz_c.0, metadata !6406, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i64 %__clz_x.0, metadata !6404, metadata !DIExpression()), !dbg !6414
  %cmp1 = icmp ult i64 %__clz_x.0, 72057594037927936, !dbg !6416
  br i1 %cmp1, label %for.body, label %for.cond2.preheader, !dbg !6412

for.cond2.preheader:                              ; preds = %for.cond
  %__clz_x.0.lcssa = phi i64 [ %__clz_x.0, %for.cond ], !dbg !6414
  %__clz_c.0.lcssa = phi i32 [ %__clz_c.0, %for.cond ], !dbg !6415
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !6404, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !6406, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !6404, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !6406, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i64 %__clz_x.0.lcssa, metadata !6404, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i32 %__clz_c.0.lcssa, metadata !6406, metadata !DIExpression()), !dbg !6414
  br label %for.cond2, !dbg !6418

for.body:                                         ; preds = %for.cond
  %shl = shl i64 %__clz_x.0, 8, !dbg !6416
  call void @llvm.dbg.value(metadata i64 %shl, metadata !6404, metadata !DIExpression()), !dbg !6414
  %add = add i32 %__clz_c.0, 8, !dbg !6416
  call void @llvm.dbg.value(metadata i32 %add, metadata !6406, metadata !DIExpression()), !dbg !6414
  br label %for.cond, !dbg !6416, !llvm.loop !6420

for.cond2:                                        ; preds = %for.cond2.preheader, %for.body5
  %__clz_x.1 = phi i64 [ %shl6, %for.body5 ], [ %__clz_x.0.lcssa, %for.cond2.preheader ], !dbg !6414
  %__clz_c.1 = phi i32 [ %inc, %for.body5 ], [ %__clz_c.0.lcssa, %for.cond2.preheader ], !dbg !6414
  call void @llvm.dbg.value(metadata i32 %__clz_c.1, metadata !6406, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i64 %__clz_x.1, metadata !6404, metadata !DIExpression()), !dbg !6414
  %cmp4 = icmp sgt i64 %__clz_x.1, -1, !dbg !6421
  br i1 %cmp4, label %for.body5, label %do.end, !dbg !6418

for.body5:                                        ; preds = %for.cond2
  %shl6 = shl i64 %__clz_x.1, 1, !dbg !6421
  call void @llvm.dbg.value(metadata i64 %shl6, metadata !6404, metadata !DIExpression()), !dbg !6414
  %inc = add i32 %__clz_c.1, 1, !dbg !6421
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6406, metadata !DIExpression()), !dbg !6414
  br label %for.cond2, !dbg !6421, !llvm.loop !6423

do.end:                                           ; preds = %for.cond2
  %__clz_c.1.lcssa = phi i32 [ %__clz_c.1, %for.cond2 ], !dbg !6414
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !6406, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !6406, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !6406, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i32 %__clz_c.1.lcssa, metadata !6403, metadata !DIExpression()), !dbg !6407
  %shift9 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 0, !dbg !6424
  store i32 %__clz_c.1.lcssa, i32* %shift9, align 8, !dbg !6425, !tbaa !4040
  %cmp10 = icmp eq i32 %__clz_c.1.lcssa, 0, !dbg !6426
  br i1 %cmp10, label %if.end15, label %if.then11, !dbg !6428

if.then11:                                        ; preds = %do.end
  %sh_prom = zext i32 %__clz_c.1.lcssa to i64, !dbg !6429
  %shl12 = shl i64 %d1, %sh_prom, !dbg !6429
  %sub = sub nsw i64 64, %sh_prom, !dbg !6431
  %shr = lshr i64 %d0, %sub, !dbg !6432
  %or = or i64 %shl12, %shr, !dbg !6433
  call void @llvm.dbg.value(metadata i64 %or, metadata !6401, metadata !DIExpression()), !dbg !6407
  %shl14 = shl i64 %d0, %sh_prom, !dbg !6434
  call void @llvm.dbg.value(metadata i64 %shl14, metadata !6402, metadata !DIExpression()), !dbg !6407
  br label %if.end15, !dbg !6435

if.end15:                                         ; preds = %do.end, %if.then11
  %d0.addr.0 = phi i64 [ %shl14, %if.then11 ], [ %d0, %do.end ]
  %d1.addr.0 = phi i64 [ %or, %if.then11 ], [ %d1, %do.end ]
  call void @llvm.dbg.value(metadata i64 %d1.addr.0, metadata !6401, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata i64 %d0.addr.0, metadata !6402, metadata !DIExpression()), !dbg !6407
  %d116 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 1, !dbg !6436
  store i64 %d1.addr.0, i64* %d116, align 8, !dbg !6437, !tbaa !4221
  %d017 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 2, !dbg !6438
  store i64 %d0.addr.0, i64* %d017, align 8, !dbg !6439, !tbaa !4224
  %call = tail call i64 @mpn_invert_3by2(i64 %d1.addr.0, i64 %d0.addr.0) #10, !dbg !6440
  %di = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 3, !dbg !6441
  store i64 %call, i64* %di, align 8, !dbg !6442, !tbaa !4228
  ret void, !dbg !6443
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mpn_div_qr_2_preinv(i64* %qp, i64* %rp, i64* %np, i64 %nn, %struct.gmp_div_inverse* %inv) unnamed_addr #0 !dbg !6444 {
entry:
  call void @llvm.dbg.value(metadata i64* %qp, metadata !6448, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64* %rp, metadata !6449, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64* %np, metadata !6450, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %nn, metadata !6451, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata %struct.gmp_div_inverse* %inv, metadata !6452, metadata !DIExpression()), !dbg !6505
  %cmp = icmp sgt i64 %nn, 1, !dbg !6506
  br i1 %cmp, label %if.end, label %if.else, !dbg !6509

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 932, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_2_preinv, i64 0, i64 0)) #8, !dbg !6506
  unreachable, !dbg !6506

if.end:                                           ; preds = %entry
  %shift1 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 0, !dbg !6510
  %0 = load i32, i32* %shift1, align 8, !dbg !6510, !tbaa !4040
  call void @llvm.dbg.value(metadata i32 %0, metadata !6453, metadata !DIExpression()), !dbg !6505
  %d12 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 1, !dbg !6511
  %1 = load i64, i64* %d12, align 8, !dbg !6511, !tbaa !4221
  call void @llvm.dbg.value(metadata i64 %1, metadata !6455, metadata !DIExpression()), !dbg !6505
  %d03 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 2, !dbg !6512
  %2 = load i64, i64* %d03, align 8, !dbg !6512, !tbaa !4224
  call void @llvm.dbg.value(metadata i64 %2, metadata !6456, metadata !DIExpression()), !dbg !6505
  %di4 = getelementptr inbounds %struct.gmp_div_inverse, %struct.gmp_div_inverse* %inv, i64 0, i32 3, !dbg !6513
  %3 = load i64, i64* %di4, align 8, !dbg !6513, !tbaa !4228
  call void @llvm.dbg.value(metadata i64 %3, metadata !6457, metadata !DIExpression()), !dbg !6505
  %cmp5 = icmp eq i32 %0, 0, !dbg !6514
  br i1 %cmp5, label %if.end9, label %if.then6, !dbg !6516

if.then6:                                         ; preds = %if.end
  %call = tail call fastcc i64* @gmp_xalloc_limbs(i64 %nn) #10, !dbg !6517
  call void @llvm.dbg.value(metadata i64* %call, metadata !6460, metadata !DIExpression()), !dbg !6505
  %call7 = tail call i64 @mpn_lshift(i64* %call, i64* %np, i64 %nn, i32 %0) #10, !dbg !6519
  call void @llvm.dbg.value(metadata i64 %call7, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64* %call, metadata !6450, metadata !DIExpression()), !dbg !6505
  %phitmp = bitcast i64* %call to i8*, !dbg !6520
  br label %if.end9, !dbg !6520

if.end9:                                          ; preds = %if.end, %if.then6
  %r1.0 = phi i64 [ %call7, %if.then6 ], [ 0, %if.end ], !dbg !6521
  %tp.0 = phi i8* [ %phitmp, %if.then6 ], [ undef, %if.end ]
  %np.addr.0 = phi i64* [ %call, %if.then6 ], [ %np, %if.end ]
  call void @llvm.dbg.value(metadata i64* %np.addr.0, metadata !6450, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r1.0, metadata !6458, metadata !DIExpression()), !dbg !6505
  %sub = add nsw i64 %nn, -1, !dbg !6522
  %arrayidx = getelementptr inbounds i64, i64* %np.addr.0, i64 %sub, !dbg !6523
  %4 = load i64, i64* %arrayidx, align 8, !dbg !6523, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %4, metadata !6459, metadata !DIExpression()), !dbg !6505
  %sub10 = add nsw i64 %nn, -2, !dbg !6524
  call void @llvm.dbg.value(metadata i64 %sub10, metadata !6454, metadata !DIExpression()), !dbg !6505
  %shr17 = lshr i64 %3, 32, !dbg !6525
  %conv20 = and i64 %3, 4294967295, !dbg !6525
  %shr75 = lshr i64 %2, 32, !dbg !6526
  %conv81 = and i64 %2, 4294967295, !dbg !6526
  %tobool = icmp eq i64* %qp, null, !dbg !6527
  br i1 %tobool, label %if.end9.split.us, label %if.end9.if.end9.split_crit_edge, !dbg !6529

if.end9.if.end9.split_crit_edge:                  ; preds = %if.end9
  br label %do.body, !dbg !6529

if.end9.split.us:                                 ; preds = %if.end9
  br label %do.body.us, !dbg !6529

do.body.us:                                       ; preds = %do.end157.us, %if.end9.split.us
  %r1.1.us = phi i64 [ %r1.0, %if.end9.split.us ], [ %r1.3.us, %do.end157.us ], !dbg !6505
  %r0.0.us = phi i64 [ %4, %if.end9.split.us ], [ %r0.2.us, %do.end157.us ], !dbg !6505
  %i.0.us = phi i64 [ %sub10, %if.end9.split.us ], [ %dec.us, %do.end157.us ], !dbg !6505
  call void @llvm.dbg.value(metadata i64 %i.0.us, metadata !6454, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r0.0.us, metadata !6459, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r1.1.us, metadata !6458, metadata !DIExpression()), !dbg !6505
  %arrayidx11.us = getelementptr inbounds i64, i64* %np.addr.0, i64 %i.0.us, !dbg !6530
  %5 = load i64, i64* %arrayidx11.us, align 8, !dbg !6530, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %5, metadata !6461, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i64 %r1.1.us, metadata !6478, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.value(metadata i64 %3, metadata !6479, metadata !DIExpression()), !dbg !6525
  %shr.us = lshr i64 %r1.1.us, 32, !dbg !6532
  %conv19.us = and i64 %r1.1.us, 4294967295, !dbg !6532
  %mul.us = mul nuw i64 %conv19.us, %conv20, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %mul.us, metadata !6469, metadata !DIExpression()), !dbg !6525
  %mul23.us = mul nuw i64 %conv19.us, %shr17, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %mul23.us, metadata !6471, metadata !DIExpression()), !dbg !6525
  %mul26.us = mul nuw i64 %shr.us, %conv20, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %mul26.us, metadata !6472, metadata !DIExpression()), !dbg !6525
  %mul29.us = mul nuw i64 %shr.us, %shr17, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %mul29.us, metadata !6473, metadata !DIExpression()), !dbg !6525
  %shr30.us = lshr i64 %mul.us, 32, !dbg !6532
  %add.us = add i64 %mul23.us, %shr30.us, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %add.us, metadata !6471, metadata !DIExpression()), !dbg !6525
  %add31.us = add i64 %add.us, %mul26.us, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %add31.us, metadata !6471, metadata !DIExpression()), !dbg !6525
  %cmp32.us = icmp ult i64 %add31.us, %mul26.us, !dbg !6533
  %add35.us = add i64 %mul29.us, 4294967296, !dbg !6532
  %__x3.0.us = select i1 %cmp32.us, i64 %add35.us, i64 %mul29.us, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %__x3.0.us, metadata !6473, metadata !DIExpression()), !dbg !6525
  %shr37.us = lshr i64 %add31.us, 32, !dbg !6532
  %add38.us = add i64 %__x3.0.us, %shr37.us, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %add38.us, metadata !6463, metadata !DIExpression()), !dbg !6531
  %shl.us = shl i64 %add31.us, 32, !dbg !6532
  %and39.us = and i64 %mul.us, 4294967295, !dbg !6532
  %add40.us = or i64 %shl.us, %and39.us, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %add40.us, metadata !6464, metadata !DIExpression()), !dbg !6535
  %add42.us = add i64 %add40.us, %r0.0.us, !dbg !6536
  call void @llvm.dbg.value(metadata i64 %add42.us, metadata !6480, metadata !DIExpression()), !dbg !6537
  %add43.us = add i64 %add38.us, %r1.1.us, !dbg !6536
  %cmp44.us = icmp ult i64 %add42.us, %add40.us, !dbg !6536
  %conv46.us = zext i1 %cmp44.us to i64, !dbg !6536
  %add47.us = add i64 %add43.us, %conv46.us, !dbg !6536
  call void @llvm.dbg.value(metadata i64 %add47.us, metadata !6463, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i64 %add42.us, metadata !6464, metadata !DIExpression()), !dbg !6535
  %mul50.us = mul i64 %1, %add47.us, !dbg !6538
  %sub51.us = sub i64 %r0.0.us, %mul50.us, !dbg !6538
  call void @llvm.dbg.value(metadata i64 %sub51.us, metadata !6458, metadata !DIExpression()), !dbg !6505
  %sub54.us = sub i64 %5, %2, !dbg !6539
  call void @llvm.dbg.value(metadata i64 %sub54.us, metadata !6482, metadata !DIExpression()), !dbg !6540
  %sub55.us = sub i64 %sub51.us, %1, !dbg !6539
  %cmp56.us = icmp ult i64 %5, %2, !dbg !6539
  %conv58.us = zext i1 %cmp56.us to i64, !dbg !6539
  %sub59.us = sub i64 %sub55.us, %conv58.us, !dbg !6539
  call void @llvm.dbg.value(metadata i64 %sub59.us, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %sub54.us, metadata !6459, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %2, metadata !6493, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata i64 %add47.us, metadata !6494, metadata !DIExpression()), !dbg !6526
  %shr79.us = lshr i64 %add47.us, 32, !dbg !6541
  %conv82.us = and i64 %add47.us, 4294967295, !dbg !6541
  %mul83.us = mul nuw i64 %conv81, %conv82.us, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %mul83.us, metadata !6484, metadata !DIExpression()), !dbg !6526
  %mul86.us = mul nuw i64 %conv81, %shr79.us, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %mul86.us, metadata !6486, metadata !DIExpression()), !dbg !6526
  %mul89.us = mul nuw i64 %shr75, %conv82.us, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %mul89.us, metadata !6487, metadata !DIExpression()), !dbg !6526
  %mul92.us = mul nuw i64 %shr75, %shr79.us, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %mul92.us, metadata !6488, metadata !DIExpression()), !dbg !6526
  %shr93.us = lshr i64 %mul83.us, 32, !dbg !6541
  %add94.us = add i64 %mul86.us, %shr93.us, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %add94.us, metadata !6486, metadata !DIExpression()), !dbg !6526
  %add95.us = add i64 %add94.us, %mul89.us, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %add95.us, metadata !6486, metadata !DIExpression()), !dbg !6526
  %cmp96.us = icmp ult i64 %add95.us, %mul89.us, !dbg !6542
  %add99.us = add i64 %mul92.us, 4294967296, !dbg !6541
  %__x366.0.us = select i1 %cmp96.us, i64 %add99.us, i64 %mul92.us, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %__x366.0.us, metadata !6488, metadata !DIExpression()), !dbg !6526
  %shr101.us = lshr i64 %add95.us, 32, !dbg !6541
  %add102.us = add i64 %__x366.0.us, %shr101.us, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %add102.us, metadata !6466, metadata !DIExpression()), !dbg !6535
  %shl103.us = shl i64 %add95.us, 32, !dbg !6541
  %and104.us = and i64 %mul83.us, 4294967295, !dbg !6541
  %add105.us = or i64 %shl103.us, %and104.us, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %add105.us, metadata !6467, metadata !DIExpression()), !dbg !6535
  %sub110.us = sub i64 %sub54.us, %add105.us, !dbg !6544
  call void @llvm.dbg.value(metadata i64 %sub110.us, metadata !6495, metadata !DIExpression()), !dbg !6545
  %sub111.us = sub i64 %sub59.us, %add102.us, !dbg !6544
  %cmp112.us = icmp ult i64 %sub54.us, %add105.us, !dbg !6544
  %conv114.us = zext i1 %cmp112.us to i64, !dbg !6544
  %sub115.us = sub i64 %sub111.us, %conv114.us, !dbg !6544
  call void @llvm.dbg.value(metadata i64 %sub115.us, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %sub110.us, metadata !6459, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %add47.us, metadata !6463, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6531
  %cmp118.us = icmp uge i64 %sub115.us, %add42.us, !dbg !6538
  %sub121.us = sext i1 %cmp118.us to i64, !dbg !6538
  call void @llvm.dbg.value(metadata i64 %sub121.us, metadata !6468, metadata !DIExpression()), !dbg !6535
  %and125.us = and i64 %2, %sub121.us, !dbg !6546
  %add126.us = add i64 %sub110.us, %and125.us, !dbg !6546
  call void @llvm.dbg.value(metadata i64 %add126.us, metadata !6497, metadata !DIExpression()), !dbg !6547
  %and127.us = and i64 %1, %sub121.us, !dbg !6546
  %add128.us = add i64 %sub115.us, %and127.us, !dbg !6546
  %cmp129.us = icmp ult i64 %add126.us, %sub110.us, !dbg !6546
  %conv131.us = zext i1 %cmp129.us to i64, !dbg !6546
  %add132.us = add i64 %add128.us, %conv131.us, !dbg !6546
  call void @llvm.dbg.value(metadata i64 %add132.us, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %add126.us, metadata !6459, metadata !DIExpression()), !dbg !6505
  %cmp135.us = icmp ult i64 %add132.us, %1, !dbg !6548
  br i1 %cmp135.us, label %do.end157.us, label %if.then137.us, !dbg !6538

if.then137.us:                                    ; preds = %do.body.us
  %cmp138.us = icmp ugt i64 %add132.us, %1, !dbg !6549
  %cmp140.us = icmp uge i64 %add126.us, %2, !dbg !6549
  %or.cond.us = or i1 %cmp138.us, %cmp140.us, !dbg !6549
  br i1 %or.cond.us, label %if.then142.us, label %do.end157.us, !dbg !6549

if.then142.us:                                    ; preds = %if.then137.us
  %sub146.us = sub i64 %add126.us, %2, !dbg !6550
  call void @llvm.dbg.value(metadata i64 %sub146.us, metadata !6499, metadata !DIExpression()), !dbg !6551
  %sub147.us = sub i64 %add132.us, %1, !dbg !6550
  %cmp148.us = icmp ult i64 %add126.us, %2, !dbg !6550
  %conv150.us = zext i1 %cmp148.us to i64, !dbg !6550
  %sub151.us = sub i64 %sub147.us, %conv150.us, !dbg !6550
  call void @llvm.dbg.value(metadata i64 %sub151.us, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %sub146.us, metadata !6459, metadata !DIExpression()), !dbg !6505
  br label %do.end157.us, !dbg !6552

do.end157.us:                                     ; preds = %if.then142.us, %if.then137.us, %do.body.us
  %r1.3.us = phi i64 [ %add132.us, %do.body.us ], [ %sub151.us, %if.then142.us ], [ %add132.us, %if.then137.us ], !dbg !6535
  %r0.2.us = phi i64 [ %add126.us, %do.body.us ], [ %sub146.us, %if.then142.us ], [ %add126.us, %if.then137.us ], !dbg !6535
  call void @llvm.dbg.value(metadata i64 undef, metadata !6463, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i64 %r0.2.us, metadata !6459, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r1.3.us, metadata !6458, metadata !DIExpression()), !dbg !6505
  %dec.us = add nsw i64 %i.0.us, -1, !dbg !6553
  call void @llvm.dbg.value(metadata i64 %dec.us, metadata !6454, metadata !DIExpression()), !dbg !6505
  %cmp162.us = icmp sgt i64 %i.0.us, 0, !dbg !6554
  br i1 %cmp162.us, label %do.body.us, label %do.end164.us-lcssa.us, !dbg !6555, !llvm.loop !6556

do.end164.us-lcssa.us:                            ; preds = %do.end157.us
  %r1.3.us.lcssa = phi i64 [ %r1.3.us, %do.end157.us ], !dbg !6535
  %r0.2.us.lcssa = phi i64 [ %r0.2.us, %do.end157.us ], !dbg !6535
  call void @llvm.dbg.value(metadata i64 %r1.3.us.lcssa, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r0.2.us.lcssa, metadata !6459, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r1.3.us.lcssa, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r0.2.us.lcssa, metadata !6459, metadata !DIExpression()), !dbg !6505
  br label %do.end164, !dbg !6558

do.body:                                          ; preds = %do.end157, %if.end9.if.end9.split_crit_edge
  %r1.1 = phi i64 [ %r1.0, %if.end9.if.end9.split_crit_edge ], [ %r1.3, %do.end157 ], !dbg !6505
  %r0.0 = phi i64 [ %4, %if.end9.if.end9.split_crit_edge ], [ %r0.2, %do.end157 ], !dbg !6505
  %i.0 = phi i64 [ %sub10, %if.end9.if.end9.split_crit_edge ], [ %dec, %do.end157 ], !dbg !6505
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6454, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r0.0, metadata !6459, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r1.1, metadata !6458, metadata !DIExpression()), !dbg !6505
  %arrayidx11 = getelementptr inbounds i64, i64* %np.addr.0, i64 %i.0, !dbg !6530
  %6 = load i64, i64* %arrayidx11, align 8, !dbg !6530, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %6, metadata !6461, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i64 %r1.1, metadata !6478, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.value(metadata i64 %3, metadata !6479, metadata !DIExpression()), !dbg !6525
  %shr = lshr i64 %r1.1, 32, !dbg !6532
  %conv19 = and i64 %r1.1, 4294967295, !dbg !6532
  %mul = mul nuw i64 %conv19, %conv20, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %mul, metadata !6469, metadata !DIExpression()), !dbg !6525
  %mul23 = mul nuw i64 %conv19, %shr17, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %mul23, metadata !6471, metadata !DIExpression()), !dbg !6525
  %mul26 = mul nuw i64 %shr, %conv20, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %mul26, metadata !6472, metadata !DIExpression()), !dbg !6525
  %mul29 = mul nuw i64 %shr, %shr17, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %mul29, metadata !6473, metadata !DIExpression()), !dbg !6525
  %shr30 = lshr i64 %mul, 32, !dbg !6532
  %add = add i64 %mul23, %shr30, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %add, metadata !6471, metadata !DIExpression()), !dbg !6525
  %add31 = add i64 %add, %mul26, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %add31, metadata !6471, metadata !DIExpression()), !dbg !6525
  %cmp32 = icmp ult i64 %add31, %mul26, !dbg !6533
  %add35 = add i64 %mul29, 4294967296, !dbg !6532
  %__x3.0 = select i1 %cmp32, i64 %add35, i64 %mul29, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %__x3.0, metadata !6473, metadata !DIExpression()), !dbg !6525
  %shr37 = lshr i64 %add31, 32, !dbg !6532
  %add38 = add i64 %__x3.0, %shr37, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %add38, metadata !6463, metadata !DIExpression()), !dbg !6531
  %shl = shl i64 %add31, 32, !dbg !6532
  %and39 = and i64 %mul, 4294967295, !dbg !6532
  %add40 = or i64 %shl, %and39, !dbg !6532
  call void @llvm.dbg.value(metadata i64 %add40, metadata !6464, metadata !DIExpression()), !dbg !6535
  %add42 = add i64 %add40, %r0.0, !dbg !6536
  call void @llvm.dbg.value(metadata i64 %add42, metadata !6480, metadata !DIExpression()), !dbg !6537
  %add43 = add i64 %add38, %r1.1, !dbg !6536
  %cmp44 = icmp ult i64 %add42, %add40, !dbg !6536
  %conv46 = zext i1 %cmp44 to i64, !dbg !6536
  %add47 = add i64 %add43, %conv46, !dbg !6536
  call void @llvm.dbg.value(metadata i64 %add47, metadata !6463, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i64 %add42, metadata !6464, metadata !DIExpression()), !dbg !6535
  %mul50 = mul i64 %1, %add47, !dbg !6538
  %sub51 = sub i64 %r0.0, %mul50, !dbg !6538
  call void @llvm.dbg.value(metadata i64 %sub51, metadata !6458, metadata !DIExpression()), !dbg !6505
  %sub54 = sub i64 %6, %2, !dbg !6539
  call void @llvm.dbg.value(metadata i64 %sub54, metadata !6482, metadata !DIExpression()), !dbg !6540
  %sub55 = sub i64 %sub51, %1, !dbg !6539
  %cmp56 = icmp ult i64 %6, %2, !dbg !6539
  %conv58 = zext i1 %cmp56 to i64, !dbg !6539
  %sub59 = sub i64 %sub55, %conv58, !dbg !6539
  call void @llvm.dbg.value(metadata i64 %sub59, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %sub54, metadata !6459, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %2, metadata !6493, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.value(metadata i64 %add47, metadata !6494, metadata !DIExpression()), !dbg !6526
  %shr79 = lshr i64 %add47, 32, !dbg !6541
  %conv82 = and i64 %add47, 4294967295, !dbg !6541
  %mul83 = mul nuw i64 %conv81, %conv82, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %mul83, metadata !6484, metadata !DIExpression()), !dbg !6526
  %mul86 = mul nuw i64 %conv81, %shr79, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %mul86, metadata !6486, metadata !DIExpression()), !dbg !6526
  %mul89 = mul nuw i64 %shr75, %conv82, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %mul89, metadata !6487, metadata !DIExpression()), !dbg !6526
  %mul92 = mul nuw i64 %shr75, %shr79, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %mul92, metadata !6488, metadata !DIExpression()), !dbg !6526
  %shr93 = lshr i64 %mul83, 32, !dbg !6541
  %add94 = add i64 %mul86, %shr93, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %add94, metadata !6486, metadata !DIExpression()), !dbg !6526
  %add95 = add i64 %add94, %mul89, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %add95, metadata !6486, metadata !DIExpression()), !dbg !6526
  %cmp96 = icmp ult i64 %add95, %mul89, !dbg !6542
  %add99 = add i64 %mul92, 4294967296, !dbg !6541
  %__x366.0 = select i1 %cmp96, i64 %add99, i64 %mul92, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %__x366.0, metadata !6488, metadata !DIExpression()), !dbg !6526
  %shr101 = lshr i64 %add95, 32, !dbg !6541
  %add102 = add i64 %__x366.0, %shr101, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %add102, metadata !6466, metadata !DIExpression()), !dbg !6535
  %shl103 = shl i64 %add95, 32, !dbg !6541
  %and104 = and i64 %mul83, 4294967295, !dbg !6541
  %add105 = or i64 %shl103, %and104, !dbg !6541
  call void @llvm.dbg.value(metadata i64 %add105, metadata !6467, metadata !DIExpression()), !dbg !6535
  %sub110 = sub i64 %sub54, %add105, !dbg !6544
  call void @llvm.dbg.value(metadata i64 %sub110, metadata !6495, metadata !DIExpression()), !dbg !6545
  %sub111 = sub i64 %sub59, %add102, !dbg !6544
  %cmp112 = icmp ult i64 %sub54, %add105, !dbg !6544
  %conv114 = zext i1 %cmp112 to i64, !dbg !6544
  %sub115 = sub i64 %sub111, %conv114, !dbg !6544
  call void @llvm.dbg.value(metadata i64 %sub115, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %sub110, metadata !6459, metadata !DIExpression()), !dbg !6505
  %inc = add i64 %add47, 1, !dbg !6538
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6463, metadata !DIExpression()), !dbg !6531
  %cmp118 = icmp uge i64 %sub115, %add42, !dbg !6538
  %sub121 = sext i1 %cmp118 to i64, !dbg !6538
  call void @llvm.dbg.value(metadata i64 %sub121, metadata !6468, metadata !DIExpression()), !dbg !6535
  %add122 = add i64 %inc, %sub121, !dbg !6538
  call void @llvm.dbg.value(metadata i64 %add122, metadata !6463, metadata !DIExpression()), !dbg !6531
  %and125 = and i64 %2, %sub121, !dbg !6546
  %add126 = add i64 %sub110, %and125, !dbg !6546
  call void @llvm.dbg.value(metadata i64 %add126, metadata !6497, metadata !DIExpression()), !dbg !6547
  %and127 = and i64 %1, %sub121, !dbg !6546
  %add128 = add i64 %sub115, %and127, !dbg !6546
  %cmp129 = icmp ult i64 %add126, %sub110, !dbg !6546
  %conv131 = zext i1 %cmp129 to i64, !dbg !6546
  %add132 = add i64 %add128, %conv131, !dbg !6546
  call void @llvm.dbg.value(metadata i64 %add132, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %add126, metadata !6459, metadata !DIExpression()), !dbg !6505
  %cmp135 = icmp ult i64 %add132, %1, !dbg !6548
  br i1 %cmp135, label %do.end157, label %if.then137, !dbg !6538

if.then137:                                       ; preds = %do.body
  %cmp138 = icmp ugt i64 %add132, %1, !dbg !6549
  %cmp140 = icmp uge i64 %add126, %2, !dbg !6549
  %or.cond = or i1 %cmp138, %cmp140, !dbg !6549
  br i1 %or.cond, label %if.then142, label %do.end157, !dbg !6549

if.then142:                                       ; preds = %if.then137
  %inc143 = add i64 %add122, 1, !dbg !6552
  call void @llvm.dbg.value(metadata i64 %inc143, metadata !6463, metadata !DIExpression()), !dbg !6531
  %sub146 = sub i64 %add126, %2, !dbg !6550
  call void @llvm.dbg.value(metadata i64 %sub146, metadata !6499, metadata !DIExpression()), !dbg !6551
  %sub147 = sub i64 %add132, %1, !dbg !6550
  %cmp148 = icmp ult i64 %add126, %2, !dbg !6550
  %conv150 = zext i1 %cmp148 to i64, !dbg !6550
  %sub151 = sub i64 %sub147, %conv150, !dbg !6550
  call void @llvm.dbg.value(metadata i64 %sub151, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %sub146, metadata !6459, metadata !DIExpression()), !dbg !6505
  br label %do.end157, !dbg !6552

do.end157:                                        ; preds = %do.body, %if.then142, %if.then137
  %r1.3 = phi i64 [ %add132, %do.body ], [ %sub151, %if.then142 ], [ %add132, %if.then137 ], !dbg !6535
  %r0.2 = phi i64 [ %add126, %do.body ], [ %sub146, %if.then142 ], [ %add126, %if.then137 ], !dbg !6535
  %q.1 = phi i64 [ %add122, %do.body ], [ %inc143, %if.then142 ], [ %add122, %if.then137 ], !dbg !6535
  call void @llvm.dbg.value(metadata i64 %q.1, metadata !6463, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i64 %r0.2, metadata !6459, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r1.3, metadata !6458, metadata !DIExpression()), !dbg !6505
  %arrayidx159 = getelementptr inbounds i64, i64* %qp, i64 %i.0, !dbg !6560
  store i64 %q.1, i64* %arrayidx159, align 8, !dbg !6561, !tbaa !168
  %dec = add nsw i64 %i.0, -1, !dbg !6553
  call void @llvm.dbg.value(metadata i64 %dec, metadata !6454, metadata !DIExpression()), !dbg !6505
  %cmp162 = icmp sgt i64 %i.0, 0, !dbg !6554
  br i1 %cmp162, label %do.body, label %do.end164.us-lcssa, !dbg !6555, !llvm.loop !6556

do.end164.us-lcssa:                               ; preds = %do.end157
  %r1.3.lcssa6 = phi i64 [ %r1.3, %do.end157 ], !dbg !6535
  %r0.2.lcssa5 = phi i64 [ %r0.2, %do.end157 ], !dbg !6535
  call void @llvm.dbg.value(metadata i64 %r1.3.lcssa6, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r0.2.lcssa5, metadata !6459, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r1.3.lcssa6, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r0.2.lcssa5, metadata !6459, metadata !DIExpression()), !dbg !6505
  br label %do.end164, !dbg !6558

do.end164:                                        ; preds = %do.end164.us-lcssa.us, %do.end164.us-lcssa
  %r1.3.lcssa = phi i64 [ %r1.3.lcssa6, %do.end164.us-lcssa ], [ %r1.3.us.lcssa, %do.end164.us-lcssa.us ], !dbg !6535
  %r0.2.lcssa = phi i64 [ %r0.2.lcssa5, %do.end164.us-lcssa ], [ %r0.2.us.lcssa, %do.end164.us-lcssa.us ], !dbg !6535
  call void @llvm.dbg.value(metadata i64 %r1.3.lcssa, metadata !6458, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r0.2.lcssa, metadata !6459, metadata !DIExpression()), !dbg !6505
  br i1 %cmp5, label %if.end182, label %if.then167, !dbg !6562

if.then167:                                       ; preds = %do.end164
  %conv168 = zext i32 %0 to i64, !dbg !6563
  %sub169 = sub nsw i64 64, %conv168, !dbg !6563
  %shl170 = shl i64 %r0.2.lcssa, %sub169, !dbg !6563
  %cmp171 = icmp eq i64 %shl170, 0, !dbg !6563
  br i1 %cmp171, label %if.end175, label %if.else174, !dbg !6567

if.else174:                                       ; preds = %if.then167
  tail call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 963, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_2_preinv, i64 0, i64 0)) #8, !dbg !6563
  unreachable, !dbg !6563

if.end175:                                        ; preds = %if.then167
  %shr176 = lshr i64 %r0.2.lcssa, %conv168, !dbg !6568
  %shl179 = shl i64 %r1.3.lcssa, %sub169, !dbg !6569
  %or = or i64 %shr176, %shl179, !dbg !6570
  call void @llvm.dbg.value(metadata i64 %or, metadata !6459, metadata !DIExpression()), !dbg !6505
  %shr181 = lshr i64 %r1.3.lcssa, %conv168, !dbg !6571
  call void @llvm.dbg.value(metadata i64 %shr181, metadata !6458, metadata !DIExpression()), !dbg !6505
  %7 = load void (i8*, i64)*, void (i8*, i64)** @gmp_free_func, align 8, !dbg !6572, !tbaa !73
  tail call void %7(i8* %tp.0, i64 0) #9, !dbg !6572
  br label %if.end182, !dbg !6573

if.end182:                                        ; preds = %do.end164, %if.end175
  %r1.4 = phi i64 [ %shr181, %if.end175 ], [ %r1.3.lcssa, %do.end164 ], !dbg !6505
  %r0.3 = phi i64 [ %or, %if.end175 ], [ %r0.2.lcssa, %do.end164 ], !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r0.3, metadata !6459, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata i64 %r1.4, metadata !6458, metadata !DIExpression()), !dbg !6505
  %arrayidx183 = getelementptr inbounds i64, i64* %rp, i64 1, !dbg !6574
  store i64 %r1.4, i64* %arrayidx183, align 8, !dbg !6575, !tbaa !168
  store i64 %r0.3, i64* %rp, align 8, !dbg !6576, !tbaa !168
  ret void, !dbg !6577
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mpn_div_qr_pi1(i64* %qp, i64* %np, i64 %nn, i64 %n1, i64* %dp, i64 %dn, i64 %dinv) unnamed_addr #0 !dbg !6578 {
entry:
  call void @llvm.dbg.value(metadata i64* %qp, metadata !6582, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64* %np, metadata !6583, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %nn, metadata !6584, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %n1, metadata !6585, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64* %dp, metadata !6586, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %dn, metadata !6587, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %dinv, metadata !6588, metadata !DIExpression()), !dbg !6640
  %cmp = icmp sgt i64 %dn, 2, !dbg !6641
  br i1 %cmp, label %if.end, label %if.else, !dbg !6644

if.else:                                          ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 999, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_pi1, i64 0, i64 0)) #8, !dbg !6641
  unreachable, !dbg !6641

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i64 %nn, %dn, !dbg !6645
  br i1 %cmp1, label %if.else3, label %if.end4, !dbg !6648

if.else3:                                         ; preds = %if.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1000, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_pi1, i64 0, i64 0)) #8, !dbg !6645
  unreachable, !dbg !6645

if.end4:                                          ; preds = %if.end
  %sub = add nsw i64 %dn, -1, !dbg !6649
  %arrayidx = getelementptr inbounds i64, i64* %dp, i64 %sub, !dbg !6650
  %0 = load i64, i64* %arrayidx, align 8, !dbg !6650, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %0, metadata !6590, metadata !DIExpression()), !dbg !6640
  %sub5 = add nsw i64 %dn, -2, !dbg !6651
  %arrayidx6 = getelementptr inbounds i64, i64* %dp, i64 %sub5, !dbg !6652
  %1 = load i64, i64* %arrayidx6, align 8, !dbg !6652, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %1, metadata !6591, metadata !DIExpression()), !dbg !6640
  %cmp7 = icmp slt i64 %0, 0, !dbg !6653
  br i1 %cmp7, label %if.end10, label %if.else9, !dbg !6656

if.else9:                                         ; preds = %if.end4
  tail call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1005, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.mpn_div_qr_pi1, i64 0, i64 0)) #8, !dbg !6653
  unreachable, !dbg !6653

if.end10:                                         ; preds = %if.end4
  %sub11 = sub nsw i64 %nn, %dn, !dbg !6657
  call void @llvm.dbg.value(metadata i64 %sub11, metadata !6589, metadata !DIExpression()), !dbg !6640
  %shr27 = lshr i64 %dinv, 32, !dbg !6658
  %conv30 = and i64 %dinv, 4294967295, !dbg !6658
  %shr92 = lshr i64 %1, 32, !dbg !6659
  %conv98 = and i64 %1, 4294967295, !dbg !6659
  %tobool = icmp eq i64* %qp, null, !dbg !6660
  br label %do.body, !dbg !6662

do.body:                                          ; preds = %do.cond203, %if.end10
  %i.0 = phi i64 [ %sub11, %if.end10 ], [ %dec204, %do.cond203 ], !dbg !6640
  %n1.addr.0 = phi i64 [ %n1, %if.end10 ], [ %n1.addr.4, %do.cond203 ]
  call void @llvm.dbg.value(metadata i64 %n1.addr.0, metadata !6585, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6589, metadata !DIExpression()), !dbg !6640
  %add = add nsw i64 %sub, %i.0, !dbg !6663
  %arrayidx13 = getelementptr inbounds i64, i64* %np, i64 %add, !dbg !6664
  %2 = load i64, i64* %arrayidx13, align 8, !dbg !6664, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %2, metadata !6595, metadata !DIExpression()), !dbg !6665
  %cmp14 = icmp eq i64 %n1.addr.0, %0, !dbg !6666
  %cmp15 = icmp eq i64 %2, %1, !dbg !6667
  %or.cond = and i1 %cmp14, %cmp15, !dbg !6668
  br i1 %or.cond, label %if.then16, label %do.body22, !dbg !6668

if.then16:                                        ; preds = %do.body
  call void @llvm.dbg.value(metadata i64 -1, metadata !6594, metadata !DIExpression()), !dbg !6640
  %add.ptr = getelementptr inbounds i64, i64* %np, i64 %i.0, !dbg !6669
  %call = tail call i64 @mpn_submul_1(i64* %add.ptr, i64* %dp, i64 %dn, i64 -1) #10, !dbg !6671
  %3 = load i64, i64* %arrayidx13, align 8, !dbg !6672, !tbaa !168
  call void @llvm.dbg.value(metadata i64 %3, metadata !6585, metadata !DIExpression()), !dbg !6640
  br label %if.end199, !dbg !6673

do.body22:                                        ; preds = %do.body
  call void @llvm.dbg.value(metadata i64 %n1.addr.0, metadata !6613, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.value(metadata i64 %dinv, metadata !6614, metadata !DIExpression()), !dbg !6658
  %shr = lshr i64 %n1.addr.0, 32, !dbg !6674
  call void @llvm.dbg.value(metadata i64 %dinv, metadata !6610, metadata !DIExpression()), !dbg !6658
  %conv29 = and i64 %n1.addr.0, 4294967295, !dbg !6674
  %mul = mul nuw i64 %conv29, %conv30, !dbg !6674
  call void @llvm.dbg.value(metadata i64 %mul, metadata !6604, metadata !DIExpression()), !dbg !6658
  %mul33 = mul nuw i64 %conv29, %shr27, !dbg !6674
  call void @llvm.dbg.value(metadata i64 %mul33, metadata !6606, metadata !DIExpression()), !dbg !6658
  %mul36 = mul nuw i64 %shr, %conv30, !dbg !6674
  call void @llvm.dbg.value(metadata i64 %mul36, metadata !6607, metadata !DIExpression()), !dbg !6658
  %mul39 = mul nuw i64 %shr, %shr27, !dbg !6674
  call void @llvm.dbg.value(metadata i64 %mul39, metadata !6608, metadata !DIExpression()), !dbg !6658
  %shr40 = lshr i64 %mul, 32, !dbg !6674
  %add41 = add i64 %mul33, %shr40, !dbg !6674
  call void @llvm.dbg.value(metadata i64 %add41, metadata !6606, metadata !DIExpression()), !dbg !6658
  %add42 = add i64 %add41, %mul36, !dbg !6674
  call void @llvm.dbg.value(metadata i64 %add42, metadata !6606, metadata !DIExpression()), !dbg !6658
  %cmp43 = icmp ult i64 %add42, %mul36, !dbg !6675
  %add46 = add i64 %mul39, 4294967296, !dbg !6675
  %spec.select = select i1 %cmp43, i64 %add46, i64 %mul39, !dbg !6674
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !6608, metadata !DIExpression()), !dbg !6658
  %shr48 = lshr i64 %add42, 32, !dbg !6674
  %add49 = add i64 %spec.select, %shr48, !dbg !6674
  call void @llvm.dbg.value(metadata i64 %add49, metadata !6594, metadata !DIExpression()), !dbg !6640
  %shl = shl i64 %add42, 32, !dbg !6674
  %and50 = and i64 %mul, 4294967295, !dbg !6674
  %add51 = or i64 %shl, %and50, !dbg !6674
  call void @llvm.dbg.value(metadata i64 %add51, metadata !6597, metadata !DIExpression()), !dbg !6677
  %add53 = add i64 %add51, %2, !dbg !6678
  call void @llvm.dbg.value(metadata i64 %add53, metadata !6615, metadata !DIExpression()), !dbg !6679
  %add54 = add i64 %add49, %n1.addr.0, !dbg !6678
  %cmp55 = icmp ult i64 %add53, %add51, !dbg !6678
  %conv57 = zext i1 %cmp55 to i64, !dbg !6678
  %add58 = add i64 %add54, %conv57, !dbg !6678
  call void @llvm.dbg.value(metadata i64 %add58, metadata !6594, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %add53, metadata !6597, metadata !DIExpression()), !dbg !6677
  %mul61 = mul i64 %0, %add58, !dbg !6680
  %sub62 = sub i64 %2, %mul61, !dbg !6680
  call void @llvm.dbg.value(metadata i64 %sub62, metadata !6585, metadata !DIExpression()), !dbg !6640
  %add66 = add nsw i64 %sub5, %i.0, !dbg !6681
  %arrayidx67 = getelementptr inbounds i64, i64* %np, i64 %add66, !dbg !6681
  %4 = load i64, i64* %arrayidx67, align 8, !dbg !6681, !tbaa !168
  %sub68 = sub i64 %4, %1, !dbg !6681
  call void @llvm.dbg.value(metadata i64 %sub68, metadata !6617, metadata !DIExpression()), !dbg !6682
  %sub69 = sub i64 %sub62, %0, !dbg !6681
  %cmp73 = icmp ult i64 %4, %1, !dbg !6681
  %conv75 = zext i1 %cmp73 to i64, !dbg !6681
  %sub76 = sub i64 %sub69, %conv75, !dbg !6681
  call void @llvm.dbg.value(metadata i64 %sub76, metadata !6585, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %sub68, metadata !6595, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.value(metadata i64 %1, metadata !6628, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i64 %add58, metadata !6629, metadata !DIExpression()), !dbg !6659
  %shr96 = lshr i64 %add58, 32, !dbg !6683
  %conv99 = and i64 %add58, 4294967295, !dbg !6683
  %mul100 = mul nuw i64 %conv98, %conv99, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %mul100, metadata !6619, metadata !DIExpression()), !dbg !6659
  %mul103 = mul nuw i64 %conv98, %shr96, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %mul103, metadata !6621, metadata !DIExpression()), !dbg !6659
  %mul106 = mul nuw i64 %shr92, %conv99, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %mul106, metadata !6622, metadata !DIExpression()), !dbg !6659
  %mul109 = mul nuw i64 %shr92, %shr96, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %mul109, metadata !6623, metadata !DIExpression()), !dbg !6659
  %shr110 = lshr i64 %mul100, 32, !dbg !6683
  %add111 = add i64 %mul103, %shr110, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %add111, metadata !6621, metadata !DIExpression()), !dbg !6659
  %add112 = add i64 %add111, %mul106, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %add112, metadata !6621, metadata !DIExpression()), !dbg !6659
  %cmp113 = icmp ult i64 %add112, %mul106, !dbg !6684
  %add116 = add i64 %mul109, 4294967296, !dbg !6683
  %__x383.0 = select i1 %cmp113, i64 %add116, i64 %mul109, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %__x383.0, metadata !6623, metadata !DIExpression()), !dbg !6659
  %shr118 = lshr i64 %add112, 32, !dbg !6683
  %add119 = add i64 %__x383.0, %shr118, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %add119, metadata !6601, metadata !DIExpression()), !dbg !6677
  %shl120 = shl i64 %add112, 32, !dbg !6683
  %and121 = and i64 %mul100, 4294967295, !dbg !6683
  %add122 = or i64 %shl120, %and121, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %add122, metadata !6602, metadata !DIExpression()), !dbg !6677
  %sub127 = sub i64 %sub68, %add122, !dbg !6686
  call void @llvm.dbg.value(metadata i64 %sub127, metadata !6630, metadata !DIExpression()), !dbg !6687
  %sub128 = sub i64 %sub76, %add119, !dbg !6686
  %cmp129 = icmp ult i64 %sub68, %add122, !dbg !6686
  %conv131 = zext i1 %cmp129 to i64, !dbg !6686
  %sub132 = sub i64 %sub128, %conv131, !dbg !6686
  call void @llvm.dbg.value(metadata i64 %sub132, metadata !6585, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %sub127, metadata !6595, metadata !DIExpression()), !dbg !6665
  %inc = add i64 %add58, 1, !dbg !6680
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6594, metadata !DIExpression()), !dbg !6640
  %cmp135 = icmp uge i64 %sub132, %add53, !dbg !6680
  %sub138 = sext i1 %cmp135 to i64, !dbg !6680
  call void @llvm.dbg.value(metadata i64 %sub138, metadata !6603, metadata !DIExpression()), !dbg !6677
  %add139 = add i64 %inc, %sub138, !dbg !6680
  call void @llvm.dbg.value(metadata i64 %add139, metadata !6594, metadata !DIExpression()), !dbg !6640
  %and142 = and i64 %1, %sub138, !dbg !6688
  %add143 = add i64 %sub127, %and142, !dbg !6688
  call void @llvm.dbg.value(metadata i64 %add143, metadata !6632, metadata !DIExpression()), !dbg !6689
  %and144 = and i64 %0, %sub138, !dbg !6688
  %add145 = add i64 %sub132, %and144, !dbg !6688
  %cmp146 = icmp ult i64 %add143, %sub127, !dbg !6688
  %conv148 = zext i1 %cmp146 to i64, !dbg !6688
  %add149 = add i64 %add145, %conv148, !dbg !6688
  call void @llvm.dbg.value(metadata i64 %add149, metadata !6585, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %add143, metadata !6595, metadata !DIExpression()), !dbg !6665
  %cmp152 = icmp ult i64 %add149, %0, !dbg !6690
  br i1 %cmp152, label %do.end174, label %if.then154, !dbg !6680

if.then154:                                       ; preds = %do.body22
  %cmp155 = icmp ugt i64 %add149, %0, !dbg !6691
  %cmp157 = icmp uge i64 %add143, %1, !dbg !6691
  %or.cond1 = or i1 %cmp155, %cmp157, !dbg !6691
  br i1 %or.cond1, label %if.then159, label %do.end174, !dbg !6691

if.then159:                                       ; preds = %if.then154
  %inc160 = add i64 %add139, 1, !dbg !6692
  call void @llvm.dbg.value(metadata i64 %inc160, metadata !6594, metadata !DIExpression()), !dbg !6640
  %sub163 = sub i64 %add143, %1, !dbg !6693
  call void @llvm.dbg.value(metadata i64 %sub163, metadata !6634, metadata !DIExpression()), !dbg !6694
  %sub164 = sub i64 %add149, %0, !dbg !6693
  %cmp165 = icmp ult i64 %add143, %1, !dbg !6693
  %conv167 = zext i1 %cmp165 to i64, !dbg !6693
  %sub168 = sub i64 %sub164, %conv167, !dbg !6693
  call void @llvm.dbg.value(metadata i64 %sub168, metadata !6585, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %sub163, metadata !6595, metadata !DIExpression()), !dbg !6665
  br label %do.end174, !dbg !6692

do.end174:                                        ; preds = %do.body22, %if.then159, %if.then154
  %q.1 = phi i64 [ %add139, %do.body22 ], [ %inc160, %if.then159 ], [ %add139, %if.then154 ], !dbg !6677
  %n0.1 = phi i64 [ %add143, %do.body22 ], [ %sub163, %if.then159 ], [ %add143, %if.then154 ], !dbg !6677
  %n1.addr.2 = phi i64 [ %add149, %do.body22 ], [ %sub168, %if.then159 ], [ %add149, %if.then154 ], !dbg !6677
  call void @llvm.dbg.value(metadata i64 %n1.addr.2, metadata !6585, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %n0.1, metadata !6595, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.value(metadata i64 %q.1, metadata !6594, metadata !DIExpression()), !dbg !6640
  %add.ptr175 = getelementptr inbounds i64, i64* %np, i64 %i.0, !dbg !6695
  %call177 = tail call i64 @mpn_submul_1(i64* %add.ptr175, i64* %dp, i64 %sub5, i64 %q.1) #10, !dbg !6696
  call void @llvm.dbg.value(metadata i64 %call177, metadata !6592, metadata !DIExpression()), !dbg !6640
  %cmp178 = icmp ult i64 %n0.1, %call177, !dbg !6697
  %conv180 = zext i1 %cmp178 to i64, !dbg !6698
  call void @llvm.dbg.value(metadata i64 %conv180, metadata !6593, metadata !DIExpression()), !dbg !6640
  %sub181 = sub i64 %n0.1, %call177, !dbg !6699
  call void @llvm.dbg.value(metadata i64 %sub181, metadata !6595, metadata !DIExpression()), !dbg !6665
  %cmp182 = icmp ult i64 %n1.addr.2, %conv180, !dbg !6700
  call void @llvm.dbg.value(metadata i1 %cmp182, metadata !6592, metadata !DIExpression()), !dbg !6640
  %sub185 = sub i64 %n1.addr.2, %conv180, !dbg !6701
  call void @llvm.dbg.value(metadata i64 %sub185, metadata !6585, metadata !DIExpression()), !dbg !6640
  store i64 %sub181, i64* %arrayidx67, align 8, !dbg !6702, !tbaa !168
  br i1 %cmp182, label %if.then191, label %if.end199, !dbg !6703

if.then191:                                       ; preds = %do.end174
  %call195 = tail call i64 @mpn_add_n(i64* %add.ptr175, i64* %add.ptr175, i64* %dp, i64 %sub) #10, !dbg !6704
  %add196 = add i64 %0, %call195, !dbg !6707
  %add197 = add i64 %sub185, %add196, !dbg !6708
  call void @llvm.dbg.value(metadata i64 %add197, metadata !6585, metadata !DIExpression()), !dbg !6640
  %dec = add i64 %q.1, -1, !dbg !6709
  call void @llvm.dbg.value(metadata i64 %dec, metadata !6594, metadata !DIExpression()), !dbg !6640
  br label %if.end199, !dbg !6710

if.end199:                                        ; preds = %do.end174, %if.then191, %if.then16
  %q.3 = phi i64 [ -1, %if.then16 ], [ %dec, %if.then191 ], [ %q.1, %do.end174 ], !dbg !6711
  %n1.addr.4 = phi i64 [ %3, %if.then16 ], [ %add197, %if.then191 ], [ %sub185, %do.end174 ], !dbg !6711
  call void @llvm.dbg.value(metadata i64 %n1.addr.4, metadata !6585, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %q.3, metadata !6594, metadata !DIExpression()), !dbg !6640
  br i1 %tobool, label %do.cond203, label %if.then200, !dbg !6712

if.then200:                                       ; preds = %if.end199
  %arrayidx201 = getelementptr inbounds i64, i64* %qp, i64 %i.0, !dbg !6713
  store i64 %q.3, i64* %arrayidx201, align 8, !dbg !6714, !tbaa !168
  br label %do.cond203, !dbg !6713

do.cond203:                                       ; preds = %if.end199, %if.then200
  %dec204 = add nsw i64 %i.0, -1, !dbg !6715
  call void @llvm.dbg.value(metadata i64 %dec204, metadata !6589, metadata !DIExpression()), !dbg !6640
  %cmp205 = icmp sgt i64 %i.0, 0, !dbg !6716
  br i1 %cmp205, label %do.body, label %do.end207, !dbg !6717, !llvm.loop !6718

do.end207:                                        ; preds = %do.cond203
  %n1.addr.4.lcssa = phi i64 [ %n1.addr.4, %do.cond203 ], !dbg !6711
  call void @llvm.dbg.value(metadata i64 %n1.addr.4.lcssa, metadata !6585, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %n1.addr.4.lcssa, metadata !6585, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i64 %n1.addr.4.lcssa, metadata !6585, metadata !DIExpression()), !dbg !6640
  %arrayidx209 = getelementptr inbounds i64, i64* %np, i64 %sub, !dbg !6720
  store i64 %n1.addr.4.lcssa, i64* %arrayidx209, align 8, !dbg !6721, !tbaa !168
  ret void, !dbg !6722
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin noreturn nounwind }
attributes #9 = { nobuiltin nounwind }
attributes #10 = { nobuiltin }
attributes #11 = { nounwind }
attributes #12 = { nobuiltin nounwind readnone }
attributes #13 = { nobuiltin nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!54, !55, !56}
!llvm.ident = !{!57}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mp_bits_per_limb", scope: !2, file: !3, line: 239, type: !53, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !11, globals: !28, nameTableKind: None)
!3 = !DIFile(filename: "mini-gmp.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mpz_div_round_mode", file: !3, line: 2128, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10}
!8 = !DIEnumerator(name: "GMP_DIV_FLOOR", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "GMP_DIV_CEIL", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "GMP_DIV_TRUNC", value: 2, isUnsigned: true)
!11 = !{!12, !14, !15, !16, !18, !19, !20, !21, !22, !23, !24, !26}
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_limb_t", file: !13, line: 56, baseType: !14)
!13 = !DIFile(filename: "./mini-gmp.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!14 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!15 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_ptr", file: !13, line: 60, baseType: !17)
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!18 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!19 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!20 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_bitcnt_t", file: !13, line: 58, baseType: !14)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!22 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!23 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !25, line: 35, baseType: !15)
!25 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!27 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!28 = !{!0, !29, !36, !41, !46}
!29 = !DIGlobalVariableExpression(var: !30, expr: !DIExpression())
!30 = distinct !DIGlobalVariable(name: "gmp_allocate_func", scope: !2, file: !3, line: 283, type: !31, isLocal: true, isDefinition: true)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!32 = !DISubroutineType(types: !33)
!33 = !{!34, !35}
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !25, line: 46, baseType: !14)
!36 = !DIGlobalVariableExpression(var: !37, expr: !DIExpression())
!37 = distinct !DIGlobalVariable(name: "gmp_reallocate_func", scope: !2, file: !3, line: 284, type: !38, isLocal: true, isDefinition: true)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!39 = !DISubroutineType(types: !40)
!40 = !{!34, !34, !35, !35}
!41 = !DIGlobalVariableExpression(var: !42, expr: !DIExpression())
!42 = distinct !DIGlobalVariable(name: "gmp_free_func", scope: !2, file: !3, line: 285, type: !43, isLocal: true, isDefinition: true)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = !DISubroutineType(types: !45)
!45 = !{null, !34, !35}
!46 = !DIGlobalVariableExpression(var: !47, expr: !DIExpression())
!47 = distinct !DIGlobalVariable(name: "i", scope: !48, file: !3, line: 4225, type: !53, isLocal: true, isDefinition: true)
!48 = distinct !DISubprogram(name: "gmp_detect_endian", scope: !3, file: !3, line: 4223, type: !49, scopeLine: 4224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !51)
!49 = !DISubroutineType(types: !50)
!50 = !{!19}
!51 = !{!52}
!52 = !DILocalVariable(name: "p", scope: !48, file: !3, line: 4226, type: !26)
!53 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19)
!54 = !{i32 2, !"Dwarf Version", i32 4}
!55 = !{i32 2, !"Debug Info Version", i32 3}
!56 = !{i32 1, !"wchar_size", i32 4}
!57 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!58 = distinct !DISubprogram(name: "mp_get_memory_functions", scope: !3, file: !3, line: 288, type: !59, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !64)
!59 = !DISubroutineType(types: !60)
!60 = !{null, !61, !62, !63}
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!64 = !{!65, !66, !67}
!65 = !DILocalVariable(name: "alloc_func", arg: 1, scope: !58, file: !3, line: 288, type: !61)
!66 = !DILocalVariable(name: "realloc_func", arg: 2, scope: !58, file: !3, line: 289, type: !62)
!67 = !DILocalVariable(name: "free_func", arg: 3, scope: !58, file: !3, line: 290, type: !63)
!68 = !DILocation(line: 0, scope: !58)
!69 = !DILocation(line: 292, column: 7, scope: !70)
!70 = distinct !DILexicalBlock(scope: !58, file: !3, line: 292, column: 7)
!71 = !DILocation(line: 292, column: 7, scope: !58)
!72 = !DILocation(line: 293, column: 19, scope: !70)
!73 = !{!74, !74, i64 0}
!74 = !{!"any pointer", !75, i64 0}
!75 = !{!"omnipotent char", !76, i64 0}
!76 = !{!"Simple C/C++ TBAA"}
!77 = !DILocation(line: 293, column: 17, scope: !70)
!78 = !DILocation(line: 293, column: 5, scope: !70)
!79 = !DILocation(line: 295, column: 7, scope: !80)
!80 = distinct !DILexicalBlock(scope: !58, file: !3, line: 295, column: 7)
!81 = !DILocation(line: 295, column: 7, scope: !58)
!82 = !DILocation(line: 296, column: 21, scope: !80)
!83 = !DILocation(line: 296, column: 19, scope: !80)
!84 = !DILocation(line: 296, column: 5, scope: !80)
!85 = !DILocation(line: 298, column: 7, scope: !86)
!86 = distinct !DILexicalBlock(scope: !58, file: !3, line: 298, column: 7)
!87 = !DILocation(line: 298, column: 7, scope: !58)
!88 = !DILocation(line: 299, column: 18, scope: !86)
!89 = !DILocation(line: 299, column: 16, scope: !86)
!90 = !DILocation(line: 299, column: 5, scope: !86)
!91 = !DILocation(line: 300, column: 1, scope: !58)
!92 = distinct !DISubprogram(name: "mp_set_memory_functions", scope: !3, file: !3, line: 303, type: !93, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !95)
!93 = !DISubroutineType(types: !94)
!94 = !{null, !31, !38, !43}
!95 = !{!96, !97, !98}
!96 = !DILocalVariable(name: "alloc_func", arg: 1, scope: !92, file: !3, line: 303, type: !31)
!97 = !DILocalVariable(name: "realloc_func", arg: 2, scope: !92, file: !3, line: 304, type: !38)
!98 = !DILocalVariable(name: "free_func", arg: 3, scope: !92, file: !3, line: 305, type: !43)
!99 = !DILocation(line: 0, scope: !92)
!100 = !DILocation(line: 307, column: 8, scope: !101)
!101 = distinct !DILexicalBlock(scope: !92, file: !3, line: 307, column: 7)
!102 = !DILocation(line: 307, column: 7, scope: !92)
!103 = !DILocation(line: 309, column: 8, scope: !104)
!104 = distinct !DILexicalBlock(scope: !92, file: !3, line: 309, column: 7)
!105 = !DILocation(line: 309, column: 7, scope: !92)
!106 = !DILocation(line: 311, column: 8, scope: !107)
!107 = distinct !DILexicalBlock(scope: !92, file: !3, line: 311, column: 7)
!108 = !DILocation(line: 311, column: 7, scope: !92)
!109 = !DILocation(line: 314, column: 21, scope: !92)
!110 = !DILocation(line: 315, column: 23, scope: !92)
!111 = !DILocation(line: 316, column: 17, scope: !92)
!112 = !DILocation(line: 317, column: 1, scope: !92)
!113 = distinct !DISubprogram(name: "gmp_default_alloc", scope: !3, file: !3, line: 251, type: !32, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !114)
!114 = !{!115, !116}
!115 = !DILocalVariable(name: "size", arg: 1, scope: !113, file: !3, line: 251, type: !35)
!116 = !DILocalVariable(name: "p", scope: !113, file: !3, line: 253, type: !34)
!117 = !DILocation(line: 0, scope: !113)
!118 = !DILocation(line: 255, column: 3, scope: !119)
!119 = distinct !DILexicalBlock(scope: !120, file: !3, line: 255, column: 3)
!120 = distinct !DILexicalBlock(scope: !113, file: !3, line: 255, column: 3)
!121 = !DILocation(line: 255, column: 3, scope: !120)
!122 = !DILocation(line: 257, column: 7, scope: !113)
!123 = !DILocation(line: 258, column: 8, scope: !124)
!124 = distinct !DILexicalBlock(scope: !113, file: !3, line: 258, column: 7)
!125 = !DILocation(line: 258, column: 7, scope: !113)
!126 = !DILocation(line: 259, column: 5, scope: !124)
!127 = !DILocation(line: 261, column: 3, scope: !113)
!128 = distinct !DISubprogram(name: "gmp_default_realloc", scope: !3, file: !3, line: 265, type: !39, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !129)
!129 = !{!130, !131, !132, !133}
!130 = !DILocalVariable(name: "old", arg: 1, scope: !128, file: !3, line: 265, type: !34)
!131 = !DILocalVariable(name: "old_size", arg: 2, scope: !128, file: !3, line: 265, type: !35)
!132 = !DILocalVariable(name: "new_size", arg: 3, scope: !128, file: !3, line: 265, type: !35)
!133 = !DILocalVariable(name: "p", scope: !128, file: !3, line: 267, type: !16)
!134 = !DILocation(line: 0, scope: !128)
!135 = !DILocation(line: 269, column: 7, scope: !128)
!136 = !DILocation(line: 271, column: 8, scope: !137)
!137 = distinct !DILexicalBlock(scope: !128, file: !3, line: 271, column: 7)
!138 = !DILocation(line: 271, column: 7, scope: !128)
!139 = !DILocation(line: 272, column: 5, scope: !137)
!140 = !DILocation(line: 274, column: 3, scope: !128)
!141 = distinct !DISubprogram(name: "gmp_default_free", scope: !3, file: !3, line: 278, type: !44, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !142)
!142 = !{!143, !144}
!143 = !DILocalVariable(name: "p", arg: 1, scope: !141, file: !3, line: 278, type: !34)
!144 = !DILocalVariable(name: "size", arg: 2, scope: !141, file: !3, line: 278, type: !35)
!145 = !DILocation(line: 0, scope: !141)
!146 = !DILocation(line: 280, column: 3, scope: !141)
!147 = !DILocation(line: 281, column: 1, scope: !141)
!148 = distinct !DISubprogram(name: "mpn_copyi", scope: !3, file: !3, line: 339, type: !149, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !155)
!149 = !DISubroutineType(types: !150)
!150 = !{null, !16, !151, !154}
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_srcptr", file: !13, line: 61, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_size_t", file: !13, line: 57, baseType: !15)
!155 = !{!156, !157, !158, !159}
!156 = !DILocalVariable(name: "d", arg: 1, scope: !148, file: !3, line: 339, type: !16)
!157 = !DILocalVariable(name: "s", arg: 2, scope: !148, file: !3, line: 339, type: !151)
!158 = !DILocalVariable(name: "n", arg: 3, scope: !148, file: !3, line: 339, type: !154)
!159 = !DILocalVariable(name: "i", scope: !148, file: !3, line: 341, type: !154)
!160 = !DILocation(line: 0, scope: !148)
!161 = !DILocation(line: 342, column: 8, scope: !162)
!162 = distinct !DILexicalBlock(scope: !148, file: !3, line: 342, column: 3)
!163 = !DILocation(line: 0, scope: !162)
!164 = !DILocation(line: 342, column: 17, scope: !165)
!165 = distinct !DILexicalBlock(scope: !162, file: !3, line: 342, column: 3)
!166 = !DILocation(line: 342, column: 3, scope: !162)
!167 = !DILocation(line: 343, column: 12, scope: !165)
!168 = !{!169, !169, i64 0}
!169 = !{!"long", !75, i64 0}
!170 = !DILocation(line: 343, column: 5, scope: !165)
!171 = !DILocation(line: 343, column: 10, scope: !165)
!172 = !DILocation(line: 342, column: 23, scope: !165)
!173 = !DILocation(line: 342, column: 3, scope: !165)
!174 = distinct !{!174, !166, !175}
!175 = !DILocation(line: 343, column: 15, scope: !162)
!176 = !DILocation(line: 344, column: 1, scope: !148)
!177 = distinct !DISubprogram(name: "mpn_copyd", scope: !3, file: !3, line: 347, type: !149, scopeLine: 348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !178)
!178 = !{!179, !180, !181}
!179 = !DILocalVariable(name: "d", arg: 1, scope: !177, file: !3, line: 347, type: !16)
!180 = !DILocalVariable(name: "s", arg: 2, scope: !177, file: !3, line: 347, type: !151)
!181 = !DILocalVariable(name: "n", arg: 3, scope: !177, file: !3, line: 347, type: !154)
!182 = !DILocation(line: 0, scope: !177)
!183 = !DILocation(line: 349, column: 3, scope: !177)
!184 = !DILocation(line: 349, column: 11, scope: !177)
!185 = !DILocation(line: 349, column: 14, scope: !177)
!186 = !DILocation(line: 350, column: 12, scope: !177)
!187 = !DILocation(line: 350, column: 5, scope: !177)
!188 = !DILocation(line: 350, column: 10, scope: !177)
!189 = distinct !{!189, !183, !190}
!190 = !DILocation(line: 350, column: 15, scope: !177)
!191 = !DILocation(line: 351, column: 1, scope: !177)
!192 = distinct !DISubprogram(name: "mpn_cmp", scope: !3, file: !3, line: 354, type: !193, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !195)
!193 = !DISubroutineType(types: !194)
!194 = !{!19, !151, !151, !154}
!195 = !{!196, !197, !198}
!196 = !DILocalVariable(name: "ap", arg: 1, scope: !192, file: !3, line: 354, type: !151)
!197 = !DILocalVariable(name: "bp", arg: 2, scope: !192, file: !3, line: 354, type: !151)
!198 = !DILocalVariable(name: "n", arg: 3, scope: !192, file: !3, line: 354, type: !154)
!199 = !DILocation(line: 0, scope: !192)
!200 = !DILocation(line: 356, column: 3, scope: !192)
!201 = !DILocation(line: 356, column: 10, scope: !192)
!202 = !DILocation(line: 356, column: 14, scope: !192)
!203 = !DILocation(line: 358, column: 11, scope: !204)
!204 = distinct !DILexicalBlock(scope: !205, file: !3, line: 358, column: 11)
!205 = distinct !DILexicalBlock(scope: !192, file: !3, line: 357, column: 5)
!206 = !DILocation(line: 358, column: 20, scope: !204)
!207 = !DILocation(line: 358, column: 17, scope: !204)
!208 = !DILocation(line: 358, column: 11, scope: !205)
!209 = distinct !{!209, !200, !210}
!210 = !DILocation(line: 360, column: 5, scope: !192)
!211 = !DILocation(line: 359, column: 15, scope: !204)
!212 = !DILocation(line: 359, column: 9, scope: !204)
!213 = !DILocation(line: 359, column: 2, scope: !204)
!214 = !DILocation(line: 362, column: 1, scope: !192)
!215 = distinct !DISubprogram(name: "mpn_zero", scope: !3, file: !3, line: 384, type: !216, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !218)
!216 = !DISubroutineType(types: !217)
!217 = !{null, !16, !154}
!218 = !{!219, !220, !221}
!219 = !DILocalVariable(name: "rp", arg: 1, scope: !215, file: !3, line: 384, type: !16)
!220 = !DILocalVariable(name: "n", arg: 2, scope: !215, file: !3, line: 384, type: !154)
!221 = !DILocalVariable(name: "i", scope: !215, file: !3, line: 386, type: !154)
!222 = !DILocation(line: 0, scope: !215)
!223 = !DILocation(line: 388, column: 8, scope: !224)
!224 = distinct !DILexicalBlock(scope: !215, file: !3, line: 388, column: 3)
!225 = !DILocation(line: 0, scope: !224)
!226 = !DILocation(line: 388, column: 17, scope: !227)
!227 = distinct !DILexicalBlock(scope: !224, file: !3, line: 388, column: 3)
!228 = !DILocation(line: 388, column: 3, scope: !224)
!229 = !DILocation(line: 389, column: 5, scope: !227)
!230 = !DILocation(line: 389, column: 11, scope: !227)
!231 = !DILocation(line: 388, column: 23, scope: !227)
!232 = !DILocation(line: 388, column: 3, scope: !227)
!233 = distinct !{!233, !228, !234}
!234 = !DILocation(line: 389, column: 13, scope: !224)
!235 = !DILocation(line: 390, column: 1, scope: !215)
!236 = distinct !DISubprogram(name: "mpn_add_1", scope: !3, file: !3, line: 393, type: !237, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !239)
!237 = !DISubroutineType(types: !238)
!238 = !{!12, !16, !151, !154, !12}
!239 = !{!240, !241, !242, !243, !244, !245}
!240 = !DILocalVariable(name: "rp", arg: 1, scope: !236, file: !3, line: 393, type: !16)
!241 = !DILocalVariable(name: "ap", arg: 2, scope: !236, file: !3, line: 393, type: !151)
!242 = !DILocalVariable(name: "n", arg: 3, scope: !236, file: !3, line: 393, type: !154)
!243 = !DILocalVariable(name: "b", arg: 4, scope: !236, file: !3, line: 393, type: !12)
!244 = !DILocalVariable(name: "i", scope: !236, file: !3, line: 395, type: !154)
!245 = !DILocalVariable(name: "r", scope: !246, file: !3, line: 401, type: !12)
!246 = distinct !DILexicalBlock(scope: !236, file: !3, line: 400, column: 5)
!247 = !DILocation(line: 0, scope: !236)
!248 = !DILocation(line: 397, column: 3, scope: !249)
!249 = distinct !DILexicalBlock(scope: !250, file: !3, line: 397, column: 3)
!250 = distinct !DILexicalBlock(scope: !236, file: !3, line: 397, column: 3)
!251 = !DILocation(line: 397, column: 3, scope: !250)
!252 = !DILocation(line: 399, column: 3, scope: !236)
!253 = !DILocation(line: 401, column: 21, scope: !246)
!254 = !DILocation(line: 401, column: 27, scope: !246)
!255 = !DILocation(line: 0, scope: !246)
!256 = !DILocation(line: 403, column: 14, scope: !246)
!257 = !DILocation(line: 403, column: 11, scope: !246)
!258 = !DILocation(line: 404, column: 7, scope: !246)
!259 = !DILocation(line: 404, column: 13, scope: !246)
!260 = !DILocation(line: 406, column: 10, scope: !236)
!261 = !DILocation(line: 406, column: 14, scope: !236)
!262 = !DILocation(line: 405, column: 5, scope: !246)
!263 = distinct !{!263, !252, !264}
!264 = !DILocation(line: 406, column: 17, scope: !236)
!265 = !DILocation(line: 408, column: 3, scope: !236)
!266 = distinct !DISubprogram(name: "mpn_add_n", scope: !3, file: !3, line: 412, type: !267, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !269)
!267 = !DISubroutineType(types: !268)
!268 = !{!12, !16, !151, !151, !154}
!269 = !{!270, !271, !272, !273, !274, !275, !276, !280, !281}
!270 = !DILocalVariable(name: "rp", arg: 1, scope: !266, file: !3, line: 412, type: !16)
!271 = !DILocalVariable(name: "ap", arg: 2, scope: !266, file: !3, line: 412, type: !151)
!272 = !DILocalVariable(name: "bp", arg: 3, scope: !266, file: !3, line: 412, type: !151)
!273 = !DILocalVariable(name: "n", arg: 4, scope: !266, file: !3, line: 412, type: !154)
!274 = !DILocalVariable(name: "i", scope: !266, file: !3, line: 414, type: !154)
!275 = !DILocalVariable(name: "cy", scope: !266, file: !3, line: 415, type: !12)
!276 = !DILocalVariable(name: "a", scope: !277, file: !3, line: 419, type: !12)
!277 = distinct !DILexicalBlock(scope: !278, file: !3, line: 418, column: 5)
!278 = distinct !DILexicalBlock(scope: !279, file: !3, line: 417, column: 3)
!279 = distinct !DILexicalBlock(scope: !266, file: !3, line: 417, column: 3)
!280 = !DILocalVariable(name: "b", scope: !277, file: !3, line: 419, type: !12)
!281 = !DILocalVariable(name: "r", scope: !277, file: !3, line: 419, type: !12)
!282 = !DILocation(line: 0, scope: !266)
!283 = !DILocation(line: 417, column: 8, scope: !279)
!284 = !DILocation(line: 0, scope: !279)
!285 = !DILocation(line: 417, column: 25, scope: !278)
!286 = !DILocation(line: 417, column: 3, scope: !279)
!287 = !DILocation(line: 420, column: 11, scope: !277)
!288 = !DILocation(line: 0, scope: !277)
!289 = !DILocation(line: 420, column: 22, scope: !277)
!290 = !DILocation(line: 421, column: 13, scope: !277)
!291 = !DILocation(line: 422, column: 15, scope: !277)
!292 = !DILocation(line: 422, column: 12, scope: !277)
!293 = !DILocation(line: 423, column: 9, scope: !277)
!294 = !DILocation(line: 424, column: 16, scope: !277)
!295 = !DILocation(line: 424, column: 13, scope: !277)
!296 = !DILocation(line: 424, column: 10, scope: !277)
!297 = !DILocation(line: 425, column: 7, scope: !277)
!298 = !DILocation(line: 425, column: 13, scope: !277)
!299 = !DILocation(line: 417, column: 31, scope: !278)
!300 = !DILocation(line: 417, column: 3, scope: !278)
!301 = distinct !{!301, !286, !302}
!302 = !DILocation(line: 426, column: 5, scope: !279)
!303 = !DILocation(line: 427, column: 3, scope: !266)
!304 = distinct !DISubprogram(name: "mpn_add", scope: !3, file: !3, line: 431, type: !305, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !307)
!305 = !DISubroutineType(types: !306)
!306 = !{!12, !16, !151, !154, !151, !154}
!307 = !{!308, !309, !310, !311, !312, !313}
!308 = !DILocalVariable(name: "rp", arg: 1, scope: !304, file: !3, line: 431, type: !16)
!309 = !DILocalVariable(name: "ap", arg: 2, scope: !304, file: !3, line: 431, type: !151)
!310 = !DILocalVariable(name: "an", arg: 3, scope: !304, file: !3, line: 431, type: !154)
!311 = !DILocalVariable(name: "bp", arg: 4, scope: !304, file: !3, line: 431, type: !151)
!312 = !DILocalVariable(name: "bn", arg: 5, scope: !304, file: !3, line: 431, type: !154)
!313 = !DILocalVariable(name: "cy", scope: !304, file: !3, line: 433, type: !12)
!314 = !DILocation(line: 0, scope: !304)
!315 = !DILocation(line: 435, column: 3, scope: !316)
!316 = distinct !DILexicalBlock(scope: !317, file: !3, line: 435, column: 3)
!317 = distinct !DILexicalBlock(scope: !304, file: !3, line: 435, column: 3)
!318 = !DILocation(line: 435, column: 3, scope: !317)
!319 = !DILocation(line: 437, column: 8, scope: !304)
!320 = !DILocation(line: 438, column: 10, scope: !321)
!321 = distinct !DILexicalBlock(scope: !304, file: !3, line: 438, column: 7)
!322 = !DILocation(line: 438, column: 7, scope: !304)
!323 = !DILocation(line: 439, column: 24, scope: !321)
!324 = !DILocation(line: 439, column: 33, scope: !321)
!325 = !DILocation(line: 439, column: 42, scope: !321)
!326 = !DILocation(line: 439, column: 10, scope: !321)
!327 = !DILocation(line: 439, column: 5, scope: !321)
!328 = !DILocation(line: 440, column: 3, scope: !304)
!329 = distinct !DISubprogram(name: "mpn_sub_1", scope: !3, file: !3, line: 444, type: !237, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !330)
!330 = !{!331, !332, !333, !334, !335, !336, !338}
!331 = !DILocalVariable(name: "rp", arg: 1, scope: !329, file: !3, line: 444, type: !16)
!332 = !DILocalVariable(name: "ap", arg: 2, scope: !329, file: !3, line: 444, type: !151)
!333 = !DILocalVariable(name: "n", arg: 3, scope: !329, file: !3, line: 444, type: !154)
!334 = !DILocalVariable(name: "b", arg: 4, scope: !329, file: !3, line: 444, type: !12)
!335 = !DILocalVariable(name: "i", scope: !329, file: !3, line: 446, type: !154)
!336 = !DILocalVariable(name: "a", scope: !337, file: !3, line: 453, type: !12)
!337 = distinct !DILexicalBlock(scope: !329, file: !3, line: 452, column: 5)
!338 = !DILocalVariable(name: "cy", scope: !337, file: !3, line: 455, type: !12)
!339 = !DILocation(line: 0, scope: !329)
!340 = !DILocation(line: 448, column: 3, scope: !341)
!341 = distinct !DILexicalBlock(scope: !342, file: !3, line: 448, column: 3)
!342 = distinct !DILexicalBlock(scope: !329, file: !3, line: 448, column: 3)
!343 = !DILocation(line: 448, column: 3, scope: !342)
!344 = !DILocation(line: 451, column: 3, scope: !329)
!345 = !DILocation(line: 453, column: 21, scope: !337)
!346 = !DILocation(line: 0, scope: !337)
!347 = !DILocation(line: 455, column: 24, scope: !337)
!348 = !DILocation(line: 455, column: 22, scope: !337)
!349 = !DILocation(line: 456, column: 17, scope: !337)
!350 = !DILocation(line: 456, column: 7, scope: !337)
!351 = !DILocation(line: 456, column: 13, scope: !337)
!352 = !DILocation(line: 459, column: 10, scope: !329)
!353 = !DILocation(line: 459, column: 14, scope: !329)
!354 = !DILocation(line: 458, column: 5, scope: !337)
!355 = distinct !{!355, !344, !356}
!356 = !DILocation(line: 459, column: 17, scope: !329)
!357 = !DILocation(line: 461, column: 3, scope: !329)
!358 = distinct !DISubprogram(name: "mpn_sub_n", scope: !3, file: !3, line: 465, type: !267, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !359)
!359 = !{!360, !361, !362, !363, !364, !365, !366, !370}
!360 = !DILocalVariable(name: "rp", arg: 1, scope: !358, file: !3, line: 465, type: !16)
!361 = !DILocalVariable(name: "ap", arg: 2, scope: !358, file: !3, line: 465, type: !151)
!362 = !DILocalVariable(name: "bp", arg: 3, scope: !358, file: !3, line: 465, type: !151)
!363 = !DILocalVariable(name: "n", arg: 4, scope: !358, file: !3, line: 465, type: !154)
!364 = !DILocalVariable(name: "i", scope: !358, file: !3, line: 467, type: !154)
!365 = !DILocalVariable(name: "cy", scope: !358, file: !3, line: 468, type: !12)
!366 = !DILocalVariable(name: "a", scope: !367, file: !3, line: 472, type: !12)
!367 = distinct !DILexicalBlock(scope: !368, file: !3, line: 471, column: 5)
!368 = distinct !DILexicalBlock(scope: !369, file: !3, line: 470, column: 3)
!369 = distinct !DILexicalBlock(scope: !358, file: !3, line: 470, column: 3)
!370 = !DILocalVariable(name: "b", scope: !367, file: !3, line: 472, type: !12)
!371 = !DILocation(line: 0, scope: !358)
!372 = !DILocation(line: 470, column: 8, scope: !369)
!373 = !DILocation(line: 0, scope: !369)
!374 = !DILocation(line: 470, column: 25, scope: !368)
!375 = !DILocation(line: 470, column: 3, scope: !369)
!376 = !DILocation(line: 473, column: 11, scope: !367)
!377 = !DILocation(line: 0, scope: !367)
!378 = !DILocation(line: 473, column: 22, scope: !367)
!379 = !DILocation(line: 474, column: 9, scope: !367)
!380 = !DILocation(line: 475, column: 15, scope: !367)
!381 = !DILocation(line: 475, column: 12, scope: !367)
!382 = !DILocation(line: 476, column: 16, scope: !367)
!383 = !DILocation(line: 476, column: 13, scope: !367)
!384 = !DILocation(line: 476, column: 10, scope: !367)
!385 = !DILocation(line: 477, column: 17, scope: !367)
!386 = !DILocation(line: 477, column: 7, scope: !367)
!387 = !DILocation(line: 477, column: 13, scope: !367)
!388 = !DILocation(line: 470, column: 31, scope: !368)
!389 = !DILocation(line: 470, column: 3, scope: !368)
!390 = distinct !{!390, !375, !391}
!391 = !DILocation(line: 478, column: 5, scope: !369)
!392 = !DILocation(line: 479, column: 3, scope: !358)
!393 = distinct !DISubprogram(name: "mpn_sub", scope: !3, file: !3, line: 483, type: !305, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !394)
!394 = !{!395, !396, !397, !398, !399, !400}
!395 = !DILocalVariable(name: "rp", arg: 1, scope: !393, file: !3, line: 483, type: !16)
!396 = !DILocalVariable(name: "ap", arg: 2, scope: !393, file: !3, line: 483, type: !151)
!397 = !DILocalVariable(name: "an", arg: 3, scope: !393, file: !3, line: 483, type: !154)
!398 = !DILocalVariable(name: "bp", arg: 4, scope: !393, file: !3, line: 483, type: !151)
!399 = !DILocalVariable(name: "bn", arg: 5, scope: !393, file: !3, line: 483, type: !154)
!400 = !DILocalVariable(name: "cy", scope: !393, file: !3, line: 485, type: !12)
!401 = !DILocation(line: 0, scope: !393)
!402 = !DILocation(line: 487, column: 3, scope: !403)
!403 = distinct !DILexicalBlock(scope: !404, file: !3, line: 487, column: 3)
!404 = distinct !DILexicalBlock(scope: !393, file: !3, line: 487, column: 3)
!405 = !DILocation(line: 487, column: 3, scope: !404)
!406 = !DILocation(line: 489, column: 8, scope: !393)
!407 = !DILocation(line: 490, column: 10, scope: !408)
!408 = distinct !DILexicalBlock(scope: !393, file: !3, line: 490, column: 7)
!409 = !DILocation(line: 490, column: 7, scope: !393)
!410 = !DILocation(line: 491, column: 24, scope: !408)
!411 = !DILocation(line: 491, column: 33, scope: !408)
!412 = !DILocation(line: 491, column: 42, scope: !408)
!413 = !DILocation(line: 491, column: 10, scope: !408)
!414 = !DILocation(line: 491, column: 5, scope: !408)
!415 = !DILocation(line: 492, column: 3, scope: !393)
!416 = distinct !DISubprogram(name: "mpn_mul_1", scope: !3, file: !3, line: 496, type: !237, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !417)
!417 = !{!418, !419, !420, !421, !422, !423, !424, !425, !426, !429, !430, !431, !432, !433, !434, !435, !436, !437}
!418 = !DILocalVariable(name: "rp", arg: 1, scope: !416, file: !3, line: 496, type: !16)
!419 = !DILocalVariable(name: "up", arg: 2, scope: !416, file: !3, line: 496, type: !151)
!420 = !DILocalVariable(name: "n", arg: 3, scope: !416, file: !3, line: 496, type: !154)
!421 = !DILocalVariable(name: "vl", arg: 4, scope: !416, file: !3, line: 496, type: !12)
!422 = !DILocalVariable(name: "ul", scope: !416, file: !3, line: 498, type: !12)
!423 = !DILocalVariable(name: "cl", scope: !416, file: !3, line: 498, type: !12)
!424 = !DILocalVariable(name: "hpl", scope: !416, file: !3, line: 498, type: !12)
!425 = !DILocalVariable(name: "lpl", scope: !416, file: !3, line: 498, type: !12)
!426 = !DILocalVariable(name: "__x0", scope: !427, file: !3, line: 506, type: !12)
!427 = distinct !DILexicalBlock(scope: !428, file: !3, line: 506, column: 7)
!428 = distinct !DILexicalBlock(scope: !416, file: !3, line: 504, column: 5)
!429 = !DILocalVariable(name: "__x1", scope: !427, file: !3, line: 506, type: !12)
!430 = !DILocalVariable(name: "__x2", scope: !427, file: !3, line: 506, type: !12)
!431 = !DILocalVariable(name: "__x3", scope: !427, file: !3, line: 506, type: !12)
!432 = !DILocalVariable(name: "__ul", scope: !427, file: !3, line: 506, type: !6)
!433 = !DILocalVariable(name: "__vl", scope: !427, file: !3, line: 506, type: !6)
!434 = !DILocalVariable(name: "__uh", scope: !427, file: !3, line: 506, type: !6)
!435 = !DILocalVariable(name: "__vh", scope: !427, file: !3, line: 506, type: !6)
!436 = !DILocalVariable(name: "__u", scope: !427, file: !3, line: 506, type: !12)
!437 = !DILocalVariable(name: "__v", scope: !427, file: !3, line: 506, type: !12)
!438 = !DILocation(line: 0, scope: !416)
!439 = !DILocation(line: 500, column: 3, scope: !440)
!440 = distinct !DILexicalBlock(scope: !441, file: !3, line: 500, column: 3)
!441 = distinct !DILexicalBlock(scope: !416, file: !3, line: 500, column: 3)
!442 = !DILocation(line: 500, column: 3, scope: !441)
!443 = !DILocation(line: 0, scope: !427)
!444 = !DILocation(line: 503, column: 3, scope: !416)
!445 = !DILocation(line: 505, column: 15, scope: !428)
!446 = !DILocation(line: 505, column: 12, scope: !428)
!447 = !DILocation(line: 506, column: 7, scope: !427)
!448 = !DILocation(line: 506, column: 7, scope: !449)
!449 = distinct !DILexicalBlock(scope: !427, file: !3, line: 506, column: 7)
!450 = !DILocation(line: 508, column: 11, scope: !428)
!451 = !DILocation(line: 509, column: 17, scope: !428)
!452 = !DILocation(line: 509, column: 12, scope: !428)
!453 = !DILocation(line: 509, column: 23, scope: !428)
!454 = !DILocation(line: 511, column: 10, scope: !428)
!455 = !DILocation(line: 511, column: 13, scope: !428)
!456 = !DILocation(line: 513, column: 10, scope: !416)
!457 = !DILocation(line: 513, column: 14, scope: !416)
!458 = !DILocation(line: 512, column: 5, scope: !428)
!459 = distinct !{!459, !444, !460}
!460 = !DILocation(line: 513, column: 18, scope: !416)
!461 = !DILocation(line: 515, column: 3, scope: !416)
!462 = distinct !DISubprogram(name: "mpn_addmul_1", scope: !3, file: !3, line: 519, type: !237, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !463)
!463 = !{!464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !476, !477, !478, !479, !480, !481, !482, !483, !484}
!464 = !DILocalVariable(name: "rp", arg: 1, scope: !462, file: !3, line: 519, type: !16)
!465 = !DILocalVariable(name: "up", arg: 2, scope: !462, file: !3, line: 519, type: !151)
!466 = !DILocalVariable(name: "n", arg: 3, scope: !462, file: !3, line: 519, type: !154)
!467 = !DILocalVariable(name: "vl", arg: 4, scope: !462, file: !3, line: 519, type: !12)
!468 = !DILocalVariable(name: "ul", scope: !462, file: !3, line: 521, type: !12)
!469 = !DILocalVariable(name: "cl", scope: !462, file: !3, line: 521, type: !12)
!470 = !DILocalVariable(name: "hpl", scope: !462, file: !3, line: 521, type: !12)
!471 = !DILocalVariable(name: "lpl", scope: !462, file: !3, line: 521, type: !12)
!472 = !DILocalVariable(name: "rl", scope: !462, file: !3, line: 521, type: !12)
!473 = !DILocalVariable(name: "__x0", scope: !474, file: !3, line: 529, type: !12)
!474 = distinct !DILexicalBlock(scope: !475, file: !3, line: 529, column: 7)
!475 = distinct !DILexicalBlock(scope: !462, file: !3, line: 527, column: 5)
!476 = !DILocalVariable(name: "__x1", scope: !474, file: !3, line: 529, type: !12)
!477 = !DILocalVariable(name: "__x2", scope: !474, file: !3, line: 529, type: !12)
!478 = !DILocalVariable(name: "__x3", scope: !474, file: !3, line: 529, type: !12)
!479 = !DILocalVariable(name: "__ul", scope: !474, file: !3, line: 529, type: !6)
!480 = !DILocalVariable(name: "__vl", scope: !474, file: !3, line: 529, type: !6)
!481 = !DILocalVariable(name: "__uh", scope: !474, file: !3, line: 529, type: !6)
!482 = !DILocalVariable(name: "__vh", scope: !474, file: !3, line: 529, type: !6)
!483 = !DILocalVariable(name: "__u", scope: !474, file: !3, line: 529, type: !12)
!484 = !DILocalVariable(name: "__v", scope: !474, file: !3, line: 529, type: !12)
!485 = !DILocation(line: 0, scope: !462)
!486 = !DILocation(line: 523, column: 3, scope: !487)
!487 = distinct !DILexicalBlock(scope: !488, file: !3, line: 523, column: 3)
!488 = distinct !DILexicalBlock(scope: !462, file: !3, line: 523, column: 3)
!489 = !DILocation(line: 523, column: 3, scope: !488)
!490 = !DILocation(line: 0, scope: !474)
!491 = !DILocation(line: 526, column: 3, scope: !462)
!492 = !DILocation(line: 528, column: 15, scope: !475)
!493 = !DILocation(line: 528, column: 12, scope: !475)
!494 = !DILocation(line: 529, column: 7, scope: !474)
!495 = !DILocation(line: 529, column: 7, scope: !496)
!496 = distinct !DILexicalBlock(scope: !474, file: !3, line: 529, column: 7)
!497 = !DILocation(line: 531, column: 11, scope: !475)
!498 = !DILocation(line: 532, column: 17, scope: !475)
!499 = !DILocation(line: 532, column: 12, scope: !475)
!500 = !DILocation(line: 532, column: 23, scope: !475)
!501 = !DILocation(line: 534, column: 12, scope: !475)
!502 = !DILocation(line: 535, column: 16, scope: !475)
!503 = !DILocation(line: 536, column: 17, scope: !475)
!504 = !DILocation(line: 536, column: 13, scope: !475)
!505 = !DILocation(line: 536, column: 10, scope: !475)
!506 = !DILocation(line: 537, column: 10, scope: !475)
!507 = !DILocation(line: 537, column: 13, scope: !475)
!508 = !DILocation(line: 539, column: 10, scope: !462)
!509 = !DILocation(line: 539, column: 14, scope: !462)
!510 = !DILocation(line: 538, column: 5, scope: !475)
!511 = distinct !{!511, !491, !512}
!512 = !DILocation(line: 539, column: 18, scope: !462)
!513 = !DILocation(line: 541, column: 3, scope: !462)
!514 = distinct !DISubprogram(name: "mpn_submul_1", scope: !3, file: !3, line: 545, type: !237, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !515)
!515 = !{!516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !528, !529, !530, !531, !532, !533, !534, !535, !536}
!516 = !DILocalVariable(name: "rp", arg: 1, scope: !514, file: !3, line: 545, type: !16)
!517 = !DILocalVariable(name: "up", arg: 2, scope: !514, file: !3, line: 545, type: !151)
!518 = !DILocalVariable(name: "n", arg: 3, scope: !514, file: !3, line: 545, type: !154)
!519 = !DILocalVariable(name: "vl", arg: 4, scope: !514, file: !3, line: 545, type: !12)
!520 = !DILocalVariable(name: "ul", scope: !514, file: !3, line: 547, type: !12)
!521 = !DILocalVariable(name: "cl", scope: !514, file: !3, line: 547, type: !12)
!522 = !DILocalVariable(name: "hpl", scope: !514, file: !3, line: 547, type: !12)
!523 = !DILocalVariable(name: "lpl", scope: !514, file: !3, line: 547, type: !12)
!524 = !DILocalVariable(name: "rl", scope: !514, file: !3, line: 547, type: !12)
!525 = !DILocalVariable(name: "__x0", scope: !526, file: !3, line: 555, type: !12)
!526 = distinct !DILexicalBlock(scope: !527, file: !3, line: 555, column: 7)
!527 = distinct !DILexicalBlock(scope: !514, file: !3, line: 553, column: 5)
!528 = !DILocalVariable(name: "__x1", scope: !526, file: !3, line: 555, type: !12)
!529 = !DILocalVariable(name: "__x2", scope: !526, file: !3, line: 555, type: !12)
!530 = !DILocalVariable(name: "__x3", scope: !526, file: !3, line: 555, type: !12)
!531 = !DILocalVariable(name: "__ul", scope: !526, file: !3, line: 555, type: !6)
!532 = !DILocalVariable(name: "__vl", scope: !526, file: !3, line: 555, type: !6)
!533 = !DILocalVariable(name: "__uh", scope: !526, file: !3, line: 555, type: !6)
!534 = !DILocalVariable(name: "__vh", scope: !526, file: !3, line: 555, type: !6)
!535 = !DILocalVariable(name: "__u", scope: !526, file: !3, line: 555, type: !12)
!536 = !DILocalVariable(name: "__v", scope: !526, file: !3, line: 555, type: !12)
!537 = !DILocation(line: 0, scope: !514)
!538 = !DILocation(line: 549, column: 3, scope: !539)
!539 = distinct !DILexicalBlock(scope: !540, file: !3, line: 549, column: 3)
!540 = distinct !DILexicalBlock(scope: !514, file: !3, line: 549, column: 3)
!541 = !DILocation(line: 549, column: 3, scope: !540)
!542 = !DILocation(line: 0, scope: !526)
!543 = !DILocation(line: 552, column: 3, scope: !514)
!544 = !DILocation(line: 554, column: 15, scope: !527)
!545 = !DILocation(line: 554, column: 12, scope: !527)
!546 = !DILocation(line: 555, column: 7, scope: !526)
!547 = !DILocation(line: 555, column: 7, scope: !548)
!548 = distinct !DILexicalBlock(scope: !526, file: !3, line: 555, column: 7)
!549 = !DILocation(line: 557, column: 11, scope: !527)
!550 = !DILocation(line: 558, column: 17, scope: !527)
!551 = !DILocation(line: 558, column: 12, scope: !527)
!552 = !DILocation(line: 558, column: 23, scope: !527)
!553 = !DILocation(line: 560, column: 12, scope: !527)
!554 = !DILocation(line: 561, column: 16, scope: !527)
!555 = !DILocation(line: 562, column: 17, scope: !527)
!556 = !DILocation(line: 562, column: 13, scope: !527)
!557 = !DILocation(line: 562, column: 10, scope: !527)
!558 = !DILocation(line: 563, column: 10, scope: !527)
!559 = !DILocation(line: 563, column: 13, scope: !527)
!560 = !DILocation(line: 565, column: 10, scope: !514)
!561 = !DILocation(line: 565, column: 14, scope: !514)
!562 = !DILocation(line: 564, column: 5, scope: !527)
!563 = distinct !{!563, !543, !564}
!564 = !DILocation(line: 565, column: 18, scope: !514)
!565 = !DILocation(line: 567, column: 3, scope: !514)
!566 = distinct !DISubprogram(name: "mpn_mul", scope: !3, file: !3, line: 571, type: !305, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !567)
!567 = !{!568, !569, !570, !571, !572}
!568 = !DILocalVariable(name: "rp", arg: 1, scope: !566, file: !3, line: 571, type: !16)
!569 = !DILocalVariable(name: "up", arg: 2, scope: !566, file: !3, line: 571, type: !151)
!570 = !DILocalVariable(name: "un", arg: 3, scope: !566, file: !3, line: 571, type: !154)
!571 = !DILocalVariable(name: "vp", arg: 4, scope: !566, file: !3, line: 571, type: !151)
!572 = !DILocalVariable(name: "vn", arg: 5, scope: !566, file: !3, line: 571, type: !154)
!573 = !DILocation(line: 0, scope: !566)
!574 = !DILocation(line: 573, column: 3, scope: !575)
!575 = distinct !DILexicalBlock(scope: !576, file: !3, line: 573, column: 3)
!576 = distinct !DILexicalBlock(scope: !566, file: !3, line: 573, column: 3)
!577 = !DILocation(line: 573, column: 3, scope: !576)
!578 = !DILocation(line: 574, column: 3, scope: !579)
!579 = distinct !DILexicalBlock(scope: !580, file: !3, line: 574, column: 3)
!580 = distinct !DILexicalBlock(scope: !566, file: !3, line: 574, column: 3)
!581 = !DILocation(line: 574, column: 3, scope: !580)
!582 = !DILocation(line: 580, column: 35, scope: !566)
!583 = !DILocation(line: 580, column: 12, scope: !566)
!584 = !DILocation(line: 580, column: 3, scope: !566)
!585 = !DILocation(line: 580, column: 10, scope: !566)
!586 = !DILocation(line: 586, column: 3, scope: !566)
!587 = !DILocation(line: 586, column: 13, scope: !566)
!588 = !DILocation(line: 588, column: 42, scope: !589)
!589 = distinct !DILexicalBlock(scope: !566, file: !3, line: 587, column: 5)
!590 = !DILocation(line: 588, column: 16, scope: !589)
!591 = !DILocation(line: 588, column: 7, scope: !589)
!592 = !DILocation(line: 588, column: 14, scope: !589)
!593 = distinct !{!593, !586, !594}
!594 = !DILocation(line: 590, column: 5, scope: !566)
!595 = !DILocation(line: 591, column: 3, scope: !566)
!596 = distinct !DISubprogram(name: "mpn_mul_n", scope: !3, file: !3, line: 595, type: !597, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !599)
!597 = !DISubroutineType(types: !598)
!598 = !{null, !16, !151, !151, !154}
!599 = !{!600, !601, !602, !603}
!600 = !DILocalVariable(name: "rp", arg: 1, scope: !596, file: !3, line: 595, type: !16)
!601 = !DILocalVariable(name: "ap", arg: 2, scope: !596, file: !3, line: 595, type: !151)
!602 = !DILocalVariable(name: "bp", arg: 3, scope: !596, file: !3, line: 595, type: !151)
!603 = !DILocalVariable(name: "n", arg: 4, scope: !596, file: !3, line: 595, type: !154)
!604 = !DILocation(line: 0, scope: !596)
!605 = !DILocation(line: 597, column: 3, scope: !596)
!606 = !DILocation(line: 598, column: 1, scope: !596)
!607 = distinct !DISubprogram(name: "mpn_sqr", scope: !3, file: !3, line: 601, type: !149, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !608)
!608 = !{!609, !610, !611}
!609 = !DILocalVariable(name: "rp", arg: 1, scope: !607, file: !3, line: 601, type: !16)
!610 = !DILocalVariable(name: "ap", arg: 2, scope: !607, file: !3, line: 601, type: !151)
!611 = !DILocalVariable(name: "n", arg: 3, scope: !607, file: !3, line: 601, type: !154)
!612 = !DILocation(line: 0, scope: !607)
!613 = !DILocation(line: 603, column: 3, scope: !607)
!614 = !DILocation(line: 604, column: 1, scope: !607)
!615 = distinct !DISubprogram(name: "mpn_lshift", scope: !3, file: !3, line: 607, type: !616, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !618)
!616 = !DISubroutineType(types: !617)
!617 = !{!12, !16, !151, !154, !6}
!618 = !{!619, !620, !621, !622, !623, !624, !625, !626, !627}
!619 = !DILocalVariable(name: "rp", arg: 1, scope: !615, file: !3, line: 607, type: !16)
!620 = !DILocalVariable(name: "up", arg: 2, scope: !615, file: !3, line: 607, type: !151)
!621 = !DILocalVariable(name: "n", arg: 3, scope: !615, file: !3, line: 607, type: !154)
!622 = !DILocalVariable(name: "cnt", arg: 4, scope: !615, file: !3, line: 607, type: !6)
!623 = !DILocalVariable(name: "high_limb", scope: !615, file: !3, line: 609, type: !12)
!624 = !DILocalVariable(name: "low_limb", scope: !615, file: !3, line: 609, type: !12)
!625 = !DILocalVariable(name: "tnc", scope: !615, file: !3, line: 610, type: !6)
!626 = !DILocalVariable(name: "i", scope: !615, file: !3, line: 611, type: !154)
!627 = !DILocalVariable(name: "retval", scope: !615, file: !3, line: 612, type: !12)
!628 = !DILocation(line: 0, scope: !615)
!629 = !DILocation(line: 614, column: 3, scope: !630)
!630 = distinct !DILexicalBlock(scope: !631, file: !3, line: 614, column: 3)
!631 = distinct !DILexicalBlock(scope: !615, file: !3, line: 614, column: 3)
!632 = !DILocation(line: 614, column: 3, scope: !631)
!633 = !DILocation(line: 615, column: 3, scope: !634)
!634 = distinct !DILexicalBlock(scope: !635, file: !3, line: 615, column: 3)
!635 = distinct !DILexicalBlock(scope: !615, file: !3, line: 615, column: 3)
!636 = !DILocation(line: 615, column: 3, scope: !635)
!637 = !DILocation(line: 616, column: 3, scope: !638)
!638 = distinct !DILexicalBlock(scope: !639, file: !3, line: 616, column: 3)
!639 = distinct !DILexicalBlock(scope: !615, file: !3, line: 616, column: 3)
!640 = !DILocation(line: 616, column: 3, scope: !639)
!641 = !DILocation(line: 618, column: 6, scope: !615)
!642 = !DILocation(line: 619, column: 6, scope: !615)
!643 = !DILocation(line: 621, column: 23, scope: !615)
!644 = !DILocation(line: 622, column: 15, scope: !615)
!645 = !DILocation(line: 622, column: 14, scope: !615)
!646 = !DILocation(line: 623, column: 21, scope: !615)
!647 = !DILocation(line: 624, column: 25, scope: !615)
!648 = !DILocation(line: 626, column: 8, scope: !649)
!649 = distinct !DILexicalBlock(scope: !615, file: !3, line: 626, column: 3)
!650 = !DILocation(line: 0, scope: !649)
!651 = !DILocation(line: 626, column: 15, scope: !652)
!652 = distinct !DILexicalBlock(scope: !649, file: !3, line: 626, column: 3)
!653 = !DILocation(line: 626, column: 19, scope: !652)
!654 = !DILocation(line: 626, column: 3, scope: !649)
!655 = !DILocation(line: 628, column: 19, scope: !656)
!656 = distinct !DILexicalBlock(scope: !652, file: !3, line: 627, column: 5)
!657 = !DILocation(line: 628, column: 18, scope: !656)
!658 = !DILocation(line: 629, column: 37, scope: !656)
!659 = !DILocation(line: 629, column: 25, scope: !656)
!660 = !DILocation(line: 629, column: 8, scope: !656)
!661 = !DILocation(line: 629, column: 13, scope: !656)
!662 = !DILocation(line: 626, column: 3, scope: !652)
!663 = distinct !{!663, !654, !664}
!664 = !DILocation(line: 631, column: 5, scope: !649)
!665 = !DILocation(line: 632, column: 4, scope: !615)
!666 = !DILocation(line: 632, column: 9, scope: !615)
!667 = !DILocation(line: 634, column: 3, scope: !615)
!668 = distinct !DISubprogram(name: "mpn_rshift", scope: !3, file: !3, line: 638, type: !616, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !669)
!669 = !{!670, !671, !672, !673, !674, !675, !676, !677, !678}
!670 = !DILocalVariable(name: "rp", arg: 1, scope: !668, file: !3, line: 638, type: !16)
!671 = !DILocalVariable(name: "up", arg: 2, scope: !668, file: !3, line: 638, type: !151)
!672 = !DILocalVariable(name: "n", arg: 3, scope: !668, file: !3, line: 638, type: !154)
!673 = !DILocalVariable(name: "cnt", arg: 4, scope: !668, file: !3, line: 638, type: !6)
!674 = !DILocalVariable(name: "high_limb", scope: !668, file: !3, line: 640, type: !12)
!675 = !DILocalVariable(name: "low_limb", scope: !668, file: !3, line: 640, type: !12)
!676 = !DILocalVariable(name: "tnc", scope: !668, file: !3, line: 641, type: !6)
!677 = !DILocalVariable(name: "i", scope: !668, file: !3, line: 642, type: !154)
!678 = !DILocalVariable(name: "retval", scope: !668, file: !3, line: 643, type: !12)
!679 = !DILocation(line: 0, scope: !668)
!680 = !DILocation(line: 645, column: 3, scope: !681)
!681 = distinct !DILexicalBlock(scope: !682, file: !3, line: 645, column: 3)
!682 = distinct !DILexicalBlock(scope: !668, file: !3, line: 645, column: 3)
!683 = !DILocation(line: 645, column: 3, scope: !682)
!684 = !DILocation(line: 646, column: 3, scope: !685)
!685 = distinct !DILexicalBlock(scope: !686, file: !3, line: 646, column: 3)
!686 = distinct !DILexicalBlock(scope: !668, file: !3, line: 646, column: 3)
!687 = !DILocation(line: 646, column: 3, scope: !686)
!688 = !DILocation(line: 647, column: 3, scope: !689)
!689 = distinct !DILexicalBlock(scope: !690, file: !3, line: 647, column: 3)
!690 = distinct !DILexicalBlock(scope: !668, file: !3, line: 647, column: 3)
!691 = !DILocation(line: 647, column: 3, scope: !690)
!692 = !DILocation(line: 649, column: 23, scope: !668)
!693 = !DILocation(line: 650, column: 15, scope: !668)
!694 = !DILocation(line: 651, column: 23, scope: !668)
!695 = !DILocation(line: 652, column: 24, scope: !668)
!696 = !DILocation(line: 654, column: 8, scope: !697)
!697 = distinct !DILexicalBlock(scope: !668, file: !3, line: 654, column: 3)
!698 = !DILocation(line: 0, scope: !697)
!699 = !DILocation(line: 654, column: 15, scope: !700)
!700 = distinct !DILexicalBlock(scope: !697, file: !3, line: 654, column: 3)
!701 = !DILocation(line: 654, column: 19, scope: !700)
!702 = !DILocation(line: 654, column: 3, scope: !697)
!703 = !DILocation(line: 656, column: 19, scope: !704)
!704 = distinct !DILexicalBlock(scope: !700, file: !3, line: 655, column: 5)
!705 = !DILocation(line: 657, column: 37, scope: !704)
!706 = !DILocation(line: 657, column: 24, scope: !704)
!707 = !DILocation(line: 657, column: 10, scope: !704)
!708 = !DILocation(line: 657, column: 13, scope: !704)
!709 = !DILocation(line: 654, column: 3, scope: !700)
!710 = distinct !{!710, !702, !711}
!711 = !DILocation(line: 659, column: 5, scope: !697)
!712 = !DILocation(line: 660, column: 7, scope: !668)
!713 = !DILocation(line: 662, column: 3, scope: !668)
!714 = distinct !DISubprogram(name: "mpn_scan1", scope: !3, file: !3, line: 686, type: !715, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !717)
!715 = !DISubroutineType(types: !716)
!716 = !{!20, !151, !20}
!717 = !{!718, !719, !720}
!718 = !DILocalVariable(name: "ptr", arg: 1, scope: !714, file: !3, line: 686, type: !151)
!719 = !DILocalVariable(name: "bit", arg: 2, scope: !714, file: !3, line: 686, type: !20)
!720 = !DILocalVariable(name: "i", scope: !714, file: !3, line: 688, type: !154)
!721 = !DILocation(line: 0, scope: !714)
!722 = !DILocation(line: 689, column: 11, scope: !714)
!723 = !DILocation(line: 691, column: 28, scope: !714)
!724 = !DILocation(line: 691, column: 59, scope: !714)
!725 = !DILocation(line: 691, column: 51, scope: !714)
!726 = !DILocation(line: 691, column: 35, scope: !714)
!727 = !DILocation(line: 691, column: 10, scope: !714)
!728 = !DILocation(line: 691, column: 3, scope: !714)
!729 = distinct !DISubprogram(name: "mpn_common_scan", scope: !3, file: !3, line: 666, type: !730, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !732)
!730 = !DISubroutineType(types: !731)
!731 = !{!20, !12, !154, !151, !154, !12}
!732 = !{!733, !734, !735, !736, !737, !738, !739, !741, !742, !744}
!733 = !DILocalVariable(name: "limb", arg: 1, scope: !729, file: !3, line: 666, type: !12)
!734 = !DILocalVariable(name: "i", arg: 2, scope: !729, file: !3, line: 666, type: !154)
!735 = !DILocalVariable(name: "up", arg: 3, scope: !729, file: !3, line: 666, type: !151)
!736 = !DILocalVariable(name: "un", arg: 4, scope: !729, file: !3, line: 666, type: !154)
!737 = !DILocalVariable(name: "ux", arg: 5, scope: !729, file: !3, line: 667, type: !12)
!738 = !DILocalVariable(name: "cnt", scope: !729, file: !3, line: 669, type: !6)
!739 = !DILocalVariable(name: "__ctz_x", scope: !740, file: !3, line: 681, type: !12)
!740 = distinct !DILexicalBlock(scope: !729, file: !3, line: 681, column: 3)
!741 = !DILocalVariable(name: "__ctz_c", scope: !740, file: !3, line: 681, type: !6)
!742 = !DILocalVariable(name: "__clz_x", scope: !743, file: !3, line: 681, type: !12)
!743 = distinct !DILexicalBlock(scope: !740, file: !3, line: 681, column: 3)
!744 = !DILocalVariable(name: "__clz_c", scope: !743, file: !3, line: 681, type: !6)
!745 = !DILocation(line: 0, scope: !729)
!746 = !DILocation(line: 671, column: 3, scope: !747)
!747 = distinct !DILexicalBlock(scope: !748, file: !3, line: 671, column: 3)
!748 = distinct !DILexicalBlock(scope: !729, file: !3, line: 671, column: 3)
!749 = !DILocation(line: 672, column: 3, scope: !750)
!750 = distinct !DILexicalBlock(scope: !751, file: !3, line: 672, column: 3)
!751 = distinct !DILexicalBlock(scope: !729, file: !3, line: 672, column: 3)
!752 = !DILocation(line: 674, column: 3, scope: !729)
!753 = !DILocation(line: 674, column: 15, scope: !729)
!754 = !DILocation(line: 676, column: 8, scope: !755)
!755 = distinct !DILexicalBlock(scope: !729, file: !3, line: 675, column: 5)
!756 = !DILocation(line: 677, column: 13, scope: !757)
!757 = distinct !DILexicalBlock(scope: !755, file: !3, line: 677, column: 11)
!758 = !DILocation(line: 677, column: 11, scope: !755)
!759 = !DILocation(line: 678, column: 13, scope: !757)
!760 = !DILocation(line: 678, column: 10, scope: !757)
!761 = !DILocation(line: 679, column: 19, scope: !755)
!762 = !DILocation(line: 679, column: 17, scope: !755)
!763 = distinct !{!763, !752, !764}
!764 = !DILocation(line: 680, column: 5, scope: !729)
!765 = !DILocation(line: 0, scope: !740)
!766 = !DILocation(line: 681, column: 3, scope: !743)
!767 = !DILocation(line: 0, scope: !743)
!768 = !DILocation(line: 681, column: 3, scope: !769)
!769 = distinct !DILexicalBlock(scope: !743, file: !3, line: 681, column: 3)
!770 = !DILocation(line: 0, scope: !769)
!771 = !DILocation(line: 681, column: 3, scope: !772)
!772 = distinct !DILexicalBlock(scope: !769, file: !3, line: 681, column: 3)
!773 = !DILocation(line: 681, column: 3, scope: !774)
!774 = distinct !DILexicalBlock(scope: !743, file: !3, line: 681, column: 3)
!775 = distinct !{!775, !768, !768}
!776 = !DILocation(line: 681, column: 3, scope: !777)
!777 = distinct !DILexicalBlock(scope: !774, file: !3, line: 681, column: 3)
!778 = distinct !{!778, !773, !773}
!779 = !DILocation(line: 681, column: 3, scope: !740)
!780 = !DILocation(line: 682, column: 26, scope: !729)
!781 = !DILocation(line: 682, column: 44, scope: !729)
!782 = !DILocation(line: 682, column: 42, scope: !729)
!783 = !DILocation(line: 682, column: 3, scope: !729)
!784 = !DILocation(line: 683, column: 1, scope: !729)
!785 = distinct !DISubprogram(name: "mpn_scan0", scope: !3, file: !3, line: 696, type: !715, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !786)
!786 = !{!787, !788, !789}
!787 = !DILocalVariable(name: "ptr", arg: 1, scope: !785, file: !3, line: 696, type: !151)
!788 = !DILocalVariable(name: "bit", arg: 2, scope: !785, file: !3, line: 696, type: !20)
!789 = !DILocalVariable(name: "i", scope: !785, file: !3, line: 698, type: !154)
!790 = !DILocation(line: 0, scope: !785)
!791 = !DILocation(line: 699, column: 11, scope: !785)
!792 = !DILocation(line: 701, column: 28, scope: !785)
!793 = !DILocation(line: 701, column: 27, scope: !785)
!794 = !DILocation(line: 701, column: 59, scope: !785)
!795 = !DILocation(line: 701, column: 51, scope: !785)
!796 = !DILocation(line: 701, column: 35, scope: !785)
!797 = !DILocation(line: 701, column: 10, scope: !785)
!798 = !DILocation(line: 701, column: 3, scope: !785)
!799 = distinct !DISubprogram(name: "mpn_invert_3by2", scope: !3, file: !3, line: 708, type: !800, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !802)
!800 = !DISubroutineType(types: !801)
!801 = !{!12, !12, !12}
!802 = !{!803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !815, !816, !818, !819, !820, !821, !822, !823, !824, !825, !826}
!803 = !DILocalVariable(name: "u1", arg: 1, scope: !799, file: !3, line: 708, type: !12)
!804 = !DILocalVariable(name: "u0", arg: 2, scope: !799, file: !3, line: 708, type: !12)
!805 = !DILocalVariable(name: "r", scope: !799, file: !3, line: 710, type: !12)
!806 = !DILocalVariable(name: "p", scope: !799, file: !3, line: 710, type: !12)
!807 = !DILocalVariable(name: "m", scope: !799, file: !3, line: 710, type: !12)
!808 = !DILocalVariable(name: "ul", scope: !799, file: !3, line: 711, type: !6)
!809 = !DILocalVariable(name: "uh", scope: !799, file: !3, line: 711, type: !6)
!810 = !DILocalVariable(name: "ql", scope: !799, file: !3, line: 712, type: !6)
!811 = !DILocalVariable(name: "qh", scope: !799, file: !3, line: 712, type: !6)
!812 = !DILocalVariable(name: "th", scope: !813, file: !3, line: 761, type: !12)
!813 = distinct !DILexicalBlock(scope: !814, file: !3, line: 760, column: 5)
!814 = distinct !DILexicalBlock(scope: !799, file: !3, line: 759, column: 7)
!815 = !DILocalVariable(name: "tl", scope: !813, file: !3, line: 761, type: !12)
!816 = !DILocalVariable(name: "__x0", scope: !817, file: !3, line: 774, type: !12)
!817 = distinct !DILexicalBlock(scope: !813, file: !3, line: 774, column: 7)
!818 = !DILocalVariable(name: "__x1", scope: !817, file: !3, line: 774, type: !12)
!819 = !DILocalVariable(name: "__x2", scope: !817, file: !3, line: 774, type: !12)
!820 = !DILocalVariable(name: "__x3", scope: !817, file: !3, line: 774, type: !12)
!821 = !DILocalVariable(name: "__ul", scope: !817, file: !3, line: 774, type: !6)
!822 = !DILocalVariable(name: "__vl", scope: !817, file: !3, line: 774, type: !6)
!823 = !DILocalVariable(name: "__uh", scope: !817, file: !3, line: 774, type: !6)
!824 = !DILocalVariable(name: "__vh", scope: !817, file: !3, line: 774, type: !6)
!825 = !DILocalVariable(name: "__u", scope: !817, file: !3, line: 774, type: !12)
!826 = !DILocalVariable(name: "__v", scope: !817, file: !3, line: 774, type: !12)
!827 = !DILocation(line: 0, scope: !799)
!828 = !DILocation(line: 717, column: 3, scope: !829)
!829 = distinct !DILexicalBlock(scope: !830, file: !3, line: 717, column: 3)
!830 = distinct !DILexicalBlock(scope: !799, file: !3, line: 717, column: 3)
!831 = !DILocation(line: 717, column: 3, scope: !830)
!832 = !DILocation(line: 720, column: 11, scope: !799)
!833 = !DILocation(line: 722, column: 8, scope: !799)
!834 = !DILocation(line: 722, column: 12, scope: !799)
!835 = !DILocation(line: 723, column: 9, scope: !799)
!836 = !DILocation(line: 723, column: 15, scope: !799)
!837 = !DILocation(line: 723, column: 30, scope: !799)
!838 = !DILocation(line: 723, column: 13, scope: !799)
!839 = !DILocation(line: 723, column: 36, scope: !799)
!840 = !DILocation(line: 723, column: 60, scope: !799)
!841 = !DILocation(line: 725, column: 24, scope: !799)
!842 = !DILocation(line: 725, column: 22, scope: !799)
!843 = !DILocation(line: 727, column: 9, scope: !844)
!844 = distinct !DILexicalBlock(scope: !799, file: !3, line: 727, column: 7)
!845 = !DILocation(line: 727, column: 7, scope: !799)
!846 = !DILocation(line: 729, column: 9, scope: !847)
!847 = distinct !DILexicalBlock(scope: !844, file: !3, line: 728, column: 5)
!848 = !DILocation(line: 730, column: 9, scope: !847)
!849 = !DILocation(line: 731, column: 13, scope: !850)
!850 = distinct !DILexicalBlock(scope: !847, file: !3, line: 731, column: 11)
!851 = !DILocation(line: 731, column: 11, scope: !847)
!852 = !DILocation(line: 732, column: 8, scope: !853)
!853 = distinct !DILexicalBlock(scope: !850, file: !3, line: 732, column: 6)
!854 = !DILocation(line: 732, column: 6, scope: !850)
!855 = !DILocation(line: 738, column: 5, scope: !799)
!856 = !DILocation(line: 741, column: 10, scope: !799)
!857 = !DILocation(line: 741, column: 36, scope: !799)
!858 = !DILocation(line: 741, column: 34, scope: !799)
!859 = !DILocation(line: 741, column: 39, scope: !799)
!860 = !DILocation(line: 742, column: 11, scope: !799)
!861 = !DILocation(line: 742, column: 8, scope: !799)
!862 = !DILocation(line: 745, column: 10, scope: !799)
!863 = !DILocation(line: 745, column: 34, scope: !799)
!864 = !DILocation(line: 745, column: 53, scope: !799)
!865 = !DILocation(line: 745, column: 56, scope: !799)
!866 = !DILocation(line: 745, column: 51, scope: !799)
!867 = !DILocation(line: 747, column: 15, scope: !868)
!868 = distinct !DILexicalBlock(scope: !799, file: !3, line: 747, column: 7)
!869 = !DILocation(line: 747, column: 9, scope: !868)
!870 = !DILocation(line: 747, column: 7, scope: !799)
!871 = !DILocation(line: 752, column: 23, scope: !799)
!872 = !DILocation(line: 752, column: 49, scope: !799)
!873 = !DILocation(line: 752, column: 47, scope: !799)
!874 = !DILocation(line: 753, column: 9, scope: !875)
!875 = distinct !DILexicalBlock(scope: !799, file: !3, line: 753, column: 7)
!876 = !DILocation(line: 753, column: 7, scope: !799)
!877 = !DILocation(line: 759, column: 10, scope: !814)
!878 = !DILocation(line: 759, column: 7, scope: !799)
!879 = !DILocation(line: 762, column: 11, scope: !813)
!880 = !DILocation(line: 763, column: 9, scope: !813)
!881 = !DILocation(line: 764, column: 13, scope: !882)
!882 = distinct !DILexicalBlock(scope: !813, file: !3, line: 764, column: 11)
!883 = !DILocation(line: 764, column: 11, scope: !813)
!884 = !DILocation(line: 767, column: 10, scope: !885)
!885 = distinct !DILexicalBlock(scope: !886, file: !3, line: 767, column: 8)
!886 = distinct !DILexicalBlock(scope: !882, file: !3, line: 765, column: 2)
!887 = !DILocation(line: 767, column: 8, scope: !886)
!888 = !DILocation(line: 772, column: 6, scope: !886)
!889 = !DILocation(line: 773, column: 2, scope: !886)
!890 = !DILocation(line: 0, scope: !813)
!891 = !DILocation(line: 0, scope: !817)
!892 = !DILocation(line: 774, column: 7, scope: !817)
!893 = !DILocation(line: 774, column: 7, scope: !894)
!894 = distinct !DILexicalBlock(scope: !817, file: !3, line: 774, column: 7)
!895 = !DILocation(line: 775, column: 9, scope: !813)
!896 = !DILocation(line: 776, column: 13, scope: !897)
!897 = distinct !DILexicalBlock(scope: !813, file: !3, line: 776, column: 11)
!898 = !DILocation(line: 776, column: 11, scope: !813)
!899 = !DILocation(line: 779, column: 13, scope: !900)
!900 = distinct !DILexicalBlock(scope: !897, file: !3, line: 777, column: 2)
!901 = !DILocation(line: 779, column: 25, scope: !900)
!902 = !DILocation(line: 779, column: 38, scope: !900)
!903 = !DILocation(line: 779, column: 32, scope: !900)
!904 = !DILocation(line: 779, column: 19, scope: !900)
!905 = !DILocation(line: 779, column: 9, scope: !900)
!906 = !DILocation(line: 779, column: 6, scope: !900)
!907 = !DILocation(line: 780, column: 2, scope: !900)
!908 = !DILocation(line: 783, column: 3, scope: !799)
!909 = distinct !DISubprogram(name: "mpn_get_str", scope: !3, file: !3, line: 1254, type: !910, scopeLine: 1255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !912)
!910 = !DISubroutineType(types: !911)
!911 = !{!35, !21, !19, !16, !154}
!912 = !{!913, !914, !915, !916, !917, !918}
!913 = !DILocalVariable(name: "sp", arg: 1, scope: !909, file: !3, line: 1254, type: !21)
!914 = !DILocalVariable(name: "base", arg: 2, scope: !909, file: !3, line: 1254, type: !19)
!915 = !DILocalVariable(name: "up", arg: 3, scope: !909, file: !3, line: 1254, type: !16)
!916 = !DILocalVariable(name: "un", arg: 4, scope: !909, file: !3, line: 1254, type: !154)
!917 = !DILocalVariable(name: "bits", scope: !909, file: !3, line: 1256, type: !6)
!918 = !DILocalVariable(name: "info", scope: !919, file: !3, line: 1266, type: !921)
!919 = distinct !DILexicalBlock(scope: !920, file: !3, line: 1265, column: 5)
!920 = distinct !DILexicalBlock(scope: !909, file: !3, line: 1262, column: 7)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mpn_base_info", file: !3, line: 1124, size: 128, elements: !922)
!922 = !{!923, !924}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !921, file: !3, line: 1128, baseType: !6, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !921, file: !3, line: 1129, baseType: !12, size: 64, offset: 64)
!925 = !DILocation(line: 0, scope: !909)
!926 = !DILocation(line: 1258, column: 3, scope: !927)
!927 = distinct !DILexicalBlock(scope: !928, file: !3, line: 1258, column: 3)
!928 = distinct !DILexicalBlock(scope: !909, file: !3, line: 1258, column: 3)
!929 = !DILocation(line: 1258, column: 3, scope: !928)
!930 = !DILocation(line: 1259, column: 3, scope: !931)
!931 = distinct !DILexicalBlock(scope: !932, file: !3, line: 1259, column: 3)
!932 = distinct !DILexicalBlock(scope: !909, file: !3, line: 1259, column: 3)
!933 = !DILocation(line: 1259, column: 3, scope: !932)
!934 = !DILocation(line: 1261, column: 10, scope: !909)
!935 = !DILocation(line: 1262, column: 7, scope: !920)
!936 = !DILocation(line: 1262, column: 7, scope: !909)
!937 = !DILocation(line: 1263, column: 12, scope: !920)
!938 = !DILocation(line: 1263, column: 5, scope: !920)
!939 = !DILocation(line: 1266, column: 7, scope: !919)
!940 = !DILocation(line: 1268, column: 33, scope: !919)
!941 = !DILocation(line: 0, scope: !919)
!942 = !DILocation(line: 1268, column: 7, scope: !919)
!943 = !DILocation(line: 1269, column: 14, scope: !919)
!944 = !DILocation(line: 1270, column: 5, scope: !920)
!945 = !DILocation(line: 0, scope: !920)
!946 = !DILocation(line: 1271, column: 1, scope: !909)
!947 = distinct !DISubprogram(name: "mpn_base_power_of_two_p", scope: !3, file: !3, line: 1108, type: !948, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !950)
!948 = !DISubroutineType(types: !949)
!949 = !{!6, !6}
!950 = !{!951}
!951 = !DILocalVariable(name: "b", arg: 1, scope: !947, file: !3, line: 1108, type: !6)
!952 = !DILocation(line: 0, scope: !947)
!953 = !DILocation(line: 1110, column: 3, scope: !947)
!954 = !DILocation(line: 1113, column: 13, scope: !955)
!955 = distinct !DILexicalBlock(scope: !947, file: !3, line: 1111, column: 5)
!956 = !DILocation(line: 1114, column: 13, scope: !955)
!957 = !DILocation(line: 1115, column: 14, scope: !955)
!958 = !DILocation(line: 1116, column: 14, scope: !955)
!959 = !DILocation(line: 1117, column: 14, scope: !955)
!960 = !DILocation(line: 1118, column: 15, scope: !955)
!961 = !DILocation(line: 1119, column: 15, scope: !955)
!962 = !DILocation(line: 1120, column: 14, scope: !955)
!963 = !DILocation(line: 0, scope: !955)
!964 = !DILocation(line: 1122, column: 1, scope: !947)
!965 = distinct !DISubprogram(name: "mpn_get_str_bits", scope: !3, file: !3, line: 1158, type: !966, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !968)
!966 = !DISubroutineType(types: !967)
!967 = !{!35, !21, !6, !151, !154}
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976, !977, !978}
!969 = !DILocalVariable(name: "sp", arg: 1, scope: !965, file: !3, line: 1158, type: !21)
!970 = !DILocalVariable(name: "bits", arg: 2, scope: !965, file: !3, line: 1158, type: !6)
!971 = !DILocalVariable(name: "up", arg: 3, scope: !965, file: !3, line: 1158, type: !151)
!972 = !DILocalVariable(name: "un", arg: 4, scope: !965, file: !3, line: 1158, type: !154)
!973 = !DILocalVariable(name: "mask", scope: !965, file: !3, line: 1160, type: !22)
!974 = !DILocalVariable(name: "sn", scope: !965, file: !3, line: 1161, type: !35)
!975 = !DILocalVariable(name: "j", scope: !965, file: !3, line: 1161, type: !35)
!976 = !DILocalVariable(name: "i", scope: !965, file: !3, line: 1162, type: !154)
!977 = !DILocalVariable(name: "shift", scope: !965, file: !3, line: 1163, type: !19)
!978 = !DILocalVariable(name: "digit", scope: !979, file: !3, line: 1172, type: !22)
!979 = distinct !DILexicalBlock(scope: !980, file: !3, line: 1171, column: 5)
!980 = distinct !DILexicalBlock(scope: !981, file: !3, line: 1170, column: 3)
!981 = distinct !DILexicalBlock(scope: !965, file: !3, line: 1170, column: 3)
!982 = !DILocation(line: 0, scope: !965)
!983 = !DILocation(line: 1165, column: 18, scope: !965)
!984 = !DILocation(line: 1165, column: 66, scope: !965)
!985 = !DILocation(line: 1165, column: 61, scope: !965)
!986 = !DILocation(line: 1165, column: 36, scope: !965)
!987 = !DILocation(line: 1165, column: 34, scope: !965)
!988 = !DILocation(line: 1166, column: 4, scope: !965)
!989 = !DILocation(line: 1166, column: 2, scope: !965)
!990 = !DILocation(line: 1166, column: 9, scope: !965)
!991 = !DILocation(line: 1166, column: 14, scope: !965)
!992 = !DILocation(line: 1168, column: 23, scope: !965)
!993 = !DILocation(line: 0, scope: !979)
!994 = !DILocation(line: 1170, column: 8, scope: !981)
!995 = !DILocation(line: 0, scope: !981)
!996 = !DILocation(line: 1170, column: 35, scope: !980)
!997 = !DILocation(line: 1170, column: 38, scope: !980)
!998 = !DILocation(line: 1170, column: 3, scope: !981)
!999 = !DILocation(line: 1172, column: 29, scope: !979)
!1000 = !DILocation(line: 1172, column: 35, scope: !979)
!1001 = !DILocation(line: 1174, column: 13, scope: !979)
!1002 = !DILocation(line: 1176, column: 17, scope: !1003)
!1003 = distinct !DILexicalBlock(scope: !979, file: !3, line: 1176, column: 11)
!1004 = !DILocation(line: 1176, column: 34, scope: !1003)
!1005 = !DILocation(line: 1176, column: 37, scope: !1003)
!1006 = !DILocation(line: 1176, column: 41, scope: !1003)
!1007 = !DILocation(line: 1176, column: 11, scope: !979)
!1008 = !DILocation(line: 1178, column: 10, scope: !1009)
!1009 = distinct !DILexicalBlock(scope: !1003, file: !3, line: 1177, column: 2)
!1010 = !DILocation(line: 1179, column: 13, scope: !1009)
!1011 = !DILocation(line: 1179, column: 28, scope: !1009)
!1012 = !DILocation(line: 1179, column: 19, scope: !1009)
!1013 = !DILocation(line: 1179, column: 10, scope: !1009)
!1014 = !DILocation(line: 1180, column: 2, scope: !1009)
!1015 = !DILocation(line: 1181, column: 15, scope: !979)
!1016 = !DILocation(line: 1181, column: 7, scope: !979)
!1017 = !DILocation(line: 1181, column: 13, scope: !979)
!1018 = !{!75, !75, i64 0}
!1019 = !DILocation(line: 1170, column: 3, scope: !980)
!1020 = distinct !{!1020, !998, !1021}
!1021 = !DILocation(line: 1182, column: 5, scope: !981)
!1022 = !DILocation(line: 1183, column: 3, scope: !965)
!1023 = distinct !DISubprogram(name: "mpn_get_base_info", scope: !3, file: !3, line: 1133, type: !1024, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1027)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{null, !1026, !12}
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!1027 = !{!1028, !1029, !1030, !1031, !1032}
!1028 = !DILocalVariable(name: "info", arg: 1, scope: !1023, file: !3, line: 1133, type: !1026)
!1029 = !DILocalVariable(name: "b", arg: 2, scope: !1023, file: !3, line: 1133, type: !12)
!1030 = !DILocalVariable(name: "m", scope: !1023, file: !3, line: 1135, type: !12)
!1031 = !DILocalVariable(name: "p", scope: !1023, file: !3, line: 1136, type: !12)
!1032 = !DILocalVariable(name: "exp", scope: !1023, file: !3, line: 1137, type: !6)
!1033 = !DILocation(line: 0, scope: !1023)
!1034 = !DILocation(line: 1139, column: 20, scope: !1023)
!1035 = !DILocation(line: 1140, column: 8, scope: !1036)
!1036 = distinct !DILexicalBlock(scope: !1023, file: !3, line: 1140, column: 3)
!1037 = !DILocation(line: 0, scope: !1036)
!1038 = !DILocation(line: 1140, column: 26, scope: !1039)
!1039 = distinct !DILexicalBlock(scope: !1036, file: !3, line: 1140, column: 3)
!1040 = !DILocation(line: 1140, column: 3, scope: !1036)
!1041 = !DILocation(line: 1141, column: 7, scope: !1039)
!1042 = !DILocation(line: 1140, column: 35, scope: !1039)
!1043 = !DILocation(line: 1140, column: 3, scope: !1039)
!1044 = distinct !{!1044, !1040, !1045}
!1045 = !DILocation(line: 1141, column: 10, scope: !1036)
!1046 = !DILocation(line: 1143, column: 9, scope: !1023)
!1047 = !DILocation(line: 1143, column: 13, scope: !1023)
!1048 = !{!1049, !1050, i64 0}
!1049 = !{!"mpn_base_info", !1050, i64 0, !169, i64 8}
!1050 = !{!"int", !75, i64 0}
!1051 = !DILocation(line: 1144, column: 9, scope: !1023)
!1052 = !DILocation(line: 1144, column: 12, scope: !1023)
!1053 = !{!1049, !169, i64 8}
!1054 = !DILocation(line: 1145, column: 1, scope: !1023)
!1055 = distinct !DISubprogram(name: "mpn_get_str_other", scope: !3, file: !3, line: 1210, type: !1056, scopeLine: 1213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1060)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!35, !21, !19, !1058, !16, !154}
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !921)
!1060 = !{!1061, !1062, !1063, !1064, !1065, !1066, !1073, !1074, !1075, !1078, !1080, !1081}
!1061 = !DILocalVariable(name: "sp", arg: 1, scope: !1055, file: !3, line: 1210, type: !21)
!1062 = !DILocalVariable(name: "base", arg: 2, scope: !1055, file: !3, line: 1211, type: !19)
!1063 = !DILocalVariable(name: "info", arg: 3, scope: !1055, file: !3, line: 1211, type: !1058)
!1064 = !DILocalVariable(name: "up", arg: 4, scope: !1055, file: !3, line: 1212, type: !16)
!1065 = !DILocalVariable(name: "un", arg: 5, scope: !1055, file: !3, line: 1212, type: !154)
!1066 = !DILocalVariable(name: "binv", scope: !1055, file: !3, line: 1214, type: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gmp_div_inverse", file: !3, line: 786, size: 256, elements: !1068)
!1068 = !{!1069, !1070, !1071, !1072}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1067, file: !3, line: 789, baseType: !6, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "d1", scope: !1067, file: !3, line: 791, baseType: !12, size: 64, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "d0", scope: !1067, file: !3, line: 791, baseType: !12, size: 64, offset: 128)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !1067, file: !3, line: 793, baseType: !12, size: 64, offset: 192)
!1073 = !DILocalVariable(name: "sn", scope: !1055, file: !3, line: 1215, type: !35)
!1074 = !DILocalVariable(name: "i", scope: !1055, file: !3, line: 1216, type: !35)
!1075 = !DILocalVariable(name: "bbinv", scope: !1076, file: !3, line: 1224, type: !1067)
!1076 = distinct !DILexicalBlock(scope: !1077, file: !3, line: 1223, column: 5)
!1077 = distinct !DILexicalBlock(scope: !1055, file: !3, line: 1222, column: 7)
!1078 = !DILocalVariable(name: "w", scope: !1079, file: !3, line: 1229, type: !12)
!1079 = distinct !DILexicalBlock(scope: !1076, file: !3, line: 1228, column: 2)
!1080 = !DILocalVariable(name: "done", scope: !1079, file: !3, line: 1230, type: !35)
!1081 = !DILocalVariable(name: "t", scope: !1082, file: !3, line: 1245, type: !22)
!1082 = distinct !DILexicalBlock(scope: !1083, file: !3, line: 1244, column: 5)
!1083 = distinct !DILexicalBlock(scope: !1084, file: !3, line: 1243, column: 3)
!1084 = distinct !DILexicalBlock(scope: !1055, file: !3, line: 1243, column: 3)
!1085 = !DILocation(line: 0, scope: !1055)
!1086 = !DILocation(line: 1214, column: 3, scope: !1055)
!1087 = !DILocation(line: 1218, column: 31, scope: !1055)
!1088 = !DILocation(line: 1218, column: 3, scope: !1055)
!1089 = !DILocation(line: 1222, column: 10, scope: !1077)
!1090 = !DILocation(line: 1222, column: 7, scope: !1055)
!1091 = !DILocation(line: 1224, column: 7, scope: !1076)
!1092 = !DILocation(line: 1225, column: 42, scope: !1076)
!1093 = !DILocation(line: 0, scope: !1076)
!1094 = !DILocation(line: 1225, column: 7, scope: !1076)
!1095 = !DILocation(line: 0, scope: !1096)
!1096 = distinct !DILexicalBlock(scope: !1097, file: !3, line: 1235, column: 4)
!1097 = distinct !DILexicalBlock(scope: !1079, file: !3, line: 1235, column: 4)
!1098 = !DILocation(line: 1227, column: 7, scope: !1076)
!1099 = !DILocation(line: 1231, column: 8, scope: !1079)
!1100 = !DILocation(line: 0, scope: !1079)
!1101 = !DILocation(line: 1232, column: 16, scope: !1079)
!1102 = !DILocation(line: 1232, column: 11, scope: !1079)
!1103 = !DILocation(line: 1232, column: 20, scope: !1079)
!1104 = !DILocation(line: 1233, column: 32, scope: !1079)
!1105 = !DILocation(line: 1233, column: 11, scope: !1079)
!1106 = !DILocation(line: 1235, column: 12, scope: !1097)
!1107 = !DILocation(line: 1235, column: 9, scope: !1097)
!1108 = !DILocation(line: 0, scope: !1097)
!1109 = !DILocation(line: 1235, column: 34, scope: !1096)
!1110 = !DILocation(line: 1235, column: 28, scope: !1096)
!1111 = !DILocation(line: 1235, column: 26, scope: !1096)
!1112 = !DILocation(line: 1235, column: 4, scope: !1097)
!1113 = !DILocation(line: 1236, column: 11, scope: !1096)
!1114 = !DILocation(line: 1236, column: 6, scope: !1096)
!1115 = !DILocation(line: 1236, column: 15, scope: !1096)
!1116 = !DILocation(line: 1235, column: 43, scope: !1096)
!1117 = !DILocation(line: 1235, column: 4, scope: !1096)
!1118 = distinct !{!1118, !1112, !1119}
!1119 = !DILocation(line: 1236, column: 17, scope: !1097)
!1120 = !DILocation(line: 1232, column: 10, scope: !1079)
!1121 = !DILocation(line: 1232, column: 7, scope: !1079)
!1122 = !DILocation(line: 1238, column: 17, scope: !1076)
!1123 = !DILocation(line: 1237, column: 2, scope: !1079)
!1124 = distinct !{!1124, !1098, !1125}
!1125 = !DILocation(line: 1238, column: 20, scope: !1076)
!1126 = !DILocation(line: 1239, column: 5, scope: !1077)
!1127 = !DILocation(line: 1239, column: 5, scope: !1076)
!1128 = !DILocation(line: 1240, column: 30, scope: !1055)
!1129 = !DILocation(line: 1240, column: 36, scope: !1055)
!1130 = !DILocation(line: 1240, column: 9, scope: !1055)
!1131 = !DILocation(line: 1240, column: 6, scope: !1055)
!1132 = !DILocation(line: 1243, column: 8, scope: !1084)
!1133 = !DILocation(line: 0, scope: !1084)
!1134 = !DILocation(line: 1243, column: 16, scope: !1083)
!1135 = !DILocation(line: 1243, column: 19, scope: !1083)
!1136 = !DILocation(line: 1243, column: 23, scope: !1083)
!1137 = !DILocation(line: 1243, column: 3, scope: !1084)
!1138 = !DILocation(line: 1245, column: 25, scope: !1082)
!1139 = !DILocation(line: 0, scope: !1082)
!1140 = !DILocation(line: 1246, column: 25, scope: !1082)
!1141 = !DILocation(line: 1246, column: 15, scope: !1082)
!1142 = !DILocation(line: 1246, column: 13, scope: !1082)
!1143 = !DILocation(line: 1247, column: 22, scope: !1082)
!1144 = !DILocation(line: 1243, column: 30, scope: !1083)
!1145 = !DILocation(line: 1243, column: 3, scope: !1083)
!1146 = distinct !{!1146, !1137, !1147}
!1147 = !DILocation(line: 1248, column: 5, scope: !1084)
!1148 = !DILocation(line: 1251, column: 1, scope: !1055)
!1149 = !DILocation(line: 1250, column: 3, scope: !1055)
!1150 = distinct !DISubprogram(name: "mpn_set_str", scope: !3, file: !3, line: 1341, type: !1151, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1153)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!154, !16, !26, !35, !19}
!1153 = !{!1154, !1155, !1156, !1157, !1158, !1159}
!1154 = !DILocalVariable(name: "rp", arg: 1, scope: !1150, file: !3, line: 1341, type: !16)
!1155 = !DILocalVariable(name: "sp", arg: 2, scope: !1150, file: !3, line: 1341, type: !26)
!1156 = !DILocalVariable(name: "sn", arg: 3, scope: !1150, file: !3, line: 1341, type: !35)
!1157 = !DILocalVariable(name: "base", arg: 4, scope: !1150, file: !3, line: 1341, type: !19)
!1158 = !DILocalVariable(name: "bits", scope: !1150, file: !3, line: 1343, type: !6)
!1159 = !DILocalVariable(name: "info", scope: !1160, file: !3, line: 1353, type: !921)
!1160 = distinct !DILexicalBlock(scope: !1161, file: !3, line: 1352, column: 5)
!1161 = distinct !DILexicalBlock(scope: !1150, file: !3, line: 1349, column: 7)
!1162 = !DILocation(line: 0, scope: !1150)
!1163 = !DILocation(line: 1345, column: 10, scope: !1164)
!1164 = distinct !DILexicalBlock(scope: !1150, file: !3, line: 1345, column: 7)
!1165 = !DILocation(line: 1345, column: 7, scope: !1150)
!1166 = !DILocation(line: 1348, column: 10, scope: !1150)
!1167 = !DILocation(line: 1349, column: 7, scope: !1161)
!1168 = !DILocation(line: 1349, column: 7, scope: !1150)
!1169 = !DILocation(line: 1350, column: 12, scope: !1161)
!1170 = !DILocation(line: 1350, column: 5, scope: !1161)
!1171 = !DILocation(line: 1353, column: 7, scope: !1160)
!1172 = !DILocation(line: 1355, column: 33, scope: !1160)
!1173 = !DILocation(line: 0, scope: !1160)
!1174 = !DILocation(line: 1355, column: 7, scope: !1160)
!1175 = !DILocation(line: 1356, column: 14, scope: !1160)
!1176 = !DILocation(line: 1357, column: 5, scope: !1161)
!1177 = !DILocation(line: 1358, column: 1, scope: !1150)
!1178 = distinct !DISubprogram(name: "mpn_set_str_bits", scope: !3, file: !3, line: 1274, type: !1179, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1181)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!154, !16, !26, !35, !6}
!1181 = !{!1182, !1183, !1184, !1185, !1186, !1187, !1188}
!1182 = !DILocalVariable(name: "rp", arg: 1, scope: !1178, file: !3, line: 1274, type: !16)
!1183 = !DILocalVariable(name: "sp", arg: 2, scope: !1178, file: !3, line: 1274, type: !26)
!1184 = !DILocalVariable(name: "sn", arg: 3, scope: !1178, file: !3, line: 1274, type: !35)
!1185 = !DILocalVariable(name: "bits", arg: 4, scope: !1178, file: !3, line: 1275, type: !6)
!1186 = !DILocalVariable(name: "rn", scope: !1178, file: !3, line: 1277, type: !154)
!1187 = !DILocalVariable(name: "j", scope: !1178, file: !3, line: 1278, type: !35)
!1188 = !DILocalVariable(name: "shift", scope: !1178, file: !3, line: 1279, type: !6)
!1189 = !DILocation(line: 0, scope: !1178)
!1190 = !DILocation(line: 1281, column: 8, scope: !1191)
!1191 = distinct !DILexicalBlock(scope: !1178, file: !3, line: 1281, column: 3)
!1192 = !DILocation(line: 0, scope: !1191)
!1193 = !DILocation(line: 1281, column: 36, scope: !1194)
!1194 = distinct !DILexicalBlock(scope: !1191, file: !3, line: 1281, column: 3)
!1195 = !DILocation(line: 1281, column: 39, scope: !1194)
!1196 = !DILocation(line: 1281, column: 3, scope: !1191)
!1197 = !DILocation(line: 1283, column: 17, scope: !1198)
!1198 = distinct !DILexicalBlock(scope: !1199, file: !3, line: 1283, column: 11)
!1199 = distinct !DILexicalBlock(scope: !1194, file: !3, line: 1282, column: 5)
!1200 = !DILocation(line: 0, scope: !1198)
!1201 = !DILocation(line: 1283, column: 11, scope: !1199)
!1202 = !DILocation(line: 1285, column: 9, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1198, file: !3, line: 1284, column: 2)
!1204 = !DILocation(line: 1285, column: 4, scope: !1203)
!1205 = !DILocation(line: 1285, column: 13, scope: !1203)
!1206 = !DILocation(line: 1287, column: 2, scope: !1203)
!1207 = !DILocation(line: 1290, column: 34, scope: !1208)
!1208 = distinct !DILexicalBlock(scope: !1198, file: !3, line: 1289, column: 2)
!1209 = !DILocation(line: 1290, column: 9, scope: !1208)
!1210 = !DILocation(line: 1290, column: 4, scope: !1208)
!1211 = !DILocation(line: 1290, column: 13, scope: !1208)
!1212 = !DILocation(line: 1291, column: 10, scope: !1208)
!1213 = !DILocation(line: 1292, column: 14, scope: !1214)
!1214 = distinct !DILexicalBlock(scope: !1208, file: !3, line: 1292, column: 8)
!1215 = !DILocation(line: 1292, column: 8, scope: !1208)
!1216 = !DILocation(line: 1294, column: 14, scope: !1217)
!1217 = distinct !DILexicalBlock(scope: !1214, file: !3, line: 1293, column: 6)
!1218 = !DILocation(line: 1295, column: 18, scope: !1219)
!1219 = distinct !DILexicalBlock(scope: !1217, file: !3, line: 1295, column: 12)
!1220 = !DILocation(line: 1295, column: 12, scope: !1217)
!1221 = !DILocation(line: 1296, column: 26, scope: !1219)
!1222 = !DILocation(line: 1296, column: 14, scope: !1219)
!1223 = !DILocation(line: 1296, column: 41, scope: !1219)
!1224 = !DILocation(line: 1296, column: 32, scope: !1219)
!1225 = !DILocation(line: 1296, column: 8, scope: !1219)
!1226 = !DILocation(line: 1296, column: 3, scope: !1219)
!1227 = !DILocation(line: 1296, column: 12, scope: !1219)
!1228 = !DILocation(line: 1281, column: 3, scope: !1194)
!1229 = distinct !{!1229, !1196, !1230}
!1230 = !DILocation(line: 1299, column: 5, scope: !1191)
!1231 = !DILocation(line: 1300, column: 8, scope: !1178)
!1232 = !DILocation(line: 1301, column: 3, scope: !1178)
!1233 = distinct !DISubprogram(name: "mpn_set_str_other", scope: !3, file: !3, line: 1305, type: !1234, scopeLine: 1307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1236)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!154, !16, !26, !35, !12, !1058}
!1236 = !{!1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246}
!1237 = !DILocalVariable(name: "rp", arg: 1, scope: !1233, file: !3, line: 1305, type: !16)
!1238 = !DILocalVariable(name: "sp", arg: 2, scope: !1233, file: !3, line: 1305, type: !26)
!1239 = !DILocalVariable(name: "sn", arg: 3, scope: !1233, file: !3, line: 1305, type: !35)
!1240 = !DILocalVariable(name: "b", arg: 4, scope: !1233, file: !3, line: 1306, type: !12)
!1241 = !DILocalVariable(name: "info", arg: 5, scope: !1233, file: !3, line: 1306, type: !1058)
!1242 = !DILocalVariable(name: "rn", scope: !1233, file: !3, line: 1308, type: !154)
!1243 = !DILocalVariable(name: "w", scope: !1233, file: !3, line: 1309, type: !12)
!1244 = !DILocalVariable(name: "k", scope: !1233, file: !3, line: 1310, type: !6)
!1245 = !DILocalVariable(name: "j", scope: !1233, file: !3, line: 1311, type: !35)
!1246 = !DILocalVariable(name: "cy", scope: !1247, file: !3, line: 1324, type: !12)
!1247 = distinct !DILexicalBlock(scope: !1248, file: !3, line: 1323, column: 5)
!1248 = distinct !DILexicalBlock(scope: !1249, file: !3, line: 1322, column: 3)
!1249 = distinct !DILexicalBlock(scope: !1233, file: !3, line: 1322, column: 3)
!1250 = !DILocation(line: 0, scope: !1233)
!1251 = !DILocation(line: 1313, column: 15, scope: !1233)
!1252 = !DILocation(line: 1313, column: 28, scope: !1233)
!1253 = !DILocation(line: 1313, column: 22, scope: !1233)
!1254 = !DILocation(line: 1313, column: 20, scope: !1233)
!1255 = !DILocation(line: 1313, column: 7, scope: !1233)
!1256 = !DILocation(line: 1316, column: 7, scope: !1233)
!1257 = !DILocation(line: 1317, column: 3, scope: !1233)
!1258 = !DILocation(line: 1317, column: 10, scope: !1259)
!1259 = distinct !DILexicalBlock(scope: !1260, file: !3, line: 1317, column: 3)
!1260 = distinct !DILexicalBlock(scope: !1233, file: !3, line: 1317, column: 3)
!1261 = !DILocation(line: 1317, column: 14, scope: !1259)
!1262 = !DILocation(line: 1317, column: 3, scope: !1260)
!1263 = !DILocation(line: 1318, column: 11, scope: !1259)
!1264 = !DILocation(line: 1318, column: 21, scope: !1259)
!1265 = !DILocation(line: 1318, column: 17, scope: !1259)
!1266 = !DILocation(line: 1318, column: 15, scope: !1259)
!1267 = !DILocation(line: 1317, column: 3, scope: !1259)
!1268 = distinct !{!1268, !1262, !1269}
!1269 = !DILocation(line: 1318, column: 23, scope: !1260)
!1270 = !DILocation(line: 1320, column: 9, scope: !1233)
!1271 = !DILocation(line: 1322, column: 16, scope: !1249)
!1272 = !DILocation(line: 1322, column: 13, scope: !1249)
!1273 = !DILocation(line: 0, scope: !1247)
!1274 = !DILocation(line: 1322, column: 8, scope: !1249)
!1275 = !DILocation(line: 0, scope: !1249)
!1276 = !DILocation(line: 1322, column: 24, scope: !1248)
!1277 = !DILocation(line: 1322, column: 3, scope: !1249)
!1278 = !DILocation(line: 1326, column: 11, scope: !1247)
!1279 = !DILocation(line: 0, scope: !1280)
!1280 = distinct !DILexicalBlock(scope: !1281, file: !3, line: 1327, column: 7)
!1281 = distinct !DILexicalBlock(scope: !1247, file: !3, line: 1327, column: 7)
!1282 = !DILocation(line: 1327, column: 12, scope: !1281)
!1283 = !DILocation(line: 0, scope: !1281)
!1284 = !DILocation(line: 1327, column: 21, scope: !1280)
!1285 = !DILocation(line: 1327, column: 7, scope: !1281)
!1286 = !DILocation(line: 1328, column: 8, scope: !1280)
!1287 = !DILocation(line: 1328, column: 14, scope: !1280)
!1288 = !DILocation(line: 1328, column: 12, scope: !1280)
!1289 = !DILocation(line: 1327, column: 35, scope: !1280)
!1290 = !DILocation(line: 1327, column: 7, scope: !1280)
!1291 = distinct !{!1291, !1285, !1292}
!1292 = !DILocation(line: 1328, column: 20, scope: !1281)
!1293 = !DILocation(line: 1330, column: 41, scope: !1247)
!1294 = !DILocation(line: 1330, column: 12, scope: !1247)
!1295 = !DILocation(line: 1331, column: 13, scope: !1247)
!1296 = !DILocation(line: 1331, column: 10, scope: !1247)
!1297 = !DILocation(line: 1332, column: 14, scope: !1298)
!1298 = distinct !DILexicalBlock(scope: !1247, file: !3, line: 1332, column: 11)
!1299 = !DILocation(line: 1332, column: 11, scope: !1247)
!1300 = !DILocation(line: 1333, column: 7, scope: !1298)
!1301 = !DILocation(line: 1333, column: 2, scope: !1298)
!1302 = !DILocation(line: 1333, column: 11, scope: !1298)
!1303 = !DILocation(line: 1322, column: 3, scope: !1248)
!1304 = distinct !{!1304, !1277, !1305}
!1305 = !DILocation(line: 1334, column: 5, scope: !1249)
!1306 = !DILocation(line: 1335, column: 3, scope: !1307)
!1307 = distinct !DILexicalBlock(scope: !1308, file: !3, line: 1335, column: 3)
!1308 = distinct !DILexicalBlock(scope: !1233, file: !3, line: 1335, column: 3)
!1309 = !DILocation(line: 1335, column: 3, scope: !1308)
!1310 = !DILocation(line: 1337, column: 3, scope: !1233)
!1311 = distinct !DISubprogram(name: "mpz_init", scope: !3, file: !3, line: 1363, type: !1312, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1321)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{null, !1314}
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mpz_struct", file: !13, line: 71, baseType: !1316)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 63, size: 128, elements: !1317)
!1317 = !{!1318, !1319, !1320}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "_mp_alloc", scope: !1316, file: !13, line: 65, baseType: !19, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "_mp_size", scope: !1316, file: !13, line: 67, baseType: !19, size: 32, offset: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "_mp_d", scope: !1316, file: !13, line: 70, baseType: !17, size: 64, offset: 64)
!1321 = !{!1322}
!1322 = !DILocalVariable(name: "r", arg: 1, scope: !1311, file: !3, line: 1363, type: !1314)
!1323 = !DILocation(line: 0, scope: !1311)
!1324 = !DILocation(line: 1365, column: 6, scope: !1311)
!1325 = !DILocation(line: 1365, column: 16, scope: !1311)
!1326 = !{!1327, !1050, i64 0}
!1327 = !{!"", !1050, i64 0, !1050, i64 4, !74, i64 8}
!1328 = !DILocation(line: 1366, column: 6, scope: !1311)
!1329 = !DILocation(line: 1366, column: 15, scope: !1311)
!1330 = !{!1327, !1050, i64 4}
!1331 = !DILocation(line: 1367, column: 14, scope: !1311)
!1332 = !DILocation(line: 1367, column: 6, scope: !1311)
!1333 = !DILocation(line: 1367, column: 12, scope: !1311)
!1334 = !{!1327, !74, i64 8}
!1335 = !DILocation(line: 1368, column: 1, scope: !1311)
!1336 = distinct !DISubprogram(name: "gmp_xalloc_limbs", scope: !3, file: !3, line: 323, type: !1337, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1339)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!16, !154}
!1339 = !{!1340}
!1340 = !DILocalVariable(name: "size", arg: 1, scope: !1336, file: !3, line: 323, type: !154)
!1341 = !DILocation(line: 0, scope: !1336)
!1342 = !DILocation(line: 325, column: 10, scope: !1336)
!1343 = !DILocation(line: 325, column: 3, scope: !1336)
!1344 = distinct !DISubprogram(name: "mpz_init2", scope: !3, file: !3, line: 1373, type: !1345, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1347)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{null, !1314, !20}
!1347 = !{!1348, !1349, !1350}
!1348 = !DILocalVariable(name: "r", arg: 1, scope: !1344, file: !3, line: 1373, type: !1314)
!1349 = !DILocalVariable(name: "bits", arg: 2, scope: !1344, file: !3, line: 1373, type: !20)
!1350 = !DILocalVariable(name: "rn", scope: !1344, file: !3, line: 1375, type: !154)
!1351 = !DILocation(line: 0, scope: !1344)
!1352 = !DILocation(line: 1377, column: 17, scope: !1344)
!1353 = !DILocation(line: 1377, column: 11, scope: !1344)
!1354 = !DILocation(line: 1377, column: 8, scope: !1344)
!1355 = !DILocation(line: 1378, column: 17, scope: !1344)
!1356 = !DILocation(line: 1378, column: 10, scope: !1344)
!1357 = !DILocation(line: 1380, column: 18, scope: !1344)
!1358 = !DILocation(line: 1380, column: 6, scope: !1344)
!1359 = !DILocation(line: 1380, column: 16, scope: !1344)
!1360 = !DILocation(line: 1381, column: 6, scope: !1344)
!1361 = !DILocation(line: 1381, column: 15, scope: !1344)
!1362 = !DILocation(line: 1382, column: 14, scope: !1344)
!1363 = !DILocation(line: 1382, column: 6, scope: !1344)
!1364 = !DILocation(line: 1382, column: 12, scope: !1344)
!1365 = !DILocation(line: 1383, column: 1, scope: !1344)
!1366 = distinct !DISubprogram(name: "mpz_clear", scope: !3, file: !3, line: 1386, type: !1312, scopeLine: 1387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1367)
!1367 = !{!1368}
!1368 = !DILocalVariable(name: "r", arg: 1, scope: !1366, file: !3, line: 1386, type: !1314)
!1369 = !DILocation(line: 0, scope: !1366)
!1370 = !DILocation(line: 1388, column: 3, scope: !1366)
!1371 = !DILocation(line: 1389, column: 1, scope: !1366)
!1372 = distinct !DISubprogram(name: "mpz_set_si", scope: !3, file: !3, line: 1412, type: !1373, scopeLine: 1413, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1375)
!1373 = !DISubroutineType(types: !1374)
!1374 = !{null, !1314, !15}
!1375 = !{!1376, !1377}
!1376 = !DILocalVariable(name: "r", arg: 1, scope: !1372, file: !3, line: 1412, type: !1314)
!1377 = !DILocalVariable(name: "x", arg: 2, scope: !1372, file: !3, line: 1412, type: !15)
!1378 = !DILocation(line: 0, scope: !1372)
!1379 = !DILocation(line: 1414, column: 9, scope: !1380)
!1380 = distinct !DILexicalBlock(scope: !1372, file: !3, line: 1414, column: 7)
!1381 = !DILocation(line: 1414, column: 7, scope: !1372)
!1382 = !DILocation(line: 1415, column: 5, scope: !1380)
!1383 = !DILocation(line: 1418, column: 10, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1380, file: !3, line: 1417, column: 5)
!1385 = !DILocation(line: 1418, column: 19, scope: !1384)
!1386 = !DILocation(line: 1419, column: 21, scope: !1384)
!1387 = !DILocation(line: 1419, column: 10, scope: !1384)
!1388 = !DILocation(line: 1419, column: 19, scope: !1384)
!1389 = !DILocation(line: 1421, column: 1, scope: !1372)
!1390 = distinct !DISubprogram(name: "mpz_set_ui", scope: !3, file: !3, line: 1424, type: !1391, scopeLine: 1425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1393)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{null, !1314, !14}
!1393 = !{!1394, !1395}
!1394 = !DILocalVariable(name: "r", arg: 1, scope: !1390, file: !3, line: 1424, type: !1314)
!1395 = !DILocalVariable(name: "x", arg: 2, scope: !1390, file: !3, line: 1424, type: !14)
!1396 = !DILocation(line: 0, scope: !1390)
!1397 = !DILocation(line: 1426, column: 9, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !1390, file: !3, line: 1426, column: 7)
!1399 = !DILocation(line: 0, scope: !1398)
!1400 = !DILocation(line: 1426, column: 7, scope: !1390)
!1401 = !DILocation(line: 1428, column: 19, scope: !1402)
!1402 = distinct !DILexicalBlock(scope: !1398, file: !3, line: 1427, column: 5)
!1403 = !DILocation(line: 1429, column: 10, scope: !1402)
!1404 = !DILocation(line: 1429, column: 19, scope: !1402)
!1405 = !DILocation(line: 1430, column: 5, scope: !1402)
!1406 = !DILocation(line: 1432, column: 17, scope: !1398)
!1407 = !DILocation(line: 1433, column: 1, scope: !1390)
!1408 = distinct !DISubprogram(name: "mpz_set", scope: !3, file: !3, line: 1436, type: !1409, scopeLine: 1437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1413)
!1409 = !DISubroutineType(types: !1410)
!1410 = !{null, !1314, !1411}
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1315)
!1413 = !{!1414, !1415, !1416, !1419}
!1414 = !DILocalVariable(name: "r", arg: 1, scope: !1408, file: !3, line: 1436, type: !1314)
!1415 = !DILocalVariable(name: "x", arg: 2, scope: !1408, file: !3, line: 1436, type: !1411)
!1416 = !DILocalVariable(name: "n", scope: !1417, file: !3, line: 1441, type: !154)
!1417 = distinct !DILexicalBlock(scope: !1418, file: !3, line: 1440, column: 5)
!1418 = distinct !DILexicalBlock(scope: !1408, file: !3, line: 1439, column: 7)
!1419 = !DILocalVariable(name: "rp", scope: !1417, file: !3, line: 1442, type: !16)
!1420 = !DILocation(line: 0, scope: !1408)
!1421 = !DILocation(line: 1439, column: 9, scope: !1418)
!1422 = !DILocation(line: 1439, column: 7, scope: !1408)
!1423 = !DILocation(line: 1444, column: 11, scope: !1417)
!1424 = !DILocation(line: 0, scope: !1417)
!1425 = !DILocation(line: 1445, column: 12, scope: !1417)
!1426 = !DILocation(line: 1447, column: 25, scope: !1417)
!1427 = !DILocation(line: 1447, column: 7, scope: !1417)
!1428 = !DILocation(line: 1448, column: 24, scope: !1417)
!1429 = !DILocation(line: 1448, column: 10, scope: !1417)
!1430 = !DILocation(line: 1448, column: 19, scope: !1417)
!1431 = !DILocation(line: 1449, column: 5, scope: !1417)
!1432 = !DILocation(line: 1450, column: 1, scope: !1408)
!1433 = distinct !DISubprogram(name: "mpz_realloc", scope: !3, file: !3, line: 1392, type: !1434, scopeLine: 1393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1436)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{!34, !1314, !154}
!1436 = !{!1437, !1438}
!1437 = !DILocalVariable(name: "r", arg: 1, scope: !1433, file: !3, line: 1392, type: !1314)
!1438 = !DILocalVariable(name: "size", arg: 2, scope: !1433, file: !3, line: 1392, type: !154)
!1439 = !DILocation(line: 0, scope: !1433)
!1440 = !DILocation(line: 1394, column: 10, scope: !1433)
!1441 = !DILocation(line: 1396, column: 37, scope: !1433)
!1442 = !DILocation(line: 1396, column: 14, scope: !1433)
!1443 = !DILocation(line: 1396, column: 12, scope: !1433)
!1444 = !DILocation(line: 1397, column: 18, scope: !1433)
!1445 = !DILocation(line: 1397, column: 6, scope: !1433)
!1446 = !DILocation(line: 1397, column: 16, scope: !1433)
!1447 = !DILocation(line: 1399, column: 7, scope: !1448)
!1448 = distinct !DILexicalBlock(scope: !1433, file: !3, line: 1399, column: 7)
!1449 = !DILocation(line: 1399, column: 29, scope: !1448)
!1450 = !DILocation(line: 1399, column: 7, scope: !1433)
!1451 = !DILocation(line: 1400, column: 17, scope: !1448)
!1452 = !DILocation(line: 1400, column: 5, scope: !1448)
!1453 = !DILocation(line: 1402, column: 3, scope: !1433)
!1454 = distinct !DISubprogram(name: "mpz_init_set_si", scope: !3, file: !3, line: 1453, type: !1373, scopeLine: 1454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1455)
!1455 = !{!1456, !1457}
!1456 = !DILocalVariable(name: "r", arg: 1, scope: !1454, file: !3, line: 1453, type: !1314)
!1457 = !DILocalVariable(name: "x", arg: 2, scope: !1454, file: !3, line: 1453, type: !15)
!1458 = !DILocation(line: 0, scope: !1454)
!1459 = !DILocation(line: 1455, column: 3, scope: !1454)
!1460 = !DILocation(line: 1456, column: 3, scope: !1454)
!1461 = !DILocation(line: 1457, column: 1, scope: !1454)
!1462 = distinct !DISubprogram(name: "mpz_init_set_ui", scope: !3, file: !3, line: 1460, type: !1391, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1463)
!1463 = !{!1464, !1465}
!1464 = !DILocalVariable(name: "r", arg: 1, scope: !1462, file: !3, line: 1460, type: !1314)
!1465 = !DILocalVariable(name: "x", arg: 2, scope: !1462, file: !3, line: 1460, type: !14)
!1466 = !DILocation(line: 0, scope: !1462)
!1467 = !DILocation(line: 1462, column: 3, scope: !1462)
!1468 = !DILocation(line: 1463, column: 3, scope: !1462)
!1469 = !DILocation(line: 1464, column: 1, scope: !1462)
!1470 = distinct !DISubprogram(name: "mpz_init_set", scope: !3, file: !3, line: 1467, type: !1409, scopeLine: 1468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1471)
!1471 = !{!1472, !1473}
!1472 = !DILocalVariable(name: "r", arg: 1, scope: !1470, file: !3, line: 1467, type: !1314)
!1473 = !DILocalVariable(name: "x", arg: 2, scope: !1470, file: !3, line: 1467, type: !1411)
!1474 = !DILocation(line: 0, scope: !1470)
!1475 = !DILocation(line: 1469, column: 3, scope: !1470)
!1476 = !DILocation(line: 1470, column: 3, scope: !1470)
!1477 = !DILocation(line: 1471, column: 1, scope: !1470)
!1478 = distinct !DISubprogram(name: "mpz_fits_slong_p", scope: !3, file: !3, line: 1474, type: !1479, scopeLine: 1475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1481)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!19, !1411}
!1481 = !{!1482, !1483}
!1482 = !DILocalVariable(name: "u", arg: 1, scope: !1478, file: !3, line: 1474, type: !1411)
!1483 = !DILocalVariable(name: "us", scope: !1478, file: !3, line: 1476, type: !154)
!1484 = !DILocation(line: 0, scope: !1478)
!1485 = !DILocation(line: 1476, column: 21, scope: !1478)
!1486 = !DILocation(line: 1476, column: 18, scope: !1478)
!1487 = !DILocation(line: 1478, column: 7, scope: !1478)
!1488 = !DILocation(line: 1481, column: 15, scope: !1489)
!1489 = distinct !DILexicalBlock(scope: !1490, file: !3, line: 1480, column: 12)
!1490 = distinct !DILexicalBlock(scope: !1478, file: !3, line: 1478, column: 7)
!1491 = !DILocation(line: 1481, column: 12, scope: !1489)
!1492 = !DILocation(line: 1481, column: 24, scope: !1489)
!1493 = !DILocation(line: 1481, column: 5, scope: !1489)
!1494 = !DILocation(line: 1483, column: 15, scope: !1495)
!1495 = distinct !DILexicalBlock(scope: !1489, file: !3, line: 1482, column: 12)
!1496 = !DILocation(line: 1483, column: 12, scope: !1495)
!1497 = !DILocation(line: 1483, column: 24, scope: !1495)
!1498 = !DILocation(line: 1483, column: 5, scope: !1495)
!1499 = !DILocation(line: 1485, column: 5, scope: !1495)
!1500 = !DILocation(line: 0, scope: !1490)
!1501 = !DILocation(line: 1486, column: 1, scope: !1478)
!1502 = distinct !DISubprogram(name: "mpz_fits_ulong_p", scope: !3, file: !3, line: 1489, type: !1479, scopeLine: 1490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1503)
!1503 = !{!1504, !1505}
!1504 = !DILocalVariable(name: "u", arg: 1, scope: !1502, file: !3, line: 1489, type: !1411)
!1505 = !DILocalVariable(name: "us", scope: !1502, file: !3, line: 1491, type: !154)
!1506 = !DILocation(line: 0, scope: !1502)
!1507 = !DILocation(line: 1491, column: 21, scope: !1502)
!1508 = !DILocation(line: 1491, column: 18, scope: !1502)
!1509 = !DILocation(line: 1493, column: 21, scope: !1502)
!1510 = !DILocation(line: 1493, column: 17, scope: !1502)
!1511 = !DILocation(line: 1493, column: 14, scope: !1502)
!1512 = !DILocation(line: 1493, column: 3, scope: !1502)
!1513 = distinct !DISubprogram(name: "mpz_get_si", scope: !3, file: !3, line: 1497, type: !1514, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1516)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!15, !1411}
!1516 = !{!1517, !1518}
!1517 = !DILocalVariable(name: "u", arg: 1, scope: !1513, file: !3, line: 1497, type: !1411)
!1518 = !DILocalVariable(name: "us", scope: !1513, file: !3, line: 1499, type: !154)
!1519 = !DILocation(line: 0, scope: !1513)
!1520 = !DILocation(line: 1499, column: 21, scope: !1513)
!1521 = !DILocation(line: 1501, column: 10, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1513, file: !3, line: 1501, column: 7)
!1523 = !DILocation(line: 1501, column: 7, scope: !1513)
!1524 = !DILocation(line: 1502, column: 23, scope: !1522)
!1525 = !DILocation(line: 1502, column: 20, scope: !1522)
!1526 = !DILocation(line: 1502, column: 32, scope: !1522)
!1527 = !DILocation(line: 1502, column: 5, scope: !1522)
!1528 = !DILocation(line: 1503, column: 15, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1522, file: !3, line: 1503, column: 12)
!1530 = !DILocation(line: 1503, column: 12, scope: !1522)
!1531 = !DILocation(line: 1504, column: 25, scope: !1529)
!1532 = !DILocation(line: 1504, column: 22, scope: !1529)
!1533 = !DILocation(line: 1504, column: 20, scope: !1529)
!1534 = !DILocation(line: 1504, column: 34, scope: !1529)
!1535 = !DILocation(line: 1504, column: 5, scope: !1529)
!1536 = !DILocation(line: 0, scope: !1522)
!1537 = !DILocation(line: 1507, column: 1, scope: !1513)
!1538 = distinct !DISubprogram(name: "mpz_get_ui", scope: !3, file: !3, line: 1510, type: !1539, scopeLine: 1511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1541)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!14, !1411}
!1541 = !{!1542}
!1542 = !DILocalVariable(name: "u", arg: 1, scope: !1538, file: !3, line: 1510, type: !1411)
!1543 = !DILocation(line: 0, scope: !1538)
!1544 = !DILocation(line: 1512, column: 13, scope: !1538)
!1545 = !DILocation(line: 1512, column: 22, scope: !1538)
!1546 = !DILocation(line: 1512, column: 10, scope: !1538)
!1547 = !DILocation(line: 1512, column: 36, scope: !1538)
!1548 = !DILocation(line: 1512, column: 33, scope: !1538)
!1549 = !DILocation(line: 1512, column: 3, scope: !1538)
!1550 = distinct !DISubprogram(name: "mpz_size", scope: !3, file: !3, line: 1516, type: !1551, scopeLine: 1517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1553)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!35, !1411}
!1553 = !{!1554}
!1554 = !DILocalVariable(name: "u", arg: 1, scope: !1550, file: !3, line: 1516, type: !1411)
!1555 = !DILocation(line: 0, scope: !1550)
!1556 = !DILocation(line: 1518, column: 10, scope: !1550)
!1557 = !DILocation(line: 1518, column: 3, scope: !1550)
!1558 = distinct !DISubprogram(name: "mpz_getlimbn", scope: !3, file: !3, line: 1522, type: !1559, scopeLine: 1523, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1561)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!12, !1411, !154}
!1561 = !{!1562, !1563}
!1562 = !DILocalVariable(name: "u", arg: 1, scope: !1558, file: !3, line: 1522, type: !1411)
!1563 = !DILocalVariable(name: "n", arg: 2, scope: !1558, file: !3, line: 1522, type: !154)
!1564 = !DILocation(line: 0, scope: !1558)
!1565 = !DILocation(line: 1524, column: 9, scope: !1566)
!1566 = distinct !DILexicalBlock(scope: !1558, file: !3, line: 1524, column: 7)
!1567 = !DILocation(line: 1524, column: 14, scope: !1566)
!1568 = !DILocation(line: 1524, column: 21, scope: !1566)
!1569 = !DILocation(line: 1524, column: 19, scope: !1566)
!1570 = !DILocation(line: 1524, column: 7, scope: !1558)
!1571 = !DILocation(line: 1525, column: 15, scope: !1566)
!1572 = !DILocation(line: 1525, column: 12, scope: !1566)
!1573 = !DILocation(line: 1525, column: 5, scope: !1566)
!1574 = !DILocation(line: 0, scope: !1566)
!1575 = !DILocation(line: 1528, column: 1, scope: !1558)
!1576 = distinct !DISubprogram(name: "mpz_realloc2", scope: !3, file: !3, line: 1531, type: !1345, scopeLine: 1532, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1577)
!1577 = !{!1578, !1579}
!1578 = !DILocalVariable(name: "x", arg: 1, scope: !1576, file: !3, line: 1531, type: !1314)
!1579 = !DILocalVariable(name: "n", arg: 2, scope: !1576, file: !3, line: 1531, type: !20)
!1580 = !DILocation(line: 0, scope: !1576)
!1581 = !DILocation(line: 1533, column: 31, scope: !1576)
!1582 = !DILocation(line: 1533, column: 28, scope: !1576)
!1583 = !DILocation(line: 1533, column: 26, scope: !1576)
!1584 = !DILocation(line: 1533, column: 38, scope: !1576)
!1585 = !DILocation(line: 1533, column: 21, scope: !1576)
!1586 = !DILocation(line: 1533, column: 3, scope: !1576)
!1587 = !DILocation(line: 1534, column: 1, scope: !1576)
!1588 = distinct !DISubprogram(name: "mpz_limbs_read", scope: !3, file: !3, line: 1537, type: !1589, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1592)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!151, !1591}
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "mpz_srcptr", file: !13, line: 76, baseType: !1411)
!1592 = !{!1593}
!1593 = !DILocalVariable(name: "x", arg: 1, scope: !1588, file: !3, line: 1537, type: !1591)
!1594 = !DILocation(line: 0, scope: !1588)
!1595 = !DILocation(line: 1539, column: 13, scope: !1588)
!1596 = !DILocation(line: 1539, column: 3, scope: !1588)
!1597 = distinct !DISubprogram(name: "mpz_limbs_modify", scope: !3, file: !3, line: 1543, type: !1598, scopeLine: 1544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1600)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!16, !1314, !154}
!1600 = !{!1601, !1602}
!1601 = !DILocalVariable(name: "x", arg: 1, scope: !1597, file: !3, line: 1543, type: !1314)
!1602 = !DILocalVariable(name: "n", arg: 2, scope: !1597, file: !3, line: 1543, type: !154)
!1603 = !DILocation(line: 0, scope: !1597)
!1604 = !DILocation(line: 1545, column: 3, scope: !1605)
!1605 = distinct !DILexicalBlock(scope: !1606, file: !3, line: 1545, column: 3)
!1606 = distinct !DILexicalBlock(scope: !1597, file: !3, line: 1545, column: 3)
!1607 = !DILocation(line: 1545, column: 3, scope: !1606)
!1608 = !DILocation(line: 1546, column: 10, scope: !1597)
!1609 = !DILocation(line: 1546, column: 3, scope: !1597)
!1610 = distinct !DISubprogram(name: "mpz_limbs_write", scope: !3, file: !3, line: 1550, type: !1598, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1611)
!1611 = !{!1612, !1613}
!1612 = !DILocalVariable(name: "x", arg: 1, scope: !1610, file: !3, line: 1550, type: !1314)
!1613 = !DILocalVariable(name: "n", arg: 2, scope: !1610, file: !3, line: 1550, type: !154)
!1614 = !DILocation(line: 0, scope: !1610)
!1615 = !DILocation(line: 1552, column: 10, scope: !1610)
!1616 = !DILocation(line: 1552, column: 3, scope: !1610)
!1617 = distinct !DISubprogram(name: "mpz_limbs_finish", scope: !3, file: !3, line: 1556, type: !1618, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1620)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{null, !1314, !154}
!1620 = !{!1621, !1622, !1623}
!1621 = !DILocalVariable(name: "x", arg: 1, scope: !1617, file: !3, line: 1556, type: !1314)
!1622 = !DILocalVariable(name: "xs", arg: 2, scope: !1617, file: !3, line: 1556, type: !154)
!1623 = !DILocalVariable(name: "xn", scope: !1617, file: !3, line: 1558, type: !154)
!1624 = !DILocation(line: 0, scope: !1617)
!1625 = !DILocation(line: 1559, column: 32, scope: !1617)
!1626 = !DILocation(line: 1559, column: 39, scope: !1617)
!1627 = !DILocation(line: 1559, column: 8, scope: !1617)
!1628 = !DILocation(line: 1560, column: 17, scope: !1617)
!1629 = !DILocation(line: 1560, column: 6, scope: !1617)
!1630 = !DILocation(line: 1560, column: 15, scope: !1617)
!1631 = !DILocation(line: 1561, column: 1, scope: !1617)
!1632 = distinct !DISubprogram(name: "mpn_normalized_size", scope: !3, file: !3, line: 374, type: !1633, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1635)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!154, !151, !154}
!1635 = !{!1636, !1637}
!1636 = !DILocalVariable(name: "xp", arg: 1, scope: !1632, file: !3, line: 374, type: !151)
!1637 = !DILocalVariable(name: "n", arg: 2, scope: !1632, file: !3, line: 374, type: !154)
!1638 = !DILocation(line: 0, scope: !1632)
!1639 = !DILocation(line: 376, column: 3, scope: !1632)
!1640 = !DILocation(line: 376, column: 12, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1642, file: !3, line: 376, column: 3)
!1642 = distinct !DILexicalBlock(scope: !1632, file: !3, line: 376, column: 3)
!1643 = !DILocation(line: 376, column: 16, scope: !1641)
!1644 = !DILocation(line: 376, column: 23, scope: !1641)
!1645 = !DILocation(line: 376, column: 19, scope: !1641)
!1646 = !DILocation(line: 376, column: 27, scope: !1641)
!1647 = !DILocation(line: 376, column: 3, scope: !1642)
!1648 = !DILocation(line: 376, column: 3, scope: !1641)
!1649 = distinct !{!1649, !1647, !1650}
!1650 = !DILocation(line: 377, column: 5, scope: !1642)
!1651 = !DILocation(line: 378, column: 3, scope: !1632)
!1652 = distinct !DISubprogram(name: "mpz_roinit_n", scope: !3, file: !3, line: 1564, type: !1653, scopeLine: 1565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1655)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{!1591, !1314, !151, !154}
!1655 = !{!1656, !1657, !1658}
!1656 = !DILocalVariable(name: "x", arg: 1, scope: !1652, file: !3, line: 1564, type: !1314)
!1657 = !DILocalVariable(name: "xp", arg: 2, scope: !1652, file: !3, line: 1564, type: !151)
!1658 = !DILocalVariable(name: "xs", arg: 3, scope: !1652, file: !3, line: 1564, type: !154)
!1659 = !DILocation(line: 0, scope: !1652)
!1660 = !DILocation(line: 1566, column: 6, scope: !1652)
!1661 = !DILocation(line: 1566, column: 16, scope: !1652)
!1662 = !DILocation(line: 1567, column: 6, scope: !1652)
!1663 = !DILocation(line: 1567, column: 12, scope: !1652)
!1664 = !DILocation(line: 1568, column: 3, scope: !1652)
!1665 = !DILocation(line: 1569, column: 3, scope: !1652)
!1666 = distinct !DISubprogram(name: "mpz_set_d", scope: !3, file: !3, line: 1575, type: !1667, scopeLine: 1576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1669)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{null, !1314, !18}
!1669 = !{!1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678}
!1670 = !DILocalVariable(name: "r", arg: 1, scope: !1666, file: !3, line: 1575, type: !1314)
!1671 = !DILocalVariable(name: "x", arg: 2, scope: !1666, file: !3, line: 1575, type: !18)
!1672 = !DILocalVariable(name: "sign", scope: !1666, file: !3, line: 1577, type: !19)
!1673 = !DILocalVariable(name: "rp", scope: !1666, file: !3, line: 1578, type: !16)
!1674 = !DILocalVariable(name: "rn", scope: !1666, file: !3, line: 1579, type: !154)
!1675 = !DILocalVariable(name: "i", scope: !1666, file: !3, line: 1579, type: !154)
!1676 = !DILocalVariable(name: "B", scope: !1666, file: !3, line: 1580, type: !18)
!1677 = !DILocalVariable(name: "Bi", scope: !1666, file: !3, line: 1581, type: !18)
!1678 = !DILocalVariable(name: "f", scope: !1666, file: !3, line: 1582, type: !12)
!1679 = !DILocation(line: 0, scope: !1666)
!1680 = !DILocation(line: 1586, column: 9, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1666, file: !3, line: 1586, column: 7)
!1682 = !DILocation(line: 1586, column: 24, scope: !1681)
!1683 = !DILocation(line: 1586, column: 19, scope: !1681)
!1684 = !DILocation(line: 1586, column: 14, scope: !1681)
!1685 = !DILocation(line: 1588, column: 10, scope: !1686)
!1686 = distinct !DILexicalBlock(scope: !1681, file: !3, line: 1587, column: 5)
!1687 = !DILocation(line: 1588, column: 19, scope: !1686)
!1688 = !DILocation(line: 1589, column: 7, scope: !1686)
!1689 = !DILocation(line: 1592, column: 12, scope: !1666)
!1690 = !DILocation(line: 1594, column: 9, scope: !1691)
!1691 = distinct !DILexicalBlock(scope: !1666, file: !3, line: 1593, column: 7)
!1692 = !DILocation(line: 1593, column: 7, scope: !1666)
!1693 = !DILocation(line: 1596, column: 9, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1666, file: !3, line: 1596, column: 7)
!1695 = !DILocation(line: 1596, column: 7, scope: !1666)
!1696 = !DILocation(line: 1598, column: 10, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1694, file: !3, line: 1597, column: 5)
!1698 = !DILocation(line: 1598, column: 19, scope: !1697)
!1699 = !DILocation(line: 1599, column: 7, scope: !1697)
!1700 = !DILocation(line: 1603, column: 8, scope: !1701)
!1701 = distinct !DILexicalBlock(scope: !1666, file: !3, line: 1603, column: 3)
!1702 = !DILocation(line: 0, scope: !1701)
!1703 = !DILocation(line: 1603, column: 18, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1701, file: !3, line: 1603, column: 3)
!1705 = !DILocation(line: 1603, column: 3, scope: !1701)
!1706 = !DILocation(line: 1604, column: 7, scope: !1704)
!1707 = !DILocation(line: 1603, column: 26, scope: !1704)
!1708 = !DILocation(line: 1603, column: 3, scope: !1704)
!1709 = distinct !{!1709, !1705, !1710}
!1710 = !DILocation(line: 1604, column: 10, scope: !1701)
!1711 = !DILocation(line: 1606, column: 8, scope: !1666)
!1712 = !DILocation(line: 1608, column: 7, scope: !1666)
!1713 = !DILocation(line: 1609, column: 8, scope: !1666)
!1714 = !DILocation(line: 1609, column: 5, scope: !1666)
!1715 = !DILocation(line: 1610, column: 3, scope: !1716)
!1716 = distinct !DILexicalBlock(scope: !1717, file: !3, line: 1610, column: 3)
!1717 = distinct !DILexicalBlock(scope: !1666, file: !3, line: 1610, column: 3)
!1718 = !DILocation(line: 1610, column: 3, scope: !1717)
!1719 = !DILocation(line: 1611, column: 9, scope: !1666)
!1720 = !DILocation(line: 1612, column: 3, scope: !1666)
!1721 = !DILocation(line: 1612, column: 9, scope: !1666)
!1722 = !DILocation(line: 1613, column: 3, scope: !1666)
!1723 = !DILocation(line: 1613, column: 10, scope: !1666)
!1724 = !DILocation(line: 1613, column: 14, scope: !1666)
!1725 = !DILocation(line: 1615, column: 13, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1666, file: !3, line: 1614, column: 5)
!1727 = !DILocation(line: 1616, column: 11, scope: !1726)
!1728 = !DILocation(line: 1617, column: 12, scope: !1726)
!1729 = !DILocation(line: 1617, column: 9, scope: !1726)
!1730 = !DILocation(line: 1618, column: 7, scope: !1731)
!1731 = distinct !DILexicalBlock(scope: !1732, file: !3, line: 1618, column: 7)
!1732 = distinct !DILexicalBlock(scope: !1726, file: !3, line: 1618, column: 7)
!1733 = !DILocation(line: 1618, column: 7, scope: !1732)
!1734 = !DILocation(line: 1619, column: 7, scope: !1726)
!1735 = !DILocation(line: 1619, column: 13, scope: !1726)
!1736 = distinct !{!1736, !1722, !1737}
!1737 = !DILocation(line: 1620, column: 5, scope: !1666)
!1738 = !DILocation(line: 1622, column: 17, scope: !1666)
!1739 = !DILocation(line: 1622, column: 6, scope: !1666)
!1740 = !DILocation(line: 1622, column: 15, scope: !1666)
!1741 = !DILocation(line: 1623, column: 1, scope: !1666)
!1742 = distinct !DISubprogram(name: "mpz_init_set_d", scope: !3, file: !3, line: 1626, type: !1667, scopeLine: 1627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1743)
!1743 = !{!1744, !1745}
!1744 = !DILocalVariable(name: "r", arg: 1, scope: !1742, file: !3, line: 1626, type: !1314)
!1745 = !DILocalVariable(name: "x", arg: 2, scope: !1742, file: !3, line: 1626, type: !18)
!1746 = !DILocation(line: 0, scope: !1742)
!1747 = !DILocation(line: 1628, column: 3, scope: !1742)
!1748 = !DILocation(line: 1629, column: 3, scope: !1742)
!1749 = !DILocation(line: 1630, column: 1, scope: !1742)
!1750 = distinct !DISubprogram(name: "mpz_get_d", scope: !3, file: !3, line: 1633, type: !1751, scopeLine: 1634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1753)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!18, !1411}
!1753 = !{!1754, !1755, !1756, !1757}
!1754 = !DILocalVariable(name: "u", arg: 1, scope: !1750, file: !3, line: 1633, type: !1411)
!1755 = !DILocalVariable(name: "un", scope: !1750, file: !3, line: 1635, type: !154)
!1756 = !DILocalVariable(name: "x", scope: !1750, file: !3, line: 1636, type: !18)
!1757 = !DILocalVariable(name: "B", scope: !1750, file: !3, line: 1637, type: !18)
!1758 = !DILocation(line: 0, scope: !1750)
!1759 = !DILocation(line: 1639, column: 8, scope: !1750)
!1760 = !DILocation(line: 1641, column: 10, scope: !1761)
!1761 = distinct !DILexicalBlock(scope: !1750, file: !3, line: 1641, column: 7)
!1762 = !DILocation(line: 1641, column: 7, scope: !1750)
!1763 = !DILocation(line: 1644, column: 10, scope: !1750)
!1764 = !DILocation(line: 1644, column: 16, scope: !1750)
!1765 = !DILocation(line: 1644, column: 7, scope: !1750)
!1766 = !DILocation(line: 1645, column: 3, scope: !1750)
!1767 = !DILocation(line: 1645, column: 13, scope: !1750)
!1768 = !DILocation(line: 1646, column: 10, scope: !1750)
!1769 = !DILocation(line: 1646, column: 24, scope: !1750)
!1770 = !DILocation(line: 1646, column: 15, scope: !1750)
!1771 = !DILocation(line: 1646, column: 13, scope: !1750)
!1772 = distinct !{!1772, !1766, !1773}
!1773 = !DILocation(line: 1646, column: 28, scope: !1750)
!1774 = !DILocation(line: 1649, column: 9, scope: !1775)
!1775 = distinct !DILexicalBlock(scope: !1750, file: !3, line: 1648, column: 7)
!1776 = !DILocation(line: 1648, column: 7, scope: !1750)
!1777 = !DILocation(line: 1651, column: 3, scope: !1750)
!1778 = !DILocation(line: 1652, column: 1, scope: !1750)
!1779 = distinct !DISubprogram(name: "mpz_cmpabs_d", scope: !3, file: !3, line: 1655, type: !1780, scopeLine: 1656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1782)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!19, !1411, !18}
!1782 = !{!1783, !1784, !1785, !1786, !1787, !1788, !1789, !1795}
!1783 = !DILocalVariable(name: "x", arg: 1, scope: !1779, file: !3, line: 1655, type: !1411)
!1784 = !DILocalVariable(name: "d", arg: 2, scope: !1779, file: !3, line: 1655, type: !18)
!1785 = !DILocalVariable(name: "xn", scope: !1779, file: !3, line: 1657, type: !154)
!1786 = !DILocalVariable(name: "B", scope: !1779, file: !3, line: 1658, type: !18)
!1787 = !DILocalVariable(name: "Bi", scope: !1779, file: !3, line: 1658, type: !18)
!1788 = !DILocalVariable(name: "i", scope: !1779, file: !3, line: 1659, type: !154)
!1789 = !DILocalVariable(name: "f", scope: !1790, file: !3, line: 1681, type: !12)
!1790 = distinct !DILexicalBlock(scope: !1791, file: !3, line: 1680, column: 2)
!1791 = distinct !DILexicalBlock(scope: !1792, file: !3, line: 1679, column: 7)
!1792 = distinct !DILexicalBlock(scope: !1793, file: !3, line: 1679, column: 7)
!1793 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 1665, column: 5)
!1794 = distinct !DILexicalBlock(scope: !1779, file: !3, line: 1664, column: 7)
!1795 = !DILocalVariable(name: "xl", scope: !1790, file: !3, line: 1681, type: !12)
!1796 = !DILocation(line: 0, scope: !1779)
!1797 = !DILocation(line: 1661, column: 11, scope: !1779)
!1798 = !DILocation(line: 1661, column: 8, scope: !1779)
!1799 = !DILocation(line: 1662, column: 7, scope: !1779)
!1800 = !DILocation(line: 1664, column: 10, scope: !1794)
!1801 = !DILocation(line: 1664, column: 7, scope: !1779)
!1802 = !DILocation(line: 1666, column: 12, scope: !1793)
!1803 = !DILocation(line: 1672, column: 12, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1793, file: !3, line: 1672, column: 7)
!1805 = !DILocation(line: 0, scope: !1804)
!1806 = !DILocation(line: 1672, column: 21, scope: !1807)
!1807 = distinct !DILexicalBlock(scope: !1804, file: !3, line: 1672, column: 7)
!1808 = !DILocation(line: 1672, column: 7, scope: !1804)
!1809 = !DILocation(line: 1673, column: 4, scope: !1807)
!1810 = !DILocation(line: 1672, column: 28, scope: !1807)
!1811 = !DILocation(line: 1672, column: 7, scope: !1807)
!1812 = distinct !{!1812, !1808, !1813}
!1813 = !DILocation(line: 1673, column: 7, scope: !1804)
!1814 = !DILocation(line: 1675, column: 13, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1793, file: !3, line: 1675, column: 11)
!1816 = !DILocation(line: 1675, column: 11, scope: !1793)
!1817 = !DILocation(line: 0, scope: !1790)
!1818 = !DILocation(line: 1679, column: 7, scope: !1792)
!1819 = !DILocation(line: 0, scope: !1792)
!1820 = !DILocation(line: 1662, column: 5, scope: !1779)
!1821 = !DILocation(line: 1679, column: 21, scope: !1791)
!1822 = !DILocation(line: 1679, column: 24, scope: !1791)
!1823 = !DILocation(line: 1683, column: 8, scope: !1790)
!1824 = !DILocation(line: 1684, column: 12, scope: !1790)
!1825 = !DILocation(line: 1684, column: 9, scope: !1790)
!1826 = !DILocation(line: 1685, column: 11, scope: !1827)
!1827 = distinct !DILexicalBlock(scope: !1790, file: !3, line: 1685, column: 8)
!1828 = !DILocation(line: 1685, column: 8, scope: !1790)
!1829 = !DILocation(line: 1687, column: 16, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1827, file: !3, line: 1687, column: 13)
!1831 = !DILocation(line: 1687, column: 13, scope: !1827)
!1832 = !DILocation(line: 1689, column: 17, scope: !1790)
!1833 = !DILocation(line: 1689, column: 15, scope: !1790)
!1834 = !DILocation(line: 1689, column: 10, scope: !1790)
!1835 = !DILocation(line: 1690, column: 2, scope: !1791)
!1836 = distinct !{!1836, !1818, !1837}
!1837 = !DILocation(line: 1690, column: 2, scope: !1792)
!1838 = !DILocation(line: 1692, column: 15, scope: !1779)
!1839 = !DILocation(line: 1692, column: 10, scope: !1779)
!1840 = !DILocation(line: 1692, column: 3, scope: !1779)
!1841 = !DILocation(line: 1693, column: 1, scope: !1779)
!1842 = distinct !DISubprogram(name: "mpz_cmp_d", scope: !3, file: !3, line: 1696, type: !1780, scopeLine: 1697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1843)
!1843 = !{!1844, !1845}
!1844 = !DILocalVariable(name: "x", arg: 1, scope: !1842, file: !3, line: 1696, type: !1411)
!1845 = !DILocalVariable(name: "d", arg: 2, scope: !1842, file: !3, line: 1696, type: !18)
!1846 = !DILocation(line: 0, scope: !1842)
!1847 = !DILocation(line: 1698, column: 10, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1842, file: !3, line: 1698, column: 7)
!1849 = !DILocation(line: 1698, column: 19, scope: !1848)
!1850 = !DILocation(line: 1698, column: 7, scope: !1842)
!1851 = !DILocation(line: 1700, column: 13, scope: !1852)
!1852 = distinct !DILexicalBlock(scope: !1853, file: !3, line: 1700, column: 11)
!1853 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 1699, column: 5)
!1854 = !DILocation(line: 1700, column: 11, scope: !1853)
!1855 = !DILocation(line: 1703, column: 10, scope: !1852)
!1856 = !DILocation(line: 1703, column: 9, scope: !1852)
!1857 = !DILocation(line: 1703, column: 2, scope: !1852)
!1858 = !DILocation(line: 1707, column: 13, scope: !1859)
!1859 = distinct !DILexicalBlock(scope: !1860, file: !3, line: 1707, column: 11)
!1860 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 1706, column: 5)
!1861 = !DILocation(line: 1707, column: 11, scope: !1860)
!1862 = !DILocation(line: 1710, column: 9, scope: !1859)
!1863 = !DILocation(line: 1710, column: 2, scope: !1859)
!1864 = !DILocation(line: 0, scope: !1848)
!1865 = !DILocation(line: 1712, column: 1, scope: !1842)
!1866 = distinct !DISubprogram(name: "mpz_sgn", scope: !3, file: !3, line: 1717, type: !1479, scopeLine: 1718, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1867)
!1867 = !{!1868, !1869}
!1868 = !DILocalVariable(name: "u", arg: 1, scope: !1866, file: !3, line: 1717, type: !1411)
!1869 = !DILocalVariable(name: "usize", scope: !1866, file: !3, line: 1719, type: !154)
!1870 = !DILocation(line: 0, scope: !1866)
!1871 = !DILocation(line: 1719, column: 24, scope: !1866)
!1872 = !DILocation(line: 1721, column: 17, scope: !1866)
!1873 = !DILocation(line: 1721, column: 31, scope: !1866)
!1874 = !DILocation(line: 1721, column: 22, scope: !1866)
!1875 = !DILocation(line: 1721, column: 3, scope: !1866)
!1876 = distinct !DISubprogram(name: "mpz_cmp_si", scope: !3, file: !3, line: 1725, type: !1877, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1879)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!19, !1411, !15}
!1879 = !{!1880, !1881, !1882, !1883}
!1880 = !DILocalVariable(name: "u", arg: 1, scope: !1876, file: !3, line: 1725, type: !1411)
!1881 = !DILocalVariable(name: "v", arg: 2, scope: !1876, file: !3, line: 1725, type: !15)
!1882 = !DILocalVariable(name: "usize", scope: !1876, file: !3, line: 1727, type: !154)
!1883 = !DILocalVariable(name: "ul", scope: !1884, file: !3, line: 1737, type: !12)
!1884 = distinct !DILexicalBlock(scope: !1885, file: !3, line: 1736, column: 5)
!1885 = distinct !DILexicalBlock(scope: !1886, file: !3, line: 1733, column: 12)
!1886 = distinct !DILexicalBlock(scope: !1887, file: !3, line: 1731, column: 12)
!1887 = distinct !DILexicalBlock(scope: !1876, file: !3, line: 1729, column: 7)
!1888 = !DILocation(line: 0, scope: !1876)
!1889 = !DILocation(line: 1727, column: 24, scope: !1876)
!1890 = !DILocation(line: 1729, column: 13, scope: !1887)
!1891 = !DILocation(line: 1729, column: 7, scope: !1876)
!1892 = !DILocation(line: 1731, column: 14, scope: !1886)
!1893 = !DILocation(line: 1731, column: 12, scope: !1887)
!1894 = !DILocation(line: 1732, column: 12, scope: !1886)
!1895 = !DILocation(line: 1732, column: 5, scope: !1886)
!1896 = !DILocation(line: 1733, column: 18, scope: !1885)
!1897 = !DILocation(line: 1733, column: 12, scope: !1886)
!1898 = !DILocation(line: 1737, column: 25, scope: !1884)
!1899 = !DILocation(line: 1737, column: 22, scope: !1884)
!1900 = !DILocation(line: 0, scope: !1884)
!1901 = !DILocation(line: 1738, column: 22, scope: !1902)
!1902 = distinct !DILexicalBlock(scope: !1884, file: !3, line: 1738, column: 11)
!1903 = !DILocation(line: 1738, column: 58, scope: !1902)
!1904 = !DILocation(line: 1738, column: 11, scope: !1884)
!1905 = !DILocation(line: 0, scope: !1887)
!1906 = !DILocation(line: 1743, column: 1, scope: !1876)
!1907 = distinct !DISubprogram(name: "mpz_cmp_ui", scope: !3, file: !3, line: 1746, type: !1908, scopeLine: 1747, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1910)
!1908 = !DISubroutineType(types: !1909)
!1909 = !{!19, !1411, !14}
!1910 = !{!1911, !1912, !1913, !1914}
!1911 = !DILocalVariable(name: "u", arg: 1, scope: !1907, file: !3, line: 1746, type: !1411)
!1912 = !DILocalVariable(name: "v", arg: 2, scope: !1907, file: !3, line: 1746, type: !14)
!1913 = !DILocalVariable(name: "usize", scope: !1907, file: !3, line: 1748, type: !154)
!1914 = !DILocalVariable(name: "ul", scope: !1915, file: !3, line: 1756, type: !12)
!1915 = distinct !DILexicalBlock(scope: !1916, file: !3, line: 1755, column: 5)
!1916 = distinct !DILexicalBlock(scope: !1917, file: !3, line: 1752, column: 12)
!1917 = distinct !DILexicalBlock(scope: !1907, file: !3, line: 1750, column: 7)
!1918 = !DILocation(line: 0, scope: !1907)
!1919 = !DILocation(line: 1748, column: 24, scope: !1907)
!1920 = !DILocation(line: 1750, column: 13, scope: !1917)
!1921 = !DILocation(line: 1750, column: 7, scope: !1907)
!1922 = !DILocation(line: 1752, column: 18, scope: !1916)
!1923 = !DILocation(line: 1752, column: 12, scope: !1917)
!1924 = !DILocation(line: 1756, column: 29, scope: !1915)
!1925 = !DILocation(line: 1756, column: 22, scope: !1915)
!1926 = !DILocation(line: 1756, column: 39, scope: !1915)
!1927 = !DILocation(line: 1756, column: 36, scope: !1915)
!1928 = !DILocation(line: 0, scope: !1915)
!1929 = !DILocation(line: 1757, column: 18, scope: !1915)
!1930 = !DILocation(line: 1757, column: 29, scope: !1915)
!1931 = !DILocation(line: 1757, column: 23, scope: !1915)
!1932 = !DILocation(line: 0, scope: !1917)
!1933 = !DILocation(line: 1759, column: 1, scope: !1907)
!1934 = distinct !DISubprogram(name: "mpz_cmp", scope: !3, file: !3, line: 1762, type: !1935, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1937)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!19, !1411, !1411}
!1937 = !{!1938, !1939, !1940, !1941}
!1938 = !DILocalVariable(name: "a", arg: 1, scope: !1934, file: !3, line: 1762, type: !1411)
!1939 = !DILocalVariable(name: "b", arg: 2, scope: !1934, file: !3, line: 1762, type: !1411)
!1940 = !DILocalVariable(name: "asize", scope: !1934, file: !3, line: 1764, type: !154)
!1941 = !DILocalVariable(name: "bsize", scope: !1934, file: !3, line: 1765, type: !154)
!1942 = !DILocation(line: 0, scope: !1934)
!1943 = !DILocation(line: 1764, column: 24, scope: !1934)
!1944 = !DILocation(line: 1764, column: 21, scope: !1934)
!1945 = !DILocation(line: 1765, column: 24, scope: !1934)
!1946 = !DILocation(line: 1767, column: 13, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1934, file: !3, line: 1767, column: 7)
!1948 = !DILocation(line: 1767, column: 7, scope: !1934)
!1949 = !DILocation(line: 1768, column: 19, scope: !1947)
!1950 = !DILocation(line: 1768, column: 12, scope: !1947)
!1951 = !DILocation(line: 1768, column: 5, scope: !1947)
!1952 = !DILocation(line: 1769, column: 18, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1947, file: !3, line: 1769, column: 12)
!1954 = !DILocation(line: 1769, column: 12, scope: !1947)
!1955 = !DILocation(line: 1770, column: 24, scope: !1953)
!1956 = !DILocation(line: 1770, column: 34, scope: !1953)
!1957 = !DILocation(line: 1770, column: 12, scope: !1953)
!1958 = !DILocation(line: 1770, column: 5, scope: !1953)
!1959 = !DILocation(line: 1772, column: 24, scope: !1953)
!1960 = !DILocation(line: 1772, column: 34, scope: !1953)
!1961 = !DILocation(line: 1772, column: 41, scope: !1953)
!1962 = !DILocation(line: 1772, column: 12, scope: !1953)
!1963 = !DILocation(line: 1772, column: 5, scope: !1953)
!1964 = !DILocation(line: 0, scope: !1947)
!1965 = !DILocation(line: 1773, column: 1, scope: !1934)
!1966 = distinct !DISubprogram(name: "mpz_cmpabs_ui", scope: !3, file: !3, line: 1776, type: !1908, scopeLine: 1777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1967)
!1967 = !{!1968, !1969, !1970, !1971}
!1968 = !DILocalVariable(name: "u", arg: 1, scope: !1966, file: !3, line: 1776, type: !1411)
!1969 = !DILocalVariable(name: "v", arg: 2, scope: !1966, file: !3, line: 1776, type: !14)
!1970 = !DILocalVariable(name: "un", scope: !1966, file: !3, line: 1778, type: !154)
!1971 = !DILocalVariable(name: "ul", scope: !1966, file: !3, line: 1779, type: !12)
!1972 = !DILocation(line: 0, scope: !1966)
!1973 = !DILocation(line: 1778, column: 18, scope: !1966)
!1974 = !DILocation(line: 1781, column: 10, scope: !1975)
!1975 = distinct !DILexicalBlock(scope: !1966, file: !3, line: 1781, column: 7)
!1976 = !DILocation(line: 1781, column: 7, scope: !1966)
!1977 = !DILocation(line: 1784, column: 12, scope: !1966)
!1978 = !DILocation(line: 1784, column: 8, scope: !1966)
!1979 = !DILocation(line: 1784, column: 23, scope: !1966)
!1980 = !DILocation(line: 1784, column: 20, scope: !1966)
!1981 = !DILocation(line: 1786, column: 14, scope: !1966)
!1982 = !DILocation(line: 1786, column: 25, scope: !1966)
!1983 = !DILocation(line: 1786, column: 19, scope: !1966)
!1984 = !DILocation(line: 1786, column: 3, scope: !1966)
!1985 = !DILocation(line: 1787, column: 1, scope: !1966)
!1986 = distinct !DISubprogram(name: "mpz_cmpabs", scope: !3, file: !3, line: 1790, type: !1935, scopeLine: 1791, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1987)
!1987 = !{!1988, !1989}
!1988 = !DILocalVariable(name: "u", arg: 1, scope: !1986, file: !3, line: 1790, type: !1411)
!1989 = !DILocalVariable(name: "v", arg: 2, scope: !1986, file: !3, line: 1790, type: !1411)
!1990 = !DILocation(line: 0, scope: !1986)
!1991 = !DILocation(line: 1792, column: 23, scope: !1986)
!1992 = !DILocation(line: 1792, column: 30, scope: !1986)
!1993 = !DILocation(line: 1793, column: 9, scope: !1986)
!1994 = !DILocation(line: 1793, column: 16, scope: !1986)
!1995 = !DILocation(line: 1792, column: 10, scope: !1986)
!1996 = !DILocation(line: 1792, column: 3, scope: !1986)
!1997 = distinct !DISubprogram(name: "mpn_cmp4", scope: !3, file: !3, line: 365, type: !1998, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2000)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{!19, !151, !154, !151, !154}
!2000 = !{!2001, !2002, !2003, !2004}
!2001 = !DILocalVariable(name: "ap", arg: 1, scope: !1997, file: !3, line: 365, type: !151)
!2002 = !DILocalVariable(name: "an", arg: 2, scope: !1997, file: !3, line: 365, type: !154)
!2003 = !DILocalVariable(name: "bp", arg: 3, scope: !1997, file: !3, line: 365, type: !151)
!2004 = !DILocalVariable(name: "bn", arg: 4, scope: !1997, file: !3, line: 365, type: !154)
!2005 = !DILocation(line: 0, scope: !1997)
!2006 = !DILocation(line: 367, column: 10, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 367, column: 7)
!2008 = !DILocation(line: 367, column: 7, scope: !1997)
!2009 = !DILocation(line: 368, column: 15, scope: !2007)
!2010 = !DILocation(line: 368, column: 12, scope: !2007)
!2011 = !DILocation(line: 368, column: 5, scope: !2007)
!2012 = !DILocation(line: 370, column: 12, scope: !2007)
!2013 = !DILocation(line: 370, column: 5, scope: !2007)
!2014 = !DILocation(line: 0, scope: !2007)
!2015 = !DILocation(line: 371, column: 1, scope: !1997)
!2016 = distinct !DISubprogram(name: "mpz_abs", scope: !3, file: !3, line: 1797, type: !1409, scopeLine: 1798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2017)
!2017 = !{!2018, !2019}
!2018 = !DILocalVariable(name: "r", arg: 1, scope: !2016, file: !3, line: 1797, type: !1314)
!2019 = !DILocalVariable(name: "u", arg: 2, scope: !2016, file: !3, line: 1797, type: !1411)
!2020 = !DILocation(line: 0, scope: !2016)
!2021 = !DILocation(line: 1799, column: 9, scope: !2022)
!2022 = distinct !DILexicalBlock(scope: !2016, file: !3, line: 1799, column: 7)
!2023 = !DILocation(line: 1799, column: 7, scope: !2016)
!2024 = !DILocation(line: 1800, column: 5, scope: !2022)
!2025 = !DILocation(line: 1802, column: 17, scope: !2016)
!2026 = !DILocation(line: 1802, column: 15, scope: !2016)
!2027 = !DILocation(line: 1803, column: 1, scope: !2016)
!2028 = distinct !DISubprogram(name: "mpz_neg", scope: !3, file: !3, line: 1806, type: !1409, scopeLine: 1807, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2029)
!2029 = !{!2030, !2031}
!2030 = !DILocalVariable(name: "r", arg: 1, scope: !2028, file: !3, line: 1806, type: !1314)
!2031 = !DILocalVariable(name: "u", arg: 2, scope: !2028, file: !3, line: 1806, type: !1411)
!2032 = !DILocation(line: 0, scope: !2028)
!2033 = !DILocation(line: 1808, column: 9, scope: !2034)
!2034 = distinct !DILexicalBlock(scope: !2028, file: !3, line: 1808, column: 7)
!2035 = !DILocation(line: 1808, column: 7, scope: !2028)
!2036 = !DILocation(line: 1809, column: 5, scope: !2034)
!2037 = !DILocation(line: 1811, column: 21, scope: !2028)
!2038 = !DILocation(line: 1811, column: 17, scope: !2028)
!2039 = !DILocation(line: 1811, column: 15, scope: !2028)
!2040 = !DILocation(line: 1812, column: 1, scope: !2028)
!2041 = distinct !DISubprogram(name: "mpz_swap", scope: !3, file: !3, line: 1815, type: !2042, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2044)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{null, !1314, !1314}
!2044 = !{!2045, !2046, !2047, !2049, !2051}
!2045 = !DILocalVariable(name: "u", arg: 1, scope: !2041, file: !3, line: 1815, type: !1314)
!2046 = !DILocalVariable(name: "v", arg: 2, scope: !2041, file: !3, line: 1815, type: !1314)
!2047 = !DILocalVariable(name: "__mp_size_t_swap__tmp", scope: !2048, file: !3, line: 1817, type: !154)
!2048 = distinct !DILexicalBlock(scope: !2041, file: !3, line: 1817, column: 3)
!2049 = !DILocalVariable(name: "__mp_size_t_swap__tmp", scope: !2050, file: !3, line: 1818, type: !154)
!2050 = distinct !DILexicalBlock(scope: !2041, file: !3, line: 1818, column: 3)
!2051 = !DILocalVariable(name: "__mp_ptr_swap__tmp", scope: !2052, file: !3, line: 1819, type: !16)
!2052 = distinct !DILexicalBlock(scope: !2041, file: !3, line: 1819, column: 3)
!2053 = !DILocation(line: 0, scope: !2041)
!2054 = !DILocation(line: 1817, column: 3, scope: !2048)
!2055 = !DILocation(line: 1818, column: 3, scope: !2050)
!2056 = !DILocation(line: 1819, column: 3, scope: !2052)
!2057 = !DILocation(line: 1820, column: 1, scope: !2041)
!2058 = distinct !DISubprogram(name: "mpz_add_ui", scope: !3, file: !3, line: 1875, type: !2059, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2061)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{null, !1314, !1411, !14}
!2061 = !{!2062, !2063, !2064}
!2062 = !DILocalVariable(name: "r", arg: 1, scope: !2058, file: !3, line: 1875, type: !1314)
!2063 = !DILocalVariable(name: "a", arg: 2, scope: !2058, file: !3, line: 1875, type: !1411)
!2064 = !DILocalVariable(name: "b", arg: 3, scope: !2058, file: !3, line: 1875, type: !14)
!2065 = !DILocation(line: 0, scope: !2058)
!2066 = !DILocation(line: 1877, column: 10, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2058, file: !3, line: 1877, column: 7)
!2068 = !DILocation(line: 1877, column: 19, scope: !2067)
!2069 = !DILocation(line: 1877, column: 7, scope: !2058)
!2070 = !DILocation(line: 1878, column: 19, scope: !2067)
!2071 = !DILocation(line: 1878, column: 8, scope: !2067)
!2072 = !DILocation(line: 1878, column: 17, scope: !2067)
!2073 = !DILocation(line: 1878, column: 5, scope: !2067)
!2074 = !DILocation(line: 1880, column: 20, scope: !2067)
!2075 = !DILocation(line: 1880, column: 19, scope: !2067)
!2076 = !DILocation(line: 1880, column: 8, scope: !2067)
!2077 = !DILocation(line: 1880, column: 17, scope: !2067)
!2078 = !DILocation(line: 1881, column: 1, scope: !2058)
!2079 = distinct !DISubprogram(name: "mpz_abs_add_ui", scope: !3, file: !3, line: 1827, type: !2080, scopeLine: 1828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2082)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{!154, !1314, !1411, !14}
!2082 = !{!2083, !2084, !2085, !2086, !2087, !2088}
!2083 = !DILocalVariable(name: "r", arg: 1, scope: !2079, file: !3, line: 1827, type: !1314)
!2084 = !DILocalVariable(name: "a", arg: 2, scope: !2079, file: !3, line: 1827, type: !1411)
!2085 = !DILocalVariable(name: "b", arg: 3, scope: !2079, file: !3, line: 1827, type: !14)
!2086 = !DILocalVariable(name: "an", scope: !2079, file: !3, line: 1829, type: !154)
!2087 = !DILocalVariable(name: "rp", scope: !2079, file: !3, line: 1830, type: !16)
!2088 = !DILocalVariable(name: "cy", scope: !2079, file: !3, line: 1831, type: !12)
!2089 = !DILocation(line: 0, scope: !2079)
!2090 = !DILocation(line: 1833, column: 8, scope: !2079)
!2091 = !DILocation(line: 1834, column: 10, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !2079, file: !3, line: 1834, column: 7)
!2093 = !DILocation(line: 1834, column: 7, scope: !2079)
!2094 = !DILocation(line: 1836, column: 10, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !2092, file: !3, line: 1835, column: 5)
!2096 = !DILocation(line: 1836, column: 19, scope: !2095)
!2097 = !DILocation(line: 1837, column: 16, scope: !2095)
!2098 = !DILocation(line: 1837, column: 14, scope: !2095)
!2099 = !DILocation(line: 1837, column: 7, scope: !2095)
!2100 = !DILocation(line: 1840, column: 8, scope: !2079)
!2101 = !DILocation(line: 1842, column: 26, scope: !2079)
!2102 = !DILocation(line: 1842, column: 8, scope: !2079)
!2103 = !DILocation(line: 1843, column: 3, scope: !2079)
!2104 = !DILocation(line: 1843, column: 10, scope: !2079)
!2105 = !DILocation(line: 1844, column: 6, scope: !2079)
!2106 = !DILocation(line: 1846, column: 3, scope: !2079)
!2107 = !DILocation(line: 1847, column: 1, scope: !2079)
!2108 = distinct !DISubprogram(name: "mpz_abs_sub_ui", scope: !3, file: !3, line: 1852, type: !2080, scopeLine: 1853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2109)
!2109 = !{!2110, !2111, !2112, !2113, !2114, !2115}
!2110 = !DILocalVariable(name: "r", arg: 1, scope: !2108, file: !3, line: 1852, type: !1314)
!2111 = !DILocalVariable(name: "a", arg: 2, scope: !2108, file: !3, line: 1852, type: !1411)
!2112 = !DILocalVariable(name: "b", arg: 3, scope: !2108, file: !3, line: 1852, type: !14)
!2113 = !DILocalVariable(name: "an", scope: !2108, file: !3, line: 1854, type: !154)
!2114 = !DILocalVariable(name: "rp", scope: !2108, file: !3, line: 1855, type: !16)
!2115 = !DILocalVariable(name: "__cy", scope: !2116, file: !3, line: 1869, type: !12)
!2116 = distinct !DILexicalBlock(scope: !2117, file: !3, line: 1869, column: 7)
!2117 = distinct !DILexicalBlock(scope: !2118, file: !3, line: 1868, column: 5)
!2118 = distinct !DILexicalBlock(scope: !2119, file: !3, line: 1862, column: 12)
!2119 = distinct !DILexicalBlock(scope: !2108, file: !3, line: 1857, column: 7)
!2120 = !DILocation(line: 0, scope: !2108)
!2121 = !DILocation(line: 1854, column: 18, scope: !2108)
!2122 = !DILocation(line: 1855, column: 15, scope: !2108)
!2123 = !DILocation(line: 1857, column: 7, scope: !2108)
!2124 = !DILocation(line: 0, scope: !2116)
!2125 = !DILocation(line: 1869, column: 7, scope: !2116)
!2126 = !DILocation(line: 1859, column: 13, scope: !2127)
!2127 = distinct !DILexicalBlock(scope: !2119, file: !3, line: 1858, column: 5)
!2128 = !DILocation(line: 1860, column: 18, scope: !2127)
!2129 = !DILocation(line: 1860, column: 14, scope: !2127)
!2130 = !DILocation(line: 1860, column: 7, scope: !2127)
!2131 = !DILocation(line: 1862, column: 26, scope: !2118)
!2132 = !DILocation(line: 1862, column: 23, scope: !2118)
!2133 = !DILocation(line: 1862, column: 35, scope: !2118)
!2134 = !DILocation(line: 1862, column: 12, scope: !2119)
!2135 = !DILocation(line: 1864, column: 17, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2118, file: !3, line: 1863, column: 5)
!2137 = !DILocation(line: 1864, column: 13, scope: !2136)
!2138 = !DILocation(line: 1865, column: 7, scope: !2136)
!2139 = !DILocation(line: 1869, column: 7, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2141, file: !3, line: 1869, column: 7)
!2141 = distinct !DILexicalBlock(scope: !2116, file: !3, line: 1869, column: 7)
!2142 = !DILocation(line: 1869, column: 7, scope: !2141)
!2143 = !DILocation(line: 1870, column: 14, scope: !2117)
!2144 = !DILocation(line: 1870, column: 7, scope: !2117)
!2145 = !DILocation(line: 0, scope: !2119)
!2146 = !DILocation(line: 1872, column: 1, scope: !2108)
!2147 = distinct !DISubprogram(name: "mpz_sub_ui", scope: !3, file: !3, line: 1884, type: !2059, scopeLine: 1885, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2148)
!2148 = !{!2149, !2150, !2151}
!2149 = !DILocalVariable(name: "r", arg: 1, scope: !2147, file: !3, line: 1884, type: !1314)
!2150 = !DILocalVariable(name: "a", arg: 2, scope: !2147, file: !3, line: 1884, type: !1411)
!2151 = !DILocalVariable(name: "b", arg: 3, scope: !2147, file: !3, line: 1884, type: !14)
!2152 = !DILocation(line: 0, scope: !2147)
!2153 = !DILocation(line: 1886, column: 10, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !2147, file: !3, line: 1886, column: 7)
!2155 = !DILocation(line: 1886, column: 19, scope: !2154)
!2156 = !DILocation(line: 1886, column: 7, scope: !2147)
!2157 = !DILocation(line: 1887, column: 20, scope: !2154)
!2158 = !DILocation(line: 1887, column: 19, scope: !2154)
!2159 = !DILocation(line: 1887, column: 8, scope: !2154)
!2160 = !DILocation(line: 1887, column: 17, scope: !2154)
!2161 = !DILocation(line: 1887, column: 5, scope: !2154)
!2162 = !DILocation(line: 1889, column: 19, scope: !2154)
!2163 = !DILocation(line: 1889, column: 8, scope: !2154)
!2164 = !DILocation(line: 1889, column: 17, scope: !2154)
!2165 = !DILocation(line: 1890, column: 1, scope: !2147)
!2166 = distinct !DISubprogram(name: "mpz_ui_sub", scope: !3, file: !3, line: 1893, type: !2167, scopeLine: 1894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2169)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{null, !1314, !14, !1411}
!2169 = !{!2170, !2171, !2172}
!2170 = !DILocalVariable(name: "r", arg: 1, scope: !2166, file: !3, line: 1893, type: !1314)
!2171 = !DILocalVariable(name: "a", arg: 2, scope: !2166, file: !3, line: 1893, type: !14)
!2172 = !DILocalVariable(name: "b", arg: 3, scope: !2166, file: !3, line: 1893, type: !1411)
!2173 = !DILocation(line: 0, scope: !2166)
!2174 = !DILocation(line: 1895, column: 10, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2166, file: !3, line: 1895, column: 7)
!2176 = !DILocation(line: 1895, column: 19, scope: !2175)
!2177 = !DILocation(line: 1895, column: 7, scope: !2166)
!2178 = !DILocation(line: 1896, column: 19, scope: !2175)
!2179 = !DILocation(line: 1896, column: 8, scope: !2175)
!2180 = !DILocation(line: 1896, column: 17, scope: !2175)
!2181 = !DILocation(line: 1896, column: 5, scope: !2175)
!2182 = !DILocation(line: 1898, column: 20, scope: !2175)
!2183 = !DILocation(line: 1898, column: 19, scope: !2175)
!2184 = !DILocation(line: 1898, column: 8, scope: !2175)
!2185 = !DILocation(line: 1898, column: 17, scope: !2175)
!2186 = !DILocation(line: 1899, column: 1, scope: !2166)
!2187 = distinct !DISubprogram(name: "mpz_add", scope: !3, file: !3, line: 1949, type: !2188, scopeLine: 1950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2190)
!2188 = !DISubroutineType(types: !2189)
!2189 = !{null, !1314, !1411, !1411}
!2190 = !{!2191, !2192, !2193, !2194}
!2191 = !DILocalVariable(name: "r", arg: 1, scope: !2187, file: !3, line: 1949, type: !1314)
!2192 = !DILocalVariable(name: "a", arg: 2, scope: !2187, file: !3, line: 1949, type: !1411)
!2193 = !DILocalVariable(name: "b", arg: 3, scope: !2187, file: !3, line: 1949, type: !1411)
!2194 = !DILocalVariable(name: "rn", scope: !2187, file: !3, line: 1951, type: !154)
!2195 = !DILocation(line: 0, scope: !2187)
!2196 = !DILocation(line: 1953, column: 12, scope: !2197)
!2197 = distinct !DILexicalBlock(scope: !2187, file: !3, line: 1953, column: 8)
!2198 = !DILocation(line: 1953, column: 26, scope: !2197)
!2199 = !DILocation(line: 1953, column: 21, scope: !2197)
!2200 = !DILocation(line: 1953, column: 36, scope: !2197)
!2201 = !DILocation(line: 1953, column: 8, scope: !2187)
!2202 = !DILocation(line: 1954, column: 10, scope: !2197)
!2203 = !DILocation(line: 1954, column: 5, scope: !2197)
!2204 = !DILocation(line: 1956, column: 10, scope: !2197)
!2205 = !DILocation(line: 0, scope: !2197)
!2206 = !DILocation(line: 1958, column: 20, scope: !2187)
!2207 = !DILocation(line: 1958, column: 29, scope: !2187)
!2208 = !DILocation(line: 1958, column: 17, scope: !2187)
!2209 = !DILocation(line: 1958, column: 6, scope: !2187)
!2210 = !DILocation(line: 1958, column: 15, scope: !2187)
!2211 = !DILocation(line: 1959, column: 1, scope: !2187)
!2212 = distinct !DISubprogram(name: "mpz_abs_add", scope: !3, file: !3, line: 1902, type: !2213, scopeLine: 1903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2215)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{!154, !1314, !1411, !1411}
!2215 = !{!2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2227}
!2216 = !DILocalVariable(name: "r", arg: 1, scope: !2212, file: !3, line: 1902, type: !1314)
!2217 = !DILocalVariable(name: "a", arg: 2, scope: !2212, file: !3, line: 1902, type: !1411)
!2218 = !DILocalVariable(name: "b", arg: 3, scope: !2212, file: !3, line: 1902, type: !1411)
!2219 = !DILocalVariable(name: "an", scope: !2212, file: !3, line: 1904, type: !154)
!2220 = !DILocalVariable(name: "bn", scope: !2212, file: !3, line: 1905, type: !154)
!2221 = !DILocalVariable(name: "rp", scope: !2212, file: !3, line: 1906, type: !16)
!2222 = !DILocalVariable(name: "cy", scope: !2212, file: !3, line: 1907, type: !12)
!2223 = !DILocalVariable(name: "__mpz_srcptr_swap__tmp", scope: !2224, file: !3, line: 1911, type: !1591)
!2224 = distinct !DILexicalBlock(scope: !2225, file: !3, line: 1911, column: 7)
!2225 = distinct !DILexicalBlock(scope: !2226, file: !3, line: 1910, column: 5)
!2226 = distinct !DILexicalBlock(scope: !2212, file: !3, line: 1909, column: 7)
!2227 = !DILocalVariable(name: "__mp_size_t_swap__tmp", scope: !2228, file: !3, line: 1912, type: !154)
!2228 = distinct !DILexicalBlock(scope: !2225, file: !3, line: 1912, column: 7)
!2229 = !DILocation(line: 0, scope: !2212)
!2230 = !DILocation(line: 1904, column: 18, scope: !2212)
!2231 = !DILocation(line: 1905, column: 18, scope: !2212)
!2232 = !DILocation(line: 1909, column: 10, scope: !2226)
!2233 = !DILocation(line: 1909, column: 7, scope: !2212)
!2234 = !DILocation(line: 1915, column: 8, scope: !2212)
!2235 = !DILocation(line: 1916, column: 24, scope: !2212)
!2236 = !DILocation(line: 1916, column: 38, scope: !2212)
!2237 = !DILocation(line: 1916, column: 8, scope: !2212)
!2238 = !DILocation(line: 1918, column: 3, scope: !2212)
!2239 = !DILocation(line: 1918, column: 10, scope: !2212)
!2240 = !DILocation(line: 1920, column: 13, scope: !2212)
!2241 = !DILocation(line: 1920, column: 3, scope: !2212)
!2242 = distinct !DISubprogram(name: "mpz_abs_sub", scope: !3, file: !3, line: 1924, type: !2213, scopeLine: 1925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2255}
!2244 = !DILocalVariable(name: "r", arg: 1, scope: !2242, file: !3, line: 1924, type: !1314)
!2245 = !DILocalVariable(name: "a", arg: 2, scope: !2242, file: !3, line: 1924, type: !1411)
!2246 = !DILocalVariable(name: "b", arg: 3, scope: !2242, file: !3, line: 1924, type: !1411)
!2247 = !DILocalVariable(name: "an", scope: !2242, file: !3, line: 1926, type: !154)
!2248 = !DILocalVariable(name: "bn", scope: !2242, file: !3, line: 1927, type: !154)
!2249 = !DILocalVariable(name: "cmp", scope: !2242, file: !3, line: 1928, type: !19)
!2250 = !DILocalVariable(name: "rp", scope: !2242, file: !3, line: 1929, type: !16)
!2251 = !DILocalVariable(name: "__cy", scope: !2252, file: !3, line: 1935, type: !12)
!2252 = distinct !DILexicalBlock(scope: !2253, file: !3, line: 1935, column: 7)
!2253 = distinct !DILexicalBlock(scope: !2254, file: !3, line: 1933, column: 5)
!2254 = distinct !DILexicalBlock(scope: !2242, file: !3, line: 1932, column: 7)
!2255 = !DILocalVariable(name: "__cy", scope: !2256, file: !3, line: 1941, type: !12)
!2256 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 1941, column: 7)
!2257 = distinct !DILexicalBlock(scope: !2258, file: !3, line: 1939, column: 5)
!2258 = distinct !DILexicalBlock(scope: !2254, file: !3, line: 1938, column: 12)
!2259 = !DILocation(line: 0, scope: !2242)
!2260 = !DILocation(line: 1926, column: 18, scope: !2242)
!2261 = !DILocation(line: 1927, column: 18, scope: !2242)
!2262 = !DILocation(line: 1931, column: 22, scope: !2242)
!2263 = !DILocation(line: 1931, column: 36, scope: !2242)
!2264 = !DILocation(line: 1931, column: 9, scope: !2242)
!2265 = !DILocation(line: 1932, column: 11, scope: !2254)
!2266 = !DILocation(line: 1932, column: 7, scope: !2242)
!2267 = !DILocation(line: 1934, column: 12, scope: !2253)
!2268 = !DILocation(line: 1935, column: 7, scope: !2252)
!2269 = !DILocation(line: 0, scope: !2252)
!2270 = !DILocation(line: 1935, column: 7, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2272, file: !3, line: 1935, column: 7)
!2272 = distinct !DILexicalBlock(scope: !2252, file: !3, line: 1935, column: 7)
!2273 = !DILocation(line: 1935, column: 7, scope: !2272)
!2274 = !DILocation(line: 1936, column: 14, scope: !2253)
!2275 = !DILocation(line: 1936, column: 7, scope: !2253)
!2276 = !DILocation(line: 1938, column: 16, scope: !2258)
!2277 = !DILocation(line: 1938, column: 12, scope: !2254)
!2278 = !DILocation(line: 1940, column: 12, scope: !2257)
!2279 = !DILocation(line: 1941, column: 7, scope: !2256)
!2280 = !DILocation(line: 0, scope: !2256)
!2281 = !DILocation(line: 1941, column: 7, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2283, file: !3, line: 1941, column: 7)
!2283 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 1941, column: 7)
!2284 = !DILocation(line: 1941, column: 7, scope: !2283)
!2285 = !DILocation(line: 1942, column: 15, scope: !2257)
!2286 = !DILocation(line: 1942, column: 14, scope: !2257)
!2287 = !DILocation(line: 1942, column: 7, scope: !2257)
!2288 = !DILocation(line: 0, scope: !2254)
!2289 = !DILocation(line: 1946, column: 1, scope: !2242)
!2290 = distinct !DISubprogram(name: "mpz_sub", scope: !3, file: !3, line: 1962, type: !2188, scopeLine: 1963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2291)
!2291 = !{!2292, !2293, !2294, !2295}
!2292 = !DILocalVariable(name: "r", arg: 1, scope: !2290, file: !3, line: 1962, type: !1314)
!2293 = !DILocalVariable(name: "a", arg: 2, scope: !2290, file: !3, line: 1962, type: !1411)
!2294 = !DILocalVariable(name: "b", arg: 3, scope: !2290, file: !3, line: 1962, type: !1411)
!2295 = !DILocalVariable(name: "rn", scope: !2290, file: !3, line: 1964, type: !154)
!2296 = !DILocation(line: 0, scope: !2290)
!2297 = !DILocation(line: 1966, column: 12, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2290, file: !3, line: 1966, column: 8)
!2299 = !DILocation(line: 1966, column: 26, scope: !2298)
!2300 = !DILocation(line: 1966, column: 21, scope: !2298)
!2301 = !DILocation(line: 1966, column: 36, scope: !2298)
!2302 = !DILocation(line: 1966, column: 8, scope: !2290)
!2303 = !DILocation(line: 1967, column: 10, scope: !2298)
!2304 = !DILocation(line: 1967, column: 5, scope: !2298)
!2305 = !DILocation(line: 1969, column: 10, scope: !2298)
!2306 = !DILocation(line: 0, scope: !2298)
!2307 = !DILocation(line: 1971, column: 20, scope: !2290)
!2308 = !DILocation(line: 1971, column: 29, scope: !2290)
!2309 = !DILocation(line: 1971, column: 17, scope: !2290)
!2310 = !DILocation(line: 1971, column: 6, scope: !2290)
!2311 = !DILocation(line: 1971, column: 15, scope: !2290)
!2312 = !DILocation(line: 1972, column: 1, scope: !2290)
!2313 = distinct !DISubprogram(name: "mpz_mul_si", scope: !3, file: !3, line: 1977, type: !2314, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2316)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{null, !1314, !1411, !15}
!2316 = !{!2317, !2318, !2319}
!2317 = !DILocalVariable(name: "r", arg: 1, scope: !2313, file: !3, line: 1977, type: !1314)
!2318 = !DILocalVariable(name: "u", arg: 2, scope: !2313, file: !3, line: 1977, type: !1411)
!2319 = !DILocalVariable(name: "v", arg: 3, scope: !2313, file: !3, line: 1977, type: !15)
!2320 = !DILocation(line: 0, scope: !2313)
!2321 = !DILocation(line: 1979, column: 9, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2313, file: !3, line: 1979, column: 7)
!2323 = !DILocation(line: 1979, column: 7, scope: !2313)
!2324 = !DILocation(line: 1981, column: 25, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 1980, column: 5)
!2326 = !DILocation(line: 1981, column: 7, scope: !2325)
!2327 = !DILocation(line: 1982, column: 7, scope: !2325)
!2328 = !DILocation(line: 1983, column: 5, scope: !2325)
!2329 = !DILocation(line: 1985, column: 5, scope: !2322)
!2330 = !DILocation(line: 1986, column: 1, scope: !2313)
!2331 = distinct !DISubprogram(name: "mpz_mul_ui", scope: !3, file: !3, line: 1989, type: !2059, scopeLine: 1990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2332)
!2332 = !{!2333, !2334, !2335, !2336, !2337, !2338, !2339}
!2333 = !DILocalVariable(name: "r", arg: 1, scope: !2331, file: !3, line: 1989, type: !1314)
!2334 = !DILocalVariable(name: "u", arg: 2, scope: !2331, file: !3, line: 1989, type: !1411)
!2335 = !DILocalVariable(name: "v", arg: 3, scope: !2331, file: !3, line: 1989, type: !14)
!2336 = !DILocalVariable(name: "un", scope: !2331, file: !3, line: 1991, type: !154)
!2337 = !DILocalVariable(name: "us", scope: !2331, file: !3, line: 1991, type: !154)
!2338 = !DILocalVariable(name: "tp", scope: !2331, file: !3, line: 1992, type: !16)
!2339 = !DILocalVariable(name: "cy", scope: !2331, file: !3, line: 1993, type: !12)
!2340 = !DILocation(line: 0, scope: !2331)
!2341 = !DILocation(line: 1995, column: 11, scope: !2331)
!2342 = !DILocation(line: 1995, column: 8, scope: !2331)
!2343 = !DILocation(line: 1997, column: 10, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2331, file: !3, line: 1997, column: 7)
!2345 = !DILocation(line: 1997, column: 20, scope: !2344)
!2346 = !DILocation(line: 1997, column: 15, scope: !2344)
!2347 = !DILocation(line: 1999, column: 10, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2344, file: !3, line: 1998, column: 5)
!2349 = !DILocation(line: 1999, column: 19, scope: !2348)
!2350 = !DILocation(line: 2000, column: 7, scope: !2348)
!2351 = !DILocation(line: 2003, column: 8, scope: !2331)
!2352 = !DILocation(line: 2005, column: 8, scope: !2331)
!2353 = !DILocation(line: 2006, column: 26, scope: !2331)
!2354 = !DILocation(line: 2006, column: 8, scope: !2331)
!2355 = !DILocation(line: 2007, column: 3, scope: !2331)
!2356 = !DILocation(line: 2007, column: 10, scope: !2331)
!2357 = !DILocation(line: 2009, column: 13, scope: !2331)
!2358 = !DILocation(line: 2009, column: 9, scope: !2331)
!2359 = !DILocation(line: 2009, column: 6, scope: !2331)
!2360 = !DILocation(line: 2010, column: 21, scope: !2331)
!2361 = !DILocation(line: 2010, column: 17, scope: !2331)
!2362 = !DILocation(line: 2010, column: 6, scope: !2331)
!2363 = !DILocation(line: 2010, column: 15, scope: !2331)
!2364 = !DILocation(line: 2011, column: 1, scope: !2331)
!2365 = distinct !DISubprogram(name: "mpz_mul", scope: !3, file: !3, line: 2014, type: !2188, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2366)
!2366 = !{!2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2379}
!2367 = !DILocalVariable(name: "r", arg: 1, scope: !2365, file: !3, line: 2014, type: !1314)
!2368 = !DILocalVariable(name: "u", arg: 2, scope: !2365, file: !3, line: 2014, type: !1411)
!2369 = !DILocalVariable(name: "v", arg: 3, scope: !2365, file: !3, line: 2014, type: !1411)
!2370 = !DILocalVariable(name: "sign", scope: !2365, file: !3, line: 2016, type: !19)
!2371 = !DILocalVariable(name: "un", scope: !2365, file: !3, line: 2017, type: !154)
!2372 = !DILocalVariable(name: "vn", scope: !2365, file: !3, line: 2017, type: !154)
!2373 = !DILocalVariable(name: "rn", scope: !2365, file: !3, line: 2017, type: !154)
!2374 = !DILocalVariable(name: "t", scope: !2365, file: !3, line: 2018, type: !2375)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "mpz_t", file: !13, line: 73, baseType: !2376)
!2376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1315, size: 128, elements: !2377)
!2377 = !{!2378}
!2378 = !DISubrange(count: 1)
!2379 = !DILocalVariable(name: "tp", scope: !2365, file: !3, line: 2019, type: !16)
!2380 = !DILocation(line: 0, scope: !2365)
!2381 = !DILocation(line: 2018, column: 3, scope: !2365)
!2382 = !DILocation(line: 2018, column: 9, scope: !2365)
!2383 = !DILocation(line: 2021, column: 11, scope: !2365)
!2384 = !DILocation(line: 2021, column: 8, scope: !2365)
!2385 = !DILocation(line: 2022, column: 11, scope: !2365)
!2386 = !DILocation(line: 2022, column: 8, scope: !2365)
!2387 = !DILocation(line: 2024, column: 10, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2365, file: !3, line: 2024, column: 7)
!2389 = !DILocation(line: 2024, column: 21, scope: !2388)
!2390 = !DILocation(line: 2024, column: 15, scope: !2388)
!2391 = !DILocation(line: 2026, column: 10, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2388, file: !3, line: 2025, column: 5)
!2393 = !DILocation(line: 2026, column: 19, scope: !2392)
!2394 = !DILocation(line: 2027, column: 7, scope: !2392)
!2395 = !DILocation(line: 2030, column: 14, scope: !2365)
!2396 = !DILocation(line: 2032, column: 8, scope: !2365)
!2397 = !DILocation(line: 2033, column: 8, scope: !2365)
!2398 = !DILocation(line: 2035, column: 14, scope: !2365)
!2399 = !DILocation(line: 2035, column: 21, scope: !2365)
!2400 = !DILocation(line: 2035, column: 27, scope: !2365)
!2401 = !DILocation(line: 2035, column: 3, scope: !2365)
!2402 = !DILocation(line: 2037, column: 11, scope: !2365)
!2403 = !DILocation(line: 2038, column: 10, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2365, file: !3, line: 2038, column: 7)
!2405 = !DILocation(line: 2038, column: 7, scope: !2365)
!2406 = !DILocation(line: 2039, column: 21, scope: !2404)
!2407 = !DILocation(line: 2039, column: 35, scope: !2404)
!2408 = !DILocation(line: 2039, column: 5, scope: !2404)
!2409 = !DILocation(line: 2041, column: 21, scope: !2404)
!2410 = !DILocation(line: 2041, column: 35, scope: !2404)
!2411 = !DILocation(line: 2041, column: 5, scope: !2404)
!2412 = !DILocation(line: 2044, column: 14, scope: !2365)
!2413 = !DILocation(line: 2044, column: 9, scope: !2365)
!2414 = !DILocation(line: 2044, column: 18, scope: !2365)
!2415 = !DILocation(line: 2044, column: 6, scope: !2365)
!2416 = !DILocation(line: 2046, column: 17, scope: !2365)
!2417 = !DILocation(line: 2046, column: 6, scope: !2365)
!2418 = !DILocation(line: 2046, column: 15, scope: !2365)
!2419 = !DILocation(line: 2047, column: 3, scope: !2365)
!2420 = !DILocation(line: 2048, column: 3, scope: !2365)
!2421 = !DILocation(line: 2049, column: 1, scope: !2365)
!2422 = distinct !DISubprogram(name: "mpz_mul_2exp", scope: !3, file: !3, line: 2052, type: !2423, scopeLine: 2053, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2425)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{null, !1314, !1411, !20}
!2425 = !{!2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434}
!2426 = !DILocalVariable(name: "r", arg: 1, scope: !2422, file: !3, line: 2052, type: !1314)
!2427 = !DILocalVariable(name: "u", arg: 2, scope: !2422, file: !3, line: 2052, type: !1411)
!2428 = !DILocalVariable(name: "bits", arg: 3, scope: !2422, file: !3, line: 2052, type: !20)
!2429 = !DILocalVariable(name: "un", scope: !2422, file: !3, line: 2054, type: !154)
!2430 = !DILocalVariable(name: "rn", scope: !2422, file: !3, line: 2054, type: !154)
!2431 = !DILocalVariable(name: "limbs", scope: !2422, file: !3, line: 2055, type: !154)
!2432 = !DILocalVariable(name: "shift", scope: !2422, file: !3, line: 2056, type: !6)
!2433 = !DILocalVariable(name: "rp", scope: !2422, file: !3, line: 2057, type: !16)
!2434 = !DILocalVariable(name: "cy", scope: !2435, file: !3, line: 2073, type: !12)
!2435 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 2072, column: 5)
!2436 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 2071, column: 7)
!2437 = !DILocation(line: 0, scope: !2422)
!2438 = !DILocation(line: 2059, column: 8, scope: !2422)
!2439 = !DILocation(line: 2060, column: 10, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 2060, column: 7)
!2441 = !DILocation(line: 2060, column: 7, scope: !2422)
!2442 = !DILocation(line: 2062, column: 10, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2440, file: !3, line: 2061, column: 5)
!2444 = !DILocation(line: 2062, column: 19, scope: !2443)
!2445 = !DILocation(line: 2063, column: 7, scope: !2443)
!2446 = !DILocation(line: 2066, column: 16, scope: !2422)
!2447 = !DILocation(line: 2067, column: 11, scope: !2422)
!2448 = !DILocation(line: 2069, column: 11, scope: !2422)
!2449 = !DILocation(line: 2069, column: 28, scope: !2422)
!2450 = !DILocation(line: 2069, column: 21, scope: !2422)
!2451 = !DILocation(line: 2069, column: 19, scope: !2422)
!2452 = !DILocation(line: 2070, column: 8, scope: !2422)
!2453 = !DILocation(line: 2071, column: 13, scope: !2436)
!2454 = !DILocation(line: 0, scope: !2436)
!2455 = !DILocation(line: 2071, column: 7, scope: !2422)
!2456 = !DILocation(line: 2073, column: 22, scope: !2435)
!2457 = !DILocation(line: 0, scope: !2435)
!2458 = !DILocation(line: 2074, column: 12, scope: !2435)
!2459 = !DILocation(line: 2074, column: 7, scope: !2435)
!2460 = !DILocation(line: 2074, column: 16, scope: !2435)
!2461 = !DILocation(line: 2075, column: 17, scope: !2435)
!2462 = !DILocation(line: 2075, column: 13, scope: !2435)
!2463 = !DILocation(line: 2075, column: 10, scope: !2435)
!2464 = !DILocation(line: 2076, column: 5, scope: !2435)
!2465 = !DILocation(line: 2078, column: 5, scope: !2436)
!2466 = !DILocation(line: 2080, column: 3, scope: !2422)
!2467 = !DILocation(line: 2080, column: 16, scope: !2422)
!2468 = !DILocation(line: 2081, column: 8, scope: !2422)
!2469 = !DILocation(line: 2081, column: 5, scope: !2422)
!2470 = !DILocation(line: 2081, column: 17, scope: !2422)
!2471 = distinct !{!2471, !2466, !2472}
!2472 = !DILocation(line: 2081, column: 19, scope: !2422)
!2473 = !DILocation(line: 2083, column: 21, scope: !2422)
!2474 = !DILocation(line: 2083, column: 30, scope: !2422)
!2475 = !DILocation(line: 2083, column: 17, scope: !2422)
!2476 = !DILocation(line: 2083, column: 6, scope: !2422)
!2477 = !DILocation(line: 2083, column: 15, scope: !2422)
!2478 = !DILocation(line: 2084, column: 1, scope: !2422)
!2479 = distinct !DISubprogram(name: "mpz_addmul_ui", scope: !3, file: !3, line: 2087, type: !2059, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2480)
!2480 = !{!2481, !2482, !2483, !2484}
!2481 = !DILocalVariable(name: "r", arg: 1, scope: !2479, file: !3, line: 2087, type: !1314)
!2482 = !DILocalVariable(name: "u", arg: 2, scope: !2479, file: !3, line: 2087, type: !1411)
!2483 = !DILocalVariable(name: "v", arg: 3, scope: !2479, file: !3, line: 2087, type: !14)
!2484 = !DILocalVariable(name: "t", scope: !2479, file: !3, line: 2089, type: !2375)
!2485 = !DILocation(line: 0, scope: !2479)
!2486 = !DILocation(line: 2089, column: 3, scope: !2479)
!2487 = !DILocation(line: 2089, column: 9, scope: !2479)
!2488 = !DILocation(line: 2090, column: 13, scope: !2479)
!2489 = !DILocation(line: 2090, column: 3, scope: !2479)
!2490 = !DILocation(line: 2091, column: 3, scope: !2479)
!2491 = !DILocation(line: 2092, column: 3, scope: !2479)
!2492 = !DILocation(line: 2093, column: 3, scope: !2479)
!2493 = !DILocation(line: 2094, column: 1, scope: !2479)
!2494 = distinct !DISubprogram(name: "mpz_submul_ui", scope: !3, file: !3, line: 2097, type: !2059, scopeLine: 2098, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2495)
!2495 = !{!2496, !2497, !2498, !2499}
!2496 = !DILocalVariable(name: "r", arg: 1, scope: !2494, file: !3, line: 2097, type: !1314)
!2497 = !DILocalVariable(name: "u", arg: 2, scope: !2494, file: !3, line: 2097, type: !1411)
!2498 = !DILocalVariable(name: "v", arg: 3, scope: !2494, file: !3, line: 2097, type: !14)
!2499 = !DILocalVariable(name: "t", scope: !2494, file: !3, line: 2099, type: !2375)
!2500 = !DILocation(line: 0, scope: !2494)
!2501 = !DILocation(line: 2099, column: 3, scope: !2494)
!2502 = !DILocation(line: 2099, column: 9, scope: !2494)
!2503 = !DILocation(line: 2100, column: 13, scope: !2494)
!2504 = !DILocation(line: 2100, column: 3, scope: !2494)
!2505 = !DILocation(line: 2101, column: 3, scope: !2494)
!2506 = !DILocation(line: 2102, column: 3, scope: !2494)
!2507 = !DILocation(line: 2103, column: 3, scope: !2494)
!2508 = !DILocation(line: 2104, column: 1, scope: !2494)
!2509 = distinct !DISubprogram(name: "mpz_addmul", scope: !3, file: !3, line: 2107, type: !2188, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2510)
!2510 = !{!2511, !2512, !2513, !2514}
!2511 = !DILocalVariable(name: "r", arg: 1, scope: !2509, file: !3, line: 2107, type: !1314)
!2512 = !DILocalVariable(name: "u", arg: 2, scope: !2509, file: !3, line: 2107, type: !1411)
!2513 = !DILocalVariable(name: "v", arg: 3, scope: !2509, file: !3, line: 2107, type: !1411)
!2514 = !DILocalVariable(name: "t", scope: !2509, file: !3, line: 2109, type: !2375)
!2515 = !DILocation(line: 0, scope: !2509)
!2516 = !DILocation(line: 2109, column: 3, scope: !2509)
!2517 = !DILocation(line: 2109, column: 9, scope: !2509)
!2518 = !DILocation(line: 2110, column: 13, scope: !2509)
!2519 = !DILocation(line: 2110, column: 3, scope: !2509)
!2520 = !DILocation(line: 2111, column: 3, scope: !2509)
!2521 = !DILocation(line: 2112, column: 3, scope: !2509)
!2522 = !DILocation(line: 2113, column: 3, scope: !2509)
!2523 = !DILocation(line: 2114, column: 1, scope: !2509)
!2524 = distinct !DISubprogram(name: "mpz_submul", scope: !3, file: !3, line: 2117, type: !2188, scopeLine: 2118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2525)
!2525 = !{!2526, !2527, !2528, !2529}
!2526 = !DILocalVariable(name: "r", arg: 1, scope: !2524, file: !3, line: 2117, type: !1314)
!2527 = !DILocalVariable(name: "u", arg: 2, scope: !2524, file: !3, line: 2117, type: !1411)
!2528 = !DILocalVariable(name: "v", arg: 3, scope: !2524, file: !3, line: 2117, type: !1411)
!2529 = !DILocalVariable(name: "t", scope: !2524, file: !3, line: 2119, type: !2375)
!2530 = !DILocation(line: 0, scope: !2524)
!2531 = !DILocation(line: 2119, column: 3, scope: !2524)
!2532 = !DILocation(line: 2119, column: 9, scope: !2524)
!2533 = !DILocation(line: 2120, column: 13, scope: !2524)
!2534 = !DILocation(line: 2120, column: 3, scope: !2524)
!2535 = !DILocation(line: 2121, column: 3, scope: !2524)
!2536 = !DILocation(line: 2122, column: 3, scope: !2524)
!2537 = !DILocation(line: 2123, column: 3, scope: !2524)
!2538 = !DILocation(line: 2124, column: 1, scope: !2524)
!2539 = distinct !DISubprogram(name: "mpz_cdiv_qr", scope: !3, file: !3, line: 2244, type: !2540, scopeLine: 2245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2542)
!2540 = !DISubroutineType(types: !2541)
!2541 = !{null, !1314, !1314, !1411, !1411}
!2542 = !{!2543, !2544, !2545, !2546}
!2543 = !DILocalVariable(name: "q", arg: 1, scope: !2539, file: !3, line: 2244, type: !1314)
!2544 = !DILocalVariable(name: "r", arg: 2, scope: !2539, file: !3, line: 2244, type: !1314)
!2545 = !DILocalVariable(name: "n", arg: 3, scope: !2539, file: !3, line: 2244, type: !1411)
!2546 = !DILocalVariable(name: "d", arg: 4, scope: !2539, file: !3, line: 2244, type: !1411)
!2547 = !DILocation(line: 0, scope: !2539)
!2548 = !DILocation(line: 2246, column: 3, scope: !2539)
!2549 = !DILocation(line: 2247, column: 1, scope: !2539)
!2550 = distinct !DISubprogram(name: "mpz_div_qr", scope: !3, file: !3, line: 2132, type: !2551, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2553)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{!19, !1314, !1314, !1411, !1411, !5}
!2553 = !{!2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2567, !2568, !2569, !2570, !2571}
!2554 = !DILocalVariable(name: "q", arg: 1, scope: !2550, file: !3, line: 2132, type: !1314)
!2555 = !DILocalVariable(name: "r", arg: 2, scope: !2550, file: !3, line: 2132, type: !1314)
!2556 = !DILocalVariable(name: "n", arg: 3, scope: !2550, file: !3, line: 2133, type: !1411)
!2557 = !DILocalVariable(name: "d", arg: 4, scope: !2550, file: !3, line: 2133, type: !1411)
!2558 = !DILocalVariable(name: "mode", arg: 5, scope: !2550, file: !3, line: 2133, type: !5)
!2559 = !DILocalVariable(name: "ns", scope: !2550, file: !3, line: 2135, type: !154)
!2560 = !DILocalVariable(name: "ds", scope: !2550, file: !3, line: 2135, type: !154)
!2561 = !DILocalVariable(name: "nn", scope: !2550, file: !3, line: 2135, type: !154)
!2562 = !DILocalVariable(name: "dn", scope: !2550, file: !3, line: 2135, type: !154)
!2563 = !DILocalVariable(name: "qs", scope: !2550, file: !3, line: 2135, type: !154)
!2564 = !DILocalVariable(name: "np", scope: !2565, file: !3, line: 2186, type: !16)
!2565 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 2185, column: 5)
!2566 = distinct !DILexicalBlock(scope: !2550, file: !3, line: 2156, column: 7)
!2567 = !DILocalVariable(name: "qp", scope: !2565, file: !3, line: 2186, type: !16)
!2568 = !DILocalVariable(name: "qn", scope: !2565, file: !3, line: 2187, type: !154)
!2569 = !DILocalVariable(name: "rn", scope: !2565, file: !3, line: 2187, type: !154)
!2570 = !DILocalVariable(name: "tq", scope: !2565, file: !3, line: 2188, type: !2375)
!2571 = !DILocalVariable(name: "tr", scope: !2565, file: !3, line: 2188, type: !2375)
!2572 = !DILocation(line: 0, scope: !2550)
!2573 = !DILocation(line: 2136, column: 11, scope: !2550)
!2574 = !DILocation(line: 2136, column: 8, scope: !2550)
!2575 = !DILocation(line: 2137, column: 11, scope: !2550)
!2576 = !DILocation(line: 2137, column: 8, scope: !2550)
!2577 = !DILocation(line: 2139, column: 10, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2550, file: !3, line: 2139, column: 7)
!2579 = !DILocation(line: 2139, column: 7, scope: !2550)
!2580 = !DILocation(line: 2140, column: 5, scope: !2578)
!2581 = !DILocation(line: 2142, column: 10, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2550, file: !3, line: 2142, column: 7)
!2583 = !DILocation(line: 2142, column: 7, scope: !2550)
!2584 = !DILocation(line: 2144, column: 11, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2586, file: !3, line: 2144, column: 11)
!2586 = distinct !DILexicalBlock(scope: !2582, file: !3, line: 2143, column: 5)
!2587 = !DILocation(line: 2144, column: 11, scope: !2586)
!2588 = !DILocation(line: 2145, column: 5, scope: !2585)
!2589 = !DILocation(line: 2145, column: 14, scope: !2585)
!2590 = !DILocation(line: 2145, column: 2, scope: !2585)
!2591 = !DILocation(line: 2146, column: 11, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2586, file: !3, line: 2146, column: 11)
!2593 = !DILocation(line: 2146, column: 11, scope: !2586)
!2594 = !DILocation(line: 2147, column: 5, scope: !2592)
!2595 = !DILocation(line: 2147, column: 14, scope: !2592)
!2596 = !DILocation(line: 2147, column: 2, scope: !2592)
!2597 = !DILocation(line: 2151, column: 8, scope: !2550)
!2598 = !DILocation(line: 2152, column: 8, scope: !2550)
!2599 = !DILocation(line: 2154, column: 11, scope: !2550)
!2600 = !DILocation(line: 2156, column: 10, scope: !2566)
!2601 = !DILocation(line: 2156, column: 7, scope: !2550)
!2602 = !DILocation(line: 2158, column: 16, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2604, file: !3, line: 2158, column: 11)
!2604 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 2157, column: 5)
!2605 = !DILocation(line: 2158, column: 38, scope: !2603)
!2606 = !DILocation(line: 2158, column: 32, scope: !2603)
!2607 = !DILocation(line: 2161, column: 8, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 2161, column: 8)
!2609 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 2159, column: 2)
!2610 = !DILocation(line: 2161, column: 8, scope: !2609)
!2611 = !DILocation(line: 2162, column: 6, scope: !2608)
!2612 = !DILocation(line: 2163, column: 8, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 2163, column: 8)
!2614 = !DILocation(line: 2163, column: 8, scope: !2609)
!2615 = !DILocation(line: 2164, column: 6, scope: !2613)
!2616 = !DILocation(line: 2166, column: 21, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 2166, column: 16)
!2618 = !DILocation(line: 2166, column: 44, scope: !2617)
!2619 = !DILocation(line: 2166, column: 38, scope: !2617)
!2620 = !DILocation(line: 0, scope: !2617)
!2621 = !DILocation(line: 2169, column: 8, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2617, file: !3, line: 2167, column: 2)
!2623 = !DILocation(line: 2170, column: 6, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 2169, column: 8)
!2625 = !DILocation(line: 2171, column: 8, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 2171, column: 8)
!2627 = !DILocation(line: 2171, column: 8, scope: !2622)
!2628 = !DILocation(line: 2172, column: 6, scope: !2626)
!2629 = !DILocation(line: 2177, column: 8, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !2617, file: !3, line: 2175, column: 2)
!2631 = !DILocation(line: 2178, column: 6, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2630, file: !3, line: 2177, column: 8)
!2633 = !DILocation(line: 2179, column: 8, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2630, file: !3, line: 2179, column: 8)
!2635 = !DILocation(line: 2179, column: 8, scope: !2630)
!2636 = !DILocation(line: 2180, column: 9, scope: !2634)
!2637 = !DILocation(line: 2180, column: 18, scope: !2634)
!2638 = !DILocation(line: 2180, column: 6, scope: !2634)
!2639 = !DILocation(line: 2188, column: 7, scope: !2565)
!2640 = !DILocation(line: 2188, column: 13, scope: !2565)
!2641 = !DILocation(line: 2188, column: 17, scope: !2565)
!2642 = !DILocation(line: 2190, column: 21, scope: !2565)
!2643 = !DILocation(line: 2190, column: 7, scope: !2565)
!2644 = !DILocation(line: 2191, column: 16, scope: !2565)
!2645 = !DILocation(line: 0, scope: !2565)
!2646 = !DILocation(line: 2193, column: 15, scope: !2565)
!2647 = !DILocation(line: 2193, column: 20, scope: !2565)
!2648 = !DILocation(line: 2195, column: 11, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2565, file: !3, line: 2195, column: 11)
!2650 = !DILocation(line: 2195, column: 11, scope: !2565)
!2651 = !DILocation(line: 2197, column: 15, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 2196, column: 2)
!2653 = !DILocation(line: 2197, column: 22, scope: !2652)
!2654 = !DILocation(line: 2197, column: 4, scope: !2652)
!2655 = !DILocation(line: 2198, column: 13, scope: !2652)
!2656 = !DILocation(line: 2199, column: 2, scope: !2652)
!2657 = !DILocation(line: 0, scope: !2649)
!2658 = !DILocation(line: 2203, column: 34, scope: !2565)
!2659 = !DILocation(line: 2203, column: 7, scope: !2565)
!2660 = !DILocation(line: 2205, column: 11, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2565, file: !3, line: 2205, column: 11)
!2662 = !DILocation(line: 2205, column: 11, scope: !2565)
!2663 = !DILocation(line: 2207, column: 11, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 2206, column: 2)
!2665 = !DILocation(line: 2207, column: 20, scope: !2664)
!2666 = !DILocation(line: 2207, column: 10, scope: !2664)
!2667 = !DILocation(line: 2207, column: 7, scope: !2664)
!2668 = !DILocation(line: 2209, column: 22, scope: !2664)
!2669 = !DILocation(line: 2209, column: 19, scope: !2664)
!2670 = !DILocation(line: 2209, column: 8, scope: !2664)
!2671 = !DILocation(line: 2209, column: 17, scope: !2664)
!2672 = !DILocation(line: 2210, column: 2, scope: !2664)
!2673 = !DILocation(line: 2211, column: 12, scope: !2565)
!2674 = !DILocation(line: 2212, column: 25, scope: !2565)
!2675 = !DILocation(line: 2212, column: 22, scope: !2565)
!2676 = !DILocation(line: 2212, column: 11, scope: !2565)
!2677 = !DILocation(line: 2212, column: 20, scope: !2565)
!2678 = !DILocation(line: 2214, column: 16, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2565, file: !3, line: 2214, column: 11)
!2680 = !DILocation(line: 2214, column: 39, scope: !2679)
!2681 = !DILocation(line: 2214, column: 33, scope: !2679)
!2682 = !DILocation(line: 2214, column: 49, scope: !2679)
!2683 = !DILocation(line: 2216, column: 8, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 2215, column: 2)
!2685 = !DILocation(line: 2217, column: 18, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2684, file: !3, line: 2216, column: 8)
!2687 = !DILocation(line: 2217, column: 6, scope: !2686)
!2688 = !DILocation(line: 2218, column: 8, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2684, file: !3, line: 2218, column: 8)
!2690 = !DILocation(line: 2218, column: 8, scope: !2684)
!2691 = !DILocation(line: 2219, column: 6, scope: !2689)
!2692 = !DILocation(line: 2221, column: 21, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 2221, column: 16)
!2694 = !DILocation(line: 2221, column: 43, scope: !2693)
!2695 = !DILocation(line: 2221, column: 37, scope: !2693)
!2696 = !DILocation(line: 2223, column: 8, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2693, file: !3, line: 2222, column: 2)
!2698 = !DILocation(line: 2224, column: 18, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 2223, column: 8)
!2700 = !DILocation(line: 2224, column: 6, scope: !2699)
!2701 = !DILocation(line: 2225, column: 8, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 2225, column: 8)
!2703 = !DILocation(line: 2225, column: 8, scope: !2697)
!2704 = !DILocation(line: 2226, column: 6, scope: !2702)
!2705 = !DILocation(line: 2229, column: 11, scope: !2565)
!2706 = !DILocation(line: 2231, column: 14, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2708, file: !3, line: 2230, column: 2)
!2708 = distinct !DILexicalBlock(scope: !2565, file: !3, line: 2229, column: 11)
!2709 = !DILocation(line: 2231, column: 4, scope: !2707)
!2710 = !DILocation(line: 2232, column: 4, scope: !2707)
!2711 = !DILocation(line: 2233, column: 2, scope: !2707)
!2712 = !DILocation(line: 2234, column: 11, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2565, file: !3, line: 2234, column: 11)
!2714 = !DILocation(line: 2234, column: 11, scope: !2565)
!2715 = !DILocation(line: 2235, column: 2, scope: !2713)
!2716 = !DILocation(line: 2237, column: 7, scope: !2565)
!2717 = !DILocation(line: 2239, column: 17, scope: !2565)
!2718 = !DILocation(line: 2240, column: 5, scope: !2566)
!2719 = !DILocation(line: 2241, column: 1, scope: !2550)
!2720 = distinct !DISubprogram(name: "mpz_fdiv_qr", scope: !3, file: !3, line: 2250, type: !2540, scopeLine: 2251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2721)
!2721 = !{!2722, !2723, !2724, !2725}
!2722 = !DILocalVariable(name: "q", arg: 1, scope: !2720, file: !3, line: 2250, type: !1314)
!2723 = !DILocalVariable(name: "r", arg: 2, scope: !2720, file: !3, line: 2250, type: !1314)
!2724 = !DILocalVariable(name: "n", arg: 3, scope: !2720, file: !3, line: 2250, type: !1411)
!2725 = !DILocalVariable(name: "d", arg: 4, scope: !2720, file: !3, line: 2250, type: !1411)
!2726 = !DILocation(line: 0, scope: !2720)
!2727 = !DILocation(line: 2252, column: 3, scope: !2720)
!2728 = !DILocation(line: 2253, column: 1, scope: !2720)
!2729 = distinct !DISubprogram(name: "mpz_tdiv_qr", scope: !3, file: !3, line: 2256, type: !2540, scopeLine: 2257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2730)
!2730 = !{!2731, !2732, !2733, !2734}
!2731 = !DILocalVariable(name: "q", arg: 1, scope: !2729, file: !3, line: 2256, type: !1314)
!2732 = !DILocalVariable(name: "r", arg: 2, scope: !2729, file: !3, line: 2256, type: !1314)
!2733 = !DILocalVariable(name: "n", arg: 3, scope: !2729, file: !3, line: 2256, type: !1411)
!2734 = !DILocalVariable(name: "d", arg: 4, scope: !2729, file: !3, line: 2256, type: !1411)
!2735 = !DILocation(line: 0, scope: !2729)
!2736 = !DILocation(line: 2258, column: 3, scope: !2729)
!2737 = !DILocation(line: 2259, column: 1, scope: !2729)
!2738 = distinct !DISubprogram(name: "mpz_cdiv_q", scope: !3, file: !3, line: 2262, type: !2188, scopeLine: 2263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2739)
!2739 = !{!2740, !2741, !2742}
!2740 = !DILocalVariable(name: "q", arg: 1, scope: !2738, file: !3, line: 2262, type: !1314)
!2741 = !DILocalVariable(name: "n", arg: 2, scope: !2738, file: !3, line: 2262, type: !1411)
!2742 = !DILocalVariable(name: "d", arg: 3, scope: !2738, file: !3, line: 2262, type: !1411)
!2743 = !DILocation(line: 0, scope: !2738)
!2744 = !DILocation(line: 2264, column: 3, scope: !2738)
!2745 = !DILocation(line: 2265, column: 1, scope: !2738)
!2746 = distinct !DISubprogram(name: "mpz_fdiv_q", scope: !3, file: !3, line: 2268, type: !2188, scopeLine: 2269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2747)
!2747 = !{!2748, !2749, !2750}
!2748 = !DILocalVariable(name: "q", arg: 1, scope: !2746, file: !3, line: 2268, type: !1314)
!2749 = !DILocalVariable(name: "n", arg: 2, scope: !2746, file: !3, line: 2268, type: !1411)
!2750 = !DILocalVariable(name: "d", arg: 3, scope: !2746, file: !3, line: 2268, type: !1411)
!2751 = !DILocation(line: 0, scope: !2746)
!2752 = !DILocation(line: 2270, column: 3, scope: !2746)
!2753 = !DILocation(line: 2271, column: 1, scope: !2746)
!2754 = distinct !DISubprogram(name: "mpz_tdiv_q", scope: !3, file: !3, line: 2274, type: !2188, scopeLine: 2275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2755)
!2755 = !{!2756, !2757, !2758}
!2756 = !DILocalVariable(name: "q", arg: 1, scope: !2754, file: !3, line: 2274, type: !1314)
!2757 = !DILocalVariable(name: "n", arg: 2, scope: !2754, file: !3, line: 2274, type: !1411)
!2758 = !DILocalVariable(name: "d", arg: 3, scope: !2754, file: !3, line: 2274, type: !1411)
!2759 = !DILocation(line: 0, scope: !2754)
!2760 = !DILocation(line: 2276, column: 3, scope: !2754)
!2761 = !DILocation(line: 2277, column: 1, scope: !2754)
!2762 = distinct !DISubprogram(name: "mpz_cdiv_r", scope: !3, file: !3, line: 2280, type: !2188, scopeLine: 2281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2763)
!2763 = !{!2764, !2765, !2766}
!2764 = !DILocalVariable(name: "r", arg: 1, scope: !2762, file: !3, line: 2280, type: !1314)
!2765 = !DILocalVariable(name: "n", arg: 2, scope: !2762, file: !3, line: 2280, type: !1411)
!2766 = !DILocalVariable(name: "d", arg: 3, scope: !2762, file: !3, line: 2280, type: !1411)
!2767 = !DILocation(line: 0, scope: !2762)
!2768 = !DILocation(line: 2282, column: 3, scope: !2762)
!2769 = !DILocation(line: 2283, column: 1, scope: !2762)
!2770 = distinct !DISubprogram(name: "mpz_fdiv_r", scope: !3, file: !3, line: 2286, type: !2188, scopeLine: 2287, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2771)
!2771 = !{!2772, !2773, !2774}
!2772 = !DILocalVariable(name: "r", arg: 1, scope: !2770, file: !3, line: 2286, type: !1314)
!2773 = !DILocalVariable(name: "n", arg: 2, scope: !2770, file: !3, line: 2286, type: !1411)
!2774 = !DILocalVariable(name: "d", arg: 3, scope: !2770, file: !3, line: 2286, type: !1411)
!2775 = !DILocation(line: 0, scope: !2770)
!2776 = !DILocation(line: 2288, column: 3, scope: !2770)
!2777 = !DILocation(line: 2289, column: 1, scope: !2770)
!2778 = distinct !DISubprogram(name: "mpz_tdiv_r", scope: !3, file: !3, line: 2292, type: !2188, scopeLine: 2293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2779)
!2779 = !{!2780, !2781, !2782}
!2780 = !DILocalVariable(name: "r", arg: 1, scope: !2778, file: !3, line: 2292, type: !1314)
!2781 = !DILocalVariable(name: "n", arg: 2, scope: !2778, file: !3, line: 2292, type: !1411)
!2782 = !DILocalVariable(name: "d", arg: 3, scope: !2778, file: !3, line: 2292, type: !1411)
!2783 = !DILocation(line: 0, scope: !2778)
!2784 = !DILocation(line: 2294, column: 3, scope: !2778)
!2785 = !DILocation(line: 2295, column: 1, scope: !2778)
!2786 = distinct !DISubprogram(name: "mpz_mod", scope: !3, file: !3, line: 2298, type: !2188, scopeLine: 2299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2787)
!2787 = !{!2788, !2789, !2790}
!2788 = !DILocalVariable(name: "r", arg: 1, scope: !2786, file: !3, line: 2298, type: !1314)
!2789 = !DILocalVariable(name: "n", arg: 2, scope: !2786, file: !3, line: 2298, type: !1411)
!2790 = !DILocalVariable(name: "d", arg: 3, scope: !2786, file: !3, line: 2298, type: !1411)
!2791 = !DILocation(line: 0, scope: !2786)
!2792 = !DILocation(line: 2300, column: 33, scope: !2786)
!2793 = !DILocation(line: 2300, column: 30, scope: !2786)
!2794 = !DILocation(line: 2300, column: 3, scope: !2786)
!2795 = !DILocation(line: 2301, column: 1, scope: !2786)
!2796 = distinct !DISubprogram(name: "mpz_cdiv_q_2exp", scope: !3, file: !3, line: 2446, type: !2423, scopeLine: 2447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2797)
!2797 = !{!2798, !2799, !2800}
!2798 = !DILocalVariable(name: "r", arg: 1, scope: !2796, file: !3, line: 2446, type: !1314)
!2799 = !DILocalVariable(name: "u", arg: 2, scope: !2796, file: !3, line: 2446, type: !1411)
!2800 = !DILocalVariable(name: "cnt", arg: 3, scope: !2796, file: !3, line: 2446, type: !20)
!2801 = !DILocation(line: 0, scope: !2796)
!2802 = !DILocation(line: 2448, column: 3, scope: !2796)
!2803 = !DILocation(line: 2449, column: 1, scope: !2796)
!2804 = distinct !DISubprogram(name: "mpz_div_q_2exp", scope: !3, file: !3, line: 2304, type: !2805, scopeLine: 2306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2807)
!2805 = !DISubroutineType(types: !2806)
!2806 = !{null, !1314, !1411, !20, !5}
!2807 = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816}
!2808 = !DILocalVariable(name: "q", arg: 1, scope: !2804, file: !3, line: 2304, type: !1314)
!2809 = !DILocalVariable(name: "u", arg: 2, scope: !2804, file: !3, line: 2304, type: !1411)
!2810 = !DILocalVariable(name: "bit_index", arg: 3, scope: !2804, file: !3, line: 2304, type: !20)
!2811 = !DILocalVariable(name: "mode", arg: 4, scope: !2804, file: !3, line: 2305, type: !5)
!2812 = !DILocalVariable(name: "un", scope: !2804, file: !3, line: 2307, type: !154)
!2813 = !DILocalVariable(name: "qn", scope: !2804, file: !3, line: 2307, type: !154)
!2814 = !DILocalVariable(name: "limb_cnt", scope: !2804, file: !3, line: 2308, type: !154)
!2815 = !DILocalVariable(name: "qp", scope: !2804, file: !3, line: 2309, type: !16)
!2816 = !DILocalVariable(name: "adjust", scope: !2804, file: !3, line: 2310, type: !19)
!2817 = !DILocation(line: 0, scope: !2804)
!2818 = !DILocation(line: 2312, column: 11, scope: !2804)
!2819 = !DILocation(line: 2312, column: 8, scope: !2804)
!2820 = !DILocation(line: 2313, column: 10, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 2313, column: 7)
!2822 = !DILocation(line: 2313, column: 7, scope: !2804)
!2823 = !DILocation(line: 2315, column: 10, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 2314, column: 5)
!2825 = !DILocation(line: 2315, column: 19, scope: !2824)
!2826 = !DILocation(line: 2316, column: 7, scope: !2824)
!2827 = !DILocation(line: 2318, column: 24, scope: !2804)
!2828 = !DILocation(line: 2319, column: 8, scope: !2804)
!2829 = !DILocation(line: 2319, column: 21, scope: !2804)
!2830 = !DILocation(line: 2320, column: 13, scope: !2804)
!2831 = !DILocation(line: 2322, column: 20, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 2322, column: 7)
!2833 = !DILocation(line: 2322, column: 16, scope: !2832)
!2834 = !DILocation(line: 2322, column: 12, scope: !2832)
!2835 = !DILocation(line: 2322, column: 7, scope: !2804)
!2836 = !DILocation(line: 2325, column: 18, scope: !2832)
!2837 = !DILocation(line: 2326, column: 8, scope: !2832)
!2838 = !DILocation(line: 2326, column: 12, scope: !2832)
!2839 = !DILocation(line: 2327, column: 8, scope: !2832)
!2840 = !DILocation(line: 2327, column: 15, scope: !2832)
!2841 = !DILocation(line: 2327, column: 12, scope: !2832)
!2842 = !DILocation(line: 2328, column: 37, scope: !2832)
!2843 = !DILocation(line: 2328, column: 5, scope: !2832)
!2844 = !DILocation(line: 2325, column: 5, scope: !2832)
!2845 = !DILocation(line: 0, scope: !2832)
!2846 = !DILocation(line: 2332, column: 10, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 2332, column: 7)
!2848 = !DILocation(line: 2332, column: 7, scope: !2804)
!2849 = !DILocation(line: 2337, column: 12, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 2336, column: 5)
!2851 = !DILocation(line: 2339, column: 21, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 2339, column: 11)
!2853 = !DILocation(line: 0, scope: !2852)
!2854 = !DILocation(line: 2339, column: 11, scope: !2850)
!2855 = !DILocation(line: 2341, column: 45, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2852, file: !3, line: 2340, column: 2)
!2857 = !DILocation(line: 2341, column: 4, scope: !2856)
!2858 = !DILocation(line: 2342, column: 16, scope: !2856)
!2859 = !DILocation(line: 2342, column: 10, scope: !2856)
!2860 = !DILocation(line: 2342, column: 21, scope: !2856)
!2861 = !DILocation(line: 2342, column: 7, scope: !2856)
!2862 = !DILocation(line: 2343, column: 2, scope: !2856)
!2863 = !DILocation(line: 2346, column: 4, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2852, file: !3, line: 2345, column: 2)
!2865 = !DILocation(line: 0, scope: !2847)
!2866 = !DILocation(line: 2350, column: 17, scope: !2804)
!2867 = !DILocation(line: 2350, column: 6, scope: !2804)
!2868 = !DILocation(line: 2350, column: 15, scope: !2804)
!2869 = !DILocation(line: 2352, column: 7, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 2352, column: 7)
!2871 = !DILocation(line: 2352, column: 7, scope: !2804)
!2872 = !DILocation(line: 2353, column: 5, scope: !2870)
!2873 = !DILocation(line: 2354, column: 10, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 2354, column: 7)
!2875 = !DILocation(line: 2354, column: 7, scope: !2804)
!2876 = !DILocation(line: 2355, column: 5, scope: !2874)
!2877 = !DILocation(line: 2356, column: 1, scope: !2804)
!2878 = distinct !DISubprogram(name: "mpz_fdiv_q_2exp", scope: !3, file: !3, line: 2452, type: !2423, scopeLine: 2453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2879)
!2879 = !{!2880, !2881, !2882}
!2880 = !DILocalVariable(name: "r", arg: 1, scope: !2878, file: !3, line: 2452, type: !1314)
!2881 = !DILocalVariable(name: "u", arg: 2, scope: !2878, file: !3, line: 2452, type: !1411)
!2882 = !DILocalVariable(name: "cnt", arg: 3, scope: !2878, file: !3, line: 2452, type: !20)
!2883 = !DILocation(line: 0, scope: !2878)
!2884 = !DILocation(line: 2454, column: 3, scope: !2878)
!2885 = !DILocation(line: 2455, column: 1, scope: !2878)
!2886 = distinct !DISubprogram(name: "mpz_tdiv_q_2exp", scope: !3, file: !3, line: 2458, type: !2423, scopeLine: 2459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2887)
!2887 = !{!2888, !2889, !2890}
!2888 = !DILocalVariable(name: "r", arg: 1, scope: !2886, file: !3, line: 2458, type: !1314)
!2889 = !DILocalVariable(name: "u", arg: 2, scope: !2886, file: !3, line: 2458, type: !1411)
!2890 = !DILocalVariable(name: "cnt", arg: 3, scope: !2886, file: !3, line: 2458, type: !20)
!2891 = !DILocation(line: 0, scope: !2886)
!2892 = !DILocation(line: 2460, column: 3, scope: !2886)
!2893 = !DILocation(line: 2461, column: 1, scope: !2886)
!2894 = distinct !DISubprogram(name: "mpz_cdiv_r_2exp", scope: !3, file: !3, line: 2464, type: !2423, scopeLine: 2465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2895)
!2895 = !{!2896, !2897, !2898}
!2896 = !DILocalVariable(name: "r", arg: 1, scope: !2894, file: !3, line: 2464, type: !1314)
!2897 = !DILocalVariable(name: "u", arg: 2, scope: !2894, file: !3, line: 2464, type: !1411)
!2898 = !DILocalVariable(name: "cnt", arg: 3, scope: !2894, file: !3, line: 2464, type: !20)
!2899 = !DILocation(line: 0, scope: !2894)
!2900 = !DILocation(line: 2466, column: 3, scope: !2894)
!2901 = !DILocation(line: 2467, column: 1, scope: !2894)
!2902 = distinct !DISubprogram(name: "mpz_div_r_2exp", scope: !3, file: !3, line: 2359, type: !2805, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2903)
!2903 = !{!2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2918, !2919, !2923}
!2904 = !DILocalVariable(name: "r", arg: 1, scope: !2902, file: !3, line: 2359, type: !1314)
!2905 = !DILocalVariable(name: "u", arg: 2, scope: !2902, file: !3, line: 2359, type: !1411)
!2906 = !DILocalVariable(name: "bit_index", arg: 3, scope: !2902, file: !3, line: 2359, type: !20)
!2907 = !DILocalVariable(name: "mode", arg: 4, scope: !2902, file: !3, line: 2360, type: !5)
!2908 = !DILocalVariable(name: "us", scope: !2902, file: !3, line: 2362, type: !154)
!2909 = !DILocalVariable(name: "un", scope: !2902, file: !3, line: 2362, type: !154)
!2910 = !DILocalVariable(name: "rn", scope: !2902, file: !3, line: 2362, type: !154)
!2911 = !DILocalVariable(name: "rp", scope: !2902, file: !3, line: 2363, type: !16)
!2912 = !DILocalVariable(name: "mask", scope: !2902, file: !3, line: 2364, type: !12)
!2913 = !DILocalVariable(name: "i", scope: !2914, file: !3, line: 2387, type: !154)
!2914 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 2385, column: 2)
!2915 = distinct !DILexicalBlock(scope: !2916, file: !3, line: 2384, column: 11)
!2916 = distinct !DILexicalBlock(scope: !2917, file: !3, line: 2381, column: 5)
!2917 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 2380, column: 7)
!2918 = !DILocalVariable(name: "cy", scope: !2914, file: !3, line: 2388, type: !12)
!2919 = !DILocalVariable(name: "s", scope: !2920, file: !3, line: 2392, type: !12)
!2920 = distinct !DILexicalBlock(scope: !2921, file: !3, line: 2391, column: 6)
!2921 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 2390, column: 4)
!2922 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 2390, column: 4)
!2923 = !DILocalVariable(name: "i", scope: !2924, file: !3, line: 2422, type: !154)
!2924 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 2420, column: 2)
!2925 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 2419, column: 11)
!2926 = distinct !DILexicalBlock(scope: !2917, file: !3, line: 2413, column: 5)
!2927 = !DILocation(line: 0, scope: !2902)
!2928 = !DILocation(line: 2366, column: 11, scope: !2902)
!2929 = !DILocation(line: 2366, column: 8, scope: !2902)
!2930 = !DILocation(line: 2367, column: 10, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 2367, column: 7)
!2932 = !DILocation(line: 2367, column: 28, scope: !2931)
!2933 = !DILocation(line: 2367, column: 15, scope: !2931)
!2934 = !DILocation(line: 2369, column: 10, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 2368, column: 5)
!2936 = !DILocation(line: 2369, column: 19, scope: !2935)
!2937 = !DILocation(line: 2370, column: 7, scope: !2935)
!2938 = !DILocation(line: 2372, column: 35, scope: !2902)
!2939 = !DILocation(line: 2372, column: 40, scope: !2902)
!2940 = !DILocation(line: 2373, column: 3, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !2942, file: !3, line: 2373, column: 3)
!2942 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 2373, column: 3)
!2943 = !DILocation(line: 2373, column: 3, scope: !2942)
!2944 = !DILocation(line: 2375, column: 8, scope: !2902)
!2945 = !DILocation(line: 2376, column: 8, scope: !2902)
!2946 = !DILocation(line: 2378, column: 30, scope: !2902)
!2947 = !DILocation(line: 2378, column: 46, scope: !2902)
!2948 = !DILocation(line: 2378, column: 23, scope: !2902)
!2949 = !DILocation(line: 2380, column: 10, scope: !2917)
!2950 = !DILocation(line: 2380, column: 7, scope: !2902)
!2951 = !DILocation(line: 2384, column: 24, scope: !2915)
!2952 = !DILocation(line: 2384, column: 20, scope: !2915)
!2953 = !DILocation(line: 2384, column: 16, scope: !2915)
!2954 = !DILocation(line: 2384, column: 11, scope: !2916)
!2955 = !DILocation(line: 0, scope: !2920)
!2956 = !DILocation(line: 2390, column: 4, scope: !2922)
!2957 = !DILocation(line: 0, scope: !2922)
!2958 = !DILocation(line: 0, scope: !2914)
!2959 = !DILocation(line: 2390, column: 26, scope: !2921)
!2960 = !DILocation(line: 2392, column: 26, scope: !2920)
!2961 = !DILocation(line: 2392, column: 23, scope: !2920)
!2962 = !DILocation(line: 2392, column: 22, scope: !2920)
!2963 = !DILocation(line: 2392, column: 35, scope: !2920)
!2964 = !DILocation(line: 2393, column: 15, scope: !2920)
!2965 = !DILocation(line: 2393, column: 13, scope: !2920)
!2966 = !DILocation(line: 2394, column: 8, scope: !2920)
!2967 = !DILocation(line: 2394, column: 14, scope: !2920)
!2968 = !DILocation(line: 2390, column: 33, scope: !2921)
!2969 = !DILocation(line: 2390, column: 4, scope: !2921)
!2970 = distinct !{!2970, !2956, !2971}
!2971 = !DILocation(line: 2395, column: 6, scope: !2922)
!2972 = !DILocation(line: 2396, column: 4, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 2396, column: 4)
!2974 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 2396, column: 4)
!2975 = !DILocation(line: 2396, column: 4, scope: !2974)
!2976 = !DILocation(line: 0, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 2397, column: 4)
!2978 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 2397, column: 4)
!2979 = !DILocation(line: 2397, column: 4, scope: !2978)
!2980 = !DILocation(line: 2397, column: 13, scope: !2977)
!2981 = !DILocation(line: 2398, column: 6, scope: !2977)
!2982 = !DILocation(line: 2398, column: 12, scope: !2977)
!2983 = !DILocation(line: 2397, column: 24, scope: !2977)
!2984 = !DILocation(line: 2397, column: 4, scope: !2977)
!2985 = distinct !{!2985, !2979, !2986}
!2986 = !DILocation(line: 2398, column: 14, scope: !2978)
!2987 = !DILocation(line: 2400, column: 4, scope: !2914)
!2988 = !DILocation(line: 2400, column: 13, scope: !2914)
!2989 = !DILocation(line: 2402, column: 2, scope: !2914)
!2990 = !DILocation(line: 2406, column: 10, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 2406, column: 8)
!2992 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 2404, column: 2)
!2993 = !DILocation(line: 2406, column: 8, scope: !2992)
!2994 = !DILocation(line: 2407, column: 24, scope: !2991)
!2995 = !DILocation(line: 2407, column: 6, scope: !2991)
!2996 = !DILocation(line: 2414, column: 13, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 2414, column: 11)
!2998 = !DILocation(line: 2414, column: 11, scope: !2926)
!2999 = !DILocation(line: 2417, column: 29, scope: !2926)
!3000 = !DILocation(line: 2415, column: 20, scope: !2997)
!3001 = !DILocation(line: 2415, column: 30, scope: !2997)
!3002 = !DILocation(line: 2415, column: 2, scope: !2997)
!3003 = !DILocation(line: 2417, column: 21, scope: !2926)
!3004 = !DILocation(line: 2417, column: 18, scope: !2926)
!3005 = !DILocation(line: 2417, column: 33, scope: !2926)
!3006 = !DILocation(line: 2417, column: 7, scope: !2926)
!3007 = !DILocation(line: 2417, column: 16, scope: !2926)
!3008 = !DILocation(line: 2419, column: 24, scope: !2925)
!3009 = !DILocation(line: 2419, column: 20, scope: !2925)
!3010 = !DILocation(line: 2419, column: 16, scope: !2925)
!3011 = !DILocation(line: 2419, column: 11, scope: !2926)
!3012 = !DILocation(line: 2424, column: 4, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 2424, column: 4)
!3014 = !DILocation(line: 0, scope: !3013)
!3015 = !DILocation(line: 0, scope: !2924)
!3016 = !DILocation(line: 2424, column: 18, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 2424, column: 4)
!3018 = !DILocation(line: 2424, column: 23, scope: !3017)
!3019 = !DILocation(line: 2424, column: 26, scope: !3017)
!3020 = !DILocation(line: 2424, column: 32, scope: !3017)
!3021 = !DILocation(line: 2424, column: 39, scope: !3017)
!3022 = !DILocation(line: 2424, column: 4, scope: !3017)
!3023 = distinct !{!3023, !3012, !3024}
!3024 = !DILocation(line: 2425, column: 6, scope: !3013)
!3025 = !DILocation(line: 2426, column: 8, scope: !2924)
!3026 = !DILocation(line: 2429, column: 17, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3028, file: !3, line: 2427, column: 6)
!3028 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 2426, column: 8)
!3029 = !DILocation(line: 2429, column: 23, scope: !3027)
!3030 = !DILocation(line: 2429, column: 14, scope: !3027)
!3031 = !DILocation(line: 2430, column: 8, scope: !3027)
!3032 = !DILocation(line: 2430, column: 15, scope: !3027)
!3033 = !DILocation(line: 2430, column: 19, scope: !3027)
!3034 = !DILocation(line: 2431, column: 12, scope: !3027)
!3035 = !DILocation(line: 2431, column: 11, scope: !3027)
!3036 = !DILocation(line: 2431, column: 9, scope: !3027)
!3037 = distinct !{!3037, !3031, !3038}
!3038 = !DILocation(line: 2431, column: 16, scope: !3027)
!3039 = !DILocation(line: 2433, column: 17, scope: !3027)
!3040 = !DILocation(line: 2438, column: 6, scope: !3027)
!3041 = !DILocation(line: 2372, column: 6, scope: !2902)
!3042 = !DILocation(line: 0, scope: !2917)
!3043 = !DILocation(line: 2441, column: 8, scope: !2902)
!3044 = !DILocation(line: 2442, column: 20, scope: !2902)
!3045 = !DILocation(line: 2442, column: 17, scope: !2902)
!3046 = !DILocation(line: 2442, column: 6, scope: !2902)
!3047 = !DILocation(line: 2442, column: 15, scope: !2902)
!3048 = !DILocation(line: 2443, column: 1, scope: !2902)
!3049 = distinct !DISubprogram(name: "mpz_fdiv_r_2exp", scope: !3, file: !3, line: 2470, type: !2423, scopeLine: 2471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3050)
!3050 = !{!3051, !3052, !3053}
!3051 = !DILocalVariable(name: "r", arg: 1, scope: !3049, file: !3, line: 2470, type: !1314)
!3052 = !DILocalVariable(name: "u", arg: 2, scope: !3049, file: !3, line: 2470, type: !1411)
!3053 = !DILocalVariable(name: "cnt", arg: 3, scope: !3049, file: !3, line: 2470, type: !20)
!3054 = !DILocation(line: 0, scope: !3049)
!3055 = !DILocation(line: 2472, column: 3, scope: !3049)
!3056 = !DILocation(line: 2473, column: 1, scope: !3049)
!3057 = distinct !DISubprogram(name: "mpz_tdiv_r_2exp", scope: !3, file: !3, line: 2476, type: !2423, scopeLine: 2477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3058)
!3058 = !{!3059, !3060, !3061}
!3059 = !DILocalVariable(name: "r", arg: 1, scope: !3057, file: !3, line: 2476, type: !1314)
!3060 = !DILocalVariable(name: "u", arg: 2, scope: !3057, file: !3, line: 2476, type: !1411)
!3061 = !DILocalVariable(name: "cnt", arg: 3, scope: !3057, file: !3, line: 2476, type: !20)
!3062 = !DILocation(line: 0, scope: !3057)
!3063 = !DILocation(line: 2478, column: 3, scope: !3057)
!3064 = !DILocation(line: 2479, column: 1, scope: !3057)
!3065 = distinct !DISubprogram(name: "mpz_divexact", scope: !3, file: !3, line: 2482, type: !2188, scopeLine: 2483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3066)
!3066 = !{!3067, !3068, !3069, !3070}
!3067 = !DILocalVariable(name: "q", arg: 1, scope: !3065, file: !3, line: 2482, type: !1314)
!3068 = !DILocalVariable(name: "n", arg: 2, scope: !3065, file: !3, line: 2482, type: !1411)
!3069 = !DILocalVariable(name: "d", arg: 3, scope: !3065, file: !3, line: 2482, type: !1411)
!3070 = !DILocalVariable(name: "__cy", scope: !3071, file: !3, line: 2484, type: !12)
!3071 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 2484, column: 3)
!3072 = !DILocation(line: 0, scope: !3065)
!3073 = !DILocation(line: 2484, column: 3, scope: !3071)
!3074 = !DILocation(line: 2484, column: 3, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 2484, column: 3)
!3076 = distinct !DILexicalBlock(scope: !3071, file: !3, line: 2484, column: 3)
!3077 = !DILocation(line: 2484, column: 3, scope: !3076)
!3078 = !DILocation(line: 2485, column: 1, scope: !3065)
!3079 = distinct !DISubprogram(name: "mpz_divisible_p", scope: !3, file: !3, line: 2488, type: !1935, scopeLine: 2489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3080)
!3080 = !{!3081, !3082}
!3081 = !DILocalVariable(name: "n", arg: 1, scope: !3079, file: !3, line: 2488, type: !1411)
!3082 = !DILocalVariable(name: "d", arg: 2, scope: !3079, file: !3, line: 2488, type: !1411)
!3083 = !DILocation(line: 0, scope: !3079)
!3084 = !DILocation(line: 2490, column: 10, scope: !3079)
!3085 = !DILocation(line: 2490, column: 55, scope: !3079)
!3086 = !DILocation(line: 2490, column: 3, scope: !3079)
!3087 = distinct !DISubprogram(name: "mpz_congruent_p", scope: !3, file: !3, line: 2494, type: !3088, scopeLine: 2495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3090)
!3088 = !DISubroutineType(types: !3089)
!3089 = !{!19, !1411, !1411, !1411}
!3090 = !{!3091, !3092, !3093, !3094, !3095}
!3091 = !DILocalVariable(name: "a", arg: 1, scope: !3087, file: !3, line: 2494, type: !1411)
!3092 = !DILocalVariable(name: "b", arg: 2, scope: !3087, file: !3, line: 2494, type: !1411)
!3093 = !DILocalVariable(name: "m", arg: 3, scope: !3087, file: !3, line: 2494, type: !1411)
!3094 = !DILocalVariable(name: "t", scope: !3087, file: !3, line: 2496, type: !2375)
!3095 = !DILocalVariable(name: "res", scope: !3087, file: !3, line: 2497, type: !19)
!3096 = !DILocation(line: 0, scope: !3087)
!3097 = !DILocation(line: 2496, column: 3, scope: !3087)
!3098 = !DILocation(line: 2496, column: 9, scope: !3087)
!3099 = !DILocation(line: 2500, column: 7, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 2500, column: 7)
!3101 = !DILocation(line: 2500, column: 19, scope: !3100)
!3102 = !DILocation(line: 2500, column: 7, scope: !3087)
!3103 = !DILocation(line: 2501, column: 13, scope: !3100)
!3104 = !DILocation(line: 2501, column: 28, scope: !3100)
!3105 = !DILocation(line: 2501, column: 5, scope: !3100)
!3106 = !DILocation(line: 2503, column: 13, scope: !3087)
!3107 = !DILocation(line: 2503, column: 3, scope: !3087)
!3108 = !DILocation(line: 2504, column: 3, scope: !3087)
!3109 = !DILocation(line: 2505, column: 9, scope: !3087)
!3110 = !DILocation(line: 2506, column: 3, scope: !3087)
!3111 = !DILocation(line: 2508, column: 3, scope: !3087)
!3112 = !DILocation(line: 2509, column: 1, scope: !3087)
!3113 = distinct !DISubprogram(name: "mpz_cdiv_qr_ui", scope: !3, file: !3, line: 2568, type: !3114, scopeLine: 2569, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3116)
!3114 = !DISubroutineType(types: !3115)
!3115 = !{!14, !1314, !1314, !1411, !14}
!3116 = !{!3117, !3118, !3119, !3120}
!3117 = !DILocalVariable(name: "q", arg: 1, scope: !3113, file: !3, line: 2568, type: !1314)
!3118 = !DILocalVariable(name: "r", arg: 2, scope: !3113, file: !3, line: 2568, type: !1314)
!3119 = !DILocalVariable(name: "n", arg: 3, scope: !3113, file: !3, line: 2568, type: !1411)
!3120 = !DILocalVariable(name: "d", arg: 4, scope: !3113, file: !3, line: 2568, type: !14)
!3121 = !DILocation(line: 0, scope: !3113)
!3122 = !DILocation(line: 2570, column: 10, scope: !3113)
!3123 = !DILocation(line: 2570, column: 3, scope: !3113)
!3124 = distinct !DISubprogram(name: "mpz_div_qr_ui", scope: !3, file: !3, line: 2512, type: !3125, scopeLine: 2514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3127)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!14, !1314, !1314, !1411, !14, !5}
!3127 = !{!3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138}
!3128 = !DILocalVariable(name: "q", arg: 1, scope: !3124, file: !3, line: 2512, type: !1314)
!3129 = !DILocalVariable(name: "r", arg: 2, scope: !3124, file: !3, line: 2512, type: !1314)
!3130 = !DILocalVariable(name: "n", arg: 3, scope: !3124, file: !3, line: 2513, type: !1411)
!3131 = !DILocalVariable(name: "d", arg: 4, scope: !3124, file: !3, line: 2513, type: !14)
!3132 = !DILocalVariable(name: "mode", arg: 5, scope: !3124, file: !3, line: 2513, type: !5)
!3133 = !DILocalVariable(name: "ns", scope: !3124, file: !3, line: 2515, type: !154)
!3134 = !DILocalVariable(name: "qn", scope: !3124, file: !3, line: 2515, type: !154)
!3135 = !DILocalVariable(name: "qp", scope: !3124, file: !3, line: 2516, type: !16)
!3136 = !DILocalVariable(name: "rl", scope: !3124, file: !3, line: 2517, type: !12)
!3137 = !DILocalVariable(name: "rs", scope: !3124, file: !3, line: 2518, type: !154)
!3138 = !DILocalVariable(name: "__cy", scope: !3139, file: !3, line: 2546, type: !12)
!3139 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 2546, column: 2)
!3140 = distinct !DILexicalBlock(scope: !3141, file: !3, line: 2545, column: 11)
!3141 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 2544, column: 5)
!3142 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 2542, column: 7)
!3143 = !DILocation(line: 0, scope: !3124)
!3144 = !DILocation(line: 2520, column: 11, scope: !3124)
!3145 = !DILocation(line: 2520, column: 8, scope: !3124)
!3146 = !DILocation(line: 2521, column: 10, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 2521, column: 7)
!3148 = !DILocation(line: 2521, column: 7, scope: !3124)
!3149 = !DILocation(line: 2523, column: 11, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 2523, column: 11)
!3151 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 2522, column: 5)
!3152 = !DILocation(line: 2523, column: 11, scope: !3151)
!3153 = !DILocation(line: 2524, column: 5, scope: !3150)
!3154 = !DILocation(line: 2524, column: 14, scope: !3150)
!3155 = !DILocation(line: 2524, column: 2, scope: !3150)
!3156 = !DILocation(line: 2525, column: 11, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 2525, column: 11)
!3158 = !DILocation(line: 2525, column: 11, scope: !3151)
!3159 = !DILocation(line: 2526, column: 5, scope: !3157)
!3160 = !DILocation(line: 2526, column: 14, scope: !3157)
!3161 = !DILocation(line: 2526, column: 2, scope: !3157)
!3162 = !DILocation(line: 2530, column: 8, scope: !3124)
!3163 = !DILocation(line: 2531, column: 7, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 2531, column: 7)
!3165 = !DILocation(line: 2531, column: 7, scope: !3124)
!3166 = !DILocation(line: 2532, column: 10, scope: !3164)
!3167 = !DILocation(line: 2532, column: 5, scope: !3164)
!3168 = !DILocation(line: 0, scope: !3164)
!3169 = !DILocation(line: 2536, column: 29, scope: !3124)
!3170 = !DILocation(line: 2536, column: 8, scope: !3124)
!3171 = !DILocation(line: 2537, column: 3, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3173, file: !3, line: 2537, column: 3)
!3173 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 2537, column: 3)
!3174 = !DILocation(line: 2537, column: 3, scope: !3173)
!3175 = !DILocation(line: 2539, column: 11, scope: !3124)
!3176 = !DILocation(line: 2539, column: 8, scope: !3124)
!3177 = !DILocation(line: 2540, column: 12, scope: !3124)
!3178 = !DILocation(line: 2540, column: 8, scope: !3124)
!3179 = !DILocation(line: 2542, column: 10, scope: !3142)
!3180 = !DILocation(line: 2542, column: 14, scope: !3142)
!3181 = !DILocation(line: 2542, column: 25, scope: !3142)
!3182 = !DILocation(line: 2542, column: 42, scope: !3142)
!3183 = !DILocation(line: 2543, column: 14, scope: !3142)
!3184 = !DILocation(line: 2543, column: 36, scope: !3142)
!3185 = !DILocation(line: 2543, column: 30, scope: !3142)
!3186 = !DILocation(line: 2545, column: 11, scope: !3141)
!3187 = !DILocation(line: 2546, column: 2, scope: !3139)
!3188 = !DILocation(line: 0, scope: !3139)
!3189 = !DILocation(line: 2546, column: 2, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3191, file: !3, line: 2546, column: 2)
!3191 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 2546, column: 2)
!3192 = !DILocation(line: 2546, column: 2, scope: !3191)
!3193 = !DILocation(line: 2547, column: 14, scope: !3141)
!3194 = !DILocation(line: 2548, column: 12, scope: !3141)
!3195 = !DILocation(line: 2549, column: 5, scope: !3141)
!3196 = !DILocation(line: 2551, column: 7, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 2551, column: 7)
!3198 = !DILocation(line: 2551, column: 7, scope: !3124)
!3199 = !DILocation(line: 2553, column: 10, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 2552, column: 5)
!3201 = !DILocation(line: 2553, column: 19, scope: !3200)
!3202 = !DILocation(line: 2554, column: 21, scope: !3200)
!3203 = !DILocation(line: 2554, column: 10, scope: !3200)
!3204 = !DILocation(line: 2554, column: 19, scope: !3200)
!3205 = !DILocation(line: 2555, column: 5, scope: !3200)
!3206 = !DILocation(line: 2556, column: 7, scope: !3124)
!3207 = !DILocation(line: 2558, column: 19, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 2557, column: 5)
!3209 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 2556, column: 7)
!3210 = !DILocation(line: 2558, column: 14, scope: !3208)
!3211 = !DILocation(line: 2558, column: 23, scope: !3208)
!3212 = !DILocation(line: 2558, column: 13, scope: !3208)
!3213 = !DILocation(line: 2558, column: 10, scope: !3208)
!3214 = !DILocation(line: 2559, column: 7, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 2559, column: 7)
!3216 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 2559, column: 7)
!3217 = !DILocation(line: 2559, column: 7, scope: !3216)
!3218 = !DILocation(line: 2561, column: 21, scope: !3208)
!3219 = !DILocation(line: 2561, column: 10, scope: !3208)
!3220 = !DILocation(line: 2561, column: 19, scope: !3208)
!3221 = !DILocation(line: 2562, column: 5, scope: !3208)
!3222 = !DILocation(line: 2565, column: 1, scope: !3124)
!3223 = distinct !DISubprogram(name: "mpz_fdiv_qr_ui", scope: !3, file: !3, line: 2574, type: !3114, scopeLine: 2575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3224)
!3224 = !{!3225, !3226, !3227, !3228}
!3225 = !DILocalVariable(name: "q", arg: 1, scope: !3223, file: !3, line: 2574, type: !1314)
!3226 = !DILocalVariable(name: "r", arg: 2, scope: !3223, file: !3, line: 2574, type: !1314)
!3227 = !DILocalVariable(name: "n", arg: 3, scope: !3223, file: !3, line: 2574, type: !1411)
!3228 = !DILocalVariable(name: "d", arg: 4, scope: !3223, file: !3, line: 2574, type: !14)
!3229 = !DILocation(line: 0, scope: !3223)
!3230 = !DILocation(line: 2576, column: 10, scope: !3223)
!3231 = !DILocation(line: 2576, column: 3, scope: !3223)
!3232 = distinct !DISubprogram(name: "mpz_tdiv_qr_ui", scope: !3, file: !3, line: 2580, type: !3114, scopeLine: 2581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3233)
!3233 = !{!3234, !3235, !3236, !3237}
!3234 = !DILocalVariable(name: "q", arg: 1, scope: !3232, file: !3, line: 2580, type: !1314)
!3235 = !DILocalVariable(name: "r", arg: 2, scope: !3232, file: !3, line: 2580, type: !1314)
!3236 = !DILocalVariable(name: "n", arg: 3, scope: !3232, file: !3, line: 2580, type: !1411)
!3237 = !DILocalVariable(name: "d", arg: 4, scope: !3232, file: !3, line: 2580, type: !14)
!3238 = !DILocation(line: 0, scope: !3232)
!3239 = !DILocation(line: 2582, column: 10, scope: !3232)
!3240 = !DILocation(line: 2582, column: 3, scope: !3232)
!3241 = distinct !DISubprogram(name: "mpz_cdiv_q_ui", scope: !3, file: !3, line: 2586, type: !3242, scopeLine: 2587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3244)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{!14, !1314, !1411, !14}
!3244 = !{!3245, !3246, !3247}
!3245 = !DILocalVariable(name: "q", arg: 1, scope: !3241, file: !3, line: 2586, type: !1314)
!3246 = !DILocalVariable(name: "n", arg: 2, scope: !3241, file: !3, line: 2586, type: !1411)
!3247 = !DILocalVariable(name: "d", arg: 3, scope: !3241, file: !3, line: 2586, type: !14)
!3248 = !DILocation(line: 0, scope: !3241)
!3249 = !DILocation(line: 2588, column: 10, scope: !3241)
!3250 = !DILocation(line: 2588, column: 3, scope: !3241)
!3251 = distinct !DISubprogram(name: "mpz_fdiv_q_ui", scope: !3, file: !3, line: 2592, type: !3242, scopeLine: 2593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3252)
!3252 = !{!3253, !3254, !3255}
!3253 = !DILocalVariable(name: "q", arg: 1, scope: !3251, file: !3, line: 2592, type: !1314)
!3254 = !DILocalVariable(name: "n", arg: 2, scope: !3251, file: !3, line: 2592, type: !1411)
!3255 = !DILocalVariable(name: "d", arg: 3, scope: !3251, file: !3, line: 2592, type: !14)
!3256 = !DILocation(line: 0, scope: !3251)
!3257 = !DILocation(line: 2594, column: 10, scope: !3251)
!3258 = !DILocation(line: 2594, column: 3, scope: !3251)
!3259 = distinct !DISubprogram(name: "mpz_tdiv_q_ui", scope: !3, file: !3, line: 2598, type: !3242, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3260)
!3260 = !{!3261, !3262, !3263}
!3261 = !DILocalVariable(name: "q", arg: 1, scope: !3259, file: !3, line: 2598, type: !1314)
!3262 = !DILocalVariable(name: "n", arg: 2, scope: !3259, file: !3, line: 2598, type: !1411)
!3263 = !DILocalVariable(name: "d", arg: 3, scope: !3259, file: !3, line: 2598, type: !14)
!3264 = !DILocation(line: 0, scope: !3259)
!3265 = !DILocation(line: 2600, column: 10, scope: !3259)
!3266 = !DILocation(line: 2600, column: 3, scope: !3259)
!3267 = distinct !DISubprogram(name: "mpz_cdiv_r_ui", scope: !3, file: !3, line: 2604, type: !3242, scopeLine: 2605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3268)
!3268 = !{!3269, !3270, !3271}
!3269 = !DILocalVariable(name: "r", arg: 1, scope: !3267, file: !3, line: 2604, type: !1314)
!3270 = !DILocalVariable(name: "n", arg: 2, scope: !3267, file: !3, line: 2604, type: !1411)
!3271 = !DILocalVariable(name: "d", arg: 3, scope: !3267, file: !3, line: 2604, type: !14)
!3272 = !DILocation(line: 0, scope: !3267)
!3273 = !DILocation(line: 2606, column: 10, scope: !3267)
!3274 = !DILocation(line: 2606, column: 3, scope: !3267)
!3275 = distinct !DISubprogram(name: "mpz_fdiv_r_ui", scope: !3, file: !3, line: 2609, type: !3242, scopeLine: 2610, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3276)
!3276 = !{!3277, !3278, !3279}
!3277 = !DILocalVariable(name: "r", arg: 1, scope: !3275, file: !3, line: 2609, type: !1314)
!3278 = !DILocalVariable(name: "n", arg: 2, scope: !3275, file: !3, line: 2609, type: !1411)
!3279 = !DILocalVariable(name: "d", arg: 3, scope: !3275, file: !3, line: 2609, type: !14)
!3280 = !DILocation(line: 0, scope: !3275)
!3281 = !DILocation(line: 2611, column: 10, scope: !3275)
!3282 = !DILocation(line: 2611, column: 3, scope: !3275)
!3283 = distinct !DISubprogram(name: "mpz_tdiv_r_ui", scope: !3, file: !3, line: 2614, type: !3242, scopeLine: 2615, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3284)
!3284 = !{!3285, !3286, !3287}
!3285 = !DILocalVariable(name: "r", arg: 1, scope: !3283, file: !3, line: 2614, type: !1314)
!3286 = !DILocalVariable(name: "n", arg: 2, scope: !3283, file: !3, line: 2614, type: !1411)
!3287 = !DILocalVariable(name: "d", arg: 3, scope: !3283, file: !3, line: 2614, type: !14)
!3288 = !DILocation(line: 0, scope: !3283)
!3289 = !DILocation(line: 2616, column: 10, scope: !3283)
!3290 = !DILocation(line: 2616, column: 3, scope: !3283)
!3291 = distinct !DISubprogram(name: "mpz_cdiv_ui", scope: !3, file: !3, line: 2620, type: !3292, scopeLine: 2621, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3294)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!14, !1411, !14}
!3294 = !{!3295, !3296}
!3295 = !DILocalVariable(name: "n", arg: 1, scope: !3291, file: !3, line: 2620, type: !1411)
!3296 = !DILocalVariable(name: "d", arg: 2, scope: !3291, file: !3, line: 2620, type: !14)
!3297 = !DILocation(line: 0, scope: !3291)
!3298 = !DILocation(line: 2622, column: 10, scope: !3291)
!3299 = !DILocation(line: 2622, column: 3, scope: !3291)
!3300 = distinct !DISubprogram(name: "mpz_fdiv_ui", scope: !3, file: !3, line: 2626, type: !3292, scopeLine: 2627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3301)
!3301 = !{!3302, !3303}
!3302 = !DILocalVariable(name: "n", arg: 1, scope: !3300, file: !3, line: 2626, type: !1411)
!3303 = !DILocalVariable(name: "d", arg: 2, scope: !3300, file: !3, line: 2626, type: !14)
!3304 = !DILocation(line: 0, scope: !3300)
!3305 = !DILocation(line: 2628, column: 10, scope: !3300)
!3306 = !DILocation(line: 2628, column: 3, scope: !3300)
!3307 = distinct !DISubprogram(name: "mpz_tdiv_ui", scope: !3, file: !3, line: 2632, type: !3292, scopeLine: 2633, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3308)
!3308 = !{!3309, !3310}
!3309 = !DILocalVariable(name: "n", arg: 1, scope: !3307, file: !3, line: 2632, type: !1411)
!3310 = !DILocalVariable(name: "d", arg: 2, scope: !3307, file: !3, line: 2632, type: !14)
!3311 = !DILocation(line: 0, scope: !3307)
!3312 = !DILocation(line: 2634, column: 10, scope: !3307)
!3313 = !DILocation(line: 2634, column: 3, scope: !3307)
!3314 = distinct !DISubprogram(name: "mpz_mod_ui", scope: !3, file: !3, line: 2638, type: !3242, scopeLine: 2639, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3315)
!3315 = !{!3316, !3317, !3318}
!3316 = !DILocalVariable(name: "r", arg: 1, scope: !3314, file: !3, line: 2638, type: !1314)
!3317 = !DILocalVariable(name: "n", arg: 2, scope: !3314, file: !3, line: 2638, type: !1411)
!3318 = !DILocalVariable(name: "d", arg: 3, scope: !3314, file: !3, line: 2638, type: !14)
!3319 = !DILocation(line: 0, scope: !3314)
!3320 = !DILocation(line: 2640, column: 10, scope: !3314)
!3321 = !DILocation(line: 2640, column: 3, scope: !3314)
!3322 = distinct !DISubprogram(name: "mpz_divexact_ui", scope: !3, file: !3, line: 2644, type: !2059, scopeLine: 2645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3323)
!3323 = !{!3324, !3325, !3326, !3327}
!3324 = !DILocalVariable(name: "q", arg: 1, scope: !3322, file: !3, line: 2644, type: !1314)
!3325 = !DILocalVariable(name: "n", arg: 2, scope: !3322, file: !3, line: 2644, type: !1411)
!3326 = !DILocalVariable(name: "d", arg: 3, scope: !3322, file: !3, line: 2644, type: !14)
!3327 = !DILocalVariable(name: "__cy", scope: !3328, file: !3, line: 2646, type: !12)
!3328 = distinct !DILexicalBlock(scope: !3322, file: !3, line: 2646, column: 3)
!3329 = !DILocation(line: 0, scope: !3322)
!3330 = !DILocation(line: 2646, column: 3, scope: !3328)
!3331 = !DILocation(line: 0, scope: !3328)
!3332 = !DILocation(line: 2646, column: 3, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3334, file: !3, line: 2646, column: 3)
!3334 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 2646, column: 3)
!3335 = !DILocation(line: 2646, column: 3, scope: !3334)
!3336 = !DILocation(line: 2647, column: 1, scope: !3322)
!3337 = distinct !DISubprogram(name: "mpz_divisible_ui_p", scope: !3, file: !3, line: 2650, type: !1908, scopeLine: 2651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3338)
!3338 = !{!3339, !3340}
!3339 = !DILocalVariable(name: "n", arg: 1, scope: !3337, file: !3, line: 2650, type: !1411)
!3340 = !DILocalVariable(name: "d", arg: 2, scope: !3337, file: !3, line: 2650, type: !14)
!3341 = !DILocation(line: 0, scope: !3337)
!3342 = !DILocation(line: 2652, column: 10, scope: !3337)
!3343 = !DILocation(line: 2652, column: 58, scope: !3337)
!3344 = !DILocation(line: 2652, column: 3, scope: !3337)
!3345 = distinct !DISubprogram(name: "mpz_gcd_ui", scope: !3, file: !3, line: 2701, type: !3242, scopeLine: 2702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3346)
!3346 = !{!3347, !3348, !3349, !3350}
!3347 = !DILocalVariable(name: "g", arg: 1, scope: !3345, file: !3, line: 2701, type: !1314)
!3348 = !DILocalVariable(name: "u", arg: 2, scope: !3345, file: !3, line: 2701, type: !1411)
!3349 = !DILocalVariable(name: "v", arg: 3, scope: !3345, file: !3, line: 2701, type: !14)
!3350 = !DILocalVariable(name: "un", scope: !3345, file: !3, line: 2703, type: !154)
!3351 = !DILocation(line: 0, scope: !3345)
!3352 = !DILocation(line: 2705, column: 9, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 2705, column: 7)
!3354 = !DILocation(line: 2705, column: 7, scope: !3345)
!3355 = !DILocation(line: 2707, column: 11, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 2707, column: 11)
!3357 = distinct !DILexicalBlock(scope: !3353, file: !3, line: 2706, column: 5)
!3358 = !DILocation(line: 2707, column: 11, scope: !3357)
!3359 = !DILocation(line: 2708, column: 2, scope: !3356)
!3360 = !DILocation(line: 2712, column: 12, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3353, file: !3, line: 2711, column: 5)
!3362 = !DILocation(line: 2713, column: 14, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 2713, column: 11)
!3364 = !DILocation(line: 2713, column: 11, scope: !3361)
!3365 = !DILocation(line: 2714, column: 41, scope: !3363)
!3366 = !DILocation(line: 2714, column: 18, scope: !3363)
!3367 = !DILocation(line: 2714, column: 6, scope: !3363)
!3368 = !DILocation(line: 2714, column: 2, scope: !3363)
!3369 = !DILocation(line: 2716, column: 11, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 2716, column: 11)
!3371 = !DILocation(line: 2716, column: 11, scope: !3361)
!3372 = !DILocation(line: 2717, column: 2, scope: !3370)
!3373 = !DILocation(line: 2720, column: 3, scope: !3345)
!3374 = distinct !DISubprogram(name: "mpn_gcd_11", scope: !3, file: !3, line: 2658, type: !800, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3375)
!3375 = !{!3376, !3377, !3378, !3379, !3381, !3382, !3384, !3385}
!3376 = !DILocalVariable(name: "u", arg: 1, scope: !3374, file: !3, line: 2658, type: !12)
!3377 = !DILocalVariable(name: "v", arg: 2, scope: !3374, file: !3, line: 2658, type: !12)
!3378 = !DILocalVariable(name: "shift", scope: !3374, file: !3, line: 2660, type: !6)
!3379 = !DILocalVariable(name: "__ctz_x", scope: !3380, file: !3, line: 2669, type: !12)
!3380 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 2669, column: 3)
!3381 = !DILocalVariable(name: "__ctz_c", scope: !3380, file: !3, line: 2669, type: !6)
!3382 = !DILocalVariable(name: "__clz_x", scope: !3383, file: !3, line: 2669, type: !12)
!3383 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 2669, column: 3)
!3384 = !DILocalVariable(name: "__clz_c", scope: !3383, file: !3, line: 2669, type: !6)
!3385 = !DILocalVariable(name: "__mp_limb_t_swap__tmp", scope: !3386, file: !3, line: 2675, type: !12)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 2675, column: 5)
!3387 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 2674, column: 8)
!3388 = !DILocation(line: 0, scope: !3374)
!3389 = !DILocation(line: 2662, column: 3, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 2662, column: 3)
!3391 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 2662, column: 3)
!3392 = !DILocation(line: 2662, column: 3, scope: !3391)
!3393 = !DILocation(line: 2664, column: 9, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 2664, column: 7)
!3395 = !DILocation(line: 2664, column: 7, scope: !3374)
!3396 = !DILocation(line: 2666, column: 14, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 2666, column: 12)
!3398 = !DILocation(line: 2666, column: 12, scope: !3394)
!3399 = !DILocation(line: 0, scope: !3380)
!3400 = !DILocation(line: 2669, column: 3, scope: !3383)
!3401 = !DILocation(line: 0, scope: !3383)
!3402 = !DILocation(line: 2669, column: 3, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 2669, column: 3)
!3404 = !DILocation(line: 0, scope: !3403)
!3405 = !DILocation(line: 2669, column: 3, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 2669, column: 3)
!3407 = !DILocation(line: 2669, column: 3, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 2669, column: 3)
!3409 = distinct !{!3409, !3402, !3402}
!3410 = !DILocation(line: 2669, column: 3, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 2669, column: 3)
!3412 = distinct !{!3412, !3407, !3407}
!3413 = !DILocation(line: 2669, column: 3, scope: !3380)
!3414 = !DILocation(line: 2671, column: 5, scope: !3374)
!3415 = !DILocation(line: 2672, column: 5, scope: !3374)
!3416 = !DILocation(line: 2674, column: 11, scope: !3387)
!3417 = !DILocation(line: 2674, column: 16, scope: !3387)
!3418 = !DILocation(line: 2674, column: 8, scope: !3374)
!3419 = !DILocation(line: 2677, column: 3, scope: !3374)
!3420 = !DILocation(line: 2677, column: 14, scope: !3374)
!3421 = !DILocation(line: 2677, column: 19, scope: !3374)
!3422 = !DILocation(line: 2680, column: 3, scope: !3374)
!3423 = !DILocation(line: 2678, column: 7, scope: !3374)
!3424 = distinct !{!3424, !3419, !3425}
!3425 = !DILocation(line: 2678, column: 11, scope: !3374)
!3426 = !DILocation(line: 2675, column: 5, scope: !3386)
!3427 = !DILocation(line: 2680, column: 12, scope: !3374)
!3428 = !DILocation(line: 2682, column: 13, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !3, line: 2682, column: 11)
!3430 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 2681, column: 5)
!3431 = !DILocation(line: 2682, column: 11, scope: !3430)
!3432 = !DILocation(line: 2684, column: 6, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 2683, column: 2)
!3434 = !DILocation(line: 2685, column: 4, scope: !3433)
!3435 = !DILocation(line: 0, scope: !3433)
!3436 = !DILocation(line: 2686, column: 8, scope: !3433)
!3437 = !DILocation(line: 2687, column: 15, scope: !3433)
!3438 = !DILocation(line: 2687, column: 20, scope: !3433)
!3439 = !DILocation(line: 2686, column: 6, scope: !3433)
!3440 = distinct !{!3440, !3434, !3441}
!3441 = !DILocation(line: 2687, column: 24, scope: !3433)
!3442 = !DILocation(line: 2691, column: 6, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 2690, column: 2)
!3444 = !DILocation(line: 2692, column: 4, scope: !3443)
!3445 = !DILocation(line: 0, scope: !3443)
!3446 = !DILocation(line: 2693, column: 8, scope: !3443)
!3447 = !DILocation(line: 2694, column: 15, scope: !3443)
!3448 = !DILocation(line: 2694, column: 20, scope: !3443)
!3449 = !DILocation(line: 2693, column: 6, scope: !3443)
!3450 = distinct !{!3450, !3444, !3451}
!3451 = !DILocation(line: 2694, column: 24, scope: !3443)
!3452 = distinct !{!3452, !3422, !3453}
!3453 = !DILocation(line: 2696, column: 5, scope: !3374)
!3454 = !DILocation(line: 2697, column: 12, scope: !3374)
!3455 = !DILocation(line: 2697, column: 3, scope: !3374)
!3456 = !DILocation(line: 2698, column: 1, scope: !3374)
!3457 = distinct !DISubprogram(name: "mpn_div_qr_1", scope: !3, file: !3, line: 894, type: !237, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3458)
!3458 = !{!3459, !3460, !3461, !3462, !3463, !3466, !3471, !3473, !3474, !3476, !3477}
!3459 = !DILocalVariable(name: "qp", arg: 1, scope: !3457, file: !3, line: 894, type: !16)
!3460 = !DILocalVariable(name: "np", arg: 2, scope: !3457, file: !3, line: 894, type: !151)
!3461 = !DILocalVariable(name: "nn", arg: 3, scope: !3457, file: !3, line: 894, type: !154)
!3462 = !DILocalVariable(name: "d", arg: 4, scope: !3457, file: !3, line: 894, type: !12)
!3463 = !DILocalVariable(name: "r", scope: !3464, file: !3, line: 901, type: !12)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 900, column: 5)
!3465 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 899, column: 7)
!3466 = !DILocalVariable(name: "shift", scope: !3467, file: !3, line: 908, type: !6)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 907, column: 6)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 904, column: 8)
!3469 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 903, column: 2)
!3470 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 902, column: 11)
!3471 = !DILocalVariable(name: "__ctz_x", scope: !3472, file: !3, line: 909, type: !12)
!3472 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 909, column: 8)
!3473 = !DILocalVariable(name: "__ctz_c", scope: !3472, file: !3, line: 909, type: !6)
!3474 = !DILocalVariable(name: "__clz_x", scope: !3475, file: !3, line: 909, type: !12)
!3475 = distinct !DILexicalBlock(scope: !3472, file: !3, line: 909, column: 8)
!3476 = !DILocalVariable(name: "__clz_c", scope: !3475, file: !3, line: 909, type: !6)
!3477 = !DILocalVariable(name: "inv", scope: !3478, file: !3, line: 917, type: !1067)
!3478 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 916, column: 5)
!3479 = !DILocation(line: 0, scope: !3457)
!3480 = !DILocation(line: 896, column: 3, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 896, column: 3)
!3482 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 896, column: 3)
!3483 = !DILocation(line: 896, column: 3, scope: !3482)
!3484 = !DILocation(line: 899, column: 19, scope: !3465)
!3485 = !{i64 0, i64 65}
!3486 = !DILocation(line: 899, column: 7, scope: !3457)
!3487 = !DILocation(line: 901, column: 21, scope: !3464)
!3488 = !DILocation(line: 901, column: 31, scope: !3464)
!3489 = !DILocation(line: 901, column: 27, scope: !3464)
!3490 = !DILocation(line: 0, scope: !3464)
!3491 = !DILocation(line: 902, column: 11, scope: !3470)
!3492 = !DILocation(line: 902, column: 11, scope: !3464)
!3493 = !DILocation(line: 904, column: 10, scope: !3468)
!3494 = !DILocation(line: 904, column: 8, scope: !3469)
!3495 = !DILocation(line: 905, column: 6, scope: !3468)
!3496 = !DILocation(line: 0, scope: !3472)
!3497 = !DILocation(line: 909, column: 8, scope: !3475)
!3498 = !DILocation(line: 0, scope: !3475)
!3499 = !DILocation(line: 909, column: 8, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 909, column: 8)
!3501 = !DILocation(line: 0, scope: !3500)
!3502 = !DILocation(line: 909, column: 8, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3500, file: !3, line: 909, column: 8)
!3504 = !DILocation(line: 909, column: 8, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 909, column: 8)
!3506 = distinct !{!3506, !3499, !3499}
!3507 = !DILocation(line: 909, column: 8, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3505, file: !3, line: 909, column: 8)
!3509 = distinct !{!3509, !3504, !3504}
!3510 = !DILocation(line: 909, column: 8, scope: !3472)
!3511 = !DILocation(line: 0, scope: !3467)
!3512 = !DILocation(line: 910, column: 8, scope: !3467)
!3513 = !DILocation(line: 917, column: 7, scope: !3478)
!3514 = !DILocation(line: 0, scope: !3478)
!3515 = !DILocation(line: 918, column: 7, scope: !3478)
!3516 = !DILocation(line: 919, column: 14, scope: !3478)
!3517 = !DILocation(line: 920, column: 5, scope: !3465)
!3518 = !DILocation(line: 0, scope: !3465)
!3519 = !DILocation(line: 921, column: 1, scope: !3457)
!3520 = distinct !DISubprogram(name: "mpz_gcd", scope: !3, file: !3, line: 2737, type: !2188, scopeLine: 2738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3521)
!3521 = !{!3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3535, !3538}
!3522 = !DILocalVariable(name: "g", arg: 1, scope: !3520, file: !3, line: 2737, type: !1314)
!3523 = !DILocalVariable(name: "u", arg: 2, scope: !3520, file: !3, line: 2737, type: !1411)
!3524 = !DILocalVariable(name: "v", arg: 3, scope: !3520, file: !3, line: 2737, type: !1411)
!3525 = !DILocalVariable(name: "tu", scope: !3520, file: !3, line: 2739, type: !2375)
!3526 = !DILocalVariable(name: "tv", scope: !3520, file: !3, line: 2739, type: !2375)
!3527 = !DILocalVariable(name: "uz", scope: !3520, file: !3, line: 2740, type: !20)
!3528 = !DILocalVariable(name: "vz", scope: !3520, file: !3, line: 2740, type: !20)
!3529 = !DILocalVariable(name: "gz", scope: !3520, file: !3, line: 2740, type: !20)
!3530 = !DILocalVariable(name: "c", scope: !3531, file: !3, line: 2773, type: !19)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 2772, column: 7)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 2771, column: 5)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 2771, column: 5)
!3534 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 2766, column: 7)
!3535 = !DILocalVariable(name: "vl", scope: !3536, file: !3, line: 2787, type: !12)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !3, line: 2786, column: 4)
!3537 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 2785, column: 6)
!3538 = !DILocalVariable(name: "ul", scope: !3536, file: !3, line: 2788, type: !12)
!3539 = !DILocation(line: 0, scope: !3520)
!3540 = !DILocation(line: 2739, column: 3, scope: !3520)
!3541 = !DILocation(line: 2739, column: 9, scope: !3520)
!3542 = !DILocation(line: 2739, column: 13, scope: !3520)
!3543 = !DILocation(line: 2742, column: 10, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 2742, column: 7)
!3545 = !DILocation(line: 2742, column: 19, scope: !3544)
!3546 = !DILocation(line: 2742, column: 7, scope: !3520)
!3547 = !DILocation(line: 2744, column: 7, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 2743, column: 5)
!3549 = !DILocation(line: 2745, column: 7, scope: !3548)
!3550 = !DILocation(line: 2747, column: 10, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 2747, column: 7)
!3552 = !DILocation(line: 2747, column: 19, scope: !3551)
!3553 = !DILocation(line: 2747, column: 7, scope: !3520)
!3554 = !DILocation(line: 2749, column: 7, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 2748, column: 5)
!3556 = !DILocation(line: 2750, column: 7, scope: !3555)
!3557 = !DILocation(line: 2753, column: 13, scope: !3520)
!3558 = !DILocation(line: 2753, column: 3, scope: !3520)
!3559 = !DILocation(line: 2754, column: 13, scope: !3520)
!3560 = !DILocation(line: 2754, column: 3, scope: !3520)
!3561 = !DILocation(line: 2756, column: 3, scope: !3520)
!3562 = !DILocation(line: 2757, column: 8, scope: !3520)
!3563 = !DILocation(line: 2758, column: 3, scope: !3520)
!3564 = !DILocation(line: 2759, column: 8, scope: !3520)
!3565 = !DILocation(line: 2760, column: 8, scope: !3520)
!3566 = !DILocation(line: 2762, column: 11, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 2762, column: 7)
!3568 = !DILocation(line: 2762, column: 26, scope: !3567)
!3569 = !DILocation(line: 2762, column: 20, scope: !3567)
!3570 = !DILocation(line: 2762, column: 7, scope: !3520)
!3571 = !DILocation(line: 2763, column: 5, scope: !3567)
!3572 = !DILocation(line: 2765, column: 3, scope: !3520)
!3573 = !DILocation(line: 2766, column: 11, scope: !3534)
!3574 = !DILocation(line: 2766, column: 20, scope: !3534)
!3575 = !DILocation(line: 2766, column: 7, scope: !3520)
!3576 = !DILocation(line: 0, scope: !3536)
!3577 = !DILocation(line: 2771, column: 5, scope: !3533)
!3578 = !DILocation(line: 2768, column: 7, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 2767, column: 5)
!3580 = !DILocation(line: 2769, column: 5, scope: !3579)
!3581 = !DILocation(line: 2775, column: 2, scope: !3531)
!3582 = !DILocation(line: 2776, column: 6, scope: !3531)
!3583 = !DILocation(line: 0, scope: !3531)
!3584 = !DILocation(line: 2777, column: 8, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 2777, column: 6)
!3586 = !DILocation(line: 2777, column: 6, scope: !3531)
!3587 = !DILocation(line: 2779, column: 6, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 2778, column: 4)
!3589 = !DILocation(line: 2780, column: 6, scope: !3588)
!3590 = !DILocation(line: 2782, column: 8, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 2782, column: 6)
!3592 = !DILocation(line: 2782, column: 6, scope: !3531)
!3593 = !DILocation(line: 2783, column: 4, scope: !3591)
!3594 = !DILocation(line: 2785, column: 10, scope: !3537)
!3595 = !DILocation(line: 2785, column: 19, scope: !3537)
!3596 = !DILocation(line: 2785, column: 6, scope: !3531)
!3597 = !DILocation(line: 2787, column: 25, scope: !3536)
!3598 = !DILocation(line: 2787, column: 21, scope: !3536)
!3599 = !DILocation(line: 2788, column: 21, scope: !3536)
!3600 = !DILocation(line: 2789, column: 21, scope: !3536)
!3601 = !DILocation(line: 2789, column: 6, scope: !3536)
!3602 = !DILocation(line: 2792, column: 2, scope: !3531)
!3603 = !DILocation(line: 2793, column: 7, scope: !3532)
!3604 = distinct !{!3604, !3577, !3605}
!3605 = !DILocation(line: 2793, column: 7, scope: !3533)
!3606 = !DILocation(line: 2794, column: 14, scope: !3520)
!3607 = !DILocation(line: 2794, column: 3, scope: !3520)
!3608 = !DILocation(line: 2795, column: 3, scope: !3520)
!3609 = !DILocation(line: 2796, column: 3, scope: !3520)
!3610 = !DILocation(line: 2797, column: 1, scope: !3520)
!3611 = distinct !DISubprogram(name: "mpz_make_odd", scope: !3, file: !3, line: 2724, type: !3612, scopeLine: 2725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3614)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!20, !1314}
!3614 = !{!3615, !3616}
!3615 = !DILocalVariable(name: "r", arg: 1, scope: !3611, file: !3, line: 2724, type: !1314)
!3616 = !DILocalVariable(name: "shift", scope: !3611, file: !3, line: 2726, type: !20)
!3617 = !DILocation(line: 0, scope: !3611)
!3618 = !DILocation(line: 2728, column: 3, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 2728, column: 3)
!3620 = distinct !DILexicalBlock(scope: !3611, file: !3, line: 2728, column: 3)
!3621 = !DILocation(line: 2728, column: 3, scope: !3620)
!3622 = !DILocation(line: 2730, column: 31, scope: !3611)
!3623 = !DILocation(line: 2730, column: 28, scope: !3611)
!3624 = !DILocation(line: 2730, column: 11, scope: !3611)
!3625 = !DILocation(line: 2731, column: 3, scope: !3611)
!3626 = !DILocation(line: 2733, column: 3, scope: !3611)
!3627 = distinct !DISubprogram(name: "mpz_gcdext", scope: !3, file: !3, line: 2800, type: !3628, scopeLine: 2801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3630)
!3628 = !DISubroutineType(types: !3629)
!3629 = !{null, !1314, !1314, !1314, !1411, !1411}
!3630 = !{!3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3649, !3652, !3656, !3659, !3661, !3664}
!3631 = !DILocalVariable(name: "g", arg: 1, scope: !3627, file: !3, line: 2800, type: !1314)
!3632 = !DILocalVariable(name: "s", arg: 2, scope: !3627, file: !3, line: 2800, type: !1314)
!3633 = !DILocalVariable(name: "t", arg: 3, scope: !3627, file: !3, line: 2800, type: !1314)
!3634 = !DILocalVariable(name: "u", arg: 4, scope: !3627, file: !3, line: 2800, type: !1411)
!3635 = !DILocalVariable(name: "v", arg: 5, scope: !3627, file: !3, line: 2800, type: !1411)
!3636 = !DILocalVariable(name: "tu", scope: !3627, file: !3, line: 2802, type: !2375)
!3637 = !DILocalVariable(name: "tv", scope: !3627, file: !3, line: 2802, type: !2375)
!3638 = !DILocalVariable(name: "s0", scope: !3627, file: !3, line: 2802, type: !2375)
!3639 = !DILocalVariable(name: "s1", scope: !3627, file: !3, line: 2802, type: !2375)
!3640 = !DILocalVariable(name: "t0", scope: !3627, file: !3, line: 2802, type: !2375)
!3641 = !DILocalVariable(name: "t1", scope: !3627, file: !3, line: 2802, type: !2375)
!3642 = !DILocalVariable(name: "uz", scope: !3627, file: !3, line: 2803, type: !20)
!3643 = !DILocalVariable(name: "vz", scope: !3627, file: !3, line: 2803, type: !20)
!3644 = !DILocalVariable(name: "gz", scope: !3627, file: !3, line: 2803, type: !20)
!3645 = !DILocalVariable(name: "power", scope: !3627, file: !3, line: 2804, type: !20)
!3646 = !DILocalVariable(name: "sign", scope: !3647, file: !3, line: 2809, type: !15)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !3, line: 2807, column: 5)
!3648 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2806, column: 7)
!3649 = !DILocalVariable(name: "sign", scope: !3650, file: !3, line: 2821, type: !15)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 2819, column: 5)
!3651 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2818, column: 7)
!3652 = !DILocalVariable(name: "__mpz_srcptr_swap__tmp", scope: !3653, file: !3, line: 2850, type: !1591)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 2850, column: 7)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 2848, column: 5)
!3655 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2847, column: 7)
!3656 = !DILocalVariable(name: "__mpz_ptr_swap__tmp", scope: !3657, file: !3, line: 2851, type: !3658)
!3657 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 2851, column: 7)
!3658 = !DIDerivedType(tag: DW_TAG_typedef, name: "mpz_ptr", file: !13, line: 75, baseType: !1314)
!3659 = !DILocalVariable(name: "__mp_bitcnt_t_swap__tmp", scope: !3660, file: !3, line: 2852, type: !20)
!3660 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 2852, column: 7)
!3661 = !DILocalVariable(name: "shift", scope: !3662, file: !3, line: 2887, type: !20)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !3, line: 2886, column: 5)
!3663 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2885, column: 7)
!3664 = !DILocalVariable(name: "c", scope: !3665, file: !3, line: 2895, type: !19)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !3, line: 2894, column: 2)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !3, line: 2893, column: 7)
!3667 = distinct !DILexicalBlock(scope: !3662, file: !3, line: 2893, column: 7)
!3668 = !DILocation(line: 0, scope: !3627)
!3669 = !DILocation(line: 2802, column: 3, scope: !3627)
!3670 = !DILocation(line: 2802, column: 9, scope: !3627)
!3671 = !DILocation(line: 2802, column: 13, scope: !3627)
!3672 = !DILocation(line: 2802, column: 17, scope: !3627)
!3673 = !DILocation(line: 2802, column: 21, scope: !3627)
!3674 = !DILocation(line: 2802, column: 25, scope: !3627)
!3675 = !DILocation(line: 2802, column: 29, scope: !3627)
!3676 = !DILocation(line: 2806, column: 10, scope: !3648)
!3677 = !DILocation(line: 2806, column: 19, scope: !3648)
!3678 = !DILocation(line: 2806, column: 7, scope: !3627)
!3679 = !DILocation(line: 2809, column: 26, scope: !3647)
!3680 = !DILocation(line: 0, scope: !3647)
!3681 = !DILocation(line: 2810, column: 7, scope: !3647)
!3682 = !DILocation(line: 2811, column: 11, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3647, file: !3, line: 2811, column: 11)
!3684 = !DILocation(line: 2811, column: 11, scope: !3647)
!3685 = !DILocation(line: 2812, column: 2, scope: !3683)
!3686 = !DILocation(line: 2813, column: 11, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3647, file: !3, line: 2813, column: 11)
!3688 = !DILocation(line: 2813, column: 11, scope: !3647)
!3689 = !DILocation(line: 2814, column: 2, scope: !3687)
!3690 = !DILocation(line: 2818, column: 10, scope: !3651)
!3691 = !DILocation(line: 2818, column: 19, scope: !3651)
!3692 = !DILocation(line: 2818, column: 7, scope: !3627)
!3693 = !DILocation(line: 2821, column: 26, scope: !3650)
!3694 = !DILocation(line: 0, scope: !3650)
!3695 = !DILocation(line: 2822, column: 7, scope: !3650)
!3696 = !DILocation(line: 2823, column: 11, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3650, file: !3, line: 2823, column: 11)
!3698 = !DILocation(line: 2823, column: 11, scope: !3650)
!3699 = !DILocation(line: 2824, column: 2, scope: !3697)
!3700 = !DILocation(line: 2825, column: 11, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3650, file: !3, line: 2825, column: 11)
!3702 = !DILocation(line: 2825, column: 11, scope: !3650)
!3703 = !DILocation(line: 2826, column: 2, scope: !3701)
!3704 = !DILocation(line: 2830, column: 13, scope: !3627)
!3705 = !DILocation(line: 2830, column: 3, scope: !3627)
!3706 = !DILocation(line: 2831, column: 13, scope: !3627)
!3707 = !DILocation(line: 2831, column: 3, scope: !3627)
!3708 = !DILocation(line: 2832, column: 13, scope: !3627)
!3709 = !DILocation(line: 2832, column: 3, scope: !3627)
!3710 = !DILocation(line: 2833, column: 13, scope: !3627)
!3711 = !DILocation(line: 2833, column: 3, scope: !3627)
!3712 = !DILocation(line: 2834, column: 13, scope: !3627)
!3713 = !DILocation(line: 2834, column: 3, scope: !3627)
!3714 = !DILocation(line: 2835, column: 13, scope: !3627)
!3715 = !DILocation(line: 2835, column: 3, scope: !3627)
!3716 = !DILocation(line: 2837, column: 3, scope: !3627)
!3717 = !DILocation(line: 2838, column: 8, scope: !3627)
!3718 = !DILocation(line: 2839, column: 3, scope: !3627)
!3719 = !DILocation(line: 2840, column: 8, scope: !3627)
!3720 = !DILocation(line: 2841, column: 8, scope: !3627)
!3721 = !DILocation(line: 2843, column: 6, scope: !3627)
!3722 = !DILocation(line: 2844, column: 6, scope: !3627)
!3723 = !DILocation(line: 2847, column: 11, scope: !3655)
!3724 = !DILocation(line: 2847, column: 26, scope: !3655)
!3725 = !DILocation(line: 2847, column: 20, scope: !3655)
!3726 = !DILocation(line: 2847, column: 7, scope: !3627)
!3727 = !DILocation(line: 2849, column: 7, scope: !3654)
!3728 = !DILocation(line: 2853, column: 5, scope: !3654)
!3729 = !DILocation(line: 2878, column: 3, scope: !3627)
!3730 = !DILocation(line: 2879, column: 3, scope: !3627)
!3731 = !DILocation(line: 2880, column: 3, scope: !3627)
!3732 = !DILocation(line: 2882, column: 3, scope: !3627)
!3733 = !DILocation(line: 2883, column: 14, scope: !3627)
!3734 = !DILocation(line: 2885, column: 11, scope: !3663)
!3735 = !DILocation(line: 2885, column: 20, scope: !3663)
!3736 = !DILocation(line: 2885, column: 7, scope: !3627)
!3737 = !DILocation(line: 2888, column: 15, scope: !3662)
!3738 = !DILocation(line: 0, scope: !3662)
!3739 = !DILocation(line: 2889, column: 7, scope: !3662)
!3740 = !DILocation(line: 2890, column: 7, scope: !3662)
!3741 = !DILocation(line: 2891, column: 13, scope: !3662)
!3742 = !DILocation(line: 2893, column: 7, scope: !3662)
!3743 = !DILocation(line: 2896, column: 8, scope: !3665)
!3744 = !DILocation(line: 0, scope: !3665)
!3745 = !DILocation(line: 2897, column: 10, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 2897, column: 8)
!3747 = !DILocation(line: 2897, column: 8, scope: !3665)
!3748 = !DILocation(line: 2900, column: 10, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 2900, column: 8)
!3750 = !DILocation(line: 2900, column: 8, scope: !3665)
!3751 = !DILocation(line: 2907, column: 8, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 2901, column: 6)
!3753 = !DILocation(line: 2908, column: 8, scope: !3752)
!3754 = !DILocation(line: 2909, column: 8, scope: !3752)
!3755 = !DILocation(line: 2911, column: 16, scope: !3752)
!3756 = !DILocation(line: 2912, column: 8, scope: !3752)
!3757 = !DILocation(line: 2913, column: 8, scope: !3752)
!3758 = !DILocation(line: 2914, column: 6, scope: !3752)
!3759 = !DILocation(line: 2917, column: 8, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 2916, column: 6)
!3761 = !DILocation(line: 2918, column: 8, scope: !3760)
!3762 = !DILocation(line: 2919, column: 8, scope: !3760)
!3763 = !DILocation(line: 2921, column: 16, scope: !3760)
!3764 = !DILocation(line: 2922, column: 8, scope: !3760)
!3765 = !DILocation(line: 2923, column: 8, scope: !3760)
!3766 = !DILocation(line: 0, scope: !3749)
!3767 = !DILocation(line: 2925, column: 10, scope: !3665)
!3768 = !DILocation(line: 2926, column: 2, scope: !3666)
!3769 = distinct !{!3769, !3770, !3771}
!3770 = !DILocation(line: 2893, column: 7, scope: !3667)
!3771 = !DILocation(line: 2926, column: 2, scope: !3667)
!3772 = !DILocation(line: 2932, column: 17, scope: !3627)
!3773 = !DILocation(line: 2932, column: 3, scope: !3627)
!3774 = !DILocation(line: 2933, column: 3, scope: !3627)
!3775 = !DILocation(line: 2938, column: 3, scope: !3627)
!3776 = !DILocation(line: 2939, column: 3, scope: !3627)
!3777 = !DILocation(line: 2940, column: 3, scope: !3627)
!3778 = !DILocation(line: 2941, column: 3, scope: !3627)
!3779 = !DILocation(line: 0, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 2946, column: 11)
!3781 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2944, column: 5)
!3782 = !DILocation(line: 2943, column: 3, scope: !3627)
!3783 = !DILocation(line: 2943, column: 15, scope: !3627)
!3784 = !DILocation(line: 2943, column: 18, scope: !3627)
!3785 = !DILocation(line: 2946, column: 11, scope: !3780)
!3786 = !DILocation(line: 2946, column: 26, scope: !3780)
!3787 = !DILocation(line: 2946, column: 29, scope: !3780)
!3788 = !DILocation(line: 2946, column: 11, scope: !3781)
!3789 = !DILocation(line: 2948, column: 4, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 2947, column: 2)
!3791 = !DILocation(line: 2949, column: 4, scope: !3790)
!3792 = !DILocation(line: 2950, column: 2, scope: !3790)
!3793 = !DILocation(line: 2951, column: 7, scope: !3781)
!3794 = !DILocation(line: 2952, column: 7, scope: !3781)
!3795 = distinct !{!3795, !3782, !3796}
!3796 = !DILocation(line: 2953, column: 5, scope: !3627)
!3797 = !DILocation(line: 2956, column: 3, scope: !3627)
!3798 = !DILocation(line: 2957, column: 7, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2957, column: 7)
!3800 = !DILocation(line: 2957, column: 27, scope: !3799)
!3801 = !DILocation(line: 2957, column: 7, scope: !3627)
!3802 = !DILocation(line: 2959, column: 7, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 2958, column: 5)
!3804 = !DILocation(line: 2960, column: 7, scope: !3803)
!3805 = !DILocation(line: 2961, column: 5, scope: !3803)
!3806 = !DILocation(line: 2962, column: 10, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2962, column: 7)
!3808 = !DILocation(line: 2962, column: 19, scope: !3807)
!3809 = !DILocation(line: 2962, column: 7, scope: !3627)
!3810 = !DILocation(line: 2963, column: 5, scope: !3807)
!3811 = !DILocation(line: 2964, column: 10, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2964, column: 7)
!3813 = !DILocation(line: 2964, column: 19, scope: !3812)
!3814 = !DILocation(line: 2964, column: 7, scope: !3627)
!3815 = !DILocation(line: 2965, column: 5, scope: !3812)
!3816 = !DILocation(line: 2967, column: 3, scope: !3627)
!3817 = !DILocation(line: 2968, column: 7, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2968, column: 7)
!3819 = !DILocation(line: 2968, column: 7, scope: !3627)
!3820 = !DILocation(line: 2969, column: 5, scope: !3818)
!3821 = !DILocation(line: 2970, column: 7, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2970, column: 7)
!3823 = !DILocation(line: 2970, column: 7, scope: !3627)
!3824 = !DILocation(line: 2971, column: 5, scope: !3822)
!3825 = !DILocation(line: 2973, column: 3, scope: !3627)
!3826 = !DILocation(line: 2974, column: 3, scope: !3627)
!3827 = !DILocation(line: 2975, column: 3, scope: !3627)
!3828 = !DILocation(line: 2976, column: 3, scope: !3627)
!3829 = !DILocation(line: 2977, column: 3, scope: !3627)
!3830 = !DILocation(line: 2978, column: 3, scope: !3627)
!3831 = !DILocation(line: 2979, column: 1, scope: !3627)
!3832 = distinct !DISubprogram(name: "mpz_setbit", scope: !3, file: !3, line: 3577, type: !1345, scopeLine: 3578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3833)
!3833 = !{!3834, !3835}
!3834 = !DILocalVariable(name: "d", arg: 1, scope: !3832, file: !3, line: 3577, type: !1314)
!3835 = !DILocalVariable(name: "bit_index", arg: 2, scope: !3832, file: !3, line: 3577, type: !20)
!3836 = !DILocation(line: 0, scope: !3832)
!3837 = !DILocation(line: 3579, column: 8, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 3579, column: 7)
!3839 = !DILocation(line: 3579, column: 7, scope: !3832)
!3840 = !DILocation(line: 3581, column: 14, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 3581, column: 11)
!3842 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 3580, column: 5)
!3843 = !DILocation(line: 3581, column: 23, scope: !3841)
!3844 = !DILocation(line: 3581, column: 11, scope: !3842)
!3845 = !DILocation(line: 3582, column: 2, scope: !3841)
!3846 = !DILocation(line: 3584, column: 2, scope: !3841)
!3847 = !DILocation(line: 3586, column: 1, scope: !3832)
!3848 = distinct !DISubprogram(name: "mpz_lcm", scope: !3, file: !3, line: 2982, type: !2188, scopeLine: 2983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3849)
!3849 = !{!3850, !3851, !3852, !3853}
!3850 = !DILocalVariable(name: "r", arg: 1, scope: !3848, file: !3, line: 2982, type: !1314)
!3851 = !DILocalVariable(name: "u", arg: 2, scope: !3848, file: !3, line: 2982, type: !1411)
!3852 = !DILocalVariable(name: "v", arg: 3, scope: !3848, file: !3, line: 2982, type: !1411)
!3853 = !DILocalVariable(name: "g", scope: !3848, file: !3, line: 2984, type: !2375)
!3854 = !DILocation(line: 0, scope: !3848)
!3855 = !DILocation(line: 2984, column: 3, scope: !3848)
!3856 = !DILocation(line: 2984, column: 9, scope: !3848)
!3857 = !DILocation(line: 2986, column: 10, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 2986, column: 7)
!3859 = !DILocation(line: 2986, column: 19, scope: !3858)
!3860 = !DILocation(line: 2986, column: 24, scope: !3858)
!3861 = !DILocation(line: 2986, column: 30, scope: !3858)
!3862 = !DILocation(line: 2986, column: 39, scope: !3858)
!3863 = !DILocation(line: 2986, column: 7, scope: !3848)
!3864 = !DILocation(line: 2988, column: 10, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 2987, column: 5)
!3866 = !DILocation(line: 2988, column: 19, scope: !3865)
!3867 = !DILocation(line: 2989, column: 7, scope: !3865)
!3868 = !DILocation(line: 2992, column: 13, scope: !3848)
!3869 = !DILocation(line: 2992, column: 3, scope: !3848)
!3870 = !DILocation(line: 2994, column: 3, scope: !3848)
!3871 = !DILocation(line: 2995, column: 3, scope: !3848)
!3872 = !DILocation(line: 2996, column: 3, scope: !3848)
!3873 = !DILocation(line: 2998, column: 3, scope: !3848)
!3874 = !DILocation(line: 2999, column: 3, scope: !3848)
!3875 = !DILocation(line: 3000, column: 1, scope: !3848)
!3876 = distinct !DISubprogram(name: "mpz_lcm_ui", scope: !3, file: !3, line: 3003, type: !2059, scopeLine: 3004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3877)
!3877 = !{!3878, !3879, !3880}
!3878 = !DILocalVariable(name: "r", arg: 1, scope: !3876, file: !3, line: 3003, type: !1314)
!3879 = !DILocalVariable(name: "u", arg: 2, scope: !3876, file: !3, line: 3003, type: !1411)
!3880 = !DILocalVariable(name: "v", arg: 3, scope: !3876, file: !3, line: 3003, type: !14)
!3881 = !DILocation(line: 0, scope: !3876)
!3882 = !DILocation(line: 3005, column: 9, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 3005, column: 7)
!3884 = !DILocation(line: 3005, column: 14, scope: !3883)
!3885 = !DILocation(line: 3005, column: 20, scope: !3883)
!3886 = !DILocation(line: 3005, column: 29, scope: !3883)
!3887 = !DILocation(line: 3005, column: 7, scope: !3876)
!3888 = !DILocation(line: 3007, column: 10, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 3006, column: 5)
!3890 = !DILocation(line: 3007, column: 19, scope: !3889)
!3891 = !DILocation(line: 3008, column: 7, scope: !3889)
!3892 = !DILocation(line: 3011, column: 8, scope: !3876)
!3893 = !DILocation(line: 3011, column: 5, scope: !3876)
!3894 = !DILocation(line: 3012, column: 3, scope: !3876)
!3895 = !DILocation(line: 3014, column: 3, scope: !3876)
!3896 = !DILocation(line: 3015, column: 1, scope: !3876)
!3897 = distinct !DISubprogram(name: "mpz_invert", scope: !3, file: !3, line: 3018, type: !3898, scopeLine: 3019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3900)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{!19, !1314, !1411, !1411}
!3900 = !{!3901, !3902, !3903, !3904, !3905, !3906}
!3901 = !DILocalVariable(name: "r", arg: 1, scope: !3897, file: !3, line: 3018, type: !1314)
!3902 = !DILocalVariable(name: "u", arg: 2, scope: !3897, file: !3, line: 3018, type: !1411)
!3903 = !DILocalVariable(name: "m", arg: 3, scope: !3897, file: !3, line: 3018, type: !1411)
!3904 = !DILocalVariable(name: "g", scope: !3897, file: !3, line: 3020, type: !2375)
!3905 = !DILocalVariable(name: "tr", scope: !3897, file: !3, line: 3020, type: !2375)
!3906 = !DILocalVariable(name: "invertible", scope: !3897, file: !3, line: 3021, type: !19)
!3907 = !DILocation(line: 0, scope: !3897)
!3908 = !DILocation(line: 3020, column: 3, scope: !3897)
!3909 = !DILocation(line: 3020, column: 9, scope: !3897)
!3910 = !DILocation(line: 3020, column: 12, scope: !3897)
!3911 = !DILocation(line: 3023, column: 10, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 3023, column: 7)
!3913 = !DILocation(line: 3023, column: 19, scope: !3912)
!3914 = !DILocation(line: 3023, column: 24, scope: !3912)
!3915 = !DILocation(line: 3023, column: 27, scope: !3912)
!3916 = !DILocation(line: 3023, column: 48, scope: !3912)
!3917 = !DILocation(line: 3023, column: 7, scope: !3897)
!3918 = !DILocation(line: 3026, column: 13, scope: !3897)
!3919 = !DILocation(line: 3026, column: 3, scope: !3897)
!3920 = !DILocation(line: 3027, column: 13, scope: !3897)
!3921 = !DILocation(line: 3027, column: 3, scope: !3897)
!3922 = !DILocation(line: 3029, column: 3, scope: !3897)
!3923 = !DILocation(line: 3030, column: 17, scope: !3897)
!3924 = !DILocation(line: 3030, column: 35, scope: !3897)
!3925 = !DILocation(line: 3032, column: 7, scope: !3897)
!3926 = !DILocation(line: 3034, column: 15, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 3034, column: 11)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !3, line: 3033, column: 5)
!3929 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 3032, column: 7)
!3930 = !DILocation(line: 3034, column: 24, scope: !3927)
!3931 = !DILocation(line: 3034, column: 11, scope: !3928)
!3932 = !DILocation(line: 3036, column: 11, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !3, line: 3036, column: 8)
!3934 = distinct !DILexicalBlock(scope: !3927, file: !3, line: 3035, column: 2)
!3935 = !DILocation(line: 3036, column: 20, scope: !3933)
!3936 = !DILocation(line: 3036, column: 8, scope: !3934)
!3937 = !DILocation(line: 3037, column: 6, scope: !3933)
!3938 = !DILocation(line: 3039, column: 6, scope: !3933)
!3939 = !DILocation(line: 3041, column: 7, scope: !3928)
!3940 = !DILocation(line: 3042, column: 5, scope: !3928)
!3941 = !DILocation(line: 3044, column: 3, scope: !3897)
!3942 = !DILocation(line: 3045, column: 3, scope: !3897)
!3943 = !DILocation(line: 3046, column: 3, scope: !3897)
!3944 = !DILocation(line: 3047, column: 1, scope: !3897)
!3945 = distinct !DISubprogram(name: "mpz_pow_ui", scope: !3, file: !3, line: 3053, type: !2059, scopeLine: 3054, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3946)
!3946 = !{!3947, !3948, !3949, !3950, !3951}
!3947 = !DILocalVariable(name: "r", arg: 1, scope: !3945, file: !3, line: 3053, type: !1314)
!3948 = !DILocalVariable(name: "b", arg: 2, scope: !3945, file: !3, line: 3053, type: !1411)
!3949 = !DILocalVariable(name: "e", arg: 3, scope: !3945, file: !3, line: 3053, type: !14)
!3950 = !DILocalVariable(name: "bit", scope: !3945, file: !3, line: 3055, type: !14)
!3951 = !DILocalVariable(name: "tr", scope: !3945, file: !3, line: 3056, type: !2375)
!3952 = !DILocation(line: 0, scope: !3945)
!3953 = !DILocation(line: 3056, column: 3, scope: !3945)
!3954 = !DILocation(line: 3056, column: 9, scope: !3945)
!3955 = !DILocation(line: 3057, column: 20, scope: !3945)
!3956 = !DILocation(line: 3057, column: 3, scope: !3945)
!3957 = !DILocation(line: 3060, column: 3, scope: !3945)
!3958 = !DILocation(line: 3062, column: 7, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 3061, column: 5)
!3960 = !DILocation(line: 3063, column: 13, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 3063, column: 11)
!3962 = !DILocation(line: 3063, column: 11, scope: !3959)
!3963 = !DILocation(line: 3064, column: 2, scope: !3961)
!3964 = !DILocation(line: 3065, column: 11, scope: !3959)
!3965 = !DILocation(line: 3067, column: 14, scope: !3945)
!3966 = !DILocation(line: 3066, column: 5, scope: !3959)
!3967 = distinct !{!3967, !3957, !3968}
!3968 = !DILocation(line: 3067, column: 17, scope: !3945)
!3969 = !DILocation(line: 3069, column: 3, scope: !3945)
!3970 = !DILocation(line: 3070, column: 3, scope: !3945)
!3971 = !DILocation(line: 3071, column: 1, scope: !3945)
!3972 = distinct !DISubprogram(name: "mpz_ui_pow_ui", scope: !3, file: !3, line: 3074, type: !3973, scopeLine: 3075, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3975)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{null, !1314, !14, !14}
!3975 = !{!3976, !3977, !3978, !3979}
!3976 = !DILocalVariable(name: "r", arg: 1, scope: !3972, file: !3, line: 3074, type: !1314)
!3977 = !DILocalVariable(name: "blimb", arg: 2, scope: !3972, file: !3, line: 3074, type: !14)
!3978 = !DILocalVariable(name: "e", arg: 3, scope: !3972, file: !3, line: 3074, type: !14)
!3979 = !DILocalVariable(name: "b", scope: !3972, file: !3, line: 3076, type: !2375)
!3980 = !DILocation(line: 0, scope: !3972)
!3981 = !DILocation(line: 3076, column: 3, scope: !3972)
!3982 = !DILocation(line: 3076, column: 9, scope: !3972)
!3983 = !DILocation(line: 3077, column: 20, scope: !3972)
!3984 = !DILocation(line: 3077, column: 3, scope: !3972)
!3985 = !DILocation(line: 3078, column: 3, scope: !3972)
!3986 = !DILocation(line: 3079, column: 3, scope: !3972)
!3987 = !DILocation(line: 3080, column: 1, scope: !3972)
!3988 = distinct !DISubprogram(name: "mpz_powm", scope: !3, file: !3, line: 3083, type: !3989, scopeLine: 3084, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3991)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{null, !1314, !1411, !1411, !1411}
!3991 = !{!3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4008, !4011, !4014, !4016, !4018}
!3992 = !DILocalVariable(name: "r", arg: 1, scope: !3988, file: !3, line: 3083, type: !1314)
!3993 = !DILocalVariable(name: "b", arg: 2, scope: !3988, file: !3, line: 3083, type: !1411)
!3994 = !DILocalVariable(name: "e", arg: 3, scope: !3988, file: !3, line: 3083, type: !1411)
!3995 = !DILocalVariable(name: "m", arg: 4, scope: !3988, file: !3, line: 3083, type: !1411)
!3996 = !DILocalVariable(name: "tr", scope: !3988, file: !3, line: 3085, type: !2375)
!3997 = !DILocalVariable(name: "base", scope: !3988, file: !3, line: 3086, type: !2375)
!3998 = !DILocalVariable(name: "en", scope: !3988, file: !3, line: 3087, type: !154)
!3999 = !DILocalVariable(name: "mn", scope: !3988, file: !3, line: 3087, type: !154)
!4000 = !DILocalVariable(name: "mp", scope: !3988, file: !3, line: 3088, type: !151)
!4001 = !DILocalVariable(name: "minv", scope: !3988, file: !3, line: 3089, type: !1067)
!4002 = !DILocalVariable(name: "shift", scope: !3988, file: !3, line: 3090, type: !6)
!4003 = !DILocalVariable(name: "tp", scope: !3988, file: !3, line: 3091, type: !16)
!4004 = !DILocalVariable(name: "__cy", scope: !4005, file: !3, line: 3115, type: !12)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 3115, column: 7)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 3109, column: 5)
!4007 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 3108, column: 7)
!4008 = !DILocalVariable(name: "bn", scope: !4009, file: !3, line: 3128, type: !154)
!4009 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 3127, column: 5)
!4010 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 3121, column: 7)
!4011 = !DILocalVariable(name: "bp", scope: !4012, file: !3, line: 3143, type: !16)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 3142, column: 2)
!4013 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 3141, column: 11)
!4014 = !DILocalVariable(name: "__cy", scope: !4015, file: !3, line: 3144, type: !12)
!4015 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 3144, column: 4)
!4016 = !DILocalVariable(name: "w", scope: !4017, file: !3, line: 3153, type: !12)
!4017 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 3152, column: 5)
!4018 = !DILocalVariable(name: "bit", scope: !4017, file: !3, line: 3154, type: !12)
!4019 = !DILocation(line: 0, scope: !3988)
!4020 = !DILocation(line: 3085, column: 3, scope: !3988)
!4021 = !DILocation(line: 3085, column: 9, scope: !3988)
!4022 = !DILocation(line: 3086, column: 3, scope: !3988)
!4023 = !DILocation(line: 3086, column: 9, scope: !3988)
!4024 = !DILocation(line: 3089, column: 3, scope: !3988)
!4025 = !DILocation(line: 3093, column: 8, scope: !3988)
!4026 = !DILocation(line: 3094, column: 8, scope: !3988)
!4027 = !DILocation(line: 3095, column: 10, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 3095, column: 7)
!4029 = !DILocation(line: 3095, column: 7, scope: !3988)
!4030 = !DILocation(line: 3096, column: 5, scope: !4028)
!4031 = !DILocation(line: 3098, column: 10, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 3098, column: 7)
!4033 = !DILocation(line: 3098, column: 7, scope: !3988)
!4034 = !DILocation(line: 3100, column: 7, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 3099, column: 5)
!4036 = !DILocation(line: 3101, column: 7, scope: !4035)
!4037 = !DILocation(line: 3104, column: 11, scope: !3988)
!4038 = !DILocation(line: 3105, column: 3, scope: !3988)
!4039 = !DILocation(line: 3106, column: 16, scope: !3988)
!4040 = !{!4041, !1050, i64 0}
!4041 = !{!"gmp_div_inverse", !1050, i64 0, !169, i64 8, !169, i64 16, !169, i64 24}
!4042 = !DILocation(line: 3108, column: 13, scope: !4007)
!4043 = !DILocation(line: 3108, column: 7, scope: !3988)
!4044 = !DILocation(line: 3112, column: 18, scope: !4006)
!4045 = !DILocation(line: 3114, column: 12, scope: !4006)
!4046 = !DILocation(line: 3115, column: 7, scope: !4005)
!4047 = !DILocation(line: 0, scope: !4005)
!4048 = !DILocation(line: 3115, column: 7, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 3115, column: 7)
!4050 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 3115, column: 7)
!4051 = !DILocation(line: 3115, column: 7, scope: !4050)
!4052 = !DILocation(line: 3119, column: 13, scope: !3988)
!4053 = !DILocation(line: 3119, column: 3, scope: !3988)
!4054 = !DILocation(line: 3121, column: 10, scope: !4010)
!4055 = !DILocation(line: 3121, column: 19, scope: !4010)
!4056 = !DILocation(line: 3121, column: 7, scope: !3988)
!4057 = !DILocation(line: 3123, column: 12, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 3123, column: 11)
!4059 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 3122, column: 5)
!4060 = !DILocation(line: 3123, column: 11, scope: !4059)
!4061 = !DILocation(line: 3124, column: 2, scope: !4058)
!4062 = !DILocation(line: 3129, column: 7, scope: !4009)
!4063 = !DILocation(line: 3131, column: 18, scope: !4009)
!4064 = !DILocation(line: 3131, column: 12, scope: !4009)
!4065 = !DILocation(line: 0, scope: !4009)
!4066 = !DILocation(line: 3132, column: 14, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 3132, column: 11)
!4068 = !DILocation(line: 3132, column: 11, scope: !4009)
!4069 = !DILocation(line: 3134, column: 35, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 3133, column: 2)
!4071 = !DILocation(line: 3134, column: 4, scope: !4070)
!4072 = !DILocation(line: 3136, column: 2, scope: !4070)
!4073 = !DILocation(line: 3141, column: 14, scope: !4013)
!4074 = !DILocation(line: 3141, column: 23, scope: !4013)
!4075 = !DILocation(line: 3141, column: 11, scope: !4009)
!4076 = !DILocation(line: 3143, column: 16, scope: !4012)
!4077 = !DILocation(line: 0, scope: !4012)
!4078 = !DILocation(line: 3144, column: 4, scope: !4015)
!4079 = !DILocation(line: 0, scope: !4015)
!4080 = !DILocation(line: 3144, column: 4, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 3144, column: 4)
!4082 = distinct !DILexicalBlock(scope: !4015, file: !3, line: 3144, column: 4)
!4083 = !DILocation(line: 3144, column: 4, scope: !4082)
!4084 = !DILocation(line: 3147, column: 51, scope: !4009)
!4085 = !DILocation(line: 3147, column: 24, scope: !4009)
!4086 = !DILocation(line: 3147, column: 22, scope: !4009)
!4087 = !DILocation(line: 3149, column: 20, scope: !3988)
!4088 = !DILocation(line: 3149, column: 3, scope: !3988)
!4089 = !DILocation(line: 0, scope: !4017)
!4090 = !DILocation(line: 0, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 3162, column: 8)
!4092 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 3158, column: 2)
!4093 = !DILocation(line: 0, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4091, file: !3, line: 3163, column: 6)
!4095 = !DILocation(line: 3151, column: 3, scope: !3988)
!4096 = !DILocation(line: 3151, column: 12, scope: !3988)
!4097 = !DILocation(line: 3151, column: 15, scope: !3988)
!4098 = !DILocation(line: 3153, column: 24, scope: !4017)
!4099 = !DILocation(line: 3153, column: 21, scope: !4017)
!4100 = !DILocation(line: 3157, column: 7, scope: !4017)
!4101 = !DILocation(line: 3159, column: 4, scope: !4092)
!4102 = !DILocation(line: 3160, column: 10, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 3160, column: 8)
!4104 = !DILocation(line: 3160, column: 8, scope: !4092)
!4105 = !DILocation(line: 3161, column: 6, scope: !4103)
!4106 = !DILocation(line: 3162, column: 12, scope: !4091)
!4107 = !DILocation(line: 3162, column: 8, scope: !4091)
!4108 = !DILocation(line: 3162, column: 21, scope: !4091)
!4109 = !DILocation(line: 3162, column: 8, scope: !4092)
!4110 = !DILocation(line: 3164, column: 37, scope: !4094)
!4111 = !DILocation(line: 3164, column: 8, scope: !4094)
!4112 = !DILocation(line: 3165, column: 48, scope: !4094)
!4113 = !DILocation(line: 3165, column: 23, scope: !4094)
!4114 = !DILocation(line: 3165, column: 21, scope: !4094)
!4115 = !DILocation(line: 3166, column: 6, scope: !4094)
!4116 = !DILocation(line: 3167, column: 8, scope: !4092)
!4117 = !DILocation(line: 3169, column: 18, scope: !4017)
!4118 = !DILocation(line: 3168, column: 2, scope: !4092)
!4119 = distinct !{!4119, !4095, !4120}
!4120 = !DILocation(line: 3170, column: 5, scope: !3988)
!4121 = !DILocation(line: 3173, column: 11, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 3173, column: 7)
!4123 = !DILocation(line: 3173, column: 7, scope: !4122)
!4124 = !DILocation(line: 3173, column: 20, scope: !4122)
!4125 = !DILocation(line: 3173, column: 7, scope: !3988)
!4126 = !DILocation(line: 3175, column: 18, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 3174, column: 5)
!4128 = !DILocation(line: 3176, column: 36, scope: !4127)
!4129 = !DILocation(line: 3176, column: 7, scope: !4127)
!4130 = !DILocation(line: 3177, column: 47, scope: !4127)
!4131 = !DILocation(line: 3177, column: 22, scope: !4127)
!4132 = !DILocation(line: 3177, column: 20, scope: !4127)
!4133 = !DILocation(line: 3178, column: 5, scope: !4127)
!4134 = !DILocation(line: 3179, column: 7, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 3179, column: 7)
!4136 = !DILocation(line: 3179, column: 7, scope: !3988)
!4137 = !DILocation(line: 3180, column: 5, scope: !4135)
!4138 = !DILocation(line: 3182, column: 3, scope: !3988)
!4139 = !DILocation(line: 3183, column: 3, scope: !3988)
!4140 = !DILocation(line: 3184, column: 3, scope: !3988)
!4141 = !DILocation(line: 3185, column: 1, scope: !3988)
!4142 = distinct !DISubprogram(name: "gmp_die", scope: !3, file: !3, line: 244, type: !4143, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4148)
!4143 = !DISubroutineType(types: !4144)
!4144 = !{null, !4145}
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4147)
!4147 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!4148 = !{!4149}
!4149 = !DILocalVariable(name: "msg", arg: 1, scope: !4142, file: !3, line: 244, type: !4145)
!4150 = !DILocation(line: 0, scope: !4142)
!4151 = !DILocation(line: 246, column: 12, scope: !4142)
!4152 = !DILocation(line: 246, column: 3, scope: !4142)
!4153 = !DILocation(line: 247, column: 3, scope: !4142)
!4154 = distinct !DISubprogram(name: "mpn_div_qr_invert", scope: !3, file: !3, line: 828, type: !4155, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4158)
!4155 = !DISubroutineType(types: !4156)
!4156 = !{null, !4157, !151, !154}
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!4158 = !{!4159, !4160, !4161, !4162, !4166, !4167, !4168, !4170}
!4159 = !DILocalVariable(name: "inv", arg: 1, scope: !4154, file: !3, line: 828, type: !4157)
!4160 = !DILocalVariable(name: "dp", arg: 2, scope: !4154, file: !3, line: 829, type: !151)
!4161 = !DILocalVariable(name: "dn", arg: 3, scope: !4154, file: !3, line: 829, type: !154)
!4162 = !DILocalVariable(name: "shift", scope: !4163, file: !3, line: 839, type: !6)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !3, line: 838, column: 5)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 835, column: 12)
!4165 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 833, column: 7)
!4166 = !DILocalVariable(name: "d1", scope: !4163, file: !3, line: 840, type: !12)
!4167 = !DILocalVariable(name: "d0", scope: !4163, file: !3, line: 840, type: !12)
!4168 = !DILocalVariable(name: "__clz_x", scope: !4169, file: !3, line: 845, type: !12)
!4169 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 845, column: 7)
!4170 = !DILocalVariable(name: "__clz_c", scope: !4169, file: !3, line: 845, type: !6)
!4171 = !DILocation(line: 0, scope: !4154)
!4172 = !DILocation(line: 831, column: 3, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 831, column: 3)
!4174 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 831, column: 3)
!4175 = !DILocation(line: 831, column: 3, scope: !4174)
!4176 = !DILocation(line: 833, column: 7, scope: !4154)
!4177 = !DILocation(line: 834, column: 31, scope: !4165)
!4178 = !DILocation(line: 834, column: 5, scope: !4165)
!4179 = !DILocation(line: 836, column: 31, scope: !4164)
!4180 = !DILocation(line: 836, column: 38, scope: !4164)
!4181 = !DILocation(line: 836, column: 5, scope: !4164)
!4182 = !DILocation(line: 842, column: 17, scope: !4163)
!4183 = !DILocation(line: 842, column: 12, scope: !4163)
!4184 = !DILocation(line: 0, scope: !4163)
!4185 = !DILocation(line: 843, column: 17, scope: !4163)
!4186 = !DILocation(line: 843, column: 12, scope: !4163)
!4187 = !DILocation(line: 844, column: 7, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4189, file: !3, line: 844, column: 7)
!4189 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 844, column: 7)
!4190 = !DILocation(line: 844, column: 7, scope: !4189)
!4191 = !DILocation(line: 845, column: 7, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4169, file: !3, line: 845, column: 7)
!4193 = !DILocation(line: 0, scope: !4169)
!4194 = !DILocation(line: 0, scope: !4192)
!4195 = !DILocation(line: 845, column: 7, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 845, column: 7)
!4197 = !DILocation(line: 845, column: 7, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4169, file: !3, line: 845, column: 7)
!4199 = distinct !{!4199, !4191, !4191}
!4200 = !DILocation(line: 845, column: 7, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 845, column: 7)
!4202 = distinct !{!4202, !4197, !4197}
!4203 = !DILocation(line: 846, column: 12, scope: !4163)
!4204 = !DILocation(line: 846, column: 18, scope: !4163)
!4205 = !DILocation(line: 847, column: 17, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 847, column: 11)
!4207 = !DILocation(line: 847, column: 11, scope: !4163)
!4208 = !DILocation(line: 849, column: 13, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4206, file: !3, line: 848, column: 2)
!4210 = !DILocation(line: 849, column: 47, scope: !4209)
!4211 = !DILocation(line: 849, column: 29, scope: !4209)
!4212 = !DILocation(line: 849, column: 23, scope: !4209)
!4213 = !DILocation(line: 850, column: 13, scope: !4209)
!4214 = !DILocation(line: 850, column: 31, scope: !4209)
!4215 = !DILocation(line: 850, column: 26, scope: !4209)
!4216 = !DILocation(line: 850, column: 35, scope: !4209)
!4217 = !DILocation(line: 850, column: 23, scope: !4209)
!4218 = !DILocation(line: 851, column: 2, scope: !4209)
!4219 = !DILocation(line: 852, column: 12, scope: !4163)
!4220 = !DILocation(line: 852, column: 15, scope: !4163)
!4221 = !{!4041, !169, i64 8}
!4222 = !DILocation(line: 853, column: 12, scope: !4163)
!4223 = !DILocation(line: 853, column: 15, scope: !4163)
!4224 = !{!4041, !169, i64 16}
!4225 = !DILocation(line: 854, column: 17, scope: !4163)
!4226 = !DILocation(line: 854, column: 12, scope: !4163)
!4227 = !DILocation(line: 854, column: 15, scope: !4163)
!4228 = !{!4041, !169, i64 24}
!4229 = !DILocation(line: 856, column: 1, scope: !4154)
!4230 = distinct !DISubprogram(name: "mpn_div_qr_preinv", scope: !3, file: !3, line: 1051, type: !4231, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4235)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{null, !16, !16, !154, !151, !154, !4233}
!4233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4234, size: 64)
!4234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1067)
!4235 = !{!4236, !4237, !4238, !4239, !4240, !4241, !4242, !4246, !4247}
!4236 = !DILocalVariable(name: "qp", arg: 1, scope: !4230, file: !3, line: 1051, type: !16)
!4237 = !DILocalVariable(name: "np", arg: 2, scope: !4230, file: !3, line: 1051, type: !16)
!4238 = !DILocalVariable(name: "nn", arg: 3, scope: !4230, file: !3, line: 1051, type: !154)
!4239 = !DILocalVariable(name: "dp", arg: 4, scope: !4230, file: !3, line: 1052, type: !151)
!4240 = !DILocalVariable(name: "dn", arg: 5, scope: !4230, file: !3, line: 1052, type: !154)
!4241 = !DILocalVariable(name: "inv", arg: 6, scope: !4230, file: !3, line: 1053, type: !4233)
!4242 = !DILocalVariable(name: "nh", scope: !4243, file: !3, line: 1064, type: !12)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 1063, column: 5)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 1060, column: 12)
!4245 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 1058, column: 7)
!4246 = !DILocalVariable(name: "shift", scope: !4243, file: !3, line: 1065, type: !6)
!4247 = !DILocalVariable(name: "__cy", scope: !4248, file: !3, line: 1080, type: !12)
!4248 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 1080, column: 2)
!4249 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1079, column: 11)
!4250 = !DILocation(line: 0, scope: !4230)
!4251 = !DILocation(line: 1055, column: 3, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 1055, column: 3)
!4253 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 1055, column: 3)
!4254 = !DILocation(line: 1055, column: 3, scope: !4253)
!4255 = !DILocation(line: 1056, column: 3, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 1056, column: 3)
!4257 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 1056, column: 3)
!4258 = !DILocation(line: 1056, column: 3, scope: !4257)
!4259 = !DILocation(line: 1058, column: 7, scope: !4230)
!4260 = !DILocation(line: 1059, column: 13, scope: !4245)
!4261 = !DILocation(line: 1059, column: 11, scope: !4245)
!4262 = !DILocation(line: 1059, column: 5, scope: !4245)
!4263 = !DILocation(line: 1061, column: 5, scope: !4244)
!4264 = !DILocation(line: 1067, column: 7, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4266, file: !3, line: 1067, column: 7)
!4266 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1067, column: 7)
!4267 = !DILocation(line: 1067, column: 7, scope: !4266)
!4268 = !DILocation(line: 1068, column: 7, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !3, line: 1068, column: 7)
!4270 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1068, column: 7)
!4271 = !DILocation(line: 1068, column: 7, scope: !4270)
!4272 = !DILocation(line: 1069, column: 7, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4274, file: !3, line: 1069, column: 7)
!4274 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1069, column: 7)
!4275 = !DILocation(line: 1069, column: 7, scope: !4274)
!4276 = !DILocation(line: 1071, column: 20, scope: !4243)
!4277 = !DILocation(line: 0, scope: !4243)
!4278 = !DILocation(line: 1072, column: 17, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1072, column: 11)
!4280 = !DILocation(line: 1072, column: 11, scope: !4243)
!4281 = !DILocation(line: 1073, column: 7, scope: !4279)
!4282 = !DILocation(line: 1073, column: 2, scope: !4279)
!4283 = !DILocation(line: 0, scope: !4279)
!4284 = !DILocation(line: 1077, column: 52, scope: !4243)
!4285 = !DILocation(line: 1077, column: 7, scope: !4243)
!4286 = !DILocation(line: 1079, column: 11, scope: !4243)
!4287 = !DILocation(line: 1080, column: 2, scope: !4248)
!4288 = !DILocation(line: 0, scope: !4248)
!4289 = !DILocation(line: 1080, column: 2, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !3, line: 1080, column: 2)
!4291 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 1080, column: 2)
!4292 = !DILocation(line: 1080, column: 2, scope: !4291)
!4293 = !DILocation(line: 1082, column: 1, scope: !4230)
!4294 = distinct !DISubprogram(name: "mpz_powm_ui", scope: !3, file: !3, line: 3188, type: !4295, scopeLine: 3189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4297)
!4295 = !DISubroutineType(types: !4296)
!4296 = !{null, !1314, !1411, !14, !1411}
!4297 = !{!4298, !4299, !4300, !4301, !4302}
!4298 = !DILocalVariable(name: "r", arg: 1, scope: !4294, file: !3, line: 3188, type: !1314)
!4299 = !DILocalVariable(name: "b", arg: 2, scope: !4294, file: !3, line: 3188, type: !1411)
!4300 = !DILocalVariable(name: "elimb", arg: 3, scope: !4294, file: !3, line: 3188, type: !14)
!4301 = !DILocalVariable(name: "m", arg: 4, scope: !4294, file: !3, line: 3188, type: !1411)
!4302 = !DILocalVariable(name: "e", scope: !4294, file: !3, line: 3190, type: !2375)
!4303 = !DILocation(line: 0, scope: !4294)
!4304 = !DILocation(line: 3190, column: 3, scope: !4294)
!4305 = !DILocation(line: 3190, column: 9, scope: !4294)
!4306 = !DILocation(line: 3191, column: 20, scope: !4294)
!4307 = !DILocation(line: 3191, column: 3, scope: !4294)
!4308 = !DILocation(line: 3192, column: 3, scope: !4294)
!4309 = !DILocation(line: 3193, column: 3, scope: !4294)
!4310 = !DILocation(line: 3194, column: 1, scope: !4294)
!4311 = distinct !DISubprogram(name: "mpz_rootrem", scope: !3, file: !3, line: 3198, type: !4312, scopeLine: 3199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4314)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{null, !1314, !1314, !1411, !14}
!4314 = !{!4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4324}
!4315 = !DILocalVariable(name: "x", arg: 1, scope: !4311, file: !3, line: 3198, type: !1314)
!4316 = !DILocalVariable(name: "r", arg: 2, scope: !4311, file: !3, line: 3198, type: !1314)
!4317 = !DILocalVariable(name: "y", arg: 3, scope: !4311, file: !3, line: 3198, type: !1411)
!4318 = !DILocalVariable(name: "z", arg: 4, scope: !4311, file: !3, line: 3198, type: !14)
!4319 = !DILocalVariable(name: "sgn", scope: !4311, file: !3, line: 3200, type: !19)
!4320 = !DILocalVariable(name: "t", scope: !4311, file: !3, line: 3201, type: !2375)
!4321 = !DILocalVariable(name: "u", scope: !4311, file: !3, line: 3201, type: !2375)
!4322 = !DILocalVariable(name: "tb", scope: !4323, file: !3, line: 3219, type: !20)
!4323 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 3218, column: 3)
!4324 = !DILocalVariable(name: "v", scope: !4325, file: !3, line: 3233, type: !2375)
!4325 = distinct !DILexicalBlock(scope: !4326, file: !3, line: 3232, column: 21)
!4326 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 3225, column: 7)
!4327 = !DILocation(line: 0, scope: !4311)
!4328 = !DILocation(line: 3201, column: 3, scope: !4311)
!4329 = !DILocation(line: 3201, column: 9, scope: !4311)
!4330 = !DILocation(line: 3201, column: 12, scope: !4311)
!4331 = !DILocation(line: 3203, column: 12, scope: !4311)
!4332 = !DILocation(line: 3203, column: 21, scope: !4311)
!4333 = !DILocation(line: 3204, column: 8, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 3204, column: 7)
!4335 = !DILocation(line: 3204, column: 13, scope: !4334)
!4336 = !DILocation(line: 3204, column: 11, scope: !4334)
!4337 = !DILocation(line: 3204, column: 18, scope: !4334)
!4338 = !DILocation(line: 3204, column: 7, scope: !4311)
!4339 = !DILocation(line: 3205, column: 5, scope: !4334)
!4340 = !DILocation(line: 3206, column: 9, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 3206, column: 7)
!4342 = !DILocation(line: 3206, column: 7, scope: !4311)
!4343 = !DILocation(line: 3207, column: 5, scope: !4341)
!4344 = !DILocation(line: 3209, column: 7, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 3209, column: 7)
!4346 = !DILocation(line: 3209, column: 28, scope: !4345)
!4347 = !DILocation(line: 3209, column: 7, scope: !4311)
!4348 = !DILocation(line: 3210, column: 9, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 3210, column: 9)
!4350 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 3209, column: 34)
!4351 = !DILocation(line: 3210, column: 9, scope: !4350)
!4352 = !DILocation(line: 3211, column: 7, scope: !4349)
!4353 = !DILocation(line: 3212, column: 9, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 3212, column: 9)
!4355 = !DILocation(line: 3212, column: 9, scope: !4350)
!4356 = !DILocation(line: 3213, column: 10, scope: !4354)
!4357 = !DILocation(line: 3213, column: 19, scope: !4354)
!4358 = !DILocation(line: 3213, column: 7, scope: !4354)
!4359 = !DILocation(line: 3217, column: 13, scope: !4311)
!4360 = !DILocation(line: 3217, column: 3, scope: !4311)
!4361 = !DILocation(line: 3220, column: 10, scope: !4323)
!4362 = !DILocation(line: 3220, column: 32, scope: !4323)
!4363 = !DILocation(line: 3220, column: 36, scope: !4323)
!4364 = !DILocation(line: 0, scope: !4323)
!4365 = !DILocation(line: 3221, column: 16, scope: !4323)
!4366 = !DILocation(line: 3221, column: 5, scope: !4323)
!4367 = !DILocation(line: 3222, column: 5, scope: !4323)
!4368 = !DILocation(line: 3225, column: 9, scope: !4326)
!4369 = !DILocation(line: 3225, column: 7, scope: !4311)
!4370 = !DILocation(line: 3226, column: 5, scope: !4326)
!4371 = !DILocation(line: 3227, column: 7, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4326, file: !3, line: 3226, column: 8)
!4373 = !DILocation(line: 3228, column: 7, scope: !4372)
!4374 = !DILocation(line: 3229, column: 7, scope: !4372)
!4375 = !DILocation(line: 3230, column: 7, scope: !4372)
!4376 = !DILocation(line: 3231, column: 14, scope: !4326)
!4377 = !DILocation(line: 3231, column: 32, scope: !4326)
!4378 = !DILocation(line: 3231, column: 5, scope: !4372)
!4379 = distinct !{!4379, !4370, !4380}
!4380 = !DILocation(line: 3231, column: 35, scope: !4326)
!4381 = !DILocation(line: 3233, column: 5, scope: !4325)
!4382 = !DILocation(line: 3233, column: 11, scope: !4325)
!4383 = !DILocation(line: 3235, column: 15, scope: !4325)
!4384 = !DILocation(line: 3235, column: 5, scope: !4325)
!4385 = !DILocation(line: 3236, column: 9, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4325, file: !3, line: 3236, column: 9)
!4387 = !DILocation(line: 3236, column: 9, scope: !4325)
!4388 = !DILocation(line: 3237, column: 7, scope: !4386)
!4389 = !DILocation(line: 0, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4325, file: !3, line: 3239, column: 8)
!4391 = !DILocation(line: 3239, column: 5, scope: !4325)
!4392 = !DILocation(line: 3240, column: 7, scope: !4390)
!4393 = !DILocation(line: 3241, column: 7, scope: !4390)
!4394 = !DILocation(line: 3242, column: 7, scope: !4390)
!4395 = !DILocation(line: 3243, column: 7, scope: !4390)
!4396 = !DILocation(line: 3244, column: 7, scope: !4390)
!4397 = !DILocation(line: 3245, column: 7, scope: !4390)
!4398 = !DILocation(line: 3246, column: 14, scope: !4325)
!4399 = !DILocation(line: 3246, column: 32, scope: !4325)
!4400 = !DILocation(line: 3246, column: 5, scope: !4390)
!4401 = distinct !{!4401, !4391, !4402}
!4402 = !DILocation(line: 3246, column: 35, scope: !4325)
!4403 = !DILocation(line: 3248, column: 5, scope: !4325)
!4404 = !DILocation(line: 3249, column: 3, scope: !4326)
!4405 = !DILocation(line: 3251, column: 7, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 3251, column: 7)
!4407 = !DILocation(line: 3251, column: 7, scope: !4311)
!4408 = !DILocation(line: 3252, column: 5, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 3251, column: 10)
!4410 = !DILocation(line: 3253, column: 5, scope: !4409)
!4411 = !DILocation(line: 3254, column: 3, scope: !4409)
!4412 = !DILocation(line: 3255, column: 7, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 3255, column: 7)
!4414 = !DILocation(line: 3255, column: 7, scope: !4311)
!4415 = !DILocation(line: 3256, column: 5, scope: !4413)
!4416 = !DILocation(line: 3257, column: 3, scope: !4311)
!4417 = !DILocation(line: 3258, column: 3, scope: !4311)
!4418 = !DILocation(line: 3259, column: 1, scope: !4311)
!4419 = distinct !DISubprogram(name: "mpz_sizeinbase", scope: !3, file: !3, line: 3992, type: !4420, scopeLine: 3993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4422)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!35, !1411, !19}
!4422 = !{!4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430}
!4423 = !DILocalVariable(name: "u", arg: 1, scope: !4419, file: !3, line: 3992, type: !1411)
!4424 = !DILocalVariable(name: "base", arg: 2, scope: !4419, file: !3, line: 3992, type: !19)
!4425 = !DILocalVariable(name: "un", scope: !4419, file: !3, line: 3994, type: !154)
!4426 = !DILocalVariable(name: "up", scope: !4419, file: !3, line: 3995, type: !151)
!4427 = !DILocalVariable(name: "tp", scope: !4419, file: !3, line: 3996, type: !16)
!4428 = !DILocalVariable(name: "bits", scope: !4419, file: !3, line: 3997, type: !20)
!4429 = !DILocalVariable(name: "bi", scope: !4419, file: !3, line: 3998, type: !1067)
!4430 = !DILocalVariable(name: "ndigits", scope: !4419, file: !3, line: 3999, type: !35)
!4431 = !DILocation(line: 0, scope: !4419)
!4432 = !DILocation(line: 3998, column: 3, scope: !4419)
!4433 = !DILocation(line: 4001, column: 3, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !3, line: 4001, column: 3)
!4435 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 4001, column: 3)
!4436 = !DILocation(line: 4001, column: 3, scope: !4435)
!4437 = !DILocation(line: 4002, column: 3, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 4002, column: 3)
!4439 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 4002, column: 3)
!4440 = !DILocation(line: 4002, column: 3, scope: !4439)
!4441 = !DILocation(line: 4004, column: 8, scope: !4419)
!4442 = !DILocation(line: 4005, column: 10, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 4005, column: 7)
!4444 = !DILocation(line: 4005, column: 7, scope: !4419)
!4445 = !DILocation(line: 4008, column: 11, scope: !4419)
!4446 = !DILocation(line: 4010, column: 19, scope: !4419)
!4447 = !DILocation(line: 4010, column: 67, scope: !4419)
!4448 = !DILocation(line: 4010, column: 62, scope: !4419)
!4449 = !DILocation(line: 4010, column: 37, scope: !4419)
!4450 = !DILocation(line: 4010, column: 35, scope: !4419)
!4451 = !DILocation(line: 4011, column: 3, scope: !4419)
!4452 = !DILocation(line: 4016, column: 20, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 4012, column: 5)
!4454 = !DILocation(line: 4016, column: 25, scope: !4453)
!4455 = !DILocation(line: 4016, column: 7, scope: !4453)
!4456 = !DILocation(line: 4018, column: 20, scope: !4453)
!4457 = !DILocation(line: 4018, column: 25, scope: !4453)
!4458 = !DILocation(line: 4018, column: 7, scope: !4453)
!4459 = !DILocation(line: 4020, column: 20, scope: !4453)
!4460 = !DILocation(line: 4020, column: 25, scope: !4453)
!4461 = !DILocation(line: 4020, column: 7, scope: !4453)
!4462 = !DILocation(line: 4022, column: 20, scope: !4453)
!4463 = !DILocation(line: 4022, column: 25, scope: !4453)
!4464 = !DILocation(line: 4022, column: 7, scope: !4453)
!4465 = !DILocation(line: 4027, column: 8, scope: !4419)
!4466 = !DILocation(line: 4028, column: 3, scope: !4419)
!4467 = !DILocation(line: 4029, column: 29, scope: !4419)
!4468 = !DILocation(line: 4029, column: 3, scope: !4419)
!4469 = !DILocation(line: 4032, column: 3, scope: !4419)
!4470 = !DILocation(line: 4034, column: 14, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 4033, column: 5)
!4472 = !DILocation(line: 4035, column: 7, scope: !4471)
!4473 = !DILocation(line: 4036, column: 19, scope: !4471)
!4474 = !DILocation(line: 4036, column: 14, scope: !4471)
!4475 = !DILocation(line: 4036, column: 23, scope: !4471)
!4476 = !DILocation(line: 4036, column: 13, scope: !4471)
!4477 = !DILocation(line: 4036, column: 10, scope: !4471)
!4478 = !DILocation(line: 4038, column: 13, scope: !4419)
!4479 = !DILocation(line: 4037, column: 5, scope: !4471)
!4480 = distinct !{!4480, !4469, !4481}
!4481 = !DILocation(line: 4038, column: 16, scope: !4419)
!4482 = !DILocation(line: 4040, column: 3, scope: !4419)
!4483 = !DILocation(line: 4041, column: 3, scope: !4419)
!4484 = !DILocation(line: 4042, column: 1, scope: !4419)
!4485 = distinct !DISubprogram(name: "mpz_root", scope: !3, file: !3, line: 3262, type: !4486, scopeLine: 3263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4488)
!4486 = !DISubroutineType(types: !4487)
!4487 = !{!19, !1314, !1411, !14}
!4488 = !{!4489, !4490, !4491, !4492, !4493}
!4489 = !DILocalVariable(name: "x", arg: 1, scope: !4485, file: !3, line: 3262, type: !1314)
!4490 = !DILocalVariable(name: "y", arg: 2, scope: !4485, file: !3, line: 3262, type: !1411)
!4491 = !DILocalVariable(name: "z", arg: 3, scope: !4485, file: !3, line: 3262, type: !14)
!4492 = !DILocalVariable(name: "res", scope: !4485, file: !3, line: 3264, type: !19)
!4493 = !DILocalVariable(name: "r", scope: !4485, file: !3, line: 3265, type: !2375)
!4494 = !DILocation(line: 0, scope: !4485)
!4495 = !DILocation(line: 3265, column: 3, scope: !4485)
!4496 = !DILocation(line: 3265, column: 9, scope: !4485)
!4497 = !DILocation(line: 3267, column: 13, scope: !4485)
!4498 = !DILocation(line: 3267, column: 3, scope: !4485)
!4499 = !DILocation(line: 3268, column: 3, scope: !4485)
!4500 = !DILocation(line: 3269, column: 12, scope: !4485)
!4501 = !DILocation(line: 3269, column: 21, scope: !4485)
!4502 = !DILocation(line: 3270, column: 3, scope: !4485)
!4503 = !DILocation(line: 3273, column: 1, scope: !4485)
!4504 = !DILocation(line: 3272, column: 3, scope: !4485)
!4505 = distinct !DISubprogram(name: "mpz_sqrtrem", scope: !3, file: !3, line: 3277, type: !4506, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4508)
!4506 = !DISubroutineType(types: !4507)
!4507 = !{null, !1314, !1314, !1411}
!4508 = !{!4509, !4510, !4511}
!4509 = !DILocalVariable(name: "s", arg: 1, scope: !4505, file: !3, line: 3277, type: !1314)
!4510 = !DILocalVariable(name: "r", arg: 2, scope: !4505, file: !3, line: 3277, type: !1314)
!4511 = !DILocalVariable(name: "u", arg: 3, scope: !4505, file: !3, line: 3277, type: !1411)
!4512 = !DILocation(line: 0, scope: !4505)
!4513 = !DILocation(line: 3279, column: 3, scope: !4505)
!4514 = !DILocation(line: 3280, column: 1, scope: !4505)
!4515 = distinct !DISubprogram(name: "mpz_sqrt", scope: !3, file: !3, line: 3283, type: !1409, scopeLine: 3284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4516)
!4516 = !{!4517, !4518}
!4517 = !DILocalVariable(name: "s", arg: 1, scope: !4515, file: !3, line: 3283, type: !1314)
!4518 = !DILocalVariable(name: "u", arg: 2, scope: !4515, file: !3, line: 3283, type: !1411)
!4519 = !DILocation(line: 0, scope: !4515)
!4520 = !DILocation(line: 3285, column: 3, scope: !4515)
!4521 = !DILocation(line: 3286, column: 1, scope: !4515)
!4522 = distinct !DISubprogram(name: "mpz_perfect_square_p", scope: !3, file: !3, line: 3289, type: !1479, scopeLine: 3290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4523)
!4523 = !{!4524}
!4524 = !DILocalVariable(name: "u", arg: 1, scope: !4522, file: !3, line: 3289, type: !1411)
!4525 = !DILocation(line: 0, scope: !4522)
!4526 = !DILocation(line: 3291, column: 10, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 3291, column: 7)
!4528 = !DILocation(line: 3291, column: 19, scope: !4527)
!4529 = !DILocation(line: 3291, column: 7, scope: !4522)
!4530 = !DILocation(line: 3292, column: 25, scope: !4527)
!4531 = !DILocation(line: 3292, column: 5, scope: !4527)
!4532 = !DILocation(line: 3294, column: 12, scope: !4527)
!4533 = !DILocation(line: 3294, column: 5, scope: !4527)
!4534 = !DILocation(line: 0, scope: !4527)
!4535 = !DILocation(line: 3295, column: 1, scope: !4522)
!4536 = distinct !DISubprogram(name: "mpn_perfect_square_p", scope: !3, file: !3, line: 3298, type: !4537, scopeLine: 3299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4539)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!19, !151, !154}
!4539 = !{!4540, !4541, !4542}
!4540 = !DILocalVariable(name: "p", arg: 1, scope: !4536, file: !3, line: 3298, type: !151)
!4541 = !DILocalVariable(name: "n", arg: 2, scope: !4536, file: !3, line: 3298, type: !154)
!4542 = !DILocalVariable(name: "t", scope: !4536, file: !3, line: 3300, type: !2375)
!4543 = !DILocation(line: 0, scope: !4536)
!4544 = !DILocation(line: 3300, column: 3, scope: !4536)
!4545 = !DILocation(line: 3300, column: 9, scope: !4536)
!4546 = !DILocation(line: 3302, column: 3, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 3302, column: 3)
!4548 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 3302, column: 3)
!4549 = !DILocation(line: 3302, column: 3, scope: !4548)
!4550 = !DILocation(line: 3303, column: 3, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 3303, column: 3)
!4552 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 3303, column: 3)
!4553 = !DILocation(line: 3303, column: 3, scope: !4552)
!4554 = !DILocation(line: 3304, column: 40, scope: !4536)
!4555 = !DILocation(line: 3304, column: 26, scope: !4536)
!4556 = !DILocation(line: 3304, column: 10, scope: !4536)
!4557 = !DILocation(line: 3305, column: 1, scope: !4536)
!4558 = !DILocation(line: 3304, column: 3, scope: !4536)
!4559 = distinct !DISubprogram(name: "mpn_sqrtrem", scope: !3, file: !3, line: 3308, type: !4560, scopeLine: 3309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4562)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!154, !16, !16, !151, !154}
!4562 = !{!4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570}
!4563 = !DILocalVariable(name: "sp", arg: 1, scope: !4559, file: !3, line: 3308, type: !16)
!4564 = !DILocalVariable(name: "rp", arg: 2, scope: !4559, file: !3, line: 3308, type: !16)
!4565 = !DILocalVariable(name: "p", arg: 3, scope: !4559, file: !3, line: 3308, type: !151)
!4566 = !DILocalVariable(name: "n", arg: 4, scope: !4559, file: !3, line: 3308, type: !154)
!4567 = !DILocalVariable(name: "s", scope: !4559, file: !3, line: 3310, type: !2375)
!4568 = !DILocalVariable(name: "r", scope: !4559, file: !3, line: 3310, type: !2375)
!4569 = !DILocalVariable(name: "u", scope: !4559, file: !3, line: 3310, type: !2375)
!4570 = !DILocalVariable(name: "res", scope: !4559, file: !3, line: 3311, type: !154)
!4571 = !DILocation(line: 0, scope: !4559)
!4572 = !DILocation(line: 3310, column: 3, scope: !4559)
!4573 = !DILocation(line: 3310, column: 9, scope: !4559)
!4574 = !DILocation(line: 3310, column: 12, scope: !4559)
!4575 = !DILocation(line: 3310, column: 15, scope: !4559)
!4576 = !DILocation(line: 3313, column: 3, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 3313, column: 3)
!4578 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 3313, column: 3)
!4579 = !DILocation(line: 3313, column: 3, scope: !4578)
!4580 = !DILocation(line: 3314, column: 3, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 3314, column: 3)
!4582 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 3314, column: 3)
!4583 = !DILocation(line: 3314, column: 3, scope: !4582)
!4584 = !DILocation(line: 3316, column: 13, scope: !4559)
!4585 = !DILocation(line: 3316, column: 3, scope: !4559)
!4586 = !DILocation(line: 3317, column: 13, scope: !4559)
!4587 = !DILocation(line: 3317, column: 3, scope: !4559)
!4588 = !DILocation(line: 3318, column: 36, scope: !4559)
!4589 = !DILocation(line: 3318, column: 22, scope: !4559)
!4590 = !DILocation(line: 3318, column: 3, scope: !4559)
!4591 = !DILocation(line: 3320, column: 3, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 3320, column: 3)
!4593 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 3320, column: 3)
!4594 = !DILocation(line: 3320, column: 3, scope: !4593)
!4595 = !DILocation(line: 3321, column: 21, scope: !4559)
!4596 = !DILocation(line: 3321, column: 3, scope: !4559)
!4597 = !DILocation(line: 3322, column: 3, scope: !4559)
!4598 = !DILocation(line: 3323, column: 12, scope: !4559)
!4599 = !DILocation(line: 3323, column: 9, scope: !4559)
!4600 = !DILocation(line: 3324, column: 7, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 3324, column: 7)
!4602 = !DILocation(line: 3324, column: 7, scope: !4559)
!4603 = !DILocation(line: 3325, column: 23, scope: !4601)
!4604 = !DILocation(line: 3325, column: 5, scope: !4601)
!4605 = !DILocation(line: 3326, column: 3, scope: !4559)
!4606 = !DILocation(line: 3328, column: 1, scope: !4559)
!4607 = !DILocation(line: 3327, column: 3, scope: !4559)
!4608 = distinct !DISubprogram(name: "mpz_fac_ui", scope: !3, file: !3, line: 3333, type: !1391, scopeLine: 3334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4609)
!4609 = !{!4610, !4611}
!4610 = !DILocalVariable(name: "x", arg: 1, scope: !4608, file: !3, line: 3333, type: !1314)
!4611 = !DILocalVariable(name: "n", arg: 2, scope: !4608, file: !3, line: 3333, type: !14)
!4612 = !DILocation(line: 0, scope: !4608)
!4613 = !DILocation(line: 3335, column: 25, scope: !4608)
!4614 = !DILocation(line: 3335, column: 22, scope: !4608)
!4615 = !DILocation(line: 3335, column: 20, scope: !4608)
!4616 = !DILocation(line: 3335, column: 3, scope: !4608)
!4617 = !DILocation(line: 3336, column: 3, scope: !4608)
!4618 = !DILocation(line: 3336, column: 11, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !3, line: 3336, column: 3)
!4620 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 3336, column: 3)
!4621 = !DILocation(line: 3336, column: 3, scope: !4620)
!4622 = !DILocation(line: 3337, column: 23, scope: !4619)
!4623 = !DILocation(line: 3337, column: 5, scope: !4619)
!4624 = !DILocation(line: 3336, column: 3, scope: !4619)
!4625 = distinct !{!4625, !4621, !4626}
!4626 = !DILocation(line: 3337, column: 26, scope: !4620)
!4627 = !DILocation(line: 3338, column: 1, scope: !4608)
!4628 = distinct !DISubprogram(name: "mpz_bin_uiui", scope: !3, file: !3, line: 3341, type: !3973, scopeLine: 3342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4629)
!4629 = !{!4630, !4631, !4632, !4633}
!4630 = !DILocalVariable(name: "r", arg: 1, scope: !4628, file: !3, line: 3341, type: !1314)
!4631 = !DILocalVariable(name: "n", arg: 2, scope: !4628, file: !3, line: 3341, type: !14)
!4632 = !DILocalVariable(name: "k", arg: 3, scope: !4628, file: !3, line: 3341, type: !14)
!4633 = !DILocalVariable(name: "t", scope: !4628, file: !3, line: 3343, type: !2375)
!4634 = !DILocation(line: 0, scope: !4628)
!4635 = !DILocation(line: 3343, column: 3, scope: !4628)
!4636 = !DILocation(line: 3343, column: 9, scope: !4628)
!4637 = !DILocation(line: 3345, column: 20, scope: !4628)
!4638 = !DILocation(line: 3345, column: 18, scope: !4628)
!4639 = !DILocation(line: 3345, column: 3, scope: !4628)
!4640 = !DILocation(line: 3347, column: 14, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 3347, column: 7)
!4642 = !DILocation(line: 3347, column: 9, scope: !4641)
!4643 = !DILocation(line: 3347, column: 7, scope: !4628)
!4644 = !DILocation(line: 3348, column: 9, scope: !4641)
!4645 = !DILocation(line: 3350, column: 13, scope: !4628)
!4646 = !DILocation(line: 3350, column: 3, scope: !4628)
!4647 = !DILocation(line: 3351, column: 3, scope: !4628)
!4648 = !DILocation(line: 3353, column: 3, scope: !4628)
!4649 = !DILocation(line: 3353, column: 12, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 3353, column: 3)
!4651 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 3353, column: 3)
!4652 = !DILocation(line: 3353, column: 3, scope: !4651)
!4653 = !DILocation(line: 3354, column: 26, scope: !4650)
!4654 = !DILocation(line: 3354, column: 7, scope: !4650)
!4655 = !DILocation(line: 3353, column: 18, scope: !4650)
!4656 = !DILocation(line: 3353, column: 3, scope: !4650)
!4657 = distinct !{!4657, !4652, !4658}
!4658 = !DILocation(line: 3354, column: 28, scope: !4651)
!4659 = !DILocation(line: 3356, column: 3, scope: !4628)
!4660 = !DILocation(line: 3357, column: 3, scope: !4628)
!4661 = !DILocation(line: 3358, column: 1, scope: !4628)
!4662 = distinct !DISubprogram(name: "mpz_probab_prime_p", scope: !3, file: !3, line: 3396, type: !4663, scopeLine: 3397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4665)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!19, !1411, !19}
!4665 = !{!4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673}
!4666 = !DILocalVariable(name: "n", arg: 1, scope: !4662, file: !3, line: 3396, type: !1411)
!4667 = !DILocalVariable(name: "reps", arg: 2, scope: !4662, file: !3, line: 3396, type: !19)
!4668 = !DILocalVariable(name: "nm1", scope: !4662, file: !3, line: 3398, type: !2375)
!4669 = !DILocalVariable(name: "q", scope: !4662, file: !3, line: 3399, type: !2375)
!4670 = !DILocalVariable(name: "y", scope: !4662, file: !3, line: 3400, type: !2375)
!4671 = !DILocalVariable(name: "k", scope: !4662, file: !3, line: 3401, type: !20)
!4672 = !DILocalVariable(name: "is_prime", scope: !4662, file: !3, line: 3402, type: !19)
!4673 = !DILocalVariable(name: "j", scope: !4662, file: !3, line: 3403, type: !19)
!4674 = !DILocation(line: 0, scope: !4662)
!4675 = !DILocation(line: 3398, column: 3, scope: !4662)
!4676 = !DILocation(line: 3398, column: 9, scope: !4662)
!4677 = !DILocation(line: 3399, column: 3, scope: !4662)
!4678 = !DILocation(line: 3399, column: 9, scope: !4662)
!4679 = !DILocation(line: 3400, column: 3, scope: !4662)
!4680 = !DILocation(line: 3400, column: 9, scope: !4662)
!4681 = !DILocation(line: 3407, column: 7, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 3407, column: 7)
!4683 = !DILocation(line: 3407, column: 7, scope: !4662)
!4684 = !DILocation(line: 3408, column: 13, scope: !4682)
!4685 = !DILocation(line: 3408, column: 34, scope: !4682)
!4686 = !DILocation(line: 3408, column: 12, scope: !4682)
!4687 = !DILocation(line: 3408, column: 5, scope: !4682)
!4688 = !DILocation(line: 3411, column: 3, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3411, column: 3)
!4690 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 3411, column: 3)
!4691 = !DILocation(line: 3411, column: 3, scope: !4690)
!4692 = !DILocation(line: 3413, column: 7, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 3413, column: 7)
!4694 = !DILocation(line: 3413, column: 29, scope: !4693)
!4695 = !DILocation(line: 3413, column: 7, scope: !4662)
!4696 = !DILocation(line: 3414, column: 35, scope: !4693)
!4697 = !DILocation(line: 3414, column: 32, scope: !4693)
!4698 = !DILocation(line: 3414, column: 44, scope: !4693)
!4699 = !DILocation(line: 3414, column: 28, scope: !4693)
!4700 = !DILocation(line: 3414, column: 12, scope: !4693)
!4701 = !DILocation(line: 3414, column: 5, scope: !4693)
!4702 = !DILocation(line: 3416, column: 7, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 3416, column: 7)
!4704 = !DILocation(line: 3416, column: 47, scope: !4703)
!4705 = !DILocation(line: 3416, column: 7, scope: !4662)
!4706 = !DILocation(line: 3420, column: 7, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 3420, column: 7)
!4708 = !DILocation(line: 3420, column: 32, scope: !4707)
!4709 = !DILocation(line: 3420, column: 7, scope: !4662)
!4710 = !DILocation(line: 3428, column: 13, scope: !4662)
!4711 = !DILocation(line: 3428, column: 3, scope: !4662)
!4712 = !DILocation(line: 3429, column: 13, scope: !4662)
!4713 = !DILocation(line: 3429, column: 3, scope: !4662)
!4714 = !DILocation(line: 3430, column: 13, scope: !4662)
!4715 = !DILocation(line: 3430, column: 3, scope: !4662)
!4716 = !DILocation(line: 3433, column: 19, scope: !4662)
!4717 = !DILocation(line: 3433, column: 8, scope: !4662)
!4718 = !DILocation(line: 3433, column: 17, scope: !4662)
!4719 = !DILocation(line: 3434, column: 7, scope: !4662)
!4720 = !DILocation(line: 3435, column: 3, scope: !4662)
!4721 = !DILocation(line: 3437, column: 8, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 3437, column: 3)
!4723 = !DILocation(line: 0, scope: !4722)
!4724 = !DILocation(line: 3437, column: 43, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 3437, column: 3)
!4726 = !DILocation(line: 3437, column: 38, scope: !4725)
!4727 = !DILocation(line: 3437, column: 3, scope: !4722)
!4728 = !DILocation(line: 3439, column: 39, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 3438, column: 5)
!4730 = !DILocation(line: 3439, column: 41, scope: !4729)
!4731 = !DILocation(line: 3439, column: 43, scope: !4729)
!4732 = !DILocation(line: 3439, column: 7, scope: !4729)
!4733 = !DILocation(line: 3440, column: 11, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4729, file: !3, line: 3440, column: 11)
!4735 = !DILocation(line: 3440, column: 28, scope: !4734)
!4736 = !DILocation(line: 3440, column: 11, scope: !4729)
!4737 = !DILocation(line: 3444, column: 4, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 3444, column: 4)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 3444, column: 4)
!4740 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 3441, column: 2)
!4741 = !DILocation(line: 3444, column: 4, scope: !4739)
!4742 = !DILocation(line: 3447, column: 18, scope: !4729)
!4743 = !DILocation(line: 3437, column: 53, scope: !4725)
!4744 = !DILocation(line: 3437, column: 3, scope: !4725)
!4745 = distinct !{!4745, !4727, !4746}
!4746 = !DILocation(line: 3448, column: 5, scope: !4722)
!4747 = !DILocation(line: 3449, column: 14, scope: !4662)
!4748 = !DILocation(line: 3449, column: 3, scope: !4662)
!4749 = !DILocation(line: 3450, column: 3, scope: !4662)
!4750 = !DILocation(line: 3451, column: 3, scope: !4662)
!4751 = !DILocation(line: 3453, column: 3, scope: !4662)
!4752 = !DILocation(line: 3454, column: 1, scope: !4662)
!4753 = distinct !DISubprogram(name: "mpz_scan1", scope: !3, file: !3, line: 3924, type: !4754, scopeLine: 3925, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4756)
!4754 = !DISubroutineType(types: !4755)
!4755 = !{!20, !1411, !20}
!4756 = !{!4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764}
!4757 = !DILocalVariable(name: "u", arg: 1, scope: !4753, file: !3, line: 3924, type: !1411)
!4758 = !DILocalVariable(name: "starting_bit", arg: 2, scope: !4753, file: !3, line: 3924, type: !20)
!4759 = !DILocalVariable(name: "up", scope: !4753, file: !3, line: 3926, type: !16)
!4760 = !DILocalVariable(name: "us", scope: !4753, file: !3, line: 3927, type: !154)
!4761 = !DILocalVariable(name: "un", scope: !4753, file: !3, line: 3927, type: !154)
!4762 = !DILocalVariable(name: "i", scope: !4753, file: !3, line: 3927, type: !154)
!4763 = !DILocalVariable(name: "limb", scope: !4753, file: !3, line: 3928, type: !12)
!4764 = !DILocalVariable(name: "ux", scope: !4753, file: !3, line: 3928, type: !12)
!4765 = !DILocation(line: 0, scope: !4753)
!4766 = !DILocation(line: 3930, column: 11, scope: !4753)
!4767 = !DILocation(line: 3930, column: 8, scope: !4753)
!4768 = !DILocation(line: 3931, column: 8, scope: !4753)
!4769 = !DILocation(line: 3932, column: 20, scope: !4753)
!4770 = !DILocation(line: 3936, column: 9, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 3936, column: 7)
!4772 = !DILocation(line: 3936, column: 7, scope: !4753)
!4773 = !DILocation(line: 3937, column: 16, scope: !4771)
!4774 = !DILocation(line: 3937, column: 13, scope: !4771)
!4775 = !DILocation(line: 3937, column: 5, scope: !4771)
!4776 = !DILocation(line: 3939, column: 11, scope: !4753)
!4777 = !DILocation(line: 3941, column: 10, scope: !4753)
!4778 = !DILocation(line: 3943, column: 20, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 3943, column: 7)
!4780 = !DILocation(line: 3943, column: 7, scope: !4753)
!4781 = !DILocation(line: 3945, column: 14, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !3, line: 3945, column: 11)
!4783 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 3944, column: 5)
!4784 = !DILocation(line: 3945, column: 11, scope: !4783)
!4785 = !DILocation(line: 3947, column: 9, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4782, file: !3, line: 3946, column: 2)
!4787 = !DILocation(line: 3948, column: 11, scope: !4786)
!4788 = !DILocation(line: 3948, column: 18, scope: !4786)
!4789 = !DILocation(line: 3949, column: 29, scope: !4786)
!4790 = !DILocation(line: 3949, column: 9, scope: !4786)
!4791 = !DILocation(line: 3950, column: 2, scope: !4786)
!4792 = !DILocation(line: 3953, column: 46, scope: !4783)
!4793 = !DILocation(line: 3953, column: 29, scope: !4783)
!4794 = !DILocation(line: 3953, column: 12, scope: !4783)
!4795 = !DILocation(line: 3954, column: 5, scope: !4783)
!4796 = !DILocation(line: 3956, column: 10, scope: !4753)
!4797 = !DILocation(line: 3956, column: 3, scope: !4753)
!4798 = !DILocation(line: 3957, column: 1, scope: !4753)
!4799 = distinct !DISubprogram(name: "gmp_millerrabin", scope: !3, file: !3, line: 3363, type: !4800, scopeLine: 3365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4802)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!19, !1411, !1411, !1314, !1411, !20}
!4802 = !{!4803, !4804, !4805, !4806, !4807}
!4803 = !DILocalVariable(name: "n", arg: 1, scope: !4799, file: !3, line: 3363, type: !1411)
!4804 = !DILocalVariable(name: "nm1", arg: 2, scope: !4799, file: !3, line: 3363, type: !1411)
!4805 = !DILocalVariable(name: "y", arg: 3, scope: !4799, file: !3, line: 3363, type: !1314)
!4806 = !DILocalVariable(name: "q", arg: 4, scope: !4799, file: !3, line: 3364, type: !1411)
!4807 = !DILocalVariable(name: "k", arg: 5, scope: !4799, file: !3, line: 3364, type: !20)
!4808 = !DILocation(line: 0, scope: !4799)
!4809 = !DILocation(line: 3366, column: 3, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 3366, column: 3)
!4811 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 3366, column: 3)
!4812 = !DILocation(line: 3366, column: 3, scope: !4811)
!4813 = !DILocation(line: 3369, column: 3, scope: !4799)
!4814 = !DILocation(line: 3371, column: 7, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 3371, column: 7)
!4816 = !DILocation(line: 3371, column: 25, scope: !4815)
!4817 = !DILocation(line: 3371, column: 30, scope: !4815)
!4818 = !DILocation(line: 3371, column: 33, scope: !4815)
!4819 = !DILocation(line: 3371, column: 50, scope: !4815)
!4820 = !DILocation(line: 3371, column: 7, scope: !4799)
!4821 = !DILocation(line: 3374, column: 3, scope: !4799)
!4822 = !DILocation(line: 3374, column: 10, scope: !4799)
!4823 = !DILocation(line: 3374, column: 14, scope: !4799)
!4824 = !DILocation(line: 3376, column: 7, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 3375, column: 5)
!4826 = !DILocation(line: 3377, column: 11, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 3377, column: 11)
!4828 = !DILocation(line: 3377, column: 28, scope: !4827)
!4829 = !DILocation(line: 3377, column: 11, scope: !4825)
!4830 = !DILocation(line: 3382, column: 11, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 3382, column: 11)
!4832 = !DILocation(line: 3382, column: 29, scope: !4831)
!4833 = !DILocation(line: 3382, column: 11, scope: !4825)
!4834 = distinct !{!4834, !4821, !4835}
!4835 = !DILocation(line: 3384, column: 5, scope: !4799)
!4836 = !DILocation(line: 3386, column: 1, scope: !4799)
!4837 = distinct !DISubprogram(name: "mpz_tstbit", scope: !3, file: !3, line: 3482, type: !4838, scopeLine: 3483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4840)
!4838 = !DISubroutineType(types: !4839)
!4839 = !{!19, !1411, !20}
!4840 = !{!4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848}
!4841 = !DILocalVariable(name: "d", arg: 1, scope: !4837, file: !3, line: 3482, type: !1411)
!4842 = !DILocalVariable(name: "bit_index", arg: 2, scope: !4837, file: !3, line: 3482, type: !20)
!4843 = !DILocalVariable(name: "limb_index", scope: !4837, file: !3, line: 3484, type: !154)
!4844 = !DILocalVariable(name: "shift", scope: !4837, file: !3, line: 3485, type: !6)
!4845 = !DILocalVariable(name: "ds", scope: !4837, file: !3, line: 3486, type: !154)
!4846 = !DILocalVariable(name: "dn", scope: !4837, file: !3, line: 3487, type: !154)
!4847 = !DILocalVariable(name: "w", scope: !4837, file: !3, line: 3488, type: !12)
!4848 = !DILocalVariable(name: "bit", scope: !4837, file: !3, line: 3489, type: !19)
!4849 = !DILocation(line: 0, scope: !4837)
!4850 = !DILocation(line: 3491, column: 11, scope: !4837)
!4851 = !DILocation(line: 3491, column: 8, scope: !4837)
!4852 = !DILocation(line: 3492, column: 8, scope: !4837)
!4853 = !DILocation(line: 3493, column: 26, scope: !4837)
!4854 = !DILocation(line: 3494, column: 18, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 3494, column: 7)
!4856 = !DILocation(line: 3494, column: 7, scope: !4837)
!4857 = !DILocation(line: 3495, column: 15, scope: !4855)
!4858 = !DILocation(line: 3495, column: 5, scope: !4855)
!4859 = !DILocation(line: 3497, column: 11, scope: !4837)
!4860 = !DILocation(line: 3498, column: 10, scope: !4837)
!4861 = !DILocation(line: 3498, column: 7, scope: !4837)
!4862 = !DILocation(line: 3499, column: 12, scope: !4837)
!4863 = !DILocation(line: 3499, column: 9, scope: !4837)
!4864 = !DILocation(line: 3501, column: 10, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 3501, column: 7)
!4866 = !DILocation(line: 3501, column: 7, scope: !4837)
!4867 = !DILocation(line: 3505, column: 17, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 3505, column: 11)
!4869 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 3502, column: 5)
!4870 = !DILocation(line: 3505, column: 21, scope: !4868)
!4871 = !DILocation(line: 3505, column: 45, scope: !4868)
!4872 = !DILocation(line: 3505, column: 27, scope: !4868)
!4873 = !DILocation(line: 3505, column: 55, scope: !4868)
!4874 = !DILocation(line: 3505, column: 11, scope: !4869)
!4875 = !DILocation(line: 3506, column: 13, scope: !4868)
!4876 = !DILocation(line: 3506, column: 2, scope: !4868)
!4877 = !DILocation(line: 3507, column: 7, scope: !4869)
!4878 = !DILocation(line: 3507, column: 24, scope: !4869)
!4879 = !DILocation(line: 3507, column: 27, scope: !4869)
!4880 = !DILocation(line: 3508, column: 6, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 3508, column: 6)
!4882 = !DILocation(line: 3508, column: 27, scope: !4881)
!4883 = !DILocation(line: 3508, column: 6, scope: !4869)
!4884 = distinct !{!4884, !4877, !4885}
!4885 = !DILocation(line: 3509, column: 17, scope: !4869)
!4886 = !DILocation(line: 3509, column: 15, scope: !4881)
!4887 = !DILocation(line: 3509, column: 4, scope: !4881)
!4888 = !DILocation(line: 3512, column: 1, scope: !4837)
!4889 = distinct !DISubprogram(name: "mpz_abs_add_bit", scope: !3, file: !3, line: 3515, type: !1345, scopeLine: 3516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4890)
!4890 = !{!4891, !4892, !4893, !4894, !4895, !4896, !4897, !4900}
!4891 = !DILocalVariable(name: "d", arg: 1, scope: !4889, file: !3, line: 3515, type: !1314)
!4892 = !DILocalVariable(name: "bit_index", arg: 2, scope: !4889, file: !3, line: 3515, type: !20)
!4893 = !DILocalVariable(name: "dn", scope: !4889, file: !3, line: 3517, type: !154)
!4894 = !DILocalVariable(name: "limb_index", scope: !4889, file: !3, line: 3517, type: !154)
!4895 = !DILocalVariable(name: "bit", scope: !4889, file: !3, line: 3518, type: !12)
!4896 = !DILocalVariable(name: "dp", scope: !4889, file: !3, line: 3519, type: !16)
!4897 = !DILocalVariable(name: "i", scope: !4898, file: !3, line: 3528, type: !154)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 3527, column: 5)
!4899 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 3526, column: 7)
!4900 = !DILocalVariable(name: "cy", scope: !4901, file: !3, line: 3540, type: !12)
!4901 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 3539, column: 5)
!4902 = !DILocation(line: 0, scope: !4889)
!4903 = !DILocation(line: 3521, column: 8, scope: !4889)
!4904 = !DILocation(line: 3523, column: 26, scope: !4889)
!4905 = !DILocation(line: 3524, column: 37, scope: !4889)
!4906 = !DILocation(line: 3524, column: 23, scope: !4889)
!4907 = !DILocation(line: 3526, column: 18, scope: !4899)
!4908 = !DILocation(line: 3526, column: 7, scope: !4889)
!4909 = !DILocation(line: 3531, column: 12, scope: !4898)
!4910 = !DILocation(line: 3533, column: 7, scope: !4898)
!4911 = !DILocation(line: 3533, column: 22, scope: !4898)
!4912 = !DILocation(line: 0, scope: !4898)
!4913 = !DILocation(line: 3534, column: 12, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4898, file: !3, line: 3534, column: 7)
!4915 = !DILocation(line: 0, scope: !4914)
!4916 = !DILocation(line: 3534, column: 22, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 3534, column: 7)
!4918 = !DILocation(line: 3534, column: 7, scope: !4914)
!4919 = !DILocation(line: 3535, column: 2, scope: !4917)
!4920 = !DILocation(line: 3535, column: 8, scope: !4917)
!4921 = !DILocation(line: 3534, column: 37, scope: !4917)
!4922 = !DILocation(line: 3534, column: 7, scope: !4917)
!4923 = distinct !{!4923, !4918, !4924}
!4924 = !DILocation(line: 3535, column: 10, scope: !4914)
!4925 = !DILocation(line: 3536, column: 23, scope: !4898)
!4926 = !DILocation(line: 3537, column: 5, scope: !4898)
!4927 = !DILocation(line: 3542, column: 15, scope: !4901)
!4928 = !DILocation(line: 3544, column: 26, scope: !4901)
!4929 = !DILocation(line: 3544, column: 60, scope: !4901)
!4930 = !DILocation(line: 3544, column: 12, scope: !4901)
!4931 = !DILocation(line: 0, scope: !4901)
!4932 = !DILocation(line: 3545, column: 14, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 3545, column: 11)
!4934 = !DILocation(line: 3545, column: 11, scope: !4901)
!4935 = !DILocation(line: 3547, column: 9, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 3546, column: 2)
!4937 = !DILocation(line: 3548, column: 9, scope: !4936)
!4938 = !DILocation(line: 3548, column: 4, scope: !4936)
!4939 = !DILocation(line: 3548, column: 13, scope: !4936)
!4940 = !DILocation(line: 3549, column: 2, scope: !4936)
!4941 = !DILocation(line: 0, scope: !4899)
!4942 = !DILocation(line: 3552, column: 21, scope: !4889)
!4943 = !DILocation(line: 3552, column: 30, scope: !4889)
!4944 = !DILocation(line: 3552, column: 17, scope: !4889)
!4945 = !DILocation(line: 3552, column: 15, scope: !4889)
!4946 = !DILocation(line: 3553, column: 1, scope: !4889)
!4947 = distinct !DISubprogram(name: "mpz_abs_sub_bit", scope: !3, file: !3, line: 3556, type: !1345, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4948)
!4948 = !{!4949, !4950, !4951, !4952, !4953, !4954, !4955}
!4949 = !DILocalVariable(name: "d", arg: 1, scope: !4947, file: !3, line: 3556, type: !1314)
!4950 = !DILocalVariable(name: "bit_index", arg: 2, scope: !4947, file: !3, line: 3556, type: !20)
!4951 = !DILocalVariable(name: "dn", scope: !4947, file: !3, line: 3558, type: !154)
!4952 = !DILocalVariable(name: "limb_index", scope: !4947, file: !3, line: 3558, type: !154)
!4953 = !DILocalVariable(name: "dp", scope: !4947, file: !3, line: 3559, type: !16)
!4954 = !DILocalVariable(name: "bit", scope: !4947, file: !3, line: 3560, type: !12)
!4955 = !DILocalVariable(name: "__cy", scope: !4956, file: !3, line: 3570, type: !12)
!4956 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 3570, column: 3)
!4957 = !DILocation(line: 0, scope: !4947)
!4958 = !DILocation(line: 3562, column: 8, scope: !4947)
!4959 = !DILocation(line: 3563, column: 11, scope: !4947)
!4960 = !DILocation(line: 3565, column: 26, scope: !4947)
!4961 = !DILocation(line: 3568, column: 3, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4963, file: !3, line: 3568, column: 3)
!4963 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 3568, column: 3)
!4964 = !DILocation(line: 3568, column: 3, scope: !4963)
!4965 = !DILocation(line: 3566, column: 37, scope: !4947)
!4966 = !DILocation(line: 3566, column: 23, scope: !4947)
!4967 = !DILocation(line: 3570, column: 3, scope: !4956)
!4968 = !DILocation(line: 0, scope: !4956)
!4969 = !DILocation(line: 3570, column: 3, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 3570, column: 3)
!4971 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 3570, column: 3)
!4972 = !DILocation(line: 3570, column: 3, scope: !4971)
!4973 = !DILocation(line: 3572, column: 15, scope: !4947)
!4974 = !DILocation(line: 3572, column: 10, scope: !4947)
!4975 = !DILocation(line: 3572, column: 19, scope: !4947)
!4976 = !DILocation(line: 3572, column: 9, scope: !4947)
!4977 = !DILocation(line: 3572, column: 6, scope: !4947)
!4978 = !DILocation(line: 3573, column: 21, scope: !4947)
!4979 = !DILocation(line: 3573, column: 30, scope: !4947)
!4980 = !DILocation(line: 3573, column: 17, scope: !4947)
!4981 = !DILocation(line: 3573, column: 15, scope: !4947)
!4982 = !DILocation(line: 3574, column: 1, scope: !4947)
!4983 = distinct !DISubprogram(name: "mpz_clrbit", scope: !3, file: !3, line: 3589, type: !1345, scopeLine: 3590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4984)
!4984 = !{!4985, !4986}
!4985 = !DILocalVariable(name: "d", arg: 1, scope: !4983, file: !3, line: 3589, type: !1314)
!4986 = !DILocalVariable(name: "bit_index", arg: 2, scope: !4983, file: !3, line: 3589, type: !20)
!4987 = !DILocation(line: 0, scope: !4983)
!4988 = !DILocation(line: 3591, column: 7, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 3591, column: 7)
!4990 = !DILocation(line: 3591, column: 7, scope: !4983)
!4991 = !DILocation(line: 3593, column: 14, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 3593, column: 11)
!4993 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 3592, column: 5)
!4994 = !DILocation(line: 3593, column: 23, scope: !4992)
!4995 = !DILocation(line: 3593, column: 11, scope: !4993)
!4996 = !DILocation(line: 3594, column: 2, scope: !4992)
!4997 = !DILocation(line: 3596, column: 2, scope: !4992)
!4998 = !DILocation(line: 3598, column: 1, scope: !4983)
!4999 = distinct !DISubprogram(name: "mpz_combit", scope: !3, file: !3, line: 3601, type: !1345, scopeLine: 3602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5000)
!5000 = !{!5001, !5002}
!5001 = !DILocalVariable(name: "d", arg: 1, scope: !4999, file: !3, line: 3601, type: !1314)
!5002 = !DILocalVariable(name: "bit_index", arg: 2, scope: !4999, file: !3, line: 3601, type: !20)
!5003 = !DILocation(line: 0, scope: !4999)
!5004 = !DILocation(line: 3603, column: 7, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 3603, column: 7)
!5006 = !DILocation(line: 3603, column: 39, scope: !5005)
!5007 = !DILocation(line: 3603, column: 48, scope: !5005)
!5008 = !DILocation(line: 3603, column: 33, scope: !5005)
!5009 = !DILocation(line: 3603, column: 7, scope: !4999)
!5010 = !DILocation(line: 3604, column: 5, scope: !5005)
!5011 = !DILocation(line: 3606, column: 5, scope: !5005)
!5012 = !DILocation(line: 3607, column: 1, scope: !4999)
!5013 = distinct !DISubprogram(name: "mpz_com", scope: !3, file: !3, line: 3610, type: !1409, scopeLine: 3611, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5014)
!5014 = !{!5015, !5016}
!5015 = !DILocalVariable(name: "r", arg: 1, scope: !5013, file: !3, line: 3610, type: !1314)
!5016 = !DILocalVariable(name: "u", arg: 2, scope: !5013, file: !3, line: 3610, type: !1411)
!5017 = !DILocation(line: 0, scope: !5013)
!5018 = !DILocation(line: 3612, column: 3, scope: !5013)
!5019 = !DILocation(line: 3613, column: 3, scope: !5013)
!5020 = !DILocation(line: 3614, column: 1, scope: !5013)
!5021 = distinct !DISubprogram(name: "mpz_and", scope: !3, file: !3, line: 3617, type: !2188, scopeLine: 3618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5022)
!5022 = !{!5023, !5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5040, !5041, !5042, !5046}
!5023 = !DILocalVariable(name: "r", arg: 1, scope: !5021, file: !3, line: 3617, type: !1314)
!5024 = !DILocalVariable(name: "u", arg: 2, scope: !5021, file: !3, line: 3617, type: !1411)
!5025 = !DILocalVariable(name: "v", arg: 3, scope: !5021, file: !3, line: 3617, type: !1411)
!5026 = !DILocalVariable(name: "un", scope: !5021, file: !3, line: 3619, type: !154)
!5027 = !DILocalVariable(name: "vn", scope: !5021, file: !3, line: 3619, type: !154)
!5028 = !DILocalVariable(name: "rn", scope: !5021, file: !3, line: 3619, type: !154)
!5029 = !DILocalVariable(name: "i", scope: !5021, file: !3, line: 3619, type: !154)
!5030 = !DILocalVariable(name: "up", scope: !5021, file: !3, line: 3620, type: !16)
!5031 = !DILocalVariable(name: "vp", scope: !5021, file: !3, line: 3620, type: !16)
!5032 = !DILocalVariable(name: "rp", scope: !5021, file: !3, line: 3620, type: !16)
!5033 = !DILocalVariable(name: "ux", scope: !5021, file: !3, line: 3622, type: !12)
!5034 = !DILocalVariable(name: "vx", scope: !5021, file: !3, line: 3622, type: !12)
!5035 = !DILocalVariable(name: "rx", scope: !5021, file: !3, line: 3622, type: !12)
!5036 = !DILocalVariable(name: "uc", scope: !5021, file: !3, line: 3623, type: !12)
!5037 = !DILocalVariable(name: "vc", scope: !5021, file: !3, line: 3623, type: !12)
!5038 = !DILocalVariable(name: "rc", scope: !5021, file: !3, line: 3623, type: !12)
!5039 = !DILocalVariable(name: "ul", scope: !5021, file: !3, line: 3624, type: !12)
!5040 = !DILocalVariable(name: "vl", scope: !5021, file: !3, line: 3624, type: !12)
!5041 = !DILocalVariable(name: "rl", scope: !5021, file: !3, line: 3624, type: !12)
!5042 = !DILocalVariable(name: "__mpz_srcptr_swap__tmp", scope: !5043, file: !3, line: 3630, type: !1591)
!5043 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 3630, column: 7)
!5044 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 3629, column: 5)
!5045 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 3628, column: 7)
!5046 = !DILocalVariable(name: "__mp_size_t_swap__tmp", scope: !5047, file: !3, line: 3631, type: !154)
!5047 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 3631, column: 7)
!5048 = !DILocation(line: 0, scope: !5021)
!5049 = !DILocation(line: 3626, column: 8, scope: !5021)
!5050 = !DILocation(line: 3627, column: 8, scope: !5021)
!5051 = !DILocation(line: 3628, column: 10, scope: !5045)
!5052 = !DILocation(line: 3628, column: 7, scope: !5021)
!5053 = !DILocation(line: 3633, column: 10, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 3633, column: 7)
!5055 = !DILocation(line: 3633, column: 7, scope: !5021)
!5056 = !DILocation(line: 3635, column: 10, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 3634, column: 5)
!5058 = !DILocation(line: 3635, column: 19, scope: !5057)
!5059 = !DILocation(line: 3636, column: 7, scope: !5057)
!5060 = !DILocation(line: 3639, column: 11, scope: !5021)
!5061 = !DILocation(line: 3639, column: 20, scope: !5021)
!5062 = !DILocation(line: 3639, column: 8, scope: !5021)
!5063 = !DILocation(line: 3640, column: 11, scope: !5021)
!5064 = !DILocation(line: 3640, column: 20, scope: !5021)
!5065 = !DILocation(line: 3640, column: 8, scope: !5021)
!5066 = !DILocation(line: 3641, column: 11, scope: !5021)
!5067 = !DILocation(line: 3643, column: 8, scope: !5021)
!5068 = !DILocation(line: 3644, column: 8, scope: !5021)
!5069 = !DILocation(line: 3645, column: 8, scope: !5021)
!5070 = !DILocation(line: 3648, column: 8, scope: !5021)
!5071 = !DILocation(line: 3650, column: 8, scope: !5021)
!5072 = !DILocation(line: 3652, column: 11, scope: !5021)
!5073 = !DILocation(line: 3653, column: 11, scope: !5021)
!5074 = !DILocation(line: 3656, column: 3, scope: !5021)
!5075 = !DILocation(line: 3658, column: 13, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 3657, column: 5)
!5077 = !DILocation(line: 3658, column: 19, scope: !5076)
!5078 = !DILocation(line: 3658, column: 25, scope: !5076)
!5079 = !DILocation(line: 3659, column: 15, scope: !5076)
!5080 = !DILocation(line: 3659, column: 12, scope: !5076)
!5081 = !DILocation(line: 3661, column: 13, scope: !5076)
!5082 = !DILocation(line: 3661, column: 19, scope: !5076)
!5083 = !DILocation(line: 3661, column: 25, scope: !5076)
!5084 = !DILocation(line: 3662, column: 15, scope: !5076)
!5085 = !DILocation(line: 3662, column: 12, scope: !5076)
!5086 = !DILocation(line: 3664, column: 18, scope: !5076)
!5087 = !DILocation(line: 3664, column: 24, scope: !5076)
!5088 = !DILocation(line: 3664, column: 30, scope: !5076)
!5089 = !DILocation(line: 3665, column: 15, scope: !5076)
!5090 = !DILocation(line: 3665, column: 12, scope: !5076)
!5091 = !DILocation(line: 3666, column: 7, scope: !5076)
!5092 = !DILocation(line: 3666, column: 13, scope: !5076)
!5093 = !DILocation(line: 3668, column: 10, scope: !5021)
!5094 = !DILocation(line: 3668, column: 14, scope: !5021)
!5095 = !DILocation(line: 3667, column: 5, scope: !5076)
!5096 = distinct !{!5096, !5074, !5097}
!5097 = !DILocation(line: 3668, column: 18, scope: !5021)
!5098 = !DILocation(line: 3669, column: 3, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 3669, column: 3)
!5100 = !DILocation(line: 3671, column: 3, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 3671, column: 3)
!5102 = !DILocation(line: 3669, column: 3, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 3669, column: 3)
!5104 = !DILocation(line: 3671, column: 12, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 3671, column: 3)
!5106 = !DILocation(line: 3673, column: 13, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 3672, column: 5)
!5108 = !DILocation(line: 3673, column: 19, scope: !5107)
!5109 = !DILocation(line: 3673, column: 25, scope: !5107)
!5110 = !DILocation(line: 3674, column: 15, scope: !5107)
!5111 = !DILocation(line: 3674, column: 12, scope: !5107)
!5112 = !DILocation(line: 3676, column: 18, scope: !5107)
!5113 = !DILocation(line: 3676, column: 24, scope: !5107)
!5114 = !DILocation(line: 3676, column: 30, scope: !5107)
!5115 = !DILocation(line: 3677, column: 15, scope: !5107)
!5116 = !DILocation(line: 3677, column: 12, scope: !5107)
!5117 = !DILocation(line: 3678, column: 7, scope: !5107)
!5118 = !DILocation(line: 3678, column: 13, scope: !5107)
!5119 = !DILocation(line: 3671, column: 19, scope: !5105)
!5120 = !DILocation(line: 3671, column: 3, scope: !5105)
!5121 = distinct !{!5121, !5100, !5122}
!5122 = !DILocation(line: 3679, column: 5, scope: !5101)
!5123 = !DILocation(line: 3680, column: 7, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 3680, column: 7)
!5125 = !DILocation(line: 3680, column: 7, scope: !5021)
!5126 = !DILocation(line: 3681, column: 10, scope: !5124)
!5127 = !DILocation(line: 3681, column: 5, scope: !5124)
!5128 = !DILocation(line: 3681, column: 14, scope: !5124)
!5129 = !DILocation(line: 3683, column: 10, scope: !5124)
!5130 = !DILocation(line: 0, scope: !5124)
!5131 = !DILocation(line: 3685, column: 17, scope: !5021)
!5132 = !DILocation(line: 3685, column: 6, scope: !5021)
!5133 = !DILocation(line: 3685, column: 15, scope: !5021)
!5134 = !DILocation(line: 3686, column: 1, scope: !5021)
!5135 = distinct !DISubprogram(name: "mpz_ior", scope: !3, file: !3, line: 3689, type: !2188, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5136)
!5136 = !{!5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5149, !5150, !5151, !5152, !5153, !5154, !5155, !5156, !5160}
!5137 = !DILocalVariable(name: "r", arg: 1, scope: !5135, file: !3, line: 3689, type: !1314)
!5138 = !DILocalVariable(name: "u", arg: 2, scope: !5135, file: !3, line: 3689, type: !1411)
!5139 = !DILocalVariable(name: "v", arg: 3, scope: !5135, file: !3, line: 3689, type: !1411)
!5140 = !DILocalVariable(name: "un", scope: !5135, file: !3, line: 3691, type: !154)
!5141 = !DILocalVariable(name: "vn", scope: !5135, file: !3, line: 3691, type: !154)
!5142 = !DILocalVariable(name: "rn", scope: !5135, file: !3, line: 3691, type: !154)
!5143 = !DILocalVariable(name: "i", scope: !5135, file: !3, line: 3691, type: !154)
!5144 = !DILocalVariable(name: "up", scope: !5135, file: !3, line: 3692, type: !16)
!5145 = !DILocalVariable(name: "vp", scope: !5135, file: !3, line: 3692, type: !16)
!5146 = !DILocalVariable(name: "rp", scope: !5135, file: !3, line: 3692, type: !16)
!5147 = !DILocalVariable(name: "ux", scope: !5135, file: !3, line: 3694, type: !12)
!5148 = !DILocalVariable(name: "vx", scope: !5135, file: !3, line: 3694, type: !12)
!5149 = !DILocalVariable(name: "rx", scope: !5135, file: !3, line: 3694, type: !12)
!5150 = !DILocalVariable(name: "uc", scope: !5135, file: !3, line: 3695, type: !12)
!5151 = !DILocalVariable(name: "vc", scope: !5135, file: !3, line: 3695, type: !12)
!5152 = !DILocalVariable(name: "rc", scope: !5135, file: !3, line: 3695, type: !12)
!5153 = !DILocalVariable(name: "ul", scope: !5135, file: !3, line: 3696, type: !12)
!5154 = !DILocalVariable(name: "vl", scope: !5135, file: !3, line: 3696, type: !12)
!5155 = !DILocalVariable(name: "rl", scope: !5135, file: !3, line: 3696, type: !12)
!5156 = !DILocalVariable(name: "__mpz_srcptr_swap__tmp", scope: !5157, file: !3, line: 3702, type: !1591)
!5157 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 3702, column: 7)
!5158 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 3701, column: 5)
!5159 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 3700, column: 7)
!5160 = !DILocalVariable(name: "__mp_size_t_swap__tmp", scope: !5161, file: !3, line: 3703, type: !154)
!5161 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 3703, column: 7)
!5162 = !DILocation(line: 0, scope: !5135)
!5163 = !DILocation(line: 3698, column: 8, scope: !5135)
!5164 = !DILocation(line: 3699, column: 8, scope: !5135)
!5165 = !DILocation(line: 3700, column: 10, scope: !5159)
!5166 = !DILocation(line: 3700, column: 7, scope: !5135)
!5167 = !DILocation(line: 3705, column: 10, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 3705, column: 7)
!5169 = !DILocation(line: 3705, column: 7, scope: !5135)
!5170 = !DILocation(line: 3707, column: 7, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 3706, column: 5)
!5172 = !DILocation(line: 3708, column: 7, scope: !5171)
!5173 = !DILocation(line: 3711, column: 11, scope: !5135)
!5174 = !DILocation(line: 3711, column: 20, scope: !5135)
!5175 = !DILocation(line: 3711, column: 8, scope: !5135)
!5176 = !DILocation(line: 3712, column: 11, scope: !5135)
!5177 = !DILocation(line: 3712, column: 20, scope: !5135)
!5178 = !DILocation(line: 3712, column: 8, scope: !5135)
!5179 = !DILocation(line: 3713, column: 11, scope: !5135)
!5180 = !DILocation(line: 3715, column: 8, scope: !5135)
!5181 = !DILocation(line: 3716, column: 8, scope: !5135)
!5182 = !DILocation(line: 3717, column: 8, scope: !5135)
!5183 = !DILocation(line: 3721, column: 8, scope: !5135)
!5184 = !DILocation(line: 3723, column: 8, scope: !5135)
!5185 = !DILocation(line: 3725, column: 11, scope: !5135)
!5186 = !DILocation(line: 3726, column: 11, scope: !5135)
!5187 = !DILocation(line: 3729, column: 3, scope: !5135)
!5188 = !DILocation(line: 3731, column: 13, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 3730, column: 5)
!5190 = !DILocation(line: 3731, column: 19, scope: !5189)
!5191 = !DILocation(line: 3731, column: 25, scope: !5189)
!5192 = !DILocation(line: 3732, column: 15, scope: !5189)
!5193 = !DILocation(line: 3732, column: 12, scope: !5189)
!5194 = !DILocation(line: 3734, column: 13, scope: !5189)
!5195 = !DILocation(line: 3734, column: 19, scope: !5189)
!5196 = !DILocation(line: 3734, column: 25, scope: !5189)
!5197 = !DILocation(line: 3735, column: 15, scope: !5189)
!5198 = !DILocation(line: 3735, column: 12, scope: !5189)
!5199 = !DILocation(line: 3737, column: 18, scope: !5189)
!5200 = !DILocation(line: 3737, column: 24, scope: !5189)
!5201 = !DILocation(line: 3737, column: 30, scope: !5189)
!5202 = !DILocation(line: 3738, column: 15, scope: !5189)
!5203 = !DILocation(line: 3738, column: 12, scope: !5189)
!5204 = !DILocation(line: 3739, column: 7, scope: !5189)
!5205 = !DILocation(line: 3739, column: 13, scope: !5189)
!5206 = !DILocation(line: 3741, column: 10, scope: !5135)
!5207 = !DILocation(line: 3741, column: 14, scope: !5135)
!5208 = !DILocation(line: 3740, column: 5, scope: !5189)
!5209 = distinct !{!5209, !5187, !5210}
!5210 = !DILocation(line: 3741, column: 18, scope: !5135)
!5211 = !DILocation(line: 3742, column: 3, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 3742, column: 3)
!5213 = !DILocation(line: 3744, column: 3, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 3744, column: 3)
!5215 = !DILocation(line: 3742, column: 3, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 3742, column: 3)
!5217 = !DILocation(line: 3744, column: 12, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 3744, column: 3)
!5219 = !DILocation(line: 3746, column: 13, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 3745, column: 5)
!5221 = !DILocation(line: 3746, column: 19, scope: !5220)
!5222 = !DILocation(line: 3746, column: 25, scope: !5220)
!5223 = !DILocation(line: 3747, column: 15, scope: !5220)
!5224 = !DILocation(line: 3747, column: 12, scope: !5220)
!5225 = !DILocation(line: 3749, column: 18, scope: !5220)
!5226 = !DILocation(line: 3749, column: 24, scope: !5220)
!5227 = !DILocation(line: 3749, column: 30, scope: !5220)
!5228 = !DILocation(line: 3750, column: 15, scope: !5220)
!5229 = !DILocation(line: 3750, column: 12, scope: !5220)
!5230 = !DILocation(line: 3751, column: 7, scope: !5220)
!5231 = !DILocation(line: 3751, column: 13, scope: !5220)
!5232 = !DILocation(line: 3744, column: 19, scope: !5218)
!5233 = !DILocation(line: 3744, column: 3, scope: !5218)
!5234 = distinct !{!5234, !5213, !5235}
!5235 = !DILocation(line: 3752, column: 5, scope: !5214)
!5236 = !DILocation(line: 3753, column: 7, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 3753, column: 7)
!5238 = !DILocation(line: 3753, column: 7, scope: !5135)
!5239 = !DILocation(line: 3754, column: 10, scope: !5237)
!5240 = !DILocation(line: 3754, column: 5, scope: !5237)
!5241 = !DILocation(line: 3754, column: 14, scope: !5237)
!5242 = !DILocation(line: 3756, column: 10, scope: !5237)
!5243 = !DILocation(line: 0, scope: !5237)
!5244 = !DILocation(line: 3758, column: 17, scope: !5135)
!5245 = !DILocation(line: 3758, column: 6, scope: !5135)
!5246 = !DILocation(line: 3758, column: 15, scope: !5135)
!5247 = !DILocation(line: 3759, column: 1, scope: !5135)
!5248 = distinct !DISubprogram(name: "mpz_xor", scope: !3, file: !3, line: 3762, type: !2188, scopeLine: 3763, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5249)
!5249 = !{!5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5272}
!5250 = !DILocalVariable(name: "r", arg: 1, scope: !5248, file: !3, line: 3762, type: !1314)
!5251 = !DILocalVariable(name: "u", arg: 2, scope: !5248, file: !3, line: 3762, type: !1411)
!5252 = !DILocalVariable(name: "v", arg: 3, scope: !5248, file: !3, line: 3762, type: !1411)
!5253 = !DILocalVariable(name: "un", scope: !5248, file: !3, line: 3764, type: !154)
!5254 = !DILocalVariable(name: "vn", scope: !5248, file: !3, line: 3764, type: !154)
!5255 = !DILocalVariable(name: "i", scope: !5248, file: !3, line: 3764, type: !154)
!5256 = !DILocalVariable(name: "up", scope: !5248, file: !3, line: 3765, type: !16)
!5257 = !DILocalVariable(name: "vp", scope: !5248, file: !3, line: 3765, type: !16)
!5258 = !DILocalVariable(name: "rp", scope: !5248, file: !3, line: 3765, type: !16)
!5259 = !DILocalVariable(name: "ux", scope: !5248, file: !3, line: 3767, type: !12)
!5260 = !DILocalVariable(name: "vx", scope: !5248, file: !3, line: 3767, type: !12)
!5261 = !DILocalVariable(name: "rx", scope: !5248, file: !3, line: 3767, type: !12)
!5262 = !DILocalVariable(name: "uc", scope: !5248, file: !3, line: 3768, type: !12)
!5263 = !DILocalVariable(name: "vc", scope: !5248, file: !3, line: 3768, type: !12)
!5264 = !DILocalVariable(name: "rc", scope: !5248, file: !3, line: 3768, type: !12)
!5265 = !DILocalVariable(name: "ul", scope: !5248, file: !3, line: 3769, type: !12)
!5266 = !DILocalVariable(name: "vl", scope: !5248, file: !3, line: 3769, type: !12)
!5267 = !DILocalVariable(name: "rl", scope: !5248, file: !3, line: 3769, type: !12)
!5268 = !DILocalVariable(name: "__mpz_srcptr_swap__tmp", scope: !5269, file: !3, line: 3775, type: !1591)
!5269 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 3775, column: 7)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 3774, column: 5)
!5271 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 3773, column: 7)
!5272 = !DILocalVariable(name: "__mp_size_t_swap__tmp", scope: !5273, file: !3, line: 3776, type: !154)
!5273 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 3776, column: 7)
!5274 = !DILocation(line: 0, scope: !5248)
!5275 = !DILocation(line: 3771, column: 8, scope: !5248)
!5276 = !DILocation(line: 3772, column: 8, scope: !5248)
!5277 = !DILocation(line: 3773, column: 10, scope: !5271)
!5278 = !DILocation(line: 3773, column: 7, scope: !5248)
!5279 = !DILocation(line: 3778, column: 10, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 3778, column: 7)
!5281 = !DILocation(line: 3778, column: 7, scope: !5248)
!5282 = !DILocation(line: 3780, column: 7, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5280, file: !3, line: 3779, column: 5)
!5284 = !DILocation(line: 3781, column: 7, scope: !5283)
!5285 = !DILocation(line: 3784, column: 11, scope: !5248)
!5286 = !DILocation(line: 3784, column: 20, scope: !5248)
!5287 = !DILocation(line: 3784, column: 8, scope: !5248)
!5288 = !DILocation(line: 3785, column: 11, scope: !5248)
!5289 = !DILocation(line: 3785, column: 20, scope: !5248)
!5290 = !DILocation(line: 3785, column: 8, scope: !5248)
!5291 = !DILocation(line: 3786, column: 11, scope: !5248)
!5292 = !DILocation(line: 3788, column: 8, scope: !5248)
!5293 = !DILocation(line: 3789, column: 8, scope: !5248)
!5294 = !DILocation(line: 3790, column: 8, scope: !5248)
!5295 = !DILocation(line: 3792, column: 8, scope: !5248)
!5296 = !DILocation(line: 3794, column: 11, scope: !5248)
!5297 = !DILocation(line: 3795, column: 11, scope: !5248)
!5298 = !DILocation(line: 3798, column: 3, scope: !5248)
!5299 = !DILocation(line: 3800, column: 13, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 3799, column: 5)
!5301 = !DILocation(line: 3800, column: 19, scope: !5300)
!5302 = !DILocation(line: 3800, column: 25, scope: !5300)
!5303 = !DILocation(line: 3801, column: 15, scope: !5300)
!5304 = !DILocation(line: 3801, column: 12, scope: !5300)
!5305 = !DILocation(line: 3803, column: 13, scope: !5300)
!5306 = !DILocation(line: 3803, column: 19, scope: !5300)
!5307 = !DILocation(line: 3803, column: 25, scope: !5300)
!5308 = !DILocation(line: 3804, column: 15, scope: !5300)
!5309 = !DILocation(line: 3804, column: 12, scope: !5300)
!5310 = !DILocation(line: 3806, column: 16, scope: !5300)
!5311 = !DILocation(line: 3806, column: 21, scope: !5300)
!5312 = !DILocation(line: 3806, column: 27, scope: !5300)
!5313 = !DILocation(line: 3807, column: 15, scope: !5300)
!5314 = !DILocation(line: 3807, column: 12, scope: !5300)
!5315 = !DILocation(line: 3808, column: 7, scope: !5300)
!5316 = !DILocation(line: 3808, column: 13, scope: !5300)
!5317 = !DILocation(line: 3810, column: 10, scope: !5248)
!5318 = !DILocation(line: 3810, column: 14, scope: !5248)
!5319 = !DILocation(line: 3809, column: 5, scope: !5300)
!5320 = distinct !{!5320, !5298, !5321}
!5321 = !DILocation(line: 3810, column: 18, scope: !5248)
!5322 = !DILocation(line: 3811, column: 3, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 3811, column: 3)
!5324 = !DILocation(line: 3813, column: 3, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 3813, column: 3)
!5326 = !DILocation(line: 3811, column: 3, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 3811, column: 3)
!5328 = !DILocation(line: 3813, column: 12, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3813, column: 3)
!5330 = !DILocation(line: 3815, column: 13, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 3814, column: 5)
!5332 = !DILocation(line: 3815, column: 19, scope: !5331)
!5333 = !DILocation(line: 3815, column: 25, scope: !5331)
!5334 = !DILocation(line: 3816, column: 15, scope: !5331)
!5335 = !DILocation(line: 3816, column: 12, scope: !5331)
!5336 = !DILocation(line: 3818, column: 16, scope: !5331)
!5337 = !DILocation(line: 3818, column: 22, scope: !5331)
!5338 = !DILocation(line: 3819, column: 15, scope: !5331)
!5339 = !DILocation(line: 3819, column: 12, scope: !5331)
!5340 = !DILocation(line: 3820, column: 7, scope: !5331)
!5341 = !DILocation(line: 3820, column: 13, scope: !5331)
!5342 = !DILocation(line: 3813, column: 19, scope: !5329)
!5343 = !DILocation(line: 3813, column: 3, scope: !5329)
!5344 = distinct !{!5344, !5324, !5345}
!5345 = !DILocation(line: 3821, column: 5, scope: !5325)
!5346 = !DILocation(line: 3822, column: 7, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 3822, column: 7)
!5348 = !DILocation(line: 3822, column: 7, scope: !5248)
!5349 = !DILocation(line: 3823, column: 10, scope: !5347)
!5350 = !DILocation(line: 3823, column: 5, scope: !5347)
!5351 = !DILocation(line: 3823, column: 14, scope: !5347)
!5352 = !DILocation(line: 3825, column: 10, scope: !5347)
!5353 = !DILocation(line: 0, scope: !5347)
!5354 = !DILocation(line: 3827, column: 17, scope: !5248)
!5355 = !DILocation(line: 3827, column: 6, scope: !5248)
!5356 = !DILocation(line: 3827, column: 15, scope: !5248)
!5357 = !DILocation(line: 3828, column: 1, scope: !5248)
!5358 = distinct !DISubprogram(name: "mpn_popcount", scope: !3, file: !3, line: 3848, type: !5359, scopeLine: 3849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5361)
!5359 = !DISubroutineType(types: !5360)
!5360 = !{!20, !151, !154}
!5361 = !{!5362, !5363, !5364, !5365}
!5362 = !DILocalVariable(name: "p", arg: 1, scope: !5358, file: !3, line: 3848, type: !151)
!5363 = !DILocalVariable(name: "n", arg: 2, scope: !5358, file: !3, line: 3848, type: !154)
!5364 = !DILocalVariable(name: "i", scope: !5358, file: !3, line: 3850, type: !154)
!5365 = !DILocalVariable(name: "c", scope: !5358, file: !3, line: 3851, type: !20)
!5366 = !DILocation(line: 0, scope: !5358)
!5367 = !DILocation(line: 3853, column: 8, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 3853, column: 3)
!5369 = !DILocation(line: 0, scope: !5368)
!5370 = !DILocation(line: 3853, column: 24, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 3853, column: 3)
!5372 = !DILocation(line: 3853, column: 3, scope: !5368)
!5373 = !DILocation(line: 3854, column: 29, scope: !5371)
!5374 = !DILocation(line: 3854, column: 10, scope: !5371)
!5375 = !DILocation(line: 3854, column: 7, scope: !5371)
!5376 = !DILocation(line: 3853, column: 30, scope: !5371)
!5377 = !DILocation(line: 3853, column: 3, scope: !5371)
!5378 = distinct !{!5378, !5372, !5379}
!5379 = !DILocation(line: 3854, column: 33, scope: !5368)
!5380 = !DILocation(line: 3856, column: 3, scope: !5358)
!5381 = distinct !DISubprogram(name: "gmp_popcount_limb", scope: !3, file: !3, line: 3831, type: !5382, scopeLine: 3832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5384)
!5382 = !DISubroutineType(types: !5383)
!5383 = !{!6, !12}
!5384 = !{!5385, !5386, !5387}
!5385 = !DILocalVariable(name: "x", arg: 1, scope: !5381, file: !3, line: 3831, type: !12)
!5386 = !DILocalVariable(name: "c", scope: !5381, file: !3, line: 3833, type: !6)
!5387 = !DILocalVariable(name: "w", scope: !5388, file: !3, line: 3838, type: !6)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 3837, column: 5)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 3836, column: 3)
!5390 = distinct !DILexicalBlock(scope: !5381, file: !3, line: 3836, column: 3)
!5391 = !DILocation(line: 0, scope: !5381)
!5392 = !DILocation(line: 3836, column: 8, scope: !5390)
!5393 = !DILocation(line: 0, scope: !5390)
!5394 = !DILocation(line: 3836, column: 17, scope: !5389)
!5395 = !DILocation(line: 3836, column: 3, scope: !5390)
!5396 = !DILocation(line: 3838, column: 24, scope: !5388)
!5397 = !DILocation(line: 3838, column: 30, scope: !5388)
!5398 = !DILocation(line: 3838, column: 45, scope: !5388)
!5399 = !DILocation(line: 3838, column: 40, scope: !5388)
!5400 = !DILocation(line: 3838, column: 20, scope: !5388)
!5401 = !DILocation(line: 0, scope: !5388)
!5402 = !DILocation(line: 3839, column: 15, scope: !5388)
!5403 = !DILocation(line: 3839, column: 21, scope: !5388)
!5404 = !DILocation(line: 3839, column: 36, scope: !5388)
!5405 = !DILocation(line: 3839, column: 31, scope: !5388)
!5406 = !DILocation(line: 3840, column: 15, scope: !5388)
!5407 = !DILocation(line: 3840, column: 21, scope: !5388)
!5408 = !DILocation(line: 3840, column: 36, scope: !5388)
!5409 = !DILocation(line: 3840, column: 31, scope: !5388)
!5410 = !DILocation(line: 3841, column: 14, scope: !5388)
!5411 = !DILocation(line: 3841, column: 25, scope: !5388)
!5412 = !DILocation(line: 3841, column: 20, scope: !5388)
!5413 = !DILocation(line: 3842, column: 9, scope: !5388)
!5414 = !DILocation(line: 3836, column: 24, scope: !5389)
!5415 = !DILocation(line: 3836, column: 3, scope: !5389)
!5416 = distinct !{!5416, !5395, !5417}
!5417 = !DILocation(line: 3843, column: 5, scope: !5390)
!5418 = !DILocation(line: 3844, column: 3, scope: !5381)
!5419 = distinct !DISubprogram(name: "mpz_popcount", scope: !3, file: !3, line: 3860, type: !5420, scopeLine: 3861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5422)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{!20, !1411}
!5422 = !{!5423, !5424}
!5423 = !DILocalVariable(name: "u", arg: 1, scope: !5419, file: !3, line: 3860, type: !1411)
!5424 = !DILocalVariable(name: "un", scope: !5419, file: !3, line: 3862, type: !154)
!5425 = !DILocation(line: 0, scope: !5419)
!5426 = !DILocation(line: 3864, column: 11, scope: !5419)
!5427 = !DILocation(line: 3866, column: 10, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 3866, column: 7)
!5429 = !DILocation(line: 3866, column: 7, scope: !5419)
!5430 = !DILocation(line: 3864, column: 8, scope: !5419)
!5431 = !DILocation(line: 3869, column: 27, scope: !5419)
!5432 = !DILocation(line: 3869, column: 10, scope: !5419)
!5433 = !DILocation(line: 3869, column: 3, scope: !5419)
!5434 = !DILocation(line: 3870, column: 1, scope: !5419)
!5435 = distinct !DISubprogram(name: "mpz_hamdist", scope: !3, file: !3, line: 3873, type: !5436, scopeLine: 3874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5438)
!5436 = !DISubroutineType(types: !5437)
!5437 = !{!20, !1411, !1411}
!5438 = !{!5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5456}
!5439 = !DILocalVariable(name: "u", arg: 1, scope: !5435, file: !3, line: 3873, type: !1411)
!5440 = !DILocalVariable(name: "v", arg: 2, scope: !5435, file: !3, line: 3873, type: !1411)
!5441 = !DILocalVariable(name: "un", scope: !5435, file: !3, line: 3875, type: !154)
!5442 = !DILocalVariable(name: "vn", scope: !5435, file: !3, line: 3875, type: !154)
!5443 = !DILocalVariable(name: "i", scope: !5435, file: !3, line: 3875, type: !154)
!5444 = !DILocalVariable(name: "uc", scope: !5435, file: !3, line: 3876, type: !12)
!5445 = !DILocalVariable(name: "vc", scope: !5435, file: !3, line: 3876, type: !12)
!5446 = !DILocalVariable(name: "ul", scope: !5435, file: !3, line: 3876, type: !12)
!5447 = !DILocalVariable(name: "vl", scope: !5435, file: !3, line: 3876, type: !12)
!5448 = !DILocalVariable(name: "comp", scope: !5435, file: !3, line: 3876, type: !12)
!5449 = !DILocalVariable(name: "up", scope: !5435, file: !3, line: 3877, type: !151)
!5450 = !DILocalVariable(name: "vp", scope: !5435, file: !3, line: 3877, type: !151)
!5451 = !DILocalVariable(name: "c", scope: !5435, file: !3, line: 3878, type: !20)
!5452 = !DILocalVariable(name: "__mp_srcptr_swap__tmp", scope: !5453, file: !3, line: 3898, type: !151)
!5453 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 3898, column: 5)
!5454 = distinct !DILexicalBlock(scope: !5455, file: !3, line: 3898, column: 5)
!5455 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 3897, column: 7)
!5456 = !DILocalVariable(name: "__mp_size_t_swap__tmp", scope: !5457, file: !3, line: 3898, type: !154)
!5457 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 3898, column: 5)
!5458 = !DILocation(line: 0, scope: !5435)
!5459 = !DILocation(line: 3880, column: 11, scope: !5435)
!5460 = !DILocation(line: 3880, column: 8, scope: !5435)
!5461 = !DILocation(line: 3881, column: 11, scope: !5435)
!5462 = !DILocation(line: 3881, column: 8, scope: !5435)
!5463 = !DILocation(line: 3883, column: 12, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 3883, column: 8)
!5465 = !DILocation(line: 3883, column: 18, scope: !5464)
!5466 = !DILocation(line: 3883, column: 8, scope: !5435)
!5467 = !DILocation(line: 3886, column: 27, scope: !5435)
!5468 = !DILocation(line: 3886, column: 23, scope: !5435)
!5469 = !DILocation(line: 3886, column: 10, scope: !5435)
!5470 = !DILocation(line: 3887, column: 7, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 3887, column: 7)
!5472 = !DILocation(line: 3887, column: 7, scope: !5435)
!5473 = !DILocation(line: 3889, column: 7, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 3889, column: 7)
!5475 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 3889, column: 7)
!5476 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 3888, column: 5)
!5477 = !DILocation(line: 3889, column: 7, scope: !5475)
!5478 = !DILocation(line: 3890, column: 12, scope: !5476)
!5479 = !DILocation(line: 3891, column: 12, scope: !5476)
!5480 = !DILocation(line: 3892, column: 5, scope: !5476)
!5481 = !DILocation(line: 3894, column: 11, scope: !5435)
!5482 = !DILocation(line: 3895, column: 11, scope: !5435)
!5483 = !DILocation(line: 3897, column: 10, scope: !5455)
!5484 = !DILocation(line: 3897, column: 7, scope: !5435)
!5485 = !DILocation(line: 3900, column: 8, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 3900, column: 3)
!5487 = !DILocation(line: 0, scope: !5486)
!5488 = !DILocation(line: 3900, column: 24, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 3900, column: 3)
!5490 = !DILocation(line: 3900, column: 3, scope: !5486)
!5491 = !DILocation(line: 3902, column: 13, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 3901, column: 5)
!5493 = !DILocation(line: 3902, column: 19, scope: !5492)
!5494 = !DILocation(line: 3902, column: 27, scope: !5492)
!5495 = !DILocation(line: 3903, column: 15, scope: !5492)
!5496 = !DILocation(line: 3903, column: 12, scope: !5492)
!5497 = !DILocation(line: 3905, column: 13, scope: !5492)
!5498 = !DILocation(line: 3905, column: 19, scope: !5492)
!5499 = !DILocation(line: 3905, column: 27, scope: !5492)
!5500 = !DILocation(line: 3906, column: 15, scope: !5492)
!5501 = !DILocation(line: 3906, column: 12, scope: !5492)
!5502 = !DILocation(line: 3908, column: 34, scope: !5492)
!5503 = !DILocation(line: 3908, column: 12, scope: !5492)
!5504 = !DILocation(line: 3908, column: 9, scope: !5492)
!5505 = !DILocation(line: 3900, column: 31, scope: !5489)
!5506 = !DILocation(line: 3900, column: 3, scope: !5489)
!5507 = distinct !{!5507, !5490, !5508}
!5508 = !DILocation(line: 3909, column: 5, scope: !5486)
!5509 = !DILocation(line: 3910, column: 3, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 3910, column: 3)
!5511 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 3910, column: 3)
!5512 = !DILocation(line: 3910, column: 3, scope: !5511)
!5513 = !DILocation(line: 3912, column: 3, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 3912, column: 3)
!5515 = !DILocation(line: 3912, column: 12, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 3912, column: 3)
!5517 = !DILocation(line: 3914, column: 13, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 3913, column: 5)
!5519 = !DILocation(line: 3914, column: 19, scope: !5518)
!5520 = !DILocation(line: 3914, column: 27, scope: !5518)
!5521 = !DILocation(line: 3915, column: 15, scope: !5518)
!5522 = !DILocation(line: 3915, column: 12, scope: !5518)
!5523 = !DILocation(line: 3917, column: 34, scope: !5518)
!5524 = !DILocation(line: 3917, column: 12, scope: !5518)
!5525 = !DILocation(line: 3917, column: 9, scope: !5518)
!5526 = !DILocation(line: 3912, column: 19, scope: !5516)
!5527 = !DILocation(line: 3912, column: 3, scope: !5516)
!5528 = distinct !{!5528, !5513, !5529}
!5529 = !DILocation(line: 3918, column: 5, scope: !5514)
!5530 = !DILocation(line: 3921, column: 1, scope: !5435)
!5531 = distinct !DISubprogram(name: "mpz_scan0", scope: !3, file: !3, line: 3960, type: !4754, scopeLine: 3961, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5532)
!5532 = !{!5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540}
!5533 = !DILocalVariable(name: "u", arg: 1, scope: !5531, file: !3, line: 3960, type: !1411)
!5534 = !DILocalVariable(name: "starting_bit", arg: 2, scope: !5531, file: !3, line: 3960, type: !20)
!5535 = !DILocalVariable(name: "up", scope: !5531, file: !3, line: 3962, type: !16)
!5536 = !DILocalVariable(name: "us", scope: !5531, file: !3, line: 3963, type: !154)
!5537 = !DILocalVariable(name: "un", scope: !5531, file: !3, line: 3963, type: !154)
!5538 = !DILocalVariable(name: "i", scope: !5531, file: !3, line: 3963, type: !154)
!5539 = !DILocalVariable(name: "limb", scope: !5531, file: !3, line: 3964, type: !12)
!5540 = !DILocalVariable(name: "ux", scope: !5531, file: !3, line: 3964, type: !12)
!5541 = !DILocation(line: 0, scope: !5531)
!5542 = !DILocation(line: 3966, column: 11, scope: !5531)
!5543 = !DILocation(line: 3966, column: 8, scope: !5531)
!5544 = !DILocation(line: 3967, column: 26, scope: !5531)
!5545 = !DILocation(line: 3967, column: 10, scope: !5531)
!5546 = !DILocation(line: 3967, column: 8, scope: !5531)
!5547 = !DILocation(line: 3968, column: 8, scope: !5531)
!5548 = !DILocation(line: 3969, column: 20, scope: !5531)
!5549 = !DILocation(line: 3973, column: 9, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 3973, column: 7)
!5551 = !DILocation(line: 3973, column: 7, scope: !5531)
!5552 = !DILocation(line: 3974, column: 13, scope: !5550)
!5553 = !DILocation(line: 3974, column: 5, scope: !5550)
!5554 = !DILocation(line: 3976, column: 11, scope: !5531)
!5555 = !DILocation(line: 3977, column: 10, scope: !5531)
!5556 = !DILocation(line: 3977, column: 16, scope: !5531)
!5557 = !DILocation(line: 3979, column: 10, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 3979, column: 7)
!5559 = !DILocation(line: 3979, column: 7, scope: !5531)
!5560 = !DILocation(line: 3980, column: 13, scope: !5558)
!5561 = !DILocation(line: 3980, column: 10, scope: !5558)
!5562 = !DILocation(line: 3980, column: 5, scope: !5558)
!5563 = !DILocation(line: 3983, column: 42, scope: !5531)
!5564 = !DILocation(line: 3983, column: 25, scope: !5531)
!5565 = !DILocation(line: 3983, column: 8, scope: !5531)
!5566 = !DILocation(line: 3985, column: 10, scope: !5531)
!5567 = !DILocation(line: 3985, column: 3, scope: !5531)
!5568 = !DILocation(line: 3986, column: 1, scope: !5531)
!5569 = distinct !DISubprogram(name: "mpn_limb_size_in_base_2", scope: !3, file: !3, line: 1148, type: !5570, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5572)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!20, !12}
!5572 = !{!5573, !5574, !5575, !5577}
!5573 = !DILocalVariable(name: "u", arg: 1, scope: !5569, file: !3, line: 1148, type: !12)
!5574 = !DILocalVariable(name: "shift", scope: !5569, file: !3, line: 1150, type: !6)
!5575 = !DILocalVariable(name: "__clz_x", scope: !5576, file: !3, line: 1153, type: !12)
!5576 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1153, column: 3)
!5577 = !DILocalVariable(name: "__clz_c", scope: !5576, file: !3, line: 1153, type: !6)
!5578 = !DILocation(line: 0, scope: !5569)
!5579 = !DILocation(line: 1152, column: 3, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 1152, column: 3)
!5581 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1152, column: 3)
!5582 = !DILocation(line: 1152, column: 3, scope: !5581)
!5583 = !DILocation(line: 1153, column: 3, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 1153, column: 3)
!5585 = !DILocation(line: 0, scope: !5576)
!5586 = !DILocation(line: 0, scope: !5584)
!5587 = !DILocation(line: 1153, column: 3, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 1153, column: 3)
!5589 = !DILocation(line: 1153, column: 3, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 1153, column: 3)
!5591 = distinct !{!5591, !5583, !5583}
!5592 = !DILocation(line: 1153, column: 3, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 1153, column: 3)
!5594 = distinct !{!5594, !5589, !5589}
!5595 = !DILocation(line: 1154, column: 26, scope: !5569)
!5596 = !DILocation(line: 1154, column: 24, scope: !5569)
!5597 = !DILocation(line: 1154, column: 3, scope: !5569)
!5598 = distinct !DISubprogram(name: "mpn_div_qr_1_invert", scope: !3, file: !3, line: 797, type: !5599, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5601)
!5599 = !DISubroutineType(types: !5600)
!5600 = !{null, !4157, !12}
!5601 = !{!5602, !5603, !5604, !5605, !5607}
!5602 = !DILocalVariable(name: "inv", arg: 1, scope: !5598, file: !3, line: 797, type: !4157)
!5603 = !DILocalVariable(name: "d", arg: 2, scope: !5598, file: !3, line: 797, type: !12)
!5604 = !DILocalVariable(name: "shift", scope: !5598, file: !3, line: 799, type: !6)
!5605 = !DILocalVariable(name: "__clz_x", scope: !5606, file: !3, line: 802, type: !12)
!5606 = distinct !DILexicalBlock(scope: !5598, file: !3, line: 802, column: 3)
!5607 = !DILocalVariable(name: "__clz_c", scope: !5606, file: !3, line: 802, type: !6)
!5608 = !DILocation(line: 0, scope: !5598)
!5609 = !DILocation(line: 801, column: 3, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 801, column: 3)
!5611 = distinct !DILexicalBlock(scope: !5598, file: !3, line: 801, column: 3)
!5612 = !DILocation(line: 801, column: 3, scope: !5611)
!5613 = !DILocation(line: 802, column: 3, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 802, column: 3)
!5615 = !DILocation(line: 0, scope: !5606)
!5616 = !DILocation(line: 0, scope: !5614)
!5617 = !DILocation(line: 802, column: 3, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 802, column: 3)
!5619 = !DILocation(line: 802, column: 3, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 802, column: 3)
!5621 = distinct !{!5621, !5613, !5613}
!5622 = !DILocation(line: 802, column: 3, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5620, file: !3, line: 802, column: 3)
!5624 = distinct !{!5624, !5619, !5619}
!5625 = !DILocation(line: 803, column: 8, scope: !5598)
!5626 = !DILocation(line: 803, column: 14, scope: !5598)
!5627 = !DILocation(line: 804, column: 15, scope: !5598)
!5628 = !DILocation(line: 804, column: 8, scope: !5598)
!5629 = !DILocation(line: 804, column: 11, scope: !5598)
!5630 = !DILocation(line: 805, column: 13, scope: !5598)
!5631 = !DILocation(line: 805, column: 8, scope: !5598)
!5632 = !DILocation(line: 805, column: 11, scope: !5598)
!5633 = !DILocation(line: 806, column: 1, scope: !5598)
!5634 = distinct !DISubprogram(name: "mpn_div_qr_1_preinv", scope: !3, file: !3, line: 861, type: !5635, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5637)
!5635 = !DISubroutineType(types: !5636)
!5636 = !{!12, !16, !151, !154, !4233}
!5637 = !{!5638, !5639, !5640, !5641, !5642, !5643, !5644, !5645, !5646, !5648, !5650, !5651, !5652, !5653, !5655, !5656, !5657, !5658, !5659, !5660, !5661, !5662, !5663, !5664}
!5638 = !DILocalVariable(name: "qp", arg: 1, scope: !5634, file: !3, line: 861, type: !16)
!5639 = !DILocalVariable(name: "np", arg: 2, scope: !5634, file: !3, line: 861, type: !151)
!5640 = !DILocalVariable(name: "nn", arg: 3, scope: !5634, file: !3, line: 861, type: !154)
!5641 = !DILocalVariable(name: "inv", arg: 4, scope: !5634, file: !3, line: 862, type: !4233)
!5642 = !DILocalVariable(name: "d", scope: !5634, file: !3, line: 864, type: !12)
!5643 = !DILocalVariable(name: "di", scope: !5634, file: !3, line: 864, type: !12)
!5644 = !DILocalVariable(name: "r", scope: !5634, file: !3, line: 865, type: !12)
!5645 = !DILocalVariable(name: "tp", scope: !5634, file: !3, line: 866, type: !16)
!5646 = !DILocalVariable(name: "q", scope: !5647, file: !3, line: 881, type: !12)
!5647 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 880, column: 5)
!5648 = !DILocalVariable(name: "_qh", scope: !5649, file: !3, line: 883, type: !12)
!5649 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 883, column: 7)
!5650 = !DILocalVariable(name: "_ql", scope: !5649, file: !3, line: 883, type: !12)
!5651 = !DILocalVariable(name: "_r", scope: !5649, file: !3, line: 883, type: !12)
!5652 = !DILocalVariable(name: "_mask", scope: !5649, file: !3, line: 883, type: !12)
!5653 = !DILocalVariable(name: "__x0", scope: !5654, file: !3, line: 883, type: !12)
!5654 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 883, column: 7)
!5655 = !DILocalVariable(name: "__x1", scope: !5654, file: !3, line: 883, type: !12)
!5656 = !DILocalVariable(name: "__x2", scope: !5654, file: !3, line: 883, type: !12)
!5657 = !DILocalVariable(name: "__x3", scope: !5654, file: !3, line: 883, type: !12)
!5658 = !DILocalVariable(name: "__ul", scope: !5654, file: !3, line: 883, type: !6)
!5659 = !DILocalVariable(name: "__vl", scope: !5654, file: !3, line: 883, type: !6)
!5660 = !DILocalVariable(name: "__uh", scope: !5654, file: !3, line: 883, type: !6)
!5661 = !DILocalVariable(name: "__vh", scope: !5654, file: !3, line: 883, type: !6)
!5662 = !DILocalVariable(name: "__u", scope: !5654, file: !3, line: 883, type: !12)
!5663 = !DILocalVariable(name: "__v", scope: !5654, file: !3, line: 883, type: !12)
!5664 = !DILocalVariable(name: "__x", scope: !5665, file: !3, line: 883, type: !12)
!5665 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 883, column: 7)
!5666 = !DILocation(line: 0, scope: !5634)
!5667 = !DILocation(line: 868, column: 12, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 868, column: 7)
!5669 = !DILocation(line: 868, column: 18, scope: !5668)
!5670 = !DILocation(line: 868, column: 7, scope: !5634)
!5671 = !DILocation(line: 870, column: 12, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 869, column: 5)
!5673 = !DILocation(line: 871, column: 40, scope: !5672)
!5674 = !DILocation(line: 871, column: 11, scope: !5672)
!5675 = !DILocation(line: 873, column: 5, scope: !5672)
!5676 = !DILocation(line: 0, scope: !5668)
!5677 = !DILocation(line: 877, column: 12, scope: !5634)
!5678 = !DILocation(line: 878, column: 13, scope: !5634)
!5679 = !DILocation(line: 0, scope: !5654)
!5680 = !DILocation(line: 0, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 884, column: 11)
!5682 = !DILocation(line: 879, column: 3, scope: !5634)
!5683 = !DILocation(line: 879, column: 12, scope: !5634)
!5684 = !DILocation(line: 879, column: 15, scope: !5634)
!5685 = !DILocation(line: 883, column: 7, scope: !5654)
!5686 = !DILocation(line: 883, column: 7, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 883, column: 7)
!5688 = !DILocation(line: 0, scope: !5649)
!5689 = !DILocation(line: 883, column: 7, scope: !5665)
!5690 = !DILocation(line: 0, scope: !5665)
!5691 = !DILocation(line: 883, column: 7, scope: !5649)
!5692 = !DILocation(line: 0, scope: !5647)
!5693 = !DILocation(line: 883, column: 7, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 883, column: 7)
!5695 = distinct !{!5695, !5682, !5696}
!5696 = !DILocation(line: 886, column: 5, scope: !5634)
!5697 = !DILocation(line: 887, column: 12, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 887, column: 7)
!5699 = !DILocation(line: 885, column: 2, scope: !5681)
!5700 = !DILocation(line: 885, column: 9, scope: !5681)
!5701 = !DILocation(line: 887, column: 18, scope: !5698)
!5702 = !DILocation(line: 887, column: 7, scope: !5634)
!5703 = !DILocation(line: 888, column: 5, scope: !5698)
!5704 = !DILocation(line: 890, column: 20, scope: !5634)
!5705 = !DILocation(line: 890, column: 12, scope: !5634)
!5706 = !DILocation(line: 890, column: 3, scope: !5634)
!5707 = distinct !DISubprogram(name: "mpz_get_str", scope: !3, file: !3, line: 4045, type: !5708, scopeLine: 4046, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5711)
!5708 = !DISubroutineType(types: !5709)
!5709 = !{!5710, !5710, !19, !1411}
!5710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!5711 = !{!5712, !5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5723}
!5712 = !DILocalVariable(name: "sp", arg: 1, scope: !5707, file: !3, line: 4045, type: !5710)
!5713 = !DILocalVariable(name: "base", arg: 2, scope: !5707, file: !3, line: 4045, type: !19)
!5714 = !DILocalVariable(name: "u", arg: 3, scope: !5707, file: !3, line: 4045, type: !1411)
!5715 = !DILocalVariable(name: "bits", scope: !5707, file: !3, line: 4047, type: !6)
!5716 = !DILocalVariable(name: "digits", scope: !5707, file: !3, line: 4048, type: !4145)
!5717 = !DILocalVariable(name: "un", scope: !5707, file: !3, line: 4049, type: !154)
!5718 = !DILocalVariable(name: "i", scope: !5707, file: !3, line: 4050, type: !35)
!5719 = !DILocalVariable(name: "sn", scope: !5707, file: !3, line: 4050, type: !35)
!5720 = !DILocalVariable(name: "info", scope: !5721, file: !3, line: 4091, type: !921)
!5721 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 4090, column: 5)
!5722 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 4086, column: 7)
!5723 = !DILocalVariable(name: "tp", scope: !5721, file: !3, line: 4092, type: !16)
!5724 = !DILocation(line: 0, scope: !5707)
!5725 = !DILocation(line: 4052, column: 12, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 4052, column: 7)
!5727 = !DILocation(line: 4052, column: 7, scope: !5707)
!5728 = !DILocation(line: 4061, column: 12, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 4061, column: 7)
!5730 = !DILocation(line: 4061, column: 7, scope: !5707)
!5731 = !DILocation(line: 4063, column: 12, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 4063, column: 7)
!5733 = !DILocation(line: 4063, column: 7, scope: !5707)
!5734 = !DILocation(line: 4066, column: 12, scope: !5707)
!5735 = !DILocation(line: 4067, column: 8, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 4067, column: 7)
!5737 = !DILocation(line: 4067, column: 7, scope: !5707)
!5738 = !DILocation(line: 4068, column: 10, scope: !5736)
!5739 = !DILocation(line: 4068, column: 5, scope: !5736)
!5740 = !DILocation(line: 4070, column: 8, scope: !5707)
!5741 = !DILocation(line: 4072, column: 10, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 4072, column: 7)
!5743 = !DILocation(line: 4072, column: 7, scope: !5707)
!5744 = !DILocation(line: 4074, column: 13, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 4073, column: 5)
!5746 = !DILocation(line: 4075, column: 7, scope: !5745)
!5747 = !DILocation(line: 4075, column: 13, scope: !5745)
!5748 = !DILocation(line: 4076, column: 7, scope: !5745)
!5749 = !DILocation(line: 4081, column: 7, scope: !5707)
!5750 = !DILocation(line: 4082, column: 13, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 4081, column: 7)
!5752 = !DILocation(line: 4082, column: 5, scope: !5751)
!5753 = !DILocation(line: 4084, column: 10, scope: !5707)
!5754 = !DILocation(line: 4086, column: 7, scope: !5722)
!5755 = !DILocation(line: 4086, column: 7, scope: !5707)
!5756 = !DILocation(line: 4088, column: 53, scope: !5722)
!5757 = !DILocation(line: 4088, column: 67, scope: !5722)
!5758 = !DILocation(line: 4088, column: 14, scope: !5722)
!5759 = !DILocation(line: 4088, column: 5, scope: !5722)
!5760 = !DILocation(line: 4091, column: 7, scope: !5721)
!5761 = !DILocation(line: 4094, column: 33, scope: !5721)
!5762 = !DILocation(line: 0, scope: !5721)
!5763 = !DILocation(line: 4094, column: 7, scope: !5721)
!5764 = !DILocation(line: 4095, column: 12, scope: !5721)
!5765 = !DILocation(line: 4096, column: 25, scope: !5721)
!5766 = !DILocation(line: 4096, column: 7, scope: !5721)
!5767 = !DILocation(line: 4098, column: 56, scope: !5721)
!5768 = !DILocation(line: 4098, column: 16, scope: !5721)
!5769 = !DILocation(line: 4099, column: 7, scope: !5721)
!5770 = !DILocation(line: 4100, column: 5, scope: !5722)
!5771 = !DILocation(line: 0, scope: !5722)
!5772 = !DILocation(line: 4102, column: 3, scope: !5707)
!5773 = !DILocation(line: 4102, column: 12, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 4102, column: 3)
!5775 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 4102, column: 3)
!5776 = !DILocation(line: 4102, column: 3, scope: !5775)
!5777 = !DILocation(line: 4103, column: 36, scope: !5774)
!5778 = !DILocation(line: 4103, column: 13, scope: !5774)
!5779 = !DILocation(line: 4103, column: 11, scope: !5774)
!5780 = !DILocation(line: 4102, column: 19, scope: !5774)
!5781 = !DILocation(line: 4102, column: 3, scope: !5774)
!5782 = distinct !{!5782, !5776, !5783}
!5783 = !DILocation(line: 4103, column: 41, scope: !5775)
!5784 = !DILocation(line: 4105, column: 3, scope: !5707)
!5785 = !DILocation(line: 4105, column: 10, scope: !5707)
!5786 = !DILocation(line: 4106, column: 3, scope: !5707)
!5787 = !DILocation(line: 4107, column: 1, scope: !5707)
!5788 = distinct !DISubprogram(name: "mpz_set_str", scope: !3, file: !3, line: 4110, type: !5789, scopeLine: 4111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5791)
!5789 = !DISubroutineType(types: !5790)
!5790 = !{!19, !1314, !4145, !19}
!5791 = !{!5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5806}
!5792 = !DILocalVariable(name: "r", arg: 1, scope: !5788, file: !3, line: 4110, type: !1314)
!5793 = !DILocalVariable(name: "sp", arg: 2, scope: !5788, file: !3, line: 4110, type: !4145)
!5794 = !DILocalVariable(name: "base", arg: 3, scope: !5788, file: !3, line: 4110, type: !19)
!5795 = !DILocalVariable(name: "bits", scope: !5788, file: !3, line: 4112, type: !6)
!5796 = !DILocalVariable(name: "rn", scope: !5788, file: !3, line: 4113, type: !154)
!5797 = !DILocalVariable(name: "alloc", scope: !5788, file: !3, line: 4113, type: !154)
!5798 = !DILocalVariable(name: "rp", scope: !5788, file: !3, line: 4114, type: !16)
!5799 = !DILocalVariable(name: "sn", scope: !5788, file: !3, line: 4115, type: !35)
!5800 = !DILocalVariable(name: "sign", scope: !5788, file: !3, line: 4116, type: !19)
!5801 = !DILocalVariable(name: "dp", scope: !5788, file: !3, line: 4117, type: !21)
!5802 = !DILocalVariable(name: "digit", scope: !5803, file: !3, line: 4154, type: !6)
!5803 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 4153, column: 5)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 4152, column: 3)
!5805 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 4152, column: 3)
!5806 = !DILocalVariable(name: "info", scope: !5807, file: !3, line: 4187, type: !921)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 4186, column: 5)
!5808 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 4179, column: 7)
!5809 = !DILocation(line: 0, scope: !5788)
!5810 = !DILocation(line: 4119, column: 3, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 4119, column: 3)
!5812 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 4119, column: 3)
!5813 = !DILocation(line: 4121, column: 3, scope: !5788)
!5814 = !DILocation(line: 4121, column: 10, scope: !5788)
!5815 = !{!5816, !5816, i64 0}
!5816 = !{!"short", !75, i64 0}
!5817 = !DILocation(line: 4122, column: 7, scope: !5788)
!5818 = distinct !{!5818, !5813, !5817}
!5819 = !DILocation(line: 4124, column: 15, scope: !5788)
!5820 = !DILocation(line: 4125, column: 6, scope: !5788)
!5821 = !DILocation(line: 4127, column: 7, scope: !5788)
!5822 = !DILocation(line: 4129, column: 11, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 4129, column: 11)
!5824 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 4128, column: 5)
!5825 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 4127, column: 7)
!5826 = !DILocation(line: 4129, column: 15, scope: !5823)
!5827 = !DILocation(line: 4129, column: 11, scope: !5824)
!5828 = !DILocation(line: 4131, column: 6, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 4130, column: 2)
!5830 = !DILocation(line: 4132, column: 8, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 4132, column: 8)
!5832 = !DILocation(line: 4132, column: 12, scope: !5831)
!5833 = !DILocation(line: 4132, column: 19, scope: !5831)
!5834 = !DILocation(line: 4132, column: 26, scope: !5831)
!5835 = !DILocation(line: 4132, column: 8, scope: !5829)
!5836 = !DILocation(line: 4135, column: 10, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 4133, column: 6)
!5838 = !DILocation(line: 4136, column: 6, scope: !5837)
!5839 = !DILocation(line: 4137, column: 17, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 4137, column: 13)
!5841 = !DILocation(line: 4137, column: 24, scope: !5840)
!5842 = !DILocation(line: 4137, column: 31, scope: !5840)
!5843 = !DILocation(line: 4137, column: 13, scope: !5831)
!5844 = !DILocation(line: 4140, column: 10, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 4138, column: 6)
!5846 = !DILocation(line: 4141, column: 6, scope: !5845)
!5847 = !DILocation(line: 4149, column: 8, scope: !5788)
!5848 = !DILocation(line: 4150, column: 8, scope: !5788)
!5849 = !DILocation(line: 0, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 4168, column: 2)
!5851 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 4167, column: 11)
!5852 = !DILocation(line: 4152, column: 8, scope: !5805)
!5853 = !DILocation(line: 4152, column: 11, scope: !5805)
!5854 = !DILocation(line: 4152, column: 16, scope: !5804)
!5855 = !DILocation(line: 4152, column: 3, scope: !5805)
!5856 = !DILocation(line: 4156, column: 11, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 4156, column: 11)
!5858 = !DILocation(line: 4156, column: 11, scope: !5803)
!5859 = !DILocation(line: 4158, column: 15, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 4158, column: 11)
!5861 = !DILocation(line: 4158, column: 22, scope: !5860)
!5862 = !DILocation(line: 4158, column: 29, scope: !5860)
!5863 = !DILocation(line: 4158, column: 11, scope: !5803)
!5864 = !DILocation(line: 4159, column: 10, scope: !5860)
!5865 = !DILocation(line: 4159, column: 14, scope: !5860)
!5866 = !DILocation(line: 0, scope: !5803)
!5867 = !DILocation(line: 4159, column: 2, scope: !5860)
!5868 = !DILocation(line: 4160, column: 20, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 4160, column: 16)
!5870 = !DILocation(line: 4160, column: 27, scope: !5869)
!5871 = !DILocation(line: 4160, column: 34, scope: !5869)
!5872 = !DILocation(line: 4160, column: 16, scope: !5860)
!5873 = !DILocation(line: 4161, column: 10, scope: !5869)
!5874 = !DILocation(line: 4161, column: 20, scope: !5869)
!5875 = !DILocation(line: 4161, column: 2, scope: !5869)
!5876 = !DILocation(line: 4162, column: 20, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 4162, column: 16)
!5878 = !DILocation(line: 4162, column: 27, scope: !5877)
!5879 = !DILocation(line: 4162, column: 34, scope: !5877)
!5880 = !DILocation(line: 4162, column: 16, scope: !5869)
!5881 = !DILocation(line: 4163, column: 10, scope: !5877)
!5882 = !DILocation(line: 4163, column: 20, scope: !5877)
!5883 = !DILocation(line: 4163, column: 2, scope: !5877)
!5884 = !DILocation(line: 0, scope: !5860)
!5885 = !DILocation(line: 4167, column: 17, scope: !5851)
!5886 = !DILocation(line: 4167, column: 11, scope: !5803)
!5887 = !DILocation(line: 4169, column: 4, scope: !5850)
!5888 = !DILocation(line: 4170, column: 16, scope: !5850)
!5889 = !DILocation(line: 4171, column: 4, scope: !5850)
!5890 = !DILocation(line: 4174, column: 18, scope: !5803)
!5891 = !DILocation(line: 4174, column: 12, scope: !5803)
!5892 = !DILocation(line: 4174, column: 7, scope: !5803)
!5893 = !DILocation(line: 4174, column: 16, scope: !5803)
!5894 = !DILocation(line: 4175, column: 5, scope: !5804)
!5895 = !DILocation(line: 0, scope: !5805)
!5896 = !DILocation(line: 4152, column: 23, scope: !5804)
!5897 = !DILocation(line: 4152, column: 3, scope: !5804)
!5898 = distinct !{!5898, !5855, !5899}
!5899 = !DILocation(line: 4175, column: 5, scope: !5805)
!5900 = !DILocation(line: 4177, column: 10, scope: !5788)
!5901 = !DILocation(line: 4179, column: 12, scope: !5808)
!5902 = !DILocation(line: 4179, column: 7, scope: !5788)
!5903 = !DILocation(line: 4181, column: 21, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 4180, column: 5)
!5905 = !DILocation(line: 4181, column: 19, scope: !5904)
!5906 = !DILocation(line: 4181, column: 42, scope: !5904)
!5907 = !DILocation(line: 4181, column: 47, scope: !5904)
!5908 = !DILocation(line: 4182, column: 12, scope: !5904)
!5909 = !DILocation(line: 4183, column: 12, scope: !5904)
!5910 = !DILocation(line: 4184, column: 5, scope: !5904)
!5911 = !DILocation(line: 4187, column: 7, scope: !5807)
!5912 = !DILocation(line: 4188, column: 33, scope: !5807)
!5913 = !DILocation(line: 0, scope: !5807)
!5914 = !DILocation(line: 4188, column: 7, scope: !5807)
!5915 = !DILocation(line: 4189, column: 26, scope: !5807)
!5916 = !DILocation(line: 4189, column: 21, scope: !5807)
!5917 = !DILocation(line: 4189, column: 19, scope: !5807)
!5918 = !DILocation(line: 4189, column: 30, scope: !5807)
!5919 = !DILocation(line: 4189, column: 35, scope: !5807)
!5920 = !DILocation(line: 4190, column: 12, scope: !5807)
!5921 = !DILocation(line: 4191, column: 12, scope: !5807)
!5922 = !DILocation(line: 4192, column: 5, scope: !5808)
!5923 = !DILocation(line: 0, scope: !5808)
!5924 = !DILocation(line: 4193, column: 3, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 4193, column: 3)
!5926 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 4193, column: 3)
!5927 = !DILocation(line: 4193, column: 3, scope: !5926)
!5928 = !DILocation(line: 4194, column: 3, scope: !5788)
!5929 = !DILocation(line: 4196, column: 17, scope: !5788)
!5930 = !DILocation(line: 4196, column: 15, scope: !5788)
!5931 = !DILocation(line: 4198, column: 3, scope: !5788)
!5932 = !DILocation(line: 4199, column: 1, scope: !5788)
!5933 = distinct !DISubprogram(name: "mpz_init_set_str", scope: !3, file: !3, line: 4202, type: !5789, scopeLine: 4203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5934)
!5934 = !{!5935, !5936, !5937}
!5935 = !DILocalVariable(name: "r", arg: 1, scope: !5933, file: !3, line: 4202, type: !1314)
!5936 = !DILocalVariable(name: "sp", arg: 2, scope: !5933, file: !3, line: 4202, type: !4145)
!5937 = !DILocalVariable(name: "base", arg: 3, scope: !5933, file: !3, line: 4202, type: !19)
!5938 = !DILocation(line: 0, scope: !5933)
!5939 = !DILocation(line: 4204, column: 3, scope: !5933)
!5940 = !DILocation(line: 4205, column: 10, scope: !5933)
!5941 = !DILocation(line: 4205, column: 3, scope: !5933)
!5942 = distinct !DISubprogram(name: "mpz_out_str", scope: !3, file: !3, line: 4209, type: !5943, scopeLine: 4210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5997)
!5943 = !DISubroutineType(types: !5944)
!5944 = !{!35, !5945, !19, !1411}
!5945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5946, size: 64)
!5946 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !5947, line: 7, baseType: !5948)
!5947 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!5948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5949, line: 49, size: 1728, elements: !5950)
!5949 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!5950 = !{!5951, !5952, !5953, !5954, !5955, !5956, !5957, !5958, !5959, !5960, !5961, !5962, !5963, !5966, !5968, !5969, !5970, !5973, !5974, !5976, !5978, !5981, !5983, !5986, !5989, !5990, !5991, !5992, !5993}
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5948, file: !5949, line: 51, baseType: !19, size: 32)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5948, file: !5949, line: 54, baseType: !5710, size: 64, offset: 64)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5948, file: !5949, line: 55, baseType: !5710, size: 64, offset: 128)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5948, file: !5949, line: 56, baseType: !5710, size: 64, offset: 192)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5948, file: !5949, line: 57, baseType: !5710, size: 64, offset: 256)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5948, file: !5949, line: 58, baseType: !5710, size: 64, offset: 320)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5948, file: !5949, line: 59, baseType: !5710, size: 64, offset: 384)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5948, file: !5949, line: 60, baseType: !5710, size: 64, offset: 448)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5948, file: !5949, line: 61, baseType: !5710, size: 64, offset: 512)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5948, file: !5949, line: 64, baseType: !5710, size: 64, offset: 576)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5948, file: !5949, line: 65, baseType: !5710, size: 64, offset: 640)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5948, file: !5949, line: 66, baseType: !5710, size: 64, offset: 704)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5948, file: !5949, line: 68, baseType: !5964, size: 64, offset: 768)
!5964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5965, size: 64)
!5965 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !5949, line: 36, flags: DIFlagFwdDecl)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5948, file: !5949, line: 70, baseType: !5967, size: 64, offset: 832)
!5967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5948, size: 64)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5948, file: !5949, line: 72, baseType: !19, size: 32, offset: 896)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5948, file: !5949, line: 73, baseType: !19, size: 32, offset: 928)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5948, file: !5949, line: 74, baseType: !5971, size: 64, offset: 960)
!5971 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !5972, line: 152, baseType: !15)
!5972 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5948, file: !5949, line: 77, baseType: !23, size: 16, offset: 1024)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5948, file: !5949, line: 78, baseType: !5975, size: 8, offset: 1040)
!5975 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5948, file: !5949, line: 79, baseType: !5977, size: 8, offset: 1048)
!5977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4147, size: 8, elements: !2377)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5948, file: !5949, line: 81, baseType: !5979, size: 64, offset: 1088)
!5979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5980, size: 64)
!5980 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !5949, line: 43, baseType: null)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5948, file: !5949, line: 89, baseType: !5982, size: 64, offset: 1152)
!5982 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !5972, line: 153, baseType: !15)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5948, file: !5949, line: 91, baseType: !5984, size: 64, offset: 1216)
!5984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5985, size: 64)
!5985 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !5949, line: 37, flags: DIFlagFwdDecl)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5948, file: !5949, line: 92, baseType: !5987, size: 64, offset: 1280)
!5987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5988, size: 64)
!5988 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !5949, line: 38, flags: DIFlagFwdDecl)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5948, file: !5949, line: 93, baseType: !5967, size: 64, offset: 1344)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5948, file: !5949, line: 94, baseType: !34, size: 64, offset: 1408)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5948, file: !5949, line: 95, baseType: !35, size: 64, offset: 1472)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5948, file: !5949, line: 96, baseType: !19, size: 32, offset: 1536)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5948, file: !5949, line: 98, baseType: !5994, size: 160, offset: 1568)
!5994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4147, size: 160, elements: !5995)
!5995 = !{!5996}
!5996 = !DISubrange(count: 20)
!5997 = !{!5998, !5999, !6000, !6001, !6002}
!5998 = !DILocalVariable(name: "stream", arg: 1, scope: !5942, file: !3, line: 4209, type: !5945)
!5999 = !DILocalVariable(name: "base", arg: 2, scope: !5942, file: !3, line: 4209, type: !19)
!6000 = !DILocalVariable(name: "x", arg: 3, scope: !5942, file: !3, line: 4209, type: !1411)
!6001 = !DILocalVariable(name: "str", scope: !5942, file: !3, line: 4211, type: !5710)
!6002 = !DILocalVariable(name: "len", scope: !5942, file: !3, line: 4212, type: !35)
!6003 = !DILocation(line: 0, scope: !5942)
!6004 = !DILocation(line: 4214, column: 9, scope: !5942)
!6005 = !DILocation(line: 4215, column: 9, scope: !5942)
!6006 = !DILocation(line: 4216, column: 9, scope: !5942)
!6007 = !DILocation(line: 4217, column: 3, scope: !5942)
!6008 = !DILocation(line: 4218, column: 3, scope: !5942)
!6009 = distinct !DISubprogram(name: "mpz_import", scope: !3, file: !3, line: 4232, type: !6010, scopeLine: 4234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6014)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{null, !1314, !35, !19, !35, !19, !35, !6012}
!6012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6013, size: 64)
!6013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!6014 = !{!6015, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6023, !6024, !6025, !6026, !6027, !6028, !6029}
!6015 = !DILocalVariable(name: "r", arg: 1, scope: !6009, file: !3, line: 4232, type: !1314)
!6016 = !DILocalVariable(name: "count", arg: 2, scope: !6009, file: !3, line: 4232, type: !35)
!6017 = !DILocalVariable(name: "order", arg: 3, scope: !6009, file: !3, line: 4232, type: !19)
!6018 = !DILocalVariable(name: "size", arg: 4, scope: !6009, file: !3, line: 4232, type: !35)
!6019 = !DILocalVariable(name: "endian", arg: 5, scope: !6009, file: !3, line: 4232, type: !19)
!6020 = !DILocalVariable(name: "nails", arg: 6, scope: !6009, file: !3, line: 4233, type: !35)
!6021 = !DILocalVariable(name: "src", arg: 7, scope: !6009, file: !3, line: 4233, type: !6012)
!6022 = !DILocalVariable(name: "p", scope: !6009, file: !3, line: 4235, type: !26)
!6023 = !DILocalVariable(name: "word_step", scope: !6009, file: !3, line: 4236, type: !24)
!6024 = !DILocalVariable(name: "rp", scope: !6009, file: !3, line: 4237, type: !16)
!6025 = !DILocalVariable(name: "rn", scope: !6009, file: !3, line: 4238, type: !154)
!6026 = !DILocalVariable(name: "limb", scope: !6009, file: !3, line: 4241, type: !12)
!6027 = !DILocalVariable(name: "bytes", scope: !6009, file: !3, line: 4244, type: !35)
!6028 = !DILocalVariable(name: "i", scope: !6009, file: !3, line: 4246, type: !154)
!6029 = !DILocalVariable(name: "j", scope: !6030, file: !3, line: 4278, type: !35)
!6030 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 4277, column: 5)
!6031 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 4276, column: 3)
!6032 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 4276, column: 3)
!6033 = !DILocation(line: 0, scope: !6009)
!6034 = !DILocation(line: 4248, column: 13, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 4248, column: 7)
!6036 = !DILocation(line: 4248, column: 7, scope: !6009)
!6037 = !DILocation(line: 4249, column: 5, scope: !6035)
!6038 = !DILocation(line: 4251, column: 3, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 4251, column: 3)
!6040 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 4251, column: 3)
!6041 = !DILocation(line: 4252, column: 3, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 4252, column: 3)
!6043 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 4252, column: 3)
!6044 = !DILocation(line: 4254, column: 14, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 4254, column: 7)
!6046 = !DILocation(line: 4254, column: 7, scope: !6009)
!6047 = !DILocation(line: 4255, column: 14, scope: !6045)
!6048 = !DILocation(line: 4255, column: 5, scope: !6045)
!6049 = !DILocation(line: 4259, column: 22, scope: !6009)
!6050 = !DILocation(line: 4259, column: 15, scope: !6009)
!6051 = !DILocation(line: 4263, column: 13, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 4263, column: 7)
!6053 = !DILocation(line: 4263, column: 7, scope: !6009)
!6054 = !DILocation(line: 4265, column: 26, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 4264, column: 5)
!6056 = !DILocation(line: 4265, column: 17, scope: !6055)
!6057 = !DILocation(line: 4265, column: 9, scope: !6055)
!6058 = !DILocation(line: 4266, column: 19, scope: !6055)
!6059 = !DILocation(line: 4267, column: 5, scope: !6055)
!6060 = !DILocation(line: 4270, column: 14, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 4270, column: 7)
!6062 = !DILocation(line: 4270, column: 7, scope: !6009)
!6063 = !DILocation(line: 4273, column: 14, scope: !6009)
!6064 = !DILocation(line: 4273, column: 42, scope: !6009)
!6065 = !DILocation(line: 4273, column: 47, scope: !6009)
!6066 = !DILocation(line: 4274, column: 8, scope: !6009)
!6067 = !DILocation(line: 0, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 4279, column: 7)
!6069 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 4279, column: 7)
!6070 = !DILocation(line: 4276, column: 8, scope: !6032)
!6071 = !DILocation(line: 4276, column: 13, scope: !6032)
!6072 = !DILocation(line: 4276, column: 24, scope: !6032)
!6073 = !DILocation(line: 4276, column: 31, scope: !6032)
!6074 = !DILocation(line: 4276, column: 42, scope: !6031)
!6075 = !DILocation(line: 4276, column: 3, scope: !6032)
!6076 = !DILocation(line: 4279, column: 7, scope: !6069)
!6077 = !DILocation(line: 0, scope: !6032)
!6078 = !DILocation(line: 0, scope: !6069)
!6079 = !DILocation(line: 0, scope: !6030)
!6080 = !DILocation(line: 4279, column: 21, scope: !6068)
!6081 = !DILocation(line: 4281, column: 24, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 4280, column: 2)
!6083 = !DILocation(line: 4281, column: 12, scope: !6082)
!6084 = !DILocation(line: 4281, column: 36, scope: !6082)
!6085 = !DILocation(line: 4281, column: 39, scope: !6082)
!6086 = !DILocation(line: 4281, column: 27, scope: !6082)
!6087 = !DILocation(line: 4281, column: 9, scope: !6082)
!6088 = !DILocation(line: 4282, column: 14, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6082, file: !3, line: 4282, column: 8)
!6090 = !DILocation(line: 4282, column: 8, scope: !6082)
!6091 = !DILocation(line: 4284, column: 12, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 4283, column: 6)
!6093 = !DILocation(line: 4284, column: 8, scope: !6092)
!6094 = !DILocation(line: 4284, column: 16, scope: !6092)
!6095 = !DILocation(line: 4287, column: 6, scope: !6092)
!6096 = !DILocation(line: 0, scope: !6082)
!6097 = !DILocation(line: 4279, column: 30, scope: !6068)
!6098 = !DILocation(line: 4279, column: 36, scope: !6068)
!6099 = !DILocation(line: 4279, column: 7, scope: !6068)
!6100 = distinct !{!6100, !6076, !6101}
!6101 = !DILocation(line: 4288, column: 2, scope: !6069)
!6102 = !DILocation(line: 4276, column: 52, scope: !6031)
!6103 = !DILocation(line: 4276, column: 58, scope: !6031)
!6104 = !DILocation(line: 4276, column: 3, scope: !6031)
!6105 = distinct !{!6105, !6075, !6106}
!6106 = !DILocation(line: 4289, column: 5, scope: !6032)
!6107 = !DILocation(line: 4290, column: 3, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 4290, column: 3)
!6109 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 4290, column: 3)
!6110 = !DILocation(line: 4290, column: 3, scope: !6109)
!6111 = !DILocation(line: 4291, column: 12, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 4291, column: 7)
!6113 = !DILocation(line: 4291, column: 7, scope: !6009)
!6114 = !DILocation(line: 4292, column: 9, scope: !6112)
!6115 = !DILocation(line: 4292, column: 5, scope: !6112)
!6116 = !DILocation(line: 4292, column: 13, scope: !6112)
!6117 = !DILocation(line: 4294, column: 9, scope: !6112)
!6118 = !DILocation(line: 0, scope: !6112)
!6119 = !DILocation(line: 4296, column: 17, scope: !6009)
!6120 = !DILocation(line: 4296, column: 6, scope: !6009)
!6121 = !DILocation(line: 4296, column: 15, scope: !6009)
!6122 = !DILocation(line: 4297, column: 1, scope: !6009)
!6123 = !DILocation(line: 4227, column: 3, scope: !48)
!6124 = distinct !DISubprogram(name: "mpz_export", scope: !3, file: !3, line: 4300, type: !6125, scopeLine: 4302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6128)
!6125 = !DISubroutineType(types: !6126)
!6126 = !{!34, !34, !6127, !19, !35, !19, !35, !1411}
!6127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64)
!6128 = !{!6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6141, !6142, !6143, !6144, !6145, !6146}
!6129 = !DILocalVariable(name: "r", arg: 1, scope: !6124, file: !3, line: 4300, type: !34)
!6130 = !DILocalVariable(name: "countp", arg: 2, scope: !6124, file: !3, line: 4300, type: !6127)
!6131 = !DILocalVariable(name: "order", arg: 3, scope: !6124, file: !3, line: 4300, type: !19)
!6132 = !DILocalVariable(name: "size", arg: 4, scope: !6124, file: !3, line: 4300, type: !35)
!6133 = !DILocalVariable(name: "endian", arg: 5, scope: !6124, file: !3, line: 4300, type: !19)
!6134 = !DILocalVariable(name: "nails", arg: 6, scope: !6124, file: !3, line: 4301, type: !35)
!6135 = !DILocalVariable(name: "u", arg: 7, scope: !6124, file: !3, line: 4301, type: !1411)
!6136 = !DILocalVariable(name: "count", scope: !6124, file: !3, line: 4303, type: !35)
!6137 = !DILocalVariable(name: "un", scope: !6124, file: !3, line: 4304, type: !154)
!6138 = !DILocalVariable(name: "k", scope: !6139, file: !3, line: 4317, type: !35)
!6139 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 4316, column: 5)
!6140 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 4315, column: 7)
!6141 = !DILocalVariable(name: "p", scope: !6139, file: !3, line: 4318, type: !21)
!6142 = !DILocalVariable(name: "word_step", scope: !6139, file: !3, line: 4319, type: !24)
!6143 = !DILocalVariable(name: "limb", scope: !6139, file: !3, line: 4321, type: !12)
!6144 = !DILocalVariable(name: "bytes", scope: !6139, file: !3, line: 4323, type: !35)
!6145 = !DILocalVariable(name: "i", scope: !6139, file: !3, line: 4325, type: !154)
!6146 = !DILocalVariable(name: "j", scope: !6147, file: !3, line: 4364, type: !35)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 4363, column: 2)
!6148 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 4362, column: 7)
!6149 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4362, column: 7)
!6150 = !DILocation(line: 0, scope: !6124)
!6151 = !DILocation(line: 4306, column: 13, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 4306, column: 7)
!6153 = !DILocation(line: 4306, column: 7, scope: !6124)
!6154 = !DILocation(line: 4307, column: 5, scope: !6152)
!6155 = !DILocation(line: 4309, column: 3, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 4309, column: 3)
!6157 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 4309, column: 3)
!6158 = !DILocation(line: 4310, column: 3, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6160, file: !3, line: 4310, column: 3)
!6160 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 4310, column: 3)
!6161 = !DILocation(line: 4311, column: 3, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 4311, column: 3)
!6163 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 4311, column: 3)
!6164 = !DILocation(line: 4313, column: 11, scope: !6124)
!6165 = !DILocation(line: 4311, column: 3, scope: !6163)
!6166 = !DILocation(line: 4313, column: 8, scope: !6124)
!6167 = !DILocation(line: 4315, column: 10, scope: !6140)
!6168 = !DILocation(line: 4315, column: 7, scope: !6124)
!6169 = !DILocation(line: 4327, column: 12, scope: !6139)
!6170 = !DILocation(line: 4330, column: 17, scope: !6139)
!6171 = !DILocation(line: 4330, column: 25, scope: !6139)
!6172 = !DILocation(line: 4330, column: 14, scope: !6139)
!6173 = !DILocation(line: 0, scope: !6139)
!6174 = !DILocation(line: 4331, column: 7, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 4331, column: 7)
!6176 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4331, column: 7)
!6177 = !DILocation(line: 4331, column: 7, scope: !6176)
!6178 = !DILocation(line: 4334, column: 7, scope: !6139)
!6179 = !DILocation(line: 4335, column: 3, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4334, column: 10)
!6181 = !DILocation(line: 4335, column: 12, scope: !6180)
!6182 = !DILocation(line: 4336, column: 21, scope: !6139)
!6183 = !DILocation(line: 4336, column: 7, scope: !6180)
!6184 = distinct !{!6184, !6178, !6185}
!6185 = !DILocation(line: 4336, column: 25, scope: !6139)
!6186 = !DILocation(line: 4338, column: 27, scope: !6139)
!6187 = !DILocation(line: 4338, column: 18, scope: !6139)
!6188 = !DILocation(line: 4338, column: 48, scope: !6139)
!6189 = !DILocation(line: 4338, column: 55, scope: !6139)
!6190 = !DILocation(line: 4338, column: 60, scope: !6139)
!6191 = !DILocation(line: 4340, column: 12, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4340, column: 11)
!6193 = !DILocation(line: 4340, column: 11, scope: !6139)
!6194 = !DILocation(line: 4341, column: 6, scope: !6192)
!6195 = !DILocation(line: 4341, column: 2, scope: !6192)
!6196 = !DILocation(line: 4343, column: 18, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4343, column: 11)
!6198 = !DILocation(line: 4343, column: 11, scope: !6139)
!6199 = !DILocation(line: 4344, column: 11, scope: !6197)
!6200 = !DILocation(line: 4344, column: 2, scope: !6197)
!6201 = !DILocation(line: 4348, column: 26, scope: !6139)
!6202 = !DILocation(line: 4348, column: 19, scope: !6139)
!6203 = !DILocation(line: 4352, column: 17, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4352, column: 11)
!6205 = !DILocation(line: 4352, column: 11, scope: !6139)
!6206 = !DILocation(line: 4354, column: 23, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 4353, column: 2)
!6208 = !DILocation(line: 4354, column: 14, scope: !6207)
!6209 = !DILocation(line: 4354, column: 6, scope: !6207)
!6210 = !DILocation(line: 4355, column: 16, scope: !6207)
!6211 = !DILocation(line: 4356, column: 2, scope: !6207)
!6212 = !DILocation(line: 4359, column: 18, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4359, column: 11)
!6214 = !DILocation(line: 4359, column: 11, scope: !6139)
!6215 = !DILocation(line: 0, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 4365, column: 4)
!6217 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 4365, column: 4)
!6218 = !DILocation(line: 4362, column: 12, scope: !6149)
!6219 = !DILocation(line: 0, scope: !6149)
!6220 = !DILocation(line: 4362, column: 18, scope: !6149)
!6221 = !DILocation(line: 4362, column: 25, scope: !6149)
!6222 = !DILocation(line: 4362, column: 39, scope: !6148)
!6223 = !DILocation(line: 4362, column: 7, scope: !6149)
!6224 = !DILocation(line: 4365, column: 4, scope: !6217)
!6225 = !DILocation(line: 0, scope: !6217)
!6226 = !DILocation(line: 0, scope: !6147)
!6227 = !DILocation(line: 4365, column: 18, scope: !6216)
!6228 = !DILocation(line: 4367, column: 18, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 4367, column: 12)
!6230 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 4366, column: 6)
!6231 = !DILocation(line: 4367, column: 12, scope: !6230)
!6232 = !DILocation(line: 4369, column: 11, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 4369, column: 9)
!6234 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 4368, column: 3)
!6235 = !DILocation(line: 4369, column: 9, scope: !6234)
!6236 = !DILocation(line: 4370, column: 17, scope: !6233)
!6237 = !DILocation(line: 4370, column: 24, scope: !6233)
!6238 = !DILocation(line: 4370, column: 14, scope: !6233)
!6239 = !DILocation(line: 4370, column: 7, scope: !6233)
!6240 = !DILocation(line: 4373, column: 13, scope: !6230)
!6241 = !DILocation(line: 4373, column: 11, scope: !6230)
!6242 = !DILocation(line: 4374, column: 13, scope: !6230)
!6243 = !DILocation(line: 4375, column: 13, scope: !6230)
!6244 = !DILocation(line: 4365, column: 27, scope: !6216)
!6245 = !DILocation(line: 4365, column: 33, scope: !6216)
!6246 = !DILocation(line: 4365, column: 4, scope: !6216)
!6247 = distinct !{!6247, !6224, !6248}
!6248 = !DILocation(line: 4376, column: 6, scope: !6217)
!6249 = !DILocation(line: 4362, column: 49, scope: !6148)
!6250 = !DILocation(line: 4362, column: 55, scope: !6148)
!6251 = !DILocation(line: 4362, column: 7, scope: !6148)
!6252 = distinct !{!6252, !6223, !6253}
!6253 = !DILocation(line: 4377, column: 2, scope: !6149)
!6254 = !DILocation(line: 4378, column: 7, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 4378, column: 7)
!6256 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4378, column: 7)
!6257 = !DILocation(line: 4378, column: 7, scope: !6256)
!6258 = !DILocation(line: 4379, column: 7, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 4379, column: 7)
!6260 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4379, column: 7)
!6261 = !DILocation(line: 4379, column: 7, scope: !6260)
!6262 = !DILocation(line: 4382, column: 7, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 4382, column: 7)
!6264 = !DILocation(line: 4382, column: 7, scope: !6124)
!6265 = !DILocation(line: 4383, column: 13, scope: !6263)
!6266 = !DILocation(line: 4383, column: 5, scope: !6263)
!6267 = !DILocation(line: 4385, column: 3, scope: !6124)
!6268 = distinct !DISubprogram(name: "mpn_limb_get_str", scope: !3, file: !3, line: 1189, type: !6269, scopeLine: 1191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6271)
!6269 = !DISubroutineType(types: !6270)
!6270 = !{!35, !21, !12, !4233}
!6271 = !{!6272, !6273, !6274, !6275, !6276, !6280, !6281, !6282, !6284, !6285, !6286, !6287, !6289, !6290, !6291, !6292, !6293, !6294, !6295, !6296, !6297, !6298}
!6272 = !DILocalVariable(name: "sp", arg: 1, scope: !6268, file: !3, line: 1189, type: !21)
!6273 = !DILocalVariable(name: "w", arg: 2, scope: !6268, file: !3, line: 1189, type: !12)
!6274 = !DILocalVariable(name: "binv", arg: 3, scope: !6268, file: !3, line: 1190, type: !4233)
!6275 = !DILocalVariable(name: "i", scope: !6268, file: !3, line: 1192, type: !154)
!6276 = !DILocalVariable(name: "h", scope: !6277, file: !3, line: 1195, type: !12)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 1194, column: 5)
!6278 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 1193, column: 3)
!6279 = distinct !DILexicalBlock(scope: !6268, file: !3, line: 1193, column: 3)
!6280 = !DILocalVariable(name: "l", scope: !6277, file: !3, line: 1195, type: !12)
!6281 = !DILocalVariable(name: "r", scope: !6277, file: !3, line: 1195, type: !12)
!6282 = !DILocalVariable(name: "_qh", scope: !6283, file: !3, line: 1200, type: !12)
!6283 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1200, column: 7)
!6284 = !DILocalVariable(name: "_ql", scope: !6283, file: !3, line: 1200, type: !12)
!6285 = !DILocalVariable(name: "_r", scope: !6283, file: !3, line: 1200, type: !12)
!6286 = !DILocalVariable(name: "_mask", scope: !6283, file: !3, line: 1200, type: !12)
!6287 = !DILocalVariable(name: "__x0", scope: !6288, file: !3, line: 1200, type: !12)
!6288 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1200, column: 7)
!6289 = !DILocalVariable(name: "__x1", scope: !6288, file: !3, line: 1200, type: !12)
!6290 = !DILocalVariable(name: "__x2", scope: !6288, file: !3, line: 1200, type: !12)
!6291 = !DILocalVariable(name: "__x3", scope: !6288, file: !3, line: 1200, type: !12)
!6292 = !DILocalVariable(name: "__ul", scope: !6288, file: !3, line: 1200, type: !6)
!6293 = !DILocalVariable(name: "__vl", scope: !6288, file: !3, line: 1200, type: !6)
!6294 = !DILocalVariable(name: "__uh", scope: !6288, file: !3, line: 1200, type: !6)
!6295 = !DILocalVariable(name: "__vh", scope: !6288, file: !3, line: 1200, type: !6)
!6296 = !DILocalVariable(name: "__u", scope: !6288, file: !3, line: 1200, type: !12)
!6297 = !DILocalVariable(name: "__v", scope: !6288, file: !3, line: 1200, type: !12)
!6298 = !DILocalVariable(name: "__x", scope: !6299, file: !3, line: 1200, type: !12)
!6299 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1200, column: 7)
!6300 = !DILocation(line: 0, scope: !6268)
!6301 = !DILocation(line: 0, scope: !6277)
!6302 = !DILocation(line: 0, scope: !6288)
!6303 = !DILocation(line: 0, scope: !6283)
!6304 = !DILocation(line: 1193, column: 8, scope: !6279)
!6305 = !DILocation(line: 0, scope: !6279)
!6306 = !DILocation(line: 1193, column: 17, scope: !6278)
!6307 = !DILocation(line: 1193, column: 3, scope: !6279)
!6308 = !DILocation(line: 1197, column: 39, scope: !6277)
!6309 = !DILocation(line: 1197, column: 33, scope: !6277)
!6310 = !DILocation(line: 1197, column: 31, scope: !6277)
!6311 = !DILocation(line: 1197, column: 13, scope: !6277)
!6312 = !DILocation(line: 1198, column: 13, scope: !6277)
!6313 = !DILocation(line: 1200, column: 7, scope: !6288)
!6314 = !DILocation(line: 1200, column: 7, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 1200, column: 7)
!6316 = !DILocation(line: 1200, column: 7, scope: !6299)
!6317 = !DILocation(line: 0, scope: !6299)
!6318 = !DILocation(line: 1200, column: 7, scope: !6283)
!6319 = !DILocation(line: 1200, column: 7, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1200, column: 7)
!6321 = !DILocation(line: 1200, column: 7, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 1200, column: 7)
!6323 = !DILocation(line: 1201, column: 7, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 1201, column: 7)
!6325 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1201, column: 7)
!6326 = !DILocation(line: 1201, column: 7, scope: !6325)
!6327 = !DILocation(line: 1202, column: 9, scope: !6277)
!6328 = !DILocation(line: 1204, column: 15, scope: !6277)
!6329 = !DILocation(line: 1204, column: 7, scope: !6277)
!6330 = !DILocation(line: 1204, column: 13, scope: !6277)
!6331 = !DILocation(line: 1193, column: 23, scope: !6278)
!6332 = !DILocation(line: 1193, column: 3, scope: !6278)
!6333 = distinct !{!6333, !6307, !6334}
!6334 = !DILocation(line: 1205, column: 5, scope: !6279)
!6335 = !DILocation(line: 1206, column: 3, scope: !6268)
!6336 = distinct !DISubprogram(name: "gmp_xrealloc_limbs", scope: !3, file: !3, line: 329, type: !6337, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6339)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{!16, !16, !154}
!6339 = !{!6340, !6341}
!6340 = !DILocalVariable(name: "old", arg: 1, scope: !6336, file: !3, line: 329, type: !16)
!6341 = !DILocalVariable(name: "size", arg: 2, scope: !6336, file: !3, line: 329, type: !154)
!6342 = !DILocation(line: 0, scope: !6336)
!6343 = !DILocation(line: 331, column: 3, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 331, column: 3)
!6345 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 331, column: 3)
!6346 = !DILocation(line: 331, column: 3, scope: !6345)
!6347 = !DILocation(line: 332, column: 12, scope: !6336)
!6348 = !DILocation(line: 332, column: 34, scope: !6336)
!6349 = !DILocation(line: 332, column: 47, scope: !6336)
!6350 = !DILocation(line: 332, column: 10, scope: !6336)
!6351 = !DILocation(line: 332, column: 3, scope: !6336)
!6352 = distinct !DISubprogram(name: "mpn_div_qr", scope: !3, file: !3, line: 1085, type: !6353, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6355)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{null, !16, !16, !154, !151, !154}
!6355 = !{!6356, !6357, !6358, !6359, !6360, !6361, !6362, !6363}
!6356 = !DILocalVariable(name: "qp", arg: 1, scope: !6352, file: !3, line: 1085, type: !16)
!6357 = !DILocalVariable(name: "np", arg: 2, scope: !6352, file: !3, line: 1085, type: !16)
!6358 = !DILocalVariable(name: "nn", arg: 3, scope: !6352, file: !3, line: 1085, type: !154)
!6359 = !DILocalVariable(name: "dp", arg: 4, scope: !6352, file: !3, line: 1085, type: !151)
!6360 = !DILocalVariable(name: "dn", arg: 5, scope: !6352, file: !3, line: 1085, type: !154)
!6361 = !DILocalVariable(name: "inv", scope: !6352, file: !3, line: 1087, type: !1067)
!6362 = !DILocalVariable(name: "tp", scope: !6352, file: !3, line: 1088, type: !16)
!6363 = !DILocalVariable(name: "__cy", scope: !6364, file: !3, line: 1097, type: !12)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 1097, column: 7)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 1095, column: 5)
!6366 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1094, column: 7)
!6367 = !DILocation(line: 0, scope: !6352)
!6368 = !DILocation(line: 1087, column: 3, scope: !6352)
!6369 = !DILocation(line: 1090, column: 3, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 1090, column: 3)
!6371 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1090, column: 3)
!6372 = !DILocation(line: 1090, column: 3, scope: !6371)
!6373 = !DILocation(line: 1091, column: 3, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 1091, column: 3)
!6375 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1091, column: 3)
!6376 = !DILocation(line: 1091, column: 3, scope: !6375)
!6377 = !DILocation(line: 1093, column: 3, scope: !6352)
!6378 = !DILocation(line: 1094, column: 10, scope: !6366)
!6379 = !DILocation(line: 1094, column: 14, scope: !6366)
!6380 = !DILocation(line: 1094, column: 21, scope: !6366)
!6381 = !DILocation(line: 1094, column: 27, scope: !6366)
!6382 = !DILocation(line: 1094, column: 7, scope: !6352)
!6383 = !DILocation(line: 1096, column: 12, scope: !6365)
!6384 = !DILocation(line: 1097, column: 7, scope: !6364)
!6385 = !DILocation(line: 0, scope: !6364)
!6386 = !DILocation(line: 1097, column: 7, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1097, column: 7)
!6388 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 1097, column: 7)
!6389 = !DILocation(line: 1097, column: 7, scope: !6388)
!6390 = !DILocation(line: 1100, column: 3, scope: !6352)
!6391 = !DILocation(line: 1101, column: 7, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1101, column: 7)
!6393 = !DILocation(line: 1101, column: 7, scope: !6352)
!6394 = !DILocation(line: 1102, column: 5, scope: !6392)
!6395 = !DILocation(line: 1103, column: 1, scope: !6352)
!6396 = distinct !DISubprogram(name: "mpn_div_qr_2_invert", scope: !3, file: !3, line: 809, type: !6397, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6399)
!6397 = !DISubroutineType(types: !6398)
!6398 = !{null, !4157, !12, !12}
!6399 = !{!6400, !6401, !6402, !6403, !6404, !6406}
!6400 = !DILocalVariable(name: "inv", arg: 1, scope: !6396, file: !3, line: 809, type: !4157)
!6401 = !DILocalVariable(name: "d1", arg: 2, scope: !6396, file: !3, line: 810, type: !12)
!6402 = !DILocalVariable(name: "d0", arg: 3, scope: !6396, file: !3, line: 810, type: !12)
!6403 = !DILocalVariable(name: "shift", scope: !6396, file: !3, line: 812, type: !6)
!6404 = !DILocalVariable(name: "__clz_x", scope: !6405, file: !3, line: 815, type: !12)
!6405 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 815, column: 3)
!6406 = !DILocalVariable(name: "__clz_c", scope: !6405, file: !3, line: 815, type: !6)
!6407 = !DILocation(line: 0, scope: !6396)
!6408 = !DILocation(line: 814, column: 3, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 814, column: 3)
!6410 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 814, column: 3)
!6411 = !DILocation(line: 814, column: 3, scope: !6410)
!6412 = !DILocation(line: 815, column: 3, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 815, column: 3)
!6414 = !DILocation(line: 0, scope: !6405)
!6415 = !DILocation(line: 0, scope: !6413)
!6416 = !DILocation(line: 815, column: 3, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 815, column: 3)
!6418 = !DILocation(line: 815, column: 3, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 815, column: 3)
!6420 = distinct !{!6420, !6412, !6412}
!6421 = !DILocation(line: 815, column: 3, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 815, column: 3)
!6423 = distinct !{!6423, !6418, !6418}
!6424 = !DILocation(line: 816, column: 8, scope: !6396)
!6425 = !DILocation(line: 816, column: 14, scope: !6396)
!6426 = !DILocation(line: 817, column: 13, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 817, column: 7)
!6428 = !DILocation(line: 817, column: 7, scope: !6396)
!6429 = !DILocation(line: 819, column: 16, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 818, column: 5)
!6431 = !DILocation(line: 819, column: 50, scope: !6430)
!6432 = !DILocation(line: 819, column: 32, scope: !6430)
!6433 = !DILocation(line: 819, column: 26, scope: !6430)
!6434 = !DILocation(line: 820, column: 10, scope: !6430)
!6435 = !DILocation(line: 821, column: 5, scope: !6430)
!6436 = !DILocation(line: 822, column: 8, scope: !6396)
!6437 = !DILocation(line: 822, column: 11, scope: !6396)
!6438 = !DILocation(line: 823, column: 8, scope: !6396)
!6439 = !DILocation(line: 823, column: 11, scope: !6396)
!6440 = !DILocation(line: 824, column: 13, scope: !6396)
!6441 = !DILocation(line: 824, column: 8, scope: !6396)
!6442 = !DILocation(line: 824, column: 11, scope: !6396)
!6443 = !DILocation(line: 825, column: 1, scope: !6396)
!6444 = distinct !DISubprogram(name: "mpn_div_qr_2_preinv", scope: !3, file: !3, line: 924, type: !6445, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6447)
!6445 = !DISubroutineType(types: !6446)
!6446 = !{null, !16, !16, !151, !154, !4233}
!6447 = !{!6448, !6449, !6450, !6451, !6452, !6453, !6454, !6455, !6456, !6457, !6458, !6459, !6460, !6461, !6463, !6464, !6466, !6467, !6468, !6469, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478, !6479, !6480, !6482, !6484, !6486, !6487, !6488, !6489, !6490, !6491, !6492, !6493, !6494, !6495, !6497, !6499}
!6448 = !DILocalVariable(name: "qp", arg: 1, scope: !6444, file: !3, line: 924, type: !16)
!6449 = !DILocalVariable(name: "rp", arg: 2, scope: !6444, file: !3, line: 924, type: !16)
!6450 = !DILocalVariable(name: "np", arg: 3, scope: !6444, file: !3, line: 924, type: !151)
!6451 = !DILocalVariable(name: "nn", arg: 4, scope: !6444, file: !3, line: 924, type: !154)
!6452 = !DILocalVariable(name: "inv", arg: 5, scope: !6444, file: !3, line: 925, type: !4233)
!6453 = !DILocalVariable(name: "shift", scope: !6444, file: !3, line: 927, type: !6)
!6454 = !DILocalVariable(name: "i", scope: !6444, file: !3, line: 928, type: !154)
!6455 = !DILocalVariable(name: "d1", scope: !6444, file: !3, line: 929, type: !12)
!6456 = !DILocalVariable(name: "d0", scope: !6444, file: !3, line: 929, type: !12)
!6457 = !DILocalVariable(name: "di", scope: !6444, file: !3, line: 929, type: !12)
!6458 = !DILocalVariable(name: "r1", scope: !6444, file: !3, line: 929, type: !12)
!6459 = !DILocalVariable(name: "r0", scope: !6444, file: !3, line: 929, type: !12)
!6460 = !DILocalVariable(name: "tp", scope: !6444, file: !3, line: 930, type: !16)
!6461 = !DILocalVariable(name: "n0", scope: !6462, file: !3, line: 952, type: !12)
!6462 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 951, column: 5)
!6463 = !DILocalVariable(name: "q", scope: !6462, file: !3, line: 952, type: !12)
!6464 = !DILocalVariable(name: "_q0", scope: !6465, file: !3, line: 954, type: !12)
!6465 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 954, column: 7)
!6466 = !DILocalVariable(name: "_t1", scope: !6465, file: !3, line: 954, type: !12)
!6467 = !DILocalVariable(name: "_t0", scope: !6465, file: !3, line: 954, type: !12)
!6468 = !DILocalVariable(name: "_mask", scope: !6465, file: !3, line: 954, type: !12)
!6469 = !DILocalVariable(name: "__x0", scope: !6470, file: !3, line: 954, type: !12)
!6470 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 954, column: 7)
!6471 = !DILocalVariable(name: "__x1", scope: !6470, file: !3, line: 954, type: !12)
!6472 = !DILocalVariable(name: "__x2", scope: !6470, file: !3, line: 954, type: !12)
!6473 = !DILocalVariable(name: "__x3", scope: !6470, file: !3, line: 954, type: !12)
!6474 = !DILocalVariable(name: "__ul", scope: !6470, file: !3, line: 954, type: !6)
!6475 = !DILocalVariable(name: "__vl", scope: !6470, file: !3, line: 954, type: !6)
!6476 = !DILocalVariable(name: "__uh", scope: !6470, file: !3, line: 954, type: !6)
!6477 = !DILocalVariable(name: "__vh", scope: !6470, file: !3, line: 954, type: !6)
!6478 = !DILocalVariable(name: "__u", scope: !6470, file: !3, line: 954, type: !12)
!6479 = !DILocalVariable(name: "__v", scope: !6470, file: !3, line: 954, type: !12)
!6480 = !DILocalVariable(name: "__x", scope: !6481, file: !3, line: 954, type: !12)
!6481 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 954, column: 7)
!6482 = !DILocalVariable(name: "__x", scope: !6483, file: !3, line: 954, type: !12)
!6483 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 954, column: 7)
!6484 = !DILocalVariable(name: "__x0", scope: !6485, file: !3, line: 954, type: !12)
!6485 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 954, column: 7)
!6486 = !DILocalVariable(name: "__x1", scope: !6485, file: !3, line: 954, type: !12)
!6487 = !DILocalVariable(name: "__x2", scope: !6485, file: !3, line: 954, type: !12)
!6488 = !DILocalVariable(name: "__x3", scope: !6485, file: !3, line: 954, type: !12)
!6489 = !DILocalVariable(name: "__ul", scope: !6485, file: !3, line: 954, type: !6)
!6490 = !DILocalVariable(name: "__vl", scope: !6485, file: !3, line: 954, type: !6)
!6491 = !DILocalVariable(name: "__uh", scope: !6485, file: !3, line: 954, type: !6)
!6492 = !DILocalVariable(name: "__vh", scope: !6485, file: !3, line: 954, type: !6)
!6493 = !DILocalVariable(name: "__u", scope: !6485, file: !3, line: 954, type: !12)
!6494 = !DILocalVariable(name: "__v", scope: !6485, file: !3, line: 954, type: !12)
!6495 = !DILocalVariable(name: "__x", scope: !6496, file: !3, line: 954, type: !12)
!6496 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 954, column: 7)
!6497 = !DILocalVariable(name: "__x", scope: !6498, file: !3, line: 954, type: !12)
!6498 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 954, column: 7)
!6499 = !DILocalVariable(name: "__x", scope: !6500, file: !3, line: 954, type: !12)
!6500 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 954, column: 7)
!6501 = distinct !DILexicalBlock(scope: !6502, file: !3, line: 954, column: 7)
!6502 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 954, column: 7)
!6503 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 954, column: 7)
!6504 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 954, column: 7)
!6505 = !DILocation(line: 0, scope: !6444)
!6506 = !DILocation(line: 932, column: 3, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 932, column: 3)
!6508 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 932, column: 3)
!6509 = !DILocation(line: 932, column: 3, scope: !6508)
!6510 = !DILocation(line: 933, column: 16, scope: !6444)
!6511 = !DILocation(line: 934, column: 13, scope: !6444)
!6512 = !DILocation(line: 935, column: 13, scope: !6444)
!6513 = !DILocation(line: 936, column: 13, scope: !6444)
!6514 = !DILocation(line: 938, column: 13, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 938, column: 7)
!6516 = !DILocation(line: 938, column: 7, scope: !6444)
!6517 = !DILocation(line: 940, column: 12, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 939, column: 5)
!6519 = !DILocation(line: 941, column: 12, scope: !6518)
!6520 = !DILocation(line: 943, column: 5, scope: !6518)
!6521 = !DILocation(line: 0, scope: !6515)
!6522 = !DILocation(line: 947, column: 14, scope: !6444)
!6523 = !DILocation(line: 947, column: 8, scope: !6444)
!6524 = !DILocation(line: 949, column: 10, scope: !6444)
!6525 = !DILocation(line: 0, scope: !6470)
!6526 = !DILocation(line: 0, scope: !6485)
!6527 = !DILocation(line: 0, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 956, column: 11)
!6529 = !DILocation(line: 950, column: 3, scope: !6444)
!6530 = !DILocation(line: 953, column: 12, scope: !6462)
!6531 = !DILocation(line: 0, scope: !6462)
!6532 = !DILocation(line: 954, column: 7, scope: !6470)
!6533 = !DILocation(line: 954, column: 7, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 954, column: 7)
!6535 = !DILocation(line: 0, scope: !6465)
!6536 = !DILocation(line: 954, column: 7, scope: !6481)
!6537 = !DILocation(line: 0, scope: !6481)
!6538 = !DILocation(line: 954, column: 7, scope: !6465)
!6539 = !DILocation(line: 954, column: 7, scope: !6483)
!6540 = !DILocation(line: 0, scope: !6483)
!6541 = !DILocation(line: 954, column: 7, scope: !6485)
!6542 = !DILocation(line: 954, column: 7, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 954, column: 7)
!6544 = !DILocation(line: 954, column: 7, scope: !6496)
!6545 = !DILocation(line: 0, scope: !6496)
!6546 = !DILocation(line: 954, column: 7, scope: !6498)
!6547 = !DILocation(line: 0, scope: !6498)
!6548 = !DILocation(line: 954, column: 7, scope: !6504)
!6549 = !DILocation(line: 954, column: 7, scope: !6502)
!6550 = !DILocation(line: 954, column: 7, scope: !6500)
!6551 = !DILocation(line: 0, scope: !6500)
!6552 = !DILocation(line: 954, column: 7, scope: !6501)
!6553 = !DILocation(line: 959, column: 10, scope: !6444)
!6554 = !DILocation(line: 959, column: 14, scope: !6444)
!6555 = !DILocation(line: 958, column: 5, scope: !6462)
!6556 = distinct !{!6556, !6529, !6557}
!6557 = !DILocation(line: 959, column: 18, scope: !6444)
!6558 = !DILocation(line: 961, column: 13, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 961, column: 7)
!6560 = !DILocation(line: 957, column: 2, scope: !6528)
!6561 = !DILocation(line: 957, column: 8, scope: !6528)
!6562 = !DILocation(line: 961, column: 7, scope: !6444)
!6563 = !DILocation(line: 963, column: 7, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 963, column: 7)
!6565 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 963, column: 7)
!6566 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 962, column: 5)
!6567 = !DILocation(line: 963, column: 7, scope: !6565)
!6568 = !DILocation(line: 964, column: 16, scope: !6566)
!6569 = !DILocation(line: 964, column: 32, scope: !6566)
!6570 = !DILocation(line: 964, column: 26, scope: !6566)
!6571 = !DILocation(line: 965, column: 10, scope: !6566)
!6572 = !DILocation(line: 967, column: 7, scope: !6566)
!6573 = !DILocation(line: 968, column: 5, scope: !6566)
!6574 = !DILocation(line: 970, column: 3, scope: !6444)
!6575 = !DILocation(line: 970, column: 9, scope: !6444)
!6576 = !DILocation(line: 971, column: 9, scope: !6444)
!6577 = !DILocation(line: 972, column: 1, scope: !6444)
!6578 = distinct !DISubprogram(name: "mpn_div_qr_pi1", scope: !3, file: !3, line: 988, type: !6579, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6581)
!6579 = !DISubroutineType(types: !6580)
!6580 = !{null, !16, !16, !154, !12, !151, !154, !12}
!6581 = !{!6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595, !6597, !6601, !6602, !6603, !6604, !6606, !6607, !6608, !6609, !6610, !6611, !6612, !6613, !6614, !6615, !6617, !6619, !6621, !6622, !6623, !6624, !6625, !6626, !6627, !6628, !6629, !6630, !6632, !6634}
!6582 = !DILocalVariable(name: "qp", arg: 1, scope: !6578, file: !3, line: 988, type: !16)
!6583 = !DILocalVariable(name: "np", arg: 2, scope: !6578, file: !3, line: 989, type: !16)
!6584 = !DILocalVariable(name: "nn", arg: 3, scope: !6578, file: !3, line: 989, type: !154)
!6585 = !DILocalVariable(name: "n1", arg: 4, scope: !6578, file: !3, line: 989, type: !12)
!6586 = !DILocalVariable(name: "dp", arg: 5, scope: !6578, file: !3, line: 990, type: !151)
!6587 = !DILocalVariable(name: "dn", arg: 6, scope: !6578, file: !3, line: 990, type: !154)
!6588 = !DILocalVariable(name: "dinv", arg: 7, scope: !6578, file: !3, line: 991, type: !12)
!6589 = !DILocalVariable(name: "i", scope: !6578, file: !3, line: 993, type: !154)
!6590 = !DILocalVariable(name: "d1", scope: !6578, file: !3, line: 995, type: !12)
!6591 = !DILocalVariable(name: "d0", scope: !6578, file: !3, line: 995, type: !12)
!6592 = !DILocalVariable(name: "cy", scope: !6578, file: !3, line: 996, type: !12)
!6593 = !DILocalVariable(name: "cy1", scope: !6578, file: !3, line: 996, type: !12)
!6594 = !DILocalVariable(name: "q", scope: !6578, file: !3, line: 997, type: !12)
!6595 = !DILocalVariable(name: "n0", scope: !6596, file: !3, line: 1015, type: !12)
!6596 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 1014, column: 5)
!6597 = !DILocalVariable(name: "_q0", scope: !6598, file: !3, line: 1025, type: !12)
!6598 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1025, column: 4)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 1024, column: 2)
!6600 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 1017, column: 11)
!6601 = !DILocalVariable(name: "_t1", scope: !6598, file: !3, line: 1025, type: !12)
!6602 = !DILocalVariable(name: "_t0", scope: !6598, file: !3, line: 1025, type: !12)
!6603 = !DILocalVariable(name: "_mask", scope: !6598, file: !3, line: 1025, type: !12)
!6604 = !DILocalVariable(name: "__x0", scope: !6605, file: !3, line: 1025, type: !12)
!6605 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1025, column: 4)
!6606 = !DILocalVariable(name: "__x1", scope: !6605, file: !3, line: 1025, type: !12)
!6607 = !DILocalVariable(name: "__x2", scope: !6605, file: !3, line: 1025, type: !12)
!6608 = !DILocalVariable(name: "__x3", scope: !6605, file: !3, line: 1025, type: !12)
!6609 = !DILocalVariable(name: "__ul", scope: !6605, file: !3, line: 1025, type: !6)
!6610 = !DILocalVariable(name: "__vl", scope: !6605, file: !3, line: 1025, type: !6)
!6611 = !DILocalVariable(name: "__uh", scope: !6605, file: !3, line: 1025, type: !6)
!6612 = !DILocalVariable(name: "__vh", scope: !6605, file: !3, line: 1025, type: !6)
!6613 = !DILocalVariable(name: "__u", scope: !6605, file: !3, line: 1025, type: !12)
!6614 = !DILocalVariable(name: "__v", scope: !6605, file: !3, line: 1025, type: !12)
!6615 = !DILocalVariable(name: "__x", scope: !6616, file: !3, line: 1025, type: !12)
!6616 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1025, column: 4)
!6617 = !DILocalVariable(name: "__x", scope: !6618, file: !3, line: 1025, type: !12)
!6618 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1025, column: 4)
!6619 = !DILocalVariable(name: "__x0", scope: !6620, file: !3, line: 1025, type: !12)
!6620 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1025, column: 4)
!6621 = !DILocalVariable(name: "__x1", scope: !6620, file: !3, line: 1025, type: !12)
!6622 = !DILocalVariable(name: "__x2", scope: !6620, file: !3, line: 1025, type: !12)
!6623 = !DILocalVariable(name: "__x3", scope: !6620, file: !3, line: 1025, type: !12)
!6624 = !DILocalVariable(name: "__ul", scope: !6620, file: !3, line: 1025, type: !6)
!6625 = !DILocalVariable(name: "__vl", scope: !6620, file: !3, line: 1025, type: !6)
!6626 = !DILocalVariable(name: "__uh", scope: !6620, file: !3, line: 1025, type: !6)
!6627 = !DILocalVariable(name: "__vh", scope: !6620, file: !3, line: 1025, type: !6)
!6628 = !DILocalVariable(name: "__u", scope: !6620, file: !3, line: 1025, type: !12)
!6629 = !DILocalVariable(name: "__v", scope: !6620, file: !3, line: 1025, type: !12)
!6630 = !DILocalVariable(name: "__x", scope: !6631, file: !3, line: 1025, type: !12)
!6631 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1025, column: 4)
!6632 = !DILocalVariable(name: "__x", scope: !6633, file: !3, line: 1025, type: !12)
!6633 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1025, column: 4)
!6634 = !DILocalVariable(name: "__x", scope: !6635, file: !3, line: 1025, type: !12)
!6635 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 1025, column: 4)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1025, column: 4)
!6637 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1025, column: 4)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 1025, column: 4)
!6639 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1025, column: 4)
!6640 = !DILocation(line: 0, scope: !6578)
!6641 = !DILocation(line: 999, column: 3, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 999, column: 3)
!6643 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 999, column: 3)
!6644 = !DILocation(line: 999, column: 3, scope: !6643)
!6645 = !DILocation(line: 1000, column: 3, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 1000, column: 3)
!6647 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 1000, column: 3)
!6648 = !DILocation(line: 1000, column: 3, scope: !6647)
!6649 = !DILocation(line: 1002, column: 14, scope: !6578)
!6650 = !DILocation(line: 1002, column: 8, scope: !6578)
!6651 = !DILocation(line: 1003, column: 14, scope: !6578)
!6652 = !DILocation(line: 1003, column: 8, scope: !6578)
!6653 = !DILocation(line: 1005, column: 3, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 1005, column: 3)
!6655 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 1005, column: 3)
!6656 = !DILocation(line: 1005, column: 3, scope: !6655)
!6657 = !DILocation(line: 1012, column: 10, scope: !6578)
!6658 = !DILocation(line: 0, scope: !6605)
!6659 = !DILocation(line: 0, scope: !6620)
!6660 = !DILocation(line: 0, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 1042, column: 11)
!6662 = !DILocation(line: 1013, column: 3, scope: !6578)
!6663 = !DILocation(line: 1015, column: 29, scope: !6596)
!6664 = !DILocation(line: 1015, column: 22, scope: !6596)
!6665 = !DILocation(line: 0, scope: !6596)
!6666 = !DILocation(line: 1017, column: 14, scope: !6600)
!6667 = !DILocation(line: 1017, column: 26, scope: !6600)
!6668 = !DILocation(line: 1017, column: 20, scope: !6600)
!6669 = !DILocation(line: 1020, column: 20, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 1018, column: 2)
!6671 = !DILocation(line: 1020, column: 4, scope: !6670)
!6672 = !DILocation(line: 1021, column: 9, scope: !6670)
!6673 = !DILocation(line: 1022, column: 2, scope: !6670)
!6674 = !DILocation(line: 1025, column: 4, scope: !6605)
!6675 = !DILocation(line: 1025, column: 4, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 1025, column: 4)
!6677 = !DILocation(line: 0, scope: !6598)
!6678 = !DILocation(line: 1025, column: 4, scope: !6616)
!6679 = !DILocation(line: 0, scope: !6616)
!6680 = !DILocation(line: 1025, column: 4, scope: !6598)
!6681 = !DILocation(line: 1025, column: 4, scope: !6618)
!6682 = !DILocation(line: 0, scope: !6618)
!6683 = !DILocation(line: 1025, column: 4, scope: !6620)
!6684 = !DILocation(line: 1025, column: 4, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 1025, column: 4)
!6686 = !DILocation(line: 1025, column: 4, scope: !6631)
!6687 = !DILocation(line: 0, scope: !6631)
!6688 = !DILocation(line: 1025, column: 4, scope: !6633)
!6689 = !DILocation(line: 0, scope: !6633)
!6690 = !DILocation(line: 1025, column: 4, scope: !6639)
!6691 = !DILocation(line: 1025, column: 4, scope: !6637)
!6692 = !DILocation(line: 1025, column: 4, scope: !6636)
!6693 = !DILocation(line: 1025, column: 4, scope: !6635)
!6694 = !DILocation(line: 0, scope: !6635)
!6695 = !DILocation(line: 1027, column: 26, scope: !6599)
!6696 = !DILocation(line: 1027, column: 9, scope: !6599)
!6697 = !DILocation(line: 1029, column: 13, scope: !6599)
!6698 = !DILocation(line: 1029, column: 10, scope: !6599)
!6699 = !DILocation(line: 1030, column: 12, scope: !6599)
!6700 = !DILocation(line: 1031, column: 12, scope: !6599)
!6701 = !DILocation(line: 1032, column: 12, scope: !6599)
!6702 = !DILocation(line: 1033, column: 15, scope: !6599)
!6703 = !DILocation(line: 1035, column: 8, scope: !6599)
!6704 = !DILocation(line: 1037, column: 19, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 1036, column: 6)
!6706 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1035, column: 8)
!6707 = !DILocation(line: 1037, column: 17, scope: !6705)
!6708 = !DILocation(line: 1037, column: 11, scope: !6705)
!6709 = !DILocation(line: 1038, column: 9, scope: !6705)
!6710 = !DILocation(line: 1039, column: 6, scope: !6705)
!6711 = !DILocation(line: 0, scope: !6600)
!6712 = !DILocation(line: 1042, column: 11, scope: !6596)
!6713 = !DILocation(line: 1043, column: 2, scope: !6661)
!6714 = !DILocation(line: 1043, column: 8, scope: !6661)
!6715 = !DILocation(line: 1045, column: 10, scope: !6578)
!6716 = !DILocation(line: 1045, column: 14, scope: !6578)
!6717 = !DILocation(line: 1044, column: 5, scope: !6596)
!6718 = distinct !{!6718, !6662, !6719}
!6719 = !DILocation(line: 1045, column: 18, scope: !6578)
!6720 = !DILocation(line: 1047, column: 3, scope: !6578)
!6721 = !DILocation(line: 1047, column: 14, scope: !6578)
!6722 = !DILocation(line: 1048, column: 1, scope: !6578)
