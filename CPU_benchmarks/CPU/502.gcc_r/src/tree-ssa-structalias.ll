; ModuleID = 'tree-ssa-structalias.bc'
source_filename = "tree-ssa-structalias.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.gimple_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.simple_ipa_opt_pass = type { %struct.opt_pass }
%struct.ggc_cache_tab = type { %struct.htab**, i64, i64, void (i8*)*, void (i8*)*, i32 (i8*)* }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.VEC_varinfo_t_heap = type { %struct.VEC_varinfo_t_base }
%struct.VEC_varinfo_t_base = type { i32, i32, [1 x %struct.variable_info*] }
%struct.variable_info = type { i32, i8, %struct.variable_info*, i64, i64, i64, i8*, %union.tree_node*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_constraint_t_heap = type { %struct.VEC_constraint_t_base }
%struct.VEC_constraint_t_base = type { i32, i32, [1 x %struct.constraint*] }
%struct.constraint = type { %struct.constraint_expr, %struct.constraint_expr }
%struct.constraint_expr = type { i32, i32, i64 }
%struct.constraint_graph = type { i32, %struct.bitmap_head_def**, %struct.bitmap_head_def**, %struct.bitmap_head_def**, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.bitmap_head_def**, %struct.bitmap_head_def**, %struct.simple_bitmap_def*, %struct.bitmap_head_def*, %struct.VEC_constraint_t_heap** }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.constraint_stats = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.var_ann_d = type { i8, i32, %union.tree_node* }
%struct.VEC_ce_s_heap = type { %struct.VEC_ce_s_base }
%struct.VEC_ce_s_base = type { i32, i32, [1 x %struct.constraint_expr] }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.scc_info = type { %struct.simple_bitmap_def*, %struct.simple_bitmap_def*, i32*, i32*, i32, %struct.VEC_unsigned_heap* }
%struct.VEC_unsigned_heap = type { %struct.VEC_unsigned_base }
%struct.VEC_unsigned_base = type { i32, i32, [1 x i32] }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.heapvar_map = type { %struct.tree_map, i64 }
%struct.tree_map = type { %struct.tree_map_base, i32, %union.tree_node* }
%struct.tree_map_base = type { %union.tree_node* }
%struct.VEC_fieldoff_s_heap = type { %struct.VEC_fieldoff_s_base }
%struct.VEC_fieldoff_s_base = type { i32, i32, [1 x %struct.fieldoff] }
%struct.fieldoff = type { i64, i64, i8 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.gimple_statement_asm = type { %struct.gimple_statement_with_memory_ops_base, i8*, i8, i8, i8, i8, [1 x %union.tree_node*] }
%struct.gimple_statement_with_memory_ops_base = type { %struct.gimple_statement_with_ops_base, %union.tree_node*, %union.tree_node* }
%struct.gimple_statement_with_ops_base = type { %struct.gimple_statement_base, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.topo_info = type { %struct.simple_bitmap_def*, %struct.VEC_unsigned_heap* }
%struct.equiv_class_label = type { i32, i32, %struct.bitmap_head_def* }
%struct.shared_bitmap_info = type { %struct.bitmap_head_def*, i32 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [19 x i8] c"\0APTA query stats:\0A\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"  pt_solution_includes: %ld disambiguations, %ld queries\0A\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"  pt_solutions_intersect: %ld disambiguations, %ld queries\0A\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.3 = private unnamed_addr constant [23 x i8] c"tree-ssa-structalias.c\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@heapvar_for_stmt = internal global %struct.htab* null, align 8, !dbg !0
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.5 = private unnamed_addr constant [6 x i8] c"alias\00", align 1
@pass_build_alias = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8 ()* @gate_tree_pta, i32 ()* null, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 40, i32 0, i32 0, i32 0, i32 1048577 } }, align 8, !dbg !2189
@.str.6 = private unnamed_addr constant [7 x i8] c"ealias\00", align 1
@pass_build_ealias = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i8 ()* @gate_tree_pta, i32 ()* null, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 40, i32 0, i32 0, i32 0, i32 1048577 } }, align 8, !dbg !2217
@.str.7 = private unnamed_addr constant [4 x i8] c"pta\00", align 1
@pass_ipa_pta = dso_local local_unnamed_addr global %struct.simple_ipa_opt_pass { %struct.opt_pass { i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8 ()* @gate_ipa_pta, i32 ()* @ipa_pta_execute, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 2048 } }, align 8, !dbg !2219
@gt_ggc_rc_gt_tree_ssa_structalias_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_cache_tab] [%struct.ggc_cache_tab { %struct.htab** @heapvar_for_stmt, i64 1, i64 8, void (i8*)* @gt_ggc_mx_tree_map, void (i8*)* @gt_pch_nx_tree_map, i32 (i8*)* @tree_map_base_marked_p }, %struct.ggc_cache_tab zeroinitializer], align 16, !dbg !2224
@gt_pch_rc_gt_tree_ssa_structalias_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.htab** @heapvar_for_stmt to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P8tree_map4htab, void (i8*)* @gt_pch_n_P8tree_map4htab }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2243
@.str.8 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c" + UNKNOWN\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c" + %ld\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@varmap = internal global %struct.VEC_varinfo_t_heap* null, align 8, !dbg !2262
@constraints = internal global %struct.VEC_constraint_t_heap* null, align 8, !dbg !2264
@graph = internal unnamed_addr global %struct.constraint_graph* null, align 8, !dbg !2266
@.str.15 = private unnamed_addr constant [48 x i8] c"\0A\0A/* Constraints used in the constraint graph:\0A\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"*/\0A\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"\0A\0A// The constraint graph in dot format:\0A\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"strict digraph {\0A\00", align 1
@.str.19 = private unnamed_addr constant [30 x i8] c"  node [\0A    shape = box\0A  ]\0A\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"  edge [\0A    fontsize = \2212\22\0A  ]\0A\00", align 1
@.str.21 = private unnamed_addr constant [46 x i8] c"\0A  // List of nodes in the constraint graph:\0A\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"  \22%s\22 ;\0A\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"\0A  // The constraint edges:\0A\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"}\0A\0A\0A\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"  \22%s\22 -> \22%s\22 \00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c" [ label=\22*=\22 ] ;\0A\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c" [ label=\22=*\22 ] ;\0A\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c" [ label=\22+\22 ] ;\0A\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c" ;\0A\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"%s = same as %s\0A\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"%s = { \00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.34 = private unnamed_addr constant [18 x i8] c"\0APoints-to sets\0A\0A\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"Stats:\0A\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"Total vars:               %d\0A\00", align 1
@stats = internal global %struct.constraint_stats zeroinitializer, align 4, !dbg !2269
@.str.37 = private unnamed_addr constant [31 x i8] c"Non-pointer vars:          %d\0A\00", align 1
@.str.38 = private unnamed_addr constant [30 x i8] c"Statically unified vars:  %d\0A\00", align 1
@.str.39 = private unnamed_addr constant [30 x i8] c"Dynamically unified vars: %d\0A\00", align 1
@.str.40 = private unnamed_addr constant [30 x i8] c"Iterations:               %d\0A\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"Number of edges:          %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [30 x i8] c"Number of implicit edges: %d\0A\00", align 1
@timevar_enable = external dso_local local_unnamed_addr global i8, align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@use_field_sensitive = internal unnamed_addr global i8 1, align 1, !dbg !2281
@pta_obstack = internal global %struct.bitmap_obstack zeroinitializer, align 8, !dbg !2283
@oldpta_obstack = internal global %struct.bitmap_obstack zeroinitializer, align 8, !dbg !2285
@predbitmap_obstack = internal global %struct.bitmap_obstack zeroinitializer, align 8, !dbg !2287
@.str.43 = private unnamed_addr constant [16 x i8] c"Constraint pool\00", align 1
@constraint_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !2289
@.str.44 = private unnamed_addr constant [19 x i8] c"Variable info pool\00", align 1
@variable_info_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !2312
@vi_for_tree = internal unnamed_addr global %struct.pointer_map_t* null, align 8, !dbg !2314
@shared_bitmap_table = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2316
@.str.45 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.46 = private unnamed_addr constant [9 x i8] c"ANYTHING\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"READONLY\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"ESCAPED\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"NONLOCAL\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"CALLUSED\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"STOREDANYTHING\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"INTEGER\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.53 = private unnamed_addr constant [15 x i8] c"doubledereftmp\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"derefaddrtmp\00", align 1
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.55 = private unnamed_addr constant [13 x i8] c"PARM_NOALIAS\00", align 1
@.str.56 = private unnamed_addr constant [14 x i8] c"PARM_RESTRICT\00", align 1
@htab_hash_pointer = external dso_local local_unnamed_addr global i32 (i8*)*, align 8
@.str.57 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@flag_whole_program = external dso_local local_unnamed_addr global i32, align 4
@in_ipa_mode = internal unnamed_addr global i1 false, align 4, !dbg !2334
@.str.58 = private unnamed_addr constant [16 x i8] c"GLOBAL_RESTRICT\00", align 1
@.str.59 = private unnamed_addr constant [11 x i8] c"%s.%ld+%ld\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"%s_%u\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"D.%u\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@flag_delete_null_pointer_checks = external dso_local local_unnamed_addr global i32, align 4
@.str.62 = private unnamed_addr constant [14 x i8] c"CAST_RESTRICT\00", align 1
@.str.63 = private unnamed_addr constant [48 x i8] c"Access to zero-sized part of variable,ignoring\0A\00", align 1
@.str.64 = private unnamed_addr constant [46 x i8] c"Access to past the end of variable, ignoring\0A\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.66 = private unnamed_addr constant [10 x i8] c"allalltmp\00", align 1
@.str.67 = private unnamed_addr constant [9 x i8] c"dereftmp\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"HEAP\00", align 1
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.69 = private unnamed_addr constant [35 x i8] c"Points-to analysis\0A\0AConstraints:\0A\0A\00", align 1
@.str.70 = private unnamed_addr constant [59 x i8] c"\0ACollapsing static cycles and doing variable substitution\0A\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"Building predecessor graph\0A\00", align 1
@.str.72 = private unnamed_addr constant [45 x i8] c"Detecting pointer and location equivalences\0A\00", align 1
@.str.73 = private unnamed_addr constant [46 x i8] c"Rewriting constraints and unifying variables\0A\00", align 1
@.str.74 = private unnamed_addr constant [55 x i8] c"Uniting pointer but not location equivalent variables\0A\00", align 1
@.str.75 = private unnamed_addr constant [25 x i8] c"Finding indirect cycles\0A\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"Solving graph\0A\00", align 1
@iteration_obstack = internal global %struct.bitmap_obstack zeroinitializer, align 8, !dbg !2320
@pointer_equiv_class_table = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2322
@location_equiv_class_table = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2324
@pointer_equiv_class = internal unnamed_addr global i32 0, align 4, !dbg !2326
@location_equiv_class = internal unnamed_addr global i32 0, align 4, !dbg !2328
@.str.77 = private unnamed_addr constant [40 x i8] c"Found location equivalence for node %s\0A\00", align 1
@.str.78 = private unnamed_addr constant [71 x i8] c"Equivalence classes for %s node id %d:%s are pointer: %d, location:%d\0A\00", align 1
@.str.79 = private unnamed_addr constant [12 x i8] c"Direct node\00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c"Indirect node\00", align 1
@.str.81 = private unnamed_addr constant [50 x i8] c"%s is a non-pointer variable, eliminating edges.\0A\00", align 1
@.str.82 = private unnamed_addr constant [50 x i8] c"%s is a non-pointer variable,ignoring constraint:\00", align 1
@.str.83 = private unnamed_addr constant [19 x i8] c"Unifying %s to %s\0A\00", align 1
@changed = internal unnamed_addr global %struct.simple_bitmap_def* null, align 8, !dbg !2330
@changed_count = internal unnamed_addr global i32 0, align 4, !dbg !2332
@.str.84 = private unnamed_addr constant [27 x i8] c"Points to sets created:%d\0A\00", align 1
@flag_tree_pta = external dso_local local_unnamed_addr global i32, align 4
@optimize = external dso_local local_unnamed_addr global i32, align 4
@flag_ipa_pta = external dso_local local_unnamed_addr global i32, align 4
@global_dc = external dso_local local_unnamed_addr global %struct.diagnostic_context*, align 8
@cgraph_nodes = external dso_local local_unnamed_addr global %struct.cgraph_node*, align 8
@.str.85 = private unnamed_addr constant [31 x i8] c"Generating constraints for %s\0A\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"%s.arg%d\00", align 1
@.str.87 = private unnamed_addr constant [10 x i8] c"%s.result\00", align 1
@pta_stats.0 = internal unnamed_addr global i64 0, align 8, !dbg !2335
@pta_stats.1 = internal unnamed_addr global i64 0, align 8, !dbg !2336
@pta_stats.2 = internal unnamed_addr global i64 0, align 8, !dbg !2337
@pta_stats.3 = internal unnamed_addr global i64 0, align 8, !dbg !2338

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2343 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2356, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2357, metadata !DIExpression()), !dbg !2358
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2359
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2360
  ret i32 %call, !dbg !2361
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2362 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2366
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2367
  ret i32 %call, !dbg !2368
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2369 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2424, metadata !DIExpression()), !dbg !2425
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2426
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2426
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2426
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2426
  %cmp = icmp uge i8* %0, %1, !dbg !2426
  %conv1 = zext i1 %cmp to i64, !dbg !2426
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2426
  %tobool = icmp eq i64 %expval, 0, !dbg !2426
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2426

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2426
  br label %cond.end, !dbg !2426

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2426
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2426
  %2 = load i8, i8* %0, align 1, !dbg !2426
  %conv3 = zext i8 %2 to i32, !dbg !2426
  br label %cond.end, !dbg !2426

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2426
  ret i32 %cond, !dbg !2427
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2428 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2430, metadata !DIExpression()), !dbg !2431
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2432
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2432
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2432
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2432
  %cmp = icmp uge i8* %0, %1, !dbg !2432
  %conv1 = zext i1 %cmp to i64, !dbg !2432
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2432
  %tobool = icmp eq i64 %expval, 0, !dbg !2432
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2432

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2432
  br label %cond.end, !dbg !2432

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2432
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2432
  %2 = load i8, i8* %0, align 1, !dbg !2432
  %conv3 = zext i8 %2 to i32, !dbg !2432
  br label %cond.end, !dbg !2432

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2432
  ret i32 %cond, !dbg !2433
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2434 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2435
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2435
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2435
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2435
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2435
  %cmp = icmp uge i8* %1, %2, !dbg !2435
  %conv1 = zext i1 %cmp to i64, !dbg !2435
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2435
  %tobool = icmp eq i64 %expval, 0, !dbg !2435
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2435

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2435
  br label %cond.end, !dbg !2435

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2435
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2435
  %3 = load i8, i8* %1, align 1, !dbg !2435
  %conv3 = zext i8 %3 to i32, !dbg !2435
  br label %cond.end, !dbg !2435

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2435
  ret i32 %cond, !dbg !2436
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2437 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2441, metadata !DIExpression()), !dbg !2442
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2443
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2444
  ret i32 %call, !dbg !2445
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2446 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2450, metadata !DIExpression()), !dbg !2452
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2451, metadata !DIExpression()), !dbg !2452
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2453
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2453
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2453
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2453
  %cmp = icmp uge i8* %0, %1, !dbg !2453
  %conv1 = zext i1 %cmp to i64, !dbg !2453
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2453
  %tobool = icmp eq i64 %expval, 0, !dbg !2453
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2453

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2453
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2453
  br label %cond.end, !dbg !2453

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2453
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2453
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2453
  store i8 %conv2, i8* %0, align 1, !dbg !2453
  %conv6 = and i32 %__c, 255, !dbg !2453
  br label %cond.end, !dbg !2453

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2453
  ret i32 %cond, !dbg !2454
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2455 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2457, metadata !DIExpression()), !dbg !2459
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2458, metadata !DIExpression()), !dbg !2459
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2460
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2460
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2460
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2460
  %cmp = icmp uge i8* %0, %1, !dbg !2460
  %conv1 = zext i1 %cmp to i64, !dbg !2460
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2460
  %tobool = icmp eq i64 %expval, 0, !dbg !2460
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2460

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2460
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2460
  br label %cond.end, !dbg !2460

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2460
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2460
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2460
  store i8 %conv2, i8* %0, align 1, !dbg !2460
  %conv6 = and i32 %__c, 255, !dbg !2460
  br label %cond.end, !dbg !2460

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2460
  ret i32 %cond, !dbg !2461
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2462 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2464, metadata !DIExpression()), !dbg !2465
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2466
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2466
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2466
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2466
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2466
  %cmp = icmp uge i8* %1, %2, !dbg !2466
  %conv1 = zext i1 %cmp to i64, !dbg !2466
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2466
  %tobool = icmp eq i64 %expval, 0, !dbg !2466
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2466

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2466
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2466
  br label %cond.end, !dbg !2466

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2466
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2466
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2466
  store i8 %conv4, i8* %1, align 1, !dbg !2466
  %conv6 = and i32 %__c, 255, !dbg !2466
  br label %cond.end, !dbg !2466

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2466
  ret i32 %cond, !dbg !2467
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2468 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2474, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2475, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2476, metadata !DIExpression()), !dbg !2477
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2478
  ret i64 %call, !dbg !2479
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2480 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2482, metadata !DIExpression()), !dbg !2483
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2484
  %0 = load i32, i32* %_flags, align 8, !dbg !2484
  %and = lshr i32 %0, 4, !dbg !2484
  %and.lobit = and i32 %and, 1, !dbg !2484
  ret i32 %and.lobit, !dbg !2485
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2486 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2488, metadata !DIExpression()), !dbg !2489
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2490
  %0 = load i32, i32* %_flags, align 8, !dbg !2490
  %and = lshr i32 %0, 5, !dbg !2490
  %and.lobit = and i32 %and, 1, !dbg !2490
  ret i32 %and.lobit, !dbg !2491
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2492 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2495, metadata !DIExpression()), !dbg !2496
  %__c.off = add i32 %__c, 128, !dbg !2497
  %0 = icmp ult i32 %__c.off, 384, !dbg !2497
  br i1 %0, label %cond.true, label %cond.end, !dbg !2497

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2498
  %1 = load i32*, i32** %call, align 8, !dbg !2499
  %idxprom = sext i32 %__c to i64, !dbg !2500
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2500
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2500
  br label %cond.end, !dbg !2501

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2501
  ret i32 %cond, !dbg !2502
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2503 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2505, metadata !DIExpression()), !dbg !2506
  %__c.off = add i32 %__c, 128, !dbg !2507
  %0 = icmp ult i32 %__c.off, 384, !dbg !2507
  br i1 %0, label %cond.true, label %cond.end, !dbg !2507

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2508
  %1 = load i32*, i32** %call, align 8, !dbg !2509
  %idxprom = sext i32 %__c to i64, !dbg !2510
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2510
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2510
  br label %cond.end, !dbg !2511

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2511
  ret i32 %cond, !dbg !2512
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2513 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2518, metadata !DIExpression()), !dbg !2519
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2520
  %conv = trunc i64 %call to i32, !dbg !2521
  ret i32 %conv, !dbg !2522
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2523 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2527, metadata !DIExpression()), !dbg !2528
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2529
  ret i64 %call, !dbg !2530
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2531 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2536, metadata !DIExpression()), !dbg !2537
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2538
  ret i64 %call, !dbg !2539
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2540 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2546, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2547, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2548, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2549, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2550, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata i64 0, metadata !2551, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2552, metadata !DIExpression()), !dbg !2556
  br label %while.cond, !dbg !2557

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2558
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2556
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2552, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2551, metadata !DIExpression()), !dbg !2556
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2559
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2557

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2560
  %div = lshr i64 %add, 1, !dbg !2562
  call void @llvm.dbg.value(metadata i64 %div, metadata !2553, metadata !DIExpression()), !dbg !2556
  %mul = mul i64 %div, %__size, !dbg !2563
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2564
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2554, metadata !DIExpression()), !dbg !2556
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2565
  call void @llvm.dbg.value(metadata i32 %call, metadata !2555, metadata !DIExpression()), !dbg !2556
  %cmp1 = icmp slt i32 %call, 0, !dbg !2566
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2568

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2569
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2571

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2572
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2551, metadata !DIExpression()), !dbg !2556
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2556
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2556
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2552, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2551, metadata !DIExpression()), !dbg !2556
  br label %while.cond, !dbg !2557, !llvm.loop !2573

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2556
  ret i8* %retval.0, !dbg !2575
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2576 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2582, metadata !DIExpression()), !dbg !2583
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2584
  ret double %call, !dbg !2585
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2586 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2595, metadata !DIExpression()), !dbg !2598
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2596, metadata !DIExpression()), !dbg !2598
  call void @llvm.dbg.value(metadata i32 %base, metadata !2597, metadata !DIExpression()), !dbg !2598
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2599
  ret i64 %call, !dbg !2600
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2601 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2607, metadata !DIExpression()), !dbg !2610
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2608, metadata !DIExpression()), !dbg !2610
  call void @llvm.dbg.value(metadata i32 %base, metadata !2609, metadata !DIExpression()), !dbg !2610
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2611
  ret i64 %call, !dbg !2612
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2613 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2624, metadata !DIExpression()), !dbg !2627
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2625, metadata !DIExpression()), !dbg !2627
  call void @llvm.dbg.value(metadata i32 %base, metadata !2626, metadata !DIExpression()), !dbg !2627
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2628
  ret i64 %call, !dbg !2629
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2630 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2634, metadata !DIExpression()), !dbg !2637
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2635, metadata !DIExpression()), !dbg !2637
  call void @llvm.dbg.value(metadata i32 %base, metadata !2636, metadata !DIExpression()), !dbg !2637
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2638
  ret i64 %call, !dbg !2639
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2640 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2680, metadata !DIExpression()), !dbg !2682
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2681, metadata !DIExpression()), !dbg !2682
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2683
  ret i32 %call, !dbg !2684
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2685 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2687, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2688, metadata !DIExpression()), !dbg !2689
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2690
  ret i32 %call, !dbg !2691
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2692 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2696, metadata !DIExpression()), !dbg !2698
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2697, metadata !DIExpression()), !dbg !2698
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2699
  ret i32 %call, !dbg !2700
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2701 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2705, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2706, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2707, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2708, metadata !DIExpression()), !dbg !2709
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2710
  ret i32 %call, !dbg !2711
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2712 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2716, metadata !DIExpression()), !dbg !2719
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2717, metadata !DIExpression()), !dbg !2719
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2718, metadata !DIExpression()), !dbg !2719
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2718, metadata !DIExpression(DW_OP_deref)), !dbg !2719
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2720
  ret i32 %call, !dbg !2721
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2722 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2726, metadata !DIExpression()), !dbg !2730
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2727, metadata !DIExpression()), !dbg !2730
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2728, metadata !DIExpression()), !dbg !2730
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2729, metadata !DIExpression()), !dbg !2730
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2729, metadata !DIExpression(DW_OP_deref)), !dbg !2730
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2731
  ret i32 %call, !dbg !2732
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2733 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2757, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2758, metadata !DIExpression()), !dbg !2759
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2760
  ret i32 %call, !dbg !2761
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2762 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2764, metadata !DIExpression()), !dbg !2766
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2765, metadata !DIExpression()), !dbg !2766
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2767
  ret i32 %call, !dbg !2768
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2769 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2773, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2774, metadata !DIExpression()), !dbg !2775
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2776
  ret i32 %call, !dbg !2777
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2778 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2782, metadata !DIExpression()), !dbg !2786
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2783, metadata !DIExpression()), !dbg !2786
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2784, metadata !DIExpression()), !dbg !2786
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2785, metadata !DIExpression()), !dbg !2786
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2787
  ret i32 %call, !dbg !2788
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_constraint(%struct.constraint* %c) local_unnamed_addr #5 !dbg !2789 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint* %c, metadata !2793, metadata !DIExpression()), !dbg !2794
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2795
  tail call fastcc void @dump_constraint(%struct._IO_FILE* %0, %struct.constraint* %c) #7, !dbg !2796
  ret void, !dbg !2797
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_constraint(%struct._IO_FILE* %file, %struct.constraint* %c) unnamed_addr #5 !dbg !2798 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2802, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.value(metadata %struct.constraint* %c, metadata !2803, metadata !DIExpression()), !dbg !2804
  %type = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 0, !dbg !2805
  %0 = load i32, i32* %type, align 8, !dbg !2805
  %cmp = icmp eq i32 %0, 2, !dbg !2807
  br i1 %cmp, label %if.then, label %if.else, !dbg !2808

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2809
  br label %if.end6, !dbg !2809

if.else:                                          ; preds = %entry
  %cmp3 = icmp eq i32 %0, 1, !dbg !2810
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !2812

if.then4:                                         ; preds = %if.else
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2813
  br label %if.end6, !dbg !2813

if.end6:                                          ; preds = %if.else, %if.then4, %if.then
  %var = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 1, !dbg !2814
  %1 = load i32, i32* %var, align 4, !dbg !2814
  %call8 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %1) #7, !dbg !2815
  %name = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call8, i64 0, i32 6, !dbg !2816
  %2 = load i8*, i8** %name, align 8, !dbg !2816
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* %2) #6, !dbg !2817
  %offset = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 2, !dbg !2818
  %3 = load i64, i64* %offset, align 8, !dbg !2818
  %cmp11 = icmp eq i64 %3, -9223372036854775808, !dbg !2820
  br i1 %cmp11, label %if.then12, label %if.else14, !dbg !2821

if.then12:                                        ; preds = %if.end6
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2822
  br label %if.end23, !dbg !2822

if.else14:                                        ; preds = %if.end6
  %cmp17 = icmp eq i64 %3, 0, !dbg !2823
  br i1 %cmp17, label %if.end23, label %if.then18, !dbg !2825

if.then18:                                        ; preds = %if.else14
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i64 %3) #6, !dbg !2826
  br label %if.end23, !dbg !2826

if.end23:                                         ; preds = %if.else14, %if.then18, %if.then12
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !2827
  %type25 = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 0, !dbg !2828
  %4 = load i32, i32* %type25, align 8, !dbg !2828
  %cmp26 = icmp eq i32 %4, 2, !dbg !2830
  br i1 %cmp26, label %if.then27, label %if.else29, !dbg !2831

if.then27:                                        ; preds = %if.end23
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2832
  br label %if.end36, !dbg !2832

if.else29:                                        ; preds = %if.end23
  %cmp32 = icmp eq i32 %4, 1, !dbg !2833
  br i1 %cmp32, label %if.then33, label %if.end36, !dbg !2835

if.then33:                                        ; preds = %if.else29
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2836
  br label %if.end36, !dbg !2836

if.end36:                                         ; preds = %if.else29, %if.then33, %if.then27
  %var38 = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 1, !dbg !2837
  %5 = load i32, i32* %var38, align 4, !dbg !2837
  %call39 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %5) #7, !dbg !2838
  %name40 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call39, i64 0, i32 6, !dbg !2839
  %6 = load i8*, i8** %name40, align 8, !dbg !2839
  %call41 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* %6) #6, !dbg !2840
  %offset43 = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 2, !dbg !2841
  %7 = load i64, i64* %offset43, align 8, !dbg !2841
  %cmp44 = icmp eq i64 %7, -9223372036854775808, !dbg !2843
  br i1 %cmp44, label %if.then45, label %if.else47, !dbg !2844

if.then45:                                        ; preds = %if.end36
  %call46 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2845
  br label %if.end56, !dbg !2845

if.else47:                                        ; preds = %if.end36
  %cmp50 = icmp eq i64 %7, 0, !dbg !2846
  br i1 %cmp50, label %if.end56, label %if.then51, !dbg !2848

if.then51:                                        ; preds = %if.else47
  %call54 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i64 %7) #6, !dbg !2849
  br label %if.end56, !dbg !2849

if.end56:                                         ; preds = %if.else47, %if.then51, %if.then45
  %call57 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !2850
  ret void, !dbg !2851
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_constraints() local_unnamed_addr #5 !dbg !2852 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2855
  tail call fastcc void @dump_constraints(%struct._IO_FILE* %0) #7, !dbg !2856
  ret void, !dbg !2857
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_constraints(%struct._IO_FILE* %file) unnamed_addr #5 !dbg !2858 {
entry:
  %c = alloca %struct.constraint*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2862, metadata !DIExpression()), !dbg !2865
  %0 = bitcast %struct.constraint** %c to i8*, !dbg !2866
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2866
  call void @llvm.dbg.value(metadata i32 0, metadata !2863, metadata !DIExpression()), !dbg !2865
  br label %for.cond, !dbg !2867

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2869
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2863, metadata !DIExpression()), !dbg !2865
  %1 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** @constraints, align 8, !dbg !2870
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %1, i64 0, i32 0, !dbg !2870
  call void @llvm.dbg.value(metadata %struct.constraint** %c, metadata !2864, metadata !DIExpression(DW_OP_deref)), !dbg !2865
  %call = call fastcc i32 @VEC_constraint_t_base_iterate(%struct.VEC_constraint_t_base* %base, i32 %i.0, %struct.constraint** nonnull %c) #7, !dbg !2870
  %tobool1 = icmp eq i32 %call, 0, !dbg !2872
  br i1 %tobool1, label %for.end, label %for.body, !dbg !2872

for.body:                                         ; preds = %for.cond
  %2 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !2873
  call void @llvm.dbg.value(metadata %struct.constraint* %2, metadata !2864, metadata !DIExpression()), !dbg !2865
  call fastcc void @dump_constraint(%struct._IO_FILE* %file, %struct.constraint* %2) #7, !dbg !2874
  %inc = add nuw nsw i32 %i.0, 1, !dbg !2875
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2863, metadata !DIExpression()), !dbg !2865
  br label %for.cond, !dbg !2876, !llvm.loop !2877

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2879
  ret void, !dbg !2879
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_constraint_graph() local_unnamed_addr #5 !dbg !2880 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2881
  tail call fastcc void @dump_constraint_graph(%struct._IO_FILE* %0) #7, !dbg !2882
  ret void, !dbg !2883
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_constraint_graph(%struct._IO_FILE* %file) unnamed_addr #5 !dbg !2884 {
entry:
  %c = alloca %struct.constraint*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2886, metadata !DIExpression()), !dbg !2894
  call void @llvm.dbg.value(metadata i32 0, metadata !2887, metadata !DIExpression()), !dbg !2894
  %0 = bitcast %struct.constraint** %c to i8*, !dbg !2895
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2895
  %1 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !2896
  %tobool = icmp eq %struct.constraint_graph* %1, null, !dbg !2896
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2898

if.end:                                           ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !2899
  tail call fastcc void @dump_constraints(%struct._IO_FILE* %file) #7, !dbg !2900
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !2901
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !2902
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !2903
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !2904
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !2905
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !2906
  %2 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !2907
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %2, i64 0, i32 0, !dbg !2907
  %call8 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !2907
  call void @llvm.dbg.value(metadata i32 %call8, metadata !2888, metadata !DIExpression()), !dbg !2894
  %3 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !2908
  %size9 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %3, i64 0, i32 0, !dbg !2909
  %4 = load i32, i32* %size9, align 8, !dbg !2909
  %cmp = icmp ult i32 %call8, %4, !dbg !2910
  br i1 %cmp, label %cond.end13, label %cond.false11, !dbg !2911

cond.false11:                                     ; preds = %if.end
  br label %cond.end13, !dbg !2911

cond.end13:                                       ; preds = %if.end, %cond.false11
  %cond14 = phi i32 [ %4, %cond.false11 ], [ %call8, %if.end ], !dbg !2911
  call void @llvm.dbg.value(metadata i32 %cond14, metadata !2888, metadata !DIExpression()), !dbg !2894
  call void @llvm.dbg.value(metadata i32 0, metadata !2887, metadata !DIExpression()), !dbg !2894
  %5 = zext i32 %cond14 to i64, !dbg !2912
  br label %for.cond, !dbg !2912

for.cond:                                         ; preds = %for.body, %cond.end13
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end13 ], !dbg !2913
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2887, metadata !DIExpression()), !dbg !2894
  %cmp15 = icmp ult i64 %indvars.iv, %5, !dbg !2914
  br i1 %cmp15, label %for.body, label %for.end, !dbg !2915

for.body:                                         ; preds = %for.cond
  %6 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !2916
  %rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %6, i64 0, i32 5, !dbg !2917
  %7 = load i32*, i32** %rep, align 8, !dbg !2917
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %indvars.iv, !dbg !2916
  %8 = load i32, i32* %arrayidx, align 4, !dbg !2916
  %call16 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %8) #7, !dbg !2918
  %name17 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call16, i64 0, i32 6, !dbg !2919
  %9 = load i8*, i8** %name17, align 8, !dbg !2919
  call void @llvm.dbg.value(metadata i8* %9, metadata !2890, metadata !DIExpression()), !dbg !2920
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i8* %9) #6, !dbg !2921
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2922
  br label %for.cond, !dbg !2923, !llvm.loop !2924

for.end:                                          ; preds = %for.cond
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !2926
  call void @llvm.dbg.value(metadata i32 0, metadata !2887, metadata !DIExpression()), !dbg !2894
  br label %for.cond20, !dbg !2927

for.cond20:                                       ; preds = %for.inc33, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc34, %for.inc33 ], !dbg !2929
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !2887, metadata !DIExpression()), !dbg !2894
  %10 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** @constraints, align 8, !dbg !2930
  %base23 = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %10, i64 0, i32 0, !dbg !2930
  call void @llvm.dbg.value(metadata %struct.constraint** %c, metadata !2889, metadata !DIExpression(DW_OP_deref)), !dbg !2894
  %call27 = call fastcc i32 @VEC_constraint_t_base_iterate(%struct.VEC_constraint_t_base* %base23, i32 %i.1, %struct.constraint** nonnull %c) #7, !dbg !2930
  %tobool28 = icmp eq i32 %call27, 0, !dbg !2932
  br i1 %tobool28, label %for.end35, label %for.body29, !dbg !2932

for.body29:                                       ; preds = %for.cond20
  %11 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !2933
  call void @llvm.dbg.value(metadata %struct.constraint* %11, metadata !2889, metadata !DIExpression()), !dbg !2894
  %tobool30 = icmp eq %struct.constraint* %11, null, !dbg !2933
  br i1 %tobool30, label %for.inc33, label %if.then31, !dbg !2935

if.then31:                                        ; preds = %for.body29
  call void @llvm.dbg.value(metadata %struct.constraint* %11, metadata !2889, metadata !DIExpression()), !dbg !2894
  call fastcc void @dump_constraint_edge(%struct._IO_FILE* %file, %struct.constraint* nonnull %11) #7, !dbg !2936
  br label %for.inc33, !dbg !2936

for.inc33:                                        ; preds = %for.body29, %if.then31
  %inc34 = add i32 %i.1, 1, !dbg !2937
  call void @llvm.dbg.value(metadata i32 %inc34, metadata !2887, metadata !DIExpression()), !dbg !2894
  br label %for.cond20, !dbg !2938, !llvm.loop !2939

for.end35:                                        ; preds = %for.cond20
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !2941
  br label %cleanup, !dbg !2942

cleanup:                                          ; preds = %entry, %for.end35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2942
  ret void, !dbg !2942
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_solution_for_var(i32 %var) local_unnamed_addr #5 !dbg !2943 {
entry:
  call void @llvm.dbg.value(metadata i32 %var, metadata !2947, metadata !DIExpression()), !dbg !2948
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2949
  tail call fastcc void @dump_solution_for_var(%struct._IO_FILE* %0, i32 %var) #7, !dbg !2950
  ret void, !dbg !2951
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_solution_for_var(%struct._IO_FILE* %file, i32 %var) unnamed_addr #5 !dbg !2952 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2956, metadata !DIExpression()), !dbg !2971
  call void @llvm.dbg.value(metadata i32 %var, metadata !2957, metadata !DIExpression()), !dbg !2971
  %call = tail call fastcc %struct.variable_info* @get_varinfo(i32 %var) #7, !dbg !2972
  call void @llvm.dbg.value(metadata %struct.variable_info* %call, metadata !2958, metadata !DIExpression()), !dbg !2971
  %0 = bitcast i32* %i to i8*, !dbg !2973
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !2973
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !2974
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !2974
  %call1 = tail call fastcc i32 @find(i32 %var) #7, !dbg !2975
  %cmp = icmp eq i32 %call1, %var, !dbg !2976
  br i1 %cmp, label %if.else, label %if.then, !dbg !2977

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc i32 @find(i32 %var) #7, !dbg !2978
  %call3 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %call2) #7, !dbg !2979
  call void @llvm.dbg.value(metadata %struct.variable_info* %call3, metadata !2968, metadata !DIExpression()), !dbg !2980
  %name = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 6, !dbg !2981
  %2 = load i8*, i8** %name, align 8, !dbg !2981
  %name4 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call3, i64 0, i32 6, !dbg !2982
  %3 = load i8*, i8** %name4, align 8, !dbg !2982
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i64 0, i64 0), i8* %2, i8* %3) #6, !dbg !2983
  br label %if.end, !dbg !2984

if.else:                                          ; preds = %entry
  %name6 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 6, !dbg !2985
  %4 = load i8*, i8** %name6, align 8, !dbg !2985
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0), i8* %4) #6, !dbg !2987
  %solution = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 8, !dbg !2988
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution, align 8, !dbg !2988
  call void @llvm.dbg.value(metadata i32* %i, metadata !2959, metadata !DIExpression(DW_OP_deref)), !dbg !2971
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2960, metadata !DIExpression(DW_OP_deref)), !dbg !2971
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %5, i32 0, i32* nonnull %i) #7, !dbg !2988
  br label %for.cond, !dbg !2988

for.cond:                                         ; preds = %for.body, %if.else
  call void @llvm.dbg.value(metadata i32* %i, metadata !2959, metadata !DIExpression(DW_OP_deref)), !dbg !2971
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2960, metadata !DIExpression(DW_OP_deref)), !dbg !2971
  %call8 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !2990
  %tobool = icmp eq i8 %call8, 0, !dbg !2988
  br i1 %tobool, label %for.end, label %for.body, !dbg !2988

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !2992
  call void @llvm.dbg.value(metadata i32 %6, metadata !2959, metadata !DIExpression()), !dbg !2971
  %call9 = call fastcc %struct.variable_info* @get_varinfo(i32 %6) #7, !dbg !2994
  %name10 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call9, i64 0, i32 6, !dbg !2995
  %7 = load i8*, i8** %name10, align 8, !dbg !2995
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i8* %7) #6, !dbg !2996
  call void @llvm.dbg.value(metadata i32* %i, metadata !2959, metadata !DIExpression(DW_OP_deref)), !dbg !2971
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2960, metadata !DIExpression(DW_OP_deref)), !dbg !2971
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !2990
  br label %for.cond, !dbg !2990, !llvm.loop !2997

for.end:                                          ; preds = %for.cond
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !2999
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !3000
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3000
  ret void, !dbg !3000
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_pta_stats(%struct._IO_FILE* %s) local_unnamed_addr #5 !dbg !3001 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %s, metadata !3003, metadata !DIExpression()), !dbg !3004
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %s, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)) #6, !dbg !3005
  %0 = load i64, i64* @pta_stats.1, align 8, !dbg !3006
  %1 = load i64, i64* @pta_stats.0, align 8, !dbg !3007
  %add = add i64 %0, %1, !dbg !3008
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %s, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i64 %0, i64 %add) #6, !dbg !3009
  %2 = load i64, i64* @pta_stats.3, align 8, !dbg !3010
  %3 = load i64, i64* @pta_stats.2, align 8, !dbg !3011
  %add2 = add i64 %2, %3, !dbg !3012
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %s, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i64 %2, i64 %add2) #6, !dbg !3013
  ret void, !dbg !3014
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @pt_solution_reset(%struct.pt_solution* %pt) local_unnamed_addr #5 !dbg !3015 {
entry:
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt, metadata !3020, metadata !DIExpression()), !dbg !3021
  %0 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 0, !dbg !3022
  %call = tail call i8* @memset(i8* %0, i32 0, i64 16) #6, !dbg !3023
  %bf.load = load i8, i8* %0, align 8, !dbg !3024
  %bf.set = or i8 %bf.load, 1, !dbg !3024
  store i8 %bf.set, i8* %0, align 8, !dbg !3024
  ret void, !dbg !3025
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @pt_solution_set(%struct.pt_solution* %pt, %struct.bitmap_head_def* %vars) local_unnamed_addr #5 !dbg !3026 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt, metadata !3030, metadata !DIExpression()), !dbg !3038
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %vars, metadata !3031, metadata !DIExpression()), !dbg !3038
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3039
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3039
  %1 = bitcast i32* %i to i8*, !dbg !3040
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3040
  %2 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 0, !dbg !3041
  %call = tail call i8* @memset(i8* %2, i32 0, i64 16) #6, !dbg !3042
  %vars1 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 1, !dbg !3043
  store %struct.bitmap_head_def* %vars, %struct.bitmap_head_def** %vars1, align 8, !dbg !3044
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3032, metadata !DIExpression(DW_OP_deref)), !dbg !3038
  call void @llvm.dbg.value(metadata i32* %i, metadata !3033, metadata !DIExpression(DW_OP_deref)), !dbg !3038
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %vars, i32 0, i32* nonnull %i) #7, !dbg !3045
  br label %for.cond, !dbg !3045

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3032, metadata !DIExpression(DW_OP_deref)), !dbg !3038
  call void @llvm.dbg.value(metadata i32* %i, metadata !3033, metadata !DIExpression(DW_OP_deref)), !dbg !3038
  %call2 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3046
  %tobool = icmp eq i8 %call2, 0, !dbg !3045
  br i1 %tobool, label %for.end, label %for.body, !dbg !3045

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !3047
  call void @llvm.dbg.value(metadata i32 %3, metadata !3033, metadata !DIExpression()), !dbg !3038
  %call3 = call %union.tree_node* @referenced_var_lookup(i32 %3) #6, !dbg !3048
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !3034, metadata !DIExpression()), !dbg !3049
  %call4 = call fastcc zeroext i8 @is_global_var(%union.tree_node* %call3) #7, !dbg !3050
  %tobool5 = icmp eq i8 %call4, 0, !dbg !3050
  br i1 %tobool5, label %cleanup, label %if.then, !dbg !3052

if.then:                                          ; preds = %for.body
  %bf.load = load i8, i8* %2, align 8, !dbg !3053
  %bf.set = or i8 %bf.load, 16, !dbg !3053
  store i8 %bf.set, i8* %2, align 8, !dbg !3053
  br label %cleanup, !dbg !3055

cleanup:                                          ; preds = %for.body, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %for.body ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3032, metadata !DIExpression(DW_OP_deref)), !dbg !3038
  call void @llvm.dbg.value(metadata i32* %i, metadata !3033, metadata !DIExpression(DW_OP_deref)), !dbg !3038
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !3046
  br label %for.cond, !dbg !3046, !llvm.loop !3056

for.end:                                          ; preds = %for.cond, %cleanup
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3058
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3058
  ret void, !dbg !3058
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !3059 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3067, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !3068, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32 0, metadata !3069, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3070, metadata !DIExpression()), !dbg !3071
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !3072
  %1 = load i64, i64* %0, align 8, !dbg !3072
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !3073
  store i64 %1, i64* %2, align 8, !dbg !3073
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !3074
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !3075
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !3076
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !3079
  br label %while.body, !dbg !3079

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !3080
  br i1 %tobool, label %if.then, label %if.end, !dbg !3081

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !3082
  br label %while.end, !dbg !3084

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !3085

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !3079, !llvm.loop !3086

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !3088

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !3088
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !3090
  %7 = load i32, i32* %indx9, align 8, !dbg !3090
  %cmp11 = icmp eq i32 %7, 0, !dbg !3091
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !3092

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !3093
  %8 = load i32, i32* %indx14, align 8, !dbg !3093
  %mul = shl i32 %8, 7, !dbg !3094
  call void @llvm.dbg.value(metadata i32 %mul, metadata !3069, metadata !DIExpression()), !dbg !3071
  br label %if.end15, !dbg !3095

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !3069, metadata !DIExpression()), !dbg !3071
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !3096
  store i32 0, i32* %word_no, align 8, !dbg !3097
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !3098
  %9 = load i64, i64* %arrayidx, align 8, !dbg !3098
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3099
  store i64 %9, i64* %bits21, align 8, !dbg !3100
  %tobool23 = icmp eq i64 %9, 0, !dbg !3101
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !3101
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !3102
  call void @llvm.dbg.value(metadata i32 %add, metadata !3069, metadata !DIExpression()), !dbg !3071
  store i32 %add, i32* %bit_no, align 4, !dbg !3103
  ret void, !dbg !3104
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !3105 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3109, metadata !DIExpression()), !dbg !3114
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3110, metadata !DIExpression()), !dbg !3114
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3115
  %0 = load i64, i64* %bits, align 8, !dbg !3115
  %tobool = icmp eq i64 %0, 0, !dbg !3116
  br i1 %tobool, label %if.end, label %next_bit, !dbg !3117

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !3118
  br label %next_bit, !dbg !3121

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !3111), !dbg !3122
  br label %while.cond, !dbg !3121

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !3123
  %and = and i64 %2, 1, !dbg !3124
  %tobool2 = icmp eq i64 %and, 0, !dbg !3125
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !3121

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !3126
  store i64 %shr, i64* %bits, align 8, !dbg !3126
  %3 = load i32, i32* %bit_no, align 4, !dbg !3128
  %add = add i32 %3, 1, !dbg !3128
  store i32 %add, i32* %bit_no, align 4, !dbg !3128
  %.pre = load i64, i64* %bits, align 8, !dbg !3123
  br label %while.cond, !dbg !3121, !llvm.loop !3129

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !3131
  %sub = add i32 %4, 63, !dbg !3132
  %div = and i32 %sub, -64, !dbg !3133
  store i32 %div, i32* %bit_no, align 4, !dbg !3134
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !3135
  %5 = load i32, i32* %word_no, align 8, !dbg !3136
  %inc = add i32 %5, 1, !dbg !3136
  store i32 %inc, i32* %word_no, align 8, !dbg !3136
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !3137
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !3137
  br label %while.body6, !dbg !3138

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !3139

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !3140
  %cmp = icmp eq i32 %8, 2, !dbg !3141
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !3137
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !3139

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !3118
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !3118
  %10 = load i64, i64* %arrayidx, align 8, !dbg !3118
  store i64 %10, i64* %bits, align 8, !dbg !3142
  %tobool14 = icmp eq i64 %10, 0, !dbg !3143
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !3145

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !3146
  %add17 = add i32 %11, 64, !dbg !3146
  store i32 %add17, i32* %bit_no, align 4, !dbg !3146
  %12 = load i32, i32* %word_no, align 8, !dbg !3147
  %inc19 = add i32 %12, 1, !dbg !3147
  store i32 %inc19, i32* %word_no, align 8, !dbg !3147
  br label %while.cond7, !dbg !3139, !llvm.loop !3148

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !3137
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !3150
  %14 = load i64, i64* %13, align 8, !dbg !3150
  store i64 %14, i64* %6, align 8, !dbg !3151
  %tobool24 = icmp eq i64 %14, 0, !dbg !3152
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !3154

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !3154
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !3155
  %16 = load i32, i32* %indx, align 8, !dbg !3155
  %mul28 = shl i32 %16, 7, !dbg !3156
  store i32 %mul28, i32* %bit_no, align 4, !dbg !3157
  store i32 0, i32* %word_no, align 8, !dbg !3158
  br label %while.body6, !dbg !3138, !llvm.loop !3159

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !3161

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !3161

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !3114
  ret i8 %retval.0, !dbg !3161
}

declare dso_local %union.tree_node* @referenced_var_lookup(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_global_var(%union.tree_node* %t) unnamed_addr #0 !dbg !3162 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3168, metadata !DIExpression()), !dbg !3169
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3170
  %bf.load = load i64, i64* %0, align 8, !dbg !3170
  %bf.cast1 = and i64 %bf.load, 67108864, !dbg !3170
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !3170
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3171

lor.rhs:                                          ; preds = %entry
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3172
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !3172
  %bf.load1 = load i64, i64* %1, align 8, !dbg !3172
  %bf.cast42 = lshr i64 %bf.load1, 25, !dbg !3171
  %2 = trunc i64 %bf.cast42 to i8, !dbg !3171
  %3 = and i8 %2, 1, !dbg !3171
  br label %lor.end, !dbg !3171

lor.end:                                          ; preds = %entry, %lor.rhs
  %4 = phi i8 [ 1, %entry ], [ %3, %lor.rhs ]
  ret i8 %4, !dbg !3173
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !3174 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3178, metadata !DIExpression()), !dbg !3180
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !3179, metadata !DIExpression()), !dbg !3180
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !3181
  %0 = load i64, i64* %bits, align 8, !dbg !3182
  %shr = lshr i64 %0, 1, !dbg !3182
  store i64 %shr, i64* %bits, align 8, !dbg !3182
  %1 = load i32, i32* %bit_no, align 4, !dbg !3183
  %add = add i32 %1, 1, !dbg !3183
  store i32 %add, i32* %bit_no, align 4, !dbg !3183
  ret void, !dbg !3184
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @pt_solution_includes_global(%struct.pt_solution* %pt) local_unnamed_addr #5 !dbg !3185 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3190
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 3, !dbg !3190
  br label %tailrecurse, !dbg !3192

tailrecurse:                                      ; preds = %if.then16, %entry
  %pt.tr = phi %struct.pt_solution* [ %pt, %entry ], [ %escaped, %if.then16 ]
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt.tr, metadata !3189, metadata !DIExpression()), !dbg !3193
  %1 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt.tr, i64 0, i32 0, !dbg !3194
  %bf.load = load i8, i8* %1, align 8, !dbg !3194
  %bf.clear = and i8 %bf.load, 1, !dbg !3194
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !3196
  br i1 %tobool, label %lor.lhs.false, label %return, !dbg !3197

lor.lhs.false:                                    ; preds = %tailrecurse
  %bf.clear2 = and i8 %bf.load, 2, !dbg !3198
  %tobool4 = icmp eq i8 %bf.clear2, 0, !dbg !3199
  br i1 %tobool4, label %lor.lhs.false5, label %return, !dbg !3200

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %bf.clear8 = and i8 %bf.load, 16, !dbg !3201
  %tobool10 = icmp eq i8 %bf.clear8, 0, !dbg !3202
  br i1 %tobool10, label %if.end, label %return, !dbg !3203

if.end:                                           ; preds = %lor.lhs.false5
  %bf.clear13 = and i8 %bf.load, 4, !dbg !3204
  %tobool15 = icmp eq i8 %bf.clear13, 0, !dbg !3205
  br i1 %tobool15, label %return, label %if.then16, !dbg !3206

if.then16:                                        ; preds = %if.end
  %2 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3207
  %escaped = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %2, i64 0, i32 4, !dbg !3208
  br label %tailrecurse, !dbg !3192

return:                                           ; preds = %if.end, %lor.lhs.false5, %lor.lhs.false, %tailrecurse
  %retval.0 = phi i8 [ 1, %lor.lhs.false5 ], [ 1, %lor.lhs.false ], [ 1, %tailrecurse ], [ 0, %if.end ], !dbg !3193
  ret i8 %retval.0, !dbg !3209
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @pt_solution_includes(%struct.pt_solution* %pt, %union.tree_node* %decl) local_unnamed_addr #5 !dbg !3210 {
entry:
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt, metadata !3214, metadata !DIExpression()), !dbg !3217
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3215, metadata !DIExpression()), !dbg !3217
  %call = tail call fastcc zeroext i8 @pt_solution_includes_1(%struct.pt_solution* %pt, %union.tree_node* %decl) #7, !dbg !3218
  call void @llvm.dbg.value(metadata i8 %call, metadata !3216, metadata !DIExpression()), !dbg !3217
  %tobool = icmp eq i8 %call, 0, !dbg !3219
  br i1 %tobool, label %if.else, label %if.then, !dbg !3221

if.then:                                          ; preds = %entry
  %0 = load i64, i64* @pta_stats.0, align 8, !dbg !3222
  %inc = add i64 %0, 1, !dbg !3222
  store i64 %inc, i64* @pta_stats.0, align 8, !dbg !3222
  br label %if.end, !dbg !3222

if.else:                                          ; preds = %entry
  %1 = load i64, i64* @pta_stats.1, align 8, !dbg !3223
  %inc1 = add i64 %1, 1, !dbg !3223
  store i64 %inc1, i64* @pta_stats.1, align 8, !dbg !3223
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i8 %call, !dbg !3224
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @pt_solution_includes_1(%struct.pt_solution* %pt, %union.tree_node* %decl) unnamed_addr #5 !dbg !3225 {
entry:
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt, metadata !3227, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3228, metadata !DIExpression()), !dbg !3229
  %0 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 0, !dbg !3230
  %bf.load = load i8, i8* %0, align 8, !dbg !3230
  %bf.clear = and i8 %bf.load, 1, !dbg !3230
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !3232
  br i1 %tobool, label %if.end, label %return, !dbg !3233

if.end:                                           ; preds = %entry
  %bf.clear2 = and i8 %bf.load, 2, !dbg !3234
  %tobool4 = icmp eq i8 %bf.clear2, 0, !dbg !3236
  br i1 %tobool4, label %if.end7, label %land.lhs.true, !dbg !3237

land.lhs.true:                                    ; preds = %if.end
  %call = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* %decl) #7, !dbg !3238
  %tobool5 = icmp eq i8 %call, 0, !dbg !3238
  br i1 %tobool5, label %if.end7, label %return, !dbg !3239

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %vars = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 1, !dbg !3240
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vars, align 8, !dbg !3240
  %tobool8 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !3242
  br i1 %tobool8, label %if.end14, label %land.lhs.true9, !dbg !3243

land.lhs.true9:                                   ; preds = %if.end7
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3244
  %2 = load i32, i32* %uid, align 4, !dbg !3244
  %call11 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %1, i32 %2) #6, !dbg !3245
  %tobool12 = icmp eq i32 %call11, 0, !dbg !3245
  br i1 %tobool12, label %if.end14, label %return, !dbg !3246

if.end14:                                         ; preds = %land.lhs.true9, %if.end7
  %bf.load15 = load i8, i8* %0, align 8, !dbg !3247
  %bf.clear17 = and i8 %bf.load15, 4, !dbg !3247
  %tobool19 = icmp eq i8 %bf.clear17, 0, !dbg !3249
  br i1 %tobool19, label %if.end25, label %land.lhs.true20, !dbg !3250

land.lhs.true20:                                  ; preds = %if.end14
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3251
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 3, !dbg !3252
  %4 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3252
  %escaped = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %4, i64 0, i32 4, !dbg !3253
  %call21 = tail call fastcc zeroext i8 @pt_solution_includes_1(%struct.pt_solution* nonnull %escaped, %union.tree_node* %decl) #7, !dbg !3254
  %tobool23 = icmp eq i8 %call21, 0, !dbg !3254
  br i1 %tobool23, label %if.end25, label %return, !dbg !3255

if.end25:                                         ; preds = %land.lhs.true20, %if.end14
  br label %return, !dbg !3256

return:                                           ; preds = %land.lhs.true, %land.lhs.true9, %land.lhs.true20, %entry, %if.end25
  %retval.0 = phi i8 [ 0, %if.end25 ], [ 1, %entry ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true9 ], [ 1, %land.lhs.true20 ], !dbg !3229
  ret i8 %retval.0, !dbg !3257
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @pt_solutions_intersect(%struct.pt_solution* %pt1, %struct.pt_solution* %pt2) local_unnamed_addr #5 !dbg !3258 {
entry:
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt1, metadata !3262, metadata !DIExpression()), !dbg !3265
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt2, metadata !3263, metadata !DIExpression()), !dbg !3265
  %call = tail call fastcc zeroext i8 @pt_solutions_intersect_1(%struct.pt_solution* %pt1, %struct.pt_solution* %pt2) #7, !dbg !3266
  call void @llvm.dbg.value(metadata i8 %call, metadata !3264, metadata !DIExpression()), !dbg !3265
  %tobool = icmp eq i8 %call, 0, !dbg !3267
  br i1 %tobool, label %if.else, label %if.then, !dbg !3269

if.then:                                          ; preds = %entry
  %0 = load i64, i64* @pta_stats.2, align 8, !dbg !3270
  %inc = add i64 %0, 1, !dbg !3270
  store i64 %inc, i64* @pta_stats.2, align 8, !dbg !3270
  br label %if.end, !dbg !3270

if.else:                                          ; preds = %entry
  %1 = load i64, i64* @pta_stats.3, align 8, !dbg !3271
  %inc1 = add i64 %1, 1, !dbg !3271
  store i64 %inc1, i64* @pta_stats.3, align 8, !dbg !3271
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i8 %call, !dbg !3272
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @pt_solutions_intersect_1(%struct.pt_solution* %pt1, %struct.pt_solution* %pt2) unnamed_addr #5 !dbg !3273 {
entry:
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt1, metadata !3275, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt2, metadata !3276, metadata !DIExpression()), !dbg !3277
  %0 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt1, i64 0, i32 0, !dbg !3278
  %bf.load = load i8, i8* %0, align 8, !dbg !3278
  %bf.clear = and i8 %bf.load, 1, !dbg !3278
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !3280
  br i1 %tobool, label %lor.lhs.false, label %return, !dbg !3281

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt2, i64 0, i32 0, !dbg !3282
  %bf.load1 = load i8, i8* %1, align 8, !dbg !3282
  %bf.clear2 = and i8 %bf.load1, 1, !dbg !3282
  %tobool4 = icmp eq i8 %bf.clear2, 0, !dbg !3283
  br i1 %tobool4, label %if.end, label %return, !dbg !3284

if.end:                                           ; preds = %lor.lhs.false
  %bf.clear6 = and i8 %bf.load, 2, !dbg !3285
  %tobool8 = icmp eq i8 %bf.clear6, 0, !dbg !3287
  br i1 %tobool8, label %if.end.lor.lhs.false20_crit_edge, label %land.lhs.true, !dbg !3288

if.end.lor.lhs.false20_crit_edge:                 ; preds = %if.end
  %.pre = and i8 %bf.load1, 2, !dbg !3289
  %phitmp1 = icmp eq i8 %.pre, 0, !dbg !3288
  br label %lor.lhs.false20, !dbg !3288

land.lhs.true:                                    ; preds = %if.end
  %bf.clear11 = and i8 %bf.load1, 2, !dbg !3290
  %tobool13 = icmp eq i8 %bf.clear11, 0, !dbg !3291
  br i1 %tobool13, label %lor.lhs.false14, label %return, !dbg !3292

lor.lhs.false14:                                  ; preds = %land.lhs.true
  %bf.clear17 = and i8 %bf.load1, 16, !dbg !3293
  %tobool19 = icmp eq i8 %bf.clear17, 0, !dbg !3294
  br i1 %tobool19, label %lor.lhs.false20, label %return, !dbg !3295

lor.lhs.false20:                                  ; preds = %if.end.lor.lhs.false20_crit_edge, %lor.lhs.false14
  %bf.clear23.pre-phi = phi i1 [ %phitmp1, %if.end.lor.lhs.false20_crit_edge ], [ true, %lor.lhs.false14 ]
  br i1 %bf.clear23.pre-phi, label %if.end33, label %land.lhs.true26, !dbg !3296

land.lhs.true26:                                  ; preds = %lor.lhs.false20
  %bf.clear29 = and i8 %bf.load, 16, !dbg !3297
  %tobool31 = icmp eq i8 %bf.clear29, 0, !dbg !3298
  br i1 %tobool31, label %if.end33, label %return, !dbg !3299

if.end33:                                         ; preds = %land.lhs.true26, %lor.lhs.false20
  %bf.clear36 = and i8 %bf.load, 4, !dbg !3300
  %tobool38 = icmp eq i8 %bf.clear36, 0, !dbg !3302
  br i1 %tobool38, label %lor.lhs.false39, label %land.lhs.true45, !dbg !3303

lor.lhs.false39:                                  ; preds = %if.end33
  %bf.clear42 = and i8 %bf.load1, 4, !dbg !3304
  %tobool44 = icmp eq i8 %bf.clear42, 0, !dbg !3305
  br i1 %tobool44, label %if.end87, label %land.lhs.true45, !dbg !3306

land.lhs.true45:                                  ; preds = %lor.lhs.false39, %if.end33
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3307
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 3, !dbg !3308
  %3 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3308
  %escaped = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %3, i64 0, i32 4, !dbg !3309
  %call = tail call fastcc zeroext i8 @pt_solution_empty_p(%struct.pt_solution* nonnull %escaped) #7, !dbg !3310
  %tobool46 = icmp eq i8 %call, 0, !dbg !3310
  br i1 %tobool46, label %if.then47, label %if.end87, !dbg !3311

if.then47:                                        ; preds = %land.lhs.true45
  %bf.load48 = load i8, i8* %0, align 8, !dbg !3312
  %bf.clear50 = and i8 %bf.load48, 4, !dbg !3312
  %tobool52 = icmp eq i8 %bf.clear50, 0, !dbg !3315
  br i1 %tobool52, label %if.end60, label %land.lhs.true53, !dbg !3316

land.lhs.true53:                                  ; preds = %if.then47
  %bf.load54 = load i8, i8* %1, align 8, !dbg !3317
  %bf.clear56 = and i8 %bf.load54, 4, !dbg !3317
  %tobool58 = icmp eq i8 %bf.clear56, 0, !dbg !3318
  br i1 %tobool58, label %if.end60, label %return, !dbg !3319

if.end60:                                         ; preds = %land.lhs.true53, %if.then47
  br i1 %tobool52, label %lor.lhs.false72, label %land.lhs.true66, !dbg !3320

land.lhs.true66:                                  ; preds = %if.end60
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3322
  %gimple_df68 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 3, !dbg !3323
  %5 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df68, align 8, !dbg !3323
  %escaped69 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %5, i64 0, i32 4, !dbg !3324
  %call70 = tail call fastcc zeroext i8 @pt_solutions_intersect_1(%struct.pt_solution* nonnull %escaped69, %struct.pt_solution* %pt2) #7, !dbg !3325
  %tobool71 = icmp eq i8 %call70, 0, !dbg !3325
  br i1 %tobool71, label %lor.lhs.false72, label %return, !dbg !3326

lor.lhs.false72:                                  ; preds = %land.lhs.true66, %if.end60
  %bf.load73 = load i8, i8* %1, align 8, !dbg !3327
  %bf.clear75 = and i8 %bf.load73, 4, !dbg !3327
  %tobool77 = icmp eq i8 %bf.clear75, 0, !dbg !3328
  br i1 %tobool77, label %if.end87, label %land.lhs.true78, !dbg !3329

land.lhs.true78:                                  ; preds = %lor.lhs.false72
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3330
  %gimple_df80 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 3, !dbg !3331
  %7 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df80, align 8, !dbg !3331
  %escaped81 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %7, i64 0, i32 4, !dbg !3332
  %call82 = tail call fastcc zeroext i8 @pt_solutions_intersect_1(%struct.pt_solution* nonnull %escaped81, %struct.pt_solution* %pt1) #7, !dbg !3333
  %tobool84 = icmp eq i8 %call82, 0, !dbg !3333
  br i1 %tobool84, label %if.end87, label %return, !dbg !3334

if.end87:                                         ; preds = %land.lhs.true78, %lor.lhs.false72, %land.lhs.true45, %lor.lhs.false39
  %vars = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt1, i64 0, i32 1, !dbg !3335
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vars, align 8, !dbg !3335
  %tobool88 = icmp eq %struct.bitmap_head_def* %8, null, !dbg !3336
  br i1 %tobool88, label %land.end, label %land.lhs.true89, !dbg !3337

land.lhs.true89:                                  ; preds = %if.end87
  %vars90 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt2, i64 0, i32 1, !dbg !3338
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vars90, align 8, !dbg !3338
  %tobool91 = icmp eq %struct.bitmap_head_def* %9, null, !dbg !3339
  br i1 %tobool91, label %land.end, label %land.rhs, !dbg !3340

land.rhs:                                         ; preds = %land.lhs.true89
  %call94 = tail call zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def* nonnull %8, %struct.bitmap_head_def* nonnull %9) #6, !dbg !3341
  %tobool96 = icmp ne i8 %call94, 0, !dbg !3340
  %phitmp = zext i1 %tobool96 to i8
  br label %land.end

land.end:                                         ; preds = %land.lhs.true89, %if.end87, %land.rhs
  %10 = phi i8 [ 0, %land.lhs.true89 ], [ 0, %if.end87 ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !3342

return:                                           ; preds = %lor.lhs.false14, %land.lhs.true, %land.lhs.true26, %land.lhs.true53, %land.lhs.true66, %land.lhs.true78, %lor.lhs.false, %entry, %land.end
  %retval.0 = phi i8 [ %10, %land.end ], [ 1, %lor.lhs.false ], [ 1, %entry ], [ 1, %land.lhs.true26 ], [ 1, %lor.lhs.false14 ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true53 ], [ 1, %land.lhs.true78 ], [ 1, %land.lhs.true66 ], !dbg !3277
  ret i8 %retval.0, !dbg !3343
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @pt_solutions_same_restrict_base(%struct.pt_solution* %pt1, %struct.pt_solution* %pt2) local_unnamed_addr #5 !dbg !3344 {
entry:
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt1, metadata !3346, metadata !DIExpression()), !dbg !3348
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt2, metadata !3347, metadata !DIExpression()), !dbg !3348
  %0 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt1, i64 0, i32 0, !dbg !3349
  %bf.load = load i8, i8* %0, align 8, !dbg !3349
  %bf.clear = and i8 %bf.load, 32, !dbg !3349
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !3351
  br i1 %tobool, label %return, label %land.lhs.true, !dbg !3352

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt2, i64 0, i32 0, !dbg !3353
  %bf.load1 = load i8, i8* %1, align 8, !dbg !3353
  %bf.clear3 = and i8 %bf.load1, 32, !dbg !3353
  %tobool5 = icmp eq i8 %bf.clear3, 0, !dbg !3354
  br i1 %tobool5, label %return, label %if.then, !dbg !3355

if.then:                                          ; preds = %land.lhs.true
  %vars = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt1, i64 0, i32 1, !dbg !3356
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vars, align 8, !dbg !3356
  %tobool6 = icmp eq %struct.bitmap_head_def* %2, null, !dbg !3356
  br i1 %tobool6, label %cond.true, label %land.lhs.true7, !dbg !3356

land.lhs.true7:                                   ; preds = %if.then
  %vars8 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt2, i64 0, i32 1, !dbg !3356
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vars8, align 8, !dbg !3356
  %tobool9 = icmp eq %struct.bitmap_head_def* %3, null, !dbg !3356
  br i1 %tobool9, label %cond.true, label %cond.end, !dbg !3356

cond.true:                                        ; preds = %land.lhs.true7, %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 5087, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3356
  %.pre = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vars, align 8, !dbg !3358
  %vars11.phi.trans.insert = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt2, i64 0, i32 1, !dbg !3359
  %.pre1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vars11.phi.trans.insert, align 8, !dbg !3360
  br label %cond.end, !dbg !3356

cond.end:                                         ; preds = %land.lhs.true7, %cond.true
  %4 = phi %struct.bitmap_head_def* [ %3, %land.lhs.true7 ], [ %.pre1, %cond.true ], !dbg !3360
  %5 = phi %struct.bitmap_head_def* [ %2, %land.lhs.true7 ], [ %.pre, %cond.true ], !dbg !3358
  %call = tail call zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def* %5, %struct.bitmap_head_def* %4) #6, !dbg !3361
  br label %return, !dbg !3362

return:                                           ; preds = %land.lhs.true, %entry, %cond.end
  %retval.0 = phi i8 [ %call, %cond.end ], [ 1, %land.lhs.true ], [ 1, %entry ], !dbg !3348
  ret i8 %retval.0, !dbg !3363
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_sa_points_to_info() local_unnamed_addr #5 !dbg !3364 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3365
  tail call fastcc void @dump_sa_points_to_info(%struct._IO_FILE* %0) #7, !dbg !3366
  ret void, !dbg !3367
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_sa_points_to_info(%struct._IO_FILE* %outfile) unnamed_addr #5 !dbg !3368 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outfile, metadata !3370, metadata !DIExpression()), !dbg !3372
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !3373
  %0 = load i32, i32* @dump_flags, align 4, !dbg !3374
  %and = and i32 %0, 16, !dbg !3376
  %tobool = icmp eq i32 %and, 0, !dbg !3376
  br i1 %tobool, label %if.end, label %if.then, !dbg !3377

if.then:                                          ; preds = %entry
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !3378
  %1 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 0), align 4, !dbg !3380
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i64 0, i64 0), i32 %1) #6, !dbg !3381
  %2 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 1), align 4, !dbg !3382
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.37, i64 0, i64 0), i32 %2) #6, !dbg !3383
  %3 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 2), align 4, !dbg !3384
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i64 0, i64 0), i32 %3) #6, !dbg !3385
  %4 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 3), align 4, !dbg !3386
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39, i64 0, i64 0), i32 %4) #6, !dbg !3387
  %5 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 4), align 4, !dbg !3388
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.40, i64 0, i64 0), i32 %5) #6, !dbg !3389
  %6 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 5), align 4, !dbg !3390
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i64 0, i64 0), i32 %6) #6, !dbg !3391
  %7 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 6), align 4, !dbg !3392
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.42, i64 0, i64 0), i32 %7) #6, !dbg !3393
  br label %if.end, !dbg !3394

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !3371, metadata !DIExpression()), !dbg !3372
  br label %for.cond, !dbg !3395

for.cond:                                         ; preds = %for.body, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body ], !dbg !3397
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3371, metadata !DIExpression()), !dbg !3372
  %8 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !3398
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %8, i64 0, i32 0, !dbg !3398
  %call10 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !3398
  %cmp = icmp ult i32 %i.0, %call10, !dbg !3400
  br i1 %cmp, label %for.body, label %for.end, !dbg !3401

for.body:                                         ; preds = %for.cond
  tail call fastcc void @dump_solution_for_var(%struct._IO_FILE* %outfile, i32 %i.0) #7, !dbg !3402
  %inc = add i32 %i.0, 1, !dbg !3403
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3371, metadata !DIExpression()), !dbg !3372
  br label %for.cond, !dbg !3404, !llvm.loop !3405

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3407
}

; Function Attrs: nounwind uwtable
define dso_local void @delete_alias_heapvars() local_unnamed_addr #5 !dbg !3408 {
entry:
  %0 = load %struct.htab*, %struct.htab** @heapvar_for_stmt, align 8, !dbg !3409
  %tobool = icmp eq %struct.htab* %0, null, !dbg !3409
  br i1 %tobool, label %if.end, label %if.then, !dbg !3411

if.then:                                          ; preds = %entry
  tail call void @htab_delete(%struct.htab* nonnull %0) #6, !dbg !3412
  br label %if.end, !dbg !3412

if.end:                                           ; preds = %entry, %if.then
  store %struct.htab* null, %struct.htab** @heapvar_for_stmt, align 8, !dbg !3413
  ret void, !dbg !3414
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @compute_may_aliases() local_unnamed_addr #5 !dbg !3415 {
entry:
  tail call fastcc void @compute_points_to_sets() #7, !dbg !3416
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3417
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !3417
  br i1 %tobool, label %if.end3, label %if.then, !dbg !3419

if.then:                                          ; preds = %entry
  tail call void @dump_alias_info(%struct._IO_FILE* nonnull %0) #6, !dbg !3420
  %1 = load i32, i32* @dump_flags, align 4, !dbg !3422
  %and = and i32 %1, 8, !dbg !3424
  %tobool1 = icmp eq i32 %and, 0, !dbg !3424
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !3425

if.then2:                                         ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3426
  tail call void @dump_referenced_vars(%struct._IO_FILE* %2) #6, !dbg !3427
  br label %if.end3, !dbg !3427

if.end3:                                          ; preds = %if.then, %entry, %if.then2
  tail call fastcc void @delete_points_to_sets() #7, !dbg !3428
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3429
  %call = tail call zeroext i8 @need_ssa_update_p(%struct.function* %3) #6, !dbg !3429
  %tobool4 = icmp eq i8 %call, 0, !dbg !3429
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !3429

cond.true:                                        ; preds = %if.end3
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 5611, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3429
  br label %cond.end, !dbg !3429

cond.end:                                         ; preds = %if.end3, %cond.true
  ret i32 0, !dbg !3430
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_points_to_sets() unnamed_addr #5 !dbg !3431 {
entry:
  %vi = alloca %struct.variable_info*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp12 = alloca %struct.gimple_stmt_iterator, align 8
  %0 = bitcast %struct.variable_info** %vi to i8*, !dbg !3458
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3458
  %1 = load i8, i8* @timevar_enable, align 1, !dbg !3459
  %tobool = icmp eq i8 %1, 0, !dbg !3459
  br i1 %tobool, label %do.end, label %if.then, !dbg !3462

if.then:                                          ; preds = %entry
  tail call void @timevar_push_1(i32 56) #6, !dbg !3459
  br label %do.end, !dbg !3459

do.end:                                           ; preds = %entry, %if.then
  tail call fastcc void @init_alias_vars() #7, !dbg !3463
  tail call fastcc void @init_alias_heapvars() #7, !dbg !3464
  tail call fastcc void @intra_create_variable_infos() #7, !dbg !3465
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3466
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !3466
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3466
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !3466
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3466
  %5 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3467
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3468
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp12 to i8*, !dbg !3469
  br label %for.cond, !dbg !3466

for.cond:                                         ; preds = %for.end20, %do.end
  %8 = phi %struct.control_flow_graph* [ %3, %do.end ], [ %.pre3, %for.end20 ], !dbg !3470
  %.pn = phi %struct.basic_block_def* [ %4, %do.end ], [ %bb.0, %for.end20 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3471
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3471
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3433, metadata !DIExpression()), !dbg !3472
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !3470
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3470
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %9, !dbg !3470
  br i1 %cmp, label %for.end23, label %for.body, !dbg !3466

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !3473
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !3474
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #6, !dbg !3474
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !3474
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !3474
  br label %for.cond3, !dbg !3475

for.cond3:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3436, metadata !DIExpression(DW_OP_deref)), !dbg !3467
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3476
  %tobool4 = icmp eq i8 %call, 0, !dbg !3477
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !3478

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3436, metadata !DIExpression(DW_OP_deref)), !dbg !3467
  %call6 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3479
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !3446, metadata !DIExpression()), !dbg !3480
  %call7 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call6) #7, !dbg !3481
  %call8 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call7) #6, !dbg !3483
  %tobool9 = icmp eq i8 %call8, 0, !dbg !3483
  br i1 %tobool9, label %for.inc, label %if.then10, !dbg !3484

if.then10:                                        ; preds = %for.body5
  call fastcc void @find_func_aliases(%union.gimple_statement_d* %call6) #7, !dbg !3485
  br label %for.inc, !dbg !3485

for.inc:                                          ; preds = %for.body5, %if.then10
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3436, metadata !DIExpression(DW_OP_deref)), !dbg !3467
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3486
  br label %for.cond3, !dbg !3487, !llvm.loop !3488

for.end:                                          ; preds = %for.cond3
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !3490
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp12, %struct.basic_block_def* %bb.0) #7, !dbg !3490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !3490
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !3490
  br label %for.cond13, !dbg !3491

for.cond13:                                       ; preds = %for.body17, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3436, metadata !DIExpression(DW_OP_deref)), !dbg !3467
  %call14 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3492
  %tobool15 = icmp eq i8 %call14, 0, !dbg !3493
  br i1 %tobool15, label %for.body17, label %for.end20, !dbg !3494

for.body17:                                       ; preds = %for.cond13
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3436, metadata !DIExpression(DW_OP_deref)), !dbg !3467
  %call18 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3495
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call18, metadata !3450, metadata !DIExpression()), !dbg !3496
  call fastcc void @find_func_aliases(%union.gimple_statement_d* %call18) #7, !dbg !3497
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3436, metadata !DIExpression(DW_OP_deref)), !dbg !3467
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3498
  br label %for.cond13, !dbg !3499, !llvm.loop !3500

for.end20:                                        ; preds = %for.cond13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !3502
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3470
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3503
  %.pre3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3470
  br label %for.cond, !dbg !3470, !llvm.loop !3504

for.end23:                                        ; preds = %for.cond
  call fastcc void @solve_constraints() #7, !dbg !3506
  %call24 = call fastcc %struct.variable_info* @get_varinfo(i32 3) #7, !dbg !3507
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3508
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 3, !dbg !3509
  %11 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3509
  %escaped = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %11, i64 0, i32 4, !dbg !3510
  call fastcc void @find_what_var_points_to(%struct.variable_info* %call24, %struct.pt_solution* nonnull %escaped) #7, !dbg !3511
  %call26 = call fastcc %struct.variable_info* @get_varinfo(i32 5) #7, !dbg !3512
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3513
  %gimple_df28 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 3, !dbg !3514
  %13 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df28, align 8, !dbg !3514
  %callused = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %13, i64 0, i32 5, !dbg !3515
  call fastcc void @find_what_var_points_to(%struct.variable_info* %call26, %struct.pt_solution* nonnull %callused) #7, !dbg !3516
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3517
  %gimple_df30 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 3, !dbg !3518
  %15 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df30, align 8, !dbg !3518
  %16 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %15, i64 0, i32 4, i32 0, !dbg !3519
  %bf.load = load i8, i8* %16, align 8, !dbg !3520
  %bf.clear = and i8 %bf.load, -5, !dbg !3520
  store i8 %bf.clear, i8* %16, align 8, !dbg !3520
  call void @llvm.dbg.value(metadata i32 0, metadata !3434, metadata !DIExpression()), !dbg !3472
  br label %for.cond32, !dbg !3521

for.cond32:                                       ; preds = %for.inc66, %for.end23
  %i.0 = phi i32 [ 0, %for.end23 ], [ %inc, %for.inc66 ], !dbg !3523
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3434, metadata !DIExpression()), !dbg !3472
  %17 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !3524
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %17, i64 0, i32 0, !dbg !3524
  call void @llvm.dbg.value(metadata %struct.variable_info** %vi, metadata !3435, metadata !DIExpression(DW_OP_deref)), !dbg !3472
  %call34 = call fastcc i32 @VEC_varinfo_t_base_iterate(%struct.VEC_varinfo_t_base* %base, i32 %i.0, %struct.variable_info** nonnull %vi) #7, !dbg !3524
  %tobool35 = icmp eq i32 %call34, 0, !dbg !3526
  br i1 %tobool35, label %for.cond68.preheader, label %for.body36, !dbg !3526

for.cond68.preheader:                             ; preds = %for.cond32
  br label %for.cond68, !dbg !3527

for.body36:                                       ; preds = %for.cond32
  %18 = load %struct.variable_info*, %struct.variable_info** %vi, align 8, !dbg !3528
  call void @llvm.dbg.value(metadata %struct.variable_info* %18, metadata !3435, metadata !DIExpression()), !dbg !3472
  %is_heap_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %18, i64 0, i32 1, !dbg !3530
  %bf.load37 = load i8, i8* %is_heap_var, align 4, !dbg !3530
  %bf.clear38 = and i8 %bf.load37, 16, !dbg !3530
  %tobool39 = icmp eq i8 %bf.clear38, 0, !dbg !3528
  br i1 %tobool39, label %for.inc66, label %land.lhs.true, !dbg !3531

land.lhs.true:                                    ; preds = %for.body36
  call void @llvm.dbg.value(metadata %struct.variable_info* %18, metadata !3435, metadata !DIExpression()), !dbg !3472
  %bf.clear42 = and i8 %bf.load37, 32, !dbg !3532
  %tobool44 = icmp eq i8 %bf.clear42, 0, !dbg !3533
  br i1 %tobool44, label %land.lhs.true45, label %for.inc66, !dbg !3534

land.lhs.true45:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.variable_info* %18, metadata !3435, metadata !DIExpression()), !dbg !3472
  %tobool49 = icmp slt i8 %bf.load37, 0, !dbg !3535
  br i1 %tobool49, label %for.inc66, label %if.then50, !dbg !3536

if.then50:                                        ; preds = %land.lhs.true45
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3537
  %gimple_df52 = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 3, !dbg !3538
  %20 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df52, align 8, !dbg !3538
  %escaped53 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %20, i64 0, i32 4, !dbg !3539
  call void @llvm.dbg.value(metadata %struct.variable_info* %18, metadata !3435, metadata !DIExpression()), !dbg !3472
  %decl = getelementptr inbounds %struct.variable_info, %struct.variable_info* %18, i64 0, i32 7, !dbg !3540
  %21 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3540
  %call54 = call zeroext i8 @pt_solution_includes(%struct.pt_solution* nonnull %escaped53, %union.tree_node* %21) #7, !dbg !3541
  %22 = load %struct.variable_info*, %struct.variable_info** %vi, align 8, !dbg !3542
  call void @llvm.dbg.value(metadata %struct.variable_info* %22, metadata !3435, metadata !DIExpression()), !dbg !3472
  %is_global_var55 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %22, i64 0, i32 1, !dbg !3543
  %bf.load56 = load i8, i8* %is_global_var55, align 4, !dbg !3544
  %bf.shl = shl i8 %call54, 7, !dbg !3544
  %bf.clear57 = and i8 %bf.load56, 127, !dbg !3544
  %bf.set = or i8 %bf.clear57, %bf.shl, !dbg !3544
  store i8 %bf.set, i8* %is_global_var55, align 4, !dbg !3544
  %23 = load %struct.variable_info*, %struct.variable_info** %vi, align 8, !dbg !3545
  call void @llvm.dbg.value(metadata %struct.variable_info* %23, metadata !3435, metadata !DIExpression()), !dbg !3472
  %decl58 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %23, i64 0, i32 7, !dbg !3545
  %24 = bitcast %union.tree_node** %decl58 to %struct.tree_decl_common**, !dbg !3545
  %25 = load %struct.tree_decl_common*, %struct.tree_decl_common** %24, align 8, !dbg !3545
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %25, i64 0, i32 2, !dbg !3545
  %26 = bitcast i40* %decl_flag_1 to i64*, !dbg !3545
  %bf.load59 = load i64, i64* %26, align 8, !dbg !3546
  %27 = and i8 %call54, 1, !dbg !3546
  %bf.value60 = zext i8 %27 to i64, !dbg !3546
  %bf.shl61 = shl nuw nsw i64 %bf.value60, 25, !dbg !3546
  %bf.clear62 = and i64 %bf.load59, -33554433, !dbg !3546
  %bf.set63 = or i64 %bf.clear62, %bf.shl61, !dbg !3546
  store i64 %bf.set63, i64* %26, align 8, !dbg !3546
  br label %for.inc66, !dbg !3545

for.inc66:                                        ; preds = %land.lhs.true, %for.body36, %land.lhs.true45, %if.then50
  %inc = add i32 %i.0, 1, !dbg !3547
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3434, metadata !DIExpression()), !dbg !3472
  br label %for.cond32, !dbg !3548, !llvm.loop !3549

for.cond68:                                       ; preds = %for.cond68.preheader, %for.inc115
  %i.1 = phi i32 [ %inc116, %for.inc115 ], [ 0, %for.cond68.preheader ], !dbg !3551
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !3434, metadata !DIExpression()), !dbg !3472
  %28 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3552
  %gimple_df70 = getelementptr inbounds %struct.function, %struct.function* %28, i64 0, i32 3, !dbg !3552
  %29 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df70, align 8, !dbg !3552
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %29, i64 0, i32 2, !dbg !3552
  %30 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3552
  %tobool71 = icmp eq %struct.VEC_tree_gc* %30, null, !dbg !3552
  br i1 %tobool71, label %cond.end78, label %cond.true72, !dbg !3552

cond.true72:                                      ; preds = %for.cond68
  %base76 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %30, i64 0, i32 0, !dbg !3552
  br label %cond.end78, !dbg !3552

cond.end78:                                       ; preds = %for.cond68, %cond.true72
  %cond79 = phi %struct.VEC_tree_base* [ %base76, %cond.true72 ], [ null, %for.cond68 ], !dbg !3552
  %call80 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond79) #7, !dbg !3552
  %cmp81 = icmp ult i32 %i.1, %call80, !dbg !3553
  br i1 %cmp81, label %for.body83, label %do.body118, !dbg !3527

for.body83:                                       ; preds = %cond.end78
  %31 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3554
  %gimple_df85 = getelementptr inbounds %struct.function, %struct.function* %31, i64 0, i32 3, !dbg !3554
  %32 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df85, align 8, !dbg !3554
  %ssa_names86 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %32, i64 0, i32 2, !dbg !3554
  %33 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names86, align 8, !dbg !3554
  %tobool87 = icmp eq %struct.VEC_tree_gc* %33, null, !dbg !3554
  br i1 %tobool87, label %cond.end94, label %cond.true88, !dbg !3554

cond.true88:                                      ; preds = %for.body83
  %base92 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %33, i64 0, i32 0, !dbg !3554
  br label %cond.end94, !dbg !3554

cond.end94:                                       ; preds = %for.body83, %cond.true88
  %cond95 = phi %struct.VEC_tree_base* [ %base92, %cond.true88 ], [ null, %for.body83 ], !dbg !3554
  %call96 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond95, i32 %i.1) #7, !dbg !3554
  call void @llvm.dbg.value(metadata %union.tree_node* %call96, metadata !3454, metadata !DIExpression()), !dbg !3555
  %tobool97 = icmp eq %union.tree_node* %call96, null, !dbg !3556
  br i1 %tobool97, label %for.inc115, label %land.lhs.true98, !dbg !3558

land.lhs.true98:                                  ; preds = %cond.end94
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3559
  %34 = bitcast %union.tree_node** %type to i64**, !dbg !3559
  %35 = load i64*, i64** %34, align 8, !dbg !3559
  %bf.load100 = load i64, i64* %35, align 8, !dbg !3559
  %bf.cast1021 = and i64 %bf.load100, 65535, !dbg !3559
  %cmp103 = icmp eq i64 %bf.cast1021, 10, !dbg !3559
  br i1 %cmp103, label %if.then113, label %lor.lhs.false, !dbg !3559

lor.lhs.false:                                    ; preds = %land.lhs.true98
  %cmp111 = icmp eq i64 %bf.cast1021, 12, !dbg !3559
  br i1 %cmp111, label %if.then113, label %for.inc115, !dbg !3560

if.then113:                                       ; preds = %lor.lhs.false, %land.lhs.true98
  call fastcc void @find_what_p_points_to(%union.tree_node* nonnull %call96) #7, !dbg !3561
  br label %for.inc115, !dbg !3561

for.inc115:                                       ; preds = %cond.end94, %lor.lhs.false, %if.then113
  %inc116 = add i32 %i.1, 1, !dbg !3562
  call void @llvm.dbg.value(metadata i32 %inc116, metadata !3434, metadata !DIExpression()), !dbg !3472
  br label %for.cond68, !dbg !3563, !llvm.loop !3564

do.body118:                                       ; preds = %cond.end78
  %36 = load i8, i8* @timevar_enable, align 1, !dbg !3566
  %tobool119 = icmp eq i8 %36, 0, !dbg !3566
  br i1 %tobool119, label %do.end123, label %if.then120, !dbg !3569

if.then120:                                       ; preds = %do.body118
  call void @timevar_pop_1(i32 56) #6, !dbg !3566
  br label %do.end123, !dbg !3566

do.end123:                                        ; preds = %do.body118, %if.then120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3570
  ret void, !dbg !3570
}

declare dso_local void @dump_alias_info(%struct._IO_FILE*) local_unnamed_addr #2

declare dso_local void @dump_referenced_vars(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @delete_points_to_sets() unnamed_addr #5 !dbg !3571 {
entry:
  %0 = load %struct.htab*, %struct.htab** @shared_bitmap_table, align 8, !dbg !3574
  tail call void @htab_delete(%struct.htab* %0) #6, !dbg !3575
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3576
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !3576
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3578

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !3579
  %and = and i32 %2, 16, !dbg !3580
  %tobool1 = icmp eq i32 %and, 0, !dbg !3580
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3581

if.then:                                          ; preds = %land.lhs.true
  %3 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 7), align 4, !dbg !3582
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.84, i64 0, i64 0), i32 %3) #6, !dbg !3583
  br label %if.end, !dbg !3583

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %4 = load %struct.pointer_map_t*, %struct.pointer_map_t** @vi_for_tree, align 8, !dbg !3584
  tail call void @pointer_map_destroy(%struct.pointer_map_t* %4) #6, !dbg !3585
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* nonnull @pta_obstack) #6, !dbg !3586
  tail call fastcc void @VEC_constraint_t_heap_free(%struct.VEC_constraint_t_heap** nonnull @constraints) #7, !dbg !3587
  call void @llvm.dbg.value(metadata i32 0, metadata !3573, metadata !DIExpression()), !dbg !3588
  br label %for.cond, !dbg !3589

for.cond:                                         ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end ], !dbg !3591
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3573, metadata !DIExpression()), !dbg !3588
  %5 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !3592
  %size = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %5, i64 0, i32 0, !dbg !3594
  %6 = load i32, i32* %size, align 8, !dbg !3594
  %7 = zext i32 %6 to i64, !dbg !3595
  %cmp = icmp ult i64 %indvars.iv, %7, !dbg !3595
  %complex = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %5, i64 0, i32 15, !dbg !3588
  %8 = load %struct.VEC_constraint_t_heap**, %struct.VEC_constraint_t_heap*** %complex, align 8, !dbg !3588
  br i1 %cmp, label %for.body, label %for.end, !dbg !3596

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %8, i64 %indvars.iv, !dbg !3597
  tail call fastcc void @VEC_constraint_t_heap_free(%struct.VEC_constraint_t_heap** %arrayidx) #7, !dbg !3597
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3598
  br label %for.cond, !dbg !3599, !llvm.loop !3600

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.VEC_constraint_t_heap** [ %8, %for.cond ], !dbg !3588
  %9 = bitcast %struct.VEC_constraint_t_heap** %.lcssa to i8*, !dbg !3602
  tail call void @free(i8* %9) #6, !dbg !3603
  %10 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !3604
  %rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %10, i64 0, i32 5, !dbg !3605
  %11 = bitcast i32** %rep to i8**, !dbg !3605
  %12 = load i8*, i8** %11, align 8, !dbg !3605
  tail call void @free(i8* %12) #6, !dbg !3606
  %13 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !3607
  %succs = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %13, i64 0, i32 1, !dbg !3608
  %14 = bitcast %struct.bitmap_head_def*** %succs to i8**, !dbg !3608
  %15 = load i8*, i8** %14, align 8, !dbg !3608
  tail call void @free(i8* %15) #6, !dbg !3609
  %16 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !3610
  %pe = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %16, i64 0, i32 7, !dbg !3611
  %17 = bitcast i32** %pe to i8**, !dbg !3611
  %18 = load i8*, i8** %17, align 8, !dbg !3611
  tail call void @free(i8* %18) #6, !dbg !3612
  %19 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !3613
  %pe_rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %19, i64 0, i32 8, !dbg !3614
  %20 = bitcast i32** %pe_rep to i8**, !dbg !3614
  %21 = load i8*, i8** %20, align 8, !dbg !3614
  tail call void @free(i8* %21) #6, !dbg !3615
  %22 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !3616
  %indirect_cycles = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %22, i64 0, i32 4, !dbg !3617
  %23 = bitcast i32** %indirect_cycles to i8**, !dbg !3617
  %24 = load i8*, i8** %23, align 8, !dbg !3617
  tail call void @free(i8* %24) #6, !dbg !3618
  %25 = load i8*, i8** bitcast (%struct.constraint_graph** @graph to i8**), align 8, !dbg !3619
  tail call void @free(i8* %25) #6, !dbg !3620
  tail call fastcc void @VEC_varinfo_t_heap_free(%struct.VEC_varinfo_t_heap** nonnull @varmap) #7, !dbg !3621
  %26 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @variable_info_pool, align 8, !dbg !3622
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %26) #6, !dbg !3623
  %27 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @constraint_pool, align 8, !dbg !3624
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %27) #6, !dbg !3625
  ret void, !dbg !3626
}

declare dso_local zeroext i8 @need_ssa_update_p(%struct.function*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_tree_pta() #5 !dbg !3627 {
entry:
  %0 = load i32, i32* @flag_tree_pta, align 4, !dbg !3628
  %conv = trunc i32 %0 to i8, !dbg !3628
  ret i8 %conv, !dbg !3629
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_ipa_pta() #5 !dbg !3630 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !3631
  %tobool = icmp ne i32 %0, 0, !dbg !3631
  %1 = load i32, i32* @flag_ipa_pta, align 4, !dbg !3632
  %tobool1 = icmp ne i32 %1, 0, !dbg !3632
  %or.cond = and i1 %tobool, %tobool1, !dbg !3633
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !3633

land.rhs:                                         ; preds = %entry
  %2 = load %struct.diagnostic_context*, %struct.diagnostic_context** @global_dc, align 8, !dbg !3634
  %arrayidx = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %2, i64 0, i32 1, i64 4, !dbg !3634
  %3 = load i32, i32* %arrayidx, align 8, !dbg !3634
  %tobool2 = icmp eq i32 %3, 0, !dbg !3634
  br i1 %tobool2, label %lor.rhs, label %lor.end, !dbg !3635

lor.rhs:                                          ; preds = %land.rhs
  %arrayidx4 = getelementptr inbounds %struct.diagnostic_context, %struct.diagnostic_context* %2, i64 0, i32 1, i64 5, !dbg !3636
  %4 = load i32, i32* %arrayidx4, align 4, !dbg !3636
  %tobool5 = icmp eq i32 %4, 0, !dbg !3635
  %phitmp2 = zext i1 %tobool5 to i8, !dbg !3635
  br label %lor.end, !dbg !3635

lor.end:                                          ; preds = %land.rhs, %lor.rhs
  %5 = phi i8 [ 0, %land.rhs ], [ %phitmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %6 = phi i8 [ 0, %entry ], [ %5, %lor.end ]
  ret i8 %6, !dbg !3637
}

; Function Attrs: nounwind uwtable
define internal i32 @ipa_pta_execute() #5 !dbg !3638 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp51 = alloca %struct.gimple_stmt_iterator, align 8
  store i1 true, i1* @in_ipa_mode, align 4, !dbg !3862
  tail call fastcc void @init_alias_heapvars() #7, !dbg !3863
  tail call fastcc void @init_alias_vars() #7, !dbg !3864
  br label %for.cond, !dbg !3865

for.cond:                                         ; preds = %for.inc, %entry
  %node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.inc ]
  %node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %node.0.in, align 8, !dbg !3867
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.0, metadata !3640, metadata !DIExpression()), !dbg !3868
  %tobool = icmp eq %struct.cgraph_node* %node.0, null, !dbg !3869
  br i1 %tobool, label %for.end, label %for.body, !dbg !3869

for.body:                                         ; preds = %for.cond
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 0, !dbg !3870
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3870
  %call = tail call zeroext i8 @gimple_has_body_p(%union.tree_node* %0) #6, !dbg !3874
  %tobool1 = icmp eq i8 %call, 0, !dbg !3874
  br i1 %tobool1, label %for.inc, label %lor.lhs.false, !dbg !3875

lor.lhs.false:                                    ; preds = %for.body
  %clone_of = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 12, !dbg !3876
  %1 = load %struct.cgraph_node*, %struct.cgraph_node** %clone_of, align 8, !dbg !3876
  %tobool2 = icmp eq %struct.cgraph_node* %1, null, !dbg !3877
  br i1 %tobool2, label %if.end, label %for.inc, !dbg !3878

if.end:                                           ; preds = %lor.lhs.false
  %externally_visible = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 18, i32 2, !dbg !3879
  %bf.load = load i8, i8* %externally_visible, align 8, !dbg !3879
  %bf.clear = and i8 %bf.load, 2, !dbg !3879
  %tobool3 = icmp eq i8 %bf.clear, 0, !dbg !3881
  br i1 %tobool3, label %if.end5, label %for.inc, !dbg !3882

if.end5:                                          ; preds = %if.end
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3883
  %call7 = tail call i8* @cgraph_node_name(%struct.cgraph_node* nonnull %node.0) #6, !dbg !3884
  %call8 = tail call fastcc i32 @create_function_info_for(%union.tree_node* %2, i8* %call7) #7, !dbg !3885
  br label %for.inc, !dbg !3886

for.inc:                                          ; preds = %if.end, %lor.lhs.false, %for.body, %if.end5
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 3, !dbg !3887
  br label %for.cond, !dbg !3888, !llvm.loop !3889

for.end:                                          ; preds = %for.cond
  %3 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3891
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3892
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp51 to i8*, !dbg !3893
  br label %for.cond9, !dbg !3894

for.cond9:                                        ; preds = %cleanup, %for.end
  %node.1.in = phi %struct.cgraph_node** [ @cgraph_nodes, %for.end ], [ %next66, %cleanup ]
  %node.1 = load %struct.cgraph_node*, %struct.cgraph_node** %node.1.in, align 8, !dbg !3895
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.1, metadata !3640, metadata !DIExpression()), !dbg !3868
  %tobool10 = icmp eq %struct.cgraph_node* %node.1, null, !dbg !3896
  br i1 %tobool10, label %for.end67, label %for.body11, !dbg !3896

for.body11:                                       ; preds = %for.cond9
  %decl12 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1, i64 0, i32 0, !dbg !3897
  %6 = load %union.tree_node*, %union.tree_node** %decl12, align 8, !dbg !3897
  %call13 = call zeroext i8 @gimple_has_body_p(%union.tree_node* %6) #6, !dbg !3899
  %tobool14 = icmp eq i8 %call13, 0, !dbg !3899
  br i1 %tobool14, label %cleanup, label %lor.lhs.false15, !dbg !3900

lor.lhs.false15:                                  ; preds = %for.body11
  %clone_of16 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1, i64 0, i32 12, !dbg !3901
  %7 = load %struct.cgraph_node*, %struct.cgraph_node** %clone_of16, align 8, !dbg !3901
  %tobool17 = icmp eq %struct.cgraph_node* %7, null, !dbg !3902
  br i1 %tobool17, label %if.end19, label %cleanup, !dbg !3903

if.end19:                                         ; preds = %lor.lhs.false15
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3904
  %tobool20 = icmp eq %struct._IO_FILE* %8, null, !dbg !3904
  br i1 %tobool20, label %if.end24, label %if.then21, !dbg !3906

if.then21:                                        ; preds = %if.end19
  %call22 = call i8* @cgraph_node_name(%struct.cgraph_node* nonnull %node.1) #6, !dbg !3907
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.85, i64 0, i64 0), i8* %call22) #6, !dbg !3908
  br label %if.end24, !dbg !3908

if.end24:                                         ; preds = %if.end19, %if.then21
  %9 = bitcast %struct.cgraph_node* %node.1 to %struct.tree_function_decl**, !dbg !3909
  %10 = load %struct.tree_function_decl*, %struct.tree_function_decl** %9, align 8, !dbg !3909
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %10, i64 0, i32 1, !dbg !3909
  %11 = load %struct.function*, %struct.function** %f, align 8, !dbg !3909
  call void @llvm.dbg.value(metadata %struct.function* %11, metadata !3844, metadata !DIExpression()), !dbg !3910
  %12 = load i64, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3911
  call void @push_cfun(%struct.function* %11) #6, !dbg !3912
  %13 = bitcast %struct.cgraph_node* %node.1 to i64*, !dbg !3913
  %14 = load i64, i64* %13, align 8, !dbg !3913
  store i64 %14, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3914
  %externally_visible28 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1, i64 0, i32 18, i32 2, !dbg !3915
  %bf.load29 = load i8, i8* %externally_visible28, align 8, !dbg !3915
  %bf.clear31 = and i8 %bf.load29, 2, !dbg !3915
  %tobool33 = icmp eq i8 %bf.clear31, 0, !dbg !3917
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !3918

if.then34:                                        ; preds = %if.end24
  call fastcc void @intra_create_variable_infos() #7, !dbg !3919
  br label %if.end35, !dbg !3919

if.end35:                                         ; preds = %if.end24, %if.then34
  %cfg = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 1, !dbg !3920
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3920
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 0, !dbg !3920
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3920
  br label %for.cond36, !dbg !3920

for.cond36:                                       ; preds = %for.end59, %if.end35
  %17 = phi %struct.control_flow_graph* [ %15, %if.end35 ], [ %.pre, %for.end59 ], !dbg !3921
  %.pn = phi %struct.basic_block_def* [ %16, %if.end35 ], [ %bb.0, %for.end59 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3922
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3922
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3848, metadata !DIExpression()), !dbg !3910
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %17, i64 0, i32 1, !dbg !3921
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3921
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %18, !dbg !3921
  br i1 %cmp, label %for.end62, label %for.body38, !dbg !3920

for.body38:                                       ; preds = %for.cond36
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3923
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !3924
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #6, !dbg !3924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !3924
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !3924
  br label %for.cond39, !dbg !3925

for.cond39:                                       ; preds = %for.inc49, %for.body38
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3850, metadata !DIExpression(DW_OP_deref)), !dbg !3891
  %call40 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3926
  %tobool41 = icmp eq i8 %call40, 0, !dbg !3927
  br i1 %tobool41, label %for.body42, label %for.end50, !dbg !3928

for.body42:                                       ; preds = %for.cond39
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3850, metadata !DIExpression(DW_OP_deref)), !dbg !3891
  %call43 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3929
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call43, metadata !3854, metadata !DIExpression()), !dbg !3930
  %call44 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call43) #7, !dbg !3931
  %call45 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call44) #6, !dbg !3933
  %tobool46 = icmp eq i8 %call45, 0, !dbg !3933
  br i1 %tobool46, label %for.inc49, label %if.then47, !dbg !3934

if.then47:                                        ; preds = %for.body42
  call fastcc void @find_func_aliases(%union.gimple_statement_d* %call43) #7, !dbg !3935
  br label %for.inc49, !dbg !3935

for.inc49:                                        ; preds = %for.body42, %if.then47
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3850, metadata !DIExpression(DW_OP_deref)), !dbg !3891
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3936
  br label %for.cond39, !dbg !3937, !llvm.loop !3938

for.end50:                                        ; preds = %for.cond39
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !3940
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp51, %struct.basic_block_def* %bb.0) #7, !dbg !3940
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !3940
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !3940
  br label %for.cond52, !dbg !3941

for.cond52:                                       ; preds = %for.body56, %for.end50
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3850, metadata !DIExpression(DW_OP_deref)), !dbg !3891
  %call53 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3942
  %tobool54 = icmp eq i8 %call53, 0, !dbg !3943
  br i1 %tobool54, label %for.body56, label %for.end59, !dbg !3944

for.body56:                                       ; preds = %for.cond52
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3850, metadata !DIExpression(DW_OP_deref)), !dbg !3891
  %call57 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3945
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call57, metadata !3858, metadata !DIExpression()), !dbg !3946
  call fastcc void @find_func_aliases(%union.gimple_statement_d* %call57) #7, !dbg !3947
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3850, metadata !DIExpression(DW_OP_deref)), !dbg !3891
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3948
  br label %for.cond52, !dbg !3949, !llvm.loop !3950

for.end59:                                        ; preds = %for.cond52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3952
  %.pre = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3921
  br label %for.cond36, !dbg !3921, !llvm.loop !3953

for.end62:                                        ; preds = %for.cond36
  store i64 %12, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !3955
  call void @pop_cfun() #6, !dbg !3956
  br label %cleanup, !dbg !3957

cleanup:                                          ; preds = %lor.lhs.false15, %for.body11, %for.end62
  %next66 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1, i64 0, i32 3, !dbg !3958
  br label %for.cond9, !dbg !3959, !llvm.loop !3960

for.end67:                                        ; preds = %for.cond9
  call fastcc void @solve_constraints() #7, !dbg !3962
  call fastcc void @delete_points_to_sets() #7, !dbg !3963
  store i1 false, i1* @in_ipa_mode, align 4, !dbg !3964
  ret i32 0, !dbg !3965
}

declare dso_local void @gt_ggc_mx_tree_map(i8*) #2

declare dso_local void @gt_pch_nx_tree_map(i8*) #2

declare dso_local i32 @tree_map_base_marked_p(i8*) #2

declare dso_local void @gt_ggc_m_P8tree_map4htab(i8*) #2

declare dso_local void @gt_pch_n_P8tree_map4htab(i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.variable_info* @get_varinfo(i32 %n) unnamed_addr #0 !dbg !3966 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, metadata !3970, metadata !DIExpression()), !dbg !3971
  %0 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !3972
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %0, i64 0, i32 0, !dbg !3972
  %call = tail call fastcc %struct.variable_info* @VEC_varinfo_t_base_index(%struct.VEC_varinfo_t_base* %base, i32 %n) #7, !dbg !3972
  ret %struct.variable_info* %call, !dbg !3973
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.variable_info* @VEC_varinfo_t_base_index(%struct.VEC_varinfo_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3974 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_varinfo_t_base* %vec_, metadata !3980, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3981, metadata !DIExpression()), !dbg !3982
  br label %land.end, !dbg !3983

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3983
  %arrayidx = getelementptr inbounds %struct.VEC_varinfo_t_base, %struct.VEC_varinfo_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3983
  %0 = load %struct.variable_info*, %struct.variable_info** %arrayidx, align 8, !dbg !3983
  ret %struct.variable_info* %0, !dbg !3983
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constraint_t_base_iterate(%struct.VEC_constraint_t_base* %vec_, i32 %ix_, %struct.constraint** %ptr) unnamed_addr #0 !dbg !3984 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_base* %vec_, metadata !3991, metadata !DIExpression()), !dbg !3994
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3992, metadata !DIExpression()), !dbg !3994
  call void @llvm.dbg.value(metadata %struct.constraint** %ptr, metadata !3993, metadata !DIExpression()), !dbg !3994
  %tobool = icmp eq %struct.VEC_constraint_t_base* %vec_, null, !dbg !3995
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3995

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constraint_t_base, %struct.VEC_constraint_t_base* %vec_, i64 0, i32 0, !dbg !3995
  %0 = load i32, i32* %num, align 8, !dbg !3995
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3995
  br i1 %cmp, label %if.then, label %if.else, !dbg !3997

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3998
  %arrayidx = getelementptr inbounds %struct.VEC_constraint_t_base, %struct.VEC_constraint_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3998
  %1 = load %struct.constraint*, %struct.constraint** %arrayidx, align 8, !dbg !3998
  br label %return, !dbg !3998

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4000

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.constraint* [ null, %if.else ], [ %1, %if.then ], !dbg !4002
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4002
  store %struct.constraint* %storemerge, %struct.constraint** %ptr, align 8, !dbg !4002
  ret i32 %retval.0, !dbg !3997
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %vec_) unnamed_addr #0 !dbg !4003 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_varinfo_t_base* %vec_, metadata !4007, metadata !DIExpression()), !dbg !4008
  %tobool = icmp eq %struct.VEC_varinfo_t_base* %vec_, null, !dbg !4009
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4009

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_varinfo_t_base, %struct.VEC_varinfo_t_base* %vec_, i64 0, i32 0, !dbg !4009
  %0 = load i32, i32* %num, align 8, !dbg !4009
  br label %cond.end, !dbg !4009

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4009
  ret i32 %cond, !dbg !4009
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_constraint_edge(%struct._IO_FILE* %file, %struct.constraint* %c) unnamed_addr #5 !dbg !4010 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !4012, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata %struct.constraint* %c, metadata !4013, metadata !DIExpression()), !dbg !4018
  %type = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 0, !dbg !4019
  %0 = load i32, i32* %type, align 8, !dbg !4019
  %cmp = icmp eq i32 %0, 2, !dbg !4020
  br i1 %cmp, label %if.end27, label %if.then, !dbg !4021

if.then:                                          ; preds = %entry
  %var = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 1, !dbg !4022
  %1 = load i32, i32* %var, align 4, !dbg !4022
  %call = tail call fastcc %struct.variable_info* @get_varinfo(i32 %1) #7, !dbg !4023
  %name = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 6, !dbg !4024
  %2 = load i8*, i8** %name, align 8, !dbg !4024
  call void @llvm.dbg.value(metadata i8* %2, metadata !4014, metadata !DIExpression()), !dbg !4025
  %var2 = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 1, !dbg !4026
  %3 = load i32, i32* %var2, align 4, !dbg !4026
  %call3 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %3) #7, !dbg !4027
  %name4 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call3, i64 0, i32 6, !dbg !4028
  %4 = load i8*, i8** %name4, align 8, !dbg !4028
  call void @llvm.dbg.value(metadata i8* %4, metadata !4017, metadata !DIExpression()), !dbg !4025
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0), i8* %2, i8* %4) #6, !dbg !4029
  %type7 = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 0, !dbg !4030
  %5 = load i32, i32* %type7, align 8, !dbg !4030
  %cmp8 = icmp eq i32 %5, 1, !dbg !4032
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !4033

if.then9:                                         ; preds = %if.then
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !4034
  br label %if.end27, !dbg !4034

if.else:                                          ; preds = %if.then
  %6 = load i32, i32* %type, align 8, !dbg !4035
  %cmp13 = icmp eq i32 %6, 1, !dbg !4037
  br i1 %cmp13, label %if.then14, label %if.else16, !dbg !4038

if.then14:                                        ; preds = %if.else
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !4039
  br label %if.end27, !dbg !4039

if.else16:                                        ; preds = %if.else
  %offset = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 2, !dbg !4040
  %7 = load i64, i64* %offset, align 8, !dbg !4040
  %offset19 = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 2, !dbg !4043
  %8 = load i64, i64* %offset19, align 8, !dbg !4043
  %cmp20 = icmp eq i64 %7, %8, !dbg !4044
  br i1 %cmp20, label %if.else23, label %if.then21, !dbg !4045

if.then21:                                        ; preds = %if.else16
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !4046
  br label %if.end27, !dbg !4046

if.else23:                                        ; preds = %if.else16
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !4047
  br label %if.end27

if.end27:                                         ; preds = %entry, %if.then9, %if.then21, %if.else23, %if.then14
  ret void, !dbg !4048
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find(i32 %node) unnamed_addr #5 !dbg !4049 {
entry:
  call void @llvm.dbg.value(metadata i32 %node, metadata !4053, metadata !DIExpression()), !dbg !4054
  %0 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !4055
  %size = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %0, i64 0, i32 0, !dbg !4055
  %1 = load i32, i32* %size, align 8, !dbg !4055
  %cmp = icmp ugt i32 %1, %node, !dbg !4055
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4055

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 520, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4055
  %.pre = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !4056
  br label %cond.end, !dbg !4055

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi %struct.constraint_graph* [ %0, %entry ], [ %.pre, %cond.true ], !dbg !4056
  %rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %2, i64 0, i32 5, !dbg !4058
  %3 = load i32*, i32** %rep, align 8, !dbg !4058
  %idxprom = zext i32 %node to i64, !dbg !4056
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !4056
  %4 = load i32, i32* %arrayidx, align 4, !dbg !4056
  %cmp1 = icmp eq i32 %4, %node, !dbg !4059
  br i1 %cmp1, label %return, label %if.then, !dbg !4060

if.then:                                          ; preds = %cond.end
  %call = tail call fastcc i32 @find(i32 %4) #7, !dbg !4061
  %5 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !4062
  %rep5 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %5, i64 0, i32 5, !dbg !4063
  %6 = load i32*, i32** %rep5, align 8, !dbg !4063
  %arrayidx7 = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !4062
  store i32 %call, i32* %arrayidx7, align 4, !dbg !4064
  ret i32 %call, !dbg !4065

return:                                           ; preds = %cond.end
  ret i32 %node, !dbg !4065
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @pt_solution_empty_p(%struct.pt_solution* %pt) unnamed_addr #5 !dbg !4066 {
entry:
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt, metadata !4068, metadata !DIExpression()), !dbg !4069
  %0 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 0, !dbg !4070
  %bf.load = load i8, i8* %0, align 8, !dbg !4070
  %bf.clear = and i8 %bf.load, 1, !dbg !4070
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !4072
  br i1 %tobool, label %lor.lhs.false, label %return, !dbg !4073

lor.lhs.false:                                    ; preds = %entry
  %bf.clear2 = and i8 %bf.load, 2, !dbg !4074
  %tobool4 = icmp eq i8 %bf.clear2, 0, !dbg !4075
  br i1 %tobool4, label %if.end, label %return, !dbg !4076

if.end:                                           ; preds = %lor.lhs.false
  %vars = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 1, !dbg !4077
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %vars, align 8, !dbg !4077
  %tobool5 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !4079
  br i1 %tobool5, label %if.end9, label %land.lhs.true, !dbg !4080

land.lhs.true:                                    ; preds = %if.end
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %1, i64 0, i32 0, !dbg !4081
  %2 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !4081
  %tobool7 = icmp eq %struct.bitmap_element_def* %2, null, !dbg !4081
  br i1 %tobool7, label %if.end9, label %return, !dbg !4082

if.end9:                                          ; preds = %land.lhs.true, %if.end
  %bf.clear12 = and i8 %bf.load, 4, !dbg !4083
  %tobool14 = icmp eq i8 %bf.clear12, 0, !dbg !4085
  br i1 %tobool14, label %if.end18, label %land.lhs.true15, !dbg !4086

land.lhs.true15:                                  ; preds = %if.end9
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4087
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 3, !dbg !4088
  %4 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4088
  %escaped = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %4, i64 0, i32 4, !dbg !4089
  %call = tail call fastcc zeroext i8 @pt_solution_empty_p(%struct.pt_solution* nonnull %escaped) #7, !dbg !4090
  %tobool16 = icmp eq i8 %call, 0, !dbg !4090
  br i1 %tobool16, label %return, label %if.end18, !dbg !4091

if.end18:                                         ; preds = %land.lhs.true15, %if.end9
  br label %return, !dbg !4092

return:                                           ; preds = %land.lhs.true, %land.lhs.true15, %lor.lhs.false, %entry, %if.end18
  %retval.0 = phi i8 [ 1, %if.end18 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true15 ], !dbg !4069
  ret i8 %retval.0, !dbg !4093
}

declare dso_local void @timevar_push_1(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_alias_vars() unnamed_addr #5 !dbg !4094 {
entry:
  %0 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4095
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %0, i64 95, i32 1, !dbg !4095
  %1 = load i32, i32* %value, align 8, !dbg !4095
  %cmp = icmp ugt i32 %1, 1, !dbg !4096
  %conv2 = zext i1 %cmp to i8, !dbg !4097
  store i8 %conv2, i8* @use_field_sensitive, align 1, !dbg !4098
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* nonnull @pta_obstack) #6, !dbg !4099
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* nonnull @oldpta_obstack) #6, !dbg !4100
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* nonnull @predbitmap_obstack) #6, !dbg !4101
  %call = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.43, i64 0, i64 0), i64 32, i64 30) #6, !dbg !4102
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** @constraint_pool, align 8, !dbg !4103
  %call3 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i64 0, i64 0), i64 72, i64 30) #6, !dbg !4104
  store %struct.alloc_pool_def* %call3, %struct.alloc_pool_def** @variable_info_pool, align 8, !dbg !4105
  %call4 = tail call fastcc %struct.VEC_constraint_t_heap* @VEC_constraint_t_heap_alloc(i32 8) #7, !dbg !4106
  store %struct.VEC_constraint_t_heap* %call4, %struct.VEC_constraint_t_heap** @constraints, align 8, !dbg !4107
  %call5 = tail call fastcc %struct.VEC_varinfo_t_heap* @VEC_varinfo_t_heap_alloc(i32 8) #7, !dbg !4108
  store %struct.VEC_varinfo_t_heap* %call5, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !4109
  %call6 = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !4110
  store %struct.pointer_map_t* %call6, %struct.pointer_map_t** @vi_for_tree, align 8, !dbg !4111
  %call7 = tail call i8* @memset(i8* bitcast (%struct.constraint_stats* @stats to i8*), i32 0, i64 32) #6, !dbg !4112
  %call8 = tail call %struct.htab* @htab_create(i64 511, i32 (i8*)* nonnull @shared_bitmap_hash, i32 (i8*, i8*)* nonnull @shared_bitmap_eq, void (i8*)* nonnull @free) #6, !dbg !4113
  store %struct.htab* %call8, %struct.htab** @shared_bitmap_table, align 8, !dbg !4114
  tail call fastcc void @init_base_vars() #7, !dbg !4115
  ret void, !dbg !4116
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_alias_heapvars() unnamed_addr #5 !dbg !4117 {
entry:
  %0 = load %struct.htab*, %struct.htab** @heapvar_for_stmt, align 8, !dbg !4118
  %tobool = icmp eq %struct.htab* %0, null, !dbg !4118
  br i1 %tobool, label %if.then, label %if.end, !dbg !4120

if.then:                                          ; preds = %entry
  %call = tail call %struct.htab* @htab_create_alloc(i64 11, i32 (i8*)* nonnull @tree_map_hash, i32 (i8*, i8*)* nonnull @heapvar_map_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !4121
  store %struct.htab* %call, %struct.htab** @heapvar_for_stmt, align 8, !dbg !4122
  br label %if.end, !dbg !4123

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4124
}

; Function Attrs: nounwind uwtable
define internal fastcc void @intra_create_variable_infos() unnamed_addr #5 !dbg !4125 {
entry:
  %lhsc = alloca %struct.constraint_expr, align 8
  %rhsc = alloca %struct.constraint_expr, align 8
  %0 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !4150
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %0, i64 0, i32 2, !dbg !4150
  %1 = bitcast %struct.constraint_expr* %lhsc to i8*, !dbg !4151
  %2 = bitcast %struct.constraint_expr* %rhsc to i8*, !dbg !4151
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhsc, i64 0, i32 1, !dbg !4151
  %type44 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhsc, i64 0, i32 0, !dbg !4151
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhsc, i64 0, i32 2, !dbg !4151
  %var47 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 1, !dbg !4151
  %type48 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 0, !dbg !4151
  %offset49 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 2, !dbg !4151
  %3 = bitcast %struct.constraint_expr* %lhsc to i64*, !dbg !4151
  %4 = bitcast %struct.constraint_expr* %rhsc to i64*, !dbg !4151
  br label %for.cond, !dbg !4152

for.cond:                                         ; preds = %cleanup, %entry
  %t.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %cleanup ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !4153
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !4127, metadata !DIExpression()), !dbg !4154
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !4155
  br i1 %tobool, label %for.end95, label %for.body, !dbg !4155

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc zeroext i8 @could_have_pointers(%union.tree_node* nonnull %t.0) #7, !dbg !4156
  %tobool1 = icmp eq i8 %call, 0, !dbg !4156
  br i1 %tobool1, label %cleanup, label %if.end, !dbg !4158

if.end:                                           ; preds = %for.body
  %decl_by_reference_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4159
  %5 = bitcast i40* %decl_by_reference_flag to i64*, !dbg !4159
  %bf.load = load i64, i64* %5, align 8, !dbg !4159
  %bf.cast2 = and i64 %bf.load, 268435456, !dbg !4159
  %tobool2 = icmp eq i64 %bf.cast2, 0, !dbg !4159
  br i1 %tobool2, label %if.end54, label %land.lhs.true, !dbg !4160

land.lhs.true:                                    ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4161
  %6 = bitcast %union.tree_node** %type to i64**, !dbg !4161
  %7 = load i64*, i64** %6, align 8, !dbg !4161
  %bf.load3 = load i64, i64* %7, align 8, !dbg !4161
  %bf.cast55 = and i64 %bf.load3, 65535, !dbg !4161
  %cmp = icmp eq i64 %bf.cast55, 10, !dbg !4161
  %8 = bitcast i64* %7 to %struct.tree_type*, !dbg !4161
  br i1 %cmp, label %land.lhs.true13, label %lor.lhs.false, !dbg !4161

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp12 = icmp eq i64 %bf.cast55, 12, !dbg !4161
  br i1 %cmp12, label %land.lhs.true13, label %if.end54, !dbg !4162

land.lhs.true13:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 6, !dbg !4163
  %bf.load17 = load i32, i32* %restrict_flag, align 4, !dbg !4163
  %bf.clear19 = and i32 %bf.load17, 8192, !dbg !4163
  %tobool20 = icmp eq i32 %bf.clear19, 0, !dbg !4163
  br i1 %tobool20, label %if.end54, label %if.then21, !dbg !4164

if.then21:                                        ; preds = %land.lhs.true13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4165
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4165
  %call22 = tail call fastcc %union.tree_node* @heapvar_lookup(%union.tree_node* nonnull %t.0, i64 0) #7, !dbg !4166
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !4137, metadata !DIExpression()), !dbg !4151
  %cmp23 = icmp eq %union.tree_node* %call22, null, !dbg !4167
  br i1 %cmp23, label %if.then24, label %if.end37, !dbg !4168

if.then24:                                        ; preds = %if.then21
  %9 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !4169
  %10 = load %struct.tree_common*, %struct.tree_common** %9, align 8, !dbg !4169
  %type28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !4169
  %11 = load %union.tree_node*, %union.tree_node** %type28, align 8, !dbg !4169
  %call29 = tail call %union.tree_node* @create_tmp_var_raw(%union.tree_node* %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i64 0, i64 0)) #6, !dbg !4170
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !4137, metadata !DIExpression()), !dbg !4151
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4171
  %12 = bitcast i40* %decl_flag_1 to i64*, !dbg !4171
  %bf.load31 = load i64, i64* %12, align 8, !dbg !4172
  %bf.set = or i64 %bf.load31, 33554432, !dbg !4172
  store i64 %bf.set, i64* %12, align 8, !dbg !4172
  tail call fastcc void @heapvar_insert(%union.tree_node* nonnull %t.0, i64 0, %union.tree_node* %call29) #7, !dbg !4173
  %call33 = tail call fastcc %struct.var_ann_d* @get_var_ann(%union.tree_node* %call29) #7, !dbg !4174
  call void @llvm.dbg.value(metadata %struct.var_ann_d* %call33, metadata !4138, metadata !DIExpression()), !dbg !4175
  %13 = getelementptr inbounds %struct.var_ann_d, %struct.var_ann_d* %call33, i64 0, i32 0, !dbg !4176
  %bf.load34 = load i8, i8* %13, align 8, !dbg !4177
  %bf.set36 = or i8 %bf.load34, 16, !dbg !4177
  store i8 %bf.set36, i8* %13, align 8, !dbg !4177
  br label %if.end37, !dbg !4178

if.end37:                                         ; preds = %if.then24, %if.then21
  %heapvar.0 = phi %union.tree_node* [ %call29, %if.then24 ], [ %call22, %if.then21 ], !dbg !4151
  call void @llvm.dbg.value(metadata %union.tree_node* %heapvar.0, metadata !4137, metadata !DIExpression()), !dbg !4151
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4179
  %call38 = tail call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %14) #7, !dbg !4181
  %tobool39 = icmp eq %struct.htab* %call38, null, !dbg !4181
  br i1 %tobool39, label %if.end42, label %if.then40, !dbg !4182

if.then40:                                        ; preds = %if.end37
  %call41 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %heapvar.0) #6, !dbg !4183
  br label %if.end42, !dbg !4183

if.end42:                                         ; preds = %if.end37, %if.then40
  %call43 = tail call fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* nonnull %t.0) #7, !dbg !4184
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call43, i64 0, i32 0, !dbg !4185
  %15 = load i32, i32* %id, align 8, !dbg !4185
  store i32 %15, i32* %var, align 4, !dbg !4186
  store i32 0, i32* %type44, align 8, !dbg !4187
  store i64 0, i64* %offset, align 8, !dbg !4188
  %call45 = tail call fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* %heapvar.0) #7, !dbg !4189
  call void @llvm.dbg.value(metadata %struct.variable_info* %call45, metadata !4136, metadata !DIExpression()), !dbg !4151
  %id46 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call45, i64 0, i32 0, !dbg !4190
  %16 = load i32, i32* %id46, align 8, !dbg !4190
  store i32 %16, i32* %var47, align 4, !dbg !4191
  store i32 2, i32* %type48, align 8, !dbg !4192
  store i64 0, i64* %offset49, align 8, !dbg !4193
  %17 = load i64, i64* %3, align 8, !dbg !4194
  %18 = load i64, i64* %4, align 8, !dbg !4194
  %call50 = tail call fastcc %struct.constraint* @new_constraint(i64 %17, i64 0, i64 %18, i64 0) #7, !dbg !4194
  tail call fastcc void @process_constraint(%struct.constraint* %call50) #7, !dbg !4195
  %is_restrict_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call45, i64 0, i32 1, !dbg !4196
  %bf.load51 = load i8, i8* %is_restrict_var, align 4, !dbg !4197
  %bf.set53 = or i8 %bf.load51, 32, !dbg !4197
  store i8 %bf.set53, i8* %is_restrict_var, align 4, !dbg !4197
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4198
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4198
  br label %cleanup

if.end54:                                         ; preds = %land.lhs.true13, %if.end, %lor.lhs.false
  %call55 = tail call fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* nonnull %t.0) #7, !dbg !4199
  call void @llvm.dbg.value(metadata %struct.variable_info* %call55, metadata !4128, metadata !DIExpression()), !dbg !4201
  br label %for.cond56, !dbg !4202

for.cond56:                                       ; preds = %for.inc, %if.end54
  %p.0 = phi %struct.variable_info* [ %call55, %if.end54 ], [ %19, %for.inc ], !dbg !4203
  call void @llvm.dbg.value(metadata %struct.variable_info* %p.0, metadata !4128, metadata !DIExpression()), !dbg !4201
  %tobool57 = icmp eq %struct.variable_info* %p.0, null, !dbg !4204
  br i1 %tobool57, label %for.end, label %for.body58, !dbg !4204

for.body58:                                       ; preds = %for.cond56
  %may_have_pointers = getelementptr inbounds %struct.variable_info, %struct.variable_info* %p.0, i64 0, i32 1, !dbg !4205
  %bf.load59 = load i8, i8* %may_have_pointers, align 4, !dbg !4205
  %bf.clear61 = and i8 %bf.load59, 64, !dbg !4205
  %tobool63 = icmp eq i8 %bf.clear61, 0, !dbg !4208
  br i1 %tobool63, label %for.inc, label %if.then64, !dbg !4209

if.then64:                                        ; preds = %for.body58
  tail call fastcc void @make_constraint_from(%struct.variable_info* nonnull %p.0, i32 4) #7, !dbg !4210
  br label %for.inc, !dbg !4210

for.inc:                                          ; preds = %for.body58, %if.then64
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %p.0, i64 0, i32 2, !dbg !4211
  %19 = load %struct.variable_info*, %struct.variable_info** %next, align 8, !dbg !4211
  call void @llvm.dbg.value(metadata %struct.variable_info* %19, metadata !4128, metadata !DIExpression()), !dbg !4201
  br label %for.cond56, !dbg !4212, !llvm.loop !4213

for.end:                                          ; preds = %for.cond56
  %type67 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4215
  %20 = bitcast %union.tree_node** %type67 to i64**, !dbg !4215
  %21 = load i64*, i64** %20, align 8, !dbg !4215
  %bf.load69 = load i64, i64* %21, align 8, !dbg !4215
  %bf.cast713 = and i64 %bf.load69, 65535, !dbg !4215
  %cmp72 = icmp eq i64 %bf.cast713, 10, !dbg !4215
  %22 = bitcast i64* %21 to %struct.tree_type*, !dbg !4215
  br i1 %cmp72, label %land.lhs.true81, label %lor.lhs.false73, !dbg !4215

lor.lhs.false73:                                  ; preds = %for.end
  %cmp80 = icmp eq i64 %bf.cast713, 12, !dbg !4215
  br i1 %cmp80, label %land.lhs.true81, label %cleanup, !dbg !4217

land.lhs.true81:                                  ; preds = %lor.lhs.false73, %for.end
  %restrict_flag85 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %22, i64 0, i32 6, !dbg !4218
  %bf.load86 = load i32, i32* %restrict_flag85, align 4, !dbg !4218
  %bf.clear88 = and i32 %bf.load86, 8192, !dbg !4218
  %tobool89 = icmp eq i32 %bf.clear88, 0, !dbg !4218
  br i1 %tobool89, label %cleanup, label %if.then90, !dbg !4219

if.then90:                                        ; preds = %land.lhs.true81
  %call91 = tail call fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* nonnull %t.0) #7, !dbg !4220
  tail call fastcc void @make_constraint_from_restrict(%struct.variable_info* %call91, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i64 0, i64 0)) #7, !dbg !4221
  br label %cleanup, !dbg !4221

cleanup:                                          ; preds = %land.lhs.true81, %for.body, %lor.lhs.false73, %if.then90, %if.end42
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4222
  br label %for.cond, !dbg !4223, !llvm.loop !4224

for.end95:                                        ; preds = %for.cond
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4226
  %decl = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, i32 6, !dbg !4226
  %24 = bitcast %union.tree_node** %decl to %struct.tree_decl_non_common**, !dbg !4226
  %25 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** %24, align 8, !dbg !4226
  %result = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %25, i64 0, i32 3, !dbg !4226
  %26 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !4226
  %tobool98 = icmp eq %union.tree_node* %26, null, !dbg !4226
  br i1 %tobool98, label %if.end124, label %land.lhs.true99, !dbg !4227

land.lhs.true99:                                  ; preds = %for.end95
  %decl_by_reference_flag105 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4228
  %27 = bitcast i40* %decl_by_reference_flag105 to i64*, !dbg !4228
  %bf.load106 = load i64, i64* %27, align 8, !dbg !4228
  %bf.cast1091 = and i64 %bf.load106, 268435456, !dbg !4228
  %tobool110 = icmp eq i64 %bf.cast1091, 0, !dbg !4228
  br i1 %tobool110, label %if.end124, label %if.then111, !dbg !4229

if.then111:                                       ; preds = %land.lhs.true99
  %call117 = tail call fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* nonnull %26) #7, !dbg !4230
  call void @llvm.dbg.value(metadata %struct.variable_info* %call117, metadata !4145, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata %struct.variable_info* %call117, metadata !4142, metadata !DIExpression()), !dbg !4231
  br label %for.cond118, !dbg !4232

for.cond118:                                      ; preds = %for.body120, %if.then111
  %p112.0 = phi %struct.variable_info* [ %call117, %if.then111 ], [ %28, %for.body120 ], !dbg !4234
  call void @llvm.dbg.value(metadata %struct.variable_info* %p112.0, metadata !4142, metadata !DIExpression()), !dbg !4231
  %tobool119 = icmp eq %struct.variable_info* %p112.0, null, !dbg !4235
  br i1 %tobool119, label %if.end124.loopexit, label %for.body120, !dbg !4235

for.body120:                                      ; preds = %for.cond118
  tail call fastcc void @make_constraint_from(%struct.variable_info* nonnull %p112.0, i32 4) #7, !dbg !4236
  %next122 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %p112.0, i64 0, i32 2, !dbg !4238
  %28 = load %struct.variable_info*, %struct.variable_info** %next122, align 8, !dbg !4238
  call void @llvm.dbg.value(metadata %struct.variable_info* %28, metadata !4142, metadata !DIExpression()), !dbg !4231
  br label %for.cond118, !dbg !4239, !llvm.loop !4240

if.end124.loopexit:                               ; preds = %for.cond118
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4242
  br label %if.end124, !dbg !4242

if.end124:                                        ; preds = %if.end124.loopexit, %land.lhs.true99, %for.end95
  %29 = phi %struct.function* [ %.pre, %if.end124.loopexit ], [ %23, %land.lhs.true99 ], [ %23, %for.end95 ], !dbg !4242
  %static_chain_decl = getelementptr inbounds %struct.function, %struct.function* %29, i64 0, i32 7, !dbg !4243
  %30 = load %union.tree_node*, %union.tree_node** %static_chain_decl, align 8, !dbg !4243
  %cmp126 = icmp eq %union.tree_node* %30, null, !dbg !4244
  br i1 %cmp126, label %if.end138, label %if.then127, !dbg !4245

if.then127:                                       ; preds = %if.end124
  %call131 = tail call fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* nonnull %30) #7, !dbg !4246
  call void @llvm.dbg.value(metadata %struct.variable_info* %call131, metadata !4149, metadata !DIExpression()), !dbg !4247
  call void @llvm.dbg.value(metadata %struct.variable_info* %call131, metadata !4146, metadata !DIExpression()), !dbg !4247
  br label %for.cond132, !dbg !4248

for.cond132:                                      ; preds = %for.body134, %if.then127
  %p128.0 = phi %struct.variable_info* [ %call131, %if.then127 ], [ %31, %for.body134 ], !dbg !4250
  call void @llvm.dbg.value(metadata %struct.variable_info* %p128.0, metadata !4146, metadata !DIExpression()), !dbg !4247
  %tobool133 = icmp eq %struct.variable_info* %p128.0, null, !dbg !4251
  br i1 %tobool133, label %if.end138.loopexit, label %for.body134, !dbg !4251

for.body134:                                      ; preds = %for.cond132
  tail call fastcc void @make_constraint_from(%struct.variable_info* nonnull %p128.0, i32 4) #7, !dbg !4252
  %next136 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %p128.0, i64 0, i32 2, !dbg !4254
  %31 = load %struct.variable_info*, %struct.variable_info** %next136, align 8, !dbg !4254
  call void @llvm.dbg.value(metadata %struct.variable_info* %31, metadata !4146, metadata !DIExpression()), !dbg !4247
  br label %for.cond132, !dbg !4255, !llvm.loop !4256

if.end138.loopexit:                               ; preds = %for.cond132
  br label %if.end138, !dbg !4258

if.end138:                                        ; preds = %if.end138.loopexit, %if.end124
  ret void, !dbg !4258
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4259 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4263, metadata !DIExpression()), !dbg !4264
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4265
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4265
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !4266
  %conv1 = zext i1 %cmp to i8, !dbg !4267
  ret i8 %conv1, !dbg !4268
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4269 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4273, metadata !DIExpression()), !dbg !4274
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4275
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4275
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !4276
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4276
  ret %union.gimple_statement_d* %1, !dbg !4277
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4278 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4283, metadata !DIExpression()), !dbg !4284
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4285
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !4285
  ret %union.tree_node* %0, !dbg !4286
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_func_aliases(%union.gimple_statement_d* %origt) unnamed_addr #5 !dbg !4287 {
entry:
  %lhsc = alloca %struct.VEC_ce_s_heap*, align 8
  %rhsc = alloca %struct.VEC_ce_s_heap*, align 8
  %c = alloca %struct.constraint_expr*, align 8
  %lhsp = alloca %struct.constraint_expr*, align 8
  %ac = alloca %struct.constraint_expr, align 8
  %rhsc179 = alloca %struct.VEC_ce_s_heap*, align 8
  %lhs = alloca %struct.constraint_expr, align 8
  %rhs = alloca %struct.constraint_expr, align 8
  %lhsp280 = alloca %struct.constraint_expr*, align 8
  %temp = alloca %struct.constraint_expr, align 8
  %constraint = alloca i8*, align 8
  %allows_mem = alloca i8, align 1
  %allows_reg = alloca i8, align 1
  %is_inout = alloca i8, align 1
  %lhsc607 = alloca %struct.VEC_ce_s_heap*, align 8
  %rhsc608 = alloca %struct.constraint_expr, align 8
  %lhsp609 = alloca %struct.constraint_expr*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %origt, metadata !4291, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %origt, metadata !4292, metadata !DIExpression()), !dbg !4382
  %0 = bitcast %struct.VEC_ce_s_heap** %lhsc to i8*, !dbg !4383
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4383
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* null, metadata !4293, metadata !DIExpression()), !dbg !4382
  store %struct.VEC_ce_s_heap* null, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !4384
  %1 = bitcast %struct.VEC_ce_s_heap** %rhsc to i8*, !dbg !4385
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4385
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* null, metadata !4294, metadata !DIExpression()), !dbg !4382
  store %struct.VEC_ce_s_heap* null, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !4386
  %2 = bitcast %struct.constraint_expr** %c to i8*, !dbg !4387
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4387
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %origt) #7, !dbg !4388
  %cmp = icmp eq i32 %call, 16, !dbg !4389
  br i1 %cmp, label %if.then, label %if.else, !dbg !4390

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %origt) #7, !dbg !4391
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4391
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !4391
  %4 = load i64*, i64** %3, align 8, !dbg !4391
  %bf.load = load i64, i64* %4, align 8, !dbg !4391
  %bf.cast20 = and i64 %bf.load, 65535, !dbg !4391
  %cmp2 = icmp eq i64 %bf.cast20, 15, !dbg !4391
  br i1 %cmp2, label %cond.true, label %lor.lhs.false, !dbg !4391

lor.lhs.false:                                    ; preds = %if.then
  %call3 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %origt) #7, !dbg !4391
  %type5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4391
  %5 = bitcast %union.tree_node** %type5 to i64**, !dbg !4391
  %6 = load i64*, i64** %5, align 8, !dbg !4391
  %bf.load7 = load i64, i64* %6, align 8, !dbg !4391
  %bf.cast921 = and i64 %bf.load7, 65535, !dbg !4391
  %cmp10 = icmp eq i64 %bf.cast921, 16, !dbg !4391
  br i1 %cmp10, label %cond.true, label %lor.lhs.false11, !dbg !4391

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %call12 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %origt) #7, !dbg !4391
  %type14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4391
  %7 = bitcast %union.tree_node** %type14 to i64**, !dbg !4391
  %8 = load i64*, i64** %7, align 8, !dbg !4391
  %bf.load16 = load i64, i64* %8, align 8, !dbg !4391
  %bf.cast1822 = and i64 %bf.load16, 65535, !dbg !4391
  %cmp19 = icmp eq i64 %bf.cast1822, 17, !dbg !4391
  br i1 %cmp19, label %cond.true, label %lor.lhs.false20, !dbg !4391

lor.lhs.false20:                                  ; preds = %lor.lhs.false11
  %call21 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %origt) #7, !dbg !4391
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4391
  %9 = bitcast %union.tree_node** %type23 to i64**, !dbg !4391
  %10 = load i64*, i64** %9, align 8, !dbg !4391
  %bf.load25 = load i64, i64* %10, align 8, !dbg !4391
  %bf.cast2723 = and i64 %bf.load25, 65535, !dbg !4391
  %cmp28 = icmp eq i64 %bf.cast2723, 18, !dbg !4391
  br i1 %cmp28, label %cond.true, label %cond.end, !dbg !4391

cond.true:                                        ; preds = %lor.lhs.false20, %lor.lhs.false11, %lor.lhs.false, %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 3630, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4391
  br label %cond.end, !dbg !4391

cond.end:                                         ; preds = %lor.lhs.false20, %cond.true
  %call29 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %origt) #7, !dbg !4392
  %call30 = tail call fastcc zeroext i8 @could_have_pointers(%union.tree_node* %call29) #7, !dbg !4393
  %tobool = icmp eq i8 %call30, 0, !dbg !4393
  br i1 %tobool, label %if.end673, label %if.then31, !dbg !4394

if.then31:                                        ; preds = %cond.end
  %call32 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %origt) #7, !dbg !4395
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for(%union.tree_node* %call32, %struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4396
  call void @llvm.dbg.value(metadata i64 0, metadata !4297, metadata !DIExpression()), !dbg !4397
  %11 = bitcast %struct.constraint_expr** %c to { i64, i64 }**, !dbg !4398
  br label %for.cond, !dbg !4400

for.cond:                                         ; preds = %for.inc74, %if.then31
  %i.0 = phi i64 [ 0, %if.then31 ], [ %inc75, %for.inc74 ], !dbg !4401
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4297, metadata !DIExpression()), !dbg !4397
  %call33 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %origt) #7, !dbg !4402
  %conv = zext i32 %call33 to i64, !dbg !4402
  %cmp34 = icmp ult i64 %i.0, %conv, !dbg !4403
  br i1 %cmp34, label %for.body, label %if.end673.loopexit, !dbg !4404

for.body:                                         ; preds = %for.cond
  %conv36 = trunc i64 %i.0 to i32, !dbg !4405
  %call37 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %origt, i32 %conv36) #7, !dbg !4405
  %call38 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call37) #7, !dbg !4405
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !4303, metadata !DIExpression()), !dbg !4406
  %call39 = call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %call38) #6, !dbg !4407
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !4303, metadata !DIExpression()), !dbg !4406
  %call40 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %origt, i64 %i.0) #7, !dbg !4408
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for(%union.tree_node* %call40, %struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4409
  call void @llvm.dbg.value(metadata i32 0, metadata !4302, metadata !DIExpression()), !dbg !4397
  br label %for.cond41, !dbg !4410

for.cond41:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ], !dbg !4411
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !4302, metadata !DIExpression()), !dbg !4397
  %12 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !4412
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %12, metadata !4293, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %12, metadata !4293, metadata !DIExpression()), !dbg !4382
  %base44 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %12, i64 0, i32 0, !dbg !4412
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %c, metadata !4295, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  %call48 = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base44, i32 %j.0, %struct.constraint_expr** nonnull %c) #7, !dbg !4412
  %tobool49 = icmp eq i32 %call48, 0, !dbg !4413
  br i1 %tobool49, label %for.inc74, label %while.cond.preheader, !dbg !4413

while.cond.preheader:                             ; preds = %for.cond41
  br label %while.cond, !dbg !4414

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %13 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !4415
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %13, metadata !4294, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %13, metadata !4294, metadata !DIExpression()), !dbg !4382
  %base53 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %13, i64 0, i32 0, !dbg !4415
  %call57 = call fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %base53) #7, !dbg !4415
  %cmp58 = icmp eq i32 %call57, 0, !dbg !4416
  br i1 %cmp58, label %for.inc, label %while.body, !dbg !4414

while.body:                                       ; preds = %while.cond
  %14 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !4417
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %14, metadata !4294, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %14, metadata !4294, metadata !DIExpression()), !dbg !4382
  %base62 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %14, i64 0, i32 0, !dbg !4417
  %call66 = call fastcc %struct.constraint_expr* @VEC_ce_s_base_last(%struct.VEC_ce_s_base* %base62) #7, !dbg !4417
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %call66, metadata !4307, metadata !DIExpression()), !dbg !4418
  %15 = load { i64, i64 }*, { i64, i64 }** %11, align 8, !dbg !4419
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0, !dbg !4420
  %17 = load i64, i64* %16, align 8, !dbg !4420
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1, !dbg !4420
  %19 = load i64, i64* %18, align 8, !dbg !4420
  %20 = bitcast %struct.constraint_expr* %call66 to i64*, !dbg !4420
  %21 = load i64, i64* %20, align 8, !dbg !4420
  %22 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call66, i64 0, i32 2, !dbg !4420
  %23 = load i64, i64* %22, align 8, !dbg !4420
  %call67 = call fastcc %struct.constraint* @new_constraint(i64 %17, i64 %19, i64 %21, i64 %23) #7, !dbg !4420
  call fastcc void @process_constraint(%struct.constraint* %call67) #7, !dbg !4421
  %24 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !4422
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %24, metadata !4294, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %24, metadata !4294, metadata !DIExpression()), !dbg !4382
  %base70 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %24, i64 0, i32 0, !dbg !4422
  call fastcc void @VEC_ce_s_base_pop(%struct.VEC_ce_s_base* %base70) #7, !dbg !4422
  br label %while.cond, !dbg !4414, !llvm.loop !4423

for.inc:                                          ; preds = %while.cond
  %inc = add i32 %j.0, 1, !dbg !4425
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4302, metadata !DIExpression()), !dbg !4397
  br label %for.cond41, !dbg !4426, !llvm.loop !4427

for.inc74:                                        ; preds = %for.cond41
  %inc75 = add nuw nsw i64 %i.0, 1, !dbg !4429
  call void @llvm.dbg.value(metadata i64 %inc75, metadata !4297, metadata !DIExpression()), !dbg !4397
  br label %for.cond, !dbg !4430, !llvm.loop !4431

if.else:                                          ; preds = %entry
  %call77 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %origt) #7, !dbg !4433
  %tobool78 = icmp eq i8 %call77, 0, !dbg !4433
  br i1 %tobool78, label %if.else318, label %if.then79, !dbg !4434

if.then79:                                        ; preds = %if.else
  %call80 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %origt) #7, !dbg !4435
  call void @llvm.dbg.value(metadata %union.tree_node* %call80, metadata !4311, metadata !DIExpression()), !dbg !4436
  %cmp81 = icmp eq %union.tree_node* %call80, null, !dbg !4437
  br i1 %cmp81, label %if.end171, label %land.lhs.true, !dbg !4438

land.lhs.true:                                    ; preds = %if.then79
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call80, i64 0, i32 0, i32 5, !dbg !4439
  %bf.load83 = load i32, i32* %built_in_class, align 8, !dbg !4439
  %bf.clear84 = and i32 %bf.load83, 6144, !dbg !4439
  %cmp85 = icmp eq i32 %bf.clear84, 6144, !dbg !4440
  br i1 %cmp85, label %if.then87, label %if.end171, !dbg !4441

if.then87:                                        ; preds = %land.lhs.true
  %bf.clear90 = and i32 %bf.load83, 2047, !dbg !4442
  switch i32 %bf.clear90, label %if.end171 [
    i32 341, label %sw.bb
    i32 349, label %sw.bb
    i32 325, label %sw.bb
    i32 330, label %sw.bb
    i32 331, label %sw.bb
    i32 332, label %sw.bb
    i32 335, label %sw.bb
    i32 336, label %sw.bb
    i32 338, label %sw.bb
    i32 347, label %sw.bb
    i32 333, label %sw.bb135
    i32 220, label %cleanup
    i32 221, label %cleanup
    i32 222, label %cleanup
    i32 78, label %cleanup
    i32 79, label %cleanup
    i32 80, label %cleanup
    i32 84, label %cleanup
    i32 85, label %cleanup
    i32 86, label %cleanup
    i32 123, label %cleanup
    i32 124, label %cleanup
    i32 125, label %cleanup
    i32 159, label %cleanup
    i32 160, label %cleanup
    i32 161, label %cleanup
    i32 192, label %cleanup
    i32 193, label %cleanup
    i32 194, label %cleanup
    i32 455, label %cleanup
  ], !dbg !4443

sw.bb:                                            ; preds = %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87
  %call91 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4444
  call void @llvm.dbg.value(metadata %union.tree_node* %call91, metadata !4314, metadata !DIExpression()), !dbg !4445
  %bf.load94 = load i32, i32* %built_in_class, align 8, !dbg !4446
  %bf.clear95 = and i32 %bf.load94, 2047, !dbg !4446
  %cmp96 = icmp eq i32 %bf.clear95, 325, !dbg !4447
  %cond98 = zext i1 %cmp96 to i32, !dbg !4446
  %call99 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %origt, i32 %cond98) #7, !dbg !4448
  call void @llvm.dbg.value(metadata %union.tree_node* %call99, metadata !4318, metadata !DIExpression()), !dbg !4445
  %bf.load102 = load i32, i32* %built_in_class, align 8, !dbg !4449
  %bf.clear103 = and i32 %bf.load102, 2047, !dbg !4449
  %cmp104 = icmp ne i32 %bf.clear103, 325, !dbg !4450
  %cond106 = zext i1 %cmp104 to i32, !dbg !4449
  %call107 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %origt, i32 %cond106) #7, !dbg !4451
  call void @llvm.dbg.value(metadata %union.tree_node* %call107, metadata !4319, metadata !DIExpression()), !dbg !4445
  %cmp108 = icmp eq %union.tree_node* %call91, null, !dbg !4452
  br i1 %cmp108, label %if.end134, label %if.then110, !dbg !4454

if.then110:                                       ; preds = %sw.bb
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for(%union.tree_node* nonnull %call91, %struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4455
  %bf.load113 = load i32, i32* %built_in_class, align 8, !dbg !4457
  %bf.clear114 = and i32 %bf.load113, 2047, !dbg !4457
  %cmp115 = icmp eq i32 %bf.clear114, 332, !dbg !4459
  br i1 %cmp115, label %if.then131, label %lor.lhs.false117, !dbg !4460

lor.lhs.false117:                                 ; preds = %if.then110
  %cmp122 = icmp eq i32 %bf.clear114, 335, !dbg !4461
  br i1 %cmp122, label %if.then131, label %lor.lhs.false124, !dbg !4462

lor.lhs.false124:                                 ; preds = %lor.lhs.false117
  %cmp129 = icmp eq i32 %bf.clear114, 336, !dbg !4463
  br i1 %cmp129, label %if.then131, label %if.else132, !dbg !4464

if.then131:                                       ; preds = %lor.lhs.false124, %lor.lhs.false117, %if.then110
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for_ptr_offset(%union.tree_node* %call99, %union.tree_node* null, %struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4465
  br label %if.end133, !dbg !4465

if.else132:                                       ; preds = %lor.lhs.false124
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for(%union.tree_node* %call99, %struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4466
  br label %if.end133

if.end133:                                        ; preds = %if.else132, %if.then131
  %25 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !4467
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %25, metadata !4293, metadata !DIExpression()), !dbg !4382
  %26 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !4468
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %26, metadata !4294, metadata !DIExpression()), !dbg !4382
  call fastcc void @process_all_all_constraints(%struct.VEC_ce_s_heap* %25, %struct.VEC_ce_s_heap* %26) #7, !dbg !4469
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4470
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4471
  br label %if.end134, !dbg !4472

if.end134:                                        ; preds = %sw.bb, %if.end133
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for_ptr_offset(%union.tree_node* %call99, %union.tree_node* null, %struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4473
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for_ptr_offset(%union.tree_node* %call107, %union.tree_node* null, %struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4474
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @do_deref(%struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4475
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @do_deref(%struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4476
  %27 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !4477
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %27, metadata !4293, metadata !DIExpression()), !dbg !4382
  %28 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !4478
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %28, metadata !4294, metadata !DIExpression()), !dbg !4382
  call fastcc void @process_all_all_constraints(%struct.VEC_ce_s_heap* %27, %struct.VEC_ce_s_heap* %28) #7, !dbg !4479
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4480
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4481
  br label %cleanup

sw.bb135:                                         ; preds = %if.then87
  %call137 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4482
  call void @llvm.dbg.value(metadata %union.tree_node* %call137, metadata !4320, metadata !DIExpression()), !dbg !4483
  %call139 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %origt, i32 0) #7, !dbg !4484
  call void @llvm.dbg.value(metadata %union.tree_node* %call139, metadata !4322, metadata !DIExpression()), !dbg !4483
  %29 = bitcast %struct.constraint_expr** %lhsp to i8*, !dbg !4485
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8, !dbg !4485
  %30 = bitcast %struct.constraint_expr* %ac to i8*, !dbg !4486
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8, !dbg !4486
  %cmp141 = icmp eq %union.tree_node* %call137, null, !dbg !4487
  br i1 %cmp141, label %if.end144, label %if.then143, !dbg !4489

if.then143:                                       ; preds = %sw.bb135
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for(%union.tree_node* nonnull %call137, %struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4490
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for(%union.tree_node* %call139, %struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4492
  %31 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !4493
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %31, metadata !4293, metadata !DIExpression()), !dbg !4382
  %32 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !4494
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %32, metadata !4294, metadata !DIExpression()), !dbg !4382
  call fastcc void @process_all_all_constraints(%struct.VEC_ce_s_heap* %31, %struct.VEC_ce_s_heap* %32) #7, !dbg !4495
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4496
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4497
  br label %if.end144, !dbg !4498

if.end144:                                        ; preds = %sw.bb135, %if.then143
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for_ptr_offset(%union.tree_node* %call139, %union.tree_node* null, %struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4499
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @do_deref(%struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4500
  %33 = load i32, i32* @flag_delete_null_pointer_checks, align 4, !dbg !4501
  %tobool145 = icmp eq i32 %33, 0, !dbg !4501
  br i1 %tobool145, label %if.else152, label %land.lhs.true146, !dbg !4503

land.lhs.true146:                                 ; preds = %if.end144
  %call147 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %origt, i32 1) #7, !dbg !4504
  %call148 = call i32 @integer_zerop(%union.tree_node* %call147) #6, !dbg !4505
  %tobool149 = icmp eq i32 %call148, 0, !dbg !4505
  br i1 %tobool149, label %if.else152, label %if.then150, !dbg !4506

if.then150:                                       ; preds = %land.lhs.true146
  %type151 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %ac, i64 0, i32 0, !dbg !4507
  store i32 2, i32* %type151, align 8, !dbg !4509
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %ac, i64 0, i32 1, !dbg !4510
  store i32 0, i32* %var, align 4, !dbg !4511
  br label %if.end155, !dbg !4512

if.else152:                                       ; preds = %land.lhs.true146, %if.end144
  %type153 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %ac, i64 0, i32 0, !dbg !4513
  store i32 0, i32* %type153, align 8, !dbg !4515
  %var154 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %ac, i64 0, i32 1, !dbg !4516
  store i32 7, i32* %var154, align 4, !dbg !4517
  br label %if.end155

if.end155:                                        ; preds = %if.else152, %if.then150
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %ac, i64 0, i32 2, !dbg !4518
  store i64 0, i64* %offset, align 8, !dbg !4519
  call void @llvm.dbg.value(metadata i32 0, metadata !4323, metadata !DIExpression()), !dbg !4483
  %34 = bitcast %struct.constraint_expr** %lhsp to { i64, i64 }**, !dbg !4520
  %35 = bitcast %struct.constraint_expr* %ac to i64*, !dbg !4520
  %36 = load i64, i64* %35, align 8, !dbg !4520
  br label %for.cond156, !dbg !4523

for.cond156:                                      ; preds = %for.body165, %if.end155
  %i140.0 = phi i32 [ 0, %if.end155 ], [ %inc168, %for.body165 ], !dbg !4524
  call void @llvm.dbg.value(metadata i32 %i140.0, metadata !4323, metadata !DIExpression()), !dbg !4483
  %37 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !4525
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %37, metadata !4293, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %37, metadata !4293, metadata !DIExpression()), !dbg !4382
  %base159 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %37, i64 0, i32 0, !dbg !4525
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %lhsp, metadata !4324, metadata !DIExpression(DW_OP_deref)), !dbg !4483
  %call163 = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base159, i32 %i140.0, %struct.constraint_expr** nonnull %lhsp) #7, !dbg !4525
  %tobool164 = icmp eq i32 %call163, 0, !dbg !4526
  br i1 %tobool164, label %for.end169, label %for.body165, !dbg !4526

for.body165:                                      ; preds = %for.cond156
  %38 = load { i64, i64 }*, { i64, i64 }** %34, align 8, !dbg !4527
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %38, i64 0, i32 0, !dbg !4528
  %40 = load i64, i64* %39, align 8, !dbg !4528
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %38, i64 0, i32 1, !dbg !4528
  %42 = load i64, i64* %41, align 8, !dbg !4528
  %call166 = call fastcc %struct.constraint* @new_constraint(i64 %40, i64 %42, i64 %36, i64 0) #7, !dbg !4528
  call fastcc void @process_constraint(%struct.constraint* %call166) #7, !dbg !4529
  %inc168 = add i32 %i140.0, 1, !dbg !4530
  call void @llvm.dbg.value(metadata i32 %inc168, metadata !4323, metadata !DIExpression()), !dbg !4483
  br label %for.cond156, !dbg !4531, !llvm.loop !4532

for.end169:                                       ; preds = %for.cond156
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4534
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8, !dbg !4535
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8, !dbg !4535
  br label %cleanup

if.end171:                                        ; preds = %if.then79, %if.then87, %land.lhs.true
  %.b = load i1, i1* @in_ipa_mode, align 4, !dbg !4536
  br i1 %.b, label %lor.lhs.false173, label %if.then178, !dbg !4537

lor.lhs.false173:                                 ; preds = %if.end171
  br i1 %cmp81, label %if.else209, label %land.lhs.true175, !dbg !4538

land.lhs.true175:                                 ; preds = %lor.lhs.false173
  %call176 = tail call fastcc %struct.variable_info* @lookup_vi_for_tree(%union.tree_node* nonnull %call80) #7, !dbg !4539
  %tobool177 = icmp eq %struct.variable_info* %call176, null, !dbg !4539
  br i1 %tobool177, label %if.then178, label %if.else209, !dbg !4540

if.then178:                                       ; preds = %if.end171, %land.lhs.true175
  %43 = bitcast %struct.VEC_ce_s_heap** %rhsc179 to i8*, !dbg !4541
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8, !dbg !4541
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* null, metadata !4327, metadata !DIExpression()), !dbg !4542
  store %struct.VEC_ce_s_heap* null, %struct.VEC_ce_s_heap** %rhsc179, align 8, !dbg !4543
  %call180 = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %origt) #6, !dbg !4544
  call void @llvm.dbg.value(metadata i32 %call180, metadata !4330, metadata !DIExpression()), !dbg !4542
  %and = and i32 %call180, 513, !dbg !4545
  %tobool181 = icmp eq i32 %and, 0, !dbg !4545
  br i1 %tobool181, label %if.else192, label %if.then182, !dbg !4547

if.then182:                                       ; preds = %if.then178
  %call183 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4548
  %tobool184 = icmp eq %union.tree_node* %call183, null, !dbg !4548
  br i1 %tobool184, label %if.end198, label %land.lhs.true185, !dbg !4551

land.lhs.true185:                                 ; preds = %if.then182
  %call186 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4552
  %call187 = tail call fastcc zeroext i8 @could_have_pointers(%union.tree_node* %call186) #7, !dbg !4553
  %tobool189 = icmp eq i8 %call187, 0, !dbg !4553
  br i1 %tobool189, label %if.end198, label %if.then190, !dbg !4554

if.then190:                                       ; preds = %land.lhs.true185
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc179, metadata !4327, metadata !DIExpression(DW_OP_deref)), !dbg !4542
  call fastcc void @handle_const_call(%union.gimple_statement_d* %origt, %struct.VEC_ce_s_heap** nonnull %rhsc179) #7, !dbg !4555
  br label %if.end198, !dbg !4555

if.else192:                                       ; preds = %if.then178
  %and193 = and i32 %call180, 6, !dbg !4556
  %tobool194 = icmp eq i32 %and193, 0, !dbg !4556
  br i1 %tobool194, label %if.else196, label %if.then195, !dbg !4558

if.then195:                                       ; preds = %if.else192
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc179, metadata !4327, metadata !DIExpression(DW_OP_deref)), !dbg !4542
  call fastcc void @handle_pure_call(%union.gimple_statement_d* %origt, %struct.VEC_ce_s_heap** nonnull %rhsc179) #7, !dbg !4559
  br label %if.end198, !dbg !4559

if.else196:                                       ; preds = %if.else192
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc179, metadata !4327, metadata !DIExpression(DW_OP_deref)), !dbg !4542
  call fastcc void @handle_rhs_call(%union.gimple_statement_d* %origt, %struct.VEC_ce_s_heap** nonnull %rhsc179) #7, !dbg !4560
  br label %if.end198

if.end198:                                        ; preds = %land.lhs.true185, %if.then182, %if.then195, %if.else196, %if.then190
  %call199 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4561
  %tobool200 = icmp eq %union.tree_node* %call199, null, !dbg !4561
  br i1 %tobool200, label %if.end208, label %land.lhs.true201, !dbg !4563

land.lhs.true201:                                 ; preds = %if.end198
  %call202 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4564
  %call203 = call fastcc zeroext i8 @could_have_pointers(%union.tree_node* %call202) #7, !dbg !4565
  %tobool205 = icmp eq i8 %call203, 0, !dbg !4565
  br i1 %tobool205, label %if.end208, label %if.then206, !dbg !4566

if.then206:                                       ; preds = %land.lhs.true201
  %call207 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4567
  %44 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc179, align 8, !dbg !4568
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %44, metadata !4327, metadata !DIExpression()), !dbg !4542
  call fastcc void @handle_lhs_call(%union.tree_node* %call207, i32 %call180, %struct.VEC_ce_s_heap* %44, %union.tree_node* %call80) #7, !dbg !4569
  br label %if.end208, !dbg !4569

if.end208:                                        ; preds = %land.lhs.true201, %if.end198, %if.then206
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc179, metadata !4327, metadata !DIExpression(DW_OP_deref)), !dbg !4542
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %rhsc179) #7, !dbg !4570
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8, !dbg !4571
  br label %cleanup, !dbg !4572

if.else209:                                       ; preds = %land.lhs.true175, %lor.lhs.false173
  call void @llvm.dbg.value(metadata i32 1, metadata !4334, metadata !DIExpression()), !dbg !4573
  %call212 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4574
  call void @llvm.dbg.value(metadata %union.tree_node* %call212, metadata !4331, metadata !DIExpression()), !dbg !4573
  %call213 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %origt) #7, !dbg !4575
  call void @llvm.dbg.value(metadata %union.tree_node* %call213, metadata !4336, metadata !DIExpression()), !dbg !4573
  %tobool214 = icmp eq %union.tree_node* %call213, null, !dbg !4576
  br i1 %tobool214, label %if.else217, label %if.then215, !dbg !4578

if.then215:                                       ; preds = %if.else209
  %call216 = tail call fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* nonnull %call213) #7, !dbg !4579
  call void @llvm.dbg.value(metadata %struct.variable_info* %call216, metadata !4333, metadata !DIExpression()), !dbg !4573
  br label %if.end220, !dbg !4580

if.else217:                                       ; preds = %if.else209
  %call218 = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %origt) #7, !dbg !4581
  call void @llvm.dbg.value(metadata %union.tree_node* %call218, metadata !4336, metadata !DIExpression()), !dbg !4573
  %call219 = tail call fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* %call218) #7, !dbg !4583
  call void @llvm.dbg.value(metadata %struct.variable_info* %call219, metadata !4333, metadata !DIExpression()), !dbg !4573
  br label %if.end220

if.end220:                                        ; preds = %if.else217, %if.then215
  %fi.0 = phi %struct.variable_info* [ %call216, %if.then215 ], [ %call219, %if.else217 ], !dbg !4584
  %decl.0 = phi %union.tree_node* [ %call213, %if.then215 ], [ %call218, %if.else217 ], !dbg !4573
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.0, metadata !4336, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata %struct.variable_info* %fi.0, metadata !4333, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i64 0, metadata !4335, metadata !DIExpression()), !dbg !4573
  %45 = bitcast %struct.constraint_expr* %lhs to i8*, !dbg !4585
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4586
  %type236 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 0, !dbg !4586
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %fi.0, i64 0, i32 0, !dbg !4588
  %var237 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 1, !dbg !4588
  %offset239 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 2, !dbg !4588
  %47 = bitcast %struct.constraint_expr* %lhs to i64*, !dbg !4590
  br label %for.cond221, !dbg !4592

for.cond221:                                      ; preds = %while.end273, %if.end220
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %while.end273 ], [ 1, %if.end220 ], !dbg !4573
  %j211.0 = phi i64 [ %inc276, %while.end273 ], [ 0, %if.end220 ], !dbg !4593
  call void @llvm.dbg.value(metadata i64 %j211.0, metadata !4335, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i64 %indvars.iv25, metadata !4334, metadata !DIExpression()), !dbg !4573
  %call222 = call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %origt) #7, !dbg !4594
  %conv223 = zext i32 %call222 to i64, !dbg !4594
  %cmp224 = icmp ult i64 %j211.0, %conv223, !dbg !4595
  br i1 %cmp224, label %for.body226, label %for.end277, !dbg !4596

for.body226:                                      ; preds = %for.cond221
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #8, !dbg !4597
  %conv227 = trunc i64 %j211.0 to i32, !dbg !4598
  %call228 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %origt, i32 %conv227) #7, !dbg !4599
  call void @llvm.dbg.value(metadata %union.tree_node* %call228, metadata !4342, metadata !DIExpression()), !dbg !4585
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for(%union.tree_node* %call228, %struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4600
  %bf.load230 = load i64, i64* %46, align 8, !dbg !4601
  %bf.cast23219 = and i64 %bf.load230, 65535, !dbg !4602
  %cmp233 = icmp eq i64 %bf.cast23219, 29, !dbg !4602
  br i1 %cmp233, label %if.else240, label %if.then235, !dbg !4603

if.then235:                                       ; preds = %for.body226
  store i32 1, i32* %type236, align 8, !dbg !4604
  br label %if.end247, !dbg !4605

if.else240:                                       ; preds = %for.body226
  store i32 0, i32* %type236, align 8, !dbg !4606
  %call243 = call fastcc %struct.variable_info* @first_vi_for_offset(%struct.variable_info* %fi.0, i64 %indvars.iv25) #7, !dbg !4608
  %id244 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call243, i64 0, i32 0, !dbg !4609
  br label %if.end247

if.end247:                                        ; preds = %if.else240, %if.then235
  %storemerge27.in = phi i32* [ %id244, %if.else240 ], [ %id, %if.then235 ]
  %storemerge = phi i64 [ 0, %if.else240 ], [ %indvars.iv25, %if.then235 ], !dbg !4586
  %48 = phi i64 [ 0, %if.else240 ], [ %indvars.iv25, %if.then235 ], !dbg !4590
  %storemerge27 = load i32, i32* %storemerge27.in, align 8, !dbg !4586
  store i32 %storemerge27, i32* %var237, align 4, !dbg !4586
  store i64 %storemerge, i64* %offset239, align 8, !dbg !4586
  %49 = load i64, i64* %47, align 8, !dbg !4590
  br label %while.cond248, !dbg !4610

while.cond248:                                    ; preds = %while.body258, %if.end247
  %50 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !4611
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %50, metadata !4294, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %50, metadata !4294, metadata !DIExpression()), !dbg !4382
  %base251 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %50, i64 0, i32 0, !dbg !4611
  %call255 = call fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %base251) #7, !dbg !4611
  %cmp256 = icmp eq i32 %call255, 0, !dbg !4612
  br i1 %cmp256, label %while.end273, label %while.body258, !dbg !4610

while.body258:                                    ; preds = %while.cond248
  %51 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !4613
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %51, metadata !4294, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %51, metadata !4294, metadata !DIExpression()), !dbg !4382
  %base261 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %51, i64 0, i32 0, !dbg !4613
  %call265 = call fastcc %struct.constraint_expr* @VEC_ce_s_base_last(%struct.VEC_ce_s_base* %base261) #7, !dbg !4613
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %call265, metadata !4341, metadata !DIExpression()), !dbg !4585
  %52 = bitcast %struct.constraint_expr* %call265 to i64*, !dbg !4614
  %53 = load i64, i64* %52, align 8, !dbg !4614
  %54 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call265, i64 0, i32 2, !dbg !4614
  %55 = load i64, i64* %54, align 8, !dbg !4614
  %call266 = call fastcc %struct.constraint* @new_constraint(i64 %49, i64 %48, i64 %53, i64 %55) #7, !dbg !4614
  call fastcc void @process_constraint(%struct.constraint* %call266) #7, !dbg !4615
  %56 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !4616
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %56, metadata !4294, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %56, metadata !4294, metadata !DIExpression()), !dbg !4382
  %base269 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %56, i64 0, i32 0, !dbg !4616
  call fastcc void @VEC_ce_s_base_pop(%struct.VEC_ce_s_base* %base269) #7, !dbg !4616
  br label %while.cond248, !dbg !4610, !llvm.loop !4617

while.end273:                                     ; preds = %while.cond248
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !4619
  call void @llvm.dbg.value(metadata i32 undef, metadata !4334, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4573
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #8, !dbg !4620
  %inc276 = add nuw nsw i64 %j211.0, 1, !dbg !4621
  call void @llvm.dbg.value(metadata i64 %inc276, metadata !4335, metadata !DIExpression()), !dbg !4573
  br label %for.cond221, !dbg !4622, !llvm.loop !4623

for.end277:                                       ; preds = %for.cond221
  %indvars.iv25.lcssa = phi i64 [ %indvars.iv25, %for.cond221 ], !dbg !4573
  call void @llvm.dbg.value(metadata i64 %indvars.iv25.lcssa, metadata !4334, metadata !DIExpression()), !dbg !4573
  %tobool278 = icmp eq %union.tree_node* %call212, null, !dbg !4625
  br i1 %tobool278, label %cleanup, label %if.then279, !dbg !4626

if.then279:                                       ; preds = %for.end277
  %57 = bitcast %struct.constraint_expr* %rhs to i8*, !dbg !4627
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #8, !dbg !4627
  %58 = bitcast %struct.constraint_expr** %lhsp280 to i8*, !dbg !4628
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8, !dbg !4628
  call void @llvm.dbg.value(metadata i32 0, metadata !4347, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for(%union.tree_node* nonnull %call212, %struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4630
  %bf.load283 = load i64, i64* %46, align 8, !dbg !4631
  %bf.cast28518 = and i64 %bf.load283, 65535, !dbg !4633
  %cmp286 = icmp eq i64 %bf.cast28518, 29, !dbg !4633
  %type289 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 0, !dbg !4634
  br i1 %cmp286, label %if.else294, label %if.then288, !dbg !4635

if.then288:                                       ; preds = %if.then279
  store i32 1, i32* %type289, align 8, !dbg !4636
  %59 = load i32, i32* %id, align 8, !dbg !4638
  %var291 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 1, !dbg !4639
  store i32 %59, i32* %var291, align 4, !dbg !4640
  %conv292 = and i64 %indvars.iv25.lcssa, 4294967295, !dbg !4641
  %offset293 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2, !dbg !4642
  store i64 %conv292, i64* %offset293, align 8, !dbg !4643
  br label %if.end301, !dbg !4644

if.else294:                                       ; preds = %if.then279
  store i32 0, i32* %type289, align 8, !dbg !4645
  %conv296 = and i64 %indvars.iv25.lcssa, 4294967295, !dbg !4647
  %call297 = call fastcc %struct.variable_info* @first_vi_for_offset(%struct.variable_info* %fi.0, i64 %conv296) #7, !dbg !4648
  %id298 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call297, i64 0, i32 0, !dbg !4649
  %60 = load i32, i32* %id298, align 8, !dbg !4649
  %var299 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 1, !dbg !4650
  store i32 %60, i32* %var299, align 4, !dbg !4651
  %offset300 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2, !dbg !4652
  store i64 0, i64* %offset300, align 8, !dbg !4653
  br label %if.end301

if.end301:                                        ; preds = %if.else294, %if.then288
  %61 = phi i64 [ 0, %if.else294 ], [ %conv292, %if.then288 ], !dbg !4654
  call void @llvm.dbg.value(metadata i32 0, metadata !4347, metadata !DIExpression()), !dbg !4629
  %62 = bitcast %struct.constraint_expr** %lhsp280 to { i64, i64 }**, !dbg !4654
  %63 = bitcast %struct.constraint_expr* %rhs to i64*, !dbg !4654
  %64 = load i64, i64* %63, align 8, !dbg !4654
  br label %for.cond302, !dbg !4657

for.cond302:                                      ; preds = %for.body311, %if.end301
  %j281.0 = phi i32 [ 0, %if.end301 ], [ %inc314, %for.body311 ], !dbg !4658
  call void @llvm.dbg.value(metadata i32 %j281.0, metadata !4347, metadata !DIExpression()), !dbg !4629
  %65 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !4659
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %65, metadata !4293, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %65, metadata !4293, metadata !DIExpression()), !dbg !4382
  %base305 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %65, i64 0, i32 0, !dbg !4659
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %lhsp280, metadata !4346, metadata !DIExpression(DW_OP_deref)), !dbg !4629
  %call309 = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base305, i32 %j281.0, %struct.constraint_expr** nonnull %lhsp280) #7, !dbg !4659
  %tobool310 = icmp eq i32 %call309, 0, !dbg !4660
  br i1 %tobool310, label %for.end315, label %for.body311, !dbg !4660

for.body311:                                      ; preds = %for.cond302
  %66 = load { i64, i64 }*, { i64, i64 }** %62, align 8, !dbg !4661
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %66, i64 0, i32 0, !dbg !4662
  %68 = load i64, i64* %67, align 8, !dbg !4662
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %66, i64 0, i32 1, !dbg !4662
  %70 = load i64, i64* %69, align 8, !dbg !4662
  %call312 = call fastcc %struct.constraint* @new_constraint(i64 %68, i64 %70, i64 %64, i64 %61) #7, !dbg !4662
  call fastcc void @process_constraint(%struct.constraint* %call312) #7, !dbg !4663
  %inc314 = add i32 %j281.0, 1, !dbg !4664
  call void @llvm.dbg.value(metadata i32 %inc314, metadata !4347, metadata !DIExpression()), !dbg !4629
  br label %for.cond302, !dbg !4665, !llvm.loop !4666

for.end315:                                       ; preds = %for.cond302
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #8, !dbg !4668
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #8, !dbg !4668
  br label %cleanup, !dbg !4669

cleanup:                                          ; preds = %for.end277, %if.end208, %for.end315, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %if.then87, %for.end169, %if.end134
  %cleanup.dest.slot.0 = phi i1 [ false, %for.end169 ], [ false, %if.end134 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ false, %if.then87 ], [ true, %for.end277 ], [ true, %for.end315 ], [ true, %if.end208 ]
  br i1 %cleanup.dest.slot.0, label %if.end673, label %cleanup674

if.else318:                                       ; preds = %if.else
  %call319 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %origt) #7, !dbg !4670
  %tobool321 = icmp eq i8 %call319, 0, !dbg !4670
  br i1 %tobool321, label %if.else514, label %land.lhs.true322, !dbg !4671

land.lhs.true322:                                 ; preds = %if.else318
  %call323 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4672
  %call324 = tail call fastcc zeroext i8 @could_have_pointers(%union.tree_node* %call323) #7, !dbg !4673
  %tobool326 = icmp eq i8 %call324, 0, !dbg !4673
  br i1 %tobool326, label %if.else514, label %if.then327, !dbg !4674

if.then327:                                       ; preds = %land.lhs.true322
  %call329 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4675
  call void @llvm.dbg.value(metadata %union.tree_node* %call329, metadata !4348, metadata !DIExpression()), !dbg !4676
  %call330 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %origt) #7, !dbg !4677
  %cmp331 = icmp eq i32 %call330, 2, !dbg !4678
  br i1 %cmp331, label %cond.true333, label %cond.end336, !dbg !4679

cond.true333:                                     ; preds = %if.then327
  %call334 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %origt) #7, !dbg !4680
  br label %cond.end336, !dbg !4679

cond.end336:                                      ; preds = %if.then327, %cond.true333
  %cond337 = phi %union.tree_node* [ %call334, %cond.true333 ], [ null, %if.then327 ], !dbg !4679
  call void @llvm.dbg.value(metadata %union.tree_node* %cond337, metadata !4351, metadata !DIExpression()), !dbg !4676
  %tobool338 = icmp eq %union.tree_node* %cond337, null, !dbg !4681
  br i1 %tobool338, label %if.else376, label %land.lhs.true339, !dbg !4682

land.lhs.true339:                                 ; preds = %cond.end336
  %type341 = getelementptr inbounds %union.tree_node, %union.tree_node* %call329, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4683
  %71 = bitcast %union.tree_node** %type341 to i64**, !dbg !4683
  %72 = load i64*, i64** %71, align 8, !dbg !4683
  %bf.load343 = load i64, i64* %72, align 8, !dbg !4683
  %bf.cast34514 = and i64 %bf.load343, 65535, !dbg !4683
  %cmp346 = icmp eq i64 %bf.cast34514, 15, !dbg !4683
  br i1 %cmp346, label %if.then375, label %lor.lhs.false348, !dbg !4683

lor.lhs.false348:                                 ; preds = %land.lhs.true339
  %cmp355 = icmp eq i64 %bf.cast34514, 16, !dbg !4683
  br i1 %cmp355, label %if.then375, label %lor.lhs.false357, !dbg !4683

lor.lhs.false357:                                 ; preds = %lor.lhs.false348
  %cmp364 = icmp eq i64 %bf.cast34514, 17, !dbg !4683
  br i1 %cmp364, label %if.then375, label %lor.lhs.false366, !dbg !4683

lor.lhs.false366:                                 ; preds = %lor.lhs.false357
  %cmp373 = icmp eq i64 %bf.cast34514, 18, !dbg !4683
  br i1 %cmp373, label %if.then375, label %if.else376, !dbg !4684

if.then375:                                       ; preds = %lor.lhs.false366, %lor.lhs.false357, %lor.lhs.false348, %land.lhs.true339
  tail call fastcc void @do_structure_copy(%union.tree_node* %call329, %union.tree_node* nonnull %cond337) #7, !dbg !4685
  br label %if.end437, !dbg !4685

if.else376:                                       ; preds = %cond.end336, %lor.lhs.false366
  %73 = bitcast %struct.constraint_expr* %temp to i8*, !dbg !4686
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #8, !dbg !4686
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for(%union.tree_node* %call329, %struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4687
  %call377 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %origt) #7, !dbg !4688
  %cmp378 = icmp eq i32 %call377, 66, !dbg !4690
  br i1 %cmp378, label %if.then380, label %if.else383, !dbg !4691

if.then380:                                       ; preds = %if.else376
  %call381 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %origt) #7, !dbg !4692
  %call382 = call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %origt) #7, !dbg !4693
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for_ptr_offset(%union.tree_node* %call381, %union.tree_node* %call382, %struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4694
  br label %if.end436, !dbg !4694

if.else383:                                       ; preds = %if.else376
  %call384 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %origt) #7, !dbg !4695
  %cmp385 = icmp eq i32 %call384, 116, !dbg !4695
  br i1 %cmp385, label %land.lhs.true391, label %lor.lhs.false387, !dbg !4695

lor.lhs.false387:                                 ; preds = %if.else383
  %call388 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %origt) #7, !dbg !4695
  %cmp389 = icmp eq i32 %call388, 113, !dbg !4695
  br i1 %cmp389, label %land.lhs.true391, label %lor.lhs.false425, !dbg !4697

land.lhs.true391:                                 ; preds = %lor.lhs.false387, %if.else383
  %call392 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %origt) #7, !dbg !4698
  %74 = getelementptr inbounds %union.tree_node, %union.tree_node* %call392, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4698
  %bf.load394 = load i64, i64* %74, align 8, !dbg !4698
  %bf.cast39610 = and i64 %bf.load394, 65535, !dbg !4698
  %cmp397 = icmp eq i64 %bf.cast39610, 10, !dbg !4698
  br i1 %cmp397, label %land.lhs.true407, label %lor.lhs.false399, !dbg !4698

lor.lhs.false399:                                 ; preds = %land.lhs.true391
  %call400 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %origt) #7, !dbg !4698
  %75 = getelementptr inbounds %union.tree_node, %union.tree_node* %call400, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4698
  %bf.load402 = load i64, i64* %75, align 8, !dbg !4698
  %bf.cast40411 = and i64 %bf.load402, 65535, !dbg !4698
  %cmp405 = icmp eq i64 %bf.cast40411, 12, !dbg !4698
  br i1 %cmp405, label %land.lhs.true407, label %if.then429, !dbg !4699

land.lhs.true407:                                 ; preds = %lor.lhs.false399, %land.lhs.true391
  %type409 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond337, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4700
  %76 = bitcast %union.tree_node** %type409 to i64**, !dbg !4700
  %77 = load i64*, i64** %76, align 8, !dbg !4700
  %bf.load411 = load i64, i64* %77, align 8, !dbg !4700
  %bf.cast41312 = and i64 %bf.load411, 65535, !dbg !4700
  %cmp414 = icmp eq i64 %bf.cast41312, 10, !dbg !4700
  br i1 %cmp414, label %if.then429, label %lor.lhs.false416, !dbg !4700

lor.lhs.false416:                                 ; preds = %land.lhs.true407
  %cmp423 = icmp eq i64 %bf.cast41312, 12, !dbg !4700
  br i1 %cmp423, label %if.then429, label %lor.lhs.false425, !dbg !4701

lor.lhs.false425:                                 ; preds = %lor.lhs.false416, %lor.lhs.false387
  %call426 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %origt) #6, !dbg !4702
  %tobool428 = icmp eq i8 %call426, 0, !dbg !4702
  br i1 %tobool428, label %if.else430, label %if.then429, !dbg !4703

if.then429:                                       ; preds = %lor.lhs.false425, %lor.lhs.false416, %land.lhs.true407, %lor.lhs.false399
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @get_constraint_for(%union.tree_node* %cond337, %struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4704
  br label %if.end436, !dbg !4704

if.else430:                                       ; preds = %lor.lhs.false425
  %type431 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 0, !dbg !4705
  store i32 2, i32* %type431, align 8, !dbg !4707
  %var432 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 1, !dbg !4708
  store i32 1, i32* %var432, align 4, !dbg !4709
  %offset433 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 2, !dbg !4710
  store i64 0, i64* %offset433, align 8, !dbg !4711
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %temp, metadata !4352, metadata !DIExpression(DW_OP_deref)), !dbg !4712
  %call434 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** nonnull %rhsc, %struct.constraint_expr* nonnull %temp) #7, !dbg !4713
  br label %if.end436

if.end436:                                        ; preds = %if.then429, %if.else430, %if.then380
  %78 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !4714
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %78, metadata !4293, metadata !DIExpression()), !dbg !4382
  %79 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !4715
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %79, metadata !4294, metadata !DIExpression()), !dbg !4382
  call fastcc void @process_all_all_constraints(%struct.VEC_ce_s_heap* %78, %struct.VEC_ce_s_heap* %79) #7, !dbg !4716
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #8, !dbg !4717
  br label %if.end437

if.end437:                                        ; preds = %if.end436, %if.then375
  %call438 = call %union.tree_node* @get_base_address(%union.tree_node* %call329) #6, !dbg !4718
  call void @llvm.dbg.value(metadata %union.tree_node* %call438, metadata !4348, metadata !DIExpression()), !dbg !4676
  %cmp439 = icmp eq %union.tree_node* %call438, null, !dbg !4720
  br i1 %cmp439, label %if.else453, label %land.lhs.true441, !dbg !4721

land.lhs.true441:                                 ; preds = %if.end437
  %80 = getelementptr inbounds %union.tree_node, %union.tree_node* %call438, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4722
  %bf.load443 = load i64, i64* %80, align 8, !dbg !4722
  %bf.cast445 = and i64 %bf.load443, 65535, !dbg !4722
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast445, !dbg !4722
  %81 = load i32, i32* %arrayidx, align 4, !dbg !4722
  %cmp446 = icmp eq i32 %81, 3, !dbg !4722
  br i1 %cmp446, label %land.lhs.true448, label %if.else453, !dbg !4723

land.lhs.true448:                                 ; preds = %land.lhs.true441
  %call449 = call fastcc zeroext i8 @is_global_var(%union.tree_node* nonnull %call438) #7, !dbg !4724
  %tobool451 = icmp eq i8 %call449, 0, !dbg !4724
  br i1 %tobool451, label %if.else453, label %if.then452, !dbg !4725

if.then452:                                       ; preds = %land.lhs.true448
  call fastcc void @make_escape_constraint(%union.tree_node* %cond337) #7, !dbg !4726
  br label %if.end673, !dbg !4726

if.else453:                                       ; preds = %land.lhs.true448, %if.end437, %land.lhs.true441
  %call454 = call fastcc zeroext i8 @gimple_assign_cast_p(%union.gimple_statement_d* %origt) #7, !dbg !4727
  %tobool456 = icmp eq i8 %call454, 0, !dbg !4727
  br i1 %tobool456, label %if.end673, label %land.lhs.true457, !dbg !4729

land.lhs.true457:                                 ; preds = %if.else453
  %type459 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond337, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4730
  %82 = bitcast %union.tree_node** %type459 to i64**, !dbg !4730
  %83 = load i64*, i64** %82, align 8, !dbg !4730
  %bf.load461 = load i64, i64* %83, align 8, !dbg !4730
  %bf.cast4636 = and i64 %bf.load461, 65535, !dbg !4730
  %cmp464 = icmp eq i64 %bf.cast4636, 10, !dbg !4730
  %84 = bitcast i64* %83 to %struct.tree_type*, !dbg !4730
  br i1 %cmp464, label %land.lhs.true475, label %lor.lhs.false466, !dbg !4730

lor.lhs.false466:                                 ; preds = %land.lhs.true457
  %cmp473 = icmp eq i64 %bf.cast4636, 12, !dbg !4730
  br i1 %cmp473, label %land.lhs.true475, label %if.end673, !dbg !4731

land.lhs.true475:                                 ; preds = %lor.lhs.false466, %land.lhs.true457
  %type477 = getelementptr inbounds %union.tree_node, %union.tree_node* %call438, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4732
  %85 = bitcast %union.tree_node** %type477 to i64**, !dbg !4732
  %86 = load i64*, i64** %85, align 8, !dbg !4732
  %bf.load479 = load i64, i64* %86, align 8, !dbg !4732
  %bf.cast4818 = and i64 %bf.load479, 65535, !dbg !4732
  %cmp482 = icmp eq i64 %bf.cast4818, 10, !dbg !4732
  %87 = bitcast i64* %86 to %struct.tree_type*, !dbg !4732
  br i1 %cmp482, label %land.lhs.true493, label %lor.lhs.false484, !dbg !4732

lor.lhs.false484:                                 ; preds = %land.lhs.true475
  %cmp491 = icmp eq i64 %bf.cast4818, 12, !dbg !4732
  br i1 %cmp491, label %land.lhs.true493, label %if.end673, !dbg !4733

land.lhs.true493:                                 ; preds = %lor.lhs.false484, %land.lhs.true475
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %84, i64 0, i32 6, !dbg !4734
  %bf.load497 = load i32, i32* %restrict_flag, align 4, !dbg !4734
  %bf.clear499 = and i32 %bf.load497, 8192, !dbg !4734
  %tobool500 = icmp eq i32 %bf.clear499, 0, !dbg !4734
  br i1 %tobool500, label %land.lhs.true501, label %if.end673, !dbg !4735

land.lhs.true501:                                 ; preds = %land.lhs.true493
  %restrict_flag505 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %87, i64 0, i32 6, !dbg !4736
  %bf.load506 = load i32, i32* %restrict_flag505, align 4, !dbg !4736
  %bf.clear508 = and i32 %bf.load506, 8192, !dbg !4736
  %tobool509 = icmp eq i32 %bf.clear508, 0, !dbg !4736
  br i1 %tobool509, label %if.end673, label %if.then510, !dbg !4737

if.then510:                                       ; preds = %land.lhs.true501
  %call511 = call fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* %call438) #7, !dbg !4738
  call fastcc void @make_constraint_from_restrict(%struct.variable_info* %call511, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i64 0, i64 0)) #7, !dbg !4739
  br label %if.end673, !dbg !4739

if.else514:                                       ; preds = %land.lhs.true322, %if.else318
  %call515 = tail call fastcc zeroext i8 @gimple_assign_cast_p(%union.gimple_statement_d* %origt) #7, !dbg !4740
  %tobool517 = icmp eq i8 %call515, 0, !dbg !4740
  br i1 %tobool517, label %if.else560, label %land.lhs.true518, !dbg !4741

land.lhs.true518:                                 ; preds = %if.else514
  %call519 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %origt) #7, !dbg !4742
  %type521 = getelementptr inbounds %union.tree_node, %union.tree_node* %call519, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4742
  %88 = bitcast %union.tree_node** %type521 to i64**, !dbg !4742
  %89 = load i64*, i64** %88, align 8, !dbg !4742
  %bf.load523 = load i64, i64* %89, align 8, !dbg !4742
  %bf.cast5252 = and i64 %bf.load523, 65535, !dbg !4742
  %cmp526 = icmp eq i64 %bf.cast5252, 10, !dbg !4742
  br i1 %cmp526, label %land.lhs.true538, label %lor.lhs.false528, !dbg !4742

lor.lhs.false528:                                 ; preds = %land.lhs.true518
  %call529 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %origt) #7, !dbg !4742
  %type531 = getelementptr inbounds %union.tree_node, %union.tree_node* %call529, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4742
  %90 = bitcast %union.tree_node** %type531 to i64**, !dbg !4742
  %91 = load i64*, i64** %90, align 8, !dbg !4742
  %bf.load533 = load i64, i64* %91, align 8, !dbg !4742
  %bf.cast5353 = and i64 %bf.load533, 65535, !dbg !4742
  %cmp536 = icmp eq i64 %bf.cast5353, 12, !dbg !4742
  br i1 %cmp536, label %land.lhs.true538, label %if.else560, !dbg !4743

land.lhs.true538:                                 ; preds = %lor.lhs.false528, %land.lhs.true518
  %call539 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4744
  %type541 = getelementptr inbounds %union.tree_node, %union.tree_node* %call539, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4744
  %92 = bitcast %union.tree_node** %type541 to i64**, !dbg !4744
  %93 = load i64*, i64** %92, align 8, !dbg !4744
  %bf.load543 = load i64, i64* %93, align 8, !dbg !4744
  %bf.cast5454 = and i64 %bf.load543, 65535, !dbg !4744
  %cmp546 = icmp eq i64 %bf.cast5454, 10, !dbg !4744
  br i1 %cmp546, label %if.else560, label %lor.lhs.false548, !dbg !4744

lor.lhs.false548:                                 ; preds = %land.lhs.true538
  %call549 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %origt) #7, !dbg !4744
  %type551 = getelementptr inbounds %union.tree_node, %union.tree_node* %call549, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4744
  %94 = bitcast %union.tree_node** %type551 to i64**, !dbg !4744
  %95 = load i64*, i64** %94, align 8, !dbg !4744
  %bf.load553 = load i64, i64* %95, align 8, !dbg !4744
  %bf.cast5555 = and i64 %bf.load553, 65535, !dbg !4744
  %cmp556 = icmp eq i64 %bf.cast5555, 12, !dbg !4744
  br i1 %cmp556, label %if.else560, label %if.then558, !dbg !4745

if.then558:                                       ; preds = %lor.lhs.false548
  %call559 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %origt) #7, !dbg !4746
  tail call fastcc void @make_escape_constraint(%union.tree_node* %call559) #7, !dbg !4748
  br label %if.end673, !dbg !4749

if.else560:                                       ; preds = %if.else514, %lor.lhs.false548, %land.lhs.true538, %lor.lhs.false528
  %call561 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %origt) #7, !dbg !4750
  %cmp562 = icmp eq i32 %call561, 9, !dbg !4751
  br i1 %cmp562, label %land.lhs.true564, label %if.else575, !dbg !4752

land.lhs.true564:                                 ; preds = %if.else560
  %call565 = tail call fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %origt) #7, !dbg !4753
  %cmp566 = icmp eq %union.tree_node* %call565, null, !dbg !4754
  br i1 %cmp566, label %if.else575, label %land.lhs.true568, !dbg !4755

land.lhs.true568:                                 ; preds = %land.lhs.true564
  %call569 = tail call fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %origt) #7, !dbg !4756
  %call570 = tail call fastcc zeroext i8 @could_have_pointers(%union.tree_node* %call569) #7, !dbg !4757
  %tobool572 = icmp eq i8 %call570, 0, !dbg !4757
  br i1 %tobool572, label %if.else575, label %if.then573, !dbg !4758

if.then573:                                       ; preds = %land.lhs.true568
  %call574 = tail call fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %origt) #7, !dbg !4759
  tail call fastcc void @make_escape_constraint(%union.tree_node* %call574) #7, !dbg !4761
  br label %if.end673, !dbg !4762

if.else575:                                       ; preds = %land.lhs.true568, %land.lhs.true564, %if.else560
  %call576 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %origt) #7, !dbg !4763
  %cmp577 = icmp eq i32 %call576, 7, !dbg !4764
  br i1 %cmp577, label %if.then579, label %if.end673, !dbg !4765

if.then579:                                       ; preds = %if.else575
  %96 = bitcast i8** %constraint to i8*, !dbg !4766
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #8, !dbg !4766
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !4363, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_mem) #8, !dbg !4768
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !4364, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_reg) #8, !dbg !4768
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !4365, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %is_inout) #8, !dbg !4768
  %call581 = tail call fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %origt) #7, !dbg !4769
  call void @llvm.dbg.value(metadata i32 %call581, metadata !4360, metadata !DIExpression()), !dbg !4767
  %conv582 = zext i32 %call581 to i64, !dbg !4770
  %97 = alloca i8*, i64 %conv582, align 16, !dbg !4770
  call void @llvm.dbg.value(metadata i8** %97, metadata !4361, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i32 0, metadata !4355, metadata !DIExpression()), !dbg !4767
  %98 = bitcast %struct.VEC_ce_s_heap** %lhsc607 to i8*, !dbg !4771
  %99 = bitcast %struct.constraint_expr* %rhsc608 to i8*, !dbg !4771
  %100 = bitcast %struct.constraint_expr** %lhsp609 to i8*, !dbg !4771
  %var611 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc608, i64 0, i32 1, !dbg !4771
  %offset612 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc608, i64 0, i32 2, !dbg !4771
  %type613 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc608, i64 0, i32 0, !dbg !4771
  %101 = bitcast %struct.constraint_expr** %lhsp609 to { i64, i64 }**, !dbg !4772
  %102 = bitcast %struct.constraint_expr* %rhsc608 to i64*, !dbg !4772
  %wide.trip.count = zext i32 %call581 to i64, !dbg !4775
  br label %for.cond583, !dbg !4776

for.cond583:                                      ; preds = %for.inc629, %if.then579
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc629 ], [ 0, %if.then579 ], !dbg !4777
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4355, metadata !DIExpression()), !dbg !4767
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !4775
  br i1 %exitcond, label %for.cond632.preheader, label %for.body586, !dbg !4778

for.cond632.preheader:                            ; preds = %for.cond583
  br label %for.cond632, !dbg !4779

for.body586:                                      ; preds = %for.cond583
  %103 = trunc i64 %indvars.iv to i32, !dbg !4780
  %call587 = call fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %origt, i32 %103) #7, !dbg !4780
  call void @llvm.dbg.value(metadata %union.tree_node* %call587, metadata !4366, metadata !DIExpression()), !dbg !4781
  %104 = getelementptr inbounds %union.tree_node, %union.tree_node* %call587, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4782
  %105 = load %union.tree_node*, %union.tree_node** %104, align 8, !dbg !4782
  call void @llvm.dbg.value(metadata %union.tree_node* %105, metadata !4370, metadata !DIExpression()), !dbg !4781
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %call587, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4783
  %106 = bitcast i32* %purpose to %struct.tree_list**, !dbg !4783
  %107 = load %struct.tree_list*, %struct.tree_list** %106, align 8, !dbg !4783
  %value590 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %107, i64 0, i32 2, !dbg !4783
  %108 = bitcast %union.tree_node** %value590 to %struct.tree_string**, !dbg !4783
  %109 = load %struct.tree_string*, %struct.tree_string** %108, align 8, !dbg !4783
  %arraydecay = getelementptr inbounds %struct.tree_string, %struct.tree_string* %109, i64 0, i32 2, i64 0, !dbg !4783
  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !4362, metadata !DIExpression()), !dbg !4767
  store i8* %arraydecay, i8** %constraint, align 8, !dbg !4784
  %.cast = ptrtoint i8* %arraydecay to i64, !dbg !4785
  %arrayidx592 = getelementptr inbounds i8*, i8** %97, i64 %indvars.iv, !dbg !4786
  %110 = bitcast i8** %arrayidx592 to i64*, !dbg !4787
  store i64 %.cast, i64* %110, align 8, !dbg !4787
  call void @llvm.dbg.value(metadata i8** %constraint, metadata !4362, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !4363, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !4364, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !4365, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  %111 = trunc i64 %indvars.iv to i32, !dbg !4788
  %call593 = call zeroext i8 @parse_output_constraint(i8** nonnull %constraint, i32 %111, i32 0, i32 0, i8* nonnull %allows_mem, i8* nonnull %allows_reg, i8* nonnull %is_inout) #6, !dbg !4788
  %112 = load i8, i8* %allows_reg, align 1, !dbg !4789
  call void @llvm.dbg.value(metadata i8 %112, metadata !4364, metadata !DIExpression()), !dbg !4767
  %tobool594 = icmp eq i8 %112, 0, !dbg !4789
  br i1 %tobool594, label %land.lhs.true595, label %if.end600, !dbg !4791

land.lhs.true595:                                 ; preds = %for.body586
  %113 = load i8, i8* %allows_mem, align 1, !dbg !4792
  call void @llvm.dbg.value(metadata i8 %113, metadata !4363, metadata !DIExpression()), !dbg !4767
  %tobool597 = icmp eq i8 %113, 0, !dbg !4792
  br i1 %tobool597, label %if.end600, label %if.then598, !dbg !4793

if.then598:                                       ; preds = %land.lhs.true595
  %call599 = call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %105) #6, !dbg !4794
  call fastcc void @make_escape_constraint(%union.tree_node* %call599) #7, !dbg !4795
  br label %if.end600, !dbg !4795

if.end600:                                        ; preds = %land.lhs.true595, %for.body586, %if.then598
  %tobool601 = icmp eq %union.tree_node* %105, null, !dbg !4796
  br i1 %tobool601, label %for.inc629, label %land.lhs.true602, !dbg !4797

land.lhs.true602:                                 ; preds = %if.end600
  %call603 = call fastcc zeroext i8 @could_have_pointers(%union.tree_node* nonnull %105) #7, !dbg !4798
  %tobool605 = icmp eq i8 %call603, 0, !dbg !4798
  br i1 %tobool605, label %for.inc629, label %if.then606, !dbg !4799

if.then606:                                       ; preds = %land.lhs.true602
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #8, !dbg !4800
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* null, metadata !4371, metadata !DIExpression()), !dbg !4771
  store %struct.VEC_ce_s_heap* null, %struct.VEC_ce_s_heap** %lhsc607, align 8, !dbg !4801
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #8, !dbg !4802
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #8, !dbg !4802
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc607, metadata !4371, metadata !DIExpression(DW_OP_deref)), !dbg !4771
  call fastcc void @get_constraint_for(%union.tree_node* nonnull %105, %struct.VEC_ce_s_heap** nonnull %lhsc607) #7, !dbg !4803
  store i32 4, i32* %var611, align 4, !dbg !4804
  store i64 0, i64* %offset612, align 8, !dbg !4805
  store i32 0, i32* %type613, align 8, !dbg !4806
  call void @llvm.dbg.value(metadata i32 0, metadata !4376, metadata !DIExpression()), !dbg !4771
  %114 = load i64, i64* %102, align 8, !dbg !4772
  br label %for.cond614, !dbg !4807

for.cond614:                                      ; preds = %for.body623, %if.then606
  %j610.0 = phi i32 [ 0, %if.then606 ], [ %inc626, %for.body623 ], !dbg !4808
  call void @llvm.dbg.value(metadata i32 %j610.0, metadata !4376, metadata !DIExpression()), !dbg !4771
  %115 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc607, align 8, !dbg !4809
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %115, metadata !4371, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %115, metadata !4371, metadata !DIExpression()), !dbg !4771
  %base617 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %115, i64 0, i32 0, !dbg !4809
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %lhsp609, metadata !4375, metadata !DIExpression(DW_OP_deref)), !dbg !4771
  %call621 = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base617, i32 %j610.0, %struct.constraint_expr** nonnull %lhsp609) #7, !dbg !4809
  %tobool622 = icmp eq i32 %call621, 0, !dbg !4810
  br i1 %tobool622, label %for.end627, label %for.body623, !dbg !4810

for.body623:                                      ; preds = %for.cond614
  %116 = load { i64, i64 }*, { i64, i64 }** %101, align 8, !dbg !4811
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %116, i64 0, i32 0, !dbg !4812
  %118 = load i64, i64* %117, align 8, !dbg !4812
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %116, i64 0, i32 1, !dbg !4812
  %120 = load i64, i64* %119, align 8, !dbg !4812
  %call624 = call fastcc %struct.constraint* @new_constraint(i64 %118, i64 %120, i64 %114, i64 0) #7, !dbg !4812
  call fastcc void @process_constraint(%struct.constraint* %call624) #7, !dbg !4813
  %inc626 = add i32 %j610.0, 1, !dbg !4814
  call void @llvm.dbg.value(metadata i32 %inc626, metadata !4376, metadata !DIExpression()), !dbg !4771
  br label %for.cond614, !dbg !4815, !llvm.loop !4816

for.end627:                                       ; preds = %for.cond614
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc607, metadata !4371, metadata !DIExpression(DW_OP_deref)), !dbg !4771
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %lhsc607) #7, !dbg !4818
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #8, !dbg !4819
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #8, !dbg !4819
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #8, !dbg !4819
  br label %for.inc629, !dbg !4820

for.inc629:                                       ; preds = %land.lhs.true602, %if.end600, %for.end627
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4821
  br label %for.cond583, !dbg !4822, !llvm.loop !4823

for.cond632:                                      ; preds = %for.cond632.preheader, %for.inc665
  %i580.1 = phi i32 [ %inc666, %for.inc665 ], [ 0, %for.cond632.preheader ], !dbg !4825
  call void @llvm.dbg.value(metadata i32 %i580.1, metadata !4355, metadata !DIExpression()), !dbg !4767
  %call633 = call fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %origt) #7, !dbg !4826
  %cmp634 = icmp ult i32 %i580.1, %call633, !dbg !4827
  br i1 %cmp634, label %for.body636, label %for.end667, !dbg !4779

for.body636:                                      ; preds = %for.cond632
  %call638 = call fastcc %union.tree_node* @gimple_asm_input_op(%union.gimple_statement_d* %origt, i32 %i580.1) #7, !dbg !4828
  call void @llvm.dbg.value(metadata %union.tree_node* %call638, metadata !4377, metadata !DIExpression()), !dbg !4829
  %121 = getelementptr inbounds %union.tree_node, %union.tree_node* %call638, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4830
  %122 = load %union.tree_node*, %union.tree_node** %121, align 8, !dbg !4830
  call void @llvm.dbg.value(metadata %union.tree_node* %122, metadata !4381, metadata !DIExpression()), !dbg !4829
  %purpose643 = getelementptr inbounds %union.tree_node, %union.tree_node* %call638, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4831
  %123 = bitcast i32* %purpose643 to %struct.tree_list**, !dbg !4831
  %124 = load %struct.tree_list*, %struct.tree_list** %123, align 8, !dbg !4831
  %value645 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %124, i64 0, i32 2, !dbg !4831
  %125 = bitcast %union.tree_node** %value645 to %struct.tree_string**, !dbg !4831
  %126 = load %struct.tree_string*, %struct.tree_string** %125, align 8, !dbg !4831
  %arraydecay648 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %126, i64 0, i32 2, i64 0, !dbg !4831
  call void @llvm.dbg.value(metadata i8* %arraydecay648, metadata !4362, metadata !DIExpression()), !dbg !4767
  store i8* %arraydecay648, i8** %constraint, align 8, !dbg !4832
  call void @llvm.dbg.value(metadata i8** %constraint, metadata !4362, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !4363, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !4364, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  %call649 = call zeroext i8 @parse_input_constraint(i8** nonnull %constraint, i32 0, i32 0, i32 %call581, i32 0, i8** nonnull %97, i8* nonnull %allows_mem, i8* nonnull %allows_reg) #6, !dbg !4833
  %127 = load i8, i8* %allows_reg, align 1, !dbg !4834
  call void @llvm.dbg.value(metadata i8 %127, metadata !4364, metadata !DIExpression()), !dbg !4767
  %tobool650 = icmp eq i8 %127, 0, !dbg !4834
  br i1 %tobool650, label %land.lhs.true651, label %if.else656, !dbg !4836

land.lhs.true651:                                 ; preds = %for.body636
  %128 = load i8, i8* %allows_mem, align 1, !dbg !4837
  call void @llvm.dbg.value(metadata i8 %128, metadata !4363, metadata !DIExpression()), !dbg !4767
  %tobool653 = icmp eq i8 %128, 0, !dbg !4837
  br i1 %tobool653, label %if.else656, label %if.then654, !dbg !4838

if.then654:                                       ; preds = %land.lhs.true651
  %call655 = call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %122) #6, !dbg !4839
  call fastcc void @make_escape_constraint(%union.tree_node* %call655) #7, !dbg !4840
  br label %for.inc665, !dbg !4840

if.else656:                                       ; preds = %land.lhs.true651, %for.body636
  %tobool657 = icmp eq %union.tree_node* %122, null, !dbg !4841
  br i1 %tobool657, label %for.inc665, label %land.lhs.true658, !dbg !4843

land.lhs.true658:                                 ; preds = %if.else656
  %call659 = call fastcc zeroext i8 @could_have_pointers(%union.tree_node* nonnull %122) #7, !dbg !4844
  %tobool661 = icmp eq i8 %call659, 0, !dbg !4844
  br i1 %tobool661, label %for.inc665, label %if.then662, !dbg !4845

if.then662:                                       ; preds = %land.lhs.true658
  call fastcc void @make_escape_constraint(%union.tree_node* nonnull %122) #7, !dbg !4846
  br label %for.inc665, !dbg !4846

for.inc665:                                       ; preds = %land.lhs.true658, %if.else656, %if.then654, %if.then662
  %inc666 = add i32 %i580.1, 1, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %inc666, metadata !4355, metadata !DIExpression()), !dbg !4767
  br label %for.cond632, !dbg !4848, !llvm.loop !4849

for.end667:                                       ; preds = %for.cond632
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !4365, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %is_inout) #8, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !4364, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_reg) #8, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !4363, metadata !DIExpression(DW_OP_deref)), !dbg !4767
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_mem) #8, !dbg !4851
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #8, !dbg !4851
  br label %if.end673, !dbg !4852

if.end673.loopexit:                               ; preds = %for.cond
  br label %if.end673, !dbg !4853

if.end673:                                        ; preds = %if.end673.loopexit, %cond.end, %land.lhs.true501, %land.lhs.true493, %if.else453, %cleanup, %if.then558, %if.else575, %for.end667, %if.then573, %if.then452, %if.then510, %lor.lhs.false484, %lor.lhs.false466
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !4294, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !4853
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !4854
  br label %cleanup674, !dbg !4855

cleanup674:                                       ; preds = %cleanup, %if.end673
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4855
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4855
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4855
  ret void, !dbg !4855
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !4856 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4861, metadata !DIExpression()), !dbg !4862
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4863
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4863
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !4864
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !4864
  %2 = load i64, i64* %1, align 8, !dbg !4864
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !4865
  store i64 %2, i64* %3, align 8, !dbg !4865
  ret void, !dbg !4866
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4867 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4871, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4872, metadata !DIExpression()), !dbg !4875
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !4876
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !4873, metadata !DIExpression()), !dbg !4874
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !4877
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4878
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4879
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4880
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !4881
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4882
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !4883
  ret void, !dbg !4884
}

; Function Attrs: nounwind uwtable
define internal fastcc void @solve_constraints() unnamed_addr #5 !dbg !4885 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4888
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !4888
  br i1 %tobool, label %if.end, label %if.then, !dbg !4890

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !4891
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4893
  tail call fastcc void @dump_constraints(%struct._IO_FILE* %1) #7, !dbg !4894
  %.pre = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4895
  br label %if.end, !dbg !4897

if.end:                                           ; preds = %entry, %if.then
  %2 = phi %struct._IO_FILE* [ null, %entry ], [ %.pre, %if.then ], !dbg !4895
  %tobool1 = icmp eq %struct._IO_FILE* %2, null, !dbg !4895
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !4898

if.then2:                                         ; preds = %if.end
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.70, i64 0, i64 0)) #6, !dbg !4899
  br label %if.end4, !dbg !4899

if.end4:                                          ; preds = %if.end, %if.then2
  %3 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !4900
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %3, i64 0, i32 0, !dbg !4900
  %call6 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !4900
  %mul = shl i32 %call6, 1, !dbg !4901
  tail call fastcc void @init_graph(i32 %mul) #7, !dbg !4902
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4903
  %tobool7 = icmp eq %struct._IO_FILE* %4, null, !dbg !4903
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !4905

if.then8:                                         ; preds = %if.end4
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !4906
  br label %if.end10, !dbg !4906

if.end10:                                         ; preds = %if.end4, %if.then8
  tail call fastcc void @build_pred_graph() #7, !dbg !4907
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4908
  %tobool11 = icmp eq %struct._IO_FILE* %5, null, !dbg !4908
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !4910

if.then12:                                        ; preds = %if.end10
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.72, i64 0, i64 0)) #6, !dbg !4911
  br label %if.end14, !dbg !4911

if.end14:                                         ; preds = %if.end10, %if.then12
  %6 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !4912
  %call15 = tail call fastcc %struct.scc_info* @perform_var_substitution(%struct.constraint_graph* %6) #7, !dbg !4913
  call void @llvm.dbg.value(metadata %struct.scc_info* %call15, metadata !4887, metadata !DIExpression()), !dbg !4914
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4915
  %tobool16 = icmp eq %struct._IO_FILE* %7, null, !dbg !4915
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !4917

if.then17:                                        ; preds = %if.end14
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.73, i64 0, i64 0)) #6, !dbg !4918
  br label %if.end19, !dbg !4918

if.end19:                                         ; preds = %if.end14, %if.then17
  %8 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !4919
  tail call fastcc void @rewrite_constraints(%struct.constraint_graph* %8, %struct.scc_info* %call15) #7, !dbg !4920
  tail call fastcc void @build_succ_graph() #7, !dbg !4921
  tail call fastcc void @free_var_substitution_info(%struct.scc_info* %call15) #7, !dbg !4922
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4923
  %tobool20 = icmp eq %struct._IO_FILE* %9, null, !dbg !4923
  br i1 %tobool20, label %if.end23, label %land.lhs.true, !dbg !4925

land.lhs.true:                                    ; preds = %if.end19
  %10 = load i32, i32* @dump_flags, align 4, !dbg !4926
  %and = and i32 %10, 8192, !dbg !4927
  %tobool21 = icmp eq i32 %and, 0, !dbg !4927
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !4928

if.then22:                                        ; preds = %land.lhs.true
  tail call fastcc void @dump_constraint_graph(%struct._IO_FILE* nonnull %9) #7, !dbg !4929
  br label %if.end23, !dbg !4929

if.end23:                                         ; preds = %land.lhs.true, %if.end19, %if.then22
  %11 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !4930
  tail call fastcc void @move_complex_constraints(%struct.constraint_graph* %11) #7, !dbg !4931
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4932
  %tobool24 = icmp eq %struct._IO_FILE* %12, null, !dbg !4932
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !4934

if.then25:                                        ; preds = %if.end23
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.74, i64 0, i64 0)) #6, !dbg !4935
  br label %if.end27, !dbg !4935

if.end27:                                         ; preds = %if.end23, %if.then25
  %13 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !4936
  tail call fastcc void @unite_pointer_equivalences(%struct.constraint_graph* %13) #7, !dbg !4937
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4938
  %tobool28 = icmp eq %struct._IO_FILE* %14, null, !dbg !4938
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !4940

if.then29:                                        ; preds = %if.end27
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.75, i64 0, i64 0)) #6, !dbg !4941
  br label %if.end31, !dbg !4941

if.end31:                                         ; preds = %if.end27, %if.then29
  %15 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !4942
  tail call fastcc void @find_indirect_cycles(%struct.constraint_graph* %15) #7, !dbg !4943
  %16 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !4944
  tail call fastcc void @remove_preds_and_fake_succs(%struct.constraint_graph* %16) #7, !dbg !4945
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4946
  %tobool32 = icmp eq %struct._IO_FILE* %17, null, !dbg !4946
  br i1 %tobool32, label %if.end35, label %if.then33, !dbg !4948

if.then33:                                        ; preds = %if.end31
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i64 0, i64 0)) #6, !dbg !4949
  br label %if.end35, !dbg !4949

if.end35:                                         ; preds = %if.end31, %if.then33
  %18 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !4950
  tail call fastcc void @solve_graph(%struct.constraint_graph* %18) #7, !dbg !4951
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4952
  %tobool36 = icmp eq %struct._IO_FILE* %19, null, !dbg !4952
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !4954

if.then37:                                        ; preds = %if.end35
  tail call fastcc void @dump_sa_points_to_info(%struct._IO_FILE* nonnull %19) #7, !dbg !4955
  br label %if.end38, !dbg !4955

if.end38:                                         ; preds = %if.end35, %if.then37
  ret void, !dbg !4956
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_what_var_points_to(%struct.variable_info* %orig_vi, %struct.pt_solution* %pt) unnamed_addr #5 !dbg !4957 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.variable_info* %orig_vi, metadata !4961, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt, metadata !4962, metadata !DIExpression()), !dbg !4972
  %0 = bitcast i32* %i to i8*, !dbg !4973
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4973
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4974
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4974
  %2 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 0, !dbg !4975
  %call = tail call i8* @memset(i8* %2, i32 0, i64 16) #6, !dbg !4976
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %orig_vi, i64 0, i32 0, !dbg !4977
  %3 = load i32, i32* %id, align 8, !dbg !4977
  %call1 = tail call fastcc i32 @find(i32 %3) #7, !dbg !4978
  %call2 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %call1) #7, !dbg !4979
  call void @llvm.dbg.value(metadata %struct.variable_info* %call2, metadata !4967, metadata !DIExpression()), !dbg !4972
  %solution = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call2, i64 0, i32 8, !dbg !4980
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution, align 8, !dbg !4980
  call void @llvm.dbg.value(metadata i32* %i, metadata !4963, metadata !DIExpression(DW_OP_deref)), !dbg !4972
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4964, metadata !DIExpression(DW_OP_deref)), !dbg !4972
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %4, i32 0, i32* nonnull %i) #7, !dbg !4980
  br label %for.cond, !dbg !4980

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !4963, metadata !DIExpression(DW_OP_deref)), !dbg !4972
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4964, metadata !DIExpression(DW_OP_deref)), !dbg !4972
  %call3 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4981
  %tobool = icmp eq i8 %call3, 0, !dbg !4980
  br i1 %tobool, label %for.end, label %for.body, !dbg !4980

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %5, metadata !4963, metadata !DIExpression()), !dbg !4972
  %call5 = call fastcc %struct.variable_info* @get_varinfo(i32 %5) #7, !dbg !4983
  call void @llvm.dbg.value(metadata %struct.variable_info* %call5, metadata !4968, metadata !DIExpression()), !dbg !4984
  %is_artificial_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call5, i64 0, i32 1, !dbg !4985
  %bf.load = load i8, i8* %is_artificial_var, align 4, !dbg !4985
  %bf.clear = and i8 %bf.load, 1, !dbg !4985
  %tobool6 = icmp eq i8 %bf.clear, 0, !dbg !4987
  br i1 %tobool6, label %if.end53, label %if.then, !dbg !4988

if.then:                                          ; preds = %for.body
  %id7 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call5, i64 0, i32 0, !dbg !4989
  %6 = load i32, i32* %id7, align 8, !dbg !4989
  %cmp = icmp eq i32 %6, 0, !dbg !4992
  br i1 %cmp, label %if.then8, label %if.else, !dbg !4993

if.then8:                                         ; preds = %if.then
  %bf.load9 = load i8, i8* %2, align 8, !dbg !4994
  %bf.set = or i8 %bf.load9, 8, !dbg !4994
  store i8 %bf.set, i8* %2, align 8, !dbg !4994
  br label %if.end53, !dbg !4995

if.else:                                          ; preds = %if.then
  %cmp12 = icmp eq i32 %6, 3, !dbg !4996
  br i1 %cmp12, label %if.then13, label %if.else17, !dbg !4998

if.then13:                                        ; preds = %if.else
  %bf.load14 = load i8, i8* %2, align 8, !dbg !4999
  %bf.set16 = or i8 %bf.load14, 4, !dbg !4999
  store i8 %bf.set16, i8* %2, align 8, !dbg !4999
  br label %if.end53, !dbg !5000

if.else17:                                        ; preds = %if.else
  %cmp19 = icmp eq i32 %6, 5, !dbg !5001
  br i1 %cmp19, label %if.then20, label %if.else21, !dbg !5003

if.then20:                                        ; preds = %if.else17
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 4820, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5004
  br label %if.end53, !dbg !5004

if.else21:                                        ; preds = %if.else17
  %cmp23 = icmp eq i32 %6, 4, !dbg !5005
  br i1 %cmp23, label %if.then24, label %if.else28, !dbg !5007

if.then24:                                        ; preds = %if.else21
  %bf.load25 = load i8, i8* %2, align 8, !dbg !5008
  %bf.set27 = or i8 %bf.load25, 2, !dbg !5008
  store i8 %bf.set27, i8* %2, align 8, !dbg !5008
  br label %if.end53, !dbg !5009

if.else28:                                        ; preds = %if.else21
  %bf.clear30 = and i8 %bf.load, 16, !dbg !5010
  %tobool32 = icmp eq i8 %bf.clear30, 0, !dbg !5012
  br i1 %tobool32, label %if.else34, label %if.end53, !dbg !5013

if.else34:                                        ; preds = %if.else28
  %cmp36 = icmp eq i32 %6, 2, !dbg !5014
  br i1 %cmp36, label %if.end53, label %if.else38, !dbg !5016

if.else38:                                        ; preds = %if.else34
  %cmp40 = icmp eq i32 %6, 1, !dbg !5017
  br i1 %cmp40, label %if.then43, label %lor.lhs.false, !dbg !5019

lor.lhs.false:                                    ; preds = %if.else38
  %cmp42 = icmp eq i32 %6, 7, !dbg !5020
  br i1 %cmp42, label %if.then43, label %if.end53, !dbg !5021

if.then43:                                        ; preds = %lor.lhs.false, %if.else38
  %bf.load44 = load i8, i8* %2, align 8, !dbg !5022
  %bf.set46 = or i8 %bf.load44, 1, !dbg !5022
  store i8 %bf.set46, i8* %2, align 8, !dbg !5022
  br label %if.end53, !dbg !5023

if.end53:                                         ; preds = %if.else28, %for.body, %if.then8, %if.then20, %lor.lhs.false, %if.then43, %if.else34, %if.then24, %if.then13
  %bf.load54 = load i8, i8* %is_artificial_var, align 4, !dbg !5024
  %bf.clear56 = and i8 %bf.load54, 32, !dbg !5024
  %tobool58 = icmp eq i8 %bf.clear56, 0, !dbg !5026
  br i1 %tobool58, label %for.inc, label %if.then59, !dbg !5027

if.then59:                                        ; preds = %if.end53
  %bf.load60 = load i8, i8* %2, align 8, !dbg !5028
  %bf.set62 = or i8 %bf.load60, 32, !dbg !5028
  store i8 %bf.set62, i8* %2, align 8, !dbg !5028
  br label %for.inc, !dbg !5029

for.inc:                                          ; preds = %if.end53, %if.then59
  call void @llvm.dbg.value(metadata i32* %i, metadata !4963, metadata !DIExpression(DW_OP_deref)), !dbg !4972
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4964, metadata !DIExpression(DW_OP_deref)), !dbg !4972
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !4981
  br label %for.cond, !dbg !4981, !llvm.loop !5030

for.end:                                          ; preds = %for.cond
  %bf.load64 = load i8, i8* %2, align 8, !dbg !5032
  %bf.clear65 = and i8 %bf.load64, 1, !dbg !5032
  %tobool67 = icmp eq i8 %bf.clear65, 0, !dbg !5034
  br i1 %tobool67, label %if.end80, label %land.lhs.true, !dbg !5035

land.lhs.true:                                    ; preds = %for.end
  %is_artificial_var68 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %orig_vi, i64 0, i32 1, !dbg !5036
  %bf.load69 = load i8, i8* %is_artificial_var68, align 4, !dbg !5036
  %bf.clear70 = and i8 %bf.load69, 1, !dbg !5036
  %tobool72 = icmp eq i8 %bf.clear70, 0, !dbg !5037
  br i1 %tobool72, label %lor.lhs.false73, label %cleanup, !dbg !5038

lor.lhs.false73:                                  ; preds = %land.lhs.true
  %bf.clear76 = and i8 %bf.load64, 32, !dbg !5039
  %tobool78 = icmp eq i8 %bf.clear76, 0, !dbg !5040
  br i1 %tobool78, label %cleanup, label %if.end80, !dbg !5041

if.end80:                                         ; preds = %lor.lhs.false73, %for.end
  %call81 = call %struct.bitmap_head_def* @bitmap_gc_alloc_stat() #6, !dbg !5042
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call81, metadata !4965, metadata !DIExpression()), !dbg !4972
  %7 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 7), align 4, !dbg !5043
  %inc = add i32 %7, 1, !dbg !5043
  store i32 %inc, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 7), align 4, !dbg !5043
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution, align 8, !dbg !5044
  call fastcc void @set_uids_in_ptset(%struct.bitmap_head_def* %call81, %struct.bitmap_head_def* %8, %struct.pt_solution* %pt) #7, !dbg !5045
  %call83 = call fastcc %struct.bitmap_head_def* @shared_bitmap_lookup(%struct.bitmap_head_def* %call81) #7, !dbg !5046
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call83, metadata !4966, metadata !DIExpression()), !dbg !4972
  %tobool84 = icmp eq %struct.bitmap_head_def* %call83, null, !dbg !5047
  br i1 %tobool84, label %if.then85, label %if.else86, !dbg !5049

if.then85:                                        ; preds = %if.end80
  call fastcc void @shared_bitmap_add(%struct.bitmap_head_def* %call81) #7, !dbg !5050
  %vars = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 1, !dbg !5052
  store %struct.bitmap_head_def* %call81, %struct.bitmap_head_def** %vars, align 8, !dbg !5053
  br label %cleanup, !dbg !5054

if.else86:                                        ; preds = %if.end80
  %vars87 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 1, !dbg !5055
  store %struct.bitmap_head_def* %call83, %struct.bitmap_head_def** %vars87, align 8, !dbg !5057
  call void @bitmap_clear(%struct.bitmap_head_def* %call81) #6, !dbg !5058
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false73, %land.lhs.true, %if.then85, %if.else86
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5059
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5059
  ret void, !dbg !5059
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_varinfo_t_base_iterate(%struct.VEC_varinfo_t_base* %vec_, i32 %ix_, %struct.variable_info** %ptr) unnamed_addr #0 !dbg !5060 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_varinfo_t_base* %vec_, metadata !5065, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5066, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata %struct.variable_info** %ptr, metadata !5067, metadata !DIExpression()), !dbg !5068
  %tobool = icmp eq %struct.VEC_varinfo_t_base* %vec_, null, !dbg !5069
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5069

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_varinfo_t_base, %struct.VEC_varinfo_t_base* %vec_, i64 0, i32 0, !dbg !5069
  %0 = load i32, i32* %num, align 8, !dbg !5069
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5069
  br i1 %cmp, label %if.then, label %if.else, !dbg !5071

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5072
  %arrayidx = getelementptr inbounds %struct.VEC_varinfo_t_base, %struct.VEC_varinfo_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5072
  %1 = load %struct.variable_info*, %struct.variable_info** %arrayidx, align 8, !dbg !5072
  br label %return, !dbg !5072

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5074

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.variable_info* [ null, %if.else ], [ %1, %if.then ], !dbg !5076
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5076
  store %struct.variable_info* %storemerge, %struct.variable_info** %ptr, align 8, !dbg !5076
  ret i32 %retval.0, !dbg !5071
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !5077 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5083, metadata !DIExpression()), !dbg !5084
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5085
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5085

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5085
  %0 = load i32, i32* %num, align 8, !dbg !5085
  br label %cond.end, !dbg !5085

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5085
  ret i32 %cond, !dbg !5085
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5086 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5090, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5091, metadata !DIExpression()), !dbg !5092
  br label %land.end, !dbg !5093

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5093
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5093
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5093
  ret %union.tree_node* %0, !dbg !5093
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_what_p_points_to(%union.tree_node* %p) unnamed_addr #5 !dbg !5094 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %p, metadata !5098, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.value(metadata %union.tree_node* %p, metadata !5100, metadata !DIExpression()), !dbg !5102
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %p, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5103
  %bf.load = load i64, i64* %0, align 8, !dbg !5103
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5105
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5105
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5106

land.lhs.true:                                    ; preds = %entry
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %p, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5107
  %1 = bitcast i32* %var to i64**, !dbg !5107
  %2 = load i64*, i64** %1, align 8, !dbg !5107
  %bf.load2 = load i64, i64* %2, align 8, !dbg !5107
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !5108
  %cmp5 = icmp eq i64 %bf.cast42, 34, !dbg !5108
  %3 = bitcast i64* %2 to %union.tree_node*, !dbg !5109
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !5109

land.lhs.true6:                                   ; preds = %land.lhs.true
  %bf.cast103 = and i64 %bf.load, 4294967296, !dbg !5110
  %tobool = icmp eq i64 %bf.cast103, 0, !dbg !5110
  br i1 %tobool, label %if.end, label %if.then, !dbg !5111

if.then:                                          ; preds = %land.lhs.true6
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5100, metadata !DIExpression()), !dbg !5102
  br label %if.end, !dbg !5112

if.end:                                           ; preds = %land.lhs.true6, %if.then, %land.lhs.true, %entry
  %lookup_p.0 = phi %union.tree_node* [ %3, %if.then ], [ %p, %land.lhs.true6 ], [ %p, %land.lhs.true ], [ %p, %entry ], !dbg !5102
  call void @llvm.dbg.value(metadata %union.tree_node* %lookup_p.0, metadata !5100, metadata !DIExpression()), !dbg !5102
  %call = tail call fastcc %struct.variable_info* @lookup_vi_for_tree(%union.tree_node* %lookup_p.0) #7, !dbg !5113
  call void @llvm.dbg.value(metadata %struct.variable_info* %call, metadata !5101, metadata !DIExpression()), !dbg !5102
  %tobool13 = icmp eq %struct.variable_info* %call, null, !dbg !5114
  br i1 %tobool13, label %cleanup.cont, label %if.end15, !dbg !5116

if.end15:                                         ; preds = %if.end
  %call16 = tail call %struct.ptr_info_def* @get_ptr_info(%union.tree_node* %p) #6, !dbg !5117
  call void @llvm.dbg.value(metadata %struct.ptr_info_def* %call16, metadata !5099, metadata !DIExpression()), !dbg !5102
  %pt = getelementptr inbounds %struct.ptr_info_def, %struct.ptr_info_def* %call16, i64 0, i32 0, !dbg !5118
  tail call fastcc void @find_what_var_points_to(%struct.variable_info* nonnull %call, %struct.pt_solution* %pt) #7, !dbg !5119
  br label %cleanup.cont, !dbg !5120

cleanup.cont:                                     ; preds = %if.end, %if.end15
  ret void, !dbg !5120
}

declare dso_local void @timevar_pop_1(i32) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_initialize(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_constraint_t_heap* @VEC_constraint_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5121 {
entry:
  call void @llvm.dbg.value(metadata i32 8, metadata !5125, metadata !DIExpression()), !dbg !5126
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 8) #6, !dbg !5127
  %0 = bitcast i8* %call to %struct.VEC_constraint_t_heap*, !dbg !5127
  ret %struct.VEC_constraint_t_heap* %0, !dbg !5127
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_varinfo_t_heap* @VEC_varinfo_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5128 {
entry:
  call void @llvm.dbg.value(metadata i32 8, metadata !5132, metadata !DIExpression()), !dbg !5133
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 8) #6, !dbg !5134
  %0 = bitcast i8* %call to %struct.VEC_varinfo_t_heap*, !dbg !5134
  ret %struct.VEC_varinfo_t_heap* %0, !dbg !5134
}

declare dso_local %struct.pointer_map_t* @pointer_map_create() local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @shared_bitmap_hash(i8* %p) #5 !dbg !5135 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !5137, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i8* %p, metadata !5138, metadata !DIExpression()), !dbg !5140
  %hashcode = getelementptr inbounds i8, i8* %p, i64 8, !dbg !5141
  %0 = bitcast i8* %hashcode to i32*, !dbg !5141
  %1 = load i32, i32* %0, align 8, !dbg !5141
  ret i32 %1, !dbg !5142
}

; Function Attrs: nounwind uwtable
define internal i32 @shared_bitmap_eq(i8* %p1, i8* %p2) #5 !dbg !5143 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5145, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5146, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5147, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5148, metadata !DIExpression()), !dbg !5149
  %pt_vars = bitcast i8* %p1 to %struct.bitmap_head_def**, !dbg !5150
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %pt_vars, align 8, !dbg !5150
  %pt_vars1 = bitcast i8* %p2 to %struct.bitmap_head_def**, !dbg !5151
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %pt_vars1, align 8, !dbg !5151
  %call = tail call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %0, %struct.bitmap_head_def* %1) #6, !dbg !5152
  %conv = zext i8 %call to i32, !dbg !5152
  ret i32 %conv, !dbg !5153
}

declare dso_local void @free(i8*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_base_vars() unnamed_addr #5 !dbg !5154 {
entry:
  %lhs = alloca %struct.constraint_expr, align 8
  %rhs = alloca %struct.constraint_expr, align 8
  %0 = bitcast %struct.constraint_expr* %lhs to i8*, !dbg !5166
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5166
  %1 = bitcast %struct.constraint_expr* %rhs to i8*, !dbg !5166
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5166
  %call = tail call fastcc %struct.variable_info* @new_var_info(%union.tree_node* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !5167
  call void @llvm.dbg.value(metadata %struct.variable_info* %call, metadata !5159, metadata !DIExpression()), !dbg !5168
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 0, !dbg !5169
  %2 = load i32, i32* %id, align 8, !dbg !5169
  %cmp = icmp eq i32 %2, 0, !dbg !5169
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5169

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 5153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5169
  br label %cond.end, !dbg !5169

cond.end:                                         ; preds = %entry, %cond.true
  %is_artificial_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 1, !dbg !5170
  %bf.load = load i8, i8* %is_artificial_var, align 4, !dbg !5171
  %offset = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 3, !dbg !5172
  store i64 0, i64* %offset, align 8, !dbg !5173
  %size = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 4, !dbg !5174
  store i64 -1, i64* %size, align 8, !dbg !5175
  %fullsize = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 5, !dbg !5176
  store i64 -1, i64* %fullsize, align 8, !dbg !5177
  %bf.set3 = or i8 %bf.load, 3, !dbg !5178
  store i8 %bf.set3, i8* %is_artificial_var, align 4, !dbg !5178
  %call4 = tail call fastcc %struct.variable_info* @new_var_info(%union.tree_node* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0)) #7, !dbg !5179
  call void @llvm.dbg.value(metadata %struct.variable_info* %call4, metadata !5158, metadata !DIExpression()), !dbg !5168
  %id5 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call4, i64 0, i32 0, !dbg !5180
  %3 = load i32, i32* %id5, align 8, !dbg !5180
  %cmp6 = icmp eq i32 %3, 1, !dbg !5180
  br i1 %cmp6, label %cond.end9, label %cond.true7, !dbg !5180

cond.true7:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 5163, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5180
  br label %cond.end9, !dbg !5180

cond.end9:                                        ; preds = %cond.end, %cond.true7
  %is_artificial_var11 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call4, i64 0, i32 1, !dbg !5181
  %bf.load12 = load i8, i8* %is_artificial_var11, align 4, !dbg !5182
  %size15 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call4, i64 0, i32 4, !dbg !5183
  store i64 -1, i64* %size15, align 8, !dbg !5184
  %offset16 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call4, i64 0, i32 3, !dbg !5185
  store i64 0, i64* %offset16, align 8, !dbg !5186
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call4, i64 0, i32 2, !dbg !5187
  store %struct.variable_info* null, %struct.variable_info** %next, align 8, !dbg !5188
  %fullsize17 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call4, i64 0, i32 5, !dbg !5189
  store i64 -1, i64* %fullsize17, align 8, !dbg !5190
  %bf.set21 = or i8 %bf.load12, 3, !dbg !5191
  store i8 %bf.set21, i8* %is_artificial_var11, align 4, !dbg !5191
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 0, !dbg !5192
  store i32 0, i32* %type, align 8, !dbg !5193
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 1, !dbg !5194
  store i32 1, i32* %var, align 4, !dbg !5195
  %offset22 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 2, !dbg !5196
  store i64 0, i64* %offset22, align 8, !dbg !5197
  %type23 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 0, !dbg !5198
  store i32 2, i32* %type23, align 8, !dbg !5199
  %var24 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 1, !dbg !5200
  store i32 1, i32* %var24, align 4, !dbg !5201
  %offset25 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2, !dbg !5202
  store i64 0, i64* %offset25, align 8, !dbg !5203
  %4 = bitcast %struct.constraint_expr* %lhs to i64*, !dbg !5204
  %5 = load i64, i64* %4, align 8, !dbg !5204
  %6 = bitcast %struct.constraint_expr* %rhs to i64*, !dbg !5204
  %7 = load i64, i64* %6, align 8, !dbg !5204
  %call26 = tail call fastcc %struct.constraint* @new_constraint(i64 %5, i64 0, i64 %7, i64 0) #7, !dbg !5204
  %call27 = tail call fastcc %struct.constraint** @VEC_constraint_t_heap_safe_push(%struct.VEC_constraint_t_heap** nonnull @constraints, %struct.constraint* %call26) #7, !dbg !5204
  %call28 = tail call fastcc %struct.variable_info* @new_var_info(%union.tree_node* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i64 0, i64 0)) #7, !dbg !5205
  call void @llvm.dbg.value(metadata %struct.variable_info* %call28, metadata !5160, metadata !DIExpression()), !dbg !5168
  %id29 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call28, i64 0, i32 0, !dbg !5206
  %8 = load i32, i32* %id29, align 8, !dbg !5206
  %cmp30 = icmp eq i32 %8, 2, !dbg !5206
  br i1 %cmp30, label %cond.end33, label %cond.true31, !dbg !5206

cond.true31:                                      ; preds = %cond.end9
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 5189, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5206
  br label %cond.end33, !dbg !5206

cond.end33:                                       ; preds = %cond.end9, %cond.true31
  %is_artificial_var35 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call28, i64 0, i32 1, !dbg !5207
  %bf.load36 = load i8, i8* %is_artificial_var35, align 4, !dbg !5208
  %offset39 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call28, i64 0, i32 3, !dbg !5209
  store i64 0, i64* %offset39, align 8, !dbg !5210
  %size40 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call28, i64 0, i32 4, !dbg !5211
  store i64 -1, i64* %size40, align 8, !dbg !5212
  %fullsize41 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call28, i64 0, i32 5, !dbg !5213
  store i64 -1, i64* %fullsize41, align 8, !dbg !5214
  %next42 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call28, i64 0, i32 2, !dbg !5215
  store %struct.variable_info* null, %struct.variable_info** %next42, align 8, !dbg !5216
  %bf.set46 = or i8 %bf.load36, 3, !dbg !5217
  store i8 %bf.set46, i8* %is_artificial_var35, align 4, !dbg !5217
  store i32 0, i32* %type, align 8, !dbg !5218
  store i32 2, i32* %var, align 4, !dbg !5219
  store i64 0, i64* %offset22, align 8, !dbg !5220
  store i32 2, i32* %type23, align 8, !dbg !5221
  store i32 2, i32* %var24, align 4, !dbg !5222
  store i64 0, i64* %offset25, align 8, !dbg !5223
  %9 = load i64, i64* %4, align 8, !dbg !5224
  %10 = load i64, i64* %6, align 8, !dbg !5224
  %call53 = tail call fastcc %struct.constraint* @new_constraint(i64 %9, i64 0, i64 %10, i64 0) #7, !dbg !5224
  tail call fastcc void @process_constraint(%struct.constraint* %call53) #7, !dbg !5225
  %call54 = tail call fastcc %struct.variable_info* @new_var_info(%union.tree_node* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i64 0, i64 0)) #7, !dbg !5226
  call void @llvm.dbg.value(metadata %struct.variable_info* %call54, metadata !5161, metadata !DIExpression()), !dbg !5168
  %id55 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call54, i64 0, i32 0, !dbg !5227
  %11 = load i32, i32* %id55, align 8, !dbg !5227
  %cmp56 = icmp eq i32 %11, 3, !dbg !5227
  br i1 %cmp56, label %cond.end59, label %cond.true57, !dbg !5227

cond.true57:                                      ; preds = %cond.end33
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 5212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5227
  br label %cond.end59, !dbg !5227

cond.end59:                                       ; preds = %cond.end33, %cond.true57
  %is_artificial_var61 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call54, i64 0, i32 1, !dbg !5228
  %bf.load62 = load i8, i8* %is_artificial_var61, align 4, !dbg !5229
  %offset65 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call54, i64 0, i32 3, !dbg !5230
  store i64 0, i64* %offset65, align 8, !dbg !5231
  %size66 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call54, i64 0, i32 4, !dbg !5232
  store i64 -1, i64* %size66, align 8, !dbg !5233
  %fullsize67 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call54, i64 0, i32 5, !dbg !5234
  store i64 -1, i64* %fullsize67, align 8, !dbg !5235
  %bf.set64 = and i8 %bf.load62, -4, !dbg !5236
  %bf.clear70 = or i8 %bf.set64, 1, !dbg !5236
  store i8 %bf.clear70, i8* %is_artificial_var61, align 4, !dbg !5236
  %call71 = tail call fastcc %struct.variable_info* @new_var_info(%union.tree_node* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0)) #7, !dbg !5237
  call void @llvm.dbg.value(metadata %struct.variable_info* %call71, metadata !5162, metadata !DIExpression()), !dbg !5168
  %id72 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call71, i64 0, i32 0, !dbg !5238
  %12 = load i32, i32* %id72, align 8, !dbg !5238
  %cmp73 = icmp eq i32 %12, 4, !dbg !5238
  br i1 %cmp73, label %cond.end76, label %cond.true74, !dbg !5238

cond.true74:                                      ; preds = %cond.end59
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 5222, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5238
  br label %cond.end76, !dbg !5238

cond.end76:                                       ; preds = %cond.end59, %cond.true74
  %is_artificial_var78 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call71, i64 0, i32 1, !dbg !5239
  %bf.load79 = load i8, i8* %is_artificial_var78, align 4, !dbg !5240
  %offset82 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call71, i64 0, i32 3, !dbg !5241
  store i64 0, i64* %offset82, align 8, !dbg !5242
  %size83 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call71, i64 0, i32 4, !dbg !5243
  store i64 -1, i64* %size83, align 8, !dbg !5244
  %fullsize84 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call71, i64 0, i32 5, !dbg !5245
  store i64 -1, i64* %fullsize84, align 8, !dbg !5246
  %bf.set88 = or i8 %bf.load79, 3, !dbg !5247
  store i8 %bf.set88, i8* %is_artificial_var78, align 4, !dbg !5247
  store i32 0, i32* %type, align 8, !dbg !5248
  store i32 3, i32* %var, align 4, !dbg !5249
  store i32 1, i32* %type23, align 8, !dbg !5250
  store i32 3, i32* %var24, align 4, !dbg !5251
  %13 = load i64, i64* %4, align 8, !dbg !5252
  %14 = load i64, i64* %6, align 8, !dbg !5252
  %call95 = tail call fastcc %struct.constraint* @new_constraint(i64 %13, i64 0, i64 %14, i64 0) #7, !dbg !5252
  tail call fastcc void @process_constraint(%struct.constraint* %call95) #7, !dbg !5253
  store i32 0, i32* %type, align 8, !dbg !5254
  store i32 3, i32* %var, align 4, !dbg !5255
  store i32 0, i32* %type23, align 8, !dbg !5256
  store i32 3, i32* %var24, align 4, !dbg !5257
  %15 = load i64, i64* %4, align 8, !dbg !5258
  %16 = load i64, i64* %6, align 8, !dbg !5258
  %call102 = tail call fastcc %struct.constraint* @new_constraint(i64 %15, i64 0, i64 %16, i64 -9223372036854775808) #7, !dbg !5258
  tail call fastcc void @process_constraint(%struct.constraint* %call102) #7, !dbg !5259
  store i32 1, i32* %type, align 8, !dbg !5260
  store i32 3, i32* %var, align 4, !dbg !5261
  store i32 0, i32* %type23, align 8, !dbg !5262
  store i32 4, i32* %var24, align 4, !dbg !5263
  %17 = load i64, i64* %4, align 8, !dbg !5264
  %18 = load i64, i64* %6, align 8, !dbg !5264
  %call109 = tail call fastcc %struct.constraint* @new_constraint(i64 %17, i64 0, i64 %18, i64 0) #7, !dbg !5264
  tail call fastcc void @process_constraint(%struct.constraint* %call109) #7, !dbg !5265
  store i32 0, i32* %type, align 8, !dbg !5266
  store i32 4, i32* %var, align 4, !dbg !5267
  store i64 0, i64* %offset22, align 8, !dbg !5268
  store i32 2, i32* %type23, align 8, !dbg !5269
  store i32 4, i32* %var24, align 4, !dbg !5270
  %19 = load i64, i64* %4, align 8, !dbg !5271
  %20 = load i64, i64* %6, align 8, !dbg !5271
  %call116 = tail call fastcc %struct.constraint* @new_constraint(i64 %19, i64 0, i64 %20, i64 0) #7, !dbg !5271
  tail call fastcc void @process_constraint(%struct.constraint* %call116) #7, !dbg !5272
  store i32 2, i32* %type23, align 8, !dbg !5273
  store i32 3, i32* %var24, align 4, !dbg !5274
  store i64 0, i64* %offset25, align 8, !dbg !5275
  %21 = load i64, i64* %6, align 8, !dbg !5276
  %call120 = tail call fastcc %struct.constraint* @new_constraint(i64 %19, i64 0, i64 %21, i64 0) #7, !dbg !5276
  tail call fastcc void @process_constraint(%struct.constraint* %call120) #7, !dbg !5277
  %call121 = tail call fastcc %struct.variable_info* @new_var_info(%union.tree_node* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0)) #7, !dbg !5278
  call void @llvm.dbg.value(metadata %struct.variable_info* %call121, metadata !5163, metadata !DIExpression()), !dbg !5168
  %id122 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call121, i64 0, i32 0, !dbg !5279
  %22 = load i32, i32* %id122, align 8, !dbg !5279
  %cmp123 = icmp eq i32 %22, 5, !dbg !5279
  br i1 %cmp123, label %cond.end126, label %cond.true124, !dbg !5279

cond.true124:                                     ; preds = %cond.end76
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 5276, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5279
  br label %cond.end126, !dbg !5279

cond.end126:                                      ; preds = %cond.end76, %cond.true124
  %is_artificial_var128 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call121, i64 0, i32 1, !dbg !5280
  %bf.load129 = load i8, i8* %is_artificial_var128, align 4, !dbg !5281
  %offset132 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call121, i64 0, i32 3, !dbg !5282
  store i64 0, i64* %offset132, align 8, !dbg !5283
  %size133 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call121, i64 0, i32 4, !dbg !5284
  store i64 -1, i64* %size133, align 8, !dbg !5285
  %fullsize134 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call121, i64 0, i32 5, !dbg !5286
  store i64 -1, i64* %fullsize134, align 8, !dbg !5287
  %bf.set131 = and i8 %bf.load129, -4, !dbg !5288
  %bf.clear137 = or i8 %bf.set131, 1, !dbg !5288
  store i8 %bf.clear137, i8* %is_artificial_var128, align 4, !dbg !5288
  store i32 0, i32* %type, align 8, !dbg !5289
  store i32 5, i32* %var, align 4, !dbg !5290
  store i32 1, i32* %type23, align 8, !dbg !5291
  store i32 5, i32* %var24, align 4, !dbg !5292
  %23 = load i64, i64* %4, align 8, !dbg !5293
  %24 = load i64, i64* %6, align 8, !dbg !5293
  %call144 = tail call fastcc %struct.constraint* @new_constraint(i64 %23, i64 0, i64 %24, i64 0) #7, !dbg !5293
  tail call fastcc void @process_constraint(%struct.constraint* %call144) #7, !dbg !5294
  store i32 0, i32* %type, align 8, !dbg !5295
  store i32 5, i32* %var, align 4, !dbg !5296
  store i64 0, i64* %offset22, align 8, !dbg !5297
  store i32 0, i32* %type23, align 8, !dbg !5298
  store i32 5, i32* %var24, align 4, !dbg !5299
  store i64 -9223372036854775808, i64* %offset25, align 8, !dbg !5300
  %25 = load i64, i64* %4, align 8, !dbg !5301
  %26 = load i64, i64* %6, align 8, !dbg !5301
  %call151 = tail call fastcc %struct.constraint* @new_constraint(i64 %25, i64 0, i64 %26, i64 -9223372036854775808) #7, !dbg !5301
  tail call fastcc void @process_constraint(%struct.constraint* %call151) #7, !dbg !5302
  %call152 = tail call fastcc %struct.variable_info* @new_var_info(%union.tree_node* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i64 0, i64 0)) #7, !dbg !5303
  call void @llvm.dbg.value(metadata %struct.variable_info* %call152, metadata !5164, metadata !DIExpression()), !dbg !5168
  %id153 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call152, i64 0, i32 0, !dbg !5304
  %27 = load i32, i32* %id153, align 8, !dbg !5304
  %cmp154 = icmp eq i32 %27, 6, !dbg !5304
  br i1 %cmp154, label %cond.end157, label %cond.true155, !dbg !5304

cond.true155:                                     ; preds = %cond.end126
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 5305, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5304
  br label %cond.end157, !dbg !5304

cond.end157:                                      ; preds = %cond.end126, %cond.true155
  %is_artificial_var159 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call152, i64 0, i32 1, !dbg !5305
  %bf.load160 = load i8, i8* %is_artificial_var159, align 4, !dbg !5306
  %offset163 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call152, i64 0, i32 3, !dbg !5307
  store i64 0, i64* %offset163, align 8, !dbg !5308
  %size164 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call152, i64 0, i32 4, !dbg !5309
  store i64 -1, i64* %size164, align 8, !dbg !5310
  %fullsize165 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call152, i64 0, i32 5, !dbg !5311
  store i64 -1, i64* %fullsize165, align 8, !dbg !5312
  %bf.set162 = and i8 %bf.load160, -4, !dbg !5313
  %bf.clear168 = or i8 %bf.set162, 1, !dbg !5313
  store i8 %bf.clear168, i8* %is_artificial_var159, align 4, !dbg !5313
  %call169 = tail call fastcc %struct.variable_info* @new_var_info(%union.tree_node* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i64 0, i64 0)) #7, !dbg !5314
  call void @llvm.dbg.value(metadata %struct.variable_info* %call169, metadata !5165, metadata !DIExpression()), !dbg !5168
  %id170 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call169, i64 0, i32 0, !dbg !5315
  %28 = load i32, i32* %id170, align 8, !dbg !5315
  %cmp171 = icmp eq i32 %28, 7, !dbg !5315
  br i1 %cmp171, label %cond.end174, label %cond.true172, !dbg !5315

cond.true172:                                     ; preds = %cond.end157
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 5315, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5315
  br label %cond.end174, !dbg !5315

cond.end174:                                      ; preds = %cond.end157, %cond.true172
  %is_artificial_var176 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call169, i64 0, i32 1, !dbg !5316
  %bf.load177 = load i8, i8* %is_artificial_var176, align 4, !dbg !5317
  %size180 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call169, i64 0, i32 4, !dbg !5318
  store i64 -1, i64* %size180, align 8, !dbg !5319
  %fullsize181 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call169, i64 0, i32 5, !dbg !5320
  store i64 -1, i64* %fullsize181, align 8, !dbg !5321
  %offset182 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call169, i64 0, i32 3, !dbg !5322
  store i64 0, i64* %offset182, align 8, !dbg !5323
  %next183 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call169, i64 0, i32 2, !dbg !5324
  store %struct.variable_info* null, %struct.variable_info** %next183, align 8, !dbg !5325
  %bf.set187 = or i8 %bf.load177, 3, !dbg !5326
  store i8 %bf.set187, i8* %is_artificial_var176, align 4, !dbg !5326
  store i32 0, i32* %type, align 8, !dbg !5327
  store i32 7, i32* %var, align 4, !dbg !5328
  store i64 0, i64* %offset22, align 8, !dbg !5329
  store i32 2, i32* %type23, align 8, !dbg !5330
  store i32 1, i32* %var24, align 4, !dbg !5331
  store i64 0, i64* %offset25, align 8, !dbg !5332
  %29 = load i64, i64* %4, align 8, !dbg !5333
  %30 = load i64, i64* %6, align 8, !dbg !5333
  %call194 = tail call fastcc %struct.constraint* @new_constraint(i64 %29, i64 0, i64 %30, i64 0) #7, !dbg !5333
  tail call fastcc void @process_constraint(%struct.constraint* %call194) #7, !dbg !5334
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5335
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5335
  ret void, !dbg !5335
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.variable_info* @new_var_info(%union.tree_node* %t, i8* %name) unnamed_addr #5 !dbg !5336 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5340, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.value(metadata i8* %name, metadata !5341, metadata !DIExpression()), !dbg !5344
  %0 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !5345
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %0, i64 0, i32 0, !dbg !5345
  %call = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !5345
  call void @llvm.dbg.value(metadata i32 %call, metadata !5342, metadata !DIExpression()), !dbg !5344
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @variable_info_pool, align 8, !dbg !5346
  %call1 = tail call i8* @pool_alloc(%struct.alloc_pool_def* %1) #6, !dbg !5347
  %2 = bitcast i8* %call1 to %struct.variable_info*, !dbg !5348
  call void @llvm.dbg.value(metadata %struct.variable_info* %2, metadata !5343, metadata !DIExpression()), !dbg !5344
  %id = bitcast i8* %call1 to i32*, !dbg !5349
  store i32 %call, i32* %id, align 8, !dbg !5350
  %name2 = getelementptr inbounds i8, i8* %call1, i64 40, !dbg !5351
  %3 = bitcast i8* %name2 to i8**, !dbg !5351
  store i8* %name, i8** %3, align 8, !dbg !5352
  %decl = getelementptr inbounds i8, i8* %call1, i64 48, !dbg !5353
  %4 = bitcast i8* %decl to %union.tree_node**, !dbg !5353
  store %union.tree_node* %t, %union.tree_node** %4, align 8, !dbg !5354
  %cmp = icmp eq %union.tree_node* %t, null, !dbg !5355
  %5 = getelementptr inbounds i8, i8* %call1, i64 4, !dbg !5356
  %6 = zext i1 %cmp to i8, !dbg !5357
  %bf.shl = shl nuw nsw i8 %6, 3, !dbg !5358
  %bf.set12 = or i8 %bf.shl, %6, !dbg !5358
  %bf.shl25 = shl nuw i8 %6, 7, !dbg !5359
  %bf.set20 = or i8 %bf.set12, %bf.shl25, !dbg !5359
  %bf.set27 = or i8 %bf.set20, 64, !dbg !5359
  store i8 %bf.set27, i8* %5, align 4, !dbg !5359
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !5360

land.lhs.true:                                    ; preds = %entry
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5362
  %bf.load31 = load i64, i64* %7, align 8, !dbg !5362
  %bf.cast = and i64 %bf.load31, 65535, !dbg !5362
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5362
  %8 = load i32, i32* %arrayidx, align 4, !dbg !5362
  %cmp33 = icmp eq i32 %8, 3, !dbg !5362
  br i1 %cmp33, label %if.then, label %if.end, !dbg !5363

if.then:                                          ; preds = %land.lhs.true
  %call35 = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* nonnull %t) #7, !dbg !5364
  %bf.load38 = load i8, i8* %5, align 4, !dbg !5365
  %bf.shl40 = shl i8 %call35, 7, !dbg !5365
  %bf.clear41 = and i8 %bf.load38, 127, !dbg !5365
  %bf.set42 = or i8 %bf.clear41, %bf.shl40, !dbg !5365
  store i8 %bf.set42, i8* %5, align 4, !dbg !5365
  br label %if.end, !dbg !5366

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  %call44 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @pta_obstack) #6, !dbg !5367
  %solution = getelementptr inbounds i8, i8* %call1, i64 56, !dbg !5368
  %9 = bitcast i8* %solution to %struct.bitmap_head_def**, !dbg !5368
  store %struct.bitmap_head_def* %call44, %struct.bitmap_head_def** %9, align 8, !dbg !5369
  %call45 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @oldpta_obstack) #6, !dbg !5370
  %oldsolution = getelementptr inbounds i8, i8* %call1, i64 64, !dbg !5371
  %10 = bitcast i8* %oldsolution to %struct.bitmap_head_def**, !dbg !5371
  store %struct.bitmap_head_def* %call45, %struct.bitmap_head_def** %10, align 8, !dbg !5372
  %next = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !5373
  %11 = bitcast i8* %next to %struct.variable_info**, !dbg !5373
  store %struct.variable_info* null, %struct.variable_info** %11, align 8, !dbg !5374
  %call46 = tail call fastcc %struct.variable_info** @VEC_varinfo_t_heap_safe_push(%struct.VEC_varinfo_t_heap** nonnull @varmap, %struct.variable_info* %2) #7, !dbg !5375
  ret %struct.variable_info* %2, !dbg !5376
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constraint** @VEC_constraint_t_heap_safe_push(%struct.VEC_constraint_t_heap** %vec_, %struct.constraint* %obj_) unnamed_addr #0 !dbg !5377 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_heap** @constraints, metadata !5381, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.value(metadata %struct.constraint* %obj_, metadata !5382, metadata !DIExpression()), !dbg !5383
  %call = tail call fastcc i32 @VEC_constraint_t_heap_reserve(%struct.VEC_constraint_t_heap** nonnull @constraints, i32 1) #7, !dbg !5384
  %0 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** @constraints, align 8, !dbg !5384
  %tobool = icmp eq %struct.VEC_constraint_t_heap* %0, null, !dbg !5384
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5384

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %0, i64 0, i32 0, !dbg !5384
  br label %cond.end, !dbg !5384

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_constraint_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5384
  %call1 = tail call fastcc %struct.constraint** @VEC_constraint_t_base_quick_push(%struct.VEC_constraint_t_base* %cond, %struct.constraint* %obj_) #7, !dbg !5384
  ret %struct.constraint** %call1, !dbg !5384
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.constraint* @new_constraint(i64 %lhs.coerce0, i64 %lhs.coerce1, i64 %rhs.coerce0, i64 %rhs.coerce1) unnamed_addr #5 !dbg !5385 {
entry:
  %lhs = alloca %struct.constraint_expr, align 8
  %rhs = alloca %struct.constraint_expr, align 8
  %0 = bitcast %struct.constraint_expr* %lhs to i64*
  store i64 %lhs.coerce0, i64* %0, align 8
  %1 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 2
  store i64 %lhs.coerce1, i64* %1, align 8
  %2 = bitcast %struct.constraint_expr* %rhs to i64*
  store i64 %rhs.coerce0, i64* %2, align 8
  %3 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2
  store i64 %rhs.coerce1, i64* %3, align 8
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @constraint_pool, align 8, !dbg !5393
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %4) #6, !dbg !5394
  %5 = bitcast i8* %call to %struct.constraint*, !dbg !5395
  call void @llvm.dbg.value(metadata %struct.constraint* %5, metadata !5392, metadata !DIExpression()), !dbg !5396
  %6 = bitcast %struct.constraint_expr* %lhs to i8*, !dbg !5397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !5397
  %rhs2 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !5398
  %7 = bitcast %struct.constraint_expr* %rhs to i8*, !dbg !5399
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %rhs2, i8* nonnull align 8 %7, i64 16, i1 false), !dbg !5399
  ret %struct.constraint* %5, !dbg !5400
}

; Function Attrs: nounwind uwtable
define internal fastcc void @process_constraint(%struct.constraint* %t) unnamed_addr #5 !dbg !5401 {
entry:
  %rhs = alloca %struct.constraint_expr, align 8
  %lhs = alloca %struct.constraint_expr, align 8
  %tmplhs = alloca %struct.constraint_expr, align 8
  %tmp = alloca %struct.constraint_expr, align 8
  %tmplhs48 = alloca %struct.constraint_expr, align 8
  %tmp49 = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %struct.constraint* %t, metadata !5403, metadata !DIExpression()), !dbg !5412
  %0 = bitcast %struct.constraint_expr* %rhs to i8*, !dbg !5413
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5413
  %rhs1 = getelementptr inbounds %struct.constraint, %struct.constraint* %t, i64 0, i32 1, !dbg !5414
  %1 = bitcast %struct.constraint_expr* %rhs1 to i8*, !dbg !5414
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !5414
  %2 = bitcast %struct.constraint_expr* %lhs to i8*, !dbg !5415
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5415
  %3 = bitcast %struct.constraint* %t to i8*, !dbg !5416
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %3, i64 16, i1 false), !dbg !5416
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 1, !dbg !5417
  %4 = load i32, i32* %var, align 4, !dbg !5417
  %5 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !5417
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %5, i64 0, i32 0, !dbg !5417
  %call = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !5417
  %cmp = icmp ult i32 %4, %call, !dbg !5417
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !5417

cond.true3:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2749, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5417
  br label %cond.end5, !dbg !5417

cond.end5:                                        ; preds = %entry, %cond.true3
  %var7 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 1, !dbg !5418
  %6 = load i32, i32* %var7, align 4, !dbg !5418
  %7 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !5418
  %base10 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %7, i64 0, i32 0, !dbg !5418
  %call14 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base10) #7, !dbg !5418
  %cmp15 = icmp ult i32 %6, %call14, !dbg !5418
  br i1 %cmp15, label %cond.end18, label %cond.true16, !dbg !5418

cond.true16:                                      ; preds = %cond.end5
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2750, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5418
  br label %cond.end18, !dbg !5418

cond.end18:                                       ; preds = %cond.end5, %cond.true16
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 0, !dbg !5419
  %8 = load i32, i32* %type, align 8, !dbg !5419
  %cmp20 = icmp eq i32 %8, 2, !dbg !5421
  br i1 %cmp20, label %land.lhs.true, label %if.end, !dbg !5422

land.lhs.true:                                    ; preds = %cond.end18
  %cmp22 = icmp eq i32 %6, 1, !dbg !5423
  br i1 %cmp22, label %if.then, label %if.end, !dbg !5424

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %type, align 8, !dbg !5425
  br label %if.end, !dbg !5426

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end18
  %9 = phi i32 [ 1, %if.then ], [ 2, %land.lhs.true ], [ %8, %cond.end18 ], !dbg !5427
  %cmp25 = icmp eq i32 %9, 2, !dbg !5427
  br i1 %cmp25, label %cond.true26, label %cond.end28, !dbg !5427

cond.true26:                                      ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2760, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5427
  br label %cond.end28, !dbg !5427

cond.end28:                                       ; preds = %if.end, %cond.true26
  %type30 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 0, !dbg !5428
  %10 = load i32, i32* %type30, align 8, !dbg !5428
  %cmp31 = icmp eq i32 %10, 1, !dbg !5429
  br i1 %cmp31, label %land.lhs.true32, label %if.else, !dbg !5430

land.lhs.true32:                                  ; preds = %cond.end28
  %cmp34 = icmp eq i32 %9, 1, !dbg !5431
  br i1 %cmp34, label %land.lhs.true35, label %if.else, !dbg !5432

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %cmp37 = icmp eq i32 %4, 1, !dbg !5433
  br i1 %cmp37, label %if.else, label %if.then38, !dbg !5434

if.then38:                                        ; preds = %land.lhs.true35
  %11 = bitcast %struct.constraint_expr* %tmplhs to i8*, !dbg !5435
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8, !dbg !5435
  %12 = bitcast %struct.constraint_expr* %tmp to i8*, !dbg !5436
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8, !dbg !5436
  %call39 = tail call fastcc { i64, i64 } @new_scalar_tmp_constraint_exp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i64 0, i64 0)) #7, !dbg !5436
  %13 = bitcast %struct.constraint_expr* %tmp to i64*, !dbg !5436
  %14 = extractvalue { i64, i64 } %call39, 0, !dbg !5436
  store i64 %14, i64* %13, align 8, !dbg !5436
  %15 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmp, i64 0, i32 2, !dbg !5436
  store i64 0, i64* %15, align 8, !dbg !5436
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %12, i64 16, i1 false), !dbg !5436
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8, !dbg !5436
  %16 = bitcast %struct.constraint_expr* %tmplhs to i64*, !dbg !5437
  %17 = load i64, i64* %16, align 8, !dbg !5437
  %18 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmplhs, i64 0, i32 2, !dbg !5437
  %19 = load i64, i64* %18, align 8, !dbg !5437
  %20 = bitcast %struct.constraint_expr* %rhs to i64*, !dbg !5437
  %21 = load i64, i64* %20, align 8, !dbg !5437
  %22 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2, !dbg !5437
  %23 = load i64, i64* %22, align 8, !dbg !5437
  %call40 = tail call fastcc %struct.constraint* @new_constraint(i64 %17, i64 %19, i64 %21, i64 %23) #7, !dbg !5437
  tail call fastcc void @process_constraint(%struct.constraint* %call40) #7, !dbg !5438
  %24 = bitcast %struct.constraint_expr* %lhs to i64*, !dbg !5439
  %25 = load i64, i64* %24, align 8, !dbg !5439
  %26 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 2, !dbg !5439
  %27 = load i64, i64* %26, align 8, !dbg !5439
  %call41 = tail call fastcc %struct.constraint* @new_constraint(i64 %25, i64 %27, i64 %17, i64 %19) #7, !dbg !5439
  tail call fastcc void @process_constraint(%struct.constraint* %call41) #7, !dbg !5440
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8, !dbg !5441
  br label %if.end63, !dbg !5442

if.else:                                          ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28
  %cmp43 = icmp eq i32 %10, 2, !dbg !5443
  br i1 %cmp43, label %land.lhs.true44, label %if.else53, !dbg !5444

land.lhs.true44:                                  ; preds = %if.else
  %cmp46 = icmp eq i32 %9, 1, !dbg !5445
  br i1 %cmp46, label %if.then47, label %if.else53, !dbg !5446

if.then47:                                        ; preds = %land.lhs.true44
  %28 = bitcast %struct.constraint_expr* %tmplhs48 to i8*, !dbg !5447
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8, !dbg !5447
  %29 = bitcast %struct.constraint_expr* %tmp49 to i8*, !dbg !5448
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #8, !dbg !5448
  %call50 = tail call fastcc { i64, i64 } @new_scalar_tmp_constraint_exp(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i64 0, i64 0)) #7, !dbg !5448
  %30 = bitcast %struct.constraint_expr* %tmp49 to i64*, !dbg !5448
  %31 = extractvalue { i64, i64 } %call50, 0, !dbg !5448
  store i64 %31, i64* %30, align 8, !dbg !5448
  %32 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmp49, i64 0, i32 2, !dbg !5448
  store i64 0, i64* %32, align 8, !dbg !5448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %29, i64 16, i1 false), !dbg !5448
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #8, !dbg !5448
  %33 = bitcast %struct.constraint_expr* %tmplhs48 to i64*, !dbg !5449
  %34 = load i64, i64* %33, align 8, !dbg !5449
  %35 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmplhs48, i64 0, i32 2, !dbg !5449
  %36 = load i64, i64* %35, align 8, !dbg !5449
  %37 = bitcast %struct.constraint_expr* %rhs to i64*, !dbg !5449
  %38 = load i64, i64* %37, align 8, !dbg !5449
  %39 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2, !dbg !5449
  %40 = load i64, i64* %39, align 8, !dbg !5449
  %call51 = tail call fastcc %struct.constraint* @new_constraint(i64 %34, i64 %36, i64 %38, i64 %40) #7, !dbg !5449
  tail call fastcc void @process_constraint(%struct.constraint* %call51) #7, !dbg !5450
  %41 = bitcast %struct.constraint_expr* %lhs to i64*, !dbg !5451
  %42 = load i64, i64* %41, align 8, !dbg !5451
  %43 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 2, !dbg !5451
  %44 = load i64, i64* %43, align 8, !dbg !5451
  %call52 = tail call fastcc %struct.constraint* @new_constraint(i64 %42, i64 %44, i64 %34, i64 %36) #7, !dbg !5451
  tail call fastcc void @process_constraint(%struct.constraint* %call52) #7, !dbg !5452
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8, !dbg !5453
  br label %if.end63, !dbg !5454

if.else53:                                        ; preds = %land.lhs.true44, %if.else
  br i1 %cmp43, label %lor.lhs.false, label %cond.end59, !dbg !5455

lor.lhs.false:                                    ; preds = %if.else53
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2, !dbg !5455
  %45 = load i64, i64* %offset, align 8, !dbg !5455
  %cmp56 = icmp eq i64 %45, 0, !dbg !5455
  br i1 %cmp56, label %cond.end59, label %cond.true57, !dbg !5455

cond.true57:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2781, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5455
  br label %cond.end59, !dbg !5455

cond.end59:                                       ; preds = %if.else53, %lor.lhs.false, %cond.true57
  %call61 = tail call fastcc %struct.constraint** @VEC_constraint_t_heap_safe_push(%struct.VEC_constraint_t_heap** nonnull @constraints, %struct.constraint* %t) #7, !dbg !5457
  br label %if.end63

if.end63:                                         ; preds = %if.then47, %cond.end59, %if.then38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !5458
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5458
  ret void, !dbg !5458
}

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.variable_info** @VEC_varinfo_t_heap_safe_push(%struct.VEC_varinfo_t_heap** %vec_, %struct.variable_info* %obj_) unnamed_addr #0 !dbg !5459 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_varinfo_t_heap** @varmap, metadata !5464, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata %struct.variable_info* %obj_, metadata !5465, metadata !DIExpression()), !dbg !5466
  %call = tail call fastcc i32 @VEC_varinfo_t_heap_reserve(%struct.VEC_varinfo_t_heap** nonnull @varmap, i32 1) #7, !dbg !5467
  %0 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !5467
  %tobool = icmp eq %struct.VEC_varinfo_t_heap* %0, null, !dbg !5467
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5467

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %0, i64 0, i32 0, !dbg !5467
  br label %cond.end, !dbg !5467

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_varinfo_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5467
  %call1 = tail call fastcc %struct.variable_info** @VEC_varinfo_t_base_quick_push(%struct.VEC_varinfo_t_base* %cond, %struct.variable_info* %obj_) #7, !dbg !5467
  ret %struct.variable_info** %call1, !dbg !5467
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_varinfo_t_heap_reserve(%struct.VEC_varinfo_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5468 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_varinfo_t_heap** @varmap, metadata !5472, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.value(metadata i32 1, metadata !5473, metadata !DIExpression()), !dbg !5475
  %0 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !5476
  %tobool = icmp eq %struct.VEC_varinfo_t_heap* %0, null, !dbg !5476
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5476

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %0, i64 0, i32 0, !dbg !5476
  br label %cond.end, !dbg !5476

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_varinfo_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5476
  %call = tail call fastcc i32 @VEC_varinfo_t_base_space(%struct.VEC_varinfo_t_base* %cond, i32 1) #7, !dbg !5476
  %tobool1 = icmp eq i32 %call, 0, !dbg !5476
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5476
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5474, metadata !DIExpression()), !dbg !5475
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5476

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_varinfo_t_heap** @varmap to i8**), align 8, !dbg !5477
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 1) #6, !dbg !5477
  store i8* %call3, i8** bitcast (%struct.VEC_varinfo_t_heap** @varmap to i8**), align 8, !dbg !5477
  br label %if.end, !dbg !5477

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5476
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.variable_info** @VEC_varinfo_t_base_quick_push(%struct.VEC_varinfo_t_base* %vec_, %struct.variable_info* %obj_) unnamed_addr #0 !dbg !5479 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_varinfo_t_base* %vec_, metadata !5484, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata %struct.variable_info* %obj_, metadata !5485, metadata !DIExpression()), !dbg !5487
  %num1 = getelementptr inbounds %struct.VEC_varinfo_t_base, %struct.VEC_varinfo_t_base* %vec_, i64 0, i32 0, !dbg !5488
  %0 = load i32, i32* %num1, align 8, !dbg !5488
  %inc = add i32 %0, 1, !dbg !5488
  store i32 %inc, i32* %num1, align 8, !dbg !5488
  %idxprom = zext i32 %0 to i64, !dbg !5488
  %arrayidx = getelementptr inbounds %struct.VEC_varinfo_t_base, %struct.VEC_varinfo_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5488
  call void @llvm.dbg.value(metadata %struct.variable_info** %arrayidx, metadata !5486, metadata !DIExpression()), !dbg !5487
  store %struct.variable_info* %obj_, %struct.variable_info** %arrayidx, align 8, !dbg !5488
  ret %struct.variable_info** %arrayidx, !dbg !5488
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_varinfo_t_base_space(%struct.VEC_varinfo_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5489 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_varinfo_t_base* %vec_, metadata !5493, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.value(metadata i32 1, metadata !5494, metadata !DIExpression()), !dbg !5495
  %tobool = icmp eq %struct.VEC_varinfo_t_base* %vec_, null, !dbg !5496
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5496

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_varinfo_t_base, %struct.VEC_varinfo_t_base* %vec_, i64 0, i32 1, !dbg !5496
  %0 = load i32, i32* %alloc, align 4, !dbg !5496
  %num = getelementptr inbounds %struct.VEC_varinfo_t_base, %struct.VEC_varinfo_t_base* %vec_, i64 0, i32 0, !dbg !5496
  %1 = load i32, i32* %num, align 8, !dbg !5496
  %cmp1 = icmp ne i32 %0, %1, !dbg !5496
  %phitmp = zext i1 %cmp1 to i32, !dbg !5496
  br label %cond.end, !dbg !5496

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5496

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5496
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constraint_t_heap_reserve(%struct.VEC_constraint_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5497 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_heap** %vec_, metadata !5501, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i32 1, metadata !5502, metadata !DIExpression()), !dbg !5504
  %0 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %vec_, align 8, !dbg !5505
  %tobool = icmp eq %struct.VEC_constraint_t_heap* %0, null, !dbg !5505
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5505

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %0, i64 0, i32 0, !dbg !5505
  br label %cond.end, !dbg !5505

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_constraint_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5505
  %call = tail call fastcc i32 @VEC_constraint_t_base_space(%struct.VEC_constraint_t_base* %cond, i32 1) #7, !dbg !5505
  %tobool1 = icmp eq i32 %call, 0, !dbg !5505
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5505
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5503, metadata !DIExpression()), !dbg !5504
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5505

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_constraint_t_heap** %vec_ to i8**, !dbg !5506
  %2 = load i8*, i8** %1, align 8, !dbg !5506
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !5506
  store i8* %call3, i8** %1, align 8, !dbg !5506
  br label %if.end, !dbg !5506

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5505
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constraint** @VEC_constraint_t_base_quick_push(%struct.VEC_constraint_t_base* %vec_, %struct.constraint* %obj_) unnamed_addr #0 !dbg !5508 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_base* %vec_, metadata !5513, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata %struct.constraint* %obj_, metadata !5514, metadata !DIExpression()), !dbg !5516
  %num1 = getelementptr inbounds %struct.VEC_constraint_t_base, %struct.VEC_constraint_t_base* %vec_, i64 0, i32 0, !dbg !5517
  %0 = load i32, i32* %num1, align 8, !dbg !5517
  %inc = add i32 %0, 1, !dbg !5517
  store i32 %inc, i32* %num1, align 8, !dbg !5517
  %idxprom = zext i32 %0 to i64, !dbg !5517
  %arrayidx = getelementptr inbounds %struct.VEC_constraint_t_base, %struct.VEC_constraint_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5517
  call void @llvm.dbg.value(metadata %struct.constraint** %arrayidx, metadata !5515, metadata !DIExpression()), !dbg !5516
  store %struct.constraint* %obj_, %struct.constraint** %arrayidx, align 8, !dbg !5517
  ret %struct.constraint** %arrayidx, !dbg !5517
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constraint_t_base_space(%struct.VEC_constraint_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5518 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_base* %vec_, metadata !5522, metadata !DIExpression()), !dbg !5524
  call void @llvm.dbg.value(metadata i32 1, metadata !5523, metadata !DIExpression()), !dbg !5524
  %tobool = icmp eq %struct.VEC_constraint_t_base* %vec_, null, !dbg !5525
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5525

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_constraint_t_base, %struct.VEC_constraint_t_base* %vec_, i64 0, i32 1, !dbg !5525
  %0 = load i32, i32* %alloc, align 4, !dbg !5525
  %num = getelementptr inbounds %struct.VEC_constraint_t_base, %struct.VEC_constraint_t_base* %vec_, i64 0, i32 0, !dbg !5525
  %1 = load i32, i32* %num, align 8, !dbg !5525
  %cmp1 = icmp ne i32 %0, %1, !dbg !5525
  %phitmp = zext i1 %cmp1 to i32, !dbg !5525
  br label %cond.end, !dbg !5525

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5525

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5525
}

; Function Attrs: nounwind uwtable
define internal fastcc { i64, i64 } @new_scalar_tmp_constraint_exp(i8* %name) unnamed_addr #5 !dbg !5526 {
entry:
  %retval = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata i8* %name, metadata !5530, metadata !DIExpression()), !dbg !5533
  %call = tail call fastcc %struct.variable_info* @new_var_info(%union.tree_node* null, i8* %name) #7, !dbg !5534
  call void @llvm.dbg.value(metadata %struct.variable_info* %call, metadata !5532, metadata !DIExpression()), !dbg !5533
  %offset = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 3, !dbg !5535
  store i64 0, i64* %offset, align 8, !dbg !5536
  %size = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 4, !dbg !5537
  store i64 -1, i64* %size, align 8, !dbg !5538
  %fullsize = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 5, !dbg !5539
  store i64 -1, i64* %fullsize, align 8, !dbg !5540
  %is_full_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 1, !dbg !5541
  %bf.load = load i8, i8* %is_full_var, align 4, !dbg !5542
  %bf.set = or i8 %bf.load, 8, !dbg !5542
  store i8 %bf.set, i8* %is_full_var, align 4, !dbg !5542
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 0, !dbg !5543
  %0 = load i32, i32* %id, align 8, !dbg !5543
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %retval, i64 0, i32 1, !dbg !5544
  store i32 %0, i32* %var, align 4, !dbg !5545
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %retval, i64 0, i32 0, !dbg !5546
  store i32 0, i32* %type, align 8, !dbg !5547
  %offset1 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %retval, i64 0, i32 2, !dbg !5548
  store i64 0, i64* %offset1, align 8, !dbg !5549
  %.elt = bitcast %struct.constraint_expr* %retval to i64*, !dbg !5550
  %.unpack = load i64, i64* %.elt, align 8, !dbg !5550
  %1 = insertvalue { i64, i64 } undef, i64 %.unpack, 0, !dbg !5550
  %2 = insertvalue { i64, i64 } %1, i64 0, 1, !dbg !5550
  ret { i64, i64 } %2, !dbg !5550
}

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #2

declare dso_local i32 @tree_map_hash(i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @heapvar_map_eq(i8* %p1, i8* %p2) #5 !dbg !5551 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5553, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5554, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5555, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5556, metadata !DIExpression()), !dbg !5557
  %from = bitcast i8* %p1 to %union.tree_node**, !dbg !5558
  %0 = load %union.tree_node*, %union.tree_node** %from, align 8, !dbg !5558
  %from3 = bitcast i8* %p2 to %union.tree_node**, !dbg !5559
  %1 = load %union.tree_node*, %union.tree_node** %from3, align 8, !dbg !5559
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !5560
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5561

land.rhs:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %p2, metadata !5556, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i8* %p1, metadata !5555, metadata !DIExpression()), !dbg !5557
  %offset = getelementptr inbounds i8, i8* %p1, i64 24, !dbg !5562
  %2 = bitcast i8* %offset to i64*, !dbg !5562
  %3 = load i64, i64* %2, align 8, !dbg !5562
  %offset4 = getelementptr inbounds i8, i8* %p2, i64 24, !dbg !5563
  %4 = bitcast i8* %offset4 to i64*, !dbg !5563
  %5 = load i64, i64* %4, align 8, !dbg !5563
  %cmp5 = icmp eq i64 %3, %5, !dbg !5564
  %phitmp = zext i1 %cmp5 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %6, !dbg !5565
}

declare dso_local i8* @ggc_calloc(i64, i64) #2

declare dso_local void @ggc_free(i8*) #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @could_have_pointers(%union.tree_node* %t) unnamed_addr #5 !dbg !5566 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5570, metadata !DIExpression()), !dbg !5571
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5572
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5572
  %call = tail call fastcc zeroext i8 @type_could_have_pointers(%union.tree_node* %0) #7, !dbg !5573
  ret i8 %call, !dbg !5574
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @heapvar_lookup(%union.tree_node* %from, i64 %offset) unnamed_addr #5 !dbg !5575 {
entry:
  %in = alloca %struct.heapvar_map, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %from, metadata !5579, metadata !DIExpression()), !dbg !5583
  call void @llvm.dbg.value(metadata i64 %offset, metadata !5580, metadata !DIExpression()), !dbg !5583
  %0 = bitcast %struct.heapvar_map* %in to i8*, !dbg !5584
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5584
  %from1 = getelementptr inbounds %struct.heapvar_map, %struct.heapvar_map* %in, i64 0, i32 0, i32 0, i32 0, !dbg !5585
  store %union.tree_node* %from, %union.tree_node** %from1, align 8, !dbg !5586
  %offset2 = getelementptr inbounds %struct.heapvar_map, %struct.heapvar_map* %in, i64 0, i32 1, !dbg !5587
  store i64 %offset, i64* %offset2, align 8, !dbg !5588
  %1 = load %struct.htab*, %struct.htab** @heapvar_for_stmt, align 8, !dbg !5589
  call void @llvm.dbg.value(metadata %struct.heapvar_map* %in, metadata !5582, metadata !DIExpression(DW_OP_deref)), !dbg !5583
  %call = call fastcc i32 @heapvar_map_hash(%struct.heapvar_map* nonnull %in) #7, !dbg !5590
  %call3 = call i8* @htab_find_with_hash(%struct.htab* %1, i8* nonnull %0, i32 %call) #6, !dbg !5591
  call void @llvm.dbg.value(metadata i8* %call3, metadata !5581, metadata !DIExpression()), !dbg !5583
  %tobool = icmp eq i8* %call3, null, !dbg !5592
  br i1 %tobool, label %cleanup, label %if.then, !dbg !5594

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %call3, metadata !5581, metadata !DIExpression()), !dbg !5583
  %to = getelementptr inbounds i8, i8* %call3, i64 16, !dbg !5595
  %2 = bitcast i8* %to to %union.tree_node**, !dbg !5595
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5595
  br label %cleanup, !dbg !5596

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ null, %entry ], !dbg !5583
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !5597
  ret %union.tree_node* %retval.0, !dbg !5597
}

declare dso_local %union.tree_node* @create_tmp_var_raw(%union.tree_node*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @heapvar_insert(%union.tree_node* %from, i64 %offset, %union.tree_node* %to) unnamed_addr #5 !dbg !5598 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %from, metadata !5602, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.value(metadata i64 %offset, metadata !5603, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.value(metadata %union.tree_node* %to, metadata !5604, metadata !DIExpression()), !dbg !5607
  %call = tail call i8* @ggc_alloc_stat(i64 32) #6, !dbg !5608
  %0 = bitcast i8* %call to %struct.heapvar_map*, !dbg !5608
  call void @llvm.dbg.value(metadata %struct.heapvar_map* %0, metadata !5605, metadata !DIExpression()), !dbg !5607
  %from1 = bitcast i8* %call to %union.tree_node**, !dbg !5609
  store %union.tree_node* %from, %union.tree_node** %from1, align 8, !dbg !5610
  %offset2 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !5611
  %1 = bitcast i8* %offset2 to i64*, !dbg !5611
  store i64 %offset, i64* %1, align 8, !dbg !5612
  %call3 = tail call fastcc i32 @heapvar_map_hash(%struct.heapvar_map* %0) #7, !dbg !5613
  %hash = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5614
  %2 = bitcast i8* %hash to i32*, !dbg !5614
  store i32 %call3, i32* %2, align 8, !dbg !5615
  %to6 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !5616
  %3 = bitcast i8* %to6 to %union.tree_node**, !dbg !5616
  store %union.tree_node* %to, %union.tree_node** %3, align 8, !dbg !5617
  %4 = load %struct.htab*, %struct.htab** @heapvar_for_stmt, align 8, !dbg !5618
  %call9 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %4, i8* %call, i32 %call3, i32 1) #6, !dbg !5619
  call void @llvm.dbg.value(metadata i8** %call9, metadata !5606, metadata !DIExpression()), !dbg !5607
  %5 = load i8*, i8** %call9, align 8, !dbg !5620
  %cmp = icmp eq i8* %5, null, !dbg !5620
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5620

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 345, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5620
  br label %cond.end, !dbg !5620

cond.end:                                         ; preds = %entry, %cond.true
  store i8* %call, i8** %call9, align 8, !dbg !5621
  ret void, !dbg !5622
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.var_ann_d* @get_var_ann(%union.tree_node* %var) unnamed_addr #0 !dbg !5623 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5627, metadata !DIExpression()), !dbg !5630
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5631
  %bf.load = load i64, i64* %0, align 8, !dbg !5631
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5631
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !5631
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5631

cond.true:                                        ; preds = %entry
  %ann = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 1, !dbg !5631
  %1 = bitcast %union.tree_node** %ann to %struct.var_ann_d**, !dbg !5631
  br label %cond.end19, !dbg !5631

cond.false:                                       ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 34, !dbg !5631
  br i1 %cmp5, label %cond.true6, label %cond.false8, !dbg !5631

cond.true6:                                       ; preds = %cond.false
  %ann7 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5631
  %2 = bitcast %union.tree_node** %ann7 to %struct.var_ann_d**, !dbg !5631
  br label %cond.end19, !dbg !5631

cond.false8:                                      ; preds = %cond.false
  %cmp13 = icmp eq i64 %bf.cast1, 36, !dbg !5631
  %ann15 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !5631
  %3 = bitcast %union.tree_node** %ann15 to %struct.var_ann_d**, !dbg !5631
  %cond = select i1 %cmp13, %struct.var_ann_d** %3, %struct.var_ann_d** null, !dbg !5631
  br label %cond.end19, !dbg !5631

cond.end19:                                       ; preds = %cond.true6, %cond.false8, %cond.true
  %cond20 = phi %struct.var_ann_d** [ %1, %cond.true ], [ %2, %cond.true6 ], [ %cond, %cond.false8 ], !dbg !5631
  call void @llvm.dbg.value(metadata %struct.var_ann_d** %cond20, metadata !5628, metadata !DIExpression()), !dbg !5630
  %tobool = icmp eq %struct.var_ann_d** %cond20, null, !dbg !5632
  br i1 %tobool, label %cond.true21, label %cond.end23, !dbg !5632

cond.true21:                                      ; preds = %cond.end19
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i64 0, i64 0), i32 144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5632
  br label %cond.end23, !dbg !5632

cond.end23:                                       ; preds = %cond.end19, %cond.true21
  %4 = load %struct.var_ann_d*, %struct.var_ann_d** %cond20, align 8, !dbg !5633
  %tobool25 = icmp eq %struct.var_ann_d* %4, null, !dbg !5633
  br i1 %tobool25, label %cond.false27, label %cond.true26, !dbg !5633

cond.true26:                                      ; preds = %cond.end23
  br label %cond.end28, !dbg !5633

cond.false27:                                     ; preds = %cond.end23
  %call = tail call %struct.var_ann_d* @create_var_ann(%union.tree_node* %var) #6, !dbg !5634
  br label %cond.end28, !dbg !5633

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond29 = phi %struct.var_ann_d* [ %4, %cond.true26 ], [ %call, %cond.false27 ], !dbg !5633
  ret %struct.var_ann_d* %cond29, !dbg !5635
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %fun) unnamed_addr #0 !dbg !5636 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !5642, metadata !DIExpression()), !dbg !5643
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !5644
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !5644
  %tobool = icmp eq %struct.gimple_df* %0, null, !dbg !5646
  br i1 %tobool, label %return, label %if.end, !dbg !5647

if.end:                                           ; preds = %entry
  %referenced_vars = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 0, !dbg !5648
  %1 = load %struct.htab*, %struct.htab** %referenced_vars, align 8, !dbg !5648
  br label %return, !dbg !5649

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.htab* [ %1, %if.end ], [ null, %entry ], !dbg !5643
  ret %struct.htab* %retval.0, !dbg !5650
}

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* %t) unnamed_addr #5 !dbg !5651 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5655, metadata !DIExpression()), !dbg !5657
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @vi_for_tree, align 8, !dbg !5658
  %1 = bitcast %union.tree_node* %t to i8*, !dbg !5659
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !5660
  call void @llvm.dbg.value(metadata i8** %call, metadata !5656, metadata !DIExpression()), !dbg !5657
  %cmp = icmp eq i8** %call, null, !dbg !5661
  br i1 %cmp, label %if.then, label %if.end, !dbg !5663

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc i8* @alias_get_name(%union.tree_node* %t) #7, !dbg !5664
  %call2 = tail call fastcc i32 @create_variable_info_for(%union.tree_node* %t, i8* %call1) #7, !dbg !5665
  %call3 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %call2) #7, !dbg !5666
  br label %cleanup, !dbg !5667

if.end:                                           ; preds = %entry
  %2 = bitcast i8** %call to %struct.variable_info**, !dbg !5668
  %3 = load %struct.variable_info*, %struct.variable_info** %2, align 8, !dbg !5668
  br label %cleanup, !dbg !5669

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.variable_info* [ %call3, %if.then ], [ %3, %if.end ], !dbg !5657
  ret %struct.variable_info* %retval.0, !dbg !5670
}

; Function Attrs: nounwind uwtable
define internal fastcc void @make_constraint_from(%struct.variable_info* %vi, i32 %from) unnamed_addr #5 !dbg !5671 {
entry:
  %lhs = alloca %struct.constraint_expr, align 8
  %rhs = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %struct.variable_info* %vi, metadata !5675, metadata !DIExpression()), !dbg !5679
  call void @llvm.dbg.value(metadata i32 %from, metadata !5676, metadata !DIExpression()), !dbg !5679
  %0 = bitcast %struct.constraint_expr* %lhs to i8*, !dbg !5680
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5680
  %1 = bitcast %struct.constraint_expr* %rhs to i8*, !dbg !5680
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5680
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %vi, i64 0, i32 0, !dbg !5681
  %2 = load i32, i32* %id, align 8, !dbg !5681
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 1, !dbg !5682
  store i32 %2, i32* %var, align 4, !dbg !5683
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 2, !dbg !5684
  store i64 0, i64* %offset, align 8, !dbg !5685
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 0, !dbg !5686
  store i32 0, i32* %type, align 8, !dbg !5687
  %var1 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 1, !dbg !5688
  store i32 %from, i32* %var1, align 4, !dbg !5689
  %offset2 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2, !dbg !5690
  store i64 0, i64* %offset2, align 8, !dbg !5691
  %type3 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 0, !dbg !5692
  store i32 2, i32* %type3, align 8, !dbg !5693
  %3 = bitcast %struct.constraint_expr* %lhs to i64*, !dbg !5694
  %4 = load i64, i64* %3, align 8, !dbg !5694
  %5 = bitcast %struct.constraint_expr* %rhs to i64*, !dbg !5694
  %6 = load i64, i64* %5, align 8, !dbg !5694
  %call = tail call fastcc %struct.constraint* @new_constraint(i64 %4, i64 0, i64 %6, i64 0) #7, !dbg !5694
  tail call fastcc void @process_constraint(%struct.constraint* %call) #7, !dbg !5695
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !5696
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5696
  ret void, !dbg !5696
}

; Function Attrs: nounwind uwtable
define internal fastcc void @make_constraint_from_restrict(%struct.variable_info* %lhs, i8* %name) unnamed_addr #5 !dbg !5697 {
entry:
  call void @llvm.dbg.value(metadata %struct.variable_info* %lhs, metadata !5701, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.value(metadata i8* %name, metadata !5702, metadata !DIExpression()), !dbg !5704
  %call = tail call fastcc %struct.variable_info* @make_constraint_from_heapvar(%struct.variable_info* %lhs, i8* %name) #7, !dbg !5705
  call void @llvm.dbg.value(metadata %struct.variable_info* %call, metadata !5703, metadata !DIExpression()), !dbg !5704
  %is_restrict_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 1, !dbg !5706
  %bf.load = load i8, i8* %is_restrict_var, align 4, !dbg !5707
  %bf.set5 = and i8 %bf.load, 29, !dbg !5708
  %bf.clear7 = or i8 %bf.set5, 34, !dbg !5708
  store i8 %bf.clear7, i8* %is_restrict_var, align 4, !dbg !5708
  ret void, !dbg !5709
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @type_could_have_pointers(%union.tree_node* %type) unnamed_addr #5 !dbg !5710 {
entry:
  br label %tailrecurse, !dbg !5713

tailrecurse:                                      ; preds = %if.then11, %entry
  %type.tr = phi %union.tree_node* [ %type, %entry ], [ %1, %if.then11 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr, metadata !5712, metadata !DIExpression()), !dbg !5715
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5716
  %bf.load = load i64, i64* %0, align 8, !dbg !5716
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5716
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !5716
  br i1 %cmp, label %return.loopexit, label %lor.lhs.false, !dbg !5716

lor.lhs.false:                                    ; preds = %tailrecurse
  %cmp5 = icmp eq i64 %bf.cast1, 12, !dbg !5716
  br i1 %cmp5, label %return.loopexit, label %if.end, !dbg !5718

if.end:                                           ; preds = %lor.lhs.false
  %cmp10 = icmp eq i64 %bf.cast1, 15, !dbg !5719
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !5720

if.then11:                                        ; preds = %if.end
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5721
  %1 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !5721
  br label %tailrecurse, !dbg !5713

if.end13:                                         ; preds = %if.end
  %bf.cast1.lcssa10 = phi i64 [ %bf.cast1, %if.end ], !dbg !5716
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr, metadata !5712, metadata !DIExpression()), !dbg !5715
  br i1 false, label %if.end13.lor.end36_crit_edge, label %lor.rhs, !dbg !5722

if.end13.lor.end36_crit_edge:                     ; preds = %if.end13
  br label %lor.end36, !dbg !5722

lor.rhs:                                          ; preds = %if.end13
  %cmp23 = icmp eq i64 %bf.cast1.lcssa10, 16, !dbg !5722
  br i1 %cmp23, label %lor.end36, label %lor.lhs.false24, !dbg !5722

lor.lhs.false24:                                  ; preds = %lor.rhs
  %cmp29 = icmp eq i64 %bf.cast1.lcssa10, 17, !dbg !5722
  br i1 %cmp29, label %lor.end36, label %lor.rhs30, !dbg !5722

lor.rhs30:                                        ; preds = %lor.lhs.false24
  %cmp35 = icmp eq i64 %bf.cast1.lcssa10, 18, !dbg !5722
  %phitmp = zext i1 %cmp35 to i8, !dbg !5722
  br label %lor.end36, !dbg !5722

lor.end36:                                        ; preds = %if.end13.lor.end36_crit_edge, %lor.rhs, %lor.lhs.false24, %lor.rhs30
  %2 = phi i8 [ undef, %if.end13.lor.end36_crit_edge ], [ 1, %lor.lhs.false24 ], [ 1, %lor.rhs ], [ %phitmp, %lor.rhs30 ]
  br label %return, !dbg !5723

return.loopexit:                                  ; preds = %lor.lhs.false, %tailrecurse
  br label %return, !dbg !5724

return:                                           ; preds = %return.loopexit, %lor.end36
  %retval.0 = phi i8 [ %2, %lor.end36 ], [ 1, %return.loopexit ], !dbg !5715
  ret i8 %retval.0, !dbg !5724
}

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @heapvar_map_hash(%struct.heapvar_map* %h) unnamed_addr #5 !dbg !5725 {
entry:
  call void @llvm.dbg.value(metadata %struct.heapvar_map* %h, metadata !5729, metadata !DIExpression()), !dbg !5730
  %offset = getelementptr inbounds %struct.heapvar_map, %struct.heapvar_map* %h, i64 0, i32 1, !dbg !5731
  %0 = load i64, i64* %offset, align 8, !dbg !5731
  %1 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !5732
  %2 = bitcast %struct.heapvar_map* %h to i8**, !dbg !5733
  %3 = load i8*, i8** %2, align 8, !dbg !5733
  %call = tail call i32 %1(i8* %3) #6, !dbg !5732
  %call1 = tail call i32 @iterative_hash_host_wide_int(i64 %0, i32 %call) #6, !dbg !5734
  ret i32 %call1, !dbg !5735
}

declare dso_local i32 @iterative_hash_host_wide_int(i64, i32) local_unnamed_addr #2

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

declare dso_local %struct.var_ann_d* @create_var_ann(%union.tree_node*) local_unnamed_addr #2

declare dso_local i8** @pointer_map_contains(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @create_variable_info_for(%union.tree_node* %decl, i8* %name) unnamed_addr #5 !dbg !5736 {
entry:
  %fieldstack = alloca %struct.VEC_fieldoff_s_heap*, align 8
  %fo = alloca %struct.fieldoff*, align 8
  %tempname = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5740, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata i8* %name, metadata !5741, metadata !DIExpression()), !dbg !5758
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5759
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5759
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5743, metadata !DIExpression()), !dbg !5758
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5760
  %bf.load = load i64, i64* %1, align 8, !dbg !5760
  %bf.cast = and i64 %bf.load, 65535, !dbg !5760
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5760
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5760
  %cmp = icmp eq i32 %2, 3, !dbg !5760
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5760

cond.true:                                        ; preds = %entry
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5761
  br label %cond.end, !dbg !5760

cond.false:                                       ; preds = %entry
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5762
  br label %cond.end, !dbg !5760

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %union.tree_node** [ %size, %cond.true ], [ %3, %cond.false ]
  %cond = load %union.tree_node*, %union.tree_node** %cond.in, align 8, !dbg !5760
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !5744, metadata !DIExpression()), !dbg !5758
  %4 = bitcast %struct.VEC_fieldoff_s_heap** %fieldstack to i8*, !dbg !5763
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5763
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* null, metadata !5745, metadata !DIExpression()), !dbg !5758
  store %struct.VEC_fieldoff_s_heap* null, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !5764
  %call = tail call fastcc zeroext i8 @var_can_have_subvars(%union.tree_node* %decl) #7, !dbg !5765
  %tobool = icmp eq i8 %call, 0, !dbg !5765
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5767

land.lhs.true:                                    ; preds = %cond.end
  %5 = load i8, i8* @use_field_sensitive, align 1, !dbg !5768
  %tobool4 = icmp eq i8 %5, 0, !dbg !5768
  br i1 %tobool4, label %if.end, label %if.then, !dbg !5769

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap** %fieldstack, metadata !5745, metadata !DIExpression(DW_OP_deref)), !dbg !5758
  %call5 = call fastcc i32 @push_fields_onto_fieldstack(%union.tree_node* %0, %struct.VEC_fieldoff_s_heap** nonnull %fieldstack, i64 0) #7, !dbg !5770
  br label %if.end, !dbg !5770

if.end:                                           ; preds = %land.lhs.true, %cond.end, %if.then
  %call6 = call fastcc %struct.variable_info* @new_var_info(%union.tree_node* %decl, i8* %name) #7, !dbg !5771
  call void @llvm.dbg.value(metadata %struct.variable_info* %call6, metadata !5742, metadata !DIExpression()), !dbg !5758
  %offset = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 3, !dbg !5772
  store i64 0, i64* %offset, align 8, !dbg !5773
  %call7 = call fastcc zeroext i8 @could_have_pointers(%union.tree_node* %decl) #7, !dbg !5774
  %may_have_pointers = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 1, !dbg !5775
  %bf.load9 = load i8, i8* %may_have_pointers, align 4, !dbg !5776
  %bf.value = shl i8 %call7, 6, !dbg !5776
  %bf.shl = and i8 %bf.value, 64, !dbg !5776
  %bf.clear10 = and i8 %bf.load9, -65, !dbg !5776
  %bf.set = or i8 %bf.clear10, %bf.shl, !dbg !5776
  store i8 %bf.set, i8* %may_have_pointers, align 4, !dbg !5776
  %tobool11 = icmp eq %union.tree_node* %cond, null, !dbg !5777
  br i1 %tobool11, label %if.then14, label %lor.lhs.false, !dbg !5779

lor.lhs.false:                                    ; preds = %if.end
  %call12 = call i32 @host_integerp(%union.tree_node* nonnull %cond, i32 1) #6, !dbg !5780
  %tobool13 = icmp eq i32 %call12, 0, !dbg !5780
  br i1 %tobool13, label %lor.lhs.false.if.then14_crit_edge, label %if.else, !dbg !5781

lor.lhs.false.if.then14_crit_edge:                ; preds = %lor.lhs.false
  %bf.load15.pre = load i8, i8* %may_have_pointers, align 4, !dbg !5782
  br label %if.then14, !dbg !5781

if.then14:                                        ; preds = %lor.lhs.false.if.then14_crit_edge, %if.end
  %bf.load15 = phi i8 [ %bf.load15.pre, %lor.lhs.false.if.then14_crit_edge ], [ %bf.set, %if.end ], !dbg !5782
  %bf.set17 = or i8 %bf.load15, 4, !dbg !5782
  store i8 %bf.set17, i8* %may_have_pointers, align 4, !dbg !5782
  %fullsize = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 5, !dbg !5784
  store i64 -1, i64* %fullsize, align 8, !dbg !5785
  %size18 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 4, !dbg !5786
  store i64 -1, i64* %size18, align 8, !dbg !5787
  br label %if.end23, !dbg !5788

if.else:                                          ; preds = %lor.lhs.false
  %int_cst19 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5789
  %low = bitcast i32* %int_cst19 to i64*, !dbg !5789
  %6 = load i64, i64* %low, align 8, !dbg !5789
  %fullsize20 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 5, !dbg !5791
  store i64 %6, i64* %fullsize20, align 8, !dbg !5792
  %size22 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 4, !dbg !5793
  store i64 %6, i64* %size22, align 8, !dbg !5794
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then14
  %decl24 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 7, !dbg !5795
  %7 = load %union.tree_node*, %union.tree_node** %decl24, align 8, !dbg !5795
  call fastcc void @insert_vi_for_tree(%union.tree_node* %7, %struct.variable_info* %call6) #7, !dbg !5796
  %bf.load25 = load i8, i8* %may_have_pointers, align 4, !dbg !5797
  %tobool27 = icmp slt i8 %bf.load25, 0, !dbg !5799
  br i1 %tobool27, label %land.lhs.true28, label %if.end67, !dbg !5800

land.lhs.true28:                                  ; preds = %if.end23
  %8 = load i32, i32* @flag_whole_program, align 4, !dbg !5801
  %tobool29 = icmp ne i32 %8, 0, !dbg !5801
  %.b9 = load i1, i1* @in_ipa_mode, align 4, !dbg !5802
  %or.cond = and i1 %tobool29, %.b9, !dbg !5803
  br i1 %or.cond, label %if.end67, label %land.lhs.true32, !dbg !5803

land.lhs.true32:                                  ; preds = %land.lhs.true28
  %bf.clear36 = and i8 %bf.load25, 64, !dbg !5804
  %tobool38 = icmp eq i8 %bf.clear36, 0, !dbg !5805
  br i1 %tobool38, label %if.end67, label %if.then39, !dbg !5806

if.then39:                                        ; preds = %land.lhs.true32
  %9 = bitcast %union.tree_node** %type to i64**, !dbg !5807
  %10 = load i64*, i64** %9, align 8, !dbg !5807
  %bf.load43 = load i64, i64* %10, align 8, !dbg !5807
  %bf.cast456 = and i64 %bf.load43, 65535, !dbg !5807
  %cmp46 = icmp eq i64 %bf.cast456, 10, !dbg !5807
  %11 = bitcast i64* %10 to %struct.tree_type*, !dbg !5807
  br i1 %cmp46, label %land.lhs.true57, label %lor.lhs.false48, !dbg !5807

lor.lhs.false48:                                  ; preds = %if.then39
  %cmp55 = icmp eq i64 %bf.cast456, 12, !dbg !5807
  br i1 %cmp55, label %land.lhs.true57, label %if.end66, !dbg !5810

land.lhs.true57:                                  ; preds = %lor.lhs.false48, %if.then39
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 6, !dbg !5811
  %bf.load61 = load i32, i32* %restrict_flag, align 4, !dbg !5811
  %bf.clear63 = and i32 %bf.load61, 8192, !dbg !5811
  %tobool64 = icmp eq i32 %bf.clear63, 0, !dbg !5811
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !5812

if.then65:                                        ; preds = %land.lhs.true57
  call fastcc void @make_constraint_from_restrict(%struct.variable_info* %call6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i64 0, i64 0)) #7, !dbg !5813
  br label %if.end66, !dbg !5813

if.end66:                                         ; preds = %land.lhs.true57, %if.then65, %lor.lhs.false48
  call fastcc void @make_copy_constraint(%struct.variable_info* %call6, i32 4) #7, !dbg !5814
  br label %if.end67, !dbg !5815

if.end67:                                         ; preds = %land.lhs.true32, %land.lhs.true28, %if.end66, %if.end23
  %12 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 0), align 4, !dbg !5816
  %inc = add i32 %12, 1, !dbg !5816
  store i32 %inc, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 0), align 4, !dbg !5816
  %13 = load i8, i8* @use_field_sensitive, align 1, !dbg !5817
  %tobool69 = icmp eq i8 %13, 0, !dbg !5817
  br i1 %tobool69, label %if.else295, label %land.lhs.true70, !dbg !5818

land.lhs.true70:                                  ; preds = %if.end67
  %bf.load72 = load i8, i8* %may_have_pointers, align 4, !dbg !5819
  %bf.clear74 = and i8 %bf.load72, 4, !dbg !5819
  %tobool76 = icmp eq i8 %bf.clear74, 0, !dbg !5820
  br i1 %tobool76, label %land.lhs.true77, label %if.else295, !dbg !5821

land.lhs.true77:                                  ; preds = %land.lhs.true70
  %call78 = call fastcc zeroext i8 @var_can_have_subvars(%union.tree_node* %decl) #7, !dbg !5822
  %tobool80 = icmp eq i8 %call78, 0, !dbg !5822
  br i1 %tobool80, label %if.else295, label %land.lhs.true81, !dbg !5823

land.lhs.true81:                                  ; preds = %land.lhs.true77
  %14 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !5824
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %14, metadata !5745, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %14, metadata !5745, metadata !DIExpression()), !dbg !5758
  %base84 = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %14, i64 0, i32 0, !dbg !5824
  %call88 = call fastcc i32 @VEC_fieldoff_s_base_length(%struct.VEC_fieldoff_s_base* %base84) #7, !dbg !5824
  %cmp89 = icmp ugt i32 %call88, 1, !dbg !5825
  br i1 %cmp89, label %land.lhs.true91, label %if.else295, !dbg !5826

land.lhs.true91:                                  ; preds = %land.lhs.true81
  %15 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !5827
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %15, metadata !5745, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %15, metadata !5745, metadata !DIExpression()), !dbg !5758
  %base94 = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %15, i64 0, i32 0, !dbg !5827
  %call98 = call fastcc i32 @VEC_fieldoff_s_base_length(%struct.VEC_fieldoff_s_base* %base94) #7, !dbg !5827
  %conv99 = zext i32 %call98 to i64, !dbg !5827
  %16 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !5828
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %16, i64 95, i32 1, !dbg !5828
  %17 = load i32, i32* %value, align 8, !dbg !5828
  %conv101 = sext i32 %17 to i64, !dbg !5828
  %cmp102 = icmp ugt i64 %conv99, %conv101, !dbg !5829
  br i1 %cmp102, label %if.else295, label %if.then104, !dbg !5830

if.then104:                                       ; preds = %land.lhs.true91
  %18 = bitcast %struct.fieldoff** %fo to i8*, !dbg !5831
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8, !dbg !5831
  call void @llvm.dbg.value(metadata %struct.fieldoff* null, metadata !5746, metadata !DIExpression()), !dbg !5832
  store %struct.fieldoff* null, %struct.fieldoff** %fo, align 8, !dbg !5833
  call void @llvm.dbg.value(metadata i8 0, metadata !5750, metadata !DIExpression()), !dbg !5832
  call void @llvm.dbg.value(metadata i32 0, metadata !5751, metadata !DIExpression()), !dbg !5832
  br label %for.cond, !dbg !5834

for.cond:                                         ; preds = %for.inc, %if.then104
  %i.0 = phi i32 [ 0, %if.then104 ], [ %inc124, %for.inc ], !dbg !5836
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5751, metadata !DIExpression()), !dbg !5832
  %19 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !5837
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %19, metadata !5745, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %19, metadata !5745, metadata !DIExpression()), !dbg !5758
  %base108 = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %19, i64 0, i32 0, !dbg !5837
  call void @llvm.dbg.value(metadata %struct.fieldoff** %fo, metadata !5746, metadata !DIExpression(DW_OP_deref)), !dbg !5832
  %call112 = call fastcc i32 @VEC_fieldoff_s_base_iterate(%struct.VEC_fieldoff_s_base* %base108, i32 %i.0, %struct.fieldoff** nonnull %fo) #7, !dbg !5837
  %tobool113 = icmp eq i32 %call112, 0, !dbg !5839
  br i1 %tobool113, label %for.end, label %for.body, !dbg !5840

for.body:                                         ; preds = %for.cond
  %20 = load %struct.fieldoff*, %struct.fieldoff** %fo, align 8, !dbg !5841
  call void @llvm.dbg.value(metadata %struct.fieldoff* %20, metadata !5746, metadata !DIExpression()), !dbg !5832
  %has_unknown_size = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %20, i64 0, i32 2, !dbg !5844
  %bf.load114 = load i8, i8* %has_unknown_size, align 8, !dbg !5844
  %bf.clear115 = and i8 %bf.load114, 1, !dbg !5844
  %tobool117 = icmp eq i8 %bf.clear115, 0, !dbg !5841
  br i1 %tobool117, label %lor.lhs.false118, label %for.end, !dbg !5845

lor.lhs.false118:                                 ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.fieldoff* %20, metadata !5746, metadata !DIExpression()), !dbg !5832
  %offset119 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %20, i64 0, i32 0, !dbg !5846
  %21 = load i64, i64* %offset119, align 8, !dbg !5846
  %cmp120 = icmp slt i64 %21, 0, !dbg !5847
  br i1 %cmp120, label %for.end, label %for.inc, !dbg !5848

for.inc:                                          ; preds = %lor.lhs.false118
  %inc124 = add i32 %i.0, 1, !dbg !5849
  call void @llvm.dbg.value(metadata i32 %inc124, metadata !5751, metadata !DIExpression()), !dbg !5832
  br label %for.cond, !dbg !5850, !llvm.loop !5851

for.end:                                          ; preds = %for.body, %for.cond, %lor.lhs.false118
  %notokay.0 = phi i8 [ 0, %for.cond ], [ 1, %lor.lhs.false118 ], [ 1, %for.body ], !dbg !5832
  call void @llvm.dbg.value(metadata i8 %notokay.0, metadata !5750, metadata !DIExpression()), !dbg !5832
  %tobool125 = icmp eq i8 %notokay.0, 0, !dbg !5853
  br i1 %tobool125, label %if.then126, label %if.end128, !dbg !5855

if.then126:                                       ; preds = %for.end
  %22 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !5856
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %22, metadata !5745, metadata !DIExpression()), !dbg !5758
  call fastcc void @sort_fieldstack(%struct.VEC_fieldoff_s_heap* %22) #7, !dbg !5858
  %23 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !5859
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %23, metadata !5745, metadata !DIExpression()), !dbg !5758
  %call127 = call fastcc zeroext i8 @check_for_overlaps(%struct.VEC_fieldoff_s_heap* %23) #7, !dbg !5860
  call void @llvm.dbg.value(metadata i8 %call127, metadata !5750, metadata !DIExpression()), !dbg !5832
  br label %if.end128, !dbg !5861

if.end128:                                        ; preds = %for.end, %if.then126
  %notokay.1 = phi i8 [ %notokay.0, %for.end ], [ %call127, %if.then126 ], !dbg !5832
  call void @llvm.dbg.value(metadata i8 %notokay.1, metadata !5750, metadata !DIExpression()), !dbg !5832
  %24 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !5862
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %24, metadata !5745, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %24, metadata !5745, metadata !DIExpression()), !dbg !5758
  %base131 = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %24, i64 0, i32 0, !dbg !5862
  %call135 = call fastcc i32 @VEC_fieldoff_s_base_length(%struct.VEC_fieldoff_s_base* %base131) #7, !dbg !5862
  %cmp136 = icmp eq i32 %call135, 0, !dbg !5864
  br i1 %cmp136, label %if.end128.if.end146_crit_edge, label %if.then138, !dbg !5865

if.end128.if.end146_crit_edge:                    ; preds = %if.end128
  %.pre = load %struct.fieldoff*, %struct.fieldoff** %fo, align 8, !dbg !5866
  br label %if.end146, !dbg !5865

if.then138:                                       ; preds = %if.end128
  %25 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !5868
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %25, metadata !5745, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %25, metadata !5745, metadata !DIExpression()), !dbg !5758
  %base141 = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %25, i64 0, i32 0, !dbg !5868
  %call145 = call fastcc %struct.fieldoff* @VEC_fieldoff_s_base_index(%struct.VEC_fieldoff_s_base* %base141, i32 0) #7, !dbg !5868
  call void @llvm.dbg.value(metadata %struct.fieldoff* %call145, metadata !5746, metadata !DIExpression()), !dbg !5832
  store %struct.fieldoff* %call145, %struct.fieldoff** %fo, align 8, !dbg !5869
  br label %if.end146, !dbg !5870

if.end146:                                        ; preds = %if.end128.if.end146_crit_edge, %if.then138
  %26 = phi %struct.fieldoff* [ %.pre, %if.end128.if.end146_crit_edge ], [ %call145, %if.then138 ], !dbg !5866
  call void @llvm.dbg.value(metadata %struct.fieldoff* %26, metadata !5746, metadata !DIExpression()), !dbg !5832
  %cmp147 = icmp eq %struct.fieldoff* %26, null, !dbg !5871
  %tobool151 = icmp ne i8 %notokay.1, 0, !dbg !5872
  %or.cond2 = or i1 %cmp147, %tobool151, !dbg !5873
  br i1 %or.cond2, label %if.then152, label %if.end162, !dbg !5873

if.then152:                                       ; preds = %if.end146
  %bf.load154 = load i8, i8* %may_have_pointers, align 4, !dbg !5874
  %fullsize157 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 5, !dbg !5876
  store i64 -1, i64* %fullsize157, align 8, !dbg !5877
  %size158 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 4, !dbg !5878
  store i64 -1, i64* %size158, align 8, !dbg !5879
  %bf.set161 = or i8 %bf.load154, 12, !dbg !5880
  store i8 %bf.set161, i8* %may_have_pointers, align 4, !dbg !5880
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap** %fieldstack, metadata !5745, metadata !DIExpression(DW_OP_deref)), !dbg !5758
  call fastcc void @VEC_fieldoff_s_heap_free(%struct.VEC_fieldoff_s_heap** nonnull %fieldstack) #7, !dbg !5881
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 0, !dbg !5882
  %27 = load i32, i32* %id, align 8, !dbg !5882
  br label %cleanup, !dbg !5883

if.end162:                                        ; preds = %if.end146
  call void @llvm.dbg.value(metadata %struct.fieldoff* %26, metadata !5746, metadata !DIExpression()), !dbg !5832
  %size163 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %26, i64 0, i32 1, !dbg !5884
  %28 = load i64, i64* %size163, align 8, !dbg !5884
  %size164 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 4, !dbg !5885
  store i64 %28, i64* %size164, align 8, !dbg !5886
  call void @llvm.dbg.value(metadata %struct.fieldoff* %26, metadata !5746, metadata !DIExpression()), !dbg !5832
  %offset165 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %26, i64 0, i32 0, !dbg !5887
  %29 = load i64, i64* %offset165, align 8, !dbg !5887
  store i64 %29, i64* %offset, align 8, !dbg !5888
  call void @llvm.dbg.value(metadata %struct.fieldoff* %26, metadata !5746, metadata !DIExpression()), !dbg !5832
  %may_have_pointers167 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %26, i64 0, i32 2, !dbg !5889
  %bf.load168 = load i8, i8* %may_have_pointers167, align 8, !dbg !5889
  %bf.load173 = load i8, i8* %may_have_pointers, align 4, !dbg !5890
  %30 = shl i8 %bf.load168, 5, !dbg !5890
  %bf.shl175 = and i8 %30, 64, !dbg !5890
  %bf.clear176 = and i8 %bf.load173, -65, !dbg !5890
  %bf.set177 = or i8 %bf.clear176, %bf.shl175, !dbg !5890
  store i8 %bf.set177, i8* %may_have_pointers, align 4, !dbg !5890
  %tobool183 = icmp slt i8 %bf.load173, 0, !dbg !5891
  br i1 %tobool183, label %land.lhs.true184, label %if.end203, !dbg !5893

land.lhs.true184:                                 ; preds = %if.end162
  %31 = load i32, i32* @flag_whole_program, align 4, !dbg !5894
  %tobool185 = icmp ne i32 %31, 0, !dbg !5894
  %.b8 = load i1, i1* @in_ipa_mode, align 4, !dbg !5895
  %or.cond3 = and i1 %tobool185, %.b8, !dbg !5896
  br i1 %or.cond3, label %if.end203, label %land.lhs.true188, !dbg !5896

land.lhs.true188:                                 ; preds = %land.lhs.true184
  %tobool194 = icmp eq i8 %bf.shl175, 0, !dbg !5897
  br i1 %tobool194, label %if.end203, label %if.then195, !dbg !5898

if.then195:                                       ; preds = %land.lhs.true188
  %32 = load %struct.fieldoff*, %struct.fieldoff** %fo, align 8, !dbg !5899
  call void @llvm.dbg.value(metadata %struct.fieldoff* %32, metadata !5746, metadata !DIExpression()), !dbg !5832
  %only_restrict_pointers = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %32, i64 0, i32 2, !dbg !5902
  %bf.load196 = load i8, i8* %only_restrict_pointers, align 8, !dbg !5902
  %bf.clear198 = and i8 %bf.load196, 4, !dbg !5902
  %tobool200 = icmp eq i8 %bf.clear198, 0, !dbg !5899
  br i1 %tobool200, label %if.end203, label %if.then201, !dbg !5903

if.then201:                                       ; preds = %if.then195
  call fastcc void @make_constraint_from_restrict(%struct.variable_info* %call6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i64 0, i64 0)) #7, !dbg !5904
  br label %if.end203, !dbg !5904

if.end203:                                        ; preds = %if.then195, %land.lhs.true188, %if.then201, %land.lhs.true184, %if.end162
  %33 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !5905
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %33, metadata !5745, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %33, metadata !5745, metadata !DIExpression()), !dbg !5758
  %base206 = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %33, i64 0, i32 0, !dbg !5905
  %call210 = call fastcc i32 @VEC_fieldoff_s_base_length(%struct.VEC_fieldoff_s_base* %base206) #7, !dbg !5905
  call void @llvm.dbg.value(metadata i32 %call210, metadata !5751, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5832
  %34 = bitcast i8** %tempname to i8*, !dbg !5906
  %name227 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 6, !dbg !5907
  %fullsize238 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 5, !dbg !5906
  br label %for.cond211, !dbg !5910

for.cond211:                                      ; preds = %if.end289, %if.end203
  %i.1.in = phi i32 [ %call210, %if.end203 ], [ %i.1, %if.end289 ]
  %i.1 = add i32 %i.1.in, -1, !dbg !5911
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5751, metadata !DIExpression()), !dbg !5832
  %cmp212 = icmp eq i32 %i.1, 0, !dbg !5912
  br i1 %cmp212, label %cleanup.loopexit, label %land.rhs214, !dbg !5913

land.rhs214:                                      ; preds = %for.cond211
  %35 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !5914
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %35, metadata !5745, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %35, metadata !5745, metadata !DIExpression()), !dbg !5758
  %base217 = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %35, i64 0, i32 0, !dbg !5914
  call void @llvm.dbg.value(metadata %struct.fieldoff** %fo, metadata !5746, metadata !DIExpression(DW_OP_deref)), !dbg !5832
  %call221 = call fastcc i32 @VEC_fieldoff_s_base_iterate(%struct.VEC_fieldoff_s_base* %base217, i32 %i.1, %struct.fieldoff** nonnull %fo) #7, !dbg !5914
  %tobool222 = icmp eq i32 %call221, 0, !dbg !5913
  br i1 %tobool222, label %cleanup.loopexit, label %for.body224, !dbg !5915

for.body224:                                      ; preds = %land.rhs214
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), metadata !5756, metadata !DIExpression()), !dbg !5906
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8, !dbg !5916
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5917
  %tobool225 = icmp eq %struct._IO_FILE* %36, null, !dbg !5917
  br i1 %tobool225, label %if.end232, label %if.then226, !dbg !5918

if.then226:                                       ; preds = %for.body224
  %37 = load i8*, i8** %name227, align 8, !dbg !5919
  %38 = load %struct.fieldoff*, %struct.fieldoff** %fo, align 8, !dbg !5920
  call void @llvm.dbg.value(metadata %struct.fieldoff* %38, metadata !5746, metadata !DIExpression()), !dbg !5832
  %offset228 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %38, i64 0, i32 0, !dbg !5921
  %39 = load i64, i64* %offset228, align 8, !dbg !5921
  call void @llvm.dbg.value(metadata %struct.fieldoff* %38, metadata !5746, metadata !DIExpression()), !dbg !5832
  %size229 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %38, i64 0, i32 1, !dbg !5922
  %40 = load i64, i64* %size229, align 8, !dbg !5922
  call void @llvm.dbg.value(metadata i8** %tempname, metadata !5757, metadata !DIExpression(DW_OP_deref)), !dbg !5906
  %call230 = call i32 (i8**, i8*, ...) @asprintf(i8** nonnull %tempname, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i64 0, i64 0), i8* %37, i64 %39, i64 %40) #6, !dbg !5923
  %41 = load i8*, i8** %tempname, align 8, !dbg !5924
  call void @llvm.dbg.value(metadata i8* %41, metadata !5757, metadata !DIExpression()), !dbg !5906
  %call231 = call i8* @ggc_alloc_string(i8* %41, i32 -1) #6, !dbg !5924
  call void @llvm.dbg.value(metadata i8* %call231, metadata !5756, metadata !DIExpression()), !dbg !5906
  %42 = load i8*, i8** %tempname, align 8, !dbg !5925
  call void @llvm.dbg.value(metadata i8* %42, metadata !5757, metadata !DIExpression()), !dbg !5906
  call void @free(i8* %42) #6, !dbg !5926
  br label %if.end232, !dbg !5927

if.end232:                                        ; preds = %for.body224, %if.then226
  %newname.0 = phi i8* [ %call231, %if.then226 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), %for.body224 ], !dbg !5906
  call void @llvm.dbg.value(metadata i8* %newname.0, metadata !5756, metadata !DIExpression()), !dbg !5906
  %call233 = call fastcc %struct.variable_info* @new_var_info(%union.tree_node* %decl, i8* %newname.0) #7, !dbg !5928
  call void @llvm.dbg.value(metadata %struct.variable_info* %call233, metadata !5752, metadata !DIExpression()), !dbg !5906
  %43 = load %struct.fieldoff*, %struct.fieldoff** %fo, align 8, !dbg !5929
  call void @llvm.dbg.value(metadata %struct.fieldoff* %43, metadata !5746, metadata !DIExpression()), !dbg !5832
  %offset234 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %43, i64 0, i32 0, !dbg !5930
  %44 = load i64, i64* %offset234, align 8, !dbg !5930
  %offset235 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call233, i64 0, i32 3, !dbg !5931
  store i64 %44, i64* %offset235, align 8, !dbg !5932
  call void @llvm.dbg.value(metadata %struct.fieldoff* %43, metadata !5746, metadata !DIExpression()), !dbg !5832
  %size236 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %43, i64 0, i32 1, !dbg !5933
  %45 = load i64, i64* %size236, align 8, !dbg !5933
  %size237 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call233, i64 0, i32 4, !dbg !5934
  store i64 %45, i64* %size237, align 8, !dbg !5935
  %46 = load i64, i64* %fullsize238, align 8, !dbg !5936
  %fullsize239 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call233, i64 0, i32 5, !dbg !5937
  store i64 %46, i64* %fullsize239, align 8, !dbg !5938
  call void @llvm.dbg.value(metadata %struct.fieldoff* %43, metadata !5746, metadata !DIExpression()), !dbg !5832
  %may_have_pointers240 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %43, i64 0, i32 2, !dbg !5939
  %bf.load241 = load i8, i8* %may_have_pointers240, align 8, !dbg !5939
  %may_have_pointers245 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call233, i64 0, i32 1, !dbg !5940
  %bf.load246 = load i8, i8* %may_have_pointers245, align 4, !dbg !5941
  %47 = shl i8 %bf.load241, 5, !dbg !5941
  %bf.shl248 = and i8 %47, 64, !dbg !5941
  %bf.clear249 = and i8 %bf.load246, -65, !dbg !5941
  %bf.set250 = or i8 %bf.clear249, %bf.shl248, !dbg !5941
  store i8 %bf.set250, i8* %may_have_pointers245, align 4, !dbg !5941
  call fastcc void @insert_into_field_list(%struct.variable_info* %call6, %struct.variable_info* %call233) #7, !dbg !5942
  %bf.load253 = load i8, i8* %may_have_pointers245, align 4, !dbg !5943
  %tobool256 = icmp slt i8 %bf.load253, 0, !dbg !5945
  br i1 %tobool256, label %land.lhs.true264, label %lor.lhs.false257, !dbg !5946

lor.lhs.false257:                                 ; preds = %if.end232
  %bf.load259 = load i64, i64* %1, align 8, !dbg !5947
  %bf.cast2615 = and i64 %bf.load259, 65535, !dbg !5948
  %cmp262 = icmp eq i64 %bf.cast2615, 34, !dbg !5948
  br i1 %cmp262, label %land.lhs.true264, label %if.end289, !dbg !5949

land.lhs.true264:                                 ; preds = %lor.lhs.false257, %if.end232
  %bf.clear268 = and i8 %bf.load253, 64, !dbg !5950
  %tobool270 = icmp eq i8 %bf.clear268, 0, !dbg !5951
  br i1 %tobool270, label %if.end289, label %if.then271, !dbg !5952

if.then271:                                       ; preds = %land.lhs.true264
  %48 = load %struct.fieldoff*, %struct.fieldoff** %fo, align 8, !dbg !5953
  call void @llvm.dbg.value(metadata %struct.fieldoff* %48, metadata !5746, metadata !DIExpression()), !dbg !5832
  %only_restrict_pointers272 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %48, i64 0, i32 2, !dbg !5956
  %bf.load273 = load i8, i8* %only_restrict_pointers272, align 8, !dbg !5956
  %bf.clear275 = and i8 %bf.load273, 4, !dbg !5956
  %tobool277 = icmp eq i8 %bf.clear275, 0, !dbg !5953
  br i1 %tobool277, label %if.end279, label %if.then278, !dbg !5957

if.then278:                                       ; preds = %if.then271
  call fastcc void @make_constraint_from_restrict(%struct.variable_info* %call233, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i64 0, i64 0)) #7, !dbg !5958
  %bf.load281.pre = load i8, i8* %may_have_pointers245, align 4, !dbg !5959
  br label %if.end279, !dbg !5958

if.end279:                                        ; preds = %if.then271, %if.then278
  %bf.load281 = phi i8 [ %bf.load253, %if.then271 ], [ %bf.load281.pre, %if.then278 ], !dbg !5959
  %tobool284 = icmp sgt i8 %bf.load281, -1, !dbg !5961
  %.b = load i1, i1* @in_ipa_mode, align 4, !dbg !5962
  %or.cond4 = or i1 %tobool284, %.b, !dbg !5963
  br i1 %or.cond4, label %if.end289, label %if.then287, !dbg !5963

if.then287:                                       ; preds = %if.end279
  call fastcc void @make_copy_constraint(%struct.variable_info* %call233, i32 4) #7, !dbg !5964
  br label %if.end289, !dbg !5964

if.end289:                                        ; preds = %land.lhs.true264, %if.then287, %if.end279, %lor.lhs.false257
  %49 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 0), align 4, !dbg !5965
  %inc290 = add i32 %49, 1, !dbg !5965
  store i32 %inc290, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 0), align 4, !dbg !5965
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8, !dbg !5966
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5751, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5832
  br label %for.cond211, !dbg !5967, !llvm.loop !5968

cleanup.loopexit:                                 ; preds = %for.cond211, %land.rhs214
  br label %cleanup, !dbg !5970

cleanup:                                          ; preds = %cleanup.loopexit, %if.then152
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then152 ], [ true, %cleanup.loopexit ]
  %retval.0 = phi i32 [ %27, %if.then152 ], [ undef, %cleanup.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8, !dbg !5970
  br i1 %cleanup.dest.slot.0, label %if.end300, label %cleanup302

if.else295:                                       ; preds = %land.lhs.true91, %land.lhs.true77, %land.lhs.true70, %if.end67, %land.lhs.true81
  %bf.load297 = load i8, i8* %may_have_pointers, align 4, !dbg !5971
  %bf.set299 = or i8 %bf.load297, 8, !dbg !5971
  store i8 %bf.set299, i8* %may_have_pointers, align 4, !dbg !5971
  br label %if.end300

if.end300:                                        ; preds = %cleanup, %if.else295
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap** %fieldstack, metadata !5745, metadata !DIExpression(DW_OP_deref)), !dbg !5758
  call fastcc void @VEC_fieldoff_s_heap_free(%struct.VEC_fieldoff_s_heap** nonnull %fieldstack) #7, !dbg !5972
  %id301 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 0, !dbg !5973
  %50 = load i32, i32* %id301, align 8, !dbg !5973
  br label %cleanup302, !dbg !5974

cleanup302:                                       ; preds = %cleanup, %if.end300
  %retval.1 = phi i32 [ %50, %if.end300 ], [ %retval.0, %cleanup ], !dbg !5758
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !5975
  ret i32 %retval.1, !dbg !5975
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @alias_get_name(%union.tree_node* %decl) unnamed_addr #5 !dbg !5976 {
entry:
  %temp = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5980, metadata !DIExpression()), !dbg !5984
  %call = tail call i8* @get_name(%union.tree_node* %decl) #6, !dbg !5985
  call void @llvm.dbg.value(metadata i8* %call, metadata !5981, metadata !DIExpression()), !dbg !5984
  %0 = bitcast i8** %temp to i8*, !dbg !5986
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5986
  call void @llvm.dbg.value(metadata i32 0, metadata !5983, metadata !DIExpression()), !dbg !5984
  %cmp = icmp eq i8* %call, null, !dbg !5987
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5989

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), metadata !5981, metadata !DIExpression()), !dbg !5984
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5990
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !5990
  br i1 %tobool, label %cleanup, label %if.end2, !dbg !5992

if.end2:                                          ; preds = %if.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5993
  %bf.load = load i64, i64* %2, align 8, !dbg !5993
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5995
  %cmp3 = icmp eq i64 %bf.cast1, 141, !dbg !5995
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !5996

if.then4:                                         ; preds = %if.end2
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5997
  %3 = bitcast i32* %var to %union.tree_node**, !dbg !5997
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !5997
  %call5 = tail call fastcc i8* @alias_get_name(%union.tree_node* %4) #7, !dbg !5999
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6000
  %5 = bitcast %union.tree_node** %version to i32*, !dbg !6000
  %6 = load i32, i32* %5, align 8, !dbg !6000
  call void @llvm.dbg.value(metadata i8** %temp, metadata !5982, metadata !DIExpression(DW_OP_deref)), !dbg !5984
  %call7 = call i32 (i8**, i8*, ...) @asprintf(i8** nonnull %temp, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i8* %call5, i32 %6) #6, !dbg !6001
  call void @llvm.dbg.value(metadata i32 %call7, metadata !5983, metadata !DIExpression()), !dbg !5984
  br label %if.end16, !dbg !6002

if.else:                                          ; preds = %if.end2
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1, !dbg !6003
  %7 = load i32, i32* %arrayidx, align 4, !dbg !6003
  %cmp12 = icmp eq i32 %7, 3, !dbg !6003
  br i1 %cmp12, label %if.then13, label %if.end16, !dbg !6005

if.then13:                                        ; preds = %if.else
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6006
  %8 = load i32, i32* %uid, align 4, !dbg !6006
  call void @llvm.dbg.value(metadata i8** %temp, metadata !5982, metadata !DIExpression(DW_OP_deref)), !dbg !5984
  %call14 = call i32 (i8**, i8*, ...) @asprintf(i8** nonnull %temp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0), i32 %8) #6, !dbg !6008
  call void @llvm.dbg.value(metadata i32 %call14, metadata !5983, metadata !DIExpression()), !dbg !5984
  br label %if.end16, !dbg !6009

if.end16:                                         ; preds = %if.else, %if.then13, %if.then4
  %num_printed.1 = phi i32 [ %call7, %if.then4 ], [ %call14, %if.then13 ], [ 0, %if.else ], !dbg !6010
  call void @llvm.dbg.value(metadata i32 %num_printed.1, metadata !5983, metadata !DIExpression()), !dbg !5984
  %cmp17 = icmp sgt i32 %num_printed.1, 0, !dbg !6011
  br i1 %cmp17, label %if.then18, label %cleanup, !dbg !6013

if.then18:                                        ; preds = %if.end16
  %9 = load i8*, i8** %temp, align 8, !dbg !6014
  call void @llvm.dbg.value(metadata i8* %9, metadata !5982, metadata !DIExpression()), !dbg !5984
  %call19 = call i8* @ggc_alloc_string(i8* %9, i32 -1) #6, !dbg !6014
  call void @llvm.dbg.value(metadata i8* %call19, metadata !5981, metadata !DIExpression()), !dbg !5984
  %10 = load i8*, i8** %temp, align 8, !dbg !6016
  call void @llvm.dbg.value(metadata i8* %10, metadata !5982, metadata !DIExpression()), !dbg !5984
  call void @free(i8* %10) #6, !dbg !6017
  br label %cleanup, !dbg !6018

cleanup:                                          ; preds = %if.end, %entry, %if.end16, %if.then18
  %retval.0 = phi i8* [ %call, %entry ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), %if.end ], [ %call19, %if.then18 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), %if.end16 ], !dbg !5984
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6019
  ret i8* %retval.0, !dbg !6019
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @var_can_have_subvars(%union.tree_node* %v) unnamed_addr #0 !dbg !6020 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %v, metadata !6022, metadata !DIExpression()), !dbg !6023
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %v, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6024
  %bf.load = load i64, i64* %0, align 8, !dbg !6024
  %bf.cast1 = and i64 %bf.load, 524288, !dbg !6024
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !6024
  br i1 %tobool, label %if.end, label %return, !dbg !6026

if.end:                                           ; preds = %entry
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !6027
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast4, !dbg !6027
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6027
  %cmp = icmp eq i32 %1, 3, !dbg !6027
  br i1 %cmp, label %if.end6, label %return, !dbg !6029

if.end6:                                          ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %v, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6030
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !6030
  %3 = load i64*, i64** %2, align 8, !dbg !6030
  %bf.load8 = load i64, i64* %3, align 8, !dbg !6030
  %bf.cast102 = and i64 %bf.load8, 65535, !dbg !6032
  %cmp11 = icmp eq i64 %bf.cast102, 16, !dbg !6032
  %. = zext i1 %cmp11 to i8, !dbg !6023
  br label %return, !dbg !6023

return:                                           ; preds = %entry, %if.end6, %if.end
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ %., %if.end6 ], !dbg !6023
  ret i8 %retval.0, !dbg !6033
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @push_fields_onto_fieldstack(%union.tree_node* %type, %struct.VEC_fieldoff_s_heap** %fieldstack, i64 %offset) unnamed_addr #5 !dbg !6034 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6039, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap** %fieldstack, metadata !6040, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.value(metadata i64 %offset, metadata !6041, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.value(metadata i32 0, metadata !6043, metadata !DIExpression()), !dbg !6055
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6056
  %bf.load = load i64, i64* %0, align 8, !dbg !6056
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6058
  %cmp = icmp eq i64 %bf.cast1, 16, !dbg !6058
  br i1 %cmp, label %if.end, label %cleanup, !dbg !6059

if.end:                                           ; preds = %entry
  %1 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !6060
  %tobool = icmp eq %struct.VEC_fieldoff_s_heap* %1, null, !dbg !6060
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6060

cond.true:                                        ; preds = %if.end
  %base1 = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %1, i64 0, i32 0, !dbg !6060
  br label %cond.end, !dbg !6060

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_fieldoff_s_base* [ %base1, %cond.true ], [ null, %if.end ], !dbg !6060
  %call = tail call fastcc i32 @VEC_fieldoff_s_base_length(%struct.VEC_fieldoff_s_base* %cond) #7, !dbg !6060
  %conv = zext i32 %call to i64, !dbg !6060
  %2 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !6062
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %2, i64 95, i32 1, !dbg !6062
  %3 = load i32, i32* %value, align 8, !dbg !6062
  %conv2 = sext i32 %3 to i64, !dbg !6062
  %cmp3 = icmp ugt i64 %conv, %conv2, !dbg !6063
  br i1 %cmp3, label %cleanup, label %if.end6, !dbg !6064

if.end6:                                          ; preds = %cond.end
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6065
  %4 = bitcast i32* %values to %union.tree_node**, !dbg !6065
  br label %for.cond, !dbg !6066

for.cond:                                         ; preds = %for.inc, %if.end6
  %count.0 = phi i32 [ 0, %if.end6 ], [ %count.3, %for.inc ], !dbg !6055
  %field.0.in = phi %union.tree_node** [ %4, %if.end6 ], [ %chain, %for.inc ]
  %field.0 = load %union.tree_node*, %union.tree_node** %field.0.in, align 8, !dbg !6067
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !6042, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !6043, metadata !DIExpression()), !dbg !6055
  %tobool8 = icmp eq %union.tree_node* %field.0, null, !dbg !6068
  br i1 %tobool8, label %cleanup.loopexit, label %for.body, !dbg !6068

for.body:                                         ; preds = %for.cond
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6069
  %bf.load10 = load i64, i64* %5, align 8, !dbg !6069
  %bf.cast122 = and i64 %bf.load10, 65535, !dbg !6070
  %cmp13 = icmp eq i64 %bf.cast122, 31, !dbg !6070
  br i1 %cmp13, label %if.then15, label %for.inc, !dbg !6071

if.then15:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata i8 0, metadata !6044, metadata !DIExpression()), !dbg !6072
  call void @llvm.dbg.value(metadata i32 0, metadata !6049, metadata !DIExpression()), !dbg !6072
  %call16 = tail call fastcc i64 @bitpos_of_field(%union.tree_node* nonnull %field.0) #7, !dbg !6073
  call void @llvm.dbg.value(metadata i64 %call16, metadata !6050, metadata !DIExpression()), !dbg !6072
  %call17 = tail call fastcc zeroext i8 @var_can_have_subvars(%union.tree_node* nonnull %field.0) #7, !dbg !6074
  %tobool18 = icmp eq i8 %call17, 0, !dbg !6074
  br i1 %tobool18, label %if.end48, label %lor.lhs.false, !dbg !6076

lor.lhs.false:                                    ; preds = %if.then15
  %type19 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6077
  %6 = bitcast %union.tree_node** %type19 to i64**, !dbg !6077
  %7 = load i64*, i64** %6, align 8, !dbg !6077
  %bf.load21 = load i64, i64* %7, align 8, !dbg !6077
  %bf.cast235 = and i64 %bf.load21, 65535, !dbg !6078
  %cmp24 = icmp eq i64 %bf.cast235, 18, !dbg !6078
  %8 = bitcast i64* %7 to %union.tree_node*, !dbg !6079
  br i1 %cmp24, label %if.end48, label %lor.lhs.false26, !dbg !6079

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %cmp33 = icmp eq i64 %bf.cast235, 17, !dbg !6080
  br i1 %cmp33, label %if.end48, label %if.else, !dbg !6081

if.else:                                          ; preds = %lor.lhs.false26
  %add = add nsw i64 %call16, %offset, !dbg !6082
  %call38 = tail call fastcc i32 @push_fields_onto_fieldstack(%union.tree_node* %8, %struct.VEC_fieldoff_s_heap** %fieldstack, i64 %add) #7, !dbg !6084
  call void @llvm.dbg.value(metadata i32 %call38, metadata !6049, metadata !DIExpression()), !dbg !6072
  %tobool39 = icmp eq i32 %call38, 0, !dbg !6085
  br i1 %tobool39, label %land.lhs.true, label %if.end48, !dbg !6086

land.lhs.true:                                    ; preds = %if.else
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6087
  %9 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !6087
  %tobool40 = icmp eq %union.tree_node* %9, null, !dbg !6087
  br i1 %tobool40, label %if.end48, label %land.lhs.true41, !dbg !6088

land.lhs.true41:                                  ; preds = %land.lhs.true
  %call44 = tail call i32 @integer_zerop(%union.tree_node* nonnull %9) #6, !dbg !6089
  %tobool45 = icmp eq i32 %call44, 0, !dbg !6089
  %spec.select = zext i1 %tobool45 to i8, !dbg !6090
  br label %if.end48, !dbg !6090

if.end48:                                         ; preds = %land.lhs.true, %if.else, %if.then15, %land.lhs.true41, %lor.lhs.false, %lor.lhs.false26
  %push.1 = phi i8 [ 1, %lor.lhs.false26 ], [ 1, %lor.lhs.false ], [ 1, %if.then15 ], [ 0, %if.else ], [ 0, %land.lhs.true ], [ %spec.select, %land.lhs.true41 ], !dbg !6072
  %pushed.0 = phi i32 [ 0, %lor.lhs.false26 ], [ 0, %lor.lhs.false ], [ 0, %if.then15 ], [ %call38, %if.else ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true41 ], !dbg !6072
  call void @llvm.dbg.value(metadata i32 %pushed.0, metadata !6049, metadata !DIExpression()), !dbg !6072
  call void @llvm.dbg.value(metadata i8 %push.1, metadata !6044, metadata !DIExpression()), !dbg !6072
  %tobool49 = icmp eq i8 %push.1, 0, !dbg !6091
  br i1 %tobool49, label %if.else176, label %if.then50, !dbg !6092

if.then50:                                        ; preds = %if.end48
  call void @llvm.dbg.value(metadata %struct.fieldoff* null, metadata !6051, metadata !DIExpression()), !dbg !6093
  call void @llvm.dbg.value(metadata i8 0, metadata !6054, metadata !DIExpression()), !dbg !6093
  %10 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !6094
  %tobool51 = icmp eq %struct.VEC_fieldoff_s_heap* %10, null, !dbg !6094
  br i1 %tobool51, label %cond.end55, label %cond.true52, !dbg !6094

cond.true52:                                      ; preds = %if.then50
  %base53 = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %10, i64 0, i32 0, !dbg !6094
  br label %cond.end55, !dbg !6094

cond.end55:                                       ; preds = %if.then50, %cond.true52
  %cond56 = phi %struct.VEC_fieldoff_s_base* [ %base53, %cond.true52 ], [ null, %if.then50 ], !dbg !6094
  %call57 = tail call fastcc i32 @VEC_fieldoff_s_base_length(%struct.VEC_fieldoff_s_base* %cond56) #7, !dbg !6094
  %cmp58 = icmp eq i32 %call57, 0, !dbg !6094
  br i1 %cmp58, label %if.end68, label %if.then60, !dbg !6096

if.then60:                                        ; preds = %cond.end55
  %11 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !6097
  %tobool61 = icmp eq %struct.VEC_fieldoff_s_heap* %11, null, !dbg !6097
  br i1 %tobool61, label %cond.end65, label %cond.true62, !dbg !6097

cond.true62:                                      ; preds = %if.then60
  %base63 = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %11, i64 0, i32 0, !dbg !6097
  br label %cond.end65, !dbg !6097

cond.end65:                                       ; preds = %if.then60, %cond.true62
  %cond66 = phi %struct.VEC_fieldoff_s_base* [ %base63, %cond.true62 ], [ null, %if.then60 ], !dbg !6097
  %call67 = tail call fastcc %struct.fieldoff* @VEC_fieldoff_s_base_last(%struct.VEC_fieldoff_s_base* %cond66) #7, !dbg !6097
  call void @llvm.dbg.value(metadata %struct.fieldoff* %call67, metadata !6051, metadata !DIExpression()), !dbg !6093
  br label %if.end68, !dbg !6098

if.end68:                                         ; preds = %cond.end65, %cond.end55
  %pair.0 = phi %struct.fieldoff* [ null, %cond.end55 ], [ %call67, %cond.end65 ], !dbg !6093
  call void @llvm.dbg.value(metadata %struct.fieldoff* %pair.0, metadata !6051, metadata !DIExpression()), !dbg !6093
  %size70 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6099
  %12 = load %union.tree_node*, %union.tree_node** %size70, align 8, !dbg !6099
  %tobool71 = icmp eq %union.tree_node* %12, null, !dbg !6099
  br i1 %tobool71, label %if.then77, label %lor.lhs.false72, !dbg !6101

lor.lhs.false72:                                  ; preds = %if.end68
  %call75 = tail call i32 @host_integerp(%union.tree_node* nonnull %12, i32 1) #6, !dbg !6102
  %tobool76 = icmp eq i32 %call75, 0, !dbg !6102
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !6103

if.then77:                                        ; preds = %lor.lhs.false72, %if.end68
  call void @llvm.dbg.value(metadata i8 1, metadata !6054, metadata !DIExpression()), !dbg !6093
  br label %if.end78, !dbg !6104

if.end78:                                         ; preds = %lor.lhs.false72, %if.then77
  %has_unknown_size.0 = phi i8 [ 0, %lor.lhs.false72 ], [ 1, %if.then77 ], !dbg !6093
  call void @llvm.dbg.value(metadata i8 %has_unknown_size.0, metadata !6054, metadata !DIExpression()), !dbg !6093
  %tobool79 = icmp eq %struct.fieldoff* %pair.0, null, !dbg !6105
  br i1 %tobool79, label %if.else116, label %land.lhs.true80, !dbg !6107

land.lhs.true80:                                  ; preds = %if.end78
  %may_have_pointers = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %pair.0, i64 0, i32 2, !dbg !6108
  %bf.load81 = load i8, i8* %may_have_pointers, align 8, !dbg !6108
  %bf.clear82 = and i8 %bf.load81, 2, !dbg !6108
  %tobool84 = icmp eq i8 %bf.clear82, 0, !dbg !6109
  br i1 %tobool84, label %land.lhs.true85, label %if.else116, !dbg !6110

land.lhs.true85:                                  ; preds = %land.lhs.true80
  %call86 = tail call fastcc zeroext i8 @could_have_pointers(%union.tree_node* nonnull %field.0) #7, !dbg !6111
  %tobool87 = icmp eq i8 %call86, 0, !dbg !6111
  br i1 %tobool87, label %land.lhs.true88, label %if.else116, !dbg !6112

land.lhs.true88:                                  ; preds = %land.lhs.true85
  %bf.load90 = load i8, i8* %may_have_pointers, align 8, !dbg !6113
  %bf.clear91 = and i8 %bf.load90, 1, !dbg !6113
  %13 = or i8 %bf.clear91, %has_unknown_size.0, !dbg !6114
  %14 = icmp eq i8 %13, 0, !dbg !6114
  br i1 %14, label %land.lhs.true96, label %if.else116, !dbg !6114

land.lhs.true96:                                  ; preds = %land.lhs.true88
  %offset97 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %pair.0, i64 0, i32 0, !dbg !6115
  %15 = load i64, i64* %offset97, align 8, !dbg !6115
  %size98 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %pair.0, i64 0, i32 1, !dbg !6116
  %16 = load i64, i64* %size98, align 8, !dbg !6116
  %add99 = add nsw i64 %15, %16, !dbg !6117
  %add100 = add nsw i64 %call16, %offset, !dbg !6118
  %cmp101 = icmp eq i64 %add99, %add100, !dbg !6119
  br i1 %cmp101, label %if.then103, label %if.else116, !dbg !6120

if.then103:                                       ; preds = %land.lhs.true96
  %17 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %fieldstack, align 8, !dbg !6121
  %tobool104 = icmp eq %struct.VEC_fieldoff_s_heap* %17, null, !dbg !6121
  br i1 %tobool104, label %cond.end108, label %cond.true105, !dbg !6121

cond.true105:                                     ; preds = %if.then103
  %base106 = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %17, i64 0, i32 0, !dbg !6121
  br label %cond.end108, !dbg !6121

cond.end108:                                      ; preds = %if.then103, %cond.true105
  %cond109 = phi %struct.VEC_fieldoff_s_base* [ %base106, %cond.true105 ], [ null, %if.then103 ], !dbg !6121
  %call110 = tail call fastcc %struct.fieldoff* @VEC_fieldoff_s_base_last(%struct.VEC_fieldoff_s_base* %cond109) #7, !dbg !6121
  call void @llvm.dbg.value(metadata %struct.fieldoff* %call110, metadata !6051, metadata !DIExpression()), !dbg !6093
  %18 = bitcast %union.tree_node** %size70 to %struct.tree_int_cst**, !dbg !6123
  %19 = load %struct.tree_int_cst*, %struct.tree_int_cst** %18, align 8, !dbg !6123
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %19, i64 0, i32 1, i32 0, !dbg !6123
  %20 = load i64, i64* %low, align 8, !dbg !6123
  %size114 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %call110, i64 0, i32 1, !dbg !6124
  %21 = load i64, i64* %size114, align 8, !dbg !6125
  %add115 = add i64 %21, %20, !dbg !6125
  store i64 %add115, i64* %size114, align 8, !dbg !6125
  br label %for.inc, !dbg !6126

if.else116:                                       ; preds = %land.lhs.true88, %land.lhs.true85, %land.lhs.true80, %if.end78, %land.lhs.true96
  %call117 = tail call fastcc %struct.fieldoff* @VEC_fieldoff_s_heap_safe_push(%struct.VEC_fieldoff_s_heap** %fieldstack, %struct.fieldoff* null) #7, !dbg !6127
  call void @llvm.dbg.value(metadata %struct.fieldoff* %call117, metadata !6051, metadata !DIExpression()), !dbg !6093
  %add118 = add nsw i64 %call16, %offset, !dbg !6129
  %offset119 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %call117, i64 0, i32 0, !dbg !6130
  store i64 %add118, i64* %offset119, align 8, !dbg !6131
  %has_unknown_size121 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %call117, i64 0, i32 2, !dbg !6132
  %bf.load122 = load i8, i8* %has_unknown_size121, align 8, !dbg !6133
  %bf.clear123 = and i8 %bf.load122, -2, !dbg !6133
  %bf.set = or i8 %bf.clear123, %has_unknown_size.0, !dbg !6133
  store i8 %bf.set, i8* %has_unknown_size121, align 8, !dbg !6133
  %tobool124 = icmp eq i8 %has_unknown_size.0, 0, !dbg !6134
  br i1 %tobool124, label %if.then125, label %if.else132, !dbg !6136

if.then125:                                       ; preds = %if.else116
  %22 = bitcast %union.tree_node** %size70 to %struct.tree_int_cst**, !dbg !6137
  %23 = load %struct.tree_int_cst*, %struct.tree_int_cst** %22, align 8, !dbg !6137
  %low130 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %23, i64 0, i32 1, i32 0, !dbg !6137
  %24 = load i64, i64* %low130, align 8, !dbg !6137
  %size131 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %call117, i64 0, i32 1, !dbg !6138
  store i64 %24, i64* %size131, align 8, !dbg !6139
  br label %if.end134, !dbg !6140

if.else132:                                       ; preds = %if.else116
  %size133 = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %call117, i64 0, i32 1, !dbg !6141
  store i64 -1, i64* %size133, align 8, !dbg !6142
  br label %if.end134

if.end134:                                        ; preds = %if.else132, %if.then125
  %call135 = tail call fastcc zeroext i8 @could_have_pointers(%union.tree_node* nonnull %field.0) #7, !dbg !6143
  %bf.load138 = load i8, i8* %has_unknown_size121, align 8, !dbg !6144
  %bf.value139 = shl i8 %call135, 1, !dbg !6144
  %bf.shl = and i8 %bf.value139, 2, !dbg !6144
  %bf.clear140 = and i8 %bf.load138, -3, !dbg !6144
  %bf.set141 = or i8 %bf.clear140, %bf.shl, !dbg !6144
  store i8 %bf.set141, i8* %has_unknown_size121, align 8, !dbg !6144
  br i1 %tobool124, label %land.lhs.true144, label %land.end, !dbg !6145

land.lhs.true144:                                 ; preds = %if.end134
  %type146 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6146
  %25 = bitcast %union.tree_node** %type146 to i64**, !dbg !6146
  %26 = load i64*, i64** %25, align 8, !dbg !6146
  %bf.load148 = load i64, i64* %26, align 8, !dbg !6146
  %bf.cast1503 = and i64 %bf.load148, 65535, !dbg !6146
  %cmp151 = icmp eq i64 %bf.cast1503, 10, !dbg !6146
  %27 = bitcast i64* %26 to %struct.tree_type*, !dbg !6146
  br i1 %cmp151, label %land.rhs, label %lor.lhs.false153, !dbg !6146

lor.lhs.false153:                                 ; preds = %land.lhs.true144
  %cmp160 = icmp eq i64 %bf.cast1503, 12, !dbg !6146
  br i1 %cmp160, label %land.rhs, label %land.end, !dbg !6147

land.rhs:                                         ; preds = %lor.lhs.false153, %land.lhs.true144
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %27, i64 0, i32 6, !dbg !6148
  %bf.load165 = load i32, i32* %restrict_flag, align 4, !dbg !6148
  %bf.clear167 = and i32 %bf.load165, 8192, !dbg !6148
  %tobool168 = icmp ne i32 %bf.clear167, 0, !dbg !6147
  br label %land.end

land.end:                                         ; preds = %if.end134, %land.rhs, %lor.lhs.false153
  %28 = phi i1 [ false, %lor.lhs.false153 ], [ false, %if.end134 ], [ %tobool168, %land.rhs ], !dbg !6149
  %29 = zext i1 %28 to i8, !dbg !6150
  %bf.shl171 = shl nuw nsw i8 %29, 2, !dbg !6150
  %bf.clear172 = and i8 %bf.set141, -5, !dbg !6150
  %bf.set173 = or i8 %bf.clear172, %bf.shl171, !dbg !6150
  store i8 %bf.set173, i8* %has_unknown_size121, align 8, !dbg !6150
  %inc = add nsw i32 %count.0, 1, !dbg !6151
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6043, metadata !DIExpression()), !dbg !6055
  br label %for.inc

if.else176:                                       ; preds = %if.end48
  %add177 = add nsw i32 %count.0, %pushed.0, !dbg !6152
  call void @llvm.dbg.value(metadata i32 %add177, metadata !6043, metadata !DIExpression()), !dbg !6055
  br label %for.inc

for.inc:                                          ; preds = %for.body, %cond.end108, %land.end, %if.else176
  %count.3 = phi i32 [ %count.0, %for.body ], [ %add177, %if.else176 ], [ %inc, %land.end ], [ %count.0, %cond.end108 ], !dbg !6055
  call void @llvm.dbg.value(metadata i32 %count.3, metadata !6043, metadata !DIExpression()), !dbg !6055
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6153
  br label %for.cond, !dbg !6154, !llvm.loop !6155

cleanup.loopexit:                                 ; preds = %for.cond
  %count.0.lcssa = phi i32 [ %count.0, %for.cond ], !dbg !6055
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !6043, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !6043, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !6043, metadata !DIExpression()), !dbg !6055
  br label %cleanup, !dbg !6157

cleanup:                                          ; preds = %cleanup.loopexit, %entry, %cond.end
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %cond.end ], [ %count.0.lcssa, %cleanup.loopexit ], !dbg !6055
  ret i32 %retval.0, !dbg !6157
}

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_vi_for_tree(%union.tree_node* %t, %struct.variable_info* %vi) unnamed_addr #5 !dbg !6158 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6162, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.value(metadata %struct.variable_info* %vi, metadata !6163, metadata !DIExpression()), !dbg !6165
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @vi_for_tree, align 8, !dbg !6166
  %1 = bitcast %union.tree_node* %t to i8*, !dbg !6167
  %call = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !6168
  call void @llvm.dbg.value(metadata i8** %call, metadata !6164, metadata !DIExpression()), !dbg !6165
  %tobool = icmp eq %struct.variable_info* %vi, null, !dbg !6169
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6169

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2603, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6169
  br label %cond.end, !dbg !6169

cond.end:                                         ; preds = %entry, %cond.true
  %2 = load i8*, i8** %call, align 8, !dbg !6170
  %cmp = icmp eq i8* %2, null, !dbg !6170
  br i1 %cmp, label %cond.end3, label %cond.true1, !dbg !6170

cond.true1:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2604, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6170
  br label %cond.end3, !dbg !6170

cond.end3:                                        ; preds = %cond.end, %cond.true1
  %3 = bitcast i8** %call to %struct.variable_info**, !dbg !6171
  store %struct.variable_info* %vi, %struct.variable_info** %3, align 8, !dbg !6171
  ret void, !dbg !6172
}

; Function Attrs: nounwind uwtable
define internal fastcc void @make_copy_constraint(%struct.variable_info* %vi, i32 %from) unnamed_addr #5 !dbg !6173 {
entry:
  %lhs = alloca %struct.constraint_expr, align 8
  %rhs = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %struct.variable_info* %vi, metadata !6175, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.value(metadata i32 4, metadata !6176, metadata !DIExpression()), !dbg !6179
  %0 = bitcast %struct.constraint_expr* %lhs to i8*, !dbg !6180
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6180
  %1 = bitcast %struct.constraint_expr* %rhs to i8*, !dbg !6180
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6180
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %vi, i64 0, i32 0, !dbg !6181
  %2 = load i32, i32* %id, align 8, !dbg !6181
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 1, !dbg !6182
  store i32 %2, i32* %var, align 4, !dbg !6183
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 2, !dbg !6184
  store i64 0, i64* %offset, align 8, !dbg !6185
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 0, !dbg !6186
  store i32 0, i32* %type, align 8, !dbg !6187
  %var1 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 1, !dbg !6188
  store i32 4, i32* %var1, align 4, !dbg !6189
  %offset2 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2, !dbg !6190
  store i64 0, i64* %offset2, align 8, !dbg !6191
  %type3 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 0, !dbg !6192
  store i32 0, i32* %type3, align 8, !dbg !6193
  %3 = bitcast %struct.constraint_expr* %lhs to i64*, !dbg !6194
  %4 = load i64, i64* %3, align 8, !dbg !6194
  %5 = bitcast %struct.constraint_expr* %rhs to i64*, !dbg !6194
  %6 = load i64, i64* %5, align 8, !dbg !6194
  %call = tail call fastcc %struct.constraint* @new_constraint(i64 %4, i64 0, i64 %6, i64 0) #7, !dbg !6194
  tail call fastcc void @process_constraint(%struct.constraint* %call) #7, !dbg !6195
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6196
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6196
  ret void, !dbg !6196
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_fieldoff_s_base_length(%struct.VEC_fieldoff_s_base* %vec_) unnamed_addr #0 !dbg !6197 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_base* %vec_, metadata !6203, metadata !DIExpression()), !dbg !6204
  %tobool = icmp eq %struct.VEC_fieldoff_s_base* %vec_, null, !dbg !6205
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6205

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_fieldoff_s_base, %struct.VEC_fieldoff_s_base* %vec_, i64 0, i32 0, !dbg !6205
  %0 = load i32, i32* %num, align 8, !dbg !6205
  br label %cond.end, !dbg !6205

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6205
  ret i32 %cond, !dbg !6205
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_fieldoff_s_base_iterate(%struct.VEC_fieldoff_s_base* %vec_, i32 %ix_, %struct.fieldoff** %ptr) unnamed_addr #0 !dbg !6206 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_base* %vec_, metadata !6212, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6213, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata %struct.fieldoff** %ptr, metadata !6214, metadata !DIExpression()), !dbg !6215
  %tobool = icmp eq %struct.VEC_fieldoff_s_base* %vec_, null, !dbg !6216
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6216

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_fieldoff_s_base, %struct.VEC_fieldoff_s_base* %vec_, i64 0, i32 0, !dbg !6216
  %0 = load i32, i32* %num, align 8, !dbg !6216
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6216
  br i1 %cmp, label %if.then, label %if.else, !dbg !6218

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6219
  %arrayidx = getelementptr inbounds %struct.VEC_fieldoff_s_base, %struct.VEC_fieldoff_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6219
  br label %return, !dbg !6219

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6221

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.fieldoff* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !6223
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6223
  store %struct.fieldoff* %storemerge, %struct.fieldoff** %ptr, align 8, !dbg !6223
  ret i32 %retval.0, !dbg !6218
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sort_fieldstack(%struct.VEC_fieldoff_s_heap* %fieldstack) unnamed_addr #5 !dbg !6224 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %fieldstack, metadata !6228, metadata !DIExpression()), !dbg !6229
  %base = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %fieldstack, i64 0, i32 0, !dbg !6230
  %call = tail call fastcc %struct.fieldoff* @VEC_fieldoff_s_base_address(%struct.VEC_fieldoff_s_base* %base) #7, !dbg !6230
  %0 = bitcast %struct.fieldoff* %call to i8*, !dbg !6230
  %call7 = tail call fastcc i32 @VEC_fieldoff_s_base_length(%struct.VEC_fieldoff_s_base* %base) #7, !dbg !6231
  %conv = zext i32 %call7 to i64, !dbg !6231
  tail call void @spec_qsort(i8* %0, i64 %conv, i64 24, i32 (i8*, i8*)* nonnull @fieldoff_compare) #6, !dbg !6232
  ret void, !dbg !6233
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @check_for_overlaps(%struct.VEC_fieldoff_s_heap* %fieldstack) unnamed_addr #5 !dbg !6234 {
entry:
  %fo = alloca %struct.fieldoff*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap* %fieldstack, metadata !6238, metadata !DIExpression()), !dbg !6242
  %0 = bitcast %struct.fieldoff** %fo to i8*, !dbg !6243
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6243
  call void @llvm.dbg.value(metadata %struct.fieldoff* null, metadata !6239, metadata !DIExpression()), !dbg !6242
  store %struct.fieldoff* null, %struct.fieldoff** %fo, align 8, !dbg !6244
  call void @llvm.dbg.value(metadata i64 -1, metadata !6241, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata i32 0, metadata !6240, metadata !DIExpression()), !dbg !6242
  %base = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %fieldstack, i64 0, i32 0, !dbg !6245
  br label %for.cond, !dbg !6248

for.cond:                                         ; preds = %if.end, %entry
  %lastoffset.0 = phi i64 [ -1, %entry ], [ %2, %if.end ], !dbg !6242
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %if.end ], !dbg !6249
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6240, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata i64 %lastoffset.0, metadata !6241, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata %struct.fieldoff** %fo, metadata !6239, metadata !DIExpression(DW_OP_deref)), !dbg !6242
  %call = call fastcc i32 @VEC_fieldoff_s_base_iterate(%struct.VEC_fieldoff_s_base* %base, i32 %i.0, %struct.fieldoff** nonnull %fo) #7, !dbg !6250
  %tobool1 = icmp eq i32 %call, 0, !dbg !6251
  br i1 %tobool1, label %cleanup, label %for.body, !dbg !6251

for.body:                                         ; preds = %for.cond
  %1 = load %struct.fieldoff*, %struct.fieldoff** %fo, align 8, !dbg !6252
  call void @llvm.dbg.value(metadata %struct.fieldoff* %1, metadata !6239, metadata !DIExpression()), !dbg !6242
  %offset = getelementptr inbounds %struct.fieldoff, %struct.fieldoff* %1, i64 0, i32 0, !dbg !6255
  %2 = load i64, i64* %offset, align 8, !dbg !6255
  %cmp = icmp eq i64 %2, %lastoffset.0, !dbg !6256
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6257

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.fieldoff* %1, metadata !6239, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata i64 %2, metadata !6241, metadata !DIExpression()), !dbg !6242
  %inc = add i32 %i.0, 1, !dbg !6258
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6240, metadata !DIExpression()), !dbg !6242
  br label %for.cond, !dbg !6259, !llvm.loop !6260

cleanup:                                          ; preds = %for.cond, %for.body
  %retval.0 = phi i8 [ 1, %for.body ], [ 0, %for.cond ], !dbg !6242
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6262
  ret i8 %retval.0, !dbg !6262
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.fieldoff* @VEC_fieldoff_s_base_index(%struct.VEC_fieldoff_s_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6263 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_base* %vec_, metadata !6267, metadata !DIExpression()), !dbg !6269
  call void @llvm.dbg.value(metadata i32 0, metadata !6268, metadata !DIExpression()), !dbg !6269
  br label %land.end, !dbg !6270

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %arrayidx = getelementptr inbounds %struct.VEC_fieldoff_s_base, %struct.VEC_fieldoff_s_base* %vec_, i64 0, i32 2, i64 0, !dbg !6270
  ret %struct.fieldoff* %arrayidx, !dbg !6270
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_fieldoff_s_heap_free(%struct.VEC_fieldoff_s_heap** %vec_) unnamed_addr #0 !dbg !6271 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap** %vec_, metadata !6275, metadata !DIExpression()), !dbg !6276
  %0 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %vec_, align 8, !dbg !6277
  %tobool = icmp eq %struct.VEC_fieldoff_s_heap* %0, null, !dbg !6277
  br i1 %tobool, label %if.end, label %if.then, !dbg !6279

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_fieldoff_s_heap* %0 to i8*, !dbg !6279
  tail call void @free(i8* nonnull %1) #6, !dbg !6277
  br label %if.end, !dbg !6277

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_fieldoff_s_heap* null, %struct.VEC_fieldoff_s_heap** %vec_, align 8, !dbg !6279
  ret void, !dbg !6279
}

declare dso_local i32 @asprintf(i8**, i8*, ...) local_unnamed_addr #2

declare dso_local i8* @ggc_alloc_string(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_into_field_list(%struct.variable_info* %base, %struct.variable_info* %field) unnamed_addr #5 !dbg !6280 {
entry:
  call void @llvm.dbg.value(metadata %struct.variable_info* %base, metadata !6284, metadata !DIExpression()), !dbg !6288
  call void @llvm.dbg.value(metadata %struct.variable_info* %field, metadata !6285, metadata !DIExpression()), !dbg !6288
  call void @llvm.dbg.value(metadata %struct.variable_info* %base, metadata !6286, metadata !DIExpression()), !dbg !6288
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %base, i64 0, i32 2, !dbg !6289
  %0 = bitcast %struct.variable_info** %next to i64*, !dbg !6289
  %1 = load i64, i64* %0, align 8, !dbg !6289
  %next1 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %field, i64 0, i32 2, !dbg !6290
  %2 = bitcast %struct.variable_info** %next1 to i64*, !dbg !6291
  store i64 %1, i64* %2, align 8, !dbg !6291
  store %struct.variable_info* %field, %struct.variable_info** %next, align 8, !dbg !6292
  ret void, !dbg !6293
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @bitpos_of_field(%union.tree_node* %fdecl) unnamed_addr #5 !dbg !6294 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fdecl, metadata !6299, metadata !DIExpression()), !dbg !6300
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %fdecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6301
  %0 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !6301
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6301
  %call = tail call i32 @host_integerp(%union.tree_node* %1, i32 0) #6, !dbg !6303
  %tobool = icmp eq i32 %call, 0, !dbg !6303
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !6304

lor.lhs.false:                                    ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %fdecl, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !6305
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !6305
  %call2 = tail call i32 @host_integerp(%union.tree_node* %3, i32 0) #6, !dbg !6306
  %tobool3 = icmp eq i32 %call2, 0, !dbg !6306
  br i1 %tobool3, label %return, label %if.end, !dbg !6307

if.end:                                           ; preds = %lor.lhs.false
  %4 = bitcast %struct.rtx_def** %offset to %struct.tree_int_cst**, !dbg !6308
  %5 = load %struct.tree_int_cst*, %struct.tree_int_cst** %4, align 8, !dbg !6308
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %5, i64 0, i32 1, i32 0, !dbg !6308
  %6 = load i64, i64* %low, align 8, !dbg !6308
  %mul = shl i64 %6, 3, !dbg !6309
  %7 = bitcast %union.tree_node** %2 to %struct.tree_int_cst**, !dbg !6310
  %8 = load %struct.tree_int_cst*, %struct.tree_int_cst** %7, align 8, !dbg !6310
  %low11 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %8, i64 0, i32 1, i32 0, !dbg !6310
  %9 = load i64, i64* %low11, align 8, !dbg !6310
  %add = add i64 %mul, %9, !dbg !6311
  br label %return, !dbg !6312

return:                                           ; preds = %lor.lhs.false, %entry, %if.end
  %retval.0 = phi i64 [ %add, %if.end ], [ -1, %lor.lhs.false ], [ -1, %entry ], !dbg !6300
  ret i64 %retval.0, !dbg !6313
}

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.fieldoff* @VEC_fieldoff_s_base_last(%struct.VEC_fieldoff_s_base* %vec_) unnamed_addr #0 !dbg !6314 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_base* %vec_, metadata !6318, metadata !DIExpression()), !dbg !6319
  br label %land.end, !dbg !6320

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %num2 = getelementptr inbounds %struct.VEC_fieldoff_s_base, %struct.VEC_fieldoff_s_base* %vec_, i64 0, i32 0, !dbg !6320
  %0 = load i32, i32* %num2, align 8, !dbg !6320
  %sub = add i32 %0, -1, !dbg !6320
  %idxprom = zext i32 %sub to i64, !dbg !6320
  %arrayidx = getelementptr inbounds %struct.VEC_fieldoff_s_base, %struct.VEC_fieldoff_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6320
  ret %struct.fieldoff* %arrayidx, !dbg !6320
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.fieldoff* @VEC_fieldoff_s_heap_safe_push(%struct.VEC_fieldoff_s_heap** %vec_, %struct.fieldoff* %obj_) unnamed_addr #0 !dbg !6321 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap** %vec_, metadata !6325, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata %struct.fieldoff* null, metadata !6326, metadata !DIExpression()), !dbg !6327
  %call = tail call fastcc i32 @VEC_fieldoff_s_heap_reserve(%struct.VEC_fieldoff_s_heap** %vec_, i32 1) #7, !dbg !6328
  %0 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %vec_, align 8, !dbg !6328
  %tobool = icmp eq %struct.VEC_fieldoff_s_heap* %0, null, !dbg !6328
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6328

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %0, i64 0, i32 0, !dbg !6328
  br label %cond.end, !dbg !6328

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_fieldoff_s_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6328
  %call1 = tail call fastcc %struct.fieldoff* @VEC_fieldoff_s_base_quick_push(%struct.VEC_fieldoff_s_base* %cond, %struct.fieldoff* null) #7, !dbg !6328
  ret %struct.fieldoff* %call1, !dbg !6328
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_fieldoff_s_heap_reserve(%struct.VEC_fieldoff_s_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6329 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_heap** %vec_, metadata !6333, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.value(metadata i32 1, metadata !6334, metadata !DIExpression()), !dbg !6336
  %0 = load %struct.VEC_fieldoff_s_heap*, %struct.VEC_fieldoff_s_heap** %vec_, align 8, !dbg !6337
  %tobool = icmp eq %struct.VEC_fieldoff_s_heap* %0, null, !dbg !6337
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6337

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_fieldoff_s_heap, %struct.VEC_fieldoff_s_heap* %0, i64 0, i32 0, !dbg !6337
  br label %cond.end, !dbg !6337

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_fieldoff_s_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6337
  %call = tail call fastcc i32 @VEC_fieldoff_s_base_space(%struct.VEC_fieldoff_s_base* %cond, i32 1) #7, !dbg !6337
  %tobool1 = icmp eq i32 %call, 0, !dbg !6337
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6337
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6335, metadata !DIExpression()), !dbg !6336
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6337

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_fieldoff_s_heap** %vec_ to i8**, !dbg !6338
  %2 = load i8*, i8** %1, align 8, !dbg !6338
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 24) #6, !dbg !6338
  store i8* %call3, i8** %1, align 8, !dbg !6338
  br label %if.end, !dbg !6338

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6337
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.fieldoff* @VEC_fieldoff_s_base_quick_push(%struct.VEC_fieldoff_s_base* %vec_, %struct.fieldoff* %obj_) unnamed_addr #0 !dbg !6340 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_base* %vec_, metadata !6344, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.value(metadata %struct.fieldoff* null, metadata !6345, metadata !DIExpression()), !dbg !6347
  %num1 = getelementptr inbounds %struct.VEC_fieldoff_s_base, %struct.VEC_fieldoff_s_base* %vec_, i64 0, i32 0, !dbg !6348
  %0 = load i32, i32* %num1, align 8, !dbg !6348
  %inc = add i32 %0, 1, !dbg !6348
  store i32 %inc, i32* %num1, align 8, !dbg !6348
  %idxprom = zext i32 %0 to i64, !dbg !6348
  %arrayidx = getelementptr inbounds %struct.VEC_fieldoff_s_base, %struct.VEC_fieldoff_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6348
  call void @llvm.dbg.value(metadata %struct.fieldoff* %arrayidx, metadata !6346, metadata !DIExpression()), !dbg !6347
  ret %struct.fieldoff* %arrayidx, !dbg !6348
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_fieldoff_s_base_space(%struct.VEC_fieldoff_s_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6349 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_base* %vec_, metadata !6353, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata i32 1, metadata !6354, metadata !DIExpression()), !dbg !6355
  %tobool = icmp eq %struct.VEC_fieldoff_s_base* %vec_, null, !dbg !6356
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6356

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_fieldoff_s_base, %struct.VEC_fieldoff_s_base* %vec_, i64 0, i32 1, !dbg !6356
  %0 = load i32, i32* %alloc, align 4, !dbg !6356
  %num = getelementptr inbounds %struct.VEC_fieldoff_s_base, %struct.VEC_fieldoff_s_base* %vec_, i64 0, i32 0, !dbg !6356
  %1 = load i32, i32* %num, align 8, !dbg !6356
  %cmp1 = icmp ne i32 %0, %1, !dbg !6356
  %phitmp = zext i1 %cmp1 to i32, !dbg !6356
  br label %cond.end, !dbg !6356

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6356

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6356
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

declare dso_local i8** @pointer_map_insert(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.fieldoff* @VEC_fieldoff_s_base_address(%struct.VEC_fieldoff_s_base* %vec_) unnamed_addr #0 !dbg !6357 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_fieldoff_s_base* %vec_, metadata !6359, metadata !DIExpression()), !dbg !6360
  %tobool = icmp eq %struct.VEC_fieldoff_s_base* %vec_, null, !dbg !6361
  %arraydecay = getelementptr inbounds %struct.VEC_fieldoff_s_base, %struct.VEC_fieldoff_s_base* %vec_, i64 0, i32 2, i64 0, !dbg !6361
  %cond = select i1 %tobool, %struct.fieldoff* null, %struct.fieldoff* %arraydecay, !dbg !6361
  ret %struct.fieldoff* %cond, !dbg !6361
}

; Function Attrs: nounwind uwtable
define internal i32 @fieldoff_compare(i8* %pa, i8* %pb) #5 !dbg !6362 {
entry:
  call void @llvm.dbg.value(metadata i8* %pa, metadata !6364, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.value(metadata i8* %pb, metadata !6365, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.value(metadata i8* %pa, metadata !6366, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.value(metadata i8* %pb, metadata !6367, metadata !DIExpression()), !dbg !6370
  %offset = bitcast i8* %pa to i64*, !dbg !6371
  %0 = load i64, i64* %offset, align 8, !dbg !6371
  %offset1 = bitcast i8* %pb to i64*, !dbg !6373
  %1 = load i64, i64* %offset1, align 8, !dbg !6373
  %cmp = icmp slt i64 %0, %1, !dbg !6374
  br i1 %cmp, label %cleanup, label %if.else, !dbg !6375

if.else:                                          ; preds = %entry
  %cmp4 = icmp sgt i64 %0, %1, !dbg !6376
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !6378

if.end6:                                          ; preds = %if.else
  %size = getelementptr inbounds i8, i8* %pa, i64 8, !dbg !6379
  %2 = bitcast i8* %size to i64*, !dbg !6379
  %3 = load i64, i64* %2, align 8, !dbg !6379
  call void @llvm.dbg.value(metadata i64 %3, metadata !6368, metadata !DIExpression()), !dbg !6370
  %size7 = getelementptr inbounds i8, i8* %pb, i64 8, !dbg !6380
  %4 = bitcast i8* %size7 to i64*, !dbg !6380
  %5 = load i64, i64* %4, align 8, !dbg !6380
  call void @llvm.dbg.value(metadata i64 %5, metadata !6369, metadata !DIExpression()), !dbg !6370
  %cmp8 = icmp ult i64 %3, %5, !dbg !6381
  br i1 %cmp8, label %cleanup, label %if.else10, !dbg !6383

if.else10:                                        ; preds = %if.end6
  %cmp11 = icmp ugt i64 %3, %5, !dbg !6384
  %spec.select = zext i1 %cmp11 to i32, !dbg !6386
  ret i32 %spec.select, !dbg !6386

cleanup:                                          ; preds = %if.end6, %if.else, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ 1, %if.else ], [ -1, %if.end6 ], !dbg !6370
  ret i32 %retval.0, !dbg !6387
}

declare dso_local i8* @get_name(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.variable_info* @make_constraint_from_heapvar(%struct.variable_info* %lhs, i8* %name) unnamed_addr #5 !dbg !6388 {
entry:
  call void @llvm.dbg.value(metadata %struct.variable_info* %lhs, metadata !6392, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata i8* %name, metadata !6393, metadata !DIExpression()), !dbg !6399
  %decl = getelementptr inbounds %struct.variable_info, %struct.variable_info* %lhs, i64 0, i32 7, !dbg !6400
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6400
  %offset = getelementptr inbounds %struct.variable_info, %struct.variable_info* %lhs, i64 0, i32 3, !dbg !6401
  %1 = load i64, i64* %offset, align 8, !dbg !6401
  %call = tail call fastcc %union.tree_node* @heapvar_lookup(%union.tree_node* %0, i64 %1) #7, !dbg !6402
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6395, metadata !DIExpression()), !dbg !6399
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !6403
  br i1 %cmp, label %if.then, label %if.end, !dbg !6404

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !6405
  %call1 = tail call %union.tree_node* @create_tmp_var_raw(%union.tree_node* %2, i8* %name) #6, !dbg !6406
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6395, metadata !DIExpression()), !dbg !6399
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6407
  %3 = bitcast i40* %decl_flag_1 to i64*, !dbg !6407
  %bf.load = load i64, i64* %3, align 8, !dbg !6408
  %bf.set = or i64 %bf.load, 33554432, !dbg !6408
  store i64 %bf.set, i64* %3, align 8, !dbg !6408
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6409
  %5 = load i64, i64* %offset, align 8, !dbg !6410
  tail call fastcc void @heapvar_insert(%union.tree_node* %4, i64 %5, %union.tree_node* %call1) #7, !dbg !6411
  %call4 = tail call fastcc %struct.var_ann_d* @get_var_ann(%union.tree_node* %call1) #7, !dbg !6412
  call void @llvm.dbg.value(metadata %struct.var_ann_d* %call4, metadata !6396, metadata !DIExpression()), !dbg !6413
  %6 = getelementptr inbounds %struct.var_ann_d, %struct.var_ann_d* %call4, i64 0, i32 0, !dbg !6414
  %bf.load5 = load i8, i8* %6, align 8, !dbg !6415
  %bf.set7 = or i8 %bf.load5, 16, !dbg !6415
  store i8 %bf.set7, i8* %6, align 8, !dbg !6415
  br label %if.end, !dbg !6416

if.end:                                           ; preds = %if.then, %entry
  %heapvar.0 = phi %union.tree_node* [ %call1, %if.then ], [ %call, %entry ], !dbg !6399
  call void @llvm.dbg.value(metadata %union.tree_node* %heapvar.0, metadata !6395, metadata !DIExpression()), !dbg !6399
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6417
  %call8 = tail call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %7) #7, !dbg !6419
  %tobool = icmp eq %struct.htab* %call8, null, !dbg !6419
  br i1 %tobool, label %if.end11, label %if.then9, !dbg !6420

if.then9:                                         ; preds = %if.end
  %call10 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %heapvar.0) #6, !dbg !6421
  br label %if.end11, !dbg !6421

if.end11:                                         ; preds = %if.end, %if.then9
  %call12 = tail call fastcc %struct.variable_info* @new_var_info(%union.tree_node* %heapvar.0, i8* %name) #7, !dbg !6422
  call void @llvm.dbg.value(metadata %struct.variable_info* %call12, metadata !6394, metadata !DIExpression()), !dbg !6399
  %is_artificial_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call12, i64 0, i32 1, !dbg !6423
  %bf.load13 = load i8, i8* %is_artificial_var, align 4, !dbg !6424
  %offset22 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call12, i64 0, i32 3, !dbg !6425
  store i64 0, i64* %offset22, align 8, !dbg !6426
  %fullsize = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call12, i64 0, i32 5, !dbg !6427
  store i64 -1, i64* %fullsize, align 8, !dbg !6428
  %size = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call12, i64 0, i32 4, !dbg !6429
  store i64 -1, i64* %size, align 8, !dbg !6430
  %bf.set25 = or i8 %bf.load13, 29, !dbg !6431
  store i8 %bf.set25, i8* %is_artificial_var, align 4, !dbg !6431
  tail call fastcc void @insert_vi_for_tree(%union.tree_node* %heapvar.0, %struct.variable_info* %call12) #7, !dbg !6432
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call12, i64 0, i32 0, !dbg !6433
  %8 = load i32, i32* %id, align 8, !dbg !6433
  tail call fastcc void @make_constraint_from(%struct.variable_info* %lhs, i32 %8) #7, !dbg !6434
  ret %struct.variable_info* %call12, !dbg !6435
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6436 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6440, metadata !DIExpression()), !dbg !6441
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !6442
  %bf.load = load i32, i32* %0, align 8, !dbg !6442
  %bf.clear = and i32 %bf.load, 255, !dbg !6442
  ret i32 %bf.clear, !dbg !6443
}

; Function Attrs: nounwind uwtable
define internal fastcc void @get_constraint_for(%union.tree_node* %t, %struct.VEC_ce_s_heap** %results) unnamed_addr #5 !dbg !6444 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6449, metadata !DIExpression()), !dbg !6451
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %results, metadata !6450, metadata !DIExpression()), !dbg !6451
  %0 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !6452
  %tobool = icmp eq %struct.VEC_ce_s_heap* %0, null, !dbg !6452
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6452

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %0, i64 0, i32 0, !dbg !6452
  br label %cond.end, !dbg !6452

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ce_s_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6452
  %call = tail call fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %cond) #7, !dbg !6452
  %cmp = icmp eq i32 %call, 0, !dbg !6452
  br i1 %cmp, label %cond.end3, label %cond.true1, !dbg !6452

cond.true1:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 3229, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6452
  br label %cond.end3, !dbg !6452

cond.end3:                                        ; preds = %cond.end, %cond.true1
  tail call fastcc void @get_constraint_for_1(%union.tree_node* %t, %struct.VEC_ce_s_heap** %results, i8 zeroext 0) #7, !dbg !6453
  ret void, !dbg !6454
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6455 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6459, metadata !DIExpression()), !dbg !6460
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !6461
  %0 = load i32, i32* %nargs, align 4, !dbg !6461
  ret i32 %0, !dbg !6462
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !6463 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !6470, metadata !DIExpression()), !dbg !6471
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !6472
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !6472
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6473
  ret %union.tree_node* %1, !dbg !6474
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !6475 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6479, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata i32 %i, metadata !6480, metadata !DIExpression()), !dbg !6481
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !6482
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !6483
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !6484
}

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %gs, i64 %index) unnamed_addr #0 !dbg !6485 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6489, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i64 %index, metadata !6490, metadata !DIExpression()), !dbg !6493
  %conv = trunc i64 %index to i32, !dbg !6494
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #7, !dbg !6495
  call void @llvm.dbg.value(metadata %struct.phi_arg_d* %call, metadata !6491, metadata !DIExpression()), !dbg !6493
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !6496
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %imm_use) #7, !dbg !6497
  ret %union.tree_node* %call1, !dbg !6498
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %vec_, i32 %ix_, %struct.constraint_expr** %ptr) unnamed_addr #0 !dbg !6499 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_base* %vec_, metadata !6505, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6506, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %ptr, metadata !6507, metadata !DIExpression()), !dbg !6508
  %tobool = icmp eq %struct.VEC_ce_s_base* %vec_, null, !dbg !6509
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6509

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 0, !dbg !6509
  %0 = load i32, i32* %num, align 8, !dbg !6509
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6509
  br i1 %cmp, label %if.then, label %if.else, !dbg !6511

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6512
  %arrayidx = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6512
  br label %return, !dbg !6512

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6514

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.constraint_expr* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !6516
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6516
  store %struct.constraint_expr* %storemerge, %struct.constraint_expr** %ptr, align 8, !dbg !6516
  ret i32 %retval.0, !dbg !6511
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %vec_) unnamed_addr #0 !dbg !6517 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_base* %vec_, metadata !6523, metadata !DIExpression()), !dbg !6524
  %tobool = icmp eq %struct.VEC_ce_s_base* %vec_, null, !dbg !6525
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6525

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 0, !dbg !6525
  %0 = load i32, i32* %num, align 8, !dbg !6525
  br label %cond.end, !dbg !6525

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6525
  ret i32 %cond, !dbg !6525
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constraint_expr* @VEC_ce_s_base_last(%struct.VEC_ce_s_base* %vec_) unnamed_addr #0 !dbg !6526 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_base* %vec_, metadata !6530, metadata !DIExpression()), !dbg !6531
  br label %land.end, !dbg !6532

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %num2 = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 0, !dbg !6532
  %0 = load i32, i32* %num2, align 8, !dbg !6532
  %sub = add i32 %0, -1, !dbg !6532
  %idxprom = zext i32 %sub to i64, !dbg !6532
  %arrayidx = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6532
  ret %struct.constraint_expr* %arrayidx, !dbg !6532
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ce_s_base_pop(%struct.VEC_ce_s_base* %vec_) unnamed_addr #0 !dbg !6533 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_base* %vec_, metadata !6537, metadata !DIExpression()), !dbg !6538
  %num1 = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 0, !dbg !6539
  %0 = load i32, i32* %num1, align 8, !dbg !6539
  %dec = add i32 %0, -1, !dbg !6539
  store i32 %dec, i32* %num1, align 8, !dbg !6539
  ret void, !dbg !6539
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6540 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6544, metadata !DIExpression()), !dbg !6545
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !6546
  %cmp = icmp eq i32 %call, 8, !dbg !6547
  %conv1 = zext i1 %cmp to i8, !dbg !6546
  ret i8 %conv1, !dbg !6548
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6549 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6551, metadata !DIExpression()), !dbg !6553
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !6554
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6552, metadata !DIExpression()), !dbg !6553
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6555
  %bf.load = load i64, i64* %0, align 8, !dbg !6555
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6557
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !6557
  br i1 %cmp, label %if.then, label %cleanup, !dbg !6558

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6559
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6559
  br label %cleanup, !dbg !6560

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !6553
  ret %union.tree_node* %retval.0, !dbg !6561
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6562 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6564, metadata !DIExpression()), !dbg !6565
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !6566
  ret %union.tree_node* %call, !dbg !6567
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6568 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6572, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.value(metadata i32 %index, metadata !6573, metadata !DIExpression()), !dbg !6574
  %add = add i32 %index, 3, !dbg !6575
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !6576
  ret %union.tree_node* %call, !dbg !6577
}

; Function Attrs: nounwind uwtable
define internal fastcc void @get_constraint_for_ptr_offset(%union.tree_node* %ptr, %union.tree_node* %offset, %struct.VEC_ce_s_heap** %results) unnamed_addr #5 !dbg !6578 {
entry:
  %c = alloca %struct.constraint_expr, align 8
  %c2 = alloca %struct.constraint_expr, align 8
  %c263 = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %ptr, metadata !6582, metadata !DIExpression()), !dbg !6607
  call void @llvm.dbg.value(metadata %union.tree_node* %offset, metadata !6583, metadata !DIExpression()), !dbg !6607
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %results, metadata !6584, metadata !DIExpression()), !dbg !6607
  %0 = bitcast %struct.constraint_expr* %c to i8*, !dbg !6608
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6608
  %1 = load i8, i8* @use_field_sensitive, align 1, !dbg !6609
  %tobool = icmp eq i8 %1, 0, !dbg !6609
  br i1 %tobool, label %if.then, label %if.end, !dbg !6611

if.then:                                          ; preds = %entry
  tail call fastcc void @get_constraint_for(%union.tree_node* %ptr, %struct.VEC_ce_s_heap** %results) #7, !dbg !6612
  br label %cleanup, !dbg !6614

if.end:                                           ; preds = %entry
  %cmp = icmp eq %union.tree_node* %offset, null, !dbg !6615
  br i1 %cmp, label %if.end7, label %lor.lhs.false, !dbg !6617

lor.lhs.false:                                    ; preds = %if.end
  %call = tail call i32 @host_integerp(%union.tree_node* nonnull %offset, i32 0) #6, !dbg !6618
  %tobool1 = icmp eq i32 %call, 0, !dbg !6618
  br i1 %tobool1, label %if.end7, label %if.else, !dbg !6619

if.else:                                          ; preds = %lor.lhs.false
  %int_cst3 = getelementptr inbounds %union.tree_node, %union.tree_node* %offset, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6620
  %low = bitcast i32* %int_cst3 to i64*, !dbg !6620
  %2 = load i64, i64* %low, align 8, !dbg !6620
  call void @llvm.dbg.value(metadata i64 %2, metadata !6588, metadata !DIExpression()), !dbg !6607
  %mul = shl nsw i64 %2, 3, !dbg !6622
  call void @llvm.dbg.value(metadata i64 %mul, metadata !6589, metadata !DIExpression()), !dbg !6607
  call void @llvm.dbg.value(metadata i64 %mul, metadata !6589, metadata !DIExpression()), !dbg !6607
  br label %if.end7

if.end7:                                          ; preds = %lor.lhs.false, %if.end, %if.else
  %rhsoffset.1 = phi i64 [ %mul, %if.else ], [ -9223372036854775808, %lor.lhs.false ], [ -9223372036854775808, %if.end ], !dbg !6623
  call void @llvm.dbg.value(metadata i64 %rhsoffset.1, metadata !6589, metadata !DIExpression()), !dbg !6607
  tail call fastcc void @get_constraint_for(%union.tree_node* %ptr, %struct.VEC_ce_s_heap** %results) #7, !dbg !6624
  %cmp8 = icmp eq i64 %rhsoffset.1, 0, !dbg !6625
  br i1 %cmp8, label %cleanup, label %if.end10, !dbg !6627

if.end10:                                         ; preds = %if.end7
  %3 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !6628
  %tobool11 = icmp eq %struct.VEC_ce_s_heap* %3, null, !dbg !6628
  br i1 %tobool11, label %cond.end, label %cond.true, !dbg !6628

cond.true:                                        ; preds = %if.end10
  %base = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %3, i64 0, i32 0, !dbg !6628
  br label %cond.end, !dbg !6628

cond.end:                                         ; preds = %if.end10, %cond.true
  %cond = phi %struct.VEC_ce_s_base* [ %base, %cond.true ], [ null, %if.end10 ], !dbg !6628
  %call12 = tail call fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %cond) #7, !dbg !6628
  call void @llvm.dbg.value(metadata i32 %call12, metadata !6587, metadata !DIExpression()), !dbg !6607
  call void @llvm.dbg.value(metadata i32 0, metadata !6586, metadata !DIExpression()), !dbg !6607
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %c, i64 0, i32 1, !dbg !6629
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %c, i64 0, i32 0, !dbg !6630
  %offset25 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %c, i64 0, i32 2, !dbg !6630
  %cmp30 = icmp eq i64 %rhsoffset.1, -9223372036854775808, !dbg !6631
  %cmp50 = icmp slt i64 %rhsoffset.1, 0, !dbg !6632
  %4 = bitcast %struct.constraint_expr* %c263 to i8*, !dbg !6634
  %var66 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %c263, i64 0, i32 1, !dbg !6634
  %type67 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %c263, i64 0, i32 0, !dbg !6634
  %offset68 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %c263, i64 0, i32 2, !dbg !6634
  %5 = bitcast %struct.constraint_expr* %c2 to i8*, !dbg !6635
  %var33 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %c2, i64 0, i32 1, !dbg !6635
  %type34 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %c2, i64 0, i32 0, !dbg !6635
  %offset35 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %c2, i64 0, i32 2, !dbg !6635
  br i1 %cmp30, label %cond.end.split.us, label %cond.end.cond.end.split_crit_edge, !dbg !6636

cond.end.cond.end.split_crit_edge:                ; preds = %cond.end
  br label %for.cond, !dbg !6636

cond.end.split.us:                                ; preds = %cond.end
  br label %for.cond.us, !dbg !6636

for.cond.us:                                      ; preds = %cond.end83.us, %cond.end.split.us
  %j.0.us = phi i32 [ 0, %cond.end.split.us ], [ %inc.us, %cond.end83.us ], !dbg !6637
  call void @llvm.dbg.value(metadata i32 %j.0.us, metadata !6586, metadata !DIExpression()), !dbg !6607
  %exitcond = icmp eq i32 %j.0.us, %call12, !dbg !6638
  br i1 %exitcond, label %cleanup.loopexit.us-lcssa.us, label %for.body.us, !dbg !6639

for.body.us:                                      ; preds = %for.cond.us
  %6 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !6640
  %tobool14.us = icmp eq %struct.VEC_ce_s_heap* %6, null, !dbg !6640
  br i1 %tobool14.us, label %cond.end18.us, label %cond.true15.us, !dbg !6640

cond.true15.us:                                   ; preds = %for.body.us
  %base16.us = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %6, i64 0, i32 0, !dbg !6640
  br label %cond.end18.us, !dbg !6640

cond.end18.us:                                    ; preds = %cond.true15.us, %for.body.us
  %cond19.us = phi %struct.VEC_ce_s_base* [ %base16.us, %cond.true15.us ], [ null, %for.body.us ], !dbg !6640
  %call20.us = call fastcc %struct.constraint_expr* @VEC_ce_s_base_index(%struct.VEC_ce_s_base* %cond19.us, i32 %j.0.us) #7, !dbg !6640
  %7 = bitcast %struct.constraint_expr* %call20.us to i8*, !dbg !6641
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %7, i64 16, i1 false), !dbg !6641
  %8 = load i32, i32* %var, align 4, !dbg !6642
  %call21.us = call fastcc %struct.variable_info* @get_varinfo(i32 %8) #7, !dbg !6643
  call void @llvm.dbg.value(metadata %struct.variable_info* %call21.us, metadata !6590, metadata !DIExpression()), !dbg !6629
  %9 = load i32, i32* %type, align 8, !dbg !6644
  %cmp22.us = icmp eq i32 %9, 2, !dbg !6645
  br i1 %cmp22.us, label %land.lhs.true.us, label %if.else26.us, !dbg !6646

land.lhs.true.us:                                 ; preds = %cond.end18.us
  %is_full_var.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call21.us, i64 0, i32 1, !dbg !6647
  %bf.load.us = load i8, i8* %is_full_var.us, align 4, !dbg !6647
  %bf.clear.us = and i8 %bf.load.us, 8, !dbg !6647
  %tobool23.us = icmp eq i8 %bf.clear.us, 0, !dbg !6648
  br i1 %tobool23.us, label %if.else26.us, label %if.then24.us, !dbg !6649

if.then24.us:                                     ; preds = %land.lhs.true.us
  store i64 0, i64* %offset25, align 8, !dbg !6650
  br label %if.end78.us, !dbg !6651

if.else26.us:                                     ; preds = %land.lhs.true.us, %cond.end18.us
  br i1 %cmp22.us, label %if.then31.us, label %if.else43.us, !dbg !6652

if.else43.us:                                     ; preds = %if.else26.us
  br i1 false, label %if.then46.us, label %if.else74.us, !dbg !6653

if.else74.us:                                     ; preds = %if.else43.us
  store i64 -9223372036854775808, i64* %offset25, align 8, !dbg !6654
  br label %if.end78.us

if.then46.us:                                     ; preds = %if.else43.us
  br i1 %cmp50, label %land.lhs.true51.us, label %if.end55.us, !dbg !6655

land.lhs.true51.us:                               ; preds = %if.then46.us
  br label %if.end55.us, !dbg !6656

if.end55.us:                                      ; preds = %land.lhs.true51.us, %if.then46.us
  br i1 undef, label %if.end70.us, label %land.lhs.true59.us, !dbg !6657

land.lhs.true59.us:                               ; preds = %if.end55.us
  br i1 undef, label %if.end70.us, label %if.then62.us, !dbg !6658

if.then62.us:                                     ; preds = %land.lhs.true59.us
  br label %if.end70.us, !dbg !6659

if.end70.us:                                      ; preds = %if.then62.us, %land.lhs.true59.us, %if.end55.us
  br label %if.end78.us, !dbg !6660

if.then31.us:                                     ; preds = %if.else26.us
  %decl.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call21.us, i64 0, i32 7, !dbg !6661
  %10 = load %union.tree_node*, %union.tree_node** %decl.us, align 8, !dbg !6661
  %call32.us = call fastcc %struct.variable_info* @lookup_vi_for_tree(%union.tree_node* %10) #7, !dbg !6662
  call void @llvm.dbg.value(metadata %struct.variable_info* %call32.us, metadata !6594, metadata !DIExpression()), !dbg !6663
  br label %do.body.us, !dbg !6664

do.body.us:                                       ; preds = %if.end41.us, %if.then31.us
  %temp.0.us = phi %struct.variable_info* [ %call32.us, %if.then31.us ], [ %13, %if.end41.us ], !dbg !6663
  call void @llvm.dbg.value(metadata %struct.variable_info* %temp.0.us, metadata !6594, metadata !DIExpression()), !dbg !6663
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !6665
  %id.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %temp.0.us, i64 0, i32 0, !dbg !6666
  %11 = load i32, i32* %id.us, align 8, !dbg !6666
  store i32 %11, i32* %var33, align 4, !dbg !6667
  store i32 2, i32* %type34, align 8, !dbg !6668
  store i64 0, i64* %offset35, align 8, !dbg !6669
  %12 = load i32, i32* %var, align 4, !dbg !6670
  %cmp38.us = icmp eq i32 %11, %12, !dbg !6672
  br i1 %cmp38.us, label %if.end41.us, label %if.then39.us, !dbg !6673

if.then39.us:                                     ; preds = %do.body.us
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %c2, metadata !6598, metadata !DIExpression(DW_OP_deref)), !dbg !6635
  %call40.us = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %c2) #7, !dbg !6674
  br label %if.end41.us, !dbg !6674

if.end41.us:                                      ; preds = %if.then39.us, %do.body.us
  %next.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %temp.0.us, i64 0, i32 2, !dbg !6675
  %13 = load %struct.variable_info*, %struct.variable_info** %next.us, align 8, !dbg !6675
  call void @llvm.dbg.value(metadata %struct.variable_info* %13, metadata !6594, metadata !DIExpression()), !dbg !6663
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !6676
  %tobool42.us = icmp eq %struct.variable_info* %13, null, !dbg !6677
  br i1 %tobool42.us, label %if.end78.loopexit.us, label %do.body.us, !dbg !6677, !llvm.loop !6678

if.end78.us:                                      ; preds = %if.end78.loopexit.us, %if.end70.us, %if.else74.us, %if.then24.us
  %14 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !6680
  %tobool79.us = icmp eq %struct.VEC_ce_s_heap* %14, null, !dbg !6680
  br i1 %tobool79.us, label %cond.end83.us, label %cond.true80.us, !dbg !6680

cond.true80.us:                                   ; preds = %if.end78.us
  %base81.us = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %14, i64 0, i32 0, !dbg !6680
  br label %cond.end83.us, !dbg !6680

cond.end83.us:                                    ; preds = %cond.true80.us, %if.end78.us
  %cond84.us = phi %struct.VEC_ce_s_base* [ %base81.us, %cond.true80.us ], [ null, %if.end78.us ], !dbg !6680
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %c, metadata !6585, metadata !DIExpression(DW_OP_deref)), !dbg !6607
  %call85.us = call fastcc %struct.constraint_expr* @VEC_ce_s_base_replace(%struct.VEC_ce_s_base* %cond84.us, i32 %j.0.us, %struct.constraint_expr* nonnull %c) #7, !dbg !6680
  %inc.us = add i32 %j.0.us, 1, !dbg !6681
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !6586, metadata !DIExpression()), !dbg !6607
  br label %for.cond.us, !dbg !6682, !llvm.loop !6683

if.end78.loopexit.us:                             ; preds = %if.end41.us
  br label %if.end78.us, !dbg !6680

cleanup.loopexit.us-lcssa.us:                     ; preds = %for.cond.us
  br label %cleanup.loopexit, !dbg !6685

for.cond:                                         ; preds = %cond.end83, %cond.end.cond.end.split_crit_edge
  %j.0 = phi i32 [ 0, %cond.end.cond.end.split_crit_edge ], [ %inc, %cond.end83 ], !dbg !6637
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6586, metadata !DIExpression()), !dbg !6607
  %exitcond2 = icmp eq i32 %j.0, %call12, !dbg !6638
  br i1 %exitcond2, label %cleanup.loopexit.us-lcssa, label %for.body, !dbg !6639

for.body:                                         ; preds = %for.cond
  %15 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !6640
  %tobool14 = icmp eq %struct.VEC_ce_s_heap* %15, null, !dbg !6640
  br i1 %tobool14, label %cond.end18, label %cond.true15, !dbg !6640

cond.true15:                                      ; preds = %for.body
  %base16 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %15, i64 0, i32 0, !dbg !6640
  br label %cond.end18, !dbg !6640

cond.end18:                                       ; preds = %for.body, %cond.true15
  %cond19 = phi %struct.VEC_ce_s_base* [ %base16, %cond.true15 ], [ null, %for.body ], !dbg !6640
  %call20 = call fastcc %struct.constraint_expr* @VEC_ce_s_base_index(%struct.VEC_ce_s_base* %cond19, i32 %j.0) #7, !dbg !6640
  %16 = bitcast %struct.constraint_expr* %call20 to i8*, !dbg !6641
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %16, i64 16, i1 false), !dbg !6641
  %17 = load i32, i32* %var, align 4, !dbg !6642
  %call21 = call fastcc %struct.variable_info* @get_varinfo(i32 %17) #7, !dbg !6643
  call void @llvm.dbg.value(metadata %struct.variable_info* %call21, metadata !6590, metadata !DIExpression()), !dbg !6629
  %18 = load i32, i32* %type, align 8, !dbg !6644
  %cmp22 = icmp eq i32 %18, 2, !dbg !6645
  br i1 %cmp22, label %land.lhs.true, label %if.else26, !dbg !6646

land.lhs.true:                                    ; preds = %cond.end18
  %is_full_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call21, i64 0, i32 1, !dbg !6647
  %bf.load = load i8, i8* %is_full_var, align 4, !dbg !6647
  %bf.clear = and i8 %bf.load, 8, !dbg !6647
  %tobool23 = icmp eq i8 %bf.clear, 0, !dbg !6648
  br i1 %tobool23, label %if.else26, label %if.then24, !dbg !6649

if.then24:                                        ; preds = %land.lhs.true
  store i64 0, i64* %offset25, align 8, !dbg !6650
  br label %if.end78, !dbg !6651

if.else26:                                        ; preds = %land.lhs.true, %cond.end18
  br i1 %cmp22, label %if.then46, label %if.else74, !dbg !6653

if.then46:                                        ; preds = %if.else26
  %offset49 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call21, i64 0, i32 3, !dbg !6686
  %19 = load i64, i64* %offset49, align 8, !dbg !6686
  %add = add i64 %19, %rhsoffset.1, !dbg !6687
  call void @llvm.dbg.value(metadata i64 %add, metadata !6603, metadata !DIExpression()), !dbg !6688
  br i1 %cmp50, label %land.lhs.true51, label %if.end55, !dbg !6655

land.lhs.true51:                                  ; preds = %if.then46
  %cmp53 = icmp ult i64 %19, %add, !dbg !6689
  %spec.select1 = select i1 %cmp53, i64 0, i64 %add, !dbg !6656
  br label %if.end55, !dbg !6656

if.end55:                                         ; preds = %land.lhs.true51, %if.then46
  %offset48.0 = phi i64 [ %add, %if.then46 ], [ %spec.select1, %land.lhs.true51 ], !dbg !6688
  call void @llvm.dbg.value(metadata i64 %offset48.0, metadata !6603, metadata !DIExpression()), !dbg !6688
  %call56 = call fastcc %struct.variable_info* @first_or_preceding_vi_for_offset(%struct.variable_info* %call21, i64 %offset48.0) #7, !dbg !6690
  call void @llvm.dbg.value(metadata %struct.variable_info* %call56, metadata !6600, metadata !DIExpression()), !dbg !6688
  %offset57 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call56, i64 0, i32 3, !dbg !6691
  %20 = load i64, i64* %offset57, align 8, !dbg !6691
  %cmp58 = icmp eq i64 %20, %offset48.0, !dbg !6692
  br i1 %cmp58, label %if.end70, label %land.lhs.true59, !dbg !6657

land.lhs.true59:                                  ; preds = %if.end55
  %next60 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call56, i64 0, i32 2, !dbg !6693
  %21 = load %struct.variable_info*, %struct.variable_info** %next60, align 8, !dbg !6693
  %cmp61 = icmp eq %struct.variable_info* %21, null, !dbg !6694
  br i1 %cmp61, label %if.end70, label %if.then62, !dbg !6658

if.then62:                                        ; preds = %land.lhs.true59
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !6695
  %id65 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %21, i64 0, i32 0, !dbg !6696
  %22 = load i32, i32* %id65, align 8, !dbg !6696
  store i32 %22, i32* %var66, align 4, !dbg !6697
  store i32 2, i32* %type67, align 8, !dbg !6698
  store i64 0, i64* %offset68, align 8, !dbg !6699
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %c263, metadata !6604, metadata !DIExpression(DW_OP_deref)), !dbg !6634
  %call69 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %c263) #7, !dbg !6700
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !6701
  br label %if.end70, !dbg !6659

if.end70:                                         ; preds = %land.lhs.true59, %if.end55, %if.then62
  %id71 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call56, i64 0, i32 0, !dbg !6702
  %23 = load i32, i32* %id71, align 8, !dbg !6702
  store i32 %23, i32* %var, align 4, !dbg !6703
  store i64 0, i64* %offset25, align 8, !dbg !6704
  br label %if.end78, !dbg !6660

if.else74:                                        ; preds = %if.else26
  store i64 %rhsoffset.1, i64* %offset25, align 8, !dbg !6654
  br label %if.end78

if.end78:                                         ; preds = %if.else74, %if.end70, %if.then24
  %24 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !6680
  %tobool79 = icmp eq %struct.VEC_ce_s_heap* %24, null, !dbg !6680
  br i1 %tobool79, label %cond.end83, label %cond.true80, !dbg !6680

cond.true80:                                      ; preds = %if.end78
  %base81 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %24, i64 0, i32 0, !dbg !6680
  br label %cond.end83, !dbg !6680

cond.end83:                                       ; preds = %if.end78, %cond.true80
  %cond84 = phi %struct.VEC_ce_s_base* [ %base81, %cond.true80 ], [ null, %if.end78 ], !dbg !6680
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %c, metadata !6585, metadata !DIExpression(DW_OP_deref)), !dbg !6607
  %call85 = call fastcc %struct.constraint_expr* @VEC_ce_s_base_replace(%struct.VEC_ce_s_base* %cond84, i32 %j.0, %struct.constraint_expr* nonnull %c) #7, !dbg !6680
  %inc = add i32 %j.0, 1, !dbg !6681
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6586, metadata !DIExpression()), !dbg !6607
  br label %for.cond, !dbg !6682, !llvm.loop !6683

cleanup.loopexit.us-lcssa:                        ; preds = %for.cond
  br label %cleanup.loopexit, !dbg !6685

cleanup.loopexit:                                 ; preds = %cleanup.loopexit.us-lcssa.us, %cleanup.loopexit.us-lcssa
  br label %cleanup, !dbg !6685

cleanup:                                          ; preds = %cleanup.loopexit, %if.end7, %if.then
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6685
  ret void, !dbg !6685
}

; Function Attrs: nounwind uwtable
define internal fastcc void @process_all_all_constraints(%struct.VEC_ce_s_heap* %lhsc, %struct.VEC_ce_s_heap* %rhsc) unnamed_addr #5 !dbg !6705 {
entry:
  %lhsp = alloca %struct.constraint_expr*, align 8
  %rhsp = alloca %struct.constraint_expr*, align 8
  %tmp = alloca %struct.constraint_expr, align 8
  %tmp31 = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %lhsc, metadata !6709, metadata !DIExpression()), !dbg !6718
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %rhsc, metadata !6710, metadata !DIExpression()), !dbg !6718
  %0 = bitcast %struct.constraint_expr** %lhsp to i8*, !dbg !6719
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6719
  %1 = bitcast %struct.constraint_expr** %rhsp to i8*, !dbg !6719
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6719
  %base = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %lhsc, i64 0, i32 0, !dbg !6720
  %call = tail call fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %base) #7, !dbg !6720
  %cmp = icmp ult i32 %call, 2, !dbg !6721
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6722

lor.lhs.false:                                    ; preds = %entry
  %base3 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %rhsc, i64 0, i32 0, !dbg !6723
  %call7 = tail call fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %base3) #7, !dbg !6723
  %cmp8 = icmp ult i32 %call7, 2, !dbg !6724
  br i1 %cmp8, label %if.then, label %if.else, !dbg !6725

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !6713, metadata !DIExpression()), !dbg !6718
  %base20 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %rhsc, i64 0, i32 0, !dbg !6726
  %2 = bitcast %struct.constraint_expr** %lhsp to { i64, i64 }**, !dbg !6726
  %3 = bitcast %struct.constraint_expr** %rhsp to { i64, i64 }**, !dbg !6726
  br label %for.cond, !dbg !6732

for.cond:                                         ; preds = %for.inc28, %if.then
  %i.0 = phi i32 [ 0, %if.then ], [ %inc29, %for.inc28 ], !dbg !6733
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6713, metadata !DIExpression()), !dbg !6718
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %lhsp, metadata !6711, metadata !DIExpression(DW_OP_deref)), !dbg !6718
  %call15 = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base, i32 %i.0, %struct.constraint_expr** nonnull %lhsp) #7, !dbg !6734
  %tobool16 = icmp eq i32 %call15, 0, !dbg !6735
  br i1 %tobool16, label %if.end.loopexit, label %for.cond17.preheader, !dbg !6735

for.cond17.preheader:                             ; preds = %for.cond
  br label %for.cond17, !dbg !6736

for.cond17:                                       ; preds = %for.cond17.preheader, %for.body26
  %j.0 = phi i32 [ %inc, %for.body26 ], [ 0, %for.cond17.preheader ], !dbg !6737
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6714, metadata !DIExpression()), !dbg !6718
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %rhsp, metadata !6712, metadata !DIExpression(DW_OP_deref)), !dbg !6718
  %call24 = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base20, i32 %j.0, %struct.constraint_expr** nonnull %rhsp) #7, !dbg !6738
  %tobool25 = icmp eq i32 %call24, 0, !dbg !6736
  br i1 %tobool25, label %for.inc28, label %for.body26, !dbg !6736

for.body26:                                       ; preds = %for.cond17
  %4 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !dbg !6739
  %5 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !6740
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0, !dbg !6741
  %7 = load i64, i64* %6, align 8, !dbg !6741
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1, !dbg !6741
  %9 = load i64, i64* %8, align 8, !dbg !6741
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0, !dbg !6741
  %11 = load i64, i64* %10, align 8, !dbg !6741
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1, !dbg !6741
  %13 = load i64, i64* %12, align 8, !dbg !6741
  %call27 = call fastcc %struct.constraint* @new_constraint(i64 %7, i64 %9, i64 %11, i64 %13) #7, !dbg !6741
  call fastcc void @process_constraint(%struct.constraint* %call27) #7, !dbg !6742
  %inc = add i32 %j.0, 1, !dbg !6743
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6714, metadata !DIExpression()), !dbg !6718
  br label %for.cond17, !dbg !6744, !llvm.loop !6745

for.inc28:                                        ; preds = %for.cond17
  %inc29 = add i32 %i.0, 1, !dbg !6747
  call void @llvm.dbg.value(metadata i32 %inc29, metadata !6713, metadata !DIExpression()), !dbg !6718
  br label %for.cond, !dbg !6748, !llvm.loop !6749

if.else:                                          ; preds = %lor.lhs.false
  %14 = bitcast %struct.constraint_expr* %tmp to i8*, !dbg !6751
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8, !dbg !6751
  %15 = bitcast %struct.constraint_expr* %tmp31 to i8*, !dbg !6752
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8, !dbg !6752
  %call32 = tail call fastcc { i64, i64 } @new_scalar_tmp_constraint_exp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i64 0, i64 0)) #7, !dbg !6752
  %16 = bitcast %struct.constraint_expr* %tmp31 to i64*, !dbg !6752
  %17 = extractvalue { i64, i64 } %call32, 0, !dbg !6752
  store i64 %17, i64* %16, align 8, !dbg !6752
  %18 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmp31, i64 0, i32 2, !dbg !6752
  store i64 0, i64* %18, align 8, !dbg !6752
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %15, i64 16, i1 false), !dbg !6752
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8, !dbg !6752
  call void @llvm.dbg.value(metadata i32 0, metadata !6713, metadata !DIExpression()), !dbg !6718
  %19 = bitcast %struct.constraint_expr** %rhsp to { i64, i64 }**, !dbg !6753
  %20 = bitcast %struct.constraint_expr* %tmp to i64*, !dbg !6753
  %21 = load i64, i64* %20, align 8, !dbg !6753
  %22 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmp, i64 0, i32 2, !dbg !6753
  %23 = load i64, i64* %22, align 8, !dbg !6753
  br label %for.cond33, !dbg !6756

for.cond33:                                       ; preds = %for.body42, %if.else
  %i.1 = phi i32 [ 0, %if.else ], [ %inc45, %for.body42 ], !dbg !6757
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6713, metadata !DIExpression()), !dbg !6718
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %rhsp, metadata !6712, metadata !DIExpression(DW_OP_deref)), !dbg !6718
  %call40 = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base3, i32 %i.1, %struct.constraint_expr** nonnull %rhsp) #7, !dbg !6758
  %tobool41 = icmp eq i32 %call40, 0, !dbg !6759
  br i1 %tobool41, label %for.cond47.preheader, label %for.body42, !dbg !6759

for.cond47.preheader:                             ; preds = %for.cond33
  %24 = bitcast %struct.constraint_expr** %lhsp to { i64, i64 }**, !dbg !6760
  br label %for.cond47, !dbg !6763

for.body42:                                       ; preds = %for.cond33
  %25 = load { i64, i64 }*, { i64, i64 }** %19, align 8, !dbg !6764
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i64 0, i32 0, !dbg !6765
  %27 = load i64, i64* %26, align 8, !dbg !6765
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i64 0, i32 1, !dbg !6765
  %29 = load i64, i64* %28, align 8, !dbg !6765
  %call43 = call fastcc %struct.constraint* @new_constraint(i64 %21, i64 %23, i64 %27, i64 %29) #7, !dbg !6765
  call fastcc void @process_constraint(%struct.constraint* %call43) #7, !dbg !6766
  %inc45 = add i32 %i.1, 1, !dbg !6767
  call void @llvm.dbg.value(metadata i32 %inc45, metadata !6713, metadata !DIExpression()), !dbg !6718
  br label %for.cond33, !dbg !6768, !llvm.loop !6769

for.cond47:                                       ; preds = %for.cond47.preheader, %for.body56
  %i.2 = phi i32 [ %inc59, %for.body56 ], [ 0, %for.cond47.preheader ], !dbg !6771
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !6713, metadata !DIExpression()), !dbg !6718
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %lhsp, metadata !6711, metadata !DIExpression(DW_OP_deref)), !dbg !6718
  %call54 = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base, i32 %i.2, %struct.constraint_expr** nonnull %lhsp) #7, !dbg !6772
  %tobool55 = icmp eq i32 %call54, 0, !dbg !6763
  br i1 %tobool55, label %for.end60, label %for.body56, !dbg !6763

for.body56:                                       ; preds = %for.cond47
  %30 = load { i64, i64 }*, { i64, i64 }** %24, align 8, !dbg !6773
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i64 0, i32 0, !dbg !6774
  %32 = load i64, i64* %31, align 8, !dbg !6774
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i64 0, i32 1, !dbg !6774
  %34 = load i64, i64* %33, align 8, !dbg !6774
  %call57 = call fastcc %struct.constraint* @new_constraint(i64 %32, i64 %34, i64 %21, i64 %23) #7, !dbg !6774
  call fastcc void @process_constraint(%struct.constraint* %call57) #7, !dbg !6775
  %inc59 = add i32 %i.2, 1, !dbg !6776
  call void @llvm.dbg.value(metadata i32 %inc59, metadata !6713, metadata !DIExpression()), !dbg !6718
  br label %for.cond47, !dbg !6777, !llvm.loop !6778

for.end60:                                        ; preds = %for.cond47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8, !dbg !6780
  br label %if.end

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !6781

if.end:                                           ; preds = %if.end.loopexit, %for.end60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6781
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6781
  ret void, !dbg !6781
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** %vec_) unnamed_addr #0 !dbg !6782 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %vec_, metadata !6786, metadata !DIExpression()), !dbg !6787
  %0 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %vec_, align 8, !dbg !6788
  %tobool = icmp eq %struct.VEC_ce_s_heap* %0, null, !dbg !6788
  br i1 %tobool, label %if.end, label %if.then, !dbg !6790

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ce_s_heap* %0 to i8*, !dbg !6790
  tail call void @free(i8* nonnull %1) #6, !dbg !6788
  br label %if.end, !dbg !6788

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ce_s_heap* null, %struct.VEC_ce_s_heap** %vec_, align 8, !dbg !6790
  ret void, !dbg !6790
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_deref(%struct.VEC_ce_s_heap** %constraints) unnamed_addr #5 !dbg !6791 {
entry:
  %c = alloca %struct.constraint_expr*, align 8
  %tmplhs = alloca %struct.constraint_expr, align 8
  %tmp = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %constraints, metadata !6793, metadata !DIExpression()), !dbg !6804
  %0 = bitcast %struct.constraint_expr** %c to i8*, !dbg !6805
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6805
  call void @llvm.dbg.value(metadata i32 0, metadata !6795, metadata !DIExpression()), !dbg !6804
  %1 = bitcast %struct.constraint_expr* %tmplhs to i8*, !dbg !6806
  %2 = bitcast %struct.constraint_expr* %tmp to i8*, !dbg !6806
  %3 = bitcast %struct.constraint_expr* %tmp to i64*, !dbg !6806
  %4 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmp, i64 0, i32 2, !dbg !6806
  %5 = bitcast %struct.constraint_expr** %c to { i64, i64 }**, !dbg !6806
  %6 = bitcast %struct.constraint_expr* %tmplhs to i64*, !dbg !6806
  %7 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmplhs, i64 0, i32 2, !dbg !6806
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmplhs, i64 0, i32 1, !dbg !6806
  br label %for.cond, !dbg !6807

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6808
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6795, metadata !DIExpression()), !dbg !6804
  %8 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %constraints, align 8, !dbg !6809
  %tobool = icmp eq %struct.VEC_ce_s_heap* %8, null, !dbg !6809
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6809

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %8, i64 0, i32 0, !dbg !6809
  br label %cond.end, !dbg !6809

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_ce_s_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !6809
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %c, metadata !6794, metadata !DIExpression(DW_OP_deref)), !dbg !6804
  %call = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %cond, i32 %i.0, %struct.constraint_expr** nonnull %c) #7, !dbg !6809
  %tobool1 = icmp eq i32 %call, 0, !dbg !6810
  br i1 %tobool1, label %for.end, label %for.body, !dbg !6810

for.body:                                         ; preds = %cond.end
  %9 = load %struct.constraint_expr*, %struct.constraint_expr** %c, align 8, !dbg !6811
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %9, metadata !6794, metadata !DIExpression()), !dbg !6804
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %9, i64 0, i32 0, !dbg !6812
  %10 = load i32, i32* %type, align 8, !dbg !6812
  %cmp = icmp eq i32 %10, 0, !dbg !6813
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %9, metadata !6794, metadata !DIExpression()), !dbg !6804
  br i1 %cmp, label %if.then, label %if.else, !dbg !6814

if.then:                                          ; preds = %for.body
  store i32 1, i32* %type, align 8, !dbg !6815
  br label %for.inc, !dbg !6816

if.else:                                          ; preds = %for.body
  %cmp4 = icmp eq i32 %10, 2, !dbg !6817
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %9, metadata !6794, metadata !DIExpression()), !dbg !6804
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !6818

if.then5:                                         ; preds = %if.else
  store i32 0, i32* %type, align 8, !dbg !6819
  br label %for.inc, !dbg !6820

if.else7:                                         ; preds = %if.else
  %cmp9 = icmp eq i32 %10, 1, !dbg !6821
  br i1 %cmp9, label %if.then10, label %if.else14, !dbg !6822

if.then10:                                        ; preds = %if.else7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6823
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !6824
  %call11 = call fastcc { i64, i64 } @new_scalar_tmp_constraint_exp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i64 0, i64 0)) #7, !dbg !6824
  %11 = extractvalue { i64, i64 } %call11, 0, !dbg !6824
  store i64 %11, i64* %3, align 8, !dbg !6824
  store i64 0, i64* %4, align 8, !dbg !6824
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !6824
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !6824
  %12 = load { i64, i64 }*, { i64, i64 }** %5, align 8, !dbg !6825
  %13 = load i64, i64* %6, align 8, !dbg !6826
  %14 = load i64, i64* %7, align 8, !dbg !6826
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0, !dbg !6826
  %16 = load i64, i64* %15, align 8, !dbg !6826
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1, !dbg !6826
  %18 = load i64, i64* %17, align 8, !dbg !6826
  %call12 = call fastcc %struct.constraint* @new_constraint(i64 %13, i64 %14, i64 %16, i64 %18) #7, !dbg !6826
  call fastcc void @process_constraint(%struct.constraint* %call12) #7, !dbg !6827
  %19 = load i32, i32* %var, align 4, !dbg !6828
  %20 = load %struct.constraint_expr*, %struct.constraint_expr** %c, align 8, !dbg !6829
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %20, metadata !6794, metadata !DIExpression()), !dbg !6804
  %var13 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %20, i64 0, i32 1, !dbg !6830
  store i32 %19, i32* %var13, align 4, !dbg !6831
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6832
  br label %for.inc, !dbg !6833

if.else14:                                        ; preds = %if.else7
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 3090, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6834
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.then10, %if.else14, %if.then5
  %inc = add i32 %i.0, 1, !dbg !6835
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6795, metadata !DIExpression()), !dbg !6804
  br label %for.cond, !dbg !6836, !llvm.loop !6837

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6839
  ret void, !dbg !6839
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.variable_info* @lookup_vi_for_tree(%union.tree_node* %t) unnamed_addr #5 !dbg !6840 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6842, metadata !DIExpression()), !dbg !6844
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** @vi_for_tree, align 8, !dbg !6845
  %1 = bitcast %union.tree_node* %t to i8*, !dbg !6846
  %call = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %0, i8* %1) #6, !dbg !6847
  call void @llvm.dbg.value(metadata i8** %call, metadata !6843, metadata !DIExpression()), !dbg !6844
  %cmp = icmp eq i8** %call, null, !dbg !6848
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6850

if.end:                                           ; preds = %entry
  %2 = bitcast i8** %call to %struct.variable_info**, !dbg !6851
  %3 = load %struct.variable_info*, %struct.variable_info** %2, align 8, !dbg !6851
  br label %cleanup, !dbg !6852

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.variable_info* [ %3, %if.end ], [ null, %entry ], !dbg !6844
  ret %struct.variable_info* %retval.0, !dbg !6853
}

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @handle_const_call(%union.gimple_statement_d* %stmt, %struct.VEC_ce_s_heap** %results) unnamed_addr #5 !dbg !6854 {
entry:
  %rhsc = alloca %struct.constraint_expr, align 8
  %argc = alloca %struct.VEC_ce_s_heap*, align 8
  %argp = alloca %struct.constraint_expr*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6858, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %results, metadata !6859, metadata !DIExpression()), !dbg !6871
  %0 = bitcast %struct.constraint_expr* %rhsc to i8*, !dbg !6872
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6872
  %call = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #7, !dbg !6873
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !6873
  br i1 %tobool, label %if.end, label %if.then, !dbg !6875

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #7, !dbg !6876
  tail call fastcc void @make_constraint_to(i32 5, %union.tree_node* %call1) #7, !dbg !6878
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 1, !dbg !6879
  store i32 5, i32* %var, align 4, !dbg !6880
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 2, !dbg !6881
  store i64 0, i64* %offset, align 8, !dbg !6882
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 0, !dbg !6883
  store i32 0, i32* %type, align 8, !dbg !6884
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %rhsc, metadata !6860, metadata !DIExpression(DW_OP_deref)), !dbg !6871
  %call2 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %rhsc) #7, !dbg !6885
  br label %if.end, !dbg !6886

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !6861, metadata !DIExpression()), !dbg !6871
  %1 = bitcast %struct.VEC_ce_s_heap** %argc to i8*, !dbg !6887
  %2 = bitcast %struct.constraint_expr** %argp to i8*, !dbg !6887
  br label %for.cond, !dbg !6888

for.cond:                                         ; preds = %for.inc15, %if.end
  %k.0 = phi i32 [ 0, %if.end ], [ %inc16, %for.inc15 ], !dbg !6889
  call void @llvm.dbg.value(metadata i32 %k.0, metadata !6861, metadata !DIExpression()), !dbg !6871
  %call3 = call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !6890
  %cmp = icmp ult i32 %k.0, %call3, !dbg !6891
  br i1 %cmp, label %for.body, label %for.end17, !dbg !6892

for.body:                                         ; preds = %for.cond
  %call4 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %k.0) #7, !dbg !6893
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6862, metadata !DIExpression()), !dbg !6894
  %call5 = call fastcc zeroext i8 @could_have_pointers(%union.tree_node* %call4) #7, !dbg !6895
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6895
  br i1 %tobool6, label %for.inc15, label %if.then7, !dbg !6896

if.then7:                                         ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6897
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* null, metadata !6866, metadata !DIExpression()), !dbg !6887
  store %struct.VEC_ce_s_heap* null, %struct.VEC_ce_s_heap** %argc, align 8, !dbg !6898
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6899
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %argc, metadata !6866, metadata !DIExpression(DW_OP_deref)), !dbg !6887
  call fastcc void @get_constraint_for(%union.tree_node* %call4, %struct.VEC_ce_s_heap** nonnull %argc) #7, !dbg !6900
  call void @llvm.dbg.value(metadata i32 0, metadata !6869, metadata !DIExpression()), !dbg !6887
  br label %for.cond8, !dbg !6901

for.cond8:                                        ; preds = %for.body12, %if.then7
  %i.0 = phi i32 [ 0, %if.then7 ], [ %inc, %for.body12 ], !dbg !6903
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6869, metadata !DIExpression()), !dbg !6887
  %3 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %argc, align 8, !dbg !6904
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %3, metadata !6866, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %3, metadata !6866, metadata !DIExpression()), !dbg !6887
  %base = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %3, i64 0, i32 0, !dbg !6904
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %argp, metadata !6870, metadata !DIExpression(DW_OP_deref)), !dbg !6887
  %call10 = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base, i32 %i.0, %struct.constraint_expr** nonnull %argp) #7, !dbg !6904
  %tobool11 = icmp eq i32 %call10, 0, !dbg !6906
  br i1 %tobool11, label %for.end, label %for.body12, !dbg !6906

for.body12:                                       ; preds = %for.cond8
  %4 = load %struct.constraint_expr*, %struct.constraint_expr** %argp, align 8, !dbg !6907
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %4, metadata !6870, metadata !DIExpression()), !dbg !6887
  %call13 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* %4) #7, !dbg !6907
  %inc = add i32 %i.0, 1, !dbg !6908
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6869, metadata !DIExpression()), !dbg !6887
  br label %for.cond8, !dbg !6909, !llvm.loop !6910

for.end:                                          ; preds = %for.cond8
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %argc, metadata !6866, metadata !DIExpression(DW_OP_deref)), !dbg !6887
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %argc) #7, !dbg !6912
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6913
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6913
  br label %for.inc15, !dbg !6914

for.inc15:                                        ; preds = %for.body, %for.end
  %inc16 = add i32 %k.0, 1, !dbg !6915
  call void @llvm.dbg.value(metadata i32 %inc16, metadata !6861, metadata !DIExpression()), !dbg !6871
  br label %for.cond, !dbg !6916, !llvm.loop !6917

for.end17:                                        ; preds = %for.cond
  %var18 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 1, !dbg !6919
  store i32 4, i32* %var18, align 4, !dbg !6920
  %offset19 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 2, !dbg !6921
  store i64 0, i64* %offset19, align 8, !dbg !6922
  %type20 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 0, !dbg !6923
  store i32 2, i32* %type20, align 8, !dbg !6924
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %rhsc, metadata !6860, metadata !DIExpression(DW_OP_deref)), !dbg !6871
  %call21 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %rhsc) #7, !dbg !6925
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6926
  ret void, !dbg !6926
}

; Function Attrs: nounwind uwtable
define internal fastcc void @handle_pure_call(%union.gimple_statement_d* %stmt, %struct.VEC_ce_s_heap** %results) unnamed_addr #5 !dbg !6927 {
entry:
  %rhsc = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6929, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %results, metadata !6930, metadata !DIExpression()), !dbg !6938
  %0 = bitcast %struct.constraint_expr* %rhsc to i8*, !dbg !6939
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6939
  call void @llvm.dbg.value(metadata i8 0, metadata !6933, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i32 0, metadata !6932, metadata !DIExpression()), !dbg !6938
  br label %for.cond, !dbg !6940

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6941
  %need_callused.0 = phi i8 [ 0, %entry ], [ %need_callused.1, %for.inc ], !dbg !6938
  call void @llvm.dbg.value(metadata i8 %need_callused.0, metadata !6933, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6932, metadata !DIExpression()), !dbg !6938
  %call = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !6942
  %cmp = icmp ult i32 %i.0, %call, !dbg !6943
  br i1 %cmp, label %for.body, label %for.end, !dbg !6944

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %i.0) #7, !dbg !6945
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6934, metadata !DIExpression()), !dbg !6946
  %call2 = tail call fastcc zeroext i8 @could_have_pointers(%union.tree_node* %call1) #7, !dbg !6947
  %tobool = icmp eq i8 %call2, 0, !dbg !6947
  br i1 %tobool, label %for.inc, label %if.then, !dbg !6949

if.then:                                          ; preds = %for.body
  tail call fastcc void @make_constraint_to(i32 5, %union.tree_node* %call1) #7, !dbg !6950
  call void @llvm.dbg.value(metadata i8 1, metadata !6933, metadata !DIExpression()), !dbg !6938
  br label %for.inc, !dbg !6952

for.inc:                                          ; preds = %for.body, %if.then
  %need_callused.1 = phi i8 [ 1, %if.then ], [ %need_callused.0, %for.body ], !dbg !6938
  call void @llvm.dbg.value(metadata i8 %need_callused.1, metadata !6933, metadata !DIExpression()), !dbg !6938
  %inc = add i32 %i.0, 1, !dbg !6953
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6932, metadata !DIExpression()), !dbg !6938
  br label %for.cond, !dbg !6954, !llvm.loop !6955

for.end:                                          ; preds = %for.cond
  %need_callused.0.lcssa = phi i8 [ %need_callused.0, %for.cond ], !dbg !6938
  call void @llvm.dbg.value(metadata i8 %need_callused.0.lcssa, metadata !6933, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i8 %need_callused.0.lcssa, metadata !6933, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i8 %need_callused.0.lcssa, metadata !6933, metadata !DIExpression()), !dbg !6938
  %call3 = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #7, !dbg !6957
  %tobool4 = icmp eq %union.tree_node* %call3, null, !dbg !6957
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !6959

if.then5:                                         ; preds = %for.end
  %call6 = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #7, !dbg !6960
  tail call fastcc void @make_constraint_to(i32 5, %union.tree_node* %call6) #7, !dbg !6962
  call void @llvm.dbg.value(metadata i8 1, metadata !6933, metadata !DIExpression()), !dbg !6938
  br label %if.end7, !dbg !6963

if.end7:                                          ; preds = %for.end, %if.then5
  %need_callused.2 = phi i8 [ 1, %if.then5 ], [ %need_callused.0.lcssa, %for.end ], !dbg !6938
  call void @llvm.dbg.value(metadata i8 %need_callused.2, metadata !6933, metadata !DIExpression()), !dbg !6938
  %tobool8 = icmp eq i8 %need_callused.2, 0, !dbg !6964
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !6966

if.then9:                                         ; preds = %if.end7
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 1, !dbg !6967
  store i32 5, i32* %var, align 4, !dbg !6969
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 2, !dbg !6970
  store i64 0, i64* %offset, align 8, !dbg !6971
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 0, !dbg !6972
  store i32 0, i32* %type, align 8, !dbg !6973
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %rhsc, metadata !6931, metadata !DIExpression(DW_OP_deref)), !dbg !6938
  %call10 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %rhsc) #7, !dbg !6974
  br label %if.end11, !dbg !6975

if.end11:                                         ; preds = %if.end7, %if.then9
  %var12 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 1, !dbg !6976
  store i32 4, i32* %var12, align 4, !dbg !6977
  %offset13 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 2, !dbg !6978
  store i64 0, i64* %offset13, align 8, !dbg !6979
  %type14 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 0, !dbg !6980
  store i32 0, i32* %type14, align 8, !dbg !6981
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %rhsc, metadata !6931, metadata !DIExpression(DW_OP_deref)), !dbg !6938
  %call15 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %rhsc) #7, !dbg !6982
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !6983
  ret void, !dbg !6983
}

; Function Attrs: nounwind uwtable
define internal fastcc void @handle_rhs_call(%union.gimple_statement_d* %stmt, %struct.VEC_ce_s_heap** %results) unnamed_addr #5 !dbg !6984 {
entry:
  %rhsc = alloca %struct.constraint_expr, align 8
  %tmpc = alloca %struct.VEC_ce_s_heap*, align 8
  %lhsc = alloca %struct.constraint_expr, align 8
  %c = alloca %struct.constraint_expr*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6986, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %results, metadata !6987, metadata !DIExpression()), !dbg !6999
  %0 = bitcast %struct.constraint_expr* %rhsc to i8*, !dbg !7000
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7000
  call void @llvm.dbg.value(metadata i32 0, metadata !6989, metadata !DIExpression()), !dbg !6999
  br label %for.cond, !dbg !7001

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !7002
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6989, metadata !DIExpression()), !dbg !6999
  %call = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !7003
  %cmp = icmp ult i32 %i.0, %call, !dbg !7004
  br i1 %cmp, label %for.body, label %for.end, !dbg !7005

for.body:                                         ; preds = %for.cond
  %call1 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %i.0) #7, !dbg !7006
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6990, metadata !DIExpression()), !dbg !7007
  %call2 = tail call fastcc zeroext i8 @could_have_pointers(%union.tree_node* %call1) #7, !dbg !7008
  %tobool = icmp eq i8 %call2, 0, !dbg !7008
  br i1 %tobool, label %for.inc, label %if.then, !dbg !7010

if.then:                                          ; preds = %for.body
  tail call fastcc void @make_escape_constraint(%union.tree_node* %call1) #7, !dbg !7011
  br label %for.inc, !dbg !7011

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add i32 %i.0, 1, !dbg !7012
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6989, metadata !DIExpression()), !dbg !6999
  br label %for.cond, !dbg !7013, !llvm.loop !7014

for.end:                                          ; preds = %for.cond
  %call3 = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #7, !dbg !7016
  %tobool4 = icmp eq %union.tree_node* %call3, null, !dbg !7016
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !7018

if.then5:                                         ; preds = %for.end
  %call6 = tail call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %stmt) #7, !dbg !7019
  tail call fastcc void @make_escape_constraint(%union.tree_node* %call6) #7, !dbg !7020
  br label %if.end7, !dbg !7020

if.end7:                                          ; preds = %for.end, %if.then5
  %call8 = tail call fastcc zeroext i8 @gimple_call_return_slot_opt_p(%union.gimple_statement_d* %stmt) #7, !dbg !7021
  %tobool9 = icmp eq i8 %call8, 0, !dbg !7021
  br i1 %tobool9, label %if.end29, label %land.lhs.true, !dbg !7022

land.lhs.true:                                    ; preds = %if.end7
  %call10 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !7023
  %cmp11 = icmp eq %union.tree_node* %call10, null, !dbg !7024
  br i1 %cmp11, label %if.end29, label %land.lhs.true13, !dbg !7025

land.lhs.true13:                                  ; preds = %land.lhs.true
  %call14 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !7026
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7026
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !7026
  %2 = load i64*, i64** %1, align 8, !dbg !7026
  %bf.load = load i64, i64* %2, align 8, !dbg !7026
  %bf.cast1 = and i64 %bf.load, 262144, !dbg !7026
  %tobool15 = icmp eq i64 %bf.cast1, 0, !dbg !7026
  br i1 %tobool15, label %if.end29, label %if.then16, !dbg !7027

if.then16:                                        ; preds = %land.lhs.true13
  %3 = bitcast %struct.VEC_ce_s_heap** %tmpc to i8*, !dbg !7028
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !7028
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* null, metadata !6994, metadata !DIExpression()), !dbg !7029
  store %struct.VEC_ce_s_heap* null, %struct.VEC_ce_s_heap** %tmpc, align 8, !dbg !7030
  %4 = bitcast %struct.constraint_expr* %lhsc to i8*, !dbg !7031
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !7031
  %5 = bitcast %struct.constraint_expr** %c to i8*, !dbg !7031
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !7031
  %call17 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !7032
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %tmpc, metadata !6994, metadata !DIExpression(DW_OP_deref)), !dbg !7029
  call fastcc void @get_constraint_for_address_of(%union.tree_node* %call17, %struct.VEC_ce_s_heap** nonnull %tmpc) #7, !dbg !7033
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhsc, i64 0, i32 1, !dbg !7034
  store i32 3, i32* %var, align 4, !dbg !7035
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhsc, i64 0, i32 2, !dbg !7036
  store i64 0, i64* %offset, align 8, !dbg !7037
  %type18 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhsc, i64 0, i32 0, !dbg !7038
  store i32 0, i32* %type18, align 8, !dbg !7039
  call void @llvm.dbg.value(metadata i32 0, metadata !6989, metadata !DIExpression()), !dbg !6999
  %6 = bitcast %struct.constraint_expr** %c to { i64, i64 }**, !dbg !7040
  %7 = bitcast %struct.constraint_expr* %lhsc to i64*, !dbg !7040
  %8 = load i64, i64* %7, align 8, !dbg !7040
  br label %for.cond19, !dbg !7043

for.cond19:                                       ; preds = %for.body24, %if.then16
  %i.1 = phi i32 [ 0, %if.then16 ], [ %inc27, %for.body24 ], !dbg !7044
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6989, metadata !DIExpression()), !dbg !6999
  %9 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %tmpc, align 8, !dbg !7045
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %9, metadata !6994, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %9, metadata !6994, metadata !DIExpression()), !dbg !7029
  %base21 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %9, i64 0, i32 0, !dbg !7045
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %c, metadata !6998, metadata !DIExpression(DW_OP_deref)), !dbg !7029
  %call22 = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base21, i32 %i.1, %struct.constraint_expr** nonnull %c) #7, !dbg !7045
  %tobool23 = icmp eq i32 %call22, 0, !dbg !7046
  br i1 %tobool23, label %for.end28, label %for.body24, !dbg !7046

for.body24:                                       ; preds = %for.cond19
  %10 = load { i64, i64 }*, { i64, i64 }** %6, align 8, !dbg !7047
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0, !dbg !7048
  %12 = load i64, i64* %11, align 8, !dbg !7048
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1, !dbg !7048
  %14 = load i64, i64* %13, align 8, !dbg !7048
  %call25 = call fastcc %struct.constraint* @new_constraint(i64 %8, i64 0, i64 %12, i64 %14) #7, !dbg !7048
  call fastcc void @process_constraint(%struct.constraint* %call25) #7, !dbg !7049
  %inc27 = add i32 %i.1, 1, !dbg !7050
  call void @llvm.dbg.value(metadata i32 %inc27, metadata !6989, metadata !DIExpression()), !dbg !6999
  br label %for.cond19, !dbg !7051, !llvm.loop !7052

for.end28:                                        ; preds = %for.cond19
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %tmpc, metadata !6994, metadata !DIExpression(DW_OP_deref)), !dbg !7029
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %tmpc) #7, !dbg !7054
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !7055
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !7055
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !7055
  br label %if.end29, !dbg !7056

if.end29:                                         ; preds = %land.lhs.true13, %land.lhs.true, %if.end7, %for.end28
  %var30 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 1, !dbg !7057
  store i32 4, i32* %var30, align 4, !dbg !7058
  %offset31 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 2, !dbg !7059
  store i64 0, i64* %offset31, align 8, !dbg !7060
  %type32 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhsc, i64 0, i32 0, !dbg !7061
  store i32 0, i32* %type32, align 8, !dbg !7062
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %rhsc, metadata !6988, metadata !DIExpression(DW_OP_deref)), !dbg !6999
  %call33 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %rhsc) #7, !dbg !7063
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7064
  ret void, !dbg !7064
}

; Function Attrs: nounwind uwtable
define internal fastcc void @handle_lhs_call(%union.tree_node* %lhs, i32 %flags, %struct.VEC_ce_s_heap* %rhsc, %union.tree_node* %fndecl) unnamed_addr #5 !dbg !7065 {
entry:
  %lhsc = alloca %struct.VEC_ce_s_heap*, align 8
  %tmpc = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !7069, metadata !DIExpression()), !dbg !7082
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7070, metadata !DIExpression()), !dbg !7082
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %rhsc, metadata !7071, metadata !DIExpression()), !dbg !7082
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !7072, metadata !DIExpression()), !dbg !7082
  %0 = bitcast %struct.VEC_ce_s_heap** %lhsc to i8*, !dbg !7083
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7083
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* null, metadata !7073, metadata !DIExpression()), !dbg !7082
  store %struct.VEC_ce_s_heap* null, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !7084
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !7073, metadata !DIExpression(DW_OP_deref)), !dbg !7082
  call fastcc void @get_constraint_for(%union.tree_node* %lhs, %struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !7085
  %and = and i32 %flags, 16, !dbg !7086
  %tobool = icmp eq i32 %and, 0, !dbg !7086
  br i1 %tobool, label %if.else, label %if.then, !dbg !7087

if.then:                                          ; preds = %entry
  %call = call fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* %lhs) #7, !dbg !7088
  %call1 = call fastcc %struct.variable_info* @make_constraint_from_heapvar(%struct.variable_info* %call, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)) #7, !dbg !7089
  call void @llvm.dbg.value(metadata %struct.variable_info* %call1, metadata !7074, metadata !DIExpression()), !dbg !7090
  %decl = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call1, i64 0, i32 7, !dbg !7091
  %1 = bitcast %union.tree_node** %decl to %struct.tree_decl_common**, !dbg !7091
  %2 = load %struct.tree_decl_common*, %struct.tree_decl_common** %1, align 8, !dbg !7091
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %2, i64 0, i32 2, !dbg !7091
  %3 = bitcast i40* %decl_flag_1 to i64*, !dbg !7091
  %bf.load = load i64, i64* %3, align 8, !dbg !7092
  %bf.clear = and i64 %bf.load, -33554433, !dbg !7092
  store i64 %bf.clear, i64* %3, align 8, !dbg !7092
  %is_global_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call1, i64 0, i32 1, !dbg !7093
  %bf.load2 = load i8, i8* %is_global_var, align 4, !dbg !7094
  %bf.clear3 = and i8 %bf.load2, 127, !dbg !7094
  store i8 %bf.clear3, i8* %is_global_var, align 4, !dbg !7094
  %tobool4 = icmp eq %union.tree_node* %fndecl, null, !dbg !7095
  br i1 %tobool4, label %if.then7, label %lor.lhs.false, !dbg !7097

lor.lhs.false:                                    ; preds = %if.then
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !7098
  %bf.load5 = load i32, i32* %built_in_class, align 8, !dbg !7098
  %bf.clear6 = and i32 %bf.load5, 6144, !dbg !7098
  %cmp = icmp eq i32 %bf.clear6, 6144, !dbg !7099
  br i1 %cmp, label %if.end25, label %if.then7, !dbg !7100

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  call fastcc void @make_constraint_from(%struct.variable_info* %call1, i32 4) #7, !dbg !7101
  br label %if.end25, !dbg !7101

if.else:                                          ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %rhsc, i64 0, i32 0, !dbg !7102
  %call9 = call fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %base) #7, !dbg !7102
  %cmp10 = icmp eq i32 %call9, 0, !dbg !7103
  br i1 %cmp10, label %if.end25, label %if.then11, !dbg !7104

if.then11:                                        ; preds = %if.else
  %call12 = call %union.tree_node* @get_base_address(%union.tree_node* %lhs) #6, !dbg !7105
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !7069, metadata !DIExpression()), !dbg !7082
  %tobool13 = icmp eq %union.tree_node* %call12, null, !dbg !7106
  br i1 %tobool13, label %if.end23, label %land.lhs.true, !dbg !7107

land.lhs.true:                                    ; preds = %if.then11
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7108
  %bf.load15 = load i64, i64* %4, align 8, !dbg !7108
  %bf.cast = and i64 %bf.load15, 65535, !dbg !7108
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7108
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7108
  %cmp17 = icmp eq i32 %5, 3, !dbg !7108
  br i1 %cmp17, label %land.lhs.true18, label %if.end23, !dbg !7109

land.lhs.true18:                                  ; preds = %land.lhs.true
  %call19 = call fastcc zeroext i8 @is_global_var(%union.tree_node* nonnull %call12) #7, !dbg !7110
  %tobool20 = icmp eq i8 %call19, 0, !dbg !7110
  br i1 %tobool20, label %if.end23, label %if.then21, !dbg !7111

if.then21:                                        ; preds = %land.lhs.true18
  %6 = bitcast %struct.constraint_expr* %tmpc to i8*, !dbg !7112
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !7112
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmpc, i64 0, i32 1, !dbg !7113
  store i32 3, i32* %var, align 4, !dbg !7114
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmpc, i64 0, i32 2, !dbg !7115
  store i64 0, i64* %offset, align 8, !dbg !7116
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %tmpc, i64 0, i32 0, !dbg !7117
  store i32 0, i32* %type, align 8, !dbg !7118
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !7073, metadata !DIExpression(DW_OP_deref)), !dbg !7082
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %tmpc, metadata !7077, metadata !DIExpression(DW_OP_deref)), !dbg !7119
  %call22 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** nonnull %lhsc, %struct.constraint_expr* nonnull %tmpc) #7, !dbg !7120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !7121
  br label %if.end23, !dbg !7122

if.end23:                                         ; preds = %land.lhs.true18, %if.then11, %if.then21, %land.lhs.true
  %7 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !7123
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %7, metadata !7073, metadata !DIExpression()), !dbg !7082
  call fastcc void @process_all_all_constraints(%struct.VEC_ce_s_heap* %7, %struct.VEC_ce_s_heap* %rhsc) #7, !dbg !7124
  br label %if.end25, !dbg !7125

if.end25:                                         ; preds = %lor.lhs.false, %if.else, %if.end23, %if.then7
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !7073, metadata !DIExpression(DW_OP_deref)), !dbg !7082
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !7126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7127
  ret void, !dbg !7127
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7128 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7130, metadata !DIExpression()), !dbg !7131
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !7132
  ret %union.tree_node* %call, !dbg !7133
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7134 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7136, metadata !DIExpression()), !dbg !7138
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !7139
  call void @llvm.dbg.value(metadata i32 %call, metadata !7137, metadata !DIExpression()), !dbg !7138
  %sub = add i32 %call, -3, !dbg !7140
  ret i32 %sub, !dbg !7141
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.variable_info* @first_vi_for_offset(%struct.variable_info* %start, i64 %offset) unnamed_addr #5 !dbg !7142 {
entry:
  call void @llvm.dbg.value(metadata %struct.variable_info* %start, metadata !7146, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.value(metadata i64 %offset, metadata !7147, metadata !DIExpression()), !dbg !7148
  %fullsize = getelementptr inbounds %struct.variable_info, %struct.variable_info* %start, i64 0, i32 5, !dbg !7149
  %0 = load i64, i64* %fullsize, align 8, !dbg !7149
  %cmp = icmp ugt i64 %0, %offset, !dbg !7151
  br i1 %cmp, label %if.end, label %return, !dbg !7152

if.end:                                           ; preds = %entry
  %offset1 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %start, i64 0, i32 3, !dbg !7153
  %1 = load i64, i64* %offset1, align 8, !dbg !7153
  %cmp2 = icmp ugt i64 %1, %offset, !dbg !7155
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7156

if.then3:                                         ; preds = %if.end
  %decl = getelementptr inbounds %struct.variable_info, %struct.variable_info* %start, i64 0, i32 7, !dbg !7157
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7157
  %call = tail call fastcc %struct.variable_info* @lookup_vi_for_tree(%union.tree_node* %2) #7, !dbg !7158
  call void @llvm.dbg.value(metadata %struct.variable_info* %call, metadata !7146, metadata !DIExpression()), !dbg !7148
  br label %if.end4, !dbg !7159

if.end4:                                          ; preds = %if.then3, %if.end
  %start.addr.0 = phi %struct.variable_info* [ %call, %if.then3 ], [ %start, %if.end ]
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.0, metadata !7146, metadata !DIExpression()), !dbg !7148
  br label %while.cond, !dbg !7160

while.cond:                                       ; preds = %if.end10, %if.end4
  %start.addr.1 = phi %struct.variable_info* [ %start.addr.0, %if.end4 ], [ %5, %if.end10 ], !dbg !7148
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.1, metadata !7146, metadata !DIExpression()), !dbg !7148
  %tobool = icmp eq %struct.variable_info* %start.addr.1, null, !dbg !7160
  br i1 %tobool, label %return.loopexit, label %while.body, !dbg !7160

while.body:                                       ; preds = %while.cond
  %offset5 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %start.addr.1, i64 0, i32 3, !dbg !7161
  %3 = load i64, i64* %offset5, align 8, !dbg !7161
  %cmp6 = icmp ugt i64 %3, %offset, !dbg !7164
  br i1 %cmp6, label %if.end10, label %land.lhs.true, !dbg !7165

land.lhs.true:                                    ; preds = %while.body
  %sub = sub i64 %offset, %3, !dbg !7166
  %size = getelementptr inbounds %struct.variable_info, %struct.variable_info* %start.addr.1, i64 0, i32 4, !dbg !7167
  %4 = load i64, i64* %size, align 8, !dbg !7167
  %cmp8 = icmp ult i64 %sub, %4, !dbg !7168
  br i1 %cmp8, label %return.loopexit, label %if.end10, !dbg !7169

if.end10:                                         ; preds = %while.body, %land.lhs.true
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %start.addr.1, i64 0, i32 2, !dbg !7170
  %5 = load %struct.variable_info*, %struct.variable_info** %next, align 8, !dbg !7170
  call void @llvm.dbg.value(metadata %struct.variable_info* %5, metadata !7146, metadata !DIExpression()), !dbg !7148
  br label %while.cond, !dbg !7160, !llvm.loop !7171

return.loopexit:                                  ; preds = %land.lhs.true, %while.cond
  %retval.0.ph = phi %struct.variable_info* [ null, %while.cond ], [ %start.addr.1, %land.lhs.true ]
  br label %return, !dbg !7173

return:                                           ; preds = %return.loopexit, %entry
  %retval.0 = phi %struct.variable_info* [ null, %entry ], [ %retval.0.ph, %return.loopexit ], !dbg !7148
  ret %struct.variable_info* %retval.0, !dbg !7173
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7174 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7176, metadata !DIExpression()), !dbg !7177
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !7178
  %cmp = icmp eq i32 %call, 6, !dbg !7179
  %conv1 = zext i1 %cmp to i8, !dbg !7178
  ret i8 %conv1, !dbg !7180
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7181 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7183, metadata !DIExpression()), !dbg !7184
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !7185
  ret %union.tree_node* %call, !dbg !7186
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7187 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7189, metadata !DIExpression()), !dbg !7190
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !7191
  %0 = load i32, i32* %num_ops, align 4, !dbg !7191
  ret i32 %0, !dbg !7192
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7193 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7195, metadata !DIExpression()), !dbg !7196
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !7197
  ret %union.tree_node* %call, !dbg !7198
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_structure_copy(%union.tree_node* %lhsop, %union.tree_node* %rhsop) unnamed_addr #5 !dbg !7199 {
entry:
  %lhsp = alloca %struct.constraint_expr*, align 8
  %lhsc = alloca %struct.VEC_ce_s_heap*, align 8
  %rhsc = alloca %struct.VEC_ce_s_heap*, align 8
  %lhssize = alloca i64, align 8
  %lhsmaxsize = alloca i64, align 8
  %lhsoffset = alloca i64, align 8
  %rhssize = alloca i64, align 8
  %rhsmaxsize = alloca i64, align 8
  %rhsoffset = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %lhsop, metadata !7203, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.value(metadata %union.tree_node* %rhsop, metadata !7204, metadata !DIExpression()), !dbg !7225
  %0 = bitcast %struct.constraint_expr** %lhsp to i8*, !dbg !7226
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7226
  %1 = bitcast %struct.VEC_ce_s_heap** %lhsc to i8*, !dbg !7227
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7227
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* null, metadata !7207, metadata !DIExpression()), !dbg !7225
  store %struct.VEC_ce_s_heap* null, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !7228
  %2 = bitcast %struct.VEC_ce_s_heap** %rhsc to i8*, !dbg !7227
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7227
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* null, metadata !7208, metadata !DIExpression()), !dbg !7225
  store %struct.VEC_ce_s_heap* null, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !7229
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !7207, metadata !DIExpression(DW_OP_deref)), !dbg !7225
  call fastcc void @get_constraint_for(%union.tree_node* %lhsop, %struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !7230
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !7208, metadata !DIExpression(DW_OP_deref)), !dbg !7225
  call fastcc void @get_constraint_for(%union.tree_node* %rhsop, %struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !7231
  %3 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !7232
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %3, metadata !7207, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %3, metadata !7207, metadata !DIExpression()), !dbg !7225
  %base = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %3, i64 0, i32 0, !dbg !7232
  %call = call fastcc %struct.constraint_expr* @VEC_ce_s_base_index(%struct.VEC_ce_s_base* %base, i32 0) #7, !dbg !7232
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %call, metadata !7205, metadata !DIExpression()), !dbg !7225
  store %struct.constraint_expr* %call, %struct.constraint_expr** %lhsp, align 8, !dbg !7233
  %4 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !7234
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %4, metadata !7208, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %4, metadata !7208, metadata !DIExpression()), !dbg !7225
  %base3 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %4, i64 0, i32 0, !dbg !7234
  %call7 = call fastcc %struct.constraint_expr* @VEC_ce_s_base_index(%struct.VEC_ce_s_base* %base3, i32 0) #7, !dbg !7234
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %call7, metadata !7206, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %call, metadata !7205, metadata !DIExpression()), !dbg !7225
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call, i64 0, i32 0, !dbg !7235
  %5 = load i32, i32* %type, align 8, !dbg !7235
  %cmp = icmp eq i32 %5, 1, !dbg !7236
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7237

lor.lhs.false:                                    ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %call, metadata !7205, metadata !DIExpression()), !dbg !7225
  %cmp9 = icmp eq i32 %5, 2, !dbg !7238
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false11, !dbg !7239

land.lhs.true:                                    ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %call, metadata !7205, metadata !DIExpression()), !dbg !7225
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call, i64 0, i32 1, !dbg !7240
  %6 = load i32, i32* %var, align 4, !dbg !7240
  %cmp10 = icmp eq i32 %6, 1, !dbg !7241
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !7242

lor.lhs.false11:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %type12 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call7, i64 0, i32 0, !dbg !7243
  %7 = load i32, i32* %type12, align 8, !dbg !7243
  %cmp13 = icmp eq i32 %7, 1, !dbg !7244
  br i1 %cmp13, label %if.then, label %if.else, !dbg !7245

if.then:                                          ; preds = %lor.lhs.false11, %land.lhs.true, %entry
  %8 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !7246
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %8, metadata !7207, metadata !DIExpression()), !dbg !7225
  %9 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !7247
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %9, metadata !7208, metadata !DIExpression()), !dbg !7225
  call fastcc void @process_all_all_constraints(%struct.VEC_ce_s_heap* %8, %struct.VEC_ce_s_heap* %9) #7, !dbg !7248
  br label %if.end81, !dbg !7248

if.else:                                          ; preds = %lor.lhs.false11
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %call, metadata !7205, metadata !DIExpression()), !dbg !7225
  %cmp15 = icmp eq i32 %5, 0, !dbg !7249
  br i1 %cmp15, label %land.lhs.true16, label %if.else79, !dbg !7250

land.lhs.true16:                                  ; preds = %if.else
  %cmp18 = icmp eq i32 %7, 0, !dbg !7251
  br i1 %cmp18, label %if.then22, label %lor.lhs.false19, !dbg !7252

lor.lhs.false19:                                  ; preds = %land.lhs.true16
  %cmp21 = icmp eq i32 %7, 2, !dbg !7253
  br i1 %cmp21, label %if.then22, label %if.else79, !dbg !7254

if.then22:                                        ; preds = %lor.lhs.false19, %land.lhs.true16
  %10 = bitcast i64* %lhssize to i8*, !dbg !7255
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8, !dbg !7255
  %11 = bitcast i64* %lhsmaxsize to i8*, !dbg !7255
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8, !dbg !7255
  %12 = bitcast i64* %lhsoffset to i8*, !dbg !7255
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8, !dbg !7255
  %13 = bitcast i64* %rhssize to i8*, !dbg !7256
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8, !dbg !7256
  %14 = bitcast i64* %rhsmaxsize to i8*, !dbg !7256
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8, !dbg !7256
  %15 = bitcast i64* %rhsoffset to i8*, !dbg !7256
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8, !dbg !7256
  call void @llvm.dbg.value(metadata i32 0, metadata !7219, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i64* %lhssize, metadata !7210, metadata !DIExpression(DW_OP_deref)), !dbg !7257
  call void @llvm.dbg.value(metadata i64* %lhsmaxsize, metadata !7214, metadata !DIExpression(DW_OP_deref)), !dbg !7257
  call void @llvm.dbg.value(metadata i64* %lhsoffset, metadata !7215, metadata !DIExpression(DW_OP_deref)), !dbg !7257
  %call23 = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* %lhsop, i64* nonnull %lhsoffset, i64* nonnull %lhssize, i64* nonnull %lhsmaxsize) #6, !dbg !7258
  call void @llvm.dbg.value(metadata i64* %rhssize, metadata !7216, metadata !DIExpression(DW_OP_deref)), !dbg !7257
  call void @llvm.dbg.value(metadata i64* %rhsmaxsize, metadata !7217, metadata !DIExpression(DW_OP_deref)), !dbg !7257
  call void @llvm.dbg.value(metadata i64* %rhsoffset, metadata !7218, metadata !DIExpression(DW_OP_deref)), !dbg !7257
  %call24 = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* %rhsop, i64* nonnull %rhsoffset, i64* nonnull %rhssize, i64* nonnull %rhsmaxsize) #6, !dbg !7259
  call void @llvm.dbg.value(metadata i32 0, metadata !7209, metadata !DIExpression()), !dbg !7225
  %16 = bitcast %struct.constraint_expr** %lhsp to { i64, i64 }**, !dbg !7260
  br label %for.cond, !dbg !7262

for.cond:                                         ; preds = %cleanup, %if.then22
  %j.0 = phi i32 [ 0, %if.then22 ], [ %j.2, %cleanup ], !dbg !7263
  %k.0 = phi i32 [ 0, %if.then22 ], [ %k.2, %cleanup ], !dbg !7257
  call void @llvm.dbg.value(metadata i32 %k.0, metadata !7219, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !7209, metadata !DIExpression()), !dbg !7225
  %17 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %lhsc, align 8, !dbg !7264
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %17, metadata !7207, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %17, metadata !7207, metadata !DIExpression()), !dbg !7225
  %base27 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %17, i64 0, i32 0, !dbg !7264
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %lhsp, metadata !7205, metadata !DIExpression(DW_OP_deref)), !dbg !7225
  %call31 = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base27, i32 %j.0, %struct.constraint_expr** nonnull %lhsp) #7, !dbg !7264
  %tobool32 = icmp eq i32 %call31, 0, !dbg !7265
  br i1 %tobool32, label %for.end, label %for.body, !dbg !7265

for.body:                                         ; preds = %for.cond
  %18 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !7266
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %18, metadata !7208, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %18, metadata !7208, metadata !DIExpression()), !dbg !7225
  %base35 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %18, i64 0, i32 0, !dbg !7266
  %call39 = call fastcc %struct.constraint_expr* @VEC_ce_s_base_index(%struct.VEC_ce_s_base* %base35, i32 %k.0) #7, !dbg !7266
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %call39, metadata !7206, metadata !DIExpression()), !dbg !7225
  %19 = load %struct.constraint_expr*, %struct.constraint_expr** %lhsp, align 8, !dbg !7267
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %19, metadata !7205, metadata !DIExpression()), !dbg !7225
  %var40 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %19, i64 0, i32 1, !dbg !7268
  %20 = load i32, i32* %var40, align 4, !dbg !7268
  %call41 = call fastcc %struct.variable_info* @get_varinfo(i32 %20) #7, !dbg !7269
  call void @llvm.dbg.value(metadata %struct.variable_info* %call41, metadata !7220, metadata !DIExpression()), !dbg !7270
  %var42 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call39, i64 0, i32 1, !dbg !7271
  %21 = load i32, i32* %var42, align 4, !dbg !7271
  %call43 = call fastcc %struct.variable_info* @get_varinfo(i32 %21) #7, !dbg !7272
  call void @llvm.dbg.value(metadata %struct.variable_info* %call43, metadata !7224, metadata !DIExpression()), !dbg !7270
  %may_have_pointers = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call41, i64 0, i32 1, !dbg !7273
  %bf.load = load i8, i8* %may_have_pointers, align 4, !dbg !7273
  %bf.clear = and i8 %bf.load, 64, !dbg !7273
  %tobool44 = icmp eq i8 %bf.clear, 0, !dbg !7274
  br i1 %tobool44, label %if.end, label %land.lhs.true45, !dbg !7275

land.lhs.true45:                                  ; preds = %for.body
  %offset = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call41, i64 0, i32 3, !dbg !7276
  %22 = load i64, i64* %offset, align 8, !dbg !7276
  %23 = load i64, i64* %rhsoffset, align 8, !dbg !7277
  call void @llvm.dbg.value(metadata i64 %23, metadata !7218, metadata !DIExpression()), !dbg !7257
  %add = add i64 %22, %23, !dbg !7278
  %size = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call41, i64 0, i32 4, !dbg !7279
  %24 = load i64, i64* %size, align 8, !dbg !7279
  %offset46 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call43, i64 0, i32 3, !dbg !7280
  %25 = load i64, i64* %offset46, align 8, !dbg !7280
  %26 = load i64, i64* %lhsoffset, align 8, !dbg !7281
  call void @llvm.dbg.value(metadata i64 %26, metadata !7215, metadata !DIExpression()), !dbg !7257
  %add47 = add i64 %25, %26, !dbg !7282
  %size48 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call43, i64 0, i32 4, !dbg !7283
  %27 = load i64, i64* %size48, align 8, !dbg !7283
  %call49 = call fastcc zeroext i8 @ranges_overlap_p(i64 %add, i64 %24, i64 %add47, i64 %27) #7, !dbg !7284
  %tobool50 = icmp eq i8 %call49, 0, !dbg !7284
  br i1 %tobool50, label %if.end, label %if.then51, !dbg !7285

if.then51:                                        ; preds = %land.lhs.true45
  %28 = load { i64, i64 }*, { i64, i64 }** %16, align 8, !dbg !7286
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i64 0, i32 0, !dbg !7287
  %30 = load i64, i64* %29, align 8, !dbg !7287
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i64 0, i32 1, !dbg !7287
  %32 = load i64, i64* %31, align 8, !dbg !7287
  %33 = bitcast %struct.constraint_expr* %call39 to i64*, !dbg !7287
  %34 = load i64, i64* %33, align 8, !dbg !7287
  %35 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call39, i64 0, i32 2, !dbg !7287
  %36 = load i64, i64* %35, align 8, !dbg !7287
  %call52 = call fastcc %struct.constraint* @new_constraint(i64 %30, i64 %32, i64 %34, i64 %36) #7, !dbg !7287
  call fastcc void @process_constraint(%struct.constraint* %call52) #7, !dbg !7288
  br label %if.end, !dbg !7288

if.end:                                           ; preds = %land.lhs.true45, %for.body, %if.then51
  %offset53 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call41, i64 0, i32 3, !dbg !7289
  %37 = load i64, i64* %offset53, align 8, !dbg !7289
  %38 = load i64, i64* %rhsoffset, align 8, !dbg !7291
  call void @llvm.dbg.value(metadata i64 %38, metadata !7218, metadata !DIExpression()), !dbg !7257
  %add54 = add i64 %37, %38, !dbg !7292
  %size55 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call41, i64 0, i32 4, !dbg !7293
  %39 = load i64, i64* %size55, align 8, !dbg !7293
  %add56 = add i64 %add54, %39, !dbg !7294
  %offset57 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call43, i64 0, i32 3, !dbg !7295
  %40 = load i64, i64* %offset57, align 8, !dbg !7295
  %41 = load i64, i64* %lhsoffset, align 8, !dbg !7296
  call void @llvm.dbg.value(metadata i64 %41, metadata !7215, metadata !DIExpression()), !dbg !7257
  %add58 = add i64 %40, %41, !dbg !7297
  %size59 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call43, i64 0, i32 4, !dbg !7298
  %42 = load i64, i64* %size59, align 8, !dbg !7298
  %add60 = add i64 %add58, %42, !dbg !7299
  %cmp61 = icmp ugt i64 %add56, %add60, !dbg !7300
  br i1 %cmp61, label %if.then63, label %if.else75, !dbg !7301

if.then63:                                        ; preds = %if.end
  %inc = add i32 %k.0, 1, !dbg !7302
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7219, metadata !DIExpression()), !dbg !7257
  %43 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !7304
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %43, metadata !7208, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %43, metadata !7208, metadata !DIExpression()), !dbg !7225
  %base66 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %43, i64 0, i32 0, !dbg !7304
  %call70 = call fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %base66) #7, !dbg !7304
  %cmp71 = icmp ult i32 %inc, %call70, !dbg !7306
  br i1 %cmp71, label %if.end77, label %cleanup, !dbg !7307

if.else75:                                        ; preds = %if.end
  %inc76 = add i32 %j.0, 1, !dbg !7308
  call void @llvm.dbg.value(metadata i32 %inc76, metadata !7209, metadata !DIExpression()), !dbg !7225
  br label %if.end77

if.end77:                                         ; preds = %if.then63, %if.else75
  %j.1 = phi i32 [ %inc76, %if.else75 ], [ %j.0, %if.then63 ], !dbg !7309
  %k.1 = phi i32 [ %k.0, %if.else75 ], [ %inc, %if.then63 ], !dbg !7257
  call void @llvm.dbg.value(metadata i32 %k.1, metadata !7219, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !7209, metadata !DIExpression()), !dbg !7225
  br label %cleanup, !dbg !7310

cleanup:                                          ; preds = %if.then63, %if.end77
  %j.2 = phi i32 [ %j.1, %if.end77 ], [ %j.0, %if.then63 ], !dbg !7263
  %k.2 = phi i32 [ %k.1, %if.end77 ], [ %inc, %if.then63 ], !dbg !7302
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end77 ], [ false, %if.then63 ]
  call void @llvm.dbg.value(metadata i32 %k.2, metadata !7219, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i32 %j.2, metadata !7209, metadata !DIExpression()), !dbg !7225
  br i1 %cleanup.dest.slot.0, label %for.cond, label %for.end, !llvm.loop !7311

for.end:                                          ; preds = %for.cond, %cleanup
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8, !dbg !7313
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8, !dbg !7313
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8, !dbg !7313
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8, !dbg !7313
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8, !dbg !7313
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8, !dbg !7313
  br label %if.end81, !dbg !7314

if.else79:                                        ; preds = %lor.lhs.false19, %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 3311, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7315
  br label %if.end81

if.end81:                                         ; preds = %for.end, %if.else79, %if.then
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %lhsc, metadata !7207, metadata !DIExpression(DW_OP_deref)), !dbg !7225
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %lhsc) #7, !dbg !7316
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !7208, metadata !DIExpression(DW_OP_deref)), !dbg !7225
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !7317
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7318
  ret void, !dbg !7318
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7319 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7323, metadata !DIExpression()), !dbg !7325
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !7326
  call void @llvm.dbg.value(metadata i32 %call, metadata !7324, metadata !DIExpression()), !dbg !7325
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !7327
  %cmp = icmp eq i32 %call1, 3, !dbg !7329
  br i1 %cmp, label %if.then, label %if.end, !dbg !7330

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !7331
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7331
  %bf.load = load i64, i64* %0, align 8, !dbg !7331
  %1 = trunc i64 %bf.load to i32, !dbg !7331
  %bf.cast = and i32 %1, 65535, !dbg !7331
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !7324, metadata !DIExpression()), !dbg !7325
  br label %if.end, !dbg !7332

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !7325
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !7324, metadata !DIExpression()), !dbg !7325
  ret i32 %code.0, !dbg !7333
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7334 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7336, metadata !DIExpression()), !dbg !7337
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !7338
  %cmp = icmp ugt i32 %call, 2, !dbg !7340
  br i1 %cmp, label %if.then, label %return, !dbg !7341

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !7342
  br label %return, !dbg !7343

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !7344
  ret %union.tree_node* %retval.0, !dbg !7345
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !7346 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7348, metadata !DIExpression()), !dbg !7353
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !7354
  call void @llvm.dbg.value(metadata i32 %call, metadata !7349, metadata !DIExpression()), !dbg !7353
  switch i32 %call, label %if.else14 [
    i32 8, label %if.then3
    i32 6, label %if.else
    i32 1, label %if.then13
  ], !dbg !7355

if.then3:                                         ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #7, !dbg !7356
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7350, metadata !DIExpression()), !dbg !7358
  br label %cleanup, !dbg !7359

if.else:                                          ; preds = %entry
  %call5 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !7360
  %cond = icmp eq i32 %call5, 66, !dbg !7361
  br i1 %cond, label %sw.bb, label %sw.default, !dbg !7361

sw.bb:                                            ; preds = %if.else
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !7362
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7362
  %0 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !7362
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7350, metadata !DIExpression()), !dbg !7358
  br label %cleanup, !dbg !7364

sw.default:                                       ; preds = %if.else
  %call8 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !7365
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7365
  %1 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !7365
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7350, metadata !DIExpression()), !dbg !7358
  br label %cleanup, !dbg !7366

if.then13:                                        ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !7367
  br label %cleanup, !dbg !7369

if.else14:                                        ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !7370
  br label %cleanup, !dbg !7371

cleanup:                                          ; preds = %if.then3, %sw.default, %sw.bb, %if.else14, %if.then13
  %retval.0 = phi %union.tree_node* [ %2, %if.then13 ], [ %3, %if.else14 ], [ %call4, %if.then3 ], [ %1, %sw.default ], [ %0, %sw.bb ], !dbg !7372
  ret %union.tree_node* %retval.0, !dbg !7373
}

declare dso_local zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %vec_, %struct.constraint_expr* %obj_) unnamed_addr #0 !dbg !7374 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %vec_, metadata !7380, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %obj_, metadata !7381, metadata !DIExpression()), !dbg !7382
  %call = tail call fastcc i32 @VEC_ce_s_heap_reserve(%struct.VEC_ce_s_heap** %vec_, i32 1) #7, !dbg !7383
  %0 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %vec_, align 8, !dbg !7383
  %tobool = icmp eq %struct.VEC_ce_s_heap* %0, null, !dbg !7383
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7383

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %0, i64 0, i32 0, !dbg !7383
  br label %cond.end, !dbg !7383

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ce_s_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7383
  %call1 = tail call fastcc %struct.constraint_expr* @VEC_ce_s_base_quick_push(%struct.VEC_ce_s_base* %cond, %struct.constraint_expr* %obj_) #7, !dbg !7383
  ret %struct.constraint_expr* %call1, !dbg !7383
}

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @make_escape_constraint(%union.tree_node* %op) unnamed_addr #5 !dbg !7384 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !7386, metadata !DIExpression()), !dbg !7387
  tail call fastcc void @make_constraint_to(i32 3, %union.tree_node* %op) #7, !dbg !7388
  ret void, !dbg !7389
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_assign_cast_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !7390 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !7394, metadata !DIExpression()), !dbg !7398
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %s) #7, !dbg !7399
  %tobool = icmp eq i8 %call, 0, !dbg !7399
  br i1 %tobool, label %return, label %if.then, !dbg !7400

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %s) #7, !dbg !7401
  call void @llvm.dbg.value(metadata i32 %call1, metadata !7395, metadata !DIExpression()), !dbg !7402
  switch i32 %call1, label %lor.rhs [
    i32 116, label %lor.end
    i32 113, label %lor.end
    i32 118, label %lor.end
    i32 77, label %lor.end
  ], !dbg !7403

lor.rhs:                                          ; preds = %if.then
  br label %lor.end, !dbg !7404

lor.end:                                          ; preds = %if.then, %if.then, %if.then, %if.then, %lor.rhs
  %0 = phi i8 [ 1, %if.then ], [ 0, %lor.rhs ], [ 1, %if.then ], [ 1, %if.then ], [ 1, %if.then ]
  br label %return

return:                                           ; preds = %entry, %lor.end
  %retval.0 = phi i8 [ %0, %lor.end ], [ 0, %entry ], !dbg !7398
  ret i8 %retval.0, !dbg !7405
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7406 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7408, metadata !DIExpression()), !dbg !7409
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !7410
  ret %union.tree_node* %call, !dbg !7411
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7412 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7414, metadata !DIExpression()), !dbg !7415
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !7416
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !7417
  %0 = load i8, i8* %no, align 1, !dbg !7417
  %conv = zext i8 %0 to i32, !dbg !7418
  ret i32 %conv, !dbg !7419
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !7420 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7422, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32 %index, metadata !7423, metadata !DIExpression()), !dbg !7424
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !7425
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !7425
  %0 = load i8, i8* %no, align 1, !dbg !7425
  %conv = zext i8 %0 to i32, !dbg !7425
  %cmp = icmp ult i32 %conv, %index, !dbg !7425
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7425

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i32 2655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7425
  br label %cond.end, !dbg !7425

cond.end:                                         ; preds = %entry, %cond.true
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !7426
  %1 = bitcast %union.tree_node*** %ni to i8*, !dbg !7426
  %2 = load i8, i8* %1, align 8, !dbg !7426
  %conv3 = zext i8 %2 to i32, !dbg !7427
  %add = add i32 %conv3, %index, !dbg !7428
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !7429
  ret %union.tree_node* %call, !dbg !7430
}

declare dso_local zeroext i8 @parse_output_constraint(i8**, i32, i32, i32, i8*, i8*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_ninputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7431 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7433, metadata !DIExpression()), !dbg !7434
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !7435
  %0 = bitcast %union.tree_node*** %ni to i8*, !dbg !7435
  %1 = load i8, i8* %0, align 8, !dbg !7435
  %conv = zext i8 %1 to i32, !dbg !7436
  ret i32 %conv, !dbg !7437
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_input_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !7438 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7440, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata i32 %index, metadata !7441, metadata !DIExpression()), !dbg !7442
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !7443
  %0 = bitcast %union.tree_node*** %ni to i8*, !dbg !7443
  %1 = load i8, i8* %0, align 8, !dbg !7443
  %conv = zext i8 %1 to i32, !dbg !7443
  %cmp = icmp ult i32 %conv, %index, !dbg !7443
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7443

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i32 2622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7443
  br label %cond.end, !dbg !7443

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %index) #7, !dbg !7444
  ret %union.tree_node* %call, !dbg !7445
}

declare dso_local zeroext i8 @parse_input_constraint(i8**, i32, i32, i32, i32, i8**, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @get_constraint_for_1(%union.tree_node* %t, %struct.VEC_ce_s_heap** %results, i8 zeroext %address_p) unnamed_addr #5 !dbg !7446 {
entry:
  %temp = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !7450, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %results, metadata !7451, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i8 %address_p, metadata !7452, metadata !DIExpression()), !dbg !7454
  %0 = bitcast %struct.constraint_expr* %temp to i8*, !dbg !7455
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7455
  %1 = load i32, i32* @flag_delete_null_pointer_checks, align 4, !dbg !7456
  %tobool = icmp eq i32 %1, 0, !dbg !7456
  br i1 %tobool, label %entry.if.end_crit_edge, label %land.lhs.true, !dbg !7458

entry.if.end_crit_edge:                           ; preds = %entry
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7459
  %bf.load10.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !7461
  br label %if.end, !dbg !7458

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7462
  %bf.load = load i64, i64* %2, align 8, !dbg !7462
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !7463
  %cmp = icmp eq i64 %bf.cast5, 23, !dbg !7463
  br i1 %cmp, label %land.lhs.true1, label %lor.lhs.false, !dbg !7464

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call = tail call i32 @integer_zerop(%union.tree_node* %t) #6, !dbg !7465
  %tobool2 = icmp eq i32 %call, 0, !dbg !7465
  br i1 %tobool2, label %land.lhs.true1.lor.lhs.false_crit_edge, label %if.then, !dbg !7466

land.lhs.true1.lor.lhs.false_crit_edge:           ; preds = %land.lhs.true1
  %bf.load4.pre = load i64, i64* %2, align 8, !dbg !7467
  %.pre = and i64 %bf.load4.pre, 65535, !dbg !7468
  br label %lor.lhs.false, !dbg !7466

lor.lhs.false:                                    ; preds = %land.lhs.true1.lor.lhs.false_crit_edge, %land.lhs.true
  %bf.cast66.pre-phi = phi i64 [ %.pre, %land.lhs.true1.lor.lhs.false_crit_edge ], [ %bf.cast5, %land.lhs.true ], !dbg !7468
  %bf.load4 = phi i64 [ %bf.load4.pre, %land.lhs.true1.lor.lhs.false_crit_edge ], [ %bf.load, %land.lhs.true ], !dbg !7467
  %cmp7 = icmp eq i64 %bf.cast66.pre-phi, 51, !dbg !7468
  br i1 %cmp7, label %if.then, label %if.end, !dbg !7469

if.then:                                          ; preds = %land.lhs.true1, %lor.lhs.false
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 1, !dbg !7470
  store i32 0, i32* %var, align 4, !dbg !7472
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 0, !dbg !7473
  store i32 2, i32* %type, align 8, !dbg !7474
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 2, !dbg !7475
  store i64 0, i64* %offset, align 8, !dbg !7476
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %temp, metadata !7453, metadata !DIExpression(DW_OP_deref)), !dbg !7454
  %call8 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %temp) #7, !dbg !7477
  br label %cleanup, !dbg !7478

if.end:                                           ; preds = %entry.if.end_crit_edge, %lor.lhs.false
  %bf.load25 = phi i64 [ %bf.load10.pre, %entry.if.end_crit_edge ], [ %bf.load4, %lor.lhs.false ], !dbg !7461
  %bf.cast122 = and i64 %bf.load25, 65535, !dbg !7479
  %cmp13 = icmp eq i64 %bf.cast122, 28, !dbg !7479
  br i1 %cmp13, label %if.then14, label %if.end19, !dbg !7480

if.then14:                                        ; preds = %if.end
  %var15 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 1, !dbg !7481
  store i32 2, i32* %var15, align 4, !dbg !7483
  %type16 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 0, !dbg !7484
  store i32 0, i32* %type16, align 8, !dbg !7485
  %offset17 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 2, !dbg !7486
  store i64 0, i64* %offset17, align 8, !dbg !7487
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %temp, metadata !7453, metadata !DIExpression(DW_OP_deref)), !dbg !7454
  %call18 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %temp) #7, !dbg !7488
  br label %cleanup, !dbg !7489

if.end19:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast122, !dbg !7490
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7490
  switch i32 %3, label %sw.epilog56 [
    i32 10, label %sw.bb
    i32 4, label %sw.bb30
    i32 0, label %sw.bb46
    i32 3, label %sw.bb54
  ], !dbg !7491

sw.bb:                                            ; preds = %if.end19
  %cond1 = icmp eq i64 %bf.cast122, 121, !dbg !7492
  br i1 %cond1, label %sw.bb28, label %sw.epilog56, !dbg !7492

sw.bb28:                                          ; preds = %sw.bb
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7495
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7495
  tail call fastcc void @get_constraint_for_address_of(%union.tree_node* %4, %struct.VEC_ce_s_heap** %results) #7, !dbg !7497
  br label %cleanup, !dbg !7498

sw.bb30:                                          ; preds = %if.end19
  %5 = trunc i64 %bf.load25 to i16, !dbg !7499
  switch i16 %5, label %sw.epilog56 [
    i16 47, label %sw.bb35
    i16 45, label %sw.bb39
    i16 46, label %sw.bb39
    i16 41, label %sw.bb39
    i16 118, label %sw.bb40
  ], !dbg !7501

sw.bb35:                                          ; preds = %sw.bb30
  %operands37 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7502
  %6 = load %union.tree_node*, %union.tree_node** %operands37, align 8, !dbg !7502
  tail call fastcc void @get_constraint_for_1(%union.tree_node* %6, %struct.VEC_ce_s_heap** %results, i8 zeroext %address_p) #7, !dbg !7505
  tail call fastcc void @do_deref(%struct.VEC_ce_s_heap** %results) #7, !dbg !7506
  br label %cleanup, !dbg !7507

sw.bb39:                                          ; preds = %sw.bb30, %sw.bb30, %sw.bb30
  tail call fastcc void @get_constraint_for_component_ref(%union.tree_node* %t, %struct.VEC_ce_s_heap** %results, i8 zeroext %address_p) #7, !dbg !7508
  br label %cleanup, !dbg !7509

sw.bb40:                                          ; preds = %sw.bb30
  %operands42 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7510
  %7 = load %union.tree_node*, %union.tree_node** %operands42, align 8, !dbg !7510
  tail call fastcc void @get_constraint_for_1(%union.tree_node* %7, %struct.VEC_ce_s_heap** %results, i8 zeroext %address_p) #7, !dbg !7511
  br label %cleanup, !dbg !7512

sw.bb46:                                          ; preds = %if.end19
  %cond = icmp eq i64 %bf.cast122, 141, !dbg !7513
  br i1 %cond, label %sw.bb51, label %sw.epilog56, !dbg !7513

sw.bb51:                                          ; preds = %sw.bb46
  tail call fastcc void @get_constraint_for_ssa_var(%union.tree_node* %t, %struct.VEC_ce_s_heap** %results, i8 zeroext %address_p) #7, !dbg !7515
  br label %cleanup, !dbg !7518

sw.bb54:                                          ; preds = %if.end19
  tail call fastcc void @get_constraint_for_ssa_var(%union.tree_node* %t, %struct.VEC_ce_s_heap** %results, i8 zeroext %address_p) #7, !dbg !7519
  br label %cleanup, !dbg !7521

sw.epilog56:                                      ; preds = %if.end19, %sw.bb46, %sw.bb30, %sw.bb
  %type57 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 0, !dbg !7522
  store i32 2, i32* %type57, align 8, !dbg !7523
  %var58 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 1, !dbg !7524
  store i32 1, i32* %var58, align 4, !dbg !7525
  %offset59 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 2, !dbg !7526
  store i64 0, i64* %offset59, align 8, !dbg !7527
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %temp, metadata !7453, metadata !DIExpression(DW_OP_deref)), !dbg !7454
  %call60 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %temp) #7, !dbg !7528
  br label %cleanup, !dbg !7529

cleanup:                                          ; preds = %sw.epilog56, %sw.bb54, %sw.bb51, %sw.bb40, %sw.bb39, %sw.bb35, %sw.bb28, %if.then14, %if.then
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7529
  ret void, !dbg !7529
}

; Function Attrs: nounwind uwtable
define internal fastcc void @get_constraint_for_address_of(%union.tree_node* %t, %struct.VEC_ce_s_heap** %results) unnamed_addr #5 !dbg !7530 {
entry:
  %c = alloca %struct.constraint_expr*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !7532, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %results, metadata !7533, metadata !DIExpression()), !dbg !7536
  %0 = bitcast %struct.constraint_expr** %c to i8*, !dbg !7537
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7537
  tail call fastcc void @get_constraint_for_1(%union.tree_node* %t, %struct.VEC_ce_s_heap** %results, i8 zeroext 1) #7, !dbg !7538
  call void @llvm.dbg.value(metadata i32 0, metadata !7535, metadata !DIExpression()), !dbg !7536
  br label %for.cond, !dbg !7539

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !7541
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7535, metadata !DIExpression()), !dbg !7536
  %1 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !7542
  %tobool = icmp eq %struct.VEC_ce_s_heap* %1, null, !dbg !7542
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7542

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %1, i64 0, i32 0, !dbg !7542
  br label %cond.end, !dbg !7542

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_ce_s_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7542
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %c, metadata !7534, metadata !DIExpression(DW_OP_deref)), !dbg !7536
  %call = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %cond, i32 %i.0, %struct.constraint_expr** nonnull %c) #7, !dbg !7542
  %tobool1 = icmp eq i32 %call, 0, !dbg !7544
  br i1 %tobool1, label %for.end, label %for.body, !dbg !7544

for.body:                                         ; preds = %cond.end
  %2 = load %struct.constraint_expr*, %struct.constraint_expr** %c, align 8, !dbg !7545
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %2, metadata !7534, metadata !DIExpression()), !dbg !7536
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %2, i64 0, i32 0, !dbg !7548
  %3 = load i32, i32* %type, align 8, !dbg !7548
  %cmp = icmp eq i32 %3, 1, !dbg !7549
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %2, metadata !7534, metadata !DIExpression()), !dbg !7536
  br i1 %cmp, label %if.then, label %if.else, !dbg !7550

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !7551

if.else:                                          ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %storemerge = phi i32 [ 2, %if.else ], [ 0, %if.then ], !dbg !7552
  store i32 %storemerge, i32* %type, align 8, !dbg !7552
  %inc = add i32 %i.0, 1, !dbg !7553
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7535, metadata !DIExpression()), !dbg !7536
  br label %for.cond, !dbg !7554, !llvm.loop !7555

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7557
  ret void, !dbg !7557
}

; Function Attrs: nounwind uwtable
define internal fastcc void @get_constraint_for_component_ref(%union.tree_node* %t, %struct.VEC_ce_s_heap** %results, i8 zeroext %address_p) unnamed_addr #5 !dbg !7558 {
entry:
  %bitsize = alloca i64, align 8
  %bitmaxsize = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %temp = alloca %struct.constraint_expr, align 8
  %cexpr = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !7560, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %results, metadata !7561, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i8 %address_p, metadata !7562, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !7563, metadata !DIExpression()), !dbg !7579
  %0 = bitcast i64* %bitsize to i8*, !dbg !7580
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7580
  call void @llvm.dbg.value(metadata i64 -1, metadata !7564, metadata !DIExpression()), !dbg !7579
  store i64 -1, i64* %bitsize, align 8, !dbg !7581
  %1 = bitcast i64* %bitmaxsize to i8*, !dbg !7582
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7582
  call void @llvm.dbg.value(metadata i64 -1, metadata !7565, metadata !DIExpression()), !dbg !7579
  store i64 -1, i64* %bitmaxsize, align 8, !dbg !7583
  %2 = bitcast i64* %bitpos to i8*, !dbg !7584
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7584
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !7567, metadata !DIExpression()), !dbg !7579
  br label %while.cond, !dbg !7585

while.cond:                                       ; preds = %while.body, %entry
  %forzero.0 = phi %union.tree_node* [ %t, %entry ], [ %11, %while.body ], !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0, metadata !7567, metadata !DIExpression()), !dbg !7579
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %forzero.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7586
  %bf.load = load i64, i64* %3, align 8, !dbg !7586
  %bf.cast6 = and i64 %bf.load, 65535, !dbg !7586
  %4 = or i64 %bf.cast6, 2, !dbg !7586
  %5 = icmp eq i64 %4, 34, !dbg !7586
  %cmp11 = icmp eq i64 %bf.cast6, 36, !dbg !7586
  %or.cond18 = or i1 %5, %cmp11, !dbg !7586
  br i1 %or.cond18, label %while.end, label %lor.lhs.false12, !dbg !7586

lor.lhs.false12:                                  ; preds = %while.cond
  %cmp17 = icmp eq i64 %bf.cast6, 141, !dbg !7586
  br i1 %cmp17, label %land.lhs.true, label %land.rhs, !dbg !7586

land.lhs.true:                                    ; preds = %lor.lhs.false12
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %forzero.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7586
  %6 = bitcast i32* %var to i64**, !dbg !7586
  %7 = load i64*, i64** %6, align 8, !dbg !7586
  %bf.load19 = load i64, i64* %7, align 8, !dbg !7586
  %bf.cast2114 = and i64 %bf.load19, 65535, !dbg !7586
  %8 = or i64 %bf.cast2114, 2, !dbg !7586
  %9 = icmp eq i64 %8, 34, !dbg !7586
  %cmp38 = icmp eq i64 %bf.cast2114, 36, !dbg !7586
  %or.cond20 = or i1 %9, %cmp38, !dbg !7586
  br i1 %or.cond20, label %while.end, label %land.rhs, !dbg !7586

land.rhs:                                         ; preds = %land.lhs.true, %lor.lhs.false12
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast6, !dbg !7587
  %10 = load i32, i32* %arrayidx, align 4, !dbg !7587
  %cmp43 = icmp eq i32 %10, 1, !dbg !7587
  br i1 %cmp43, label %while.end, label %while.body, !dbg !7585

while.body:                                       ; preds = %land.rhs
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %forzero.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7588
  %11 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7588
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !7567, metadata !DIExpression()), !dbg !7579
  br label %while.cond, !dbg !7585, !llvm.loop !7589

while.end:                                        ; preds = %land.rhs, %while.cond, %land.lhs.true
  %forzero.0.lcssa = phi %union.tree_node* [ %forzero.0, %land.rhs ], [ %forzero.0, %while.cond ], [ %forzero.0, %land.lhs.true ], !dbg !7579
  %bf.cast6.lcssa = phi i64 [ %bf.cast6, %land.rhs ], [ %bf.cast6, %while.cond ], [ %bf.cast6, %land.lhs.true ], !dbg !7586
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %forzero.0.lcssa, metadata !7567, metadata !DIExpression()), !dbg !7579
  %arrayidx50 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast6.lcssa, !dbg !7590
  %12 = load i32, i32* %arrayidx50, align 4, !dbg !7590
  %cmp51 = icmp eq i32 %12, 1, !dbg !7590
  br i1 %cmp51, label %land.lhs.true52, label %if.end, !dbg !7591

land.lhs.true52:                                  ; preds = %while.end
  %call = tail call i32 @integer_zerop(%union.tree_node* %forzero.0.lcssa) #6, !dbg !7592
  %tobool = icmp eq i32 %call, 0, !dbg !7592
  br i1 %tobool, label %if.end, label %if.then, !dbg !7593

if.then:                                          ; preds = %land.lhs.true52
  %13 = bitcast %struct.constraint_expr* %temp to i8*, !dbg !7594
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8, !dbg !7594
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 2, !dbg !7595
  store i64 0, i64* %offset, align 8, !dbg !7596
  %var53 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 1, !dbg !7597
  store i32 7, i32* %var53, align 4, !dbg !7598
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %temp, i64 0, i32 0, !dbg !7599
  store i32 0, i32* %type, align 8, !dbg !7600
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %temp, metadata !7569, metadata !DIExpression(DW_OP_deref)), !dbg !7601
  %call54 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %temp) #7, !dbg !7602
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8, !dbg !7603
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true52, %while.end
  call void @llvm.dbg.value(metadata i64* %bitsize, metadata !7564, metadata !DIExpression(DW_OP_deref)), !dbg !7579
  call void @llvm.dbg.value(metadata i64* %bitmaxsize, metadata !7565, metadata !DIExpression(DW_OP_deref)), !dbg !7579
  call void @llvm.dbg.value(metadata i64* %bitpos, metadata !7566, metadata !DIExpression(DW_OP_deref)), !dbg !7579
  %call55 = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* %t, i64* nonnull %bitpos, i64* nonnull %bitsize, i64* nonnull %bitmaxsize) #6, !dbg !7604
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !7560, metadata !DIExpression()), !dbg !7579
  call fastcc void @get_constraint_for_1(%union.tree_node* %call55, %struct.VEC_ce_s_heap** %results, i8 zeroext 1) #7, !dbg !7605
  %14 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !7606
  %tobool56 = icmp eq %struct.VEC_ce_s_heap* %14, null, !dbg !7606
  br i1 %tobool56, label %cond.end, label %cond.true, !dbg !7606

cond.true:                                        ; preds = %if.end
  %base57 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %14, i64 0, i32 0, !dbg !7606
  br label %cond.end, !dbg !7606

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_ce_s_base* [ %base57, %cond.true ], [ null, %if.end ], !dbg !7606
  %call58 = call fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %cond) #7, !dbg !7606
  %cmp59 = icmp eq i32 %call58, 1, !dbg !7606
  br i1 %cmp59, label %cond.end62, label %cond.true60, !dbg !7606

cond.true60:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2973, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7606
  br label %cond.end62, !dbg !7606

cond.end62:                                       ; preds = %cond.end, %cond.true60
  %15 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !7607
  %tobool64 = icmp eq %struct.VEC_ce_s_heap* %15, null, !dbg !7607
  br i1 %tobool64, label %cond.end68, label %cond.true65, !dbg !7607

cond.true65:                                      ; preds = %cond.end62
  %base66 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %15, i64 0, i32 0, !dbg !7607
  br label %cond.end68, !dbg !7607

cond.end68:                                       ; preds = %cond.end62, %cond.true65
  %cond69 = phi %struct.VEC_ce_s_base* [ %base66, %cond.true65 ], [ null, %cond.end62 ], !dbg !7607
  %call70 = call fastcc %struct.constraint_expr* @VEC_ce_s_base_last(%struct.VEC_ce_s_base* %cond69) #7, !dbg !7607
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %call70, metadata !7568, metadata !DIExpression()), !dbg !7579
  %type71 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call70, i64 0, i32 0, !dbg !7608
  %16 = load i32, i32* %type71, align 8, !dbg !7608
  %cmp72 = icmp eq i32 %16, 0, !dbg !7609
  br i1 %cmp72, label %land.lhs.true73, label %if.else, !dbg !7610

land.lhs.true73:                                  ; preds = %cond.end68
  %var74 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call70, i64 0, i32 1, !dbg !7611
  %17 = load i32, i32* %var74, align 4, !dbg !7611
  %call75 = call fastcc %struct.variable_info* @get_varinfo(i32 %17) #7, !dbg !7612
  %is_full_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call75, i64 0, i32 1, !dbg !7613
  %bf.load76 = load i8, i8* %is_full_var, align 4, !dbg !7613
  %bf.clear77 = and i8 %bf.load76, 8, !dbg !7613
  %tobool79 = icmp eq i8 %bf.clear77, 0, !dbg !7612
  br i1 %tobool79, label %land.lhs.true73.if.else_crit_edge, label %if.then80, !dbg !7614

land.lhs.true73.if.else_crit_edge:                ; preds = %land.lhs.true73
  %.pre = load i32, i32* %type71, align 8, !dbg !7615
  br label %if.else, !dbg !7614

if.then80:                                        ; preds = %land.lhs.true73
  %offset81 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call70, i64 0, i32 2, !dbg !7616
  store i64 0, i64* %offset81, align 8, !dbg !7617
  br label %cleanup, !dbg !7618

if.else:                                          ; preds = %land.lhs.true73.if.else_crit_edge, %cond.end68
  %18 = phi i32 [ %.pre, %land.lhs.true73.if.else_crit_edge ], [ %16, %cond.end68 ], !dbg !7615
  %cmp83 = icmp eq i32 %18, 0, !dbg !7619
  br i1 %cmp83, label %if.then84, label %if.else174, !dbg !7620

if.then84:                                        ; preds = %if.else
  %19 = load i64, i64* %bitpos, align 8, !dbg !7621
  call void @llvm.dbg.value(metadata i64 %19, metadata !7566, metadata !DIExpression()), !dbg !7579
  %var85 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call70, i64 0, i32 1, !dbg !7622
  %20 = load i32, i32* %var85, align 4, !dbg !7622
  %call86 = call fastcc %struct.variable_info* @get_varinfo(i32 %20) #7, !dbg !7623
  %fullsize = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call86, i64 0, i32 5, !dbg !7624
  %21 = load i64, i64* %fullsize, align 8, !dbg !7624
  %cmp87 = icmp ult i64 %19, %21, !dbg !7625
  %22 = load i64, i64* %bitmaxsize, align 8, !dbg !7626
  call void @llvm.dbg.value(metadata i64 %22, metadata !7565, metadata !DIExpression()), !dbg !7579
  %cmp89 = icmp ne i64 %22, 0, !dbg !7627
  %or.cond = and i1 %cmp87, %cmp89, !dbg !7628
  br i1 %or.cond, label %if.then90, label %if.else154, !dbg !7628

if.then90:                                        ; preds = %if.then84
  %23 = bitcast %struct.constraint_expr* %cexpr to i8*, !dbg !7629
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8, !dbg !7629
  %24 = bitcast %struct.constraint_expr* %call70 to i8*, !dbg !7630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !7630
  %25 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !7631
  %tobool91 = icmp eq %struct.VEC_ce_s_heap* %25, null, !dbg !7631
  br i1 %tobool91, label %cond.end95, label %cond.true92, !dbg !7631

cond.true92:                                      ; preds = %if.then90
  %base93 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %25, i64 0, i32 0, !dbg !7631
  br label %cond.end95, !dbg !7631

cond.end95:                                       ; preds = %if.then90, %cond.true92
  %cond96 = phi %struct.VEC_ce_s_base* [ %base93, %cond.true92 ], [ null, %if.then90 ], !dbg !7631
  call fastcc void @VEC_ce_s_base_pop(%struct.VEC_ce_s_base* %cond96) #7, !dbg !7631
  %offset97 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %cexpr, i64 0, i32 2, !dbg !7632
  store i64 0, i64* %offset97, align 8, !dbg !7633
  %var98 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %cexpr, i64 0, i32 1, !dbg !7634
  %26 = load i32, i32* %var98, align 4, !dbg !7634
  %call99 = call fastcc %struct.variable_info* @get_varinfo(i32 %26) #7, !dbg !7636
  call void @llvm.dbg.value(metadata %struct.variable_info* %call99, metadata !7578, metadata !DIExpression()), !dbg !7637
  %tobool107 = icmp eq i8 %address_p, 0, !dbg !7638
  br i1 %tobool107, label %cond.end95.split.us, label %cond.end95.cond.end95.split_crit_edge, !dbg !7644

cond.end95.cond.end95.split_crit_edge:            ; preds = %cond.end95
  br label %for.cond, !dbg !7644

cond.end95.split.us:                              ; preds = %cond.end95
  br label %for.cond.us, !dbg !7644

for.cond.us:                                      ; preds = %for.inc.us, %cond.end95.split.us
  %curr.0.us = phi %struct.variable_info* [ %call99, %cond.end95.split.us ], [ %32, %for.inc.us ], !dbg !7645
  call void @llvm.dbg.value(metadata %struct.variable_info* %curr.0.us, metadata !7578, metadata !DIExpression()), !dbg !7637
  %tobool100.us = icmp eq %struct.variable_info* %curr.0.us, null, !dbg !7646
  br i1 %tobool100.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !7646

for.body.us:                                      ; preds = %for.cond.us
  %offset101.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.0.us, i64 0, i32 3, !dbg !7647
  %27 = load i64, i64* %offset101.us, align 8, !dbg !7647
  %size.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.0.us, i64 0, i32 4, !dbg !7648
  %28 = load i64, i64* %size.us, align 8, !dbg !7648
  %29 = load i64, i64* %bitpos, align 8, !dbg !7649
  call void @llvm.dbg.value(metadata i64 %29, metadata !7566, metadata !DIExpression()), !dbg !7579
  %30 = load i64, i64* %bitmaxsize, align 8, !dbg !7650
  call void @llvm.dbg.value(metadata i64 %30, metadata !7565, metadata !DIExpression()), !dbg !7579
  %call102.us = call fastcc zeroext i8 @ranges_overlap_p(i64 %27, i64 %28, i64 %29, i64 %30) #7, !dbg !7651
  %tobool103.us = icmp eq i8 %call102.us, 0, !dbg !7651
  br i1 %tobool103.us, label %for.inc.us, label %if.then104.us, !dbg !7652

if.then104.us:                                    ; preds = %for.body.us
  %id.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.0.us, i64 0, i32 0, !dbg !7653
  %31 = load i32, i32* %id.us, align 8, !dbg !7653
  store i32 %31, i32* %var98, align 4, !dbg !7654
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %cexpr, metadata !7572, metadata !DIExpression(DW_OP_deref)), !dbg !7637
  %call106.us = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %cexpr) #7, !dbg !7655
  br label %for.inc.us, !dbg !7656

for.inc.us:                                       ; preds = %if.then104.us, %for.body.us
  %next.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.0.us, i64 0, i32 2, !dbg !7657
  %32 = load %struct.variable_info*, %struct.variable_info** %next.us, align 8, !dbg !7657
  call void @llvm.dbg.value(metadata %struct.variable_info* %32, metadata !7578, metadata !DIExpression()), !dbg !7637
  br label %for.cond.us, !dbg !7658, !llvm.loop !7659

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !7661

for.cond:                                         ; preds = %for.inc, %cond.end95.cond.end95.split_crit_edge
  %curr.0 = phi %struct.variable_info* [ %call99, %cond.end95.cond.end95.split_crit_edge ], [ %38, %for.inc ], !dbg !7645
  call void @llvm.dbg.value(metadata %struct.variable_info* %curr.0, metadata !7578, metadata !DIExpression()), !dbg !7637
  %tobool100 = icmp eq %struct.variable_info* %curr.0, null, !dbg !7646
  br i1 %tobool100, label %for.end.us-lcssa.loopexit, label %for.body, !dbg !7646

for.body:                                         ; preds = %for.cond
  %offset101 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.0, i64 0, i32 3, !dbg !7647
  %33 = load i64, i64* %offset101, align 8, !dbg !7647
  %size = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.0, i64 0, i32 4, !dbg !7648
  %34 = load i64, i64* %size, align 8, !dbg !7648
  %35 = load i64, i64* %bitpos, align 8, !dbg !7649
  call void @llvm.dbg.value(metadata i64 %35, metadata !7566, metadata !DIExpression()), !dbg !7579
  %36 = load i64, i64* %bitmaxsize, align 8, !dbg !7650
  call void @llvm.dbg.value(metadata i64 %36, metadata !7565, metadata !DIExpression()), !dbg !7579
  %call102 = call fastcc zeroext i8 @ranges_overlap_p(i64 %33, i64 %34, i64 %35, i64 %36) #7, !dbg !7651
  %tobool103 = icmp eq i8 %call102, 0, !dbg !7651
  br i1 %tobool103, label %for.inc, label %if.then104, !dbg !7652

if.then104:                                       ; preds = %for.body
  %curr.0.lcssa22 = phi %struct.variable_info* [ %curr.0, %for.body ], !dbg !7645
  call void @llvm.dbg.value(metadata %struct.variable_info* %curr.0.lcssa22, metadata !7578, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata %struct.variable_info* %curr.0.lcssa22, metadata !7578, metadata !DIExpression()), !dbg !7637
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.0.lcssa22, i64 0, i32 0, !dbg !7653
  %37 = load i32, i32* %id, align 8, !dbg !7653
  store i32 %37, i32* %var98, align 4, !dbg !7654
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %cexpr, metadata !7572, metadata !DIExpression(DW_OP_deref)), !dbg !7637
  %call106 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %cexpr) #7, !dbg !7655
  br label %for.end.us-lcssa, !dbg !7656

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.0, i64 0, i32 2, !dbg !7657
  %38 = load %struct.variable_info*, %struct.variable_info** %next, align 8, !dbg !7657
  call void @llvm.dbg.value(metadata %struct.variable_info* %38, metadata !7578, metadata !DIExpression()), !dbg !7637
  br label %for.cond, !dbg !7658, !llvm.loop !7659

for.end.us-lcssa.loopexit:                        ; preds = %for.cond
  br label %for.end.us-lcssa, !dbg !7661

for.end.us-lcssa:                                 ; preds = %for.end.us-lcssa.loopexit, %if.then104
  br label %for.end, !dbg !7661

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  br i1 %tobool107, label %if.else135, label %land.lhs.true112, !dbg !7663

land.lhs.true112:                                 ; preds = %for.end
  %39 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !7664
  %tobool113 = icmp eq %struct.VEC_ce_s_heap* %39, null, !dbg !7664
  br i1 %tobool113, label %cond.end117, label %cond.true114, !dbg !7664

cond.true114:                                     ; preds = %land.lhs.true112
  %base115 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %39, i64 0, i32 0, !dbg !7664
  br label %cond.end117, !dbg !7664

cond.end117:                                      ; preds = %land.lhs.true112, %cond.true114
  %cond118 = phi %struct.VEC_ce_s_base* [ %base115, %cond.true114 ], [ null, %land.lhs.true112 ], !dbg !7664
  %call119 = call fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %cond118) #7, !dbg !7664
  %cmp120 = icmp eq i32 %call119, 0, !dbg !7665
  br i1 %cmp120, label %if.then122, label %if.else135, !dbg !7666

if.then122:                                       ; preds = %cond.end117
  %40 = load i32, i32* %var98, align 4, !dbg !7667
  %call124 = call fastcc %struct.variable_info* @get_varinfo(i32 %40) #7, !dbg !7669
  call void @llvm.dbg.value(metadata %struct.variable_info* %call124, metadata !7578, metadata !DIExpression()), !dbg !7637
  br label %while.cond125, !dbg !7670

while.cond125:                                    ; preds = %while.body129, %if.then122
  %curr.1 = phi %struct.variable_info* [ %call124, %if.then122 ], [ %41, %while.body129 ], !dbg !7671
  call void @llvm.dbg.value(metadata %struct.variable_info* %curr.1, metadata !7578, metadata !DIExpression()), !dbg !7637
  %next126 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.1, i64 0, i32 2, !dbg !7672
  %41 = load %struct.variable_info*, %struct.variable_info** %next126, align 8, !dbg !7672
  %cmp127 = icmp eq %struct.variable_info* %41, null, !dbg !7673
  br i1 %cmp127, label %while.end131, label %while.body129, !dbg !7670

while.body129:                                    ; preds = %while.cond125
  call void @llvm.dbg.value(metadata %struct.variable_info* %41, metadata !7578, metadata !DIExpression()), !dbg !7637
  br label %while.cond125, !dbg !7670, !llvm.loop !7674

while.end131:                                     ; preds = %while.cond125
  %curr.1.lcssa = phi %struct.variable_info* [ %curr.1, %while.cond125 ], !dbg !7671
  call void @llvm.dbg.value(metadata %struct.variable_info* %curr.1.lcssa, metadata !7578, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata %struct.variable_info* %curr.1.lcssa, metadata !7578, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata %struct.variable_info* %curr.1.lcssa, metadata !7578, metadata !DIExpression()), !dbg !7637
  %id132 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.1.lcssa, i64 0, i32 0, !dbg !7676
  %42 = load i32, i32* %id132, align 8, !dbg !7676
  store i32 %42, i32* %var98, align 4, !dbg !7677
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %cexpr, metadata !7572, metadata !DIExpression(DW_OP_deref)), !dbg !7637
  %call134 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %cexpr) #7, !dbg !7678
  br label %if.end153, !dbg !7679

if.else135:                                       ; preds = %for.end, %cond.end117
  %43 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %results, align 8, !dbg !7680
  %tobool136 = icmp eq %struct.VEC_ce_s_heap* %43, null, !dbg !7680
  br i1 %tobool136, label %cond.end140, label %cond.true137, !dbg !7680

cond.true137:                                     ; preds = %if.else135
  %base138 = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %43, i64 0, i32 0, !dbg !7680
  br label %cond.end140, !dbg !7680

cond.end140:                                      ; preds = %if.else135, %cond.true137
  %cond141 = phi %struct.VEC_ce_s_base* [ %base138, %cond.true137 ], [ null, %if.else135 ], !dbg !7680
  %call142 = call fastcc i32 @VEC_ce_s_base_length(%struct.VEC_ce_s_base* %cond141) #7, !dbg !7680
  %cmp143 = icmp eq i32 %call142, 0, !dbg !7680
  br i1 %cmp143, label %lor.lhs.false145, label %if.end153, !dbg !7680

lor.lhs.false145:                                 ; preds = %cond.end140
  %call146 = call fastcc zeroext i8 @ref_contains_array_ref(%union.tree_node* %t) #7, !dbg !7680
  %tobool148 = icmp eq i8 %call146, 0, !dbg !7680
  br i1 %tobool148, label %cond.true149, label %if.end153, !dbg !7680

cond.true149:                                     ; preds = %lor.lhs.false145
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 3027, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7680
  br label %if.end153, !dbg !7680

if.end153:                                        ; preds = %lor.lhs.false145, %cond.end140, %cond.true149, %while.end131
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8, !dbg !7681
  br label %cleanup, !dbg !7682

if.else154:                                       ; preds = %if.then84
  call void @llvm.dbg.value(metadata i64 %22, metadata !7565, metadata !DIExpression()), !dbg !7579
  %cmp155 = icmp eq i64 %22, 0, !dbg !7683
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7685
  %tobool158 = icmp ne %struct._IO_FILE* %44, null, !dbg !7685
  br i1 %cmp155, label %if.then157, label %if.else164, !dbg !7686

if.then157:                                       ; preds = %if.else154
  br i1 %tobool158, label %land.lhs.true159, label %cleanup, !dbg !7687

land.lhs.true159:                                 ; preds = %if.then157
  %45 = load i32, i32* @dump_flags, align 4, !dbg !7690
  %and = and i32 %45, 8, !dbg !7691
  %tobool160 = icmp eq i32 %and, 0, !dbg !7691
  br i1 %tobool160, label %cleanup, label %if.then161, !dbg !7692

if.then161:                                       ; preds = %land.lhs.true159
  %call162 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %44, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !7693
  br label %cleanup, !dbg !7693

if.else164:                                       ; preds = %if.else154
  br i1 %tobool158, label %land.lhs.true166, label %cleanup, !dbg !7694

land.lhs.true166:                                 ; preds = %if.else164
  %46 = load i32, i32* @dump_flags, align 4, !dbg !7696
  %and167 = and i32 %46, 8, !dbg !7697
  %tobool168 = icmp eq i32 %and167, 0, !dbg !7697
  br i1 %tobool168, label %cleanup, label %if.then169, !dbg !7698

if.then169:                                       ; preds = %land.lhs.true166
  %call170 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %44, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.64, i64 0, i64 0)) #6, !dbg !7699
  br label %cleanup, !dbg !7699

if.else174:                                       ; preds = %if.else
  %cmp176 = icmp eq i32 %18, 1, !dbg !7700
  br i1 %cmp176, label %if.then178, label %if.else224, !dbg !7702

if.then178:                                       ; preds = %if.else174
  %47 = load i64, i64* %bitpos, align 8, !dbg !7703
  call void @llvm.dbg.value(metadata i64 %47, metadata !7566, metadata !DIExpression()), !dbg !7579
  %cmp179 = icmp eq i64 %47, -1, !dbg !7706
  br i1 %cmp179, label %if.then219, label %lor.lhs.false181, !dbg !7707

lor.lhs.false181:                                 ; preds = %if.then178
  %48 = load i64, i64* %bitsize, align 8, !dbg !7708
  call void @llvm.dbg.value(metadata i64 %48, metadata !7564, metadata !DIExpression()), !dbg !7579
  %49 = load i64, i64* %bitmaxsize, align 8, !dbg !7709
  call void @llvm.dbg.value(metadata i64 %49, metadata !7565, metadata !DIExpression()), !dbg !7579
  %cmp182 = icmp eq i64 %48, %49, !dbg !7710
  br i1 %cmp182, label %lor.lhs.false184, label %if.then219, !dbg !7711

lor.lhs.false184:                                 ; preds = %lor.lhs.false181
  %type185 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7712
  %50 = bitcast %union.tree_node** %type185 to i64**, !dbg !7712
  %51 = load i64*, i64** %50, align 8, !dbg !7712
  %bf.load187 = load i64, i64* %51, align 8, !dbg !7712
  %bf.cast18910 = and i64 %bf.load187, 65535, !dbg !7712
  %cmp190 = icmp eq i64 %bf.cast18910, 15, !dbg !7712
  br i1 %cmp190, label %if.then219, label %lor.lhs.false192, !dbg !7712

lor.lhs.false192:                                 ; preds = %lor.lhs.false184
  %cmp199 = icmp eq i64 %bf.cast18910, 16, !dbg !7712
  br i1 %cmp199, label %if.then219, label %lor.lhs.false201, !dbg !7712

lor.lhs.false201:                                 ; preds = %lor.lhs.false192
  %cmp208 = icmp eq i64 %bf.cast18910, 17, !dbg !7712
  br i1 %cmp208, label %if.then219, label %lor.lhs.false210, !dbg !7712

lor.lhs.false210:                                 ; preds = %lor.lhs.false201
  %cmp217 = icmp eq i64 %bf.cast18910, 18, !dbg !7712
  br i1 %cmp217, label %if.then219, label %if.else221, !dbg !7713

if.then219:                                       ; preds = %lor.lhs.false181, %lor.lhs.false210, %lor.lhs.false201, %lor.lhs.false192, %lor.lhs.false184, %if.then178
  %offset220 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call70, i64 0, i32 2, !dbg !7714
  store i64 -9223372036854775808, i64* %offset220, align 8, !dbg !7715
  br label %cleanup, !dbg !7716

if.else221:                                       ; preds = %lor.lhs.false210
  call void @llvm.dbg.value(metadata i64 %47, metadata !7566, metadata !DIExpression()), !dbg !7579
  %offset222 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call70, i64 0, i32 2, !dbg !7717
  store i64 %47, i64* %offset222, align 8, !dbg !7718
  br label %cleanup

if.else224:                                       ; preds = %if.else174
  %cmp226 = icmp eq i32 %18, 2, !dbg !7719
  br i1 %cmp226, label %if.then228, label %if.else232, !dbg !7721

if.then228:                                       ; preds = %if.else224
  store i32 0, i32* %type71, align 8, !dbg !7722
  %var230 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call70, i64 0, i32 1, !dbg !7724
  store i32 1, i32* %var230, align 4, !dbg !7725
  %offset231 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %call70, i64 0, i32 2, !dbg !7726
  store i64 0, i64* %offset231, align 8, !dbg !7727
  br label %cleanup, !dbg !7728

if.else232:                                       ; preds = %if.else224
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 3060, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7729
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true159, %land.lhs.true166, %if.then80, %if.else221, %if.then219, %if.else232, %if.then228, %if.end153, %if.else164, %if.then169, %if.then157, %if.then161, %if.then
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7730
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7730
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7730
  ret void, !dbg !7730
}

; Function Attrs: nounwind uwtable
define internal fastcc void @get_constraint_for_ssa_var(%union.tree_node* %t, %struct.VEC_ce_s_heap** %results, i8 zeroext %address_p) unnamed_addr #5 !dbg !7731 {
entry:
  %cexpr = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !7733, metadata !DIExpression()), !dbg !7738
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %results, metadata !7734, metadata !DIExpression()), !dbg !7738
  call void @llvm.dbg.value(metadata i8 %address_p, metadata !7735, metadata !DIExpression()), !dbg !7738
  %0 = bitcast %struct.constraint_expr* %cexpr to i8*, !dbg !7739
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7739
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7740
  %bf.load = load i64, i64* %1, align 8, !dbg !7740
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7740
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !7740
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !7740

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 34, !dbg !7740
  br i1 %cmp5, label %cond.end, label %lor.lhs.false6, !dbg !7740

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 36, !dbg !7740
  br i1 %cmp11, label %cond.end, label %lor.lhs.false12, !dbg !7740

lor.lhs.false12:                                  ; preds = %lor.lhs.false6
  %cmp17 = icmp eq i64 %bf.cast1, 141, !dbg !7740
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false39, !dbg !7740

land.lhs.true:                                    ; preds = %lor.lhs.false12
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7740
  %2 = bitcast i32* %var to i64**, !dbg !7740
  %3 = load i64*, i64** %2, align 8, !dbg !7740
  %bf.load19 = load i64, i64* %3, align 8, !dbg !7740
  %bf.cast219 = and i64 %bf.load19, 65535, !dbg !7740
  %cmp22 = icmp eq i64 %bf.cast219, 32, !dbg !7740
  br i1 %cmp22, label %cond.end, label %lor.lhs.false23, !dbg !7740

lor.lhs.false23:                                  ; preds = %land.lhs.true
  %cmp30 = icmp eq i64 %bf.cast219, 34, !dbg !7740
  br i1 %cmp30, label %cond.end, label %lor.lhs.false31, !dbg !7740

lor.lhs.false31:                                  ; preds = %lor.lhs.false23
  %cmp38 = icmp eq i64 %bf.cast219, 36, !dbg !7740
  br i1 %cmp38, label %cond.end, label %lor.lhs.false39, !dbg !7740

lor.lhs.false39:                                  ; preds = %lor.lhs.false31, %lor.lhs.false12
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1, !dbg !7740
  %4 = load i32, i32* %arrayidx, align 4, !dbg !7740
  %cmp44 = icmp eq i32 %4, 3, !dbg !7740
  br i1 %cmp44, label %cond.end, label %cond.true, !dbg !7740

cond.true:                                        ; preds = %lor.lhs.false39
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2699, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7740
  %bf.load46.pre = load i64, i64* %1, align 8, !dbg !7741
  br label %cond.end, !dbg !7740

cond.end:                                         ; preds = %entry, %lor.lhs.false, %lor.lhs.false6, %land.lhs.true, %lor.lhs.false23, %lor.lhs.false31, %lor.lhs.false39, %cond.true
  %bf.load60 = phi i64 [ %bf.load, %entry ], [ %bf.load, %lor.lhs.false ], [ %bf.load, %lor.lhs.false6 ], [ %bf.load, %land.lhs.true ], [ %bf.load, %lor.lhs.false23 ], [ %bf.load, %lor.lhs.false31 ], [ %bf.load, %lor.lhs.false39 ], [ %bf.load46.pre, %cond.true ], !dbg !7741
  %bf.cast485 = and i64 %bf.load60, 65535, !dbg !7743
  %cmp49 = icmp eq i64 %bf.cast485, 141, !dbg !7743
  br i1 %cmp49, label %land.lhs.true50, label %if.end, !dbg !7744

land.lhs.true50:                                  ; preds = %cond.end
  %var52 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7745
  %5 = bitcast i32* %var52 to i64**, !dbg !7745
  %6 = load i64*, i64** %5, align 8, !dbg !7745
  %bf.load54 = load i64, i64* %6, align 8, !dbg !7745
  %bf.cast567 = and i64 %bf.load54, 65535, !dbg !7746
  %cmp57 = icmp eq i64 %bf.cast567, 34, !dbg !7746
  %7 = bitcast i64* %6 to %union.tree_node*, !dbg !7747
  br i1 %cmp57, label %land.lhs.true58, label %if.end, !dbg !7747

land.lhs.true58:                                  ; preds = %land.lhs.true50
  %bf.cast628 = and i64 %bf.load60, 4294967296, !dbg !7748
  %tobool = icmp eq i64 %bf.cast628, 0, !dbg !7748
  br i1 %tobool, label %if.end, label %if.then, !dbg !7749

if.then:                                          ; preds = %land.lhs.true58
  tail call fastcc void @get_constraint_for_ssa_var(%union.tree_node* %7, %struct.VEC_ce_s_heap** %results, i8 zeroext %address_p) #7, !dbg !7750
  br label %cleanup, !dbg !7752

if.end:                                           ; preds = %land.lhs.true58, %land.lhs.true50, %cond.end
  %call = tail call fastcc %struct.variable_info* @get_vi_for_tree(%union.tree_node* %t) #7, !dbg !7753
  call void @llvm.dbg.value(metadata %struct.variable_info* %call, metadata !7737, metadata !DIExpression()), !dbg !7738
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 0, !dbg !7754
  %8 = load i32, i32* %id, align 8, !dbg !7754
  %var65 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %cexpr, i64 0, i32 1, !dbg !7755
  store i32 %8, i32* %var65, align 4, !dbg !7756
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %cexpr, i64 0, i32 0, !dbg !7757
  store i32 0, i32* %type, align 8, !dbg !7758
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %cexpr, i64 0, i32 2, !dbg !7759
  store i64 0, i64* %offset, align 8, !dbg !7760
  %cmp67 = icmp eq i32 %8, 1, !dbg !7761
  br i1 %cmp67, label %land.lhs.true68, label %if.end78, !dbg !7763

land.lhs.true68:                                  ; preds = %if.end
  %bf.load70 = load i64, i64* %1, align 8, !dbg !7764
  %bf.cast736 = and i64 %bf.load70, 1048576, !dbg !7764
  %tobool74 = icmp eq i64 %bf.cast736, 0, !dbg !7764
  br i1 %tobool74, label %if.end78, label %if.then75, !dbg !7765

if.then75:                                        ; preds = %land.lhs.true68
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2719, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7766
  store i32 2, i32* %type, align 8, !dbg !7768
  store i32 2, i32* %var65, align 4, !dbg !7769
  br label %if.end78, !dbg !7770

if.end78:                                         ; preds = %land.lhs.true68, %if.then75, %if.end
  %tobool79 = icmp eq i8 %address_p, 0, !dbg !7771
  br i1 %tobool79, label %land.lhs.true80, label %if.end91, !dbg !7773

land.lhs.true80:                                  ; preds = %if.end78
  %is_full_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 1, !dbg !7774
  %bf.load81 = load i8, i8* %is_full_var, align 4, !dbg !7774
  %bf.clear83 = and i8 %bf.load81, 8, !dbg !7774
  %tobool85 = icmp eq i8 %bf.clear83, 0, !dbg !7775
  br i1 %tobool85, label %for.cond.preheader, label %if.end91, !dbg !7776

for.cond.preheader:                               ; preds = %land.lhs.true80
  br label %for.cond, !dbg !7777

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %vi.0 = phi %struct.variable_info* [ %10, %for.body ], [ %call, %for.cond.preheader ], !dbg !7738
  call void @llvm.dbg.value(metadata %struct.variable_info* %vi.0, metadata !7737, metadata !DIExpression()), !dbg !7738
  %tobool87 = icmp eq %struct.variable_info* %vi.0, null, !dbg !7777
  br i1 %tobool87, label %cleanup.loopexit, label %for.body, !dbg !7777

for.body:                                         ; preds = %for.cond
  %id88 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %vi.0, i64 0, i32 0, !dbg !7780
  %9 = load i32, i32* %id88, align 8, !dbg !7780
  store i32 %9, i32* %var65, align 4, !dbg !7783
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %cexpr, metadata !7736, metadata !DIExpression(DW_OP_deref)), !dbg !7738
  %call90 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %cexpr) #7, !dbg !7784
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %vi.0, i64 0, i32 2, !dbg !7785
  %10 = load %struct.variable_info*, %struct.variable_info** %next, align 8, !dbg !7785
  call void @llvm.dbg.value(metadata %struct.variable_info* %10, metadata !7737, metadata !DIExpression()), !dbg !7738
  br label %for.cond, !dbg !7786, !llvm.loop !7787

if.end91:                                         ; preds = %land.lhs.true80, %if.end78
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %cexpr, metadata !7736, metadata !DIExpression(DW_OP_deref)), !dbg !7738
  %call92 = call fastcc %struct.constraint_expr* @VEC_ce_s_heap_safe_push(%struct.VEC_ce_s_heap** %results, %struct.constraint_expr* nonnull %cexpr) #7, !dbg !7789
  br label %cleanup, !dbg !7790

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !7790

cleanup:                                          ; preds = %cleanup.loopexit, %if.end91, %if.then
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !7790
  ret void, !dbg !7790
}

declare dso_local %union.tree_node* @get_ref_base_and_extent(%union.tree_node*, i64*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ranges_overlap_p(i64 %pos1, i64 %size1, i64 %pos2, i64 %size2) unnamed_addr #0 !dbg !7791 {
entry:
  call void @llvm.dbg.value(metadata i64 %pos1, metadata !7795, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i64 %size1, metadata !7796, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i64 %pos2, metadata !7797, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i64 %size2, metadata !7798, metadata !DIExpression()), !dbg !7799
  %cmp = icmp ult i64 %pos1, %pos2, !dbg !7800
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !7802

land.lhs.true:                                    ; preds = %entry
  %cmp1 = icmp eq i64 %size2, -1, !dbg !7803
  %add = add i64 %pos2, %size2, !dbg !7804
  %cmp2 = icmp ugt i64 %add, %pos1, !dbg !7805
  %or.cond = or i1 %cmp1, %cmp2, !dbg !7806
  br i1 %or.cond, label %return, label %if.end, !dbg !7806

if.end:                                           ; preds = %entry, %land.lhs.true
  %cmp3 = icmp ult i64 %pos2, %pos1, !dbg !7807
  br i1 %cmp3, label %if.end10, label %land.lhs.true4, !dbg !7809

land.lhs.true4:                                   ; preds = %if.end
  %cmp5 = icmp eq i64 %size1, -1, !dbg !7810
  %add7 = add i64 %pos1, %size1, !dbg !7811
  %cmp8 = icmp ugt i64 %add7, %pos2, !dbg !7812
  %or.cond1 = or i1 %cmp5, %cmp8, !dbg !7813
  br i1 %or.cond1, label %return, label %if.end10, !dbg !7813

if.end10:                                         ; preds = %if.end, %land.lhs.true4
  br label %return, !dbg !7814

return:                                           ; preds = %land.lhs.true4, %land.lhs.true, %if.end10
  %retval.0 = phi i8 [ 0, %if.end10 ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true4 ], !dbg !7799
  ret i8 %retval.0, !dbg !7815
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ref_contains_array_ref(%union.tree_node* %ref) unnamed_addr #0 !dbg !7816 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !7818, metadata !DIExpression()), !dbg !7819
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %ref) #7, !dbg !7820
  %tobool = icmp eq i8 %call, 0, !dbg !7820
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7820

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i64 0, i64 0), i32 1161, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7820
  br label %cond.end, !dbg !7820

cond.end:                                         ; preds = %entry, %cond.true
  br label %do.body, !dbg !7821

do.body:                                          ; preds = %if.end, %cond.end
  %ref.addr.0 = phi %union.tree_node* [ %ref, %cond.end ], [ %1, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.addr.0, metadata !7818, metadata !DIExpression()), !dbg !7819
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7822
  %bf.load = load i64, i64* %0, align 8, !dbg !7822
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7825
  %cmp = icmp eq i64 %bf.cast1, 45, !dbg !7825
  br i1 %cmp, label %return, label %if.end, !dbg !7826

if.end:                                           ; preds = %do.body
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7827
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7827
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7818, metadata !DIExpression()), !dbg !7819
  %call1 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %1) #7, !dbg !7828
  %tobool2 = icmp eq i8 %call1, 0, !dbg !7829
  br i1 %tobool2, label %return, label %do.body, !dbg !7829, !llvm.loop !7830

return:                                           ; preds = %if.end, %do.body
  %retval.0 = phi i8 [ 1, %do.body ], [ 0, %if.end ], !dbg !7819
  ret i8 %retval.0, !dbg !7832
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !7833 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !7835, metadata !DIExpression()), !dbg !7836
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7837
  %bf.load = load i64, i64* %0, align 8, !dbg !7837
  %1 = trunc i64 %bf.load to i16, !dbg !7837
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !7838

sw.default:                                       ; preds = %entry
  br label %return, !dbg !7839

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !7841
  ret i8 %retval.0, !dbg !7842
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !7843 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7847, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i32 %index, metadata !7848, metadata !DIExpression()), !dbg !7849
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !7850
  %0 = load i32, i32* %capacity, align 8, !dbg !7850
  %cmp = icmp ult i32 %0, %index, !dbg !7850
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7850

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7850
  br label %cond.end, !dbg !7850

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !7851
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !7851
  ret %struct.phi_arg_d* %arrayidx, !dbg !7852
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !7853 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7855, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.value(metadata i32 %i, metadata !7856, metadata !DIExpression()), !dbg !7857
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !7858
  %tobool = icmp eq i8 %call, 0, !dbg !7858
  br i1 %tobool, label %return, label %if.then, !dbg !7860

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !7861
  %idxprom = zext i32 %i to i64, !dbg !7861
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !7861
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7861
  br label %return, !dbg !7863

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !7864
  ret %union.tree_node* %retval.0, !dbg !7865
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7866 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7868, metadata !DIExpression()), !dbg !7869
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !7870
  %cmp = icmp eq i32 %call, 0, !dbg !7871
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !7872

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !7873
  %cmp2 = icmp ult i32 %call1, 10, !dbg !7874
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !7875
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7876 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7880, metadata !DIExpression()), !dbg !7882
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !7883
  %idxprom = zext i32 %call to i64, !dbg !7884
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !7884
  %0 = load i64, i64* %arrayidx, align 8, !dbg !7884
  call void @llvm.dbg.value(metadata i64 %0, metadata !7881, metadata !DIExpression()), !dbg !7882
  %cmp = icmp eq i64 %0, 0, !dbg !7885
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7885

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7885
  br label %cond.end, !dbg !7885

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !7886
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !7887
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !7888
  ret %union.tree_node** %2, !dbg !7889
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7890 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7894, metadata !DIExpression()), !dbg !7895
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !7896
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !7897
  ret i32 %call1, !dbg !7898
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !7899 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !7903, metadata !DIExpression()), !dbg !7904
  %idxprom = zext i32 %code to i64, !dbg !7905
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !7905
  %0 = load i32, i32* %arrayidx, align 4, !dbg !7905
  ret i32 %0, !dbg !7906
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constraint_expr* @VEC_ce_s_base_index(%struct.VEC_ce_s_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !7907 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_base* %vec_, metadata !7911, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7912, metadata !DIExpression()), !dbg !7913
  br label %land.end, !dbg !7914

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !7914
  %arrayidx = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7914
  ret %struct.constraint_expr* %arrayidx, !dbg !7914
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.variable_info* @first_or_preceding_vi_for_offset(%struct.variable_info* %start, i64 %offset) unnamed_addr #5 !dbg !7915 {
entry:
  call void @llvm.dbg.value(metadata %struct.variable_info* %start, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i64 %offset, metadata !7918, metadata !DIExpression()), !dbg !7919
  %offset1 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %start, i64 0, i32 3, !dbg !7920
  %0 = load i64, i64* %offset1, align 8, !dbg !7920
  %cmp = icmp ugt i64 %0, %offset, !dbg !7922
  br i1 %cmp, label %if.then, label %if.end, !dbg !7923

if.then:                                          ; preds = %entry
  %decl = getelementptr inbounds %struct.variable_info, %struct.variable_info* %start, i64 0, i32 7, !dbg !7924
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7924
  %call = tail call fastcc %struct.variable_info* @lookup_vi_for_tree(%union.tree_node* %1) #7, !dbg !7925
  call void @llvm.dbg.value(metadata %struct.variable_info* %call, metadata !7917, metadata !DIExpression()), !dbg !7919
  br label %if.end, !dbg !7926

if.end:                                           ; preds = %if.then, %entry
  %start.addr.0 = phi %struct.variable_info* [ %call, %if.then ], [ %start, %entry ]
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.0, metadata !7917, metadata !DIExpression()), !dbg !7919
  br label %while.cond, !dbg !7927

while.cond:                                       ; preds = %while.body, %if.end
  %start.addr.1 = phi %struct.variable_info* [ %start.addr.0, %if.end ], [ %2, %while.body ], !dbg !7919
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.1, metadata !7917, metadata !DIExpression()), !dbg !7919
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %start.addr.1, i64 0, i32 2, !dbg !7928
  %2 = load %struct.variable_info*, %struct.variable_info** %next, align 8, !dbg !7928
  %tobool = icmp eq %struct.variable_info* %2, null, !dbg !7929
  br i1 %tobool, label %while.end, label %land.lhs.true, !dbg !7930

land.lhs.true:                                    ; preds = %while.cond
  %offset2 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %start.addr.1, i64 0, i32 3, !dbg !7931
  %3 = load i64, i64* %offset2, align 8, !dbg !7931
  %cmp3 = icmp ugt i64 %3, %offset, !dbg !7932
  br i1 %cmp3, label %while.end, label %land.rhs, !dbg !7933

land.rhs:                                         ; preds = %land.lhs.true
  %sub = sub i64 %offset, %3, !dbg !7934
  %size = getelementptr inbounds %struct.variable_info, %struct.variable_info* %start.addr.1, i64 0, i32 4, !dbg !7935
  %4 = load i64, i64* %size, align 8, !dbg !7935
  %cmp5 = icmp ult i64 %sub, %4, !dbg !7936
  br i1 %cmp5, label %while.end, label %while.body, !dbg !7927

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %struct.variable_info* %2, metadata !7917, metadata !DIExpression()), !dbg !7919
  br label %while.cond, !dbg !7927, !llvm.loop !7937

while.end:                                        ; preds = %land.rhs, %land.lhs.true, %while.cond
  %start.addr.1.lcssa = phi %struct.variable_info* [ %start.addr.1, %land.rhs ], [ %start.addr.1, %land.lhs.true ], [ %start.addr.1, %while.cond ], !dbg !7919
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.1.lcssa, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.1.lcssa, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.1.lcssa, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.1.lcssa, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.1.lcssa, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.1.lcssa, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.1.lcssa, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.1.lcssa, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata %struct.variable_info* %start.addr.1.lcssa, metadata !7917, metadata !DIExpression()), !dbg !7919
  ret %struct.variable_info* %start.addr.1.lcssa, !dbg !7939
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constraint_expr* @VEC_ce_s_base_replace(%struct.VEC_ce_s_base* %vec_, i32 %ix_, %struct.constraint_expr* %obj_) unnamed_addr #0 !dbg !7940 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_base* %vec_, metadata !7944, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7945, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %obj_, metadata !7946, metadata !DIExpression()), !dbg !7948
  %idxprom = zext i32 %ix_ to i64, !dbg !7949
  %arrayidx = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7949
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %arrayidx, metadata !7947, metadata !DIExpression()), !dbg !7948
  %tobool = icmp eq %struct.constraint_expr* %obj_, null, !dbg !7950
  br i1 %tobool, label %if.end, label %if.then, !dbg !7949

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.constraint_expr* %arrayidx to i8*, !dbg !7950
  %1 = bitcast %struct.constraint_expr* %obj_ to i8*, !dbg !7950
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !7950
  br label %if.end, !dbg !7950

if.end:                                           ; preds = %entry, %if.then
  ret %struct.constraint_expr* %arrayidx, !dbg !7949
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7952 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7954, metadata !DIExpression()), !dbg !7955
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !7956
  ret %union.tree_node* %call, !dbg !7957
}

; Function Attrs: nounwind uwtable
define internal fastcc void @make_constraint_to(i32 %id, %union.tree_node* %op) unnamed_addr #5 !dbg !7958 {
entry:
  %rhsc = alloca %struct.VEC_ce_s_heap*, align 8
  %c = alloca %struct.constraint_expr*, align 8
  %includes = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata i32 %id, metadata !7962, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !7963, metadata !DIExpression()), !dbg !7968
  %0 = bitcast %struct.VEC_ce_s_heap** %rhsc to i8*, !dbg !7969
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7969
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* null, metadata !7964, metadata !DIExpression()), !dbg !7968
  store %struct.VEC_ce_s_heap* null, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !7970
  %1 = bitcast %struct.constraint_expr** %c to i8*, !dbg !7971
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7971
  %2 = bitcast %struct.constraint_expr* %includes to i8*, !dbg !7972
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7972
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %includes, i64 0, i32 1, !dbg !7973
  store i32 %id, i32* %var, align 4, !dbg !7974
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %includes, i64 0, i32 2, !dbg !7975
  store i64 0, i64* %offset, align 8, !dbg !7976
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %includes, i64 0, i32 0, !dbg !7977
  store i32 0, i32* %type, align 8, !dbg !7978
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !7964, metadata !DIExpression(DW_OP_deref)), !dbg !7968
  call fastcc void @get_constraint_for(%union.tree_node* %op, %struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !7979
  call void @llvm.dbg.value(metadata i32 0, metadata !7967, metadata !DIExpression()), !dbg !7968
  %3 = bitcast %struct.constraint_expr** %c to { i64, i64 }**, !dbg !7980
  %4 = bitcast %struct.constraint_expr* %includes to i64*, !dbg !7980
  %5 = load i64, i64* %4, align 8, !dbg !7980
  br label %for.cond, !dbg !7983

for.cond:                                         ; preds = %for.body, %entry
  %j.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !7984
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !7967, metadata !DIExpression()), !dbg !7968
  %6 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %rhsc, align 8, !dbg !7985
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %6, metadata !7964, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap* %6, metadata !7964, metadata !DIExpression()), !dbg !7968
  %base = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %6, i64 0, i32 0, !dbg !7985
  call void @llvm.dbg.value(metadata %struct.constraint_expr** %c, metadata !7965, metadata !DIExpression(DW_OP_deref)), !dbg !7968
  %call = call fastcc i32 @VEC_ce_s_base_iterate(%struct.VEC_ce_s_base* %base, i32 %j.0, %struct.constraint_expr** nonnull %c) #7, !dbg !7985
  %tobool1 = icmp eq i32 %call, 0, !dbg !7986
  br i1 %tobool1, label %for.end, label %for.body, !dbg !7986

for.body:                                         ; preds = %for.cond
  %7 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !7987
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0, !dbg !7988
  %9 = load i64, i64* %8, align 8, !dbg !7988
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1, !dbg !7988
  %11 = load i64, i64* %10, align 8, !dbg !7988
  %call2 = call fastcc %struct.constraint* @new_constraint(i64 %5, i64 0, i64 %9, i64 %11) #7, !dbg !7988
  call fastcc void @process_constraint(%struct.constraint* %call2) #7, !dbg !7989
  %inc = add i32 %j.0, 1, !dbg !7990
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7967, metadata !DIExpression()), !dbg !7968
  br label %for.cond, !dbg !7991, !llvm.loop !7992

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %rhsc, metadata !7964, metadata !DIExpression(DW_OP_deref)), !dbg !7968
  call fastcc void @VEC_ce_s_heap_free(%struct.VEC_ce_s_heap** nonnull %rhsc) #7, !dbg !7994
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7995
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7995
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7995
  ret void, !dbg !7995
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_call_return_slot_opt_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !7996 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !7998, metadata !DIExpression()), !dbg !7999
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !8000
  %bf.load = load i32, i32* %0, align 8, !dbg !8000
  %and = lshr i32 %bf.load, 18, !dbg !8001
  %1 = trunc i32 %and to i8, !dbg !8001
  %2 = and i8 %1, 1, !dbg !8001
  ret i8 %2, !dbg !8002
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !8003 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8005, metadata !DIExpression()), !dbg !8007
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !8008
  call void @llvm.dbg.value(metadata i32 %call, metadata !8006, metadata !DIExpression()), !dbg !8007
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !8009

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !8011
  %bf.load = load i32, i32* %0, align 8, !dbg !8011
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8011
  br label %cleanup, !dbg !8012

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8013
  br label %cleanup, !dbg !8015

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !8007
  ret i32 %retval.0, !dbg !8016
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !8017 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !8021, metadata !DIExpression()), !dbg !8022
  %idxprom = sext i32 %code to i64, !dbg !8023
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !8023
  %0 = load i8, i8* %arrayidx, align 1, !dbg !8023
  %conv = zext i8 %0 to i32, !dbg !8024
  ret i32 %conv, !dbg !8025
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !8026 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8028, metadata !DIExpression()), !dbg !8031
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !8032
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8029, metadata !DIExpression()), !dbg !8031
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8033
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !8033
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !8033
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !8034
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !8034
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !8034
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !8035
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !8035
  ret %union.tree_node* %4, !dbg !8036
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ce_s_heap_reserve(%struct.VEC_ce_s_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !8037 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_heap** %vec_, metadata !8041, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i32 1, metadata !8042, metadata !DIExpression()), !dbg !8044
  %0 = load %struct.VEC_ce_s_heap*, %struct.VEC_ce_s_heap** %vec_, align 8, !dbg !8045
  %tobool = icmp eq %struct.VEC_ce_s_heap* %0, null, !dbg !8045
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8045

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ce_s_heap, %struct.VEC_ce_s_heap* %0, i64 0, i32 0, !dbg !8045
  br label %cond.end, !dbg !8045

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ce_s_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8045
  %call = tail call fastcc i32 @VEC_ce_s_base_space(%struct.VEC_ce_s_base* %cond, i32 1) #7, !dbg !8045
  %tobool1 = icmp eq i32 %call, 0, !dbg !8045
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !8045
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !8043, metadata !DIExpression()), !dbg !8044
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8045

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_ce_s_heap** %vec_ to i8**, !dbg !8046
  %2 = load i8*, i8** %1, align 8, !dbg !8046
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 16) #6, !dbg !8046
  store i8* %call3, i8** %1, align 8, !dbg !8046
  br label %if.end, !dbg !8046

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !8045
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constraint_expr* @VEC_ce_s_base_quick_push(%struct.VEC_ce_s_base* %vec_, %struct.constraint_expr* %obj_) unnamed_addr #0 !dbg !8048 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_base* %vec_, metadata !8052, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %obj_, metadata !8053, metadata !DIExpression()), !dbg !8055
  %num1 = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 0, !dbg !8056
  %0 = load i32, i32* %num1, align 8, !dbg !8056
  %inc = add i32 %0, 1, !dbg !8056
  store i32 %inc, i32* %num1, align 8, !dbg !8056
  %idxprom = zext i32 %0 to i64, !dbg !8056
  %arrayidx = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8056
  call void @llvm.dbg.value(metadata %struct.constraint_expr* %arrayidx, metadata !8054, metadata !DIExpression()), !dbg !8055
  %tobool = icmp eq %struct.constraint_expr* %obj_, null, !dbg !8057
  br i1 %tobool, label %if.end, label %if.then, !dbg !8056

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.constraint_expr* %arrayidx to i8*, !dbg !8057
  %2 = bitcast %struct.constraint_expr* %obj_ to i8*, !dbg !8057
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !8057
  br label %if.end, !dbg !8057

if.end:                                           ; preds = %entry, %if.then
  ret %struct.constraint_expr* %arrayidx, !dbg !8056
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ce_s_base_space(%struct.VEC_ce_s_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !8059 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ce_s_base* %vec_, metadata !8063, metadata !DIExpression()), !dbg !8065
  call void @llvm.dbg.value(metadata i32 1, metadata !8064, metadata !DIExpression()), !dbg !8065
  %tobool = icmp eq %struct.VEC_ce_s_base* %vec_, null, !dbg !8066
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !8066

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 1, !dbg !8066
  %0 = load i32, i32* %alloc, align 4, !dbg !8066
  %num = getelementptr inbounds %struct.VEC_ce_s_base, %struct.VEC_ce_s_base* %vec_, i64 0, i32 0, !dbg !8066
  %1 = load i32, i32* %num, align 8, !dbg !8066
  %cmp1 = icmp ne i32 %0, %1, !dbg !8066
  %phitmp = zext i1 %cmp1 to i32, !dbg !8066
  br label %cond.end, !dbg !8066

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8066

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !8066
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !8067 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8074, metadata !DIExpression()), !dbg !8075
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !8076
  %0 = load i32, i32* %flags, align 8, !dbg !8076
  %and = and i32 %0, 512, !dbg !8077
  %tobool = icmp eq i32 %and, 0, !dbg !8077
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !8078

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !8079
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !8079
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !8080
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !8081

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !8082
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !8082
  br label %cond.end, !dbg !8081

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !8081
  ret %struct.gimple_seq_d* %cond, !dbg !8083
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !8084 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !8091, metadata !DIExpression()), !dbg !8092
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !8093
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8093

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !8094
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !8094
  br label %cond.end, !dbg !8093

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !8093
  ret %struct.gimple_seq_node_d* %cond, !dbg !8095
}

; Function Attrs: nounwind uwtable
define internal fastcc void @init_graph(i32 %size) unnamed_addr #5 !dbg !8096 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !8098, metadata !DIExpression()), !dbg !8100
  %call = tail call i8* @xcalloc(i64 1, i64 128) #6, !dbg !8101
  store i8* %call, i8** bitcast (%struct.constraint_graph** @graph to i8**), align 8, !dbg !8102
  %size1 = bitcast i8* %call to i32*, !dbg !8103
  store i32 %size, i32* %size1, align 8, !dbg !8104
  %0 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8105
  %size2 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %0, i64 0, i32 0, !dbg !8105
  %1 = load i32, i32* %size2, align 8, !dbg !8105
  %conv = zext i32 %1 to i64, !dbg !8105
  %call3 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !8105
  %2 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8106
  %succs = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %2, i64 0, i32 1, !dbg !8107
  %3 = bitcast %struct.bitmap_head_def*** %succs to i8**, !dbg !8108
  store i8* %call3, i8** %3, align 8, !dbg !8108
  %size4 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %2, i64 0, i32 0, !dbg !8109
  %4 = load i32, i32* %size4, align 8, !dbg !8109
  %conv5 = zext i32 %4 to i64, !dbg !8109
  %mul = shl nuw nsw i64 %conv5, 2, !dbg !8109
  %call6 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !8109
  %5 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8110
  %indirect_cycles = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %5, i64 0, i32 4, !dbg !8111
  %6 = bitcast i32** %indirect_cycles to i8**, !dbg !8112
  store i8* %call6, i8** %6, align 8, !dbg !8112
  %size7 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %5, i64 0, i32 0, !dbg !8113
  %7 = load i32, i32* %size7, align 8, !dbg !8113
  %conv8 = zext i32 %7 to i64, !dbg !8113
  %mul9 = shl nuw nsw i64 %conv8, 2, !dbg !8113
  %call10 = tail call i8* @xmalloc(i64 %mul9) #6, !dbg !8113
  %8 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8114
  %rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %8, i64 0, i32 5, !dbg !8115
  %9 = bitcast i32** %rep to i8**, !dbg !8116
  store i8* %call10, i8** %9, align 8, !dbg !8116
  %conv11 = zext i32 %size to i64, !dbg !8117
  %call12 = tail call i8* @xcalloc(i64 %conv11, i64 8) #6, !dbg !8117
  %10 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8118
  %complex = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %10, i64 0, i32 15, !dbg !8119
  %11 = bitcast %struct.VEC_constraint_t_heap*** %complex to i8**, !dbg !8120
  store i8* %call12, i8** %11, align 8, !dbg !8120
  %size13 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %10, i64 0, i32 0, !dbg !8121
  %12 = load i32, i32* %size13, align 8, !dbg !8121
  %conv14 = zext i32 %12 to i64, !dbg !8121
  %call15 = tail call i8* @xcalloc(i64 %conv14, i64 4) #6, !dbg !8121
  %13 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8122
  %pe = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %13, i64 0, i32 7, !dbg !8123
  %14 = bitcast i32** %pe to i8**, !dbg !8124
  store i8* %call15, i8** %14, align 8, !dbg !8124
  %size16 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %13, i64 0, i32 0, !dbg !8125
  %15 = load i32, i32* %size16, align 8, !dbg !8125
  %conv17 = zext i32 %15 to i64, !dbg !8125
  %mul18 = shl nuw nsw i64 %conv17, 2, !dbg !8125
  %call19 = tail call i8* @xmalloc(i64 %mul18) #6, !dbg !8125
  %16 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8126
  %pe_rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %16, i64 0, i32 8, !dbg !8127
  %17 = bitcast i32** %pe_rep to i8**, !dbg !8128
  store i8* %call19, i8** %17, align 8, !dbg !8128
  call void @llvm.dbg.value(metadata i32 0, metadata !8099, metadata !DIExpression()), !dbg !8100
  br label %for.cond, !dbg !8129

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !8131
  %18 = phi %struct.constraint_graph* [ %.pre, %for.body ], [ %16, %entry ], !dbg !8131
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8099, metadata !DIExpression()), !dbg !8100
  %size20 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %18, i64 0, i32 0, !dbg !8133
  %19 = load i32, i32* %size20, align 8, !dbg !8133
  %20 = zext i32 %19 to i64, !dbg !8134
  %cmp = icmp ult i64 %indvars.iv, %20, !dbg !8134
  br i1 %cmp, label %for.body, label %for.end, !dbg !8135

for.body:                                         ; preds = %for.cond
  %rep22 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %18, i64 0, i32 5, !dbg !8136
  %21 = load i32*, i32** %rep22, align 8, !dbg !8136
  %arrayidx = getelementptr inbounds i32, i32* %21, i64 %indvars.iv, !dbg !8138
  %22 = trunc i64 %indvars.iv to i32, !dbg !8139
  store i32 %22, i32* %arrayidx, align 4, !dbg !8139
  %23 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8140
  %pe_rep23 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %23, i64 0, i32 8, !dbg !8141
  %24 = load i32*, i32** %pe_rep23, align 8, !dbg !8141
  %arrayidx25 = getelementptr inbounds i32, i32* %24, i64 %indvars.iv, !dbg !8140
  store i32 -1, i32* %arrayidx25, align 4, !dbg !8142
  %25 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8143
  %indirect_cycles26 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %25, i64 0, i32 4, !dbg !8144
  %26 = load i32*, i32** %indirect_cycles26, align 8, !dbg !8144
  %arrayidx28 = getelementptr inbounds i32, i32* %26, i64 %indvars.iv, !dbg !8143
  store i32 -1, i32* %arrayidx28, align 4, !dbg !8145
  %.pre = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8131
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8146
  br label %for.cond, !dbg !8147, !llvm.loop !8148

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8150
}

; Function Attrs: nounwind uwtable
define internal fastcc void @build_pred_graph() unnamed_addr #5 !dbg !8151 {
entry:
  %c = alloca %struct.constraint*, align 8
  %lhs = alloca %struct.constraint_expr, align 8
  %rhs = alloca %struct.constraint_expr, align 8
  %0 = bitcast %struct.constraint** %c to i8*, !dbg !8168
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8168
  %1 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8169
  %size = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %1, i64 0, i32 0, !dbg !8169
  %2 = load i32, i32* %size, align 8, !dbg !8169
  %conv = zext i32 %2 to i64, !dbg !8169
  %call = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !8169
  %3 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8170
  %implicit_preds = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %3, i64 0, i32 2, !dbg !8171
  %4 = bitcast %struct.bitmap_head_def*** %implicit_preds to i8**, !dbg !8172
  store i8* %call, i8** %4, align 8, !dbg !8172
  %size1 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %3, i64 0, i32 0, !dbg !8173
  %5 = load i32, i32* %size1, align 8, !dbg !8173
  %conv2 = zext i32 %5 to i64, !dbg !8173
  %call3 = tail call i8* @xcalloc(i64 %conv2, i64 8) #6, !dbg !8173
  %6 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8174
  %preds = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %6, i64 0, i32 3, !dbg !8175
  %7 = bitcast %struct.bitmap_head_def*** %preds to i8**, !dbg !8176
  store i8* %call3, i8** %7, align 8, !dbg !8176
  %size4 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %6, i64 0, i32 0, !dbg !8177
  %8 = load i32, i32* %size4, align 8, !dbg !8177
  %conv5 = zext i32 %8 to i64, !dbg !8177
  %call6 = tail call i8* @xcalloc(i64 %conv5, i64 4) #6, !dbg !8177
  %9 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8178
  %pointer_label = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %9, i64 0, i32 9, !dbg !8179
  %10 = bitcast i32** %pointer_label to i8**, !dbg !8180
  store i8* %call6, i8** %10, align 8, !dbg !8180
  %size7 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %9, i64 0, i32 0, !dbg !8181
  %11 = load i32, i32* %size7, align 8, !dbg !8181
  %conv8 = zext i32 %11 to i64, !dbg !8181
  %call9 = tail call i8* @xcalloc(i64 %conv8, i64 4) #6, !dbg !8181
  %12 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8182
  %loc_label = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %12, i64 0, i32 10, !dbg !8183
  %13 = bitcast i32** %loc_label to i8**, !dbg !8184
  store i8* %call9, i8** %13, align 8, !dbg !8184
  %size10 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %12, i64 0, i32 0, !dbg !8185
  %14 = load i32, i32* %size10, align 8, !dbg !8185
  %conv11 = zext i32 %14 to i64, !dbg !8185
  %call12 = tail call i8* @xcalloc(i64 %conv11, i64 8) #6, !dbg !8185
  %15 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8186
  %pointed_by = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %15, i64 0, i32 11, !dbg !8187
  %16 = bitcast %struct.bitmap_head_def*** %pointed_by to i8**, !dbg !8188
  store i8* %call12, i8** %16, align 8, !dbg !8188
  %size13 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %15, i64 0, i32 0, !dbg !8189
  %17 = load i32, i32* %size13, align 8, !dbg !8189
  %conv14 = zext i32 %17 to i64, !dbg !8189
  %call15 = tail call i8* @xcalloc(i64 %conv14, i64 8) #6, !dbg !8189
  %18 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8190
  %points_to = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %18, i64 0, i32 12, !dbg !8191
  %19 = bitcast %struct.bitmap_head_def*** %points_to to i8**, !dbg !8192
  store i8* %call15, i8** %19, align 8, !dbg !8192
  %size16 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %18, i64 0, i32 0, !dbg !8193
  %20 = load i32, i32* %size16, align 8, !dbg !8193
  %conv17 = zext i32 %20 to i64, !dbg !8193
  %mul = shl nuw nsw i64 %conv17, 2, !dbg !8193
  %call18 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !8193
  %21 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8194
  %eq_rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %21, i64 0, i32 6, !dbg !8195
  %22 = bitcast i32** %eq_rep to i8**, !dbg !8196
  store i8* %call18, i8** %22, align 8, !dbg !8196
  %size19 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %21, i64 0, i32 0, !dbg !8197
  %23 = load i32, i32* %size19, align 8, !dbg !8197
  %call20 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %23) #6, !dbg !8198
  %24 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8199
  %direct_nodes = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %24, i64 0, i32 13, !dbg !8200
  store %struct.simple_bitmap_def* %call20, %struct.simple_bitmap_def** %direct_nodes, align 8, !dbg !8201
  %call21 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @predbitmap_obstack) #6, !dbg !8202
  %25 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8203
  %address_taken = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %25, i64 0, i32 14, !dbg !8204
  store %struct.bitmap_head_def* %call21, %struct.bitmap_head_def** %address_taken, align 8, !dbg !8205
  %direct_nodes22 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %25, i64 0, i32 13, !dbg !8206
  %26 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes22, align 8, !dbg !8206
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %26) #6, !dbg !8207
  call void @llvm.dbg.value(metadata i32 0, metadata !8155, metadata !DIExpression()), !dbg !8208
  br label %for.cond, !dbg !8209

for.cond:                                         ; preds = %for.inc, %entry
  %j.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !8211
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !8155, metadata !DIExpression()), !dbg !8208
  %27 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8212
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %27, i64 0, i32 0, !dbg !8212
  %call23 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !8212
  %cmp = icmp ult i32 %j.0, %call23, !dbg !8214
  br i1 %cmp, label %for.body, label %for.cond28.preheader, !dbg !8215

for.cond28.preheader:                             ; preds = %for.cond
  br label %for.cond28, !dbg !8216

for.body:                                         ; preds = %for.cond
  %call25 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %j.0) #7, !dbg !8218
  %is_special_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call25, i64 0, i32 1, !dbg !8221
  %bf.load = load i8, i8* %is_special_var, align 4, !dbg !8221
  %bf.clear = and i8 %bf.load, 2, !dbg !8221
  %tobool26 = icmp eq i8 %bf.clear, 0, !dbg !8218
  br i1 %tobool26, label %if.then, label %for.inc, !dbg !8222

if.then:                                          ; preds = %for.body
  %28 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8223
  %direct_nodes27 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %28, i64 0, i32 13, !dbg !8224
  %29 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes27, align 8, !dbg !8224
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %29, i32 %j.0) #7, !dbg !8225
  br label %for.inc, !dbg !8225

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add i32 %j.0, 1, !dbg !8226
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8155, metadata !DIExpression()), !dbg !8208
  br label %for.cond, !dbg !8227, !llvm.loop !8228

for.cond28:                                       ; preds = %for.cond28.preheader, %for.body32
  %indvars.iv9 = phi i64 [ 0, %for.cond28.preheader ], [ %indvars.iv.next10, %for.body32 ], !dbg !8230
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !8155, metadata !DIExpression()), !dbg !8208
  %30 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8231
  %size29 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %30, i64 0, i32 0, !dbg !8233
  %31 = load i32, i32* %size29, align 8, !dbg !8233
  %32 = zext i32 %31 to i64, !dbg !8234
  %cmp30 = icmp ult i64 %indvars.iv9, %32, !dbg !8234
  br i1 %cmp30, label %for.body32, label %for.cond37.preheader, !dbg !8216

for.cond37.preheader:                             ; preds = %for.cond28
  br label %for.cond37, !dbg !8235

for.body32:                                       ; preds = %for.cond28
  %eq_rep33 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %30, i64 0, i32 6, !dbg !8237
  %33 = load i32*, i32** %eq_rep33, align 8, !dbg !8237
  %arrayidx = getelementptr inbounds i32, i32* %33, i64 %indvars.iv9, !dbg !8238
  store i32 -1, i32* %arrayidx, align 4, !dbg !8239
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !8240
  br label %for.cond28, !dbg !8241, !llvm.loop !8242

for.cond37:                                       ; preds = %for.cond37.preheader, %for.body47
  %indvars.iv = phi i64 [ 0, %for.cond37.preheader ], [ %indvars.iv.next, %for.body47 ], !dbg !8244
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8155, metadata !DIExpression()), !dbg !8208
  %34 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8245
  %base40 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %34, i64 0, i32 0, !dbg !8245
  %call44 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base40) #7, !dbg !8245
  %35 = zext i32 %call44 to i64, !dbg !8247
  %cmp45 = icmp ult i64 %indvars.iv, %35, !dbg !8247
  br i1 %cmp45, label %for.body47, label %for.cond53.preheader, !dbg !8235

for.cond53.preheader:                             ; preds = %for.cond37
  %36 = bitcast %struct.constraint_expr* %lhs to i8*, !dbg !8248
  %37 = bitcast %struct.constraint** %c to i8**, !dbg !8248
  %38 = bitcast %struct.constraint_expr* %rhs to i8*, !dbg !8248
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 1, !dbg !8248
  %var65 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 1, !dbg !8248
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 0, !dbg !8249
  %type87 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 0, !dbg !8250
  %offset179 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 2, !dbg !8251
  %offset183 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2, !dbg !8251
  br label %for.cond53, !dbg !8253

for.body47:                                       ; preds = %for.cond37
  %39 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8254
  %indirect_cycles = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %39, i64 0, i32 4, !dbg !8255
  %40 = load i32*, i32** %indirect_cycles, align 8, !dbg !8255
  %arrayidx49 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv, !dbg !8254
  store i32 -1, i32* %arrayidx49, align 4, !dbg !8256
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8257
  br label %for.cond37, !dbg !8258, !llvm.loop !8259

for.cond53:                                       ; preds = %for.cond53.preheader, %if.end230
  %i.0 = phi i32 [ %inc232, %if.end230 ], [ 0, %for.cond53.preheader ], !dbg !8261
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8153, metadata !DIExpression()), !dbg !8208
  %41 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** @constraints, align 8, !dbg !8262
  %base56 = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %41, i64 0, i32 0, !dbg !8262
  call void @llvm.dbg.value(metadata %struct.constraint** %c, metadata !8154, metadata !DIExpression(DW_OP_deref)), !dbg !8208
  %call60 = call fastcc i32 @VEC_constraint_t_base_iterate(%struct.VEC_constraint_t_base* %base56, i32 %i.0, %struct.constraint** nonnull %c) #7, !dbg !8262
  %tobool61 = icmp eq i32 %call60, 0, !dbg !8253
  br i1 %tobool61, label %for.end233, label %for.body62, !dbg !8253

for.body62:                                       ; preds = %for.cond53
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8, !dbg !8263
  %42 = load i8*, i8** %37, align 8, !dbg !8264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %42, i64 16, i1 false), !dbg !8265
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #8, !dbg !8266
  call void @llvm.dbg.value(metadata i8* %42, metadata !8154, metadata !DIExpression()), !dbg !8208
  %rhs64 = getelementptr inbounds i8, i8* %42, i64 16, !dbg !8267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %rhs64, i64 16, i1 false), !dbg !8267
  %43 = load i32, i32* %var, align 4, !dbg !8268
  call void @llvm.dbg.value(metadata i32 %43, metadata !8161, metadata !DIExpression()), !dbg !8248
  %44 = load i32, i32* %var65, align 4, !dbg !8269
  call void @llvm.dbg.value(metadata i32 %44, metadata !8162, metadata !DIExpression()), !dbg !8248
  %45 = load i32, i32* %type, align 8, !dbg !8270
  %cmp66 = icmp eq i32 %45, 1, !dbg !8271
  br i1 %cmp66, label %if.then68, label %if.else, !dbg !8272

if.then68:                                        ; preds = %for.body62
  %46 = load i64, i64* %offset183, align 8, !dbg !8273
  %cmp69 = icmp eq i64 %46, 0, !dbg !8276
  br i1 %cmp69, label %land.lhs.true, label %if.end230, !dbg !8277

land.lhs.true:                                    ; preds = %if.then68
  %47 = load i64, i64* %offset179, align 8, !dbg !8278
  %cmp72 = icmp eq i64 %47, 0, !dbg !8279
  br i1 %cmp72, label %land.lhs.true74, label %if.end230, !dbg !8280

land.lhs.true74:                                  ; preds = %land.lhs.true
  %48 = load i32, i32* %type87, align 8, !dbg !8281
  %cmp76 = icmp eq i32 %48, 0, !dbg !8282
  br i1 %cmp76, label %if.then78, label %if.end230, !dbg !8283

if.then78:                                        ; preds = %land.lhs.true74
  %49 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8284
  %50 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8285
  %base81 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %50, i64 0, i32 0, !dbg !8285
  %call85 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base81) #7, !dbg !8285
  %add = add i32 %call85, %43, !dbg !8286
  call fastcc void @add_pred_graph_edge(%struct.constraint_graph* %49, i32 %add, i32 %44) #7, !dbg !8287
  br label %if.end230, !dbg !8287

if.else:                                          ; preds = %for.body62
  %51 = load i32, i32* %type87, align 8, !dbg !8288
  %cmp88 = icmp eq i32 %51, 1, !dbg !8289
  br i1 %cmp88, label %if.then90, label %if.else114, !dbg !8290

if.then90:                                        ; preds = %if.else
  %52 = load i64, i64* %offset183, align 8, !dbg !8291
  %cmp92 = icmp eq i64 %52, 0, !dbg !8294
  br i1 %cmp92, label %land.lhs.true94, label %if.else111, !dbg !8295

land.lhs.true94:                                  ; preds = %if.then90
  %53 = load i64, i64* %offset179, align 8, !dbg !8296
  %cmp96 = icmp eq i64 %53, 0, !dbg !8297
  br i1 %cmp96, label %land.lhs.true98, label %if.else111, !dbg !8298

land.lhs.true98:                                  ; preds = %land.lhs.true94
  %cmp100 = icmp eq i32 %45, 0, !dbg !8299
  br i1 %cmp100, label %if.then102, label %if.else111, !dbg !8300

if.then102:                                       ; preds = %land.lhs.true98
  %54 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8301
  %55 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8302
  %base105 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %55, i64 0, i32 0, !dbg !8302
  %call109 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base105) #7, !dbg !8302
  %add110 = add i32 %call109, %44, !dbg !8303
  call fastcc void @add_pred_graph_edge(%struct.constraint_graph* %54, i32 %43, i32 %add110) #7, !dbg !8304
  br label %if.end230, !dbg !8304

if.else111:                                       ; preds = %land.lhs.true98, %land.lhs.true94, %if.then90
  %56 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8305
  %direct_nodes112 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %56, i64 0, i32 13, !dbg !8306
  %57 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes112, align 8, !dbg !8306
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %57, i32 %43) #7, !dbg !8307
  br label %if.end230

if.else114:                                       ; preds = %if.else
  %cmp116 = icmp eq i32 %51, 2, !dbg !8308
  br i1 %cmp116, label %if.then118, label %if.else172, !dbg !8309

if.then118:                                       ; preds = %if.else114
  %58 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8310
  %points_to119 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %58, i64 0, i32 12, !dbg !8312
  %59 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to119, align 8, !dbg !8312
  %idxprom120 = zext i32 %43 to i64, !dbg !8310
  %arrayidx121 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %59, i64 %idxprom120, !dbg !8310
  %60 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx121, align 8, !dbg !8310
  %cmp122 = icmp eq %struct.bitmap_head_def* %60, null, !dbg !8313
  br i1 %cmp122, label %if.then124, label %if.end129, !dbg !8314

if.then124:                                       ; preds = %if.then118
  %call125 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @predbitmap_obstack) #6, !dbg !8315
  %61 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8316
  %points_to126 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %61, i64 0, i32 12, !dbg !8317
  %62 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to126, align 8, !dbg !8317
  %arrayidx128 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %62, i64 %idxprom120, !dbg !8316
  store %struct.bitmap_head_def* %call125, %struct.bitmap_head_def** %arrayidx128, align 8, !dbg !8318
  %.pre3 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8319
  %points_to130.phi.trans.insert = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %.pre3, i64 0, i32 12, !dbg !8320
  %.pre4 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to130.phi.trans.insert, align 8, !dbg !8321
  %arrayidx132.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre4, i64 %idxprom120, !dbg !8320
  %.pre5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx132.phi.trans.insert, align 8, !dbg !8319
  br label %if.end129, !dbg !8316

if.end129:                                        ; preds = %if.then124, %if.then118
  %63 = phi %struct.bitmap_head_def* [ %.pre5, %if.then124 ], [ %60, %if.then118 ], !dbg !8319
  %call133 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %63, i32 %44) #6, !dbg !8322
  %64 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8323
  %pointed_by134 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %64, i64 0, i32 11, !dbg !8325
  %65 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %pointed_by134, align 8, !dbg !8325
  %idxprom135 = zext i32 %44 to i64, !dbg !8323
  %arrayidx136 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %65, i64 %idxprom135, !dbg !8323
  %66 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx136, align 8, !dbg !8323
  %cmp137 = icmp eq %struct.bitmap_head_def* %66, null, !dbg !8326
  br i1 %cmp137, label %if.then139, label %if.end144, !dbg !8327

if.then139:                                       ; preds = %if.end129
  %call140 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @predbitmap_obstack) #6, !dbg !8328
  %67 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8329
  %pointed_by141 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %67, i64 0, i32 11, !dbg !8330
  %68 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %pointed_by141, align 8, !dbg !8330
  %arrayidx143 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %68, i64 %idxprom135, !dbg !8329
  store %struct.bitmap_head_def* %call140, %struct.bitmap_head_def** %arrayidx143, align 8, !dbg !8331
  %.pre6 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8332
  %pointed_by145.phi.trans.insert = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %.pre6, i64 0, i32 11, !dbg !8320
  %.pre7 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %pointed_by145.phi.trans.insert, align 8, !dbg !8333
  %arrayidx147.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre7, i64 %idxprom135, !dbg !8320
  %.pre8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx147.phi.trans.insert, align 8, !dbg !8332
  br label %if.end144, !dbg !8329

if.end144:                                        ; preds = %if.then139, %if.end129
  %69 = phi %struct.bitmap_head_def* [ %.pre8, %if.then139 ], [ %66, %if.end129 ], !dbg !8332
  %call148 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %69, i32 %43) #6, !dbg !8334
  %70 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8335
  %71 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8336
  %base151 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %71, i64 0, i32 0, !dbg !8336
  %call155 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base151) #7, !dbg !8336
  %add156 = add i32 %call155, %43, !dbg !8337
  call fastcc void @add_implicit_graph_edge(%struct.constraint_graph* %70, i32 %add156, i32 %44) #7, !dbg !8338
  %72 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8339
  %direct_nodes157 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %72, i64 0, i32 13, !dbg !8340
  %73 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes157, align 8, !dbg !8340
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %73, i32 %44) #7, !dbg !8341
  %call158 = call fastcc %struct.variable_info* @get_varinfo(i32 %44) #7, !dbg !8342
  call void @llvm.dbg.value(metadata %struct.variable_info* %call158, metadata !8163, metadata !DIExpression()), !dbg !8320
  %is_full_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call158, i64 0, i32 1, !dbg !8343
  %bf.load159 = load i8, i8* %is_full_var, align 4, !dbg !8343
  %bf.clear161 = and i8 %bf.load159, 8, !dbg !8343
  %tobool163 = icmp eq i8 %bf.clear161, 0, !dbg !8345
  br i1 %tobool163, label %if.then164, label %if.end169, !dbg !8346

if.then164:                                       ; preds = %if.end144
  %decl = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call158, i64 0, i32 7, !dbg !8347
  %74 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !8347
  %call165 = call fastcc %struct.variable_info* @lookup_vi_for_tree(%union.tree_node* %74) #7, !dbg !8349
  call void @llvm.dbg.value(metadata %struct.variable_info* %call165, metadata !8163, metadata !DIExpression()), !dbg !8320
  br label %do.body, !dbg !8350

do.body:                                          ; preds = %do.body, %if.then164
  %v.0 = phi %struct.variable_info* [ %call165, %if.then164 ], [ %78, %do.body ], !dbg !8351
  call void @llvm.dbg.value(metadata %struct.variable_info* %v.0, metadata !8163, metadata !DIExpression()), !dbg !8320
  %75 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8352
  %direct_nodes166 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %75, i64 0, i32 13, !dbg !8354
  %76 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes166, align 8, !dbg !8354
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.0, i64 0, i32 0, !dbg !8355
  %77 = load i32, i32* %id, align 8, !dbg !8355
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %76, i32 %77) #7, !dbg !8356
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.0, i64 0, i32 2, !dbg !8357
  %78 = load %struct.variable_info*, %struct.variable_info** %next, align 8, !dbg !8357
  call void @llvm.dbg.value(metadata %struct.variable_info* %78, metadata !8163, metadata !DIExpression()), !dbg !8320
  %cmp167 = icmp eq %struct.variable_info* %78, null, !dbg !8358
  br i1 %cmp167, label %if.end169.loopexit, label %do.body, !dbg !8359, !llvm.loop !8360

if.end169.loopexit:                               ; preds = %do.body
  br label %if.end169, !dbg !8362

if.end169:                                        ; preds = %if.end169.loopexit, %if.end144
  %79 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8362
  %address_taken170 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %79, i64 0, i32 14, !dbg !8363
  %80 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %address_taken170, align 8, !dbg !8363
  %call171 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %80, i32 %44) #6, !dbg !8364
  br label %if.end230, !dbg !8365

if.else172:                                       ; preds = %if.else114
  %cmp173 = icmp ugt i32 %43, 1, !dbg !8366
  %cmp176 = icmp ne i32 %43, %44, !dbg !8367
  %or.cond = and i1 %cmp173, %cmp176, !dbg !8368
  br i1 %or.cond, label %land.lhs.true178, label %if.else172.if.else203_crit_edge, !dbg !8368

if.else172.if.else203_crit_edge:                  ; preds = %if.else172
  %.pre = load i64, i64* %offset179, align 8, !dbg !8369
  br label %if.else203, !dbg !8368

land.lhs.true178:                                 ; preds = %if.else172
  %81 = load i64, i64* %offset179, align 8, !dbg !8371
  %cmp180 = icmp eq i64 %81, 0, !dbg !8372
  br i1 %cmp180, label %land.lhs.true182, label %if.else203, !dbg !8373

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %82 = load i64, i64* %offset183, align 8, !dbg !8374
  %cmp184 = icmp eq i64 %82, 0, !dbg !8375
  br i1 %cmp184, label %if.then186, label %if.else203, !dbg !8376

if.then186:                                       ; preds = %land.lhs.true182
  %83 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8377
  call fastcc void @add_pred_graph_edge(%struct.constraint_graph* %83, i32 %43, i32 %44) #7, !dbg !8379
  %84 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8380
  %85 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8381
  %base189 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %85, i64 0, i32 0, !dbg !8381
  %call193 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base189) #7, !dbg !8381
  %add194 = add i32 %call193, %43, !dbg !8382
  %86 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8383
  %base197 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %86, i64 0, i32 0, !dbg !8383
  %call201 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base197) #7, !dbg !8383
  %add202 = add i32 %call201, %44, !dbg !8384
  call fastcc void @add_implicit_graph_edge(%struct.constraint_graph* %84, i32 %add194, i32 %add202) #7, !dbg !8385
  br label %if.end230, !dbg !8386

if.else203:                                       ; preds = %if.else172.if.else203_crit_edge, %land.lhs.true182, %land.lhs.true178
  %87 = phi i64 [ %.pre, %if.else172.if.else203_crit_edge ], [ 0, %land.lhs.true182 ], [ %81, %land.lhs.true178 ], !dbg !8369
  %cmp205 = icmp eq i64 %87, 0, !dbg !8387
  br i1 %cmp205, label %lor.lhs.false, label %if.else203.if.then210_crit_edge, !dbg !8388

if.else203.if.then210_crit_edge:                  ; preds = %if.else203
  %.pre2 = load i64, i64* %offset183, align 8, !dbg !8389
  br label %if.then210, !dbg !8388

lor.lhs.false:                                    ; preds = %if.else203
  %88 = load i64, i64* %offset183, align 8, !dbg !8392
  %cmp208 = icmp eq i64 %88, 0, !dbg !8393
  br i1 %cmp208, label %if.end230, label %if.then210, !dbg !8394

if.then210:                                       ; preds = %if.else203.if.then210_crit_edge, %lor.lhs.false
  %89 = phi i64 [ %.pre2, %if.else203.if.then210_crit_edge ], [ %88, %lor.lhs.false ], !dbg !8389
  %cmp212 = icmp eq i64 %89, 0, !dbg !8395
  br i1 %cmp212, label %if.else217, label %if.then214, !dbg !8396

if.then214:                                       ; preds = %if.then210
  %90 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8397
  %direct_nodes215 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %90, i64 0, i32 13, !dbg !8398
  %91 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes215, align 8, !dbg !8398
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %91, i32 %43) #7, !dbg !8399
  br label %if.end230, !dbg !8399

if.else217:                                       ; preds = %if.then210
  br i1 %cmp205, label %if.end230, label %if.then221, !dbg !8400

if.then221:                                       ; preds = %if.else217
  %92 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8401
  %direct_nodes222 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %92, i64 0, i32 13, !dbg !8403
  %93 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes222, align 8, !dbg !8403
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %93, i32 %44) #7, !dbg !8404
  br label %if.end230, !dbg !8404

if.end230:                                        ; preds = %if.else217, %lor.lhs.false, %if.else111, %if.then102, %if.then186, %if.then214, %if.then221, %if.end169, %if.then68, %land.lhs.true, %land.lhs.true74, %if.then78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #8, !dbg !8405
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8, !dbg !8405
  %inc232 = add nuw nsw i32 %i.0, 1, !dbg !8406
  call void @llvm.dbg.value(metadata i32 %inc232, metadata !8153, metadata !DIExpression()), !dbg !8208
  br label %for.cond53, !dbg !8407, !llvm.loop !8408

for.end233:                                       ; preds = %for.cond53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8410
  ret void, !dbg !8410
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.scc_info* @perform_var_substitution(%struct.constraint_graph* %graph) unnamed_addr #5 !dbg !8411 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %j = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !8415, metadata !DIExpression()), !dbg !8435
  %size1 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 0, !dbg !8436
  %0 = load i32, i32* %size1, align 8, !dbg !8436
  call void @llvm.dbg.value(metadata i32 %0, metadata !8417, metadata !DIExpression()), !dbg !8435
  %conv = zext i32 %0 to i64, !dbg !8437
  %call = tail call fastcc %struct.scc_info* @init_scc_info(i64 %conv) #7, !dbg !8438
  call void @llvm.dbg.value(metadata %struct.scc_info* %call, metadata !8418, metadata !DIExpression()), !dbg !8435
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* nonnull @iteration_obstack) #6, !dbg !8439
  %call2 = tail call %struct.htab* @htab_create(i64 511, i32 (i8*)* nonnull @equiv_class_label_hash, i32 (i8*, i8*)* nonnull @equiv_class_label_eq, void (i8*)* nonnull @free) #6, !dbg !8440
  store %struct.htab* %call2, %struct.htab** @pointer_equiv_class_table, align 8, !dbg !8441
  %call3 = tail call %struct.htab* @htab_create(i64 511, i32 (i8*)* nonnull @equiv_class_label_hash, i32 (i8*, i8*)* nonnull @equiv_class_label_eq, void (i8*)* nonnull @free) #6, !dbg !8442
  store %struct.htab* %call3, %struct.htab** @location_equiv_class_table, align 8, !dbg !8443
  store i32 1, i32* @pointer_equiv_class, align 4, !dbg !8444
  store i32 1, i32* @location_equiv_class, align 4, !dbg !8445
  call void @llvm.dbg.value(metadata i32 0, metadata !8416, metadata !DIExpression()), !dbg !8435
  %visited = getelementptr inbounds %struct.scc_info, %struct.scc_info* %call, i64 0, i32 0, !dbg !8435
  %node_mapping = getelementptr inbounds %struct.scc_info, %struct.scc_info* %call, i64 0, i32 3, !dbg !8446
  br label %for.cond, !dbg !8450

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %for.inc ], [ 0, %entry ], !dbg !8451
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !8416, metadata !DIExpression()), !dbg !8435
  %1 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8452
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %1, i64 0, i32 0, !dbg !8452
  %call4 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !8452
  %2 = zext i32 %call4 to i64, !dbg !8453
  %cmp = icmp ult i64 %indvars.iv8, %2, !dbg !8453
  %3 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !8435
  br i1 %cmp, label %for.body, label %for.end, !dbg !8454

for.body:                                         ; preds = %for.cond
  %4 = load i32*, i32** %node_mapping, align 8, !dbg !8455
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %indvars.iv8, !dbg !8455
  %5 = load i32, i32* %arrayidx, align 4, !dbg !8455
  %div = lshr i32 %5, 6, !dbg !8455
  %idxprom6 = zext i32 %div to i64, !dbg !8455
  %arrayidx7 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %3, i64 0, i32 3, i64 %idxprom6, !dbg !8455
  %6 = load i64, i64* %arrayidx7, align 8, !dbg !8455
  %rem = and i32 %5, 63, !dbg !8455
  %sh_prom = zext i32 %rem to i64, !dbg !8455
  %7 = shl i64 1, %sh_prom, !dbg !8455
  %8 = and i64 %6, %7, !dbg !8455
  %tobool11 = icmp eq i64 %8, 0, !dbg !8455
  br i1 %tobool11, label %if.then, label %for.inc, !dbg !8456

if.then:                                          ; preds = %for.body
  tail call fastcc void @condense_visit(%struct.constraint_graph* %graph, %struct.scc_info* %call, i32 %5) #7, !dbg !8457
  br label %for.inc, !dbg !8457

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !8458
  br label %for.cond, !dbg !8459, !llvm.loop !8460

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.simple_bitmap_def* [ %3, %for.cond ], !dbg !8435
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %.lcssa) #6, !dbg !8462
  call void @llvm.dbg.value(metadata i32 0, metadata !8416, metadata !DIExpression()), !dbg !8435
  br label %for.cond16, !dbg !8463

for.cond16:                                       ; preds = %for.inc48, %for.end
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.inc48 ], [ 0, %for.end ], !dbg !8465
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !8416, metadata !DIExpression()), !dbg !8435
  %9 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8466
  %base19 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %9, i64 0, i32 0, !dbg !8466
  %call23 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base19) #7, !dbg !8466
  %10 = zext i32 %call23 to i64, !dbg !8468
  %cmp24 = icmp ult i64 %indvars.iv6, %10, !dbg !8468
  br i1 %cmp24, label %for.body26, label %for.cond51.preheader, !dbg !8469

for.cond51.preheader:                             ; preds = %for.cond16
  %11 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !8470
  %12 = bitcast i32* %j to i8*, !dbg !8470
  %pointed_by62 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 11, !dbg !8471
  %pointer_label = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 9, !dbg !8473
  %loc_label = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 10, !dbg !8470
  br label %for.cond51, !dbg !8477

for.body26:                                       ; preds = %for.cond16
  %13 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !8478
  %14 = load i32*, i32** %node_mapping, align 8, !dbg !8478
  %arrayidx31 = getelementptr inbounds i32, i32* %14, i64 %indvars.iv6, !dbg !8478
  %15 = load i32, i32* %arrayidx31, align 4, !dbg !8478
  %div32 = lshr i32 %15, 6, !dbg !8478
  %idxprom33 = zext i32 %div32 to i64, !dbg !8478
  %arrayidx34 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %13, i64 0, i32 3, i64 %idxprom33, !dbg !8478
  %16 = load i64, i64* %arrayidx34, align 8, !dbg !8478
  %rem38 = and i32 %15, 63, !dbg !8478
  %sh_prom39 = zext i32 %rem38 to i64, !dbg !8478
  %17 = shl i64 1, %sh_prom39, !dbg !8478
  %18 = and i64 %16, %17, !dbg !8478
  %tobool42 = icmp eq i64 %18, 0, !dbg !8478
  br i1 %tobool42, label %if.then43, label %for.inc48, !dbg !8480

if.then43:                                        ; preds = %for.body26
  tail call fastcc void @label_visit(%struct.constraint_graph* %graph, %struct.scc_info* %call, i32 %15) #7, !dbg !8481
  br label %for.inc48, !dbg !8481

for.inc48:                                        ; preds = %for.body26, %if.then43
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !8482
  br label %for.cond16, !dbg !8483, !llvm.loop !8484

for.cond51:                                       ; preds = %for.cond51.preheader, %cleanup
  %indvars.iv4 = phi i64 [ 0, %for.cond51.preheader ], [ %indvars.iv.next5, %cleanup ], !dbg !8486
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !8416, metadata !DIExpression()), !dbg !8435
  %19 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8487
  %base54 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %19, i64 0, i32 0, !dbg !8487
  %call58 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base54) #7, !dbg !8487
  %20 = zext i32 %call58 to i64, !dbg !8488
  %cmp59 = icmp ult i64 %indvars.iv4, %20, !dbg !8488
  br i1 %cmp59, label %for.body61, label %for.end110, !dbg !8477

for.body61:                                       ; preds = %for.cond51
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #8, !dbg !8489
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8, !dbg !8490
  %21 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %pointed_by62, align 8, !dbg !8491
  %arrayidx64 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %21, i64 %indvars.iv4, !dbg !8492
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx64, align 8, !dbg !8492
  %tobool65 = icmp eq %struct.bitmap_head_def* %22, null, !dbg !8492
  br i1 %tobool65, label %cleanup, label %if.end67, !dbg !8493

if.end67:                                         ; preds = %for.body61
  %call68 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @iteration_obstack) #6, !dbg !8494
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call68, metadata !8419, metadata !DIExpression()), !dbg !8470
  %23 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %pointed_by62, align 8, !dbg !8495
  %arrayidx71 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %23, i64 %indvars.iv4, !dbg !8495
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx71, align 8, !dbg !8495
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8423, metadata !DIExpression(DW_OP_deref)), !dbg !8470
  call void @llvm.dbg.value(metadata i32* %j, metadata !8424, metadata !DIExpression(DW_OP_deref)), !dbg !8470
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %24, i32 0, i32* nonnull %j) #7, !dbg !8495
  br label %for.cond72, !dbg !8495

for.cond72:                                       ; preds = %for.body75, %if.end67
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8423, metadata !DIExpression(DW_OP_deref)), !dbg !8470
  call void @llvm.dbg.value(metadata i32* %j, metadata !8424, metadata !DIExpression(DW_OP_deref)), !dbg !8470
  %call73 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !8496
  %tobool74 = icmp eq i8 %call73, 0, !dbg !8495
  br i1 %tobool74, label %for.end83, label %for.body75, !dbg !8495

for.body75:                                       ; preds = %for.cond72
  %25 = load i32*, i32** %pointer_label, align 8, !dbg !8497
  %26 = load i32*, i32** %node_mapping, align 8, !dbg !8498
  %27 = load i32, i32* %j, align 4, !dbg !8499
  call void @llvm.dbg.value(metadata i32 %27, metadata !8424, metadata !DIExpression()), !dbg !8470
  %idxprom77 = zext i32 %27 to i64, !dbg !8500
  %arrayidx78 = getelementptr inbounds i32, i32* %26, i64 %idxprom77, !dbg !8500
  %28 = load i32, i32* %arrayidx78, align 4, !dbg !8500
  %idxprom79 = zext i32 %28 to i64, !dbg !8501
  %arrayidx80 = getelementptr inbounds i32, i32* %25, i64 %idxprom79, !dbg !8501
  %29 = load i32, i32* %arrayidx80, align 4, !dbg !8501
  %call81 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call68, i32 %29) #6, !dbg !8502
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8423, metadata !DIExpression(DW_OP_deref)), !dbg !8470
  call void @llvm.dbg.value(metadata i32* %j, metadata !8424, metadata !DIExpression(DW_OP_deref)), !dbg !8470
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !8496
  br label %for.cond72, !dbg !8496, !llvm.loop !8503

for.end83:                                        ; preds = %for.cond72
  %30 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %pointed_by62, align 8, !dbg !8505
  %arrayidx86 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %30, i64 %indvars.iv4, !dbg !8505
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx86, align 8, !dbg !8505
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %31) #6, !dbg !8505
  %32 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %pointed_by62, align 8, !dbg !8505
  %arrayidx89 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %32, i64 %indvars.iv4, !dbg !8505
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx89, align 8, !dbg !8505
  %33 = load %struct.htab*, %struct.htab** @location_equiv_class_table, align 8, !dbg !8506
  %call90 = call fastcc i32 @equiv_class_lookup(%struct.htab* %33, %struct.bitmap_head_def* %call68) #7, !dbg !8507
  call void @llvm.dbg.value(metadata i32 %call90, metadata !8425, metadata !DIExpression()), !dbg !8470
  %cmp91 = icmp eq i32 %call90, 0, !dbg !8508
  br i1 %cmp91, label %if.then93, label %if.else, !dbg !8510

if.then93:                                        ; preds = %for.end83
  %34 = load i32, i32* @location_equiv_class, align 4, !dbg !8511
  %inc94 = add nsw i32 %34, 1, !dbg !8511
  store i32 %inc94, i32* @location_equiv_class, align 4, !dbg !8511
  call void @llvm.dbg.value(metadata i32 %34, metadata !8425, metadata !DIExpression()), !dbg !8470
  %35 = load %struct.htab*, %struct.htab** @location_equiv_class_table, align 8, !dbg !8513
  call fastcc void @equiv_class_add(%struct.htab* %35, i32 %34, %struct.bitmap_head_def* %call68) #7, !dbg !8514
  br label %if.end102, !dbg !8515

if.else:                                          ; preds = %for.end83
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8516
  %tobool95 = icmp eq %struct._IO_FILE* %36, null, !dbg !8516
  br i1 %tobool95, label %if.end101, label %land.lhs.true, !dbg !8519

land.lhs.true:                                    ; preds = %if.else
  %37 = load i32, i32* @dump_flags, align 4, !dbg !8520
  %and96 = and i32 %37, 8, !dbg !8521
  %tobool97 = icmp eq i32 %and96, 0, !dbg !8521
  br i1 %tobool97, label %if.end101, label %if.then98, !dbg !8522

if.then98:                                        ; preds = %land.lhs.true
  %38 = trunc i64 %indvars.iv4 to i32, !dbg !8523
  %call99 = call fastcc %struct.variable_info* @get_varinfo(i32 %38) #7, !dbg !8523
  %name = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call99, i64 0, i32 6, !dbg !8524
  %39 = load i8*, i8** %name, align 8, !dbg !8524
  %call100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %36, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.77, i64 0, i64 0), i8* %39) #6, !dbg !8525
  br label %if.end101, !dbg !8525

if.end101:                                        ; preds = %land.lhs.true, %if.else, %if.then98
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call68) #6, !dbg !8526
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8419, metadata !DIExpression()), !dbg !8470
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then93
  %label.0 = phi i32 [ %34, %if.then93 ], [ %call90, %if.end101 ], !dbg !8470
  call void @llvm.dbg.value(metadata i32 %label.0, metadata !8425, metadata !DIExpression()), !dbg !8470
  %40 = load i32*, i32** %loc_label, align 8, !dbg !8527
  %arrayidx104 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv4, !dbg !8528
  store i32 %label.0, i32* %arrayidx104, align 4, !dbg !8529
  br label %cleanup, !dbg !8530

cleanup:                                          ; preds = %for.body61, %if.end102
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8, !dbg !8530
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #8, !dbg !8530
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !8531
  br label %for.cond51, !dbg !8532, !llvm.loop !8533

for.end110:                                       ; preds = %for.cond51
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8535
  %tobool111 = icmp eq %struct._IO_FILE* %41, null, !dbg !8535
  br i1 %tobool111, label %if.end157, label %land.lhs.true112, !dbg !8536

land.lhs.true112:                                 ; preds = %for.end110
  %42 = load i32, i32* @dump_flags, align 4, !dbg !8537
  %and113 = and i32 %42, 8, !dbg !8538
  %tobool114 = icmp eq i32 %and113, 0, !dbg !8538
  br i1 %tobool114, label %if.end157, label %for.cond116.preheader, !dbg !8539

for.cond116.preheader:                            ; preds = %land.lhs.true112
  %direct_nodes = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 13, !dbg !8540
  br label %for.cond116, !dbg !8541

for.cond116:                                      ; preds = %for.cond116.preheader, %for.body126
  %indvars.iv2 = phi i64 [ 0, %for.cond116.preheader ], [ %indvars.iv.next3, %for.body126 ], !dbg !8542
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !8416, metadata !DIExpression()), !dbg !8435
  %43 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8543
  %base119 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %43, i64 0, i32 0, !dbg !8543
  %call123 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base119) #7, !dbg !8543
  %44 = zext i32 %call123 to i64, !dbg !8544
  %cmp124 = icmp ult i64 %indvars.iv2, %44, !dbg !8544
  br i1 %cmp124, label %for.body126, label %if.end157.loopexit, !dbg !8541

for.body126:                                      ; preds = %for.cond116
  %45 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes, align 8, !dbg !8545
  %div128 = lshr i64 %indvars.iv2, 6, !dbg !8545
  %idxprom129 = and i64 %div128, 67108863, !dbg !8545
  %arrayidx130 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %45, i64 0, i32 3, i64 %idxprom129, !dbg !8545
  %46 = load i64, i64* %arrayidx130, align 8, !dbg !8545
  %rem131 = and i64 %indvars.iv2, 63, !dbg !8545
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8546
  %48 = shl i64 1, %rem131, !dbg !8547
  %49 = and i64 %46, %48, !dbg !8547
  %tobool137 = icmp eq i64 %49, 0, !dbg !8547
  %cond138 = select i1 %tobool137, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79, i64 0, i64 0), !dbg !8547
  %50 = trunc i64 %indvars.iv2 to i32, !dbg !8548
  %call139 = call fastcc %struct.variable_info* @get_varinfo(i32 %50) #7, !dbg !8548
  %name140 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call139, i64 0, i32 6, !dbg !8549
  %51 = load i8*, i8** %name140, align 8, !dbg !8549
  %52 = load i32*, i32** %pointer_label, align 8, !dbg !8550
  %53 = load i32*, i32** %node_mapping, align 8, !dbg !8551
  %arrayidx144 = getelementptr inbounds i32, i32* %53, i64 %indvars.iv2, !dbg !8552
  %54 = load i32, i32* %arrayidx144, align 4, !dbg !8552
  %idxprom145 = zext i32 %54 to i64, !dbg !8553
  %arrayidx146 = getelementptr inbounds i32, i32* %52, i64 %idxprom145, !dbg !8553
  %55 = load i32, i32* %arrayidx146, align 4, !dbg !8553
  %56 = load i32*, i32** %loc_label, align 8, !dbg !8554
  %arrayidx152 = getelementptr inbounds i32, i32* %56, i64 %idxprom145, !dbg !8555
  %57 = load i32, i32* %arrayidx152, align 4, !dbg !8555
  %58 = trunc i64 %indvars.iv2 to i32, !dbg !8556
  %call153 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.78, i64 0, i64 0), i8* %cond138, i32 %58, i8* %51, i32 %55, i32 %57) #6, !dbg !8556
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !8557
  br label %for.cond116, !dbg !8558, !llvm.loop !8559

if.end157.loopexit:                               ; preds = %for.cond116
  br label %if.end157, !dbg !8561

if.end157:                                        ; preds = %if.end157.loopexit, %land.lhs.true112, %for.end110
  call void @llvm.dbg.value(metadata i32 0, metadata !8416, metadata !DIExpression()), !dbg !8435
  br label %for.cond158, !dbg !8561

for.cond158:                                      ; preds = %for.inc189, %if.end157
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc189 ], [ 0, %if.end157 ], !dbg !8562
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8416, metadata !DIExpression()), !dbg !8435
  %59 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8563
  %base161 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %59, i64 0, i32 0, !dbg !8563
  %call165 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base161) #7, !dbg !8563
  %60 = zext i32 %call165 to i64, !dbg !8564
  %cmp166 = icmp ult i64 %indvars.iv, %60, !dbg !8564
  br i1 %cmp166, label %for.body168, label %for.end191, !dbg !8565

for.body168:                                      ; preds = %for.cond158
  %61 = load i32*, i32** %node_mapping, align 8, !dbg !8566
  %arrayidx171 = getelementptr inbounds i32, i32* %61, i64 %indvars.iv, !dbg !8567
  %62 = load i32, i32* %arrayidx171, align 4, !dbg !8567
  call void @llvm.dbg.value(metadata i32 %62, metadata !8431, metadata !DIExpression()), !dbg !8568
  %63 = load i32*, i32** %pointer_label, align 8, !dbg !8569
  %idxprom173 = zext i32 %62 to i64, !dbg !8571
  %arrayidx174 = getelementptr inbounds i32, i32* %63, i64 %idxprom173, !dbg !8571
  %64 = load i32, i32* %arrayidx174, align 4, !dbg !8571
  %cmp175 = icmp eq i32 %64, 0, !dbg !8572
  br i1 %cmp175, label %if.then177, label %for.inc189, !dbg !8573

if.then177:                                       ; preds = %for.body168
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8574
  %tobool178 = icmp eq %struct._IO_FILE* %65, null, !dbg !8574
  br i1 %tobool178, label %if.end186, label %land.lhs.true179, !dbg !8577

land.lhs.true179:                                 ; preds = %if.then177
  %66 = load i32, i32* @dump_flags, align 4, !dbg !8578
  %and180 = and i32 %66, 8, !dbg !8579
  %tobool181 = icmp eq i32 %and180, 0, !dbg !8579
  br i1 %tobool181, label %if.end186, label %if.then182, !dbg !8580

if.then182:                                       ; preds = %land.lhs.true179
  %call183 = call fastcc %struct.variable_info* @get_varinfo(i32 %62) #7, !dbg !8581
  %name184 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call183, i64 0, i32 6, !dbg !8582
  %67 = load i8*, i8** %name184, align 8, !dbg !8582
  %call185 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %65, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.81, i64 0, i64 0), i8* %67) #6, !dbg !8583
  br label %if.end186, !dbg !8583

if.end186:                                        ; preds = %land.lhs.true179, %if.then177, %if.then182
  %68 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 1), align 4, !dbg !8584
  %inc187 = add i32 %68, 1, !dbg !8584
  store i32 %inc187, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 1), align 4, !dbg !8584
  call fastcc void @clear_edges_for_node(%struct.constraint_graph* %graph, i32 %62) #7, !dbg !8585
  br label %for.inc189, !dbg !8586

for.inc189:                                       ; preds = %for.body168, %if.end186
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8587
  br label %for.cond158, !dbg !8588, !llvm.loop !8589

for.end191:                                       ; preds = %for.cond158
  ret %struct.scc_info* %call, !dbg !8591
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rewrite_constraints(%struct.constraint_graph* %graph, %struct.scc_info* %si) unnamed_addr #5 !dbg !8592 {
entry:
  %c = alloca %struct.constraint*, align 8
  %lhs = alloca %struct.constraint_expr, align 8
  %rhs = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !8596, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.value(metadata %struct.scc_info* %si, metadata !8597, metadata !DIExpression()), !dbg !8612
  %0 = bitcast %struct.constraint** %c to i8*, !dbg !8613
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8613
  call void @llvm.dbg.value(metadata i32 0, metadata !8599, metadata !DIExpression()), !dbg !8612
  %size = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 0, !dbg !8614
  br label %for.cond, !dbg !8617

for.cond:                                         ; preds = %for.inc, %entry
  %j.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !8618
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !8599, metadata !DIExpression()), !dbg !8612
  %1 = load i32, i32* %size, align 8, !dbg !8619
  %cmp = icmp ult i32 %j.0, %1, !dbg !8620
  br i1 %cmp, label %for.body, label %for.cond2.preheader, !dbg !8621

for.cond2.preheader:                              ; preds = %for.cond
  %2 = bitcast %struct.constraint_expr* %lhs to i8*, !dbg !8622
  %3 = bitcast %struct.constraint** %c to i8**, !dbg !8622
  %4 = bitcast %struct.constraint_expr* %rhs to i8*, !dbg !8622
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 1, !dbg !8622
  %var13 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 1, !dbg !8622
  %node_mapping = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 3, !dbg !8622
  %pointer_label = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 9, !dbg !8622
  br label %for.cond2, !dbg !8623

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc i32 @find(i32 %j.0) #7, !dbg !8624
  %cmp1 = icmp eq i32 %call, %j.0, !dbg !8624
  br i1 %cmp1, label %for.inc, label %cond.true, !dbg !8624

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2347, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8624
  br label %for.inc, !dbg !8624

for.inc:                                          ; preds = %cond.true, %for.body
  %inc = add i32 %j.0, 1, !dbg !8625
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8599, metadata !DIExpression()), !dbg !8612
  br label %for.cond, !dbg !8626, !llvm.loop !8627

for.cond2:                                        ; preds = %for.cond2.preheader, %cleanup
  %i.0 = phi i32 [ %inc72, %cleanup ], [ 0, %for.cond2.preheader ], !dbg !8629
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8598, metadata !DIExpression()), !dbg !8612
  %5 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** @constraints, align 8, !dbg !8630
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %5, i64 0, i32 0, !dbg !8630
  call void @llvm.dbg.value(metadata %struct.constraint** %c, metadata !8600, metadata !DIExpression(DW_OP_deref)), !dbg !8612
  %call7 = call fastcc i32 @VEC_constraint_t_base_iterate(%struct.VEC_constraint_t_base* %base, i32 %i.0, %struct.constraint** nonnull %c) #7, !dbg !8630
  %tobool8 = icmp eq i32 %call7, 0, !dbg !8623
  br i1 %tobool8, label %for.end73, label %for.body9, !dbg !8623

for.body9:                                        ; preds = %for.cond2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !8631
  %6 = load i8*, i8** %3, align 8, !dbg !8632
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %6, i64 16, i1 false), !dbg !8633
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !8634
  call void @llvm.dbg.value(metadata i8* %6, metadata !8600, metadata !DIExpression()), !dbg !8612
  %rhs11 = getelementptr inbounds i8, i8* %6, i64 16, !dbg !8635
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %rhs11, i64 16, i1 false), !dbg !8635
  %7 = load i32, i32* %var, align 4, !dbg !8636
  %call12 = call fastcc i32 @find(i32 %7) #7, !dbg !8637
  call void @llvm.dbg.value(metadata i32 %call12, metadata !8606, metadata !DIExpression()), !dbg !8622
  %8 = load i32, i32* %var13, align 4, !dbg !8638
  %call14 = call fastcc i32 @find(i32 %8) #7, !dbg !8639
  call void @llvm.dbg.value(metadata i32 %call14, metadata !8607, metadata !DIExpression()), !dbg !8622
  %9 = load i32*, i32** %node_mapping, align 8, !dbg !8640
  %idxprom = zext i32 %call12 to i64, !dbg !8641
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !8641
  %10 = load i32, i32* %arrayidx, align 4, !dbg !8641
  call void @llvm.dbg.value(metadata i32 %10, metadata !8608, metadata !DIExpression()), !dbg !8622
  %idxprom16 = zext i32 %call14 to i64, !dbg !8642
  %arrayidx17 = getelementptr inbounds i32, i32* %9, i64 %idxprom16, !dbg !8642
  %11 = load i32, i32* %arrayidx17, align 4, !dbg !8642
  call void @llvm.dbg.value(metadata i32 %11, metadata !8609, metadata !DIExpression()), !dbg !8622
  %12 = load i32*, i32** %pointer_label, align 8, !dbg !8643
  %idxprom18 = zext i32 %10 to i64, !dbg !8644
  %arrayidx19 = getelementptr inbounds i32, i32* %12, i64 %idxprom18, !dbg !8644
  %13 = load i32, i32* %arrayidx19, align 4, !dbg !8644
  call void @llvm.dbg.value(metadata i32 %13, metadata !8610, metadata !DIExpression()), !dbg !8622
  %idxprom21 = zext i32 %11 to i64, !dbg !8645
  %arrayidx22 = getelementptr inbounds i32, i32* %12, i64 %idxprom21, !dbg !8645
  %14 = load i32, i32* %arrayidx22, align 4, !dbg !8645
  call void @llvm.dbg.value(metadata i32 %14, metadata !8611, metadata !DIExpression()), !dbg !8622
  %cmp23 = icmp eq i32 %13, 0, !dbg !8646
  br i1 %cmp23, label %if.then, label %if.end37, !dbg !8648

if.then:                                          ; preds = %for.body9
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8649
  %tobool24 = icmp eq %struct._IO_FILE* %15, null, !dbg !8649
  br i1 %tobool24, label %if.end, label %land.lhs.true, !dbg !8652

land.lhs.true:                                    ; preds = %if.then
  %16 = load i32, i32* @dump_flags, align 4, !dbg !8653
  %and = and i32 %16, 8, !dbg !8654
  %tobool25 = icmp eq i32 %and, 0, !dbg !8654
  br i1 %tobool25, label %if.end, label %if.then26, !dbg !8655

if.then26:                                        ; preds = %land.lhs.true
  %call28 = call fastcc %struct.variable_info* @get_varinfo(i32 %7) #7, !dbg !8656
  %name = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call28, i64 0, i32 6, !dbg !8658
  %17 = load i8*, i8** %name, align 8, !dbg !8658
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %15, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.82, i64 0, i64 0), i8* %17) #6, !dbg !8659
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8660
  %19 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !8661
  call void @llvm.dbg.value(metadata %struct.constraint* %19, metadata !8600, metadata !DIExpression()), !dbg !8612
  call fastcc void @dump_constraint(%struct._IO_FILE* %18, %struct.constraint* %19) #7, !dbg !8662
  br label %if.end, !dbg !8663

if.end:                                           ; preds = %land.lhs.true, %if.then, %if.then26
  %20 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** @constraints, align 8, !dbg !8664
  %base32 = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %20, i64 0, i32 0, !dbg !8664
  %call36 = call fastcc %struct.constraint* @VEC_constraint_t_base_replace(%struct.VEC_constraint_t_base* %base32, i32 %i.0, %struct.constraint* null) #7, !dbg !8664
  br label %cleanup, !dbg !8665

if.end37:                                         ; preds = %for.body9
  %cmp38 = icmp eq i32 %14, 0, !dbg !8666
  br i1 %cmp38, label %if.then39, label %if.end57, !dbg !8668

if.then39:                                        ; preds = %if.end37
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8669
  %tobool40 = icmp eq %struct._IO_FILE* %21, null, !dbg !8669
  br i1 %tobool40, label %if.end49, label %land.lhs.true41, !dbg !8672

land.lhs.true41:                                  ; preds = %if.then39
  %22 = load i32, i32* @dump_flags, align 4, !dbg !8673
  %and42 = and i32 %22, 8, !dbg !8674
  %tobool43 = icmp eq i32 %and42, 0, !dbg !8674
  br i1 %tobool43, label %if.end49, label %if.then44, !dbg !8675

if.then44:                                        ; preds = %land.lhs.true41
  %call46 = call fastcc %struct.variable_info* @get_varinfo(i32 %8) #7, !dbg !8676
  %name47 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call46, i64 0, i32 6, !dbg !8678
  %23 = load i8*, i8** %name47, align 8, !dbg !8678
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %21, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.82, i64 0, i64 0), i8* %23) #6, !dbg !8679
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8680
  %25 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !8681
  call void @llvm.dbg.value(metadata %struct.constraint* %25, metadata !8600, metadata !DIExpression()), !dbg !8612
  call fastcc void @dump_constraint(%struct._IO_FILE* %24, %struct.constraint* %25) #7, !dbg !8682
  br label %if.end49, !dbg !8683

if.end49:                                         ; preds = %land.lhs.true41, %if.then39, %if.then44
  %26 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** @constraints, align 8, !dbg !8684
  %base52 = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %26, i64 0, i32 0, !dbg !8684
  %call56 = call fastcc %struct.constraint* @VEC_constraint_t_base_replace(%struct.VEC_constraint_t_base* %base52, i32 %i.0, %struct.constraint* null) #7, !dbg !8684
  br label %cleanup, !dbg !8685

if.end57:                                         ; preds = %if.end37
  %call58 = call fastcc i32 @find_equivalent_node(%struct.constraint_graph* %graph, i32 %call12, i32 %13) #7, !dbg !8686
  call void @llvm.dbg.value(metadata i32 %call58, metadata !8606, metadata !DIExpression()), !dbg !8622
  %call59 = call fastcc i32 @find_equivalent_node(%struct.constraint_graph* %graph, i32 %call14, i32 %14) #7, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %call59, metadata !8607, metadata !DIExpression()), !dbg !8622
  %27 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !8688
  call void @llvm.dbg.value(metadata %struct.constraint* %27, metadata !8600, metadata !DIExpression()), !dbg !8612
  %var61 = getelementptr inbounds %struct.constraint, %struct.constraint* %27, i64 0, i32 0, i32 1, !dbg !8689
  store i32 %call58, i32* %var61, align 4, !dbg !8690
  %28 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !8691
  call void @llvm.dbg.value(metadata %struct.constraint* %28, metadata !8600, metadata !DIExpression()), !dbg !8612
  %var63 = getelementptr inbounds %struct.constraint, %struct.constraint* %28, i64 0, i32 1, i32 1, !dbg !8692
  store i32 %call59, i32* %var63, align 4, !dbg !8693
  br label %cleanup, !dbg !8694

cleanup:                                          ; preds = %if.end57, %if.end49, %if.end
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !8694
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !8694
  %inc72 = add nuw nsw i32 %i.0, 1, !dbg !8695
  call void @llvm.dbg.value(metadata i32 %inc72, metadata !8598, metadata !DIExpression()), !dbg !8612
  br label %for.cond2, !dbg !8696, !llvm.loop !8697

for.end73:                                        ; preds = %for.cond2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8699
  ret void, !dbg !8699
}

; Function Attrs: nounwind uwtable
define internal fastcc void @build_succ_graph() unnamed_addr #5 !dbg !8700 {
entry:
  %c = alloca %struct.constraint*, align 8
  %lhs = alloca %struct.constraint_expr, align 8
  %rhs = alloca %struct.constraint_expr, align 8
  %0 = bitcast %struct.constraint** %c to i8*, !dbg !8712
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8712
  call void @llvm.dbg.value(metadata i32 0, metadata !8702, metadata !DIExpression()), !dbg !8713
  %1 = bitcast %struct.constraint_expr* %lhs to i8*, !dbg !8714
  %2 = bitcast %struct.constraint_expr* %rhs to i8*, !dbg !8714
  %var = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 1, !dbg !8714
  %var6 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 1, !dbg !8714
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 0, !dbg !8715
  %type25 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 0, !dbg !8717
  %offset66 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 2, !dbg !8719
  %offset69 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2, !dbg !8719
  br label %for.cond, !dbg !8722

for.cond:                                         ; preds = %cleanup, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cleanup ], !dbg !8723
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8702, metadata !DIExpression()), !dbg !8713
  %3 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** @constraints, align 8, !dbg !8724
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %3, i64 0, i32 0, !dbg !8724
  call void @llvm.dbg.value(metadata %struct.constraint** %c, metadata !8704, metadata !DIExpression(DW_OP_deref)), !dbg !8713
  %call = call fastcc i32 @VEC_constraint_t_base_iterate(%struct.VEC_constraint_t_base* %base, i32 %i.0, %struct.constraint** nonnull %c) #7, !dbg !8724
  %tobool1 = icmp eq i32 %call, 0, !dbg !8725
  br i1 %tobool1, label %for.end, label %for.body, !dbg !8725

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8726
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !8727
  %4 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !8728
  call void @llvm.dbg.value(metadata %struct.constraint* %4, metadata !8704, metadata !DIExpression()), !dbg !8713
  %tobool2 = icmp eq %struct.constraint* %4, null, !dbg !8728
  br i1 %tobool2, label %cleanup, label %if.end, !dbg !8730

if.end:                                           ; preds = %for.body
  %5 = bitcast %struct.constraint* %4 to i8*, !dbg !8730
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !8731
  call void @llvm.dbg.value(metadata i8* %5, metadata !8704, metadata !DIExpression()), !dbg !8713
  %rhs4 = getelementptr inbounds %struct.constraint, %struct.constraint* %4, i64 0, i32 1, !dbg !8732
  %6 = bitcast %struct.constraint_expr* %rhs4 to i8*, !dbg !8732
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !8732
  %7 = load i32, i32* %var, align 4, !dbg !8733
  %call5 = call fastcc i32 @find(i32 %7) #7, !dbg !8734
  call void @llvm.dbg.value(metadata i32 %call5, metadata !8710, metadata !DIExpression()), !dbg !8714
  %8 = load i32, i32* %var6, align 4, !dbg !8735
  %call7 = call fastcc i32 @find(i32 %8) #7, !dbg !8736
  call void @llvm.dbg.value(metadata i32 %call7, metadata !8711, metadata !DIExpression()), !dbg !8714
  %9 = load i32, i32* %type, align 8, !dbg !8737
  %cmp = icmp eq i32 %9, 1, !dbg !8738
  br i1 %cmp, label %if.then8, label %if.else, !dbg !8739

if.then8:                                         ; preds = %if.end
  %10 = load i64, i64* %offset69, align 8, !dbg !8740
  %cmp9 = icmp eq i64 %10, 0, !dbg !8743
  br i1 %cmp9, label %land.lhs.true, label %cleanup, !dbg !8744

land.lhs.true:                                    ; preds = %if.then8
  %11 = load i64, i64* %offset66, align 8, !dbg !8745
  %cmp11 = icmp eq i64 %11, 0, !dbg !8746
  br i1 %cmp11, label %land.lhs.true12, label %cleanup, !dbg !8747

land.lhs.true12:                                  ; preds = %land.lhs.true
  %12 = load i32, i32* %type25, align 8, !dbg !8748
  %cmp14 = icmp eq i32 %12, 0, !dbg !8749
  br i1 %cmp14, label %if.then15, label %cleanup, !dbg !8750

if.then15:                                        ; preds = %land.lhs.true12
  %13 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8751
  %14 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8752
  %base18 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %14, i64 0, i32 0, !dbg !8752
  %call22 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base18) #7, !dbg !8752
  %add = add i32 %call22, %call5, !dbg !8753
  %call23 = call fastcc zeroext i8 @add_graph_edge(%struct.constraint_graph* %13, i32 %add, i32 %call7) #7, !dbg !8754
  br label %cleanup, !dbg !8754

if.else:                                          ; preds = %if.end
  %15 = load i32, i32* %type25, align 8, !dbg !8755
  %cmp26 = icmp eq i32 %15, 1, !dbg !8756
  br i1 %cmp26, label %if.then27, label %if.else47, !dbg !8757

if.then27:                                        ; preds = %if.else
  %16 = load i64, i64* %offset69, align 8, !dbg !8758
  %cmp29 = icmp eq i64 %16, 0, !dbg !8761
  br i1 %cmp29, label %land.lhs.true30, label %cleanup, !dbg !8762

land.lhs.true30:                                  ; preds = %if.then27
  %17 = load i64, i64* %offset66, align 8, !dbg !8763
  %cmp32 = icmp eq i64 %17, 0, !dbg !8764
  br i1 %cmp32, label %land.lhs.true33, label %cleanup, !dbg !8765

land.lhs.true33:                                  ; preds = %land.lhs.true30
  %cmp35 = icmp eq i32 %9, 0, !dbg !8766
  br i1 %cmp35, label %if.then36, label %cleanup, !dbg !8767

if.then36:                                        ; preds = %land.lhs.true33
  %18 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8768
  %19 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8769
  %base39 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %19, i64 0, i32 0, !dbg !8769
  %call43 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base39) #7, !dbg !8769
  %add44 = add i32 %call43, %call7, !dbg !8770
  %call45 = call fastcc zeroext i8 @add_graph_edge(%struct.constraint_graph* %18, i32 %call5, i32 %add44) #7, !dbg !8771
  br label %cleanup, !dbg !8771

if.else47:                                        ; preds = %if.else
  %cmp49 = icmp eq i32 %15, 2, !dbg !8772
  br i1 %cmp49, label %if.then50, label %if.else61, !dbg !8773

if.then50:                                        ; preds = %if.else47
  %call52 = call fastcc i32 @find(i32 %8) #7, !dbg !8774
  %cmp54 = icmp eq i32 %call52, %8, !dbg !8774
  br i1 %cmp54, label %cond.end57, label %cond.true55, !dbg !8774

cond.true55:                                      ; preds = %if.then50
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1263, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8774
  br label %cond.end57, !dbg !8774

cond.end57:                                       ; preds = %if.then50, %cond.true55
  %call59 = call fastcc %struct.variable_info* @get_varinfo(i32 %call5) #7, !dbg !8776
  %solution = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call59, i64 0, i32 8, !dbg !8777
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution, align 8, !dbg !8777
  %call60 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %20, i32 %call7) #6, !dbg !8778
  br label %cleanup, !dbg !8779

if.else61:                                        ; preds = %if.else47
  %cmp62 = icmp ugt i32 %call5, 1, !dbg !8780
  %cmp64 = icmp ne i32 %call5, %call7, !dbg !8781
  %or.cond = and i1 %cmp62, %cmp64, !dbg !8782
  br i1 %or.cond, label %land.lhs.true65, label %cleanup, !dbg !8782

land.lhs.true65:                                  ; preds = %if.else61
  %21 = load i64, i64* %offset66, align 8, !dbg !8783
  %cmp67 = icmp eq i64 %21, 0, !dbg !8784
  br i1 %cmp67, label %land.lhs.true68, label %cleanup, !dbg !8785

land.lhs.true68:                                  ; preds = %land.lhs.true65
  %22 = load i64, i64* %offset69, align 8, !dbg !8786
  %cmp70 = icmp eq i64 %22, 0, !dbg !8787
  br i1 %cmp70, label %if.then71, label %cleanup, !dbg !8788

if.then71:                                        ; preds = %land.lhs.true68
  %23 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8789
  %call72 = call fastcc zeroext i8 @add_graph_edge(%struct.constraint_graph* %23, i32 %call5, i32 %call7) #7, !dbg !8791
  br label %cleanup, !dbg !8792

cleanup:                                          ; preds = %for.body, %if.then15, %land.lhs.true12, %land.lhs.true, %if.then8, %cond.end57, %if.then71, %land.lhs.true68, %land.lhs.true65, %if.else61, %if.then27, %land.lhs.true30, %land.lhs.true33, %if.then36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !8793
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8793
  %inc = add i32 %i.0, 1, !dbg !8794
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8702, metadata !DIExpression()), !dbg !8713
  br label %for.cond, !dbg !8795, !llvm.loop !8796

for.end:                                          ; preds = %for.cond
  %call80 = call fastcc i32 @find(i32 6) #7, !dbg !8798
  call void @llvm.dbg.value(metadata i32 %call80, metadata !8703, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i32 8, metadata !8702, metadata !DIExpression()), !dbg !8713
  br label %for.cond81, !dbg !8799

for.cond81:                                       ; preds = %for.inc99, %for.end
  %i.1 = phi i32 [ 8, %for.end ], [ %inc100, %for.inc99 ], !dbg !8801
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !8702, metadata !DIExpression()), !dbg !8713
  %24 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8802
  %base84 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %24, i64 0, i32 0, !dbg !8802
  %call88 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base84) #7, !dbg !8802
  %cmp89 = icmp ult i32 %i.1, %call88, !dbg !8804
  %25 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8713
  br i1 %cmp89, label %for.body90, label %for.end101, !dbg !8805

for.body90:                                       ; preds = %for.cond81
  %direct_nodes = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %25, i64 0, i32 13, !dbg !8806
  %26 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes, align 8, !dbg !8806
  %div = lshr i32 %i.1, 6, !dbg !8806
  %idxprom = zext i32 %div to i64, !dbg !8806
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %26, i64 0, i32 3, i64 %idxprom, !dbg !8806
  %27 = load i64, i64* %arrayidx, align 8, !dbg !8806
  %rem = and i32 %i.1, 63, !dbg !8806
  %sh_prom = zext i32 %rem to i64, !dbg !8806
  %28 = shl i64 1, %sh_prom, !dbg !8806
  %29 = and i64 %27, %28, !dbg !8806
  %tobool91 = icmp eq i64 %29, 0, !dbg !8806
  br i1 %tobool91, label %land.lhs.true92, label %for.inc99, !dbg !8809

land.lhs.true92:                                  ; preds = %for.body90
  %call93 = call fastcc %struct.variable_info* @get_varinfo(i32 %i.1) #7, !dbg !8810
  %may_have_pointers = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call93, i64 0, i32 1, !dbg !8811
  %bf.load = load i8, i8* %may_have_pointers, align 4, !dbg !8811
  %bf.clear = and i8 %bf.load, 64, !dbg !8811
  %tobool94 = icmp eq i8 %bf.clear, 0, !dbg !8810
  br i1 %tobool94, label %for.inc99, label %if.then95, !dbg !8812

if.then95:                                        ; preds = %land.lhs.true92
  %30 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8813
  %call96 = call fastcc i32 @find(i32 %i.1) #7, !dbg !8814
  %call97 = call fastcc zeroext i8 @add_graph_edge(%struct.constraint_graph* %30, i32 %call96, i32 %call80) #7, !dbg !8815
  br label %for.inc99, !dbg !8815

for.inc99:                                        ; preds = %land.lhs.true92, %for.body90, %if.then95
  %inc100 = add i32 %i.1, 1, !dbg !8816
  call void @llvm.dbg.value(metadata i32 %inc100, metadata !8702, metadata !DIExpression()), !dbg !8713
  br label %for.cond81, !dbg !8817, !llvm.loop !8818

for.end101:                                       ; preds = %for.cond81
  %.lcssa = phi %struct.constraint_graph* [ %25, %for.cond81 ], !dbg !8713
  %call102 = call fastcc i32 @find(i32 3) #7, !dbg !8820
  %call103 = call fastcc zeroext i8 @add_graph_edge(%struct.constraint_graph* %.lcssa, i32 %call102, i32 %call80) #7, !dbg !8821
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8822
  ret void, !dbg !8822
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_var_substitution_info(%struct.scc_info* %si) unnamed_addr #5 !dbg !8823 {
entry:
  call void @llvm.dbg.value(metadata %struct.scc_info* %si, metadata !8827, metadata !DIExpression()), !dbg !8828
  tail call fastcc void @free_scc_info(%struct.scc_info* %si) #7, !dbg !8829
  %0 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8830
  %pointer_label = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %0, i64 0, i32 9, !dbg !8831
  %1 = bitcast i32** %pointer_label to i8**, !dbg !8831
  %2 = load i8*, i8** %1, align 8, !dbg !8831
  tail call void @free(i8* %2) #6, !dbg !8832
  %3 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8833
  %loc_label = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %3, i64 0, i32 10, !dbg !8834
  %4 = bitcast i32** %loc_label to i8**, !dbg !8834
  %5 = load i8*, i8** %4, align 8, !dbg !8834
  tail call void @free(i8* %5) #6, !dbg !8835
  %6 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8836
  %pointed_by = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %6, i64 0, i32 11, !dbg !8837
  %7 = bitcast %struct.bitmap_head_def*** %pointed_by to i8**, !dbg !8837
  %8 = load i8*, i8** %7, align 8, !dbg !8837
  tail call void @free(i8* %8) #6, !dbg !8838
  %9 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8839
  %points_to = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %9, i64 0, i32 12, !dbg !8840
  %10 = bitcast %struct.bitmap_head_def*** %points_to to i8**, !dbg !8840
  %11 = load i8*, i8** %10, align 8, !dbg !8840
  tail call void @free(i8* %11) #6, !dbg !8841
  %12 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8842
  %eq_rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %12, i64 0, i32 6, !dbg !8843
  %13 = bitcast i32** %eq_rep to i8**, !dbg !8843
  %14 = load i8*, i8** %13, align 8, !dbg !8843
  tail call void @free(i8* %14) #6, !dbg !8844
  %15 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8845
  %direct_nodes = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %15, i64 0, i32 13, !dbg !8845
  %16 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes, align 8, !dbg !8845
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %16, i64 0, i32 0, !dbg !8845
  %17 = load i8*, i8** %popcount, align 8, !dbg !8845
  tail call void @free(i8* %17) #6, !dbg !8845
  %18 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !8845
  %direct_nodes1 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %18, i64 0, i32 13, !dbg !8845
  %19 = bitcast %struct.simple_bitmap_def** %direct_nodes1 to i8**, !dbg !8845
  %20 = load i8*, i8** %19, align 8, !dbg !8845
  tail call void @free(i8* %20) #6, !dbg !8845
  %21 = load %struct.htab*, %struct.htab** @pointer_equiv_class_table, align 8, !dbg !8846
  tail call void @htab_delete(%struct.htab* %21) #6, !dbg !8847
  %22 = load %struct.htab*, %struct.htab** @location_equiv_class_table, align 8, !dbg !8848
  tail call void @htab_delete(%struct.htab* %22) #6, !dbg !8849
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* nonnull @iteration_obstack) #6, !dbg !8850
  ret void, !dbg !8851
}

; Function Attrs: nounwind uwtable
define internal fastcc void @move_complex_constraints(%struct.constraint_graph* %graph) unnamed_addr #5 !dbg !8852 {
entry:
  %c = alloca %struct.constraint*, align 8
  %lhs = alloca %struct.constraint_expr, align 8
  %rhs = alloca %struct.constraint_expr, align 8
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !8856, metadata !DIExpression()), !dbg !8866
  %0 = bitcast %struct.constraint** %c to i8*, !dbg !8867
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8867
  call void @llvm.dbg.value(metadata i32 0, metadata !8857, metadata !DIExpression()), !dbg !8866
  %1 = bitcast %struct.constraint_expr* %lhs to i8*, !dbg !8868
  %2 = bitcast %struct.constraint_expr* %rhs to i8*, !dbg !8868
  %type = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 0, !dbg !8869
  %type6 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 0, !dbg !8871
  %var17 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 1, !dbg !8873
  %offset = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %lhs, i64 0, i32 2, !dbg !8873
  %offset21 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 2, !dbg !8873
  %var24 = getelementptr inbounds %struct.constraint_expr, %struct.constraint_expr* %rhs, i64 0, i32 1, !dbg !8875
  br label %for.cond, !dbg !8877

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !8878
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8857, metadata !DIExpression()), !dbg !8866
  %3 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** @constraints, align 8, !dbg !8879
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %3, i64 0, i32 0, !dbg !8879
  call void @llvm.dbg.value(metadata %struct.constraint** %c, metadata !8858, metadata !DIExpression(DW_OP_deref)), !dbg !8866
  %call = call fastcc i32 @VEC_constraint_t_base_iterate(%struct.VEC_constraint_t_base* %base, i32 %i.0, %struct.constraint** nonnull %c) #7, !dbg !8879
  %tobool1 = icmp eq i32 %call, 0, !dbg !8880
  br i1 %tobool1, label %for.end, label %for.body, !dbg !8880

for.body:                                         ; preds = %for.cond
  %4 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !8881
  call void @llvm.dbg.value(metadata %struct.constraint* %4, metadata !8858, metadata !DIExpression()), !dbg !8866
  %tobool2 = icmp eq %struct.constraint* %4, null, !dbg !8881
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !8882

if.then:                                          ; preds = %for.body
  %5 = bitcast %struct.constraint* %4 to i8*, !dbg !8882
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8883
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !8884
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !8885
  call void @llvm.dbg.value(metadata i8* %5, metadata !8858, metadata !DIExpression()), !dbg !8866
  %rhs4 = getelementptr inbounds %struct.constraint, %struct.constraint* %4, i64 0, i32 1, !dbg !8886
  %6 = bitcast %struct.constraint_expr* %rhs4 to i8*, !dbg !8886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !8886
  %7 = load i32, i32* %type, align 8, !dbg !8887
  %cmp = icmp eq i32 %7, 1, !dbg !8888
  br i1 %cmp, label %if.then5, label %if.else, !dbg !8889

if.then5:                                         ; preds = %if.then
  %8 = load i32, i32* %var17, align 4, !dbg !8890
  call void @llvm.dbg.value(metadata %struct.constraint* %4, metadata !8858, metadata !DIExpression()), !dbg !8866
  call fastcc void @insert_into_complex(%struct.constraint_graph* %graph, i32 %8, %struct.constraint* nonnull %4) #7, !dbg !8892
  br label %if.end27, !dbg !8893

if.else:                                          ; preds = %if.then
  %9 = load i32, i32* %type6, align 8, !dbg !8894
  %cmp7 = icmp eq i32 %9, 1, !dbg !8895
  br i1 %cmp7, label %if.then8, label %if.else14, !dbg !8896

if.then8:                                         ; preds = %if.else
  %10 = load i32, i32* %var17, align 4, !dbg !8897
  %call10 = call fastcc %struct.variable_info* @get_varinfo(i32 %10) #7, !dbg !8900
  %is_special_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call10, i64 0, i32 1, !dbg !8901
  %bf.load = load i8, i8* %is_special_var, align 4, !dbg !8901
  %bf.clear = and i8 %bf.load, 2, !dbg !8901
  %tobool11 = icmp eq i8 %bf.clear, 0, !dbg !8902
  br i1 %tobool11, label %if.then12, label %if.end27, !dbg !8903

if.then12:                                        ; preds = %if.then8
  %11 = load i32, i32* %var24, align 4, !dbg !8904
  %12 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !8905
  call void @llvm.dbg.value(metadata %struct.constraint* %12, metadata !8858, metadata !DIExpression()), !dbg !8866
  call fastcc void @insert_into_complex(%struct.constraint_graph* %graph, i32 %11, %struct.constraint* %12) #7, !dbg !8906
  br label %if.end27, !dbg !8906

if.else14:                                        ; preds = %if.else
  %cmp16 = icmp eq i32 %9, 2, !dbg !8907
  br i1 %cmp16, label %if.end27, label %land.lhs.true, !dbg !8908

land.lhs.true:                                    ; preds = %if.else14
  %13 = load i32, i32* %var17, align 4, !dbg !8909
  %cmp18 = icmp ugt i32 %13, 1, !dbg !8910
  br i1 %cmp18, label %land.lhs.true19, label %if.end27, !dbg !8911

land.lhs.true19:                                  ; preds = %land.lhs.true
  %14 = load i64, i64* %offset, align 8, !dbg !8912
  %cmp20 = icmp eq i64 %14, 0, !dbg !8913
  br i1 %cmp20, label %lor.lhs.false, label %if.then23, !dbg !8914

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %15 = load i64, i64* %offset21, align 8, !dbg !8915
  %cmp22 = icmp eq i64 %15, 0, !dbg !8916
  br i1 %cmp22, label %if.end27, label %if.then23, !dbg !8917

if.then23:                                        ; preds = %lor.lhs.false, %land.lhs.true19
  %16 = load i32, i32* %var24, align 4, !dbg !8918
  call void @llvm.dbg.value(metadata %struct.constraint* %4, metadata !8858, metadata !DIExpression()), !dbg !8866
  call fastcc void @insert_into_complex(%struct.constraint_graph* %graph, i32 %16, %struct.constraint* nonnull %4) #7, !dbg !8919
  br label %if.end27, !dbg !8920

if.end27:                                         ; preds = %if.then8, %lor.lhs.false, %if.else14, %if.then12, %if.then23, %land.lhs.true, %if.then5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !8921
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8921
  br label %for.inc, !dbg !8922

for.inc:                                          ; preds = %for.body, %if.end27
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8923
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8857, metadata !DIExpression()), !dbg !8866
  br label %for.cond, !dbg !8924, !llvm.loop !8925

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8927
  ret void, !dbg !8927
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unite_pointer_equivalences(%struct.constraint_graph* %graph) unnamed_addr #5 !dbg !8928 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !8930, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 0, metadata !8931, metadata !DIExpression()), !dbg !8939
  %pe = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 7, !dbg !8940
  %pe_rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 8, !dbg !8941
  br label %for.cond, !dbg !8942

for.cond:                                         ; preds = %cleanup14, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup14 ], [ 0, %entry ], !dbg !8943
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8931, metadata !DIExpression()), !dbg !8939
  %0 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8944
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %0, i64 0, i32 0, !dbg !8944
  %call = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !8944
  %1 = zext i32 %call to i64, !dbg !8945
  %cmp = icmp ult i64 %indvars.iv, %1, !dbg !8945
  br i1 %cmp, label %for.body, label %for.end, !dbg !8946

for.body:                                         ; preds = %for.cond
  %2 = load i32*, i32** %pe, align 8, !dbg !8947
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %indvars.iv, !dbg !8948
  %3 = load i32, i32* %arrayidx, align 4, !dbg !8948
  call void @llvm.dbg.value(metadata i32 %3, metadata !8932, metadata !DIExpression()), !dbg !8940
  %tobool1 = icmp eq i32 %3, 0, !dbg !8949
  br i1 %tobool1, label %if.end13, label %if.then, !dbg !8950

if.then:                                          ; preds = %for.body
  %4 = load i32*, i32** %pe_rep, align 8, !dbg !8951
  %idxprom2 = zext i32 %3 to i64, !dbg !8952
  %arrayidx3 = getelementptr inbounds i32, i32* %4, i64 %idxprom2, !dbg !8952
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !8952
  call void @llvm.dbg.value(metadata i32 %5, metadata !8936, metadata !DIExpression()), !dbg !8941
  %cmp4 = icmp eq i32 %5, -1, !dbg !8953
  br i1 %cmp4, label %cleanup, label %if.end, !dbg !8955

if.end:                                           ; preds = %if.then
  %call6 = tail call fastcc i32 @find(i32 %5) #7, !dbg !8956
  call void @llvm.dbg.value(metadata i32 %call6, metadata !8936, metadata !DIExpression()), !dbg !8941
  %cmp7 = icmp sgt i32 %call6, -1, !dbg !8957
  br i1 %cmp7, label %land.lhs.true, label %cleanup, !dbg !8959

land.lhs.true:                                    ; preds = %if.end
  %6 = trunc i64 %indvars.iv to i32, !dbg !8960
  %call8 = tail call fastcc i32 @find(i32 %6) #7, !dbg !8960
  %call9 = tail call fastcc zeroext i8 @unite(i32 %call6, i32 %call8) #7, !dbg !8961
  %tobool10 = icmp eq i8 %call9, 0, !dbg !8961
  br i1 %tobool10, label %cleanup, label %if.then11, !dbg !8962

if.then11:                                        ; preds = %land.lhs.true
  %7 = trunc i64 %indvars.iv to i32, !dbg !8963
  tail call fastcc void @unify_nodes(%struct.constraint_graph* %graph, i32 %call6, i32 %7, i8 zeroext 0) #7, !dbg !8963
  br label %cleanup, !dbg !8963

cleanup:                                          ; preds = %land.lhs.true, %if.end, %if.then11, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %if.then11 ], [ true, %land.lhs.true ], [ true, %if.end ]
  br i1 %cleanup.dest.slot.0, label %if.end13, label %cleanup14

if.end13:                                         ; preds = %for.body, %cleanup
  br label %cleanup14, !dbg !8964

cleanup14:                                        ; preds = %cleanup, %if.end13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8965
  br label %for.cond, !dbg !8966, !llvm.loop !8967

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8969
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_indirect_cycles(%struct.constraint_graph* %graph) unnamed_addr #5 !dbg !8970 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !8972, metadata !DIExpression()), !dbg !8976
  %size1 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 0, !dbg !8977
  %0 = load i32, i32* %size1, align 8, !dbg !8977
  call void @llvm.dbg.value(metadata i32 %0, metadata !8974, metadata !DIExpression()), !dbg !8976
  %conv = zext i32 %0 to i64, !dbg !8978
  %call = tail call fastcc %struct.scc_info* @init_scc_info(i64 %conv) #7, !dbg !8979
  call void @llvm.dbg.value(metadata %struct.scc_info* %call, metadata !8975, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata i32 0, metadata !8973, metadata !DIExpression()), !dbg !8976
  %visited = getelementptr inbounds %struct.scc_info, %struct.scc_info* %call, i64 0, i32 0, !dbg !8980
  br label %for.cond, !dbg !8984

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !8985
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8973, metadata !DIExpression()), !dbg !8976
  %1 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8986
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %1, i64 0, i32 0, !dbg !8986
  %call2 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !8986
  %2 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8986
  %base5 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %2, i64 0, i32 0, !dbg !8986
  %call9 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base5) #7, !dbg !8986
  %sub = add i32 %call9, -1, !dbg !8986
  %add = add i32 %call2, %sub, !dbg !8986
  %cmp = icmp ult i32 %add, %0, !dbg !8986
  br i1 %cmp, label %cond.true11, label %cond.end29, !dbg !8986

cond.true11:                                      ; preds = %for.cond
  %3 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8986
  %base14 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %3, i64 0, i32 0, !dbg !8986
  %call18 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base14) #7, !dbg !8986
  %4 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !8986
  %base21 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %4, i64 0, i32 0, !dbg !8986
  %call25 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base21) #7, !dbg !8986
  %sub26 = add i32 %call25, -1, !dbg !8986
  %add27 = add i32 %call18, %sub26, !dbg !8986
  br label %cond.end29, !dbg !8986

cond.end29:                                       ; preds = %for.cond, %cond.true11
  %cond30 = phi i32 [ %add27, %cond.true11 ], [ %0, %for.cond ], !dbg !8986
  %cmp31 = icmp ult i32 %i.0, %cond30, !dbg !8987
  br i1 %cmp31, label %for.body, label %for.end, !dbg !8988

for.body:                                         ; preds = %cond.end29
  %5 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !8989
  %div = lshr i32 %i.0, 6, !dbg !8989
  %idxprom = zext i32 %div to i64, !dbg !8989
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %5, i64 0, i32 3, i64 %idxprom, !dbg !8989
  %6 = load i64, i64* %arrayidx, align 8, !dbg !8989
  %rem = and i32 %i.0, 63, !dbg !8989
  %sh_prom = zext i32 %rem to i64, !dbg !8989
  %7 = shl i64 1, %sh_prom, !dbg !8989
  %8 = and i64 %6, %7, !dbg !8989
  %tobool33 = icmp eq i64 %8, 0, !dbg !8989
  br i1 %tobool33, label %land.lhs.true, label %for.inc, !dbg !8990

land.lhs.true:                                    ; preds = %for.body
  %call34 = tail call fastcc i32 @find(i32 %i.0) #7, !dbg !8991
  %cmp35 = icmp eq i32 %call34, %i.0, !dbg !8992
  br i1 %cmp35, label %if.then, label %for.inc, !dbg !8993

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @scc_visit(%struct.constraint_graph* %graph, %struct.scc_info* %call, i32 %i.0) #7, !dbg !8994
  br label %for.inc, !dbg !8994

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then
  %inc = add i32 %i.0, 1, !dbg !8995
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8973, metadata !DIExpression()), !dbg !8976
  br label %for.cond, !dbg !8996, !llvm.loop !8997

for.end:                                          ; preds = %cond.end29
  tail call fastcc void @free_scc_info(%struct.scc_info* %call) #7, !dbg !8999
  ret void, !dbg !9000
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_preds_and_fake_succs(%struct.constraint_graph* %graph) unnamed_addr #5 !dbg !9001 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !9003, metadata !DIExpression()), !dbg !9005
  call void @llvm.dbg.value(metadata i32 0, metadata !9004, metadata !DIExpression()), !dbg !9005
  %succs = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 1, !dbg !9006
  br label %for.cond, !dbg !9011

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc ], [ 0, %entry ], !dbg !9012
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !9004, metadata !DIExpression()), !dbg !9005
  %0 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !9013
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %0, i64 0, i32 0, !dbg !9013
  %call = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !9013
  %1 = zext i32 %call to i64, !dbg !9014
  %cmp = icmp ult i64 %indvars.iv1, %1, !dbg !9014
  br i1 %cmp, label %for.body, label %for.end, !dbg !9015

for.body:                                         ; preds = %for.cond
  %2 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !9016
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %2, i64 %indvars.iv1, !dbg !9017
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !9017
  %tobool1 = icmp eq %struct.bitmap_head_def* %3, null, !dbg !9017
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !9018

if.then:                                          ; preds = %for.body
  %4 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !9019
  %base7 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %4, i64 0, i32 0, !dbg !9019
  %call11 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base7) #7, !dbg !9019
  %5 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !9020
  %base14 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %5, i64 0, i32 0, !dbg !9020
  %call18 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base14) #7, !dbg !9020
  %mul = shl i32 %call18, 1, !dbg !9021
  tail call void @bitmap_clear_range(%struct.bitmap_head_def* nonnull %3, i32 %call11, i32 %mul) #6, !dbg !9022
  br label %for.inc, !dbg !9022

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !9023
  br label %for.cond, !dbg !9024, !llvm.loop !9025

for.end:                                          ; preds = %for.cond
  %6 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !9027
  %base21 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %6, i64 0, i32 0, !dbg !9027
  %call25 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base21) #7, !dbg !9027
  call void @llvm.dbg.value(metadata i32 %call25, metadata !9004, metadata !DIExpression()), !dbg !9005
  %size = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 0, !dbg !9029
  %7 = zext i32 %call25 to i64, !dbg !9031
  br label %for.cond26, !dbg !9031

for.cond26:                                       ; preds = %for.inc41, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc41 ], [ %7, %for.end ], !dbg !9032
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9004, metadata !DIExpression()), !dbg !9005
  %8 = load i32, i32* %size, align 8, !dbg !9033
  %9 = zext i32 %8 to i64, !dbg !9034
  %cmp27 = icmp ult i64 %indvars.iv, %9, !dbg !9034
  br i1 %cmp27, label %for.body28, label %for.end43, !dbg !9035

for.body28:                                       ; preds = %for.cond26
  %10 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !9036
  %arrayidx31 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %10, i64 %indvars.iv, !dbg !9039
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx31, align 8, !dbg !9039
  %tobool32 = icmp eq %struct.bitmap_head_def* %11, null, !dbg !9039
  br i1 %tobool32, label %for.inc41, label %if.then33, !dbg !9040

if.then33:                                        ; preds = %for.body28
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %11) #6, !dbg !9041
  %12 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !9041
  %arrayidx39 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %12, i64 %indvars.iv, !dbg !9041
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx39, align 8, !dbg !9041
  br label %for.inc41, !dbg !9041

for.inc41:                                        ; preds = %for.body28, %if.then33
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9042
  br label %for.cond26, !dbg !9043, !llvm.loop !9044

for.end43:                                        ; preds = %for.cond26
  %13 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !9046
  %base46 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %13, i64 0, i32 0, !dbg !9046
  %call50 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base46) #7, !dbg !9046
  store i32 %call50, i32* %size, align 8, !dbg !9047
  %14 = bitcast %struct.bitmap_head_def*** %succs to i8**, !dbg !9048
  %15 = load i8*, i8** %14, align 8, !dbg !9048
  %conv = zext i32 %call50 to i64, !dbg !9048
  %mul54 = shl nuw nsw i64 %conv, 3, !dbg !9048
  %call55 = tail call i8* @xrealloc(i8* %15, i64 %mul54) #6, !dbg !9048
  store i8* %call55, i8** %14, align 8, !dbg !9049
  %implicit_preds = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 2, !dbg !9050
  %16 = bitcast %struct.bitmap_head_def*** %implicit_preds to i8**, !dbg !9050
  %17 = load i8*, i8** %16, align 8, !dbg !9050
  tail call void @free(i8* %17) #6, !dbg !9051
  store %struct.bitmap_head_def** null, %struct.bitmap_head_def*** %implicit_preds, align 8, !dbg !9052
  %preds = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 3, !dbg !9053
  %18 = bitcast %struct.bitmap_head_def*** %preds to i8**, !dbg !9053
  %19 = load i8*, i8** %18, align 8, !dbg !9053
  tail call void @free(i8* %19) #6, !dbg !9054
  store %struct.bitmap_head_def** null, %struct.bitmap_head_def*** %preds, align 8, !dbg !9055
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* nonnull @predbitmap_obstack) #6, !dbg !9056
  ret void, !dbg !9057
}

; Function Attrs: nounwind uwtable
define internal fastcc void @solve_graph(%struct.constraint_graph* %graph) unnamed_addr #5 !dbg !9058 {
entry:
  %j = alloca i32, align 4
  %c = alloca %struct.constraint*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !9060, metadata !DIExpression()), !dbg !9090
  %size1 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 0, !dbg !9091
  %0 = load i32, i32* %size1, align 8, !dbg !9091
  call void @llvm.dbg.value(metadata i32 %0, metadata !9061, metadata !DIExpression()), !dbg !9090
  store i32 0, i32* @changed_count, align 4, !dbg !9092
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %0) #6, !dbg !9093
  store %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def** @changed, align 8, !dbg !9094
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call) #6, !dbg !9095
  call void @llvm.dbg.value(metadata i32 0, metadata !9062, metadata !DIExpression()), !dbg !9090
  %succs = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 1, !dbg !9096
  %complex = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 15, !dbg !9096
  %wide.trip.count = zext i32 %0 to i64, !dbg !9098
  br label %for.cond, !dbg !9099

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !9100
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9062, metadata !DIExpression()), !dbg !9090
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !9098
  br i1 %exitcond, label %for.end, label %for.body, !dbg !9101

for.body:                                         ; preds = %for.cond
  %1 = trunc i64 %indvars.iv to i32, !dbg !9102
  %call2 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %1) #7, !dbg !9102
  call void @llvm.dbg.value(metadata %struct.variable_info* %call2, metadata !9064, metadata !DIExpression()), !dbg !9103
  %2 = trunc i64 %indvars.iv to i32, !dbg !9104
  %call3 = tail call fastcc i32 @find(i32 %2) #7, !dbg !9104
  %3 = zext i32 %call3 to i64, !dbg !9105
  %cmp4 = icmp eq i64 %indvars.iv, %3, !dbg !9105
  br i1 %cmp4, label %land.lhs.true, label %for.inc, !dbg !9106

land.lhs.true:                                    ; preds = %for.body
  %solution = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call2, i64 0, i32 8, !dbg !9107
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution, align 8, !dbg !9107
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %4, i64 0, i32 0, !dbg !9107
  %5 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !9107
  %tobool = icmp eq %struct.bitmap_element_def* %5, null, !dbg !9107
  br i1 %tobool, label %for.inc, label %land.lhs.true5, !dbg !9108

land.lhs.true5:                                   ; preds = %land.lhs.true
  %6 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !9109
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %6, i64 %indvars.iv, !dbg !9110
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !9110
  %tobool6 = icmp eq %struct.bitmap_head_def* %7, null, !dbg !9110
  br i1 %tobool6, label %lor.lhs.false, label %land.lhs.true7, !dbg !9111

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %first11 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %7, i64 0, i32 0, !dbg !9112
  %8 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first11, align 8, !dbg !9112
  %tobool12 = icmp eq %struct.bitmap_element_def* %8, null, !dbg !9112
  br i1 %tobool12, label %lor.lhs.false, label %if.then, !dbg !9113

lor.lhs.false:                                    ; preds = %land.lhs.true7, %land.lhs.true5
  %9 = load %struct.VEC_constraint_t_heap**, %struct.VEC_constraint_t_heap*** %complex, align 8, !dbg !9114
  %arrayidx14 = getelementptr inbounds %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %9, i64 %indvars.iv, !dbg !9114
  %10 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %arrayidx14, align 8, !dbg !9114
  %tobool15 = icmp eq %struct.VEC_constraint_t_heap* %10, null, !dbg !9114
  br i1 %tobool15, label %cond.end, label %cond.true, !dbg !9114

cond.true:                                        ; preds = %lor.lhs.false
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %10, i64 0, i32 0, !dbg !9114
  br label %cond.end, !dbg !9114

cond.end:                                         ; preds = %lor.lhs.false, %cond.true
  %cond = phi %struct.VEC_constraint_t_base* [ %base, %cond.true ], [ null, %lor.lhs.false ], !dbg !9114
  %call19 = tail call fastcc i32 @VEC_constraint_t_base_length(%struct.VEC_constraint_t_base* %cond) #7, !dbg !9114
  %cmp20 = icmp eq i32 %call19, 0, !dbg !9115
  br i1 %cmp20, label %for.inc, label %if.then, !dbg !9116

if.then:                                          ; preds = %land.lhs.true7, %cond.end
  %11 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !9117
  %12 = trunc i64 %indvars.iv to i32, !dbg !9119
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %11, i32 %12) #7, !dbg !9119
  %13 = load i32, i32* @changed_count, align 4, !dbg !9120
  %inc = add i32 %13, 1, !dbg !9120
  store i32 %inc, i32* @changed_count, align 4, !dbg !9120
  br label %for.inc, !dbg !9121

for.inc:                                          ; preds = %cond.end, %land.lhs.true, %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9122
  br label %for.cond, !dbg !9123, !llvm.loop !9124

for.end:                                          ; preds = %for.cond
  %call22 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @pta_obstack) #6, !dbg !9126
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call22, metadata !9063, metadata !DIExpression()), !dbg !9090
  %14 = bitcast i32* %j to i8*, !dbg !9127
  %15 = bitcast %struct.constraint** %c to i8*, !dbg !9127
  %first72 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %call22, i64 0, i32 0, !dbg !9128
  %16 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !9130
  br label %while.cond, !dbg !9131

while.cond:                                       ; preds = %while.end, %for.end
  %17 = load i32, i32* @changed_count, align 4, !dbg !9132
  %cmp23 = icmp eq i32 %17, 0, !dbg !9133
  br i1 %cmp23, label %while.end175, label %while.body, !dbg !9131

while.body:                                       ; preds = %while.cond
  %call25 = call fastcc %struct.topo_info* @init_topo_info() #7, !dbg !9134
  call void @llvm.dbg.value(metadata %struct.topo_info* %call25, metadata !9070, metadata !DIExpression()), !dbg !9135
  %18 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 4), align 4, !dbg !9136
  %inc26 = add i32 %18, 1, !dbg !9136
  store i32 %inc26, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 4), align 4, !dbg !9136
  call void @bitmap_obstack_initialize(%struct.bitmap_obstack* nonnull @iteration_obstack) #6, !dbg !9137
  call fastcc void @compute_topo_order(%struct.constraint_graph* %graph, %struct.topo_info* %call25) #7, !dbg !9138
  %topo_order = getelementptr inbounds %struct.topo_info, %struct.topo_info* %call25, i64 0, i32 1, !dbg !9135
  br label %while.cond27, !dbg !9139

while.cond27:                                     ; preds = %while.cond27.backedge, %while.body
  %19 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %topo_order, align 8, !dbg !9140
  %tobool28 = icmp eq %struct.VEC_unsigned_heap* %19, null, !dbg !9140
  br i1 %tobool28, label %cond.end33, label %cond.true29, !dbg !9140

cond.true29:                                      ; preds = %while.cond27
  %base31 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %19, i64 0, i32 0, !dbg !9140
  br label %cond.end33, !dbg !9140

cond.end33:                                       ; preds = %while.cond27, %cond.true29
  %cond34 = phi %struct.VEC_unsigned_base* [ %base31, %cond.true29 ], [ null, %while.cond27 ], !dbg !9140
  %call35 = call fastcc i32 @VEC_unsigned_base_length(%struct.VEC_unsigned_base* %cond34) #7, !dbg !9140
  %cmp36 = icmp eq i32 %call35, 0, !dbg !9141
  br i1 %cmp36, label %while.end, label %while.body37, !dbg !9139

while.body37:                                     ; preds = %cond.end33
  %20 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %topo_order, align 8, !dbg !9142
  %tobool39 = icmp eq %struct.VEC_unsigned_heap* %20, null, !dbg !9142
  br i1 %tobool39, label %cond.end44, label %cond.true40, !dbg !9142

cond.true40:                                      ; preds = %while.body37
  %base42 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %20, i64 0, i32 0, !dbg !9142
  br label %cond.end44, !dbg !9142

cond.end44:                                       ; preds = %while.body37, %cond.true40
  %cond45 = phi %struct.VEC_unsigned_base* [ %base42, %cond.true40 ], [ null, %while.body37 ], !dbg !9142
  %call46 = call fastcc i32 @VEC_unsigned_base_pop(%struct.VEC_unsigned_base* %cond45) #7, !dbg !9142
  call void @llvm.dbg.value(metadata i32 %call46, metadata !9068, metadata !DIExpression()), !dbg !9135
  %call47 = call fastcc i32 @find(i32 %call46) #7, !dbg !9143
  %cmp48 = icmp eq i32 %call47, %call46, !dbg !9145
  br i1 %cmp48, label %if.end50, label %while.cond27.backedge, !dbg !9146

if.end50:                                         ; preds = %cond.end44
  %call51 = call fastcc zeroext i8 @eliminate_indirect_cycles(i32 %call46) #7, !dbg !9147
  %tobool52 = icmp eq i8 %call51, 0, !dbg !9147
  br i1 %tobool52, label %if.end58, label %land.lhs.true53, !dbg !9149

land.lhs.true53:                                  ; preds = %if.end50
  %call54 = call fastcc i32 @find(i32 %call46) #7, !dbg !9150
  %cmp55 = icmp eq i32 %call54, %call46, !dbg !9151
  br i1 %cmp55, label %if.end58, label %while.cond27.backedge, !dbg !9152

if.end58:                                         ; preds = %land.lhs.true53, %if.end50
  %21 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !9153
  %div = lshr i32 %call46, 6, !dbg !9153
  %idxprom59 = zext i32 %div to i64, !dbg !9153
  %arrayidx60 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %21, i64 0, i32 3, i64 %idxprom59, !dbg !9153
  %22 = load i64, i64* %arrayidx60, align 8, !dbg !9153
  %rem = and i32 %call46, 63, !dbg !9153
  %sh_prom = zext i32 %rem to i64, !dbg !9153
  %23 = shl i64 1, %sh_prom, !dbg !9153
  %24 = and i64 %22, %23, !dbg !9153
  %tobool61 = icmp eq i64 %24, 0, !dbg !9153
  br i1 %tobool61, label %if.end174, label %if.then62, !dbg !9154

if.then62:                                        ; preds = %if.end58
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #8, !dbg !9155
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8, !dbg !9156
  %25 = load %struct.VEC_constraint_t_heap**, %struct.VEC_constraint_t_heap*** %complex, align 8, !dbg !9157
  %idxprom66 = zext i32 %call46 to i64, !dbg !9158
  %arrayidx67 = getelementptr inbounds %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %25, i64 %idxprom66, !dbg !9158
  %26 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %arrayidx67, align 8, !dbg !9158
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_heap* %26, metadata !9077, metadata !DIExpression()), !dbg !9127
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %21, i32 %call46) #7, !dbg !9159
  %27 = load i32, i32* @changed_count, align 4, !dbg !9160
  %dec = add i32 %27, -1, !dbg !9160
  store i32 %dec, i32* @changed_count, align 4, !dbg !9160
  %call68 = call fastcc %struct.variable_info* @get_varinfo(i32 %call46) #7, !dbg !9161
  %solution69 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call68, i64 0, i32 8, !dbg !9162
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution69, align 8, !dbg !9162
  %call70 = call fastcc %struct.variable_info* @get_varinfo(i32 %call46) #7, !dbg !9163
  %oldsolution = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call70, i64 0, i32 9, !dbg !9164
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %oldsolution, align 8, !dbg !9164
  %call71 = call zeroext i8 @bitmap_and_compl(%struct.bitmap_head_def* %call22, %struct.bitmap_head_def* %28, %struct.bitmap_head_def* %29) #6, !dbg !9165
  %30 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first72, align 8, !dbg !9166
  %tobool73 = icmp eq %struct.bitmap_element_def* %30, null, !dbg !9166
  br i1 %tobool73, label %cleanup167, label %if.end75, !dbg !9167, !llvm.loop !9168

if.end75:                                         ; preds = %if.then62
  %call76 = call fastcc %struct.variable_info* @get_varinfo(i32 %call46) #7, !dbg !9170
  %oldsolution77 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call76, i64 0, i32 9, !dbg !9171
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %oldsolution77, align 8, !dbg !9171
  %call78 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %31, %struct.bitmap_head_def* %call22) #6, !dbg !9172
  %call79 = call fastcc %struct.variable_info* @get_varinfo(i32 %call46) #7, !dbg !9173
  %solution80 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call79, i64 0, i32 8, !dbg !9174
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution80, align 8, !dbg !9174
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %32, metadata !9076, metadata !DIExpression()), !dbg !9127
  %first81 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %32, i64 0, i32 0, !dbg !9175
  %33 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first81, align 8, !dbg !9175
  %tobool82 = icmp eq %struct.bitmap_element_def* %33, null, !dbg !9175
  call void @llvm.dbg.value(metadata i1 %tobool82, metadata !9078, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.value(metadata i32 0, metadata !9071, metadata !DIExpression()), !dbg !9127
  %base87 = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %26, i64 0, i32 0, !dbg !9176
  br i1 %tobool82, label %if.end75.split.us, label %if.end75.if.end75.split_crit_edge, !dbg !9179

if.end75.if.end75.split_crit_edge:                ; preds = %if.end75
  br label %for.cond84, !dbg !9179

if.end75.split.us:                                ; preds = %if.end75
  br label %for.cond84.us, !dbg !9179

for.cond84.us:                                    ; preds = %for.inc108.us, %if.end75.split.us
  %storemerge.us = phi i32 [ 0, %if.end75.split.us ], [ %inc109.us, %for.inc108.us ], !dbg !9180
  store i32 %storemerge.us, i32* %j, align 4, !dbg !9180
  call void @llvm.dbg.value(metadata i32 %storemerge.us, metadata !9071, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.value(metadata %struct.constraint** %c, metadata !9075, metadata !DIExpression(DW_OP_deref)), !dbg !9127
  %call91.us = call fastcc i32 @VEC_constraint_t_base_iterate(%struct.VEC_constraint_t_base* %base87, i32 %storemerge.us, %struct.constraint** nonnull %c) #7, !dbg !9181
  %tobool92.us = icmp eq i32 %call91.us, 0, !dbg !9182
  br i1 %tobool92.us, label %for.end110.us-lcssa.us, label %for.body93.us, !dbg !9182

for.body93.us:                                    ; preds = %for.cond84.us
  %34 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !9183
  call void @llvm.dbg.value(metadata %struct.constraint* %34, metadata !9075, metadata !DIExpression()), !dbg !9127
  %var.us = getelementptr inbounds %struct.constraint, %struct.constraint* %34, i64 0, i32 0, i32 1, !dbg !9185
  %35 = load i32, i32* %var.us, align 4, !dbg !9185
  %call94.us = call fastcc i32 @find(i32 %35) #7, !dbg !9186
  %36 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !9187
  call void @llvm.dbg.value(metadata %struct.constraint* %36, metadata !9075, metadata !DIExpression()), !dbg !9127
  %var96.us = getelementptr inbounds %struct.constraint, %struct.constraint* %36, i64 0, i32 0, i32 1, !dbg !9188
  store i32 %call94.us, i32* %var96.us, align 4, !dbg !9189
  %37 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !9190
  call void @llvm.dbg.value(metadata %struct.constraint* %37, metadata !9075, metadata !DIExpression()), !dbg !9127
  %var97.us = getelementptr inbounds %struct.constraint, %struct.constraint* %37, i64 0, i32 1, i32 1, !dbg !9191
  %38 = load i32, i32* %var97.us, align 4, !dbg !9191
  %call98.us = call fastcc i32 @find(i32 %38) #7, !dbg !9192
  %39 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !9193
  call void @llvm.dbg.value(metadata %struct.constraint* %39, metadata !9075, metadata !DIExpression()), !dbg !9127
  %var100.us = getelementptr inbounds %struct.constraint, %struct.constraint* %39, i64 0, i32 1, i32 1, !dbg !9194
  store i32 %call98.us, i32* %var100.us, align 4, !dbg !9195
  call void @llvm.dbg.value(metadata %struct.constraint* %39, metadata !9075, metadata !DIExpression()), !dbg !9127
  %type.us = getelementptr inbounds %struct.constraint, %struct.constraint* %39, i64 0, i32 0, i32 0, !dbg !9196
  %40 = load i32, i32* %type.us, align 8, !dbg !9196
  %cmp104.us = icmp eq i32 %40, 1, !dbg !9198
  br i1 %cmp104.us, label %for.inc108.us, label %if.then106.us, !dbg !9199

if.then106.us:                                    ; preds = %for.body93.us
  call void @llvm.dbg.value(metadata %struct.constraint* %39, metadata !9075, metadata !DIExpression()), !dbg !9127
  call fastcc void @do_complex_constraint(%struct.constraint_graph* %graph, %struct.constraint* %39, %struct.bitmap_head_def* %call22) #7, !dbg !9200
  br label %for.inc108.us, !dbg !9200

for.inc108.us:                                    ; preds = %if.then106.us, %for.body93.us
  %41 = load i32, i32* %j, align 4, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %41, metadata !9071, metadata !DIExpression()), !dbg !9127
  %inc109.us = add i32 %41, 1, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %inc109.us, metadata !9071, metadata !DIExpression()), !dbg !9127
  br label %for.cond84.us, !dbg !9202, !llvm.loop !9203

for.end110.us-lcssa.us:                           ; preds = %for.cond84.us
  br label %for.end110, !dbg !9205

for.cond84:                                       ; preds = %for.body93, %if.end75.if.end75.split_crit_edge
  %storemerge = phi i32 [ 0, %if.end75.if.end75.split_crit_edge ], [ %inc109, %for.body93 ], !dbg !9180
  store i32 %storemerge, i32* %j, align 4, !dbg !9180
  call void @llvm.dbg.value(metadata i32 %storemerge, metadata !9071, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.value(metadata %struct.constraint** %c, metadata !9075, metadata !DIExpression(DW_OP_deref)), !dbg !9127
  %call91 = call fastcc i32 @VEC_constraint_t_base_iterate(%struct.VEC_constraint_t_base* %base87, i32 %storemerge, %struct.constraint** nonnull %c) #7, !dbg !9181
  %tobool92 = icmp eq i32 %call91, 0, !dbg !9182
  br i1 %tobool92, label %for.end110.us-lcssa, label %for.body93, !dbg !9182

for.body93:                                       ; preds = %for.cond84
  %42 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !9183
  call void @llvm.dbg.value(metadata %struct.constraint* %42, metadata !9075, metadata !DIExpression()), !dbg !9127
  %var = getelementptr inbounds %struct.constraint, %struct.constraint* %42, i64 0, i32 0, i32 1, !dbg !9185
  %43 = load i32, i32* %var, align 4, !dbg !9185
  %call94 = call fastcc i32 @find(i32 %43) #7, !dbg !9186
  %44 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !9187
  call void @llvm.dbg.value(metadata %struct.constraint* %44, metadata !9075, metadata !DIExpression()), !dbg !9127
  %var96 = getelementptr inbounds %struct.constraint, %struct.constraint* %44, i64 0, i32 0, i32 1, !dbg !9188
  store i32 %call94, i32* %var96, align 4, !dbg !9189
  %45 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !9190
  call void @llvm.dbg.value(metadata %struct.constraint* %45, metadata !9075, metadata !DIExpression()), !dbg !9127
  %var97 = getelementptr inbounds %struct.constraint, %struct.constraint* %45, i64 0, i32 1, i32 1, !dbg !9191
  %46 = load i32, i32* %var97, align 4, !dbg !9191
  %call98 = call fastcc i32 @find(i32 %46) #7, !dbg !9192
  %47 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !9193
  call void @llvm.dbg.value(metadata %struct.constraint* %47, metadata !9075, metadata !DIExpression()), !dbg !9127
  %var100 = getelementptr inbounds %struct.constraint, %struct.constraint* %47, i64 0, i32 1, i32 1, !dbg !9194
  store i32 %call98, i32* %var100, align 4, !dbg !9195
  call void @llvm.dbg.value(metadata %struct.constraint* %47, metadata !9075, metadata !DIExpression()), !dbg !9127
  call fastcc void @do_complex_constraint(%struct.constraint_graph* %graph, %struct.constraint* %47, %struct.bitmap_head_def* %call22) #7, !dbg !9200
  %48 = load i32, i32* %j, align 4, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %48, metadata !9071, metadata !DIExpression()), !dbg !9127
  %inc109 = add i32 %48, 1, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %inc109, metadata !9071, metadata !DIExpression()), !dbg !9127
  br label %for.cond84, !dbg !9202, !llvm.loop !9203

for.end110.us-lcssa:                              ; preds = %for.cond84
  br label %for.end110, !dbg !9205

for.end110:                                       ; preds = %for.end110.us-lcssa.us, %for.end110.us-lcssa
  %49 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first81, align 8, !dbg !9205
  %tobool112 = icmp eq %struct.bitmap_element_def* %49, null, !dbg !9205
  call void @llvm.dbg.value(metadata i1 %tobool112, metadata !9078, metadata !DIExpression()), !dbg !9127
  br i1 %tobool112, label %cleanup167, label %if.then117, !dbg !9206

if.then117:                                       ; preds = %for.end110
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #8, !dbg !9207
  %call118 = call fastcc i32 @find(i32 3) #7, !dbg !9208
  call void @llvm.dbg.value(metadata i32 %call118, metadata !9082, metadata !DIExpression()), !dbg !9130
  %50 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !9209
  %arrayidx121 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %50, i64 %idxprom66, !dbg !9209
  %51 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx121, align 8, !dbg !9209
  %tobool122 = icmp eq %struct.bitmap_head_def* %51, null, !dbg !9209
  br i1 %tobool122, label %if.end165, label %if.then123, !dbg !9210

if.then123:                                       ; preds = %if.then117
  call void @llvm.dbg.value(metadata i32* %j, metadata !9071, metadata !DIExpression(DW_OP_deref)), !dbg !9127
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9079, metadata !DIExpression(DW_OP_deref)), !dbg !9130
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %51, i32 0, i32* nonnull %j) #7, !dbg !9211
  %cmp138 = icmp eq i32 %call46, %call118, !dbg !9212
  br i1 %cmp138, label %if.then123.split.us, label %if.then123.if.then123.split_crit_edge, !dbg !9211

if.then123.if.then123.split_crit_edge:            ; preds = %if.then123
  br label %for.cond127, !dbg !9211

if.then123.split.us:                              ; preds = %if.then123
  br label %for.cond127.us, !dbg !9211

for.cond127.us:                                   ; preds = %cleanup.us, %if.then123.split.us
  call void @llvm.dbg.value(metadata i32* %j, metadata !9071, metadata !DIExpression(DW_OP_deref)), !dbg !9127
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9079, metadata !DIExpression(DW_OP_deref)), !dbg !9130
  %call128.us = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !9214
  %tobool129.us = icmp eq i8 %call128.us, 0, !dbg !9211
  br i1 %tobool129.us, label %if.end165.loopexit.us-lcssa.us, label %for.body130.us, !dbg !9211

for.body130.us:                                   ; preds = %for.cond127.us
  %52 = load i32, i32* %j, align 4, !dbg !9215
  call void @llvm.dbg.value(metadata i32 %52, metadata !9071, metadata !DIExpression()), !dbg !9127
  %call131.us = call fastcc i32 @find(i32 %52) #7, !dbg !9216
  call void @llvm.dbg.value(metadata i32 %call131.us, metadata !9089, metadata !DIExpression()), !dbg !9217
  %call132.us = call fastcc %struct.variable_info* @get_varinfo(i32 %call131.us) #7, !dbg !9218
  %solution133.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call132.us, i64 0, i32 8, !dbg !9219
  %53 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution133.us, align 8, !dbg !9219
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %53, metadata !9083, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i8 0, metadata !9088, metadata !DIExpression()), !dbg !9217
  %cmp134.us = icmp eq i32 %call131.us, %call46, !dbg !9220
  br i1 %cmp134.us, label %cleanup.us, label %if.end137.us, !dbg !9222

if.end137.us:                                     ; preds = %for.body130.us
  %call141.us = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %53, i32 3) #6, !dbg !9223
  call void @llvm.dbg.value(metadata i8 %call141.us, metadata !9088, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i8 %call141.us, metadata !9088, metadata !DIExpression()), !dbg !9217
  %tobool144.us = icmp eq i8 %call141.us, 0, !dbg !9224
  br i1 %tobool144.us, label %cleanup.us, label %if.then145.us, !dbg !9226

if.then145.us:                                    ; preds = %if.end137.us
  %call146.us = call fastcc %struct.variable_info* @get_varinfo(i32 %call131.us) #7, !dbg !9227
  %solution147.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call146.us, i64 0, i32 8, !dbg !9229
  store %struct.bitmap_head_def* %53, %struct.bitmap_head_def** %solution147.us, align 8, !dbg !9230
  %54 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !9231
  %div149.us = lshr i32 %call131.us, 6, !dbg !9231
  %idxprom150.us = zext i32 %div149.us to i64, !dbg !9231
  %arrayidx151.us = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %54, i64 0, i32 3, i64 %idxprom150.us, !dbg !9231
  %55 = load i64, i64* %arrayidx151.us, align 8, !dbg !9231
  %rem152.us = and i32 %call131.us, 63, !dbg !9231
  %sh_prom153.us = zext i32 %rem152.us to i64, !dbg !9231
  %56 = shl i64 1, %sh_prom153.us, !dbg !9231
  %57 = and i64 %55, %56, !dbg !9231
  %tobool156.us = icmp eq i64 %57, 0, !dbg !9231
  br i1 %tobool156.us, label %if.then157.us, label %cleanup.us, !dbg !9233

if.then157.us:                                    ; preds = %if.then145.us
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %54, i32 %call131.us) #7, !dbg !9234
  %58 = load i32, i32* @changed_count, align 4, !dbg !9236
  %inc158.us = add i32 %58, 1, !dbg !9236
  store i32 %inc158.us, i32* @changed_count, align 4, !dbg !9236
  br label %cleanup.us, !dbg !9237

cleanup.us:                                       ; preds = %if.then157.us, %if.then145.us, %if.end137.us, %for.body130.us
  call void @llvm.dbg.value(metadata i32* %j, metadata !9071, metadata !DIExpression(DW_OP_deref)), !dbg !9127
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9079, metadata !DIExpression(DW_OP_deref)), !dbg !9130
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !9214
  br label %for.cond127.us, !dbg !9214, !llvm.loop !9238

if.end165.loopexit.us-lcssa.us:                   ; preds = %for.cond127.us
  br label %if.end165.loopexit, !dbg !9240

for.cond127:                                      ; preds = %cleanup, %if.then123.if.then123.split_crit_edge
  call void @llvm.dbg.value(metadata i32* %j, metadata !9071, metadata !DIExpression(DW_OP_deref)), !dbg !9127
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9079, metadata !DIExpression(DW_OP_deref)), !dbg !9130
  %call128 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !9214
  %tobool129 = icmp eq i8 %call128, 0, !dbg !9211
  br i1 %tobool129, label %if.end165.loopexit.us-lcssa, label %for.body130, !dbg !9211

for.body130:                                      ; preds = %for.cond127
  %59 = load i32, i32* %j, align 4, !dbg !9215
  call void @llvm.dbg.value(metadata i32 %59, metadata !9071, metadata !DIExpression()), !dbg !9127
  %call131 = call fastcc i32 @find(i32 %59) #7, !dbg !9216
  call void @llvm.dbg.value(metadata i32 %call131, metadata !9089, metadata !DIExpression()), !dbg !9217
  %call132 = call fastcc %struct.variable_info* @get_varinfo(i32 %call131) #7, !dbg !9218
  %solution133 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call132, i64 0, i32 8, !dbg !9219
  %60 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution133, align 8, !dbg !9219
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %60, metadata !9083, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i8 0, metadata !9088, metadata !DIExpression()), !dbg !9217
  %cmp134 = icmp eq i32 %call131, %call46, !dbg !9220
  br i1 %cmp134, label %cleanup, label %if.end137, !dbg !9222

if.end137:                                        ; preds = %for.body130
  %call142 = call fastcc zeroext i8 @set_union_with_increment(%struct.bitmap_head_def* %60, %struct.bitmap_head_def* %call22, i64 0) #7, !dbg !9241
  call void @llvm.dbg.value(metadata i8 %call142, metadata !9088, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i8 %call142, metadata !9088, metadata !DIExpression()), !dbg !9217
  %tobool144 = icmp eq i8 %call142, 0, !dbg !9224
  br i1 %tobool144, label %cleanup, label %if.then145, !dbg !9226

if.then145:                                       ; preds = %if.end137
  %call146 = call fastcc %struct.variable_info* @get_varinfo(i32 %call131) #7, !dbg !9227
  %solution147 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call146, i64 0, i32 8, !dbg !9229
  store %struct.bitmap_head_def* %60, %struct.bitmap_head_def** %solution147, align 8, !dbg !9230
  %61 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !9231
  %div149 = lshr i32 %call131, 6, !dbg !9231
  %idxprom150 = zext i32 %div149 to i64, !dbg !9231
  %arrayidx151 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %61, i64 0, i32 3, i64 %idxprom150, !dbg !9231
  %62 = load i64, i64* %arrayidx151, align 8, !dbg !9231
  %rem152 = and i32 %call131, 63, !dbg !9231
  %sh_prom153 = zext i32 %rem152 to i64, !dbg !9231
  %63 = shl i64 1, %sh_prom153, !dbg !9231
  %64 = and i64 %62, %63, !dbg !9231
  %tobool156 = icmp eq i64 %64, 0, !dbg !9231
  br i1 %tobool156, label %if.then157, label %cleanup, !dbg !9233

if.then157:                                       ; preds = %if.then145
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %61, i32 %call131) #7, !dbg !9234
  %65 = load i32, i32* @changed_count, align 4, !dbg !9236
  %inc158 = add i32 %65, 1, !dbg !9236
  store i32 %inc158, i32* @changed_count, align 4, !dbg !9236
  br label %cleanup, !dbg !9237

cleanup:                                          ; preds = %if.then145, %if.end137, %if.then157, %for.body130
  call void @llvm.dbg.value(metadata i32* %j, metadata !9071, metadata !DIExpression(DW_OP_deref)), !dbg !9127
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9079, metadata !DIExpression(DW_OP_deref)), !dbg !9130
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !9214
  br label %for.cond127, !dbg !9214, !llvm.loop !9238

if.end165.loopexit.us-lcssa:                      ; preds = %for.cond127
  br label %if.end165.loopexit, !dbg !9240

if.end165.loopexit:                               ; preds = %if.end165.loopexit.us-lcssa.us, %if.end165.loopexit.us-lcssa
  br label %if.end165, !dbg !9240

if.end165:                                        ; preds = %if.end165.loopexit, %if.then117
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #8, !dbg !9240
  br label %cleanup167, !dbg !9242

cleanup167:                                       ; preds = %if.then62, %for.end110, %if.end165
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then62 ], [ true, %if.end165 ], [ true, %for.end110 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8, !dbg !9243
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #8, !dbg !9243
  br i1 %cleanup.dest.slot.1, label %if.end174, label %while.cond27.backedge

if.end174:                                        ; preds = %if.end58, %cleanup167
  br label %while.cond27.backedge, !dbg !9139

while.cond27.backedge:                            ; preds = %if.end174, %cleanup167, %cond.end44, %land.lhs.true53
  br label %while.cond27, !dbg !9140, !llvm.loop !9168

while.end:                                        ; preds = %cond.end33
  call fastcc void @free_topo_info(%struct.topo_info* %call25) #7, !dbg !9244
  call void @bitmap_obstack_release(%struct.bitmap_obstack* nonnull @iteration_obstack) #6, !dbg !9245
  br label %while.cond, !dbg !9131, !llvm.loop !9246

while.end175:                                     ; preds = %while.cond
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call22) #6, !dbg !9248
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !9063, metadata !DIExpression()), !dbg !9090
  %66 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !9249
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %66, i64 0, i32 0, !dbg !9249
  %67 = load i8*, i8** %popcount, align 8, !dbg !9249
  call void @free(i8* %67) #6, !dbg !9249
  %68 = load i8*, i8** bitcast (%struct.simple_bitmap_def** @changed to i8**), align 8, !dbg !9249
  call void @free(i8* %68) #6, !dbg !9249
  call void @bitmap_obstack_release(%struct.bitmap_obstack* nonnull @oldpta_obstack) #6, !dbg !9250
  ret void, !dbg !9251
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !9252 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !9256, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !9257, metadata !DIExpression()), !dbg !9261
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !9262
  %0 = load i8*, i8** %popcount, align 8, !dbg !9262
  %tobool = icmp eq i8* %0, null, !dbg !9263
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !9264

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !9265
  %.pre2 = zext i32 %.pre to i64, !dbg !9266
  %.pre3 = shl i64 1, %.pre2, !dbg !9266
  %.pre4 = lshr i32 %bitno, 6, !dbg !9267
  %.pre5 = zext i32 %.pre4 to i64, !dbg !9268
  br label %if.end7, !dbg !9264

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !9269
  %idxprom = zext i32 %div to i64, !dbg !9269
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !9269
  %1 = load i64, i64* %arrayidx, align 8, !dbg !9269
  %rem = and i32 %bitno, 63, !dbg !9269
  %sh_prom = zext i32 %rem to i64, !dbg !9269
  %2 = shl i64 1, %sh_prom, !dbg !9270
  %3 = and i64 %1, %2, !dbg !9270
  %tobool1 = icmp eq i64 %3, 0, !dbg !9270
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !9272

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !9273
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !9274
  %inc = add i8 %4, 1, !dbg !9274
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !9274
  br label %if.end7, !dbg !9273

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !9268
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !9266
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !9268
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !9275
  %or = or i64 %5, %shl.pre-phi, !dbg !9275
  store i64 %or, i64* %arrayidx13, align 8, !dbg !9275
  ret void, !dbg !9276
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_pred_graph_edge(%struct.constraint_graph* %graph, i32 %to, i32 %from) unnamed_addr #5 !dbg !9277 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !9281, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.value(metadata i32 %to, metadata !9282, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.value(metadata i32 %from, metadata !9283, metadata !DIExpression()), !dbg !9284
  %preds = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 3, !dbg !9285
  %0 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %preds, align 8, !dbg !9285
  %idxprom = zext i32 %to to i64, !dbg !9287
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, i64 %idxprom, !dbg !9287
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !9287
  %tobool = icmp eq %struct.bitmap_head_def* %1, null, !dbg !9287
  br i1 %tobool, label %if.then, label %if.end, !dbg !9288

if.then:                                          ; preds = %entry
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @predbitmap_obstack) #6, !dbg !9289
  %2 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %preds, align 8, !dbg !9290
  %arrayidx3 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %2, i64 %idxprom, !dbg !9291
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %arrayidx3, align 8, !dbg !9292
  %.pre = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %preds, align 8, !dbg !9293
  %arrayidx6.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre, i64 %idxprom, !dbg !9284
  %.pre1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx6.phi.trans.insert, align 8, !dbg !9294
  br label %if.end, !dbg !9291

if.end:                                           ; preds = %entry, %if.then
  %3 = phi %struct.bitmap_head_def* [ %1, %entry ], [ %.pre1, %if.then ], !dbg !9294
  %call7 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %from) #6, !dbg !9295
  ret void, !dbg !9296
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !9297 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !9299, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !9300, metadata !DIExpression()), !dbg !9304
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !9305
  %0 = load i8*, i8** %popcount, align 8, !dbg !9305
  %tobool = icmp eq i8* %0, null, !dbg !9306
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !9307

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !9308
  %.pre2 = zext i32 %.pre to i64, !dbg !9309
  %.pre3 = shl i64 1, %.pre2, !dbg !9309
  %.pre4 = lshr i32 %bitno, 6, !dbg !9310
  %.pre5 = zext i32 %.pre4 to i64, !dbg !9311
  br label %if.end7, !dbg !9307

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !9312
  %idxprom = zext i32 %div to i64, !dbg !9312
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !9312
  %1 = load i64, i64* %arrayidx, align 8, !dbg !9312
  %rem = and i32 %bitno, 63, !dbg !9312
  %sh_prom = zext i32 %rem to i64, !dbg !9312
  %2 = shl i64 1, %sh_prom, !dbg !9313
  %3 = and i64 %1, %2, !dbg !9313
  %tobool1 = icmp eq i64 %3, 0, !dbg !9313
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !9315

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !9316
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !9317
  %dec = add i8 %4, -1, !dbg !9317
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !9317
  br label %if.end7, !dbg !9316

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !9311
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !9309
  %neg = xor i64 %shl.pre-phi, -1, !dbg !9318
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !9311
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !9319
  %and14 = and i64 %5, %neg, !dbg !9319
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !9319
  ret void, !dbg !9320
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_implicit_graph_edge(%struct.constraint_graph* %graph, i32 %to, i32 %from) unnamed_addr #5 !dbg !9321 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !9323, metadata !DIExpression()), !dbg !9326
  call void @llvm.dbg.value(metadata i32 %to, metadata !9324, metadata !DIExpression()), !dbg !9326
  call void @llvm.dbg.value(metadata i32 %from, metadata !9325, metadata !DIExpression()), !dbg !9326
  %cmp = icmp eq i32 %to, %from, !dbg !9327
  br i1 %cmp, label %if.end12, label %if.end, !dbg !9329

if.end:                                           ; preds = %entry
  %implicit_preds = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 2, !dbg !9330
  %0 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %implicit_preds, align 8, !dbg !9330
  %idxprom = zext i32 %to to i64, !dbg !9332
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, i64 %idxprom, !dbg !9332
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !9332
  %tobool = icmp eq %struct.bitmap_head_def* %1, null, !dbg !9332
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !9333

if.then1:                                         ; preds = %if.end
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @predbitmap_obstack) #6, !dbg !9334
  %2 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %implicit_preds, align 8, !dbg !9335
  %arrayidx4 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %2, i64 %idxprom, !dbg !9336
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %arrayidx4, align 8, !dbg !9337
  %.pre = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %implicit_preds, align 8, !dbg !9338
  %arrayidx8.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre, i64 %idxprom, !dbg !9340
  %.pre1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx8.phi.trans.insert, align 8, !dbg !9341
  br label %if.end5, !dbg !9336

if.end5:                                          ; preds = %if.end, %if.then1
  %3 = phi %struct.bitmap_head_def* [ %1, %if.end ], [ %.pre1, %if.then1 ], !dbg !9341
  %call9 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %from) #6, !dbg !9342
  %tobool10 = icmp eq i8 %call9, 0, !dbg !9342
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !9343

if.then11:                                        ; preds = %if.end5
  %4 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 6), align 4, !dbg !9344
  %inc = add i32 %4, 1, !dbg !9344
  store i32 %inc, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 6), align 4, !dbg !9344
  br label %if.end12, !dbg !9345

if.end12:                                         ; preds = %if.end5, %entry, %if.then11
  ret void, !dbg !9346
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.scc_info* @init_scc_info(i64 %size) unnamed_addr #5 !dbg !9347 {
entry:
  call void @llvm.dbg.value(metadata i64 %size, metadata !9351, metadata !DIExpression()), !dbg !9354
  %call = tail call i8* @xmalloc(i64 48) #6, !dbg !9355
  call void @llvm.dbg.value(metadata %struct.scc_info* %6, metadata !9352, metadata !DIExpression()), !dbg !9354
  %current_index = getelementptr inbounds i8, i8* %call, i64 32, !dbg !9356
  %0 = bitcast i8* %current_index to i32*, !dbg !9356
  store i32 0, i32* %0, align 8, !dbg !9357
  %conv = trunc i64 %size to i32, !dbg !9358
  %call1 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %conv) #6, !dbg !9359
  %visited = bitcast i8* %call to %struct.simple_bitmap_def**, !dbg !9360
  store %struct.simple_bitmap_def* %call1, %struct.simple_bitmap_def** %visited, align 8, !dbg !9361
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call1) #6, !dbg !9362
  %call4 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %conv) #6, !dbg !9363
  %deleted = getelementptr inbounds i8, i8* %call, i64 8, !dbg !9364
  %1 = bitcast i8* %deleted to %struct.simple_bitmap_def**, !dbg !9364
  store %struct.simple_bitmap_def* %call4, %struct.simple_bitmap_def** %1, align 8, !dbg !9365
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call4) #6, !dbg !9366
  %mul = shl i64 %size, 2, !dbg !9367
  %call6 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !9367
  %node_mapping = getelementptr inbounds i8, i8* %call, i64 24, !dbg !9368
  %2 = bitcast i8* %node_mapping to i8**, !dbg !9369
  store i8* %call6, i8** %2, align 8, !dbg !9369
  %call7 = tail call i8* @xcalloc(i64 %size, i64 4) #6, !dbg !9370
  %dfs = getelementptr inbounds i8, i8* %call, i64 16, !dbg !9371
  %3 = bitcast i8* %dfs to i8**, !dbg !9372
  store i8* %call7, i8** %3, align 8, !dbg !9372
  call void @llvm.dbg.value(metadata i64 0, metadata !9353, metadata !DIExpression()), !dbg !9354
  %4 = bitcast i8* %node_mapping to i32**, !dbg !9373
  br label %for.cond, !dbg !9376

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ], !dbg !9377
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !9353, metadata !DIExpression()), !dbg !9354
  %exitcond = icmp eq i64 %i.0, %size, !dbg !9378
  br i1 %exitcond, label %for.end, label %for.body, !dbg !9379

for.body:                                         ; preds = %for.cond
  %conv9 = trunc i64 %i.0 to i32, !dbg !9380
  %5 = load i32*, i32** %4, align 8, !dbg !9381
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %i.0, !dbg !9382
  store i32 %conv9, i32* %arrayidx, align 4, !dbg !9383
  %inc = add i64 %i.0, 1, !dbg !9384
  call void @llvm.dbg.value(metadata i64 %inc, metadata !9353, metadata !DIExpression()), !dbg !9354
  br label %for.cond, !dbg !9385, !llvm.loop !9386

for.end:                                          ; preds = %for.cond
  %6 = bitcast i8* %call to %struct.scc_info*, !dbg !9355
  %call11 = tail call fastcc %struct.VEC_unsigned_heap* @VEC_unsigned_heap_alloc(i32 1) #7, !dbg !9388
  %scc_stack = getelementptr inbounds i8, i8* %call, i64 40, !dbg !9389
  %7 = bitcast i8* %scc_stack to %struct.VEC_unsigned_heap**, !dbg !9389
  store %struct.VEC_unsigned_heap* %call11, %struct.VEC_unsigned_heap** %7, align 8, !dbg !9390
  ret %struct.scc_info* %6, !dbg !9391
}

; Function Attrs: nounwind uwtable
define internal i32 @equiv_class_label_hash(i8* %p) #5 !dbg !9392 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !9394, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata i8* %p, metadata !9395, metadata !DIExpression()), !dbg !9397
  %hashcode = bitcast i8* %p to i32*, !dbg !9398
  %0 = load i32, i32* %hashcode, align 8, !dbg !9398
  ret i32 %0, !dbg !9399
}

; Function Attrs: nounwind uwtable
define internal i32 @equiv_class_label_eq(i8* %p1, i8* %p2) #5 !dbg !9400 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !9402, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i8* %p2, metadata !9403, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i8* %p1, metadata !9404, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i8* %p2, metadata !9405, metadata !DIExpression()), !dbg !9406
  %hashcode = bitcast i8* %p1 to i32*, !dbg !9407
  %0 = load i32, i32* %hashcode, align 8, !dbg !9407
  %hashcode1 = bitcast i8* %p2 to i32*, !dbg !9408
  %1 = load i32, i32* %hashcode1, align 8, !dbg !9408
  %cmp = icmp eq i32 %0, %1, !dbg !9409
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9410

land.rhs:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %p2, metadata !9405, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i8* %p1, metadata !9404, metadata !DIExpression()), !dbg !9406
  %labels = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !9411
  %2 = bitcast i8* %labels to %struct.bitmap_head_def**, !dbg !9411
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %2, align 8, !dbg !9411
  %labels2 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !9412
  %4 = bitcast i8* %labels2 to %struct.bitmap_head_def**, !dbg !9412
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %4, align 8, !dbg !9412
  %call = tail call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %5) #6, !dbg !9413
  %tobool = icmp ne i8 %call, 0, !dbg !9410
  %phitmp = zext i1 %tobool to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i32 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i32 %6, !dbg !9414
}

; Function Attrs: nounwind uwtable
define internal fastcc void @condense_visit(%struct.constraint_graph* %graph, %struct.scc_info* %si, i32 %n) unnamed_addr #5 !dbg !9415 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !9419, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata %struct.scc_info* %si, metadata !9420, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i32 %n, metadata !9421, metadata !DIExpression()), !dbg !9445
  %0 = bitcast i32* %i to i8*, !dbg !9446
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9446
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !9447
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !9447
  %node_mapping = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 3, !dbg !9448
  %2 = load i32*, i32** %node_mapping, align 8, !dbg !9448
  %idxprom = zext i32 %n to i64, !dbg !9448
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !9448
  %3 = load i32, i32* %arrayidx, align 4, !dbg !9448
  %cmp = icmp eq i32 %3, %n, !dbg !9448
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !9448

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1979, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !9448
  br label %cond.end, !dbg !9448

cond.end:                                         ; preds = %entry, %cond.true
  %visited = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 0, !dbg !9449
  %4 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !9449
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %4, i32 %n) #7, !dbg !9450
  %current_index = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 4, !dbg !9451
  %5 = load i32, i32* %current_index, align 8, !dbg !9452
  %inc = add nsw i32 %5, 1, !dbg !9452
  store i32 %inc, i32* %current_index, align 8, !dbg !9452
  %dfs = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 2, !dbg !9453
  %6 = load i32*, i32** %dfs, align 8, !dbg !9453
  %arrayidx2 = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !9454
  store i32 %5, i32* %arrayidx2, align 4, !dbg !9455
  %7 = load i32*, i32** %dfs, align 8, !dbg !9456
  %arrayidx5 = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !9457
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !9457
  call void @llvm.dbg.value(metadata i32 %8, metadata !9424, metadata !DIExpression()), !dbg !9445
  %preds = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 3, !dbg !9458
  %9 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %preds, align 8, !dbg !9458
  %arrayidx7 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %9, i64 %idxprom, !dbg !9458
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx7, align 8, !dbg !9458
  %tobool = icmp eq %struct.bitmap_head_def* %10, null, !dbg !9458
  br i1 %tobool, label %if.end57, label %if.then, !dbg !9459

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !9422, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9423, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %10, i32 0, i32* nonnull %i) #7, !dbg !9460
  %deleted = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 1, !dbg !9461
  br label %for.cond, !dbg !9460

for.cond:                                         ; preds = %cleanup, %if.then
  call void @llvm.dbg.value(metadata i32* %i, metadata !9422, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9423, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !9463
  %tobool11 = icmp eq i8 %call, 0, !dbg !9460
  br i1 %tobool11, label %if.end57.loopexit, label %for.body, !dbg !9460

for.body:                                         ; preds = %for.cond
  %11 = load i32*, i32** %node_mapping, align 8, !dbg !9464
  %12 = load i32, i32* %i, align 4, !dbg !9465
  call void @llvm.dbg.value(metadata i32 %12, metadata !9422, metadata !DIExpression()), !dbg !9445
  %idxprom13 = zext i32 %12 to i64, !dbg !9466
  %arrayidx14 = getelementptr inbounds i32, i32* %11, i64 %idxprom13, !dbg !9466
  %13 = load i32, i32* %arrayidx14, align 4, !dbg !9466
  call void @llvm.dbg.value(metadata i32 %13, metadata !9425, metadata !DIExpression()), !dbg !9467
  %14 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %deleted, align 8, !dbg !9468
  %div = lshr i32 %13, 6, !dbg !9468
  %idxprom15 = zext i32 %div to i64, !dbg !9468
  %arrayidx16 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %14, i64 0, i32 3, i64 %idxprom15, !dbg !9468
  %15 = load i64, i64* %arrayidx16, align 8, !dbg !9468
  %rem = and i32 %13, 63, !dbg !9468
  %sh_prom = zext i32 %rem to i64, !dbg !9468
  %16 = shl i64 1, %sh_prom, !dbg !9468
  %17 = and i64 %15, %16, !dbg !9468
  %tobool17 = icmp eq i64 %17, 0, !dbg !9468
  br i1 %tobool17, label %if.end, label %cleanup, !dbg !9469

if.end:                                           ; preds = %for.body
  %18 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !9470
  %arrayidx23 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %18, i64 0, i32 3, i64 %idxprom15, !dbg !9470
  %19 = load i64, i64* %arrayidx23, align 8, !dbg !9470
  %20 = and i64 %19, %16, !dbg !9470
  %tobool28 = icmp eq i64 %20, 0, !dbg !9470
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !9472

if.then29:                                        ; preds = %if.end
  call fastcc void @condense_visit(%struct.constraint_graph* %graph, %struct.scc_info* %si, i32 %13) #7, !dbg !9473
  %.pre = load i32*, i32** %node_mapping, align 8, !dbg !9474
  br label %if.end30, !dbg !9473

if.end30:                                         ; preds = %if.end, %if.then29
  %21 = phi i32* [ %11, %if.end ], [ %.pre, %if.then29 ], !dbg !9474
  %idxprom32 = zext i32 %13 to i64, !dbg !9475
  %arrayidx33 = getelementptr inbounds i32, i32* %21, i64 %idxprom32, !dbg !9475
  %22 = load i32, i32* %arrayidx33, align 4, !dbg !9475
  call void @llvm.dbg.value(metadata i32 %22, metadata !9430, metadata !DIExpression()), !dbg !9476
  %arrayidx36 = getelementptr inbounds i32, i32* %21, i64 %idxprom, !dbg !9477
  %23 = load i32, i32* %arrayidx36, align 4, !dbg !9477
  call void @llvm.dbg.value(metadata i32 %23, metadata !9432, metadata !DIExpression()), !dbg !9476
  %cmp37 = icmp eq i32 %23, %n, !dbg !9478
  br i1 %cmp37, label %cond.end40, label %cond.true38, !dbg !9478

cond.true38:                                      ; preds = %if.end30
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1997, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !9478
  br label %cond.end40, !dbg !9478

cond.end40:                                       ; preds = %if.end30, %cond.true38
  %24 = load i32*, i32** %dfs, align 8, !dbg !9479
  %idxprom43 = zext i32 %22 to i64, !dbg !9481
  %arrayidx44 = getelementptr inbounds i32, i32* %24, i64 %idxprom43, !dbg !9481
  %25 = load i32, i32* %arrayidx44, align 4, !dbg !9481
  %idxprom46 = zext i32 %23 to i64, !dbg !9482
  %arrayidx47 = getelementptr inbounds i32, i32* %24, i64 %idxprom46, !dbg !9482
  %26 = load i32, i32* %arrayidx47, align 4, !dbg !9482
  %cmp48 = icmp ult i32 %25, %26, !dbg !9483
  br i1 %cmp48, label %if.then49, label %cleanup, !dbg !9484

if.then49:                                        ; preds = %cond.end40
  %arrayidx55 = getelementptr inbounds i32, i32* %24, i64 %idxprom, !dbg !9485
  store i32 %25, i32* %arrayidx55, align 4, !dbg !9486
  br label %cleanup, !dbg !9485

cleanup:                                          ; preds = %for.body, %cond.end40, %if.then49
  call void @llvm.dbg.value(metadata i32* %i, metadata !9422, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9423, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !9463
  br label %for.cond, !dbg !9463, !llvm.loop !9487

if.end57.loopexit:                                ; preds = %for.cond
  br label %if.end57, !dbg !9489

if.end57:                                         ; preds = %if.end57.loopexit, %cond.end
  %implicit_preds = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 2, !dbg !9489
  %27 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %implicit_preds, align 8, !dbg !9489
  %arrayidx59 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %27, i64 %idxprom, !dbg !9489
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx59, align 8, !dbg !9489
  %tobool60 = icmp eq %struct.bitmap_head_def* %28, null, !dbg !9489
  br i1 %tobool60, label %if.end130, label %if.then61, !dbg !9490

if.then61:                                        ; preds = %if.end57
  call void @llvm.dbg.value(metadata i32* %i, metadata !9422, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9423, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %28, i32 0, i32* nonnull %i) #7, !dbg !9491
  %deleted73 = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 1, !dbg !9492
  br label %for.cond65, !dbg !9491

for.cond65:                                       ; preds = %cleanup125, %if.then61
  call void @llvm.dbg.value(metadata i32* %i, metadata !9422, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9423, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  %call66 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !9494
  %tobool67 = icmp eq i8 %call66, 0, !dbg !9491
  br i1 %tobool67, label %if.end130.loopexit, label %for.body68, !dbg !9491

for.body68:                                       ; preds = %for.cond65
  %29 = load i32*, i32** %node_mapping, align 8, !dbg !9495
  %30 = load i32, i32* %i, align 4, !dbg !9496
  call void @llvm.dbg.value(metadata i32 %30, metadata !9422, metadata !DIExpression()), !dbg !9445
  %idxprom71 = zext i32 %30 to i64, !dbg !9497
  %arrayidx72 = getelementptr inbounds i32, i32* %29, i64 %idxprom71, !dbg !9497
  %31 = load i32, i32* %arrayidx72, align 4, !dbg !9497
  call void @llvm.dbg.value(metadata i32 %31, metadata !9433, metadata !DIExpression()), !dbg !9498
  %32 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %deleted73, align 8, !dbg !9499
  %div75 = lshr i32 %31, 6, !dbg !9499
  %idxprom76 = zext i32 %div75 to i64, !dbg !9499
  %arrayidx77 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %32, i64 0, i32 3, i64 %idxprom76, !dbg !9499
  %33 = load i64, i64* %arrayidx77, align 8, !dbg !9499
  %rem78 = and i32 %31, 63, !dbg !9499
  %sh_prom79 = zext i32 %rem78 to i64, !dbg !9499
  %34 = shl i64 1, %sh_prom79, !dbg !9499
  %35 = and i64 %33, %34, !dbg !9499
  %tobool82 = icmp eq i64 %35, 0, !dbg !9499
  br i1 %tobool82, label %if.end84, label %cleanup125, !dbg !9500

if.end84:                                         ; preds = %for.body68
  %36 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !9501
  %arrayidx89 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %36, i64 0, i32 3, i64 %idxprom76, !dbg !9501
  %37 = load i64, i64* %arrayidx89, align 8, !dbg !9501
  %38 = and i64 %37, %34, !dbg !9501
  %tobool94 = icmp eq i64 %38, 0, !dbg !9501
  br i1 %tobool94, label %if.then95, label %if.end96, !dbg !9503

if.then95:                                        ; preds = %if.end84
  call fastcc void @condense_visit(%struct.constraint_graph* %graph, %struct.scc_info* %si, i32 %31) #7, !dbg !9504
  %.pre2 = load i32*, i32** %node_mapping, align 8, !dbg !9505
  br label %if.end96, !dbg !9504

if.end96:                                         ; preds = %if.end84, %if.then95
  %39 = phi i32* [ %29, %if.end84 ], [ %.pre2, %if.then95 ], !dbg !9505
  %idxprom99 = zext i32 %31 to i64, !dbg !9506
  %arrayidx100 = getelementptr inbounds i32, i32* %39, i64 %idxprom99, !dbg !9506
  %40 = load i32, i32* %arrayidx100, align 4, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %40, metadata !9438, metadata !DIExpression()), !dbg !9507
  %arrayidx104 = getelementptr inbounds i32, i32* %39, i64 %idxprom, !dbg !9508
  %41 = load i32, i32* %arrayidx104, align 4, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %41, metadata !9440, metadata !DIExpression()), !dbg !9507
  %cmp105 = icmp eq i32 %41, %n, !dbg !9509
  br i1 %cmp105, label %cond.end108, label %cond.true106, !dbg !9509

cond.true106:                                     ; preds = %if.end96
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2017, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !9509
  br label %cond.end108, !dbg !9509

cond.end108:                                      ; preds = %if.end96, %cond.true106
  %42 = load i32*, i32** %dfs, align 8, !dbg !9510
  %idxprom111 = zext i32 %40 to i64, !dbg !9512
  %arrayidx112 = getelementptr inbounds i32, i32* %42, i64 %idxprom111, !dbg !9512
  %43 = load i32, i32* %arrayidx112, align 4, !dbg !9512
  %idxprom114 = zext i32 %41 to i64, !dbg !9513
  %arrayidx115 = getelementptr inbounds i32, i32* %42, i64 %idxprom114, !dbg !9513
  %44 = load i32, i32* %arrayidx115, align 4, !dbg !9513
  %cmp116 = icmp ult i32 %43, %44, !dbg !9514
  br i1 %cmp116, label %if.then117, label %cleanup125, !dbg !9515

if.then117:                                       ; preds = %cond.end108
  %arrayidx123 = getelementptr inbounds i32, i32* %42, i64 %idxprom, !dbg !9516
  store i32 %43, i32* %arrayidx123, align 4, !dbg !9517
  br label %cleanup125, !dbg !9516

cleanup125:                                       ; preds = %for.body68, %cond.end108, %if.then117
  call void @llvm.dbg.value(metadata i32* %i, metadata !9422, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9423, metadata !DIExpression(DW_OP_deref)), !dbg !9445
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !9494
  br label %for.cond65, !dbg !9494, !llvm.loop !9518

if.end130.loopexit:                               ; preds = %for.cond65
  br label %if.end130, !dbg !9520

if.end130:                                        ; preds = %if.end130.loopexit, %if.end57
  %45 = load i32*, i32** %dfs, align 8, !dbg !9520
  %arrayidx133 = getelementptr inbounds i32, i32* %45, i64 %idxprom, !dbg !9521
  %46 = load i32, i32* %arrayidx133, align 4, !dbg !9521
  %cmp134 = icmp eq i32 %46, %8, !dbg !9522
  br i1 %cmp134, label %while.cond.preheader, label %if.else, !dbg !9523

while.cond.preheader:                             ; preds = %if.end130
  %scc_stack = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 5, !dbg !9524
  %direct_nodes = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 13, !dbg !9525
  %points_to = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 12, !dbg !9527
  br label %while.cond, !dbg !9529

while.cond:                                       ; preds = %while.cond.preheader, %if.end249
  %47 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %scc_stack, align 8, !dbg !9530
  %tobool136 = icmp eq %struct.VEC_unsigned_heap* %47, null, !dbg !9530
  br i1 %tobool136, label %cond.end140, label %cond.true137, !dbg !9530

cond.true137:                                     ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %47, i64 0, i32 0, !dbg !9530
  br label %cond.end140, !dbg !9530

cond.end140:                                      ; preds = %while.cond, %cond.true137
  %cond141 = phi %struct.VEC_unsigned_base* [ %base, %cond.true137 ], [ null, %while.cond ], !dbg !9530
  %call142 = call fastcc i32 @VEC_unsigned_base_length(%struct.VEC_unsigned_base* %cond141) #7, !dbg !9530
  %cmp143 = icmp eq i32 %call142, 0, !dbg !9531
  br i1 %cmp143, label %while.end, label %land.rhs, !dbg !9532

land.rhs:                                         ; preds = %cond.end140
  %48 = load i32*, i32** %dfs, align 8, !dbg !9533
  %49 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %scc_stack, align 8, !dbg !9534
  %tobool146 = icmp eq %struct.VEC_unsigned_heap* %49, null, !dbg !9534
  br i1 %tobool146, label %cond.end151, label %cond.true147, !dbg !9534

cond.true147:                                     ; preds = %land.rhs
  %base149 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %49, i64 0, i32 0, !dbg !9534
  br label %cond.end151, !dbg !9534

cond.end151:                                      ; preds = %land.rhs, %cond.true147
  %cond152 = phi %struct.VEC_unsigned_base* [ %base149, %cond.true147 ], [ null, %land.rhs ], !dbg !9534
  %call153 = call fastcc i32 @VEC_unsigned_base_last(%struct.VEC_unsigned_base* %cond152) #7, !dbg !9534
  %idxprom154 = zext i32 %call153 to i64, !dbg !9535
  %arrayidx155 = getelementptr inbounds i32, i32* %48, i64 %idxprom154, !dbg !9535
  %50 = load i32, i32* %arrayidx155, align 4, !dbg !9535
  %cmp156 = icmp ult i32 %50, %8, !dbg !9536
  br i1 %cmp156, label %while.end, label %while.body, !dbg !9529

while.body:                                       ; preds = %cond.end151
  %51 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %scc_stack, align 8, !dbg !9537
  %tobool159 = icmp eq %struct.VEC_unsigned_heap* %51, null, !dbg !9537
  br i1 %tobool159, label %cond.end164, label %cond.true160, !dbg !9537

cond.true160:                                     ; preds = %while.body
  %base162 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %51, i64 0, i32 0, !dbg !9537
  br label %cond.end164, !dbg !9537

cond.end164:                                      ; preds = %while.body, %cond.true160
  %cond165 = phi %struct.VEC_unsigned_base* [ %base162, %cond.true160 ], [ null, %while.body ], !dbg !9537
  %call166 = call fastcc i32 @VEC_unsigned_base_pop(%struct.VEC_unsigned_base* %cond165) #7, !dbg !9537
  call void @llvm.dbg.value(metadata i32 %call166, metadata !9441, metadata !DIExpression()), !dbg !9538
  %52 = load i32*, i32** %node_mapping, align 8, !dbg !9539
  %idxprom168 = zext i32 %call166 to i64, !dbg !9540
  %arrayidx169 = getelementptr inbounds i32, i32* %52, i64 %idxprom168, !dbg !9540
  store i32 %n, i32* %arrayidx169, align 4, !dbg !9541
  %53 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes, align 8, !dbg !9542
  %div171 = lshr i32 %call166, 6, !dbg !9542
  %idxprom172 = zext i32 %div171 to i64, !dbg !9542
  %arrayidx173 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %53, i64 0, i32 3, i64 %idxprom172, !dbg !9542
  %54 = load i64, i64* %arrayidx173, align 8, !dbg !9542
  %rem174 = and i32 %call166, 63, !dbg !9542
  %sh_prom175 = zext i32 %rem174 to i64, !dbg !9542
  %55 = shl i64 1, %sh_prom175, !dbg !9542
  %56 = and i64 %54, %55, !dbg !9542
  %tobool178 = icmp eq i64 %56, 0, !dbg !9542
  br i1 %tobool178, label %if.then179, label %if.end181, !dbg !9543

if.then179:                                       ; preds = %cond.end164
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %53, i32 %n) #7, !dbg !9544
  br label %if.end181, !dbg !9544

if.end181:                                        ; preds = %cond.end164, %if.then179
  %57 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %preds, align 8, !dbg !9545
  %arrayidx184 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %57, i64 %idxprom168, !dbg !9547
  %58 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx184, align 8, !dbg !9547
  %tobool185 = icmp eq %struct.bitmap_head_def* %58, null, !dbg !9547
  br i1 %tobool185, label %if.end204, label %if.then186, !dbg !9548

if.then186:                                       ; preds = %if.end181
  %arrayidx189 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %57, i64 %idxprom, !dbg !9549
  %59 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx189, align 8, !dbg !9549
  %tobool190 = icmp eq %struct.bitmap_head_def* %59, null, !dbg !9549
  br i1 %tobool190, label %if.then191, label %if.end196, !dbg !9552

if.then191:                                       ; preds = %if.then186
  %call192 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @predbitmap_obstack) #6, !dbg !9553
  %60 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %preds, align 8, !dbg !9554
  %arrayidx195 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %60, i64 %idxprom, !dbg !9555
  store %struct.bitmap_head_def* %call192, %struct.bitmap_head_def** %arrayidx195, align 8, !dbg !9556
  %.pre3 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %preds, align 8, !dbg !9557
  %arrayidx199.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre3, i64 %idxprom, !dbg !9558
  %.pre4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx199.phi.trans.insert, align 8, !dbg !9559
  %arrayidx202.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre3, i64 %idxprom168, !dbg !9558
  %.pre5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx202.phi.trans.insert, align 8, !dbg !9560
  br label %if.end196, !dbg !9555

if.end196:                                        ; preds = %if.then186, %if.then191
  %61 = phi %struct.bitmap_head_def* [ %58, %if.then186 ], [ %.pre5, %if.then191 ], !dbg !9560
  %62 = phi %struct.bitmap_head_def* [ %59, %if.then186 ], [ %.pre4, %if.then191 ], !dbg !9559
  %call203 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %62, %struct.bitmap_head_def* %61) #6, !dbg !9561
  br label %if.end204, !dbg !9562

if.end204:                                        ; preds = %if.end181, %if.end196
  %63 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %implicit_preds, align 8, !dbg !9563
  %arrayidx207 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %63, i64 %idxprom168, !dbg !9565
  %64 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx207, align 8, !dbg !9565
  %tobool208 = icmp eq %struct.bitmap_head_def* %64, null, !dbg !9565
  br i1 %tobool208, label %if.end227, label %if.then209, !dbg !9566

if.then209:                                       ; preds = %if.end204
  %arrayidx212 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %63, i64 %idxprom, !dbg !9567
  %65 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx212, align 8, !dbg !9567
  %tobool213 = icmp eq %struct.bitmap_head_def* %65, null, !dbg !9567
  br i1 %tobool213, label %if.then214, label %if.end219, !dbg !9570

if.then214:                                       ; preds = %if.then209
  %call215 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @predbitmap_obstack) #6, !dbg !9571
  %66 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %implicit_preds, align 8, !dbg !9572
  %arrayidx218 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %66, i64 %idxprom, !dbg !9573
  store %struct.bitmap_head_def* %call215, %struct.bitmap_head_def** %arrayidx218, align 8, !dbg !9574
  %.pre6 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %implicit_preds, align 8, !dbg !9575
  %arrayidx222.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre6, i64 %idxprom, !dbg !9576
  %.pre7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx222.phi.trans.insert, align 8, !dbg !9577
  %arrayidx225.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre6, i64 %idxprom168, !dbg !9576
  %.pre8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx225.phi.trans.insert, align 8, !dbg !9578
  br label %if.end219, !dbg !9573

if.end219:                                        ; preds = %if.then209, %if.then214
  %67 = phi %struct.bitmap_head_def* [ %64, %if.then209 ], [ %.pre8, %if.then214 ], !dbg !9578
  %68 = phi %struct.bitmap_head_def* [ %65, %if.then209 ], [ %.pre7, %if.then214 ], !dbg !9577
  %call226 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %68, %struct.bitmap_head_def* %67) #6, !dbg !9579
  br label %if.end227, !dbg !9580

if.end227:                                        ; preds = %if.end204, %if.end219
  %69 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to, align 8, !dbg !9581
  %arrayidx229 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %69, i64 %idxprom168, !dbg !9582
  %70 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx229, align 8, !dbg !9582
  %tobool230 = icmp eq %struct.bitmap_head_def* %70, null, !dbg !9582
  br i1 %tobool230, label %if.end249, label %if.then231, !dbg !9583

if.then231:                                       ; preds = %if.end227
  %arrayidx234 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %69, i64 %idxprom, !dbg !9584
  %71 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx234, align 8, !dbg !9584
  %tobool235 = icmp eq %struct.bitmap_head_def* %71, null, !dbg !9584
  br i1 %tobool235, label %if.then236, label %if.end241, !dbg !9587

if.then236:                                       ; preds = %if.then231
  %call237 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @predbitmap_obstack) #6, !dbg !9588
  %72 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to, align 8, !dbg !9589
  %arrayidx240 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %72, i64 %idxprom, !dbg !9590
  store %struct.bitmap_head_def* %call237, %struct.bitmap_head_def** %arrayidx240, align 8, !dbg !9591
  %.pre9 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to, align 8, !dbg !9592
  %arrayidx244.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre9, i64 %idxprom, !dbg !9593
  %.pre10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx244.phi.trans.insert, align 8, !dbg !9594
  %arrayidx247.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre9, i64 %idxprom168, !dbg !9593
  %.pre11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx247.phi.trans.insert, align 8, !dbg !9595
  br label %if.end241, !dbg !9590

if.end241:                                        ; preds = %if.then231, %if.then236
  %73 = phi %struct.bitmap_head_def* [ %70, %if.then231 ], [ %.pre11, %if.then236 ], !dbg !9595
  %74 = phi %struct.bitmap_head_def* [ %71, %if.then231 ], [ %.pre10, %if.then236 ], !dbg !9594
  %call248 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %74, %struct.bitmap_head_def* %73) #6, !dbg !9596
  br label %if.end249, !dbg !9597

if.end249:                                        ; preds = %if.end227, %if.end241
  br label %while.cond, !dbg !9529, !llvm.loop !9598

while.end:                                        ; preds = %cond.end151, %cond.end140
  %deleted250 = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 1, !dbg !9600
  %75 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %deleted250, align 8, !dbg !9600
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %75, i32 %n) #7, !dbg !9601
  br label %if.end253, !dbg !9602

if.else:                                          ; preds = %if.end130
  %scc_stack251 = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 5, !dbg !9603
  %call252 = call fastcc i32* @VEC_unsigned_heap_safe_push(%struct.VEC_unsigned_heap** nonnull %scc_stack251, i32 %n) #7, !dbg !9603
  br label %if.end253

if.end253:                                        ; preds = %if.else, %while.end
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !9604
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9604
  ret void, !dbg !9604
}

; Function Attrs: nounwind uwtable
define internal fastcc void @label_visit(%struct.constraint_graph* %graph, %struct.scc_info* %si, i32 %n) unnamed_addr #5 !dbg !9605 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !9607, metadata !DIExpression()), !dbg !9620
  call void @llvm.dbg.value(metadata %struct.scc_info* %si, metadata !9608, metadata !DIExpression()), !dbg !9620
  call void @llvm.dbg.value(metadata i32 %n, metadata !9609, metadata !DIExpression()), !dbg !9620
  %0 = bitcast i32* %i to i8*, !dbg !9621
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9621
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !9622
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !9622
  %visited = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 0, !dbg !9623
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !9623
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %2, i32 %n) #7, !dbg !9624
  %points_to = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 12, !dbg !9625
  %3 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to, align 8, !dbg !9625
  %idxprom = zext i32 %n to i64, !dbg !9627
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %3, i64 %idxprom, !dbg !9627
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !9627
  %tobool = icmp eq %struct.bitmap_head_def* %4, null, !dbg !9627
  br i1 %tobool, label %if.then, label %if.end, !dbg !9628

if.then:                                          ; preds = %entry
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @predbitmap_obstack) #6, !dbg !9629
  %5 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to, align 8, !dbg !9630
  %arrayidx3 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %5, i64 %idxprom, !dbg !9631
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %arrayidx3, align 8, !dbg !9632
  br label %if.end, !dbg !9631

if.end:                                           ; preds = %entry, %if.then
  %preds = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 3, !dbg !9633
  %6 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %preds, align 8, !dbg !9633
  %arrayidx5 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %6, i64 %idxprom, !dbg !9633
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx5, align 8, !dbg !9633
  %tobool6 = icmp eq %struct.bitmap_head_def* %7, null, !dbg !9633
  br i1 %tobool6, label %if.end39, label %if.then7, !dbg !9634

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !9610, metadata !DIExpression(DW_OP_deref)), !dbg !9620
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9611, metadata !DIExpression(DW_OP_deref)), !dbg !9620
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %7, i32 0, i32* nonnull %i) #7, !dbg !9635
  %node_mapping = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 3, !dbg !9636
  %pointer_label = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 9, !dbg !9637
  br label %for.cond, !dbg !9635

for.cond:                                         ; preds = %cleanup, %if.then7
  call void @llvm.dbg.value(metadata i32* %i, metadata !9610, metadata !DIExpression(DW_OP_deref)), !dbg !9620
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9611, metadata !DIExpression(DW_OP_deref)), !dbg !9620
  %call11 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !9639
  %tobool12 = icmp eq i8 %call11, 0, !dbg !9635
  br i1 %tobool12, label %if.end39.loopexit, label %for.body, !dbg !9635

for.body:                                         ; preds = %for.cond
  %8 = load i32*, i32** %node_mapping, align 8, !dbg !9640
  %9 = load i32, i32* %i, align 4, !dbg !9641
  call void @llvm.dbg.value(metadata i32 %9, metadata !9610, metadata !DIExpression()), !dbg !9620
  %idxprom13 = zext i32 %9 to i64, !dbg !9642
  %arrayidx14 = getelementptr inbounds i32, i32* %8, i64 %idxprom13, !dbg !9642
  %10 = load i32, i32* %arrayidx14, align 4, !dbg !9642
  call void @llvm.dbg.value(metadata i32 %10, metadata !9612, metadata !DIExpression()), !dbg !9636
  %11 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !9643
  %div = lshr i32 %10, 6, !dbg !9643
  %idxprom16 = zext i32 %div to i64, !dbg !9643
  %arrayidx17 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %11, i64 0, i32 3, i64 %idxprom16, !dbg !9643
  %12 = load i64, i64* %arrayidx17, align 8, !dbg !9643
  %rem = and i32 %10, 63, !dbg !9643
  %sh_prom = zext i32 %rem to i64, !dbg !9643
  %13 = shl i64 1, %sh_prom, !dbg !9643
  %14 = and i64 %12, %13, !dbg !9643
  %tobool18 = icmp eq i64 %14, 0, !dbg !9643
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !9645

if.then19:                                        ; preds = %for.body
  call fastcc void @label_visit(%struct.constraint_graph* %graph, %struct.scc_info* %si, i32 %10) #7, !dbg !9646
  br label %if.end20, !dbg !9646

if.end20:                                         ; preds = %for.body, %if.then19
  %cmp = icmp eq i32 %10, %n, !dbg !9647
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9648

lor.lhs.false:                                    ; preds = %if.end20
  %15 = load i32*, i32** %pointer_label, align 8, !dbg !9649
  %idxprom21 = zext i32 %10 to i64, !dbg !9650
  %arrayidx22 = getelementptr inbounds i32, i32* %15, i64 %idxprom21, !dbg !9650
  %16 = load i32, i32* %arrayidx22, align 4, !dbg !9650
  %cmp23 = icmp eq i32 %16, 0, !dbg !9651
  br i1 %cmp23, label %cleanup, label %if.end25, !dbg !9652

if.end25:                                         ; preds = %lor.lhs.false
  %17 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to, align 8, !dbg !9653
  %arrayidx28 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %17, i64 %idxprom21, !dbg !9655
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx28, align 8, !dbg !9655
  %tobool29 = icmp eq %struct.bitmap_head_def* %18, null, !dbg !9655
  br i1 %tobool29, label %cleanup, label %if.then30, !dbg !9656

if.then30:                                        ; preds = %if.end25
  %arrayidx33 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %17, i64 %idxprom, !dbg !9657
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx33, align 8, !dbg !9657
  %call37 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %19, %struct.bitmap_head_def* nonnull %18) #6, !dbg !9658
  br label %cleanup, !dbg !9658

cleanup:                                          ; preds = %if.end25, %if.then30, %if.end20, %lor.lhs.false
  call void @llvm.dbg.value(metadata i32* %i, metadata !9610, metadata !DIExpression(DW_OP_deref)), !dbg !9620
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !9611, metadata !DIExpression(DW_OP_deref)), !dbg !9620
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !9639
  br label %for.cond, !dbg !9639, !llvm.loop !9659

if.end39.loopexit:                                ; preds = %for.cond
  br label %if.end39, !dbg !9661

if.end39:                                         ; preds = %if.end39.loopexit, %if.end
  %direct_nodes = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 13, !dbg !9661
  %20 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %direct_nodes, align 8, !dbg !9661
  %div41 = lshr i32 %n, 6, !dbg !9661
  %idxprom42 = zext i32 %div41 to i64, !dbg !9661
  %arrayidx43 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %20, i64 0, i32 3, i64 %idxprom42, !dbg !9661
  %21 = load i64, i64* %arrayidx43, align 8, !dbg !9661
  %rem44 = and i32 %n, 63, !dbg !9661
  %sh_prom45 = zext i32 %rem44 to i64, !dbg !9661
  %22 = shl i64 1, %sh_prom45, !dbg !9661
  %23 = and i64 %21, %22, !dbg !9661
  %tobool48 = icmp eq i64 %23, 0, !dbg !9661
  br i1 %tobool48, label %if.then49, label %if.end56, !dbg !9663

if.then49:                                        ; preds = %if.end39
  %24 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to, align 8, !dbg !9664
  %arrayidx52 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %24, i64 %idxprom, !dbg !9665
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx52, align 8, !dbg !9665
  %26 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !9666
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %26, i64 0, i32 0, !dbg !9666
  %call54 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !9666
  %add = add i32 %call54, %n, !dbg !9667
  %call55 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %25, i32 %add) #6, !dbg !9668
  br label %if.end56, !dbg !9668

if.end56:                                         ; preds = %if.end39, %if.then49
  %27 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to, align 8, !dbg !9669
  %arrayidx59 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %27, i64 %idxprom, !dbg !9669
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx59, align 8, !dbg !9669
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %28, i64 0, i32 0, !dbg !9669
  %29 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !9669
  %tobool60 = icmp eq %struct.bitmap_element_def* %29, null, !dbg !9669
  br i1 %tobool60, label %if.end75, label %if.then61, !dbg !9670

if.then61:                                        ; preds = %if.end56
  %30 = load %struct.htab*, %struct.htab** @pointer_equiv_class_table, align 8, !dbg !9671
  %call65 = call fastcc i32 @equiv_class_lookup(%struct.htab* %30, %struct.bitmap_head_def* %28) #7, !dbg !9672
  call void @llvm.dbg.value(metadata i32 %call65, metadata !9617, metadata !DIExpression()), !dbg !9673
  %tobool66 = icmp eq i32 %call65, 0, !dbg !9674
  br i1 %tobool66, label %if.then67, label %if.end71, !dbg !9676

if.then67:                                        ; preds = %if.then61
  %31 = load i32, i32* @pointer_equiv_class, align 4, !dbg !9677
  %inc = add nsw i32 %31, 1, !dbg !9677
  store i32 %inc, i32* @pointer_equiv_class, align 4, !dbg !9677
  call void @llvm.dbg.value(metadata i32 %31, metadata !9617, metadata !DIExpression()), !dbg !9673
  %32 = load %struct.htab*, %struct.htab** @pointer_equiv_class_table, align 8, !dbg !9679
  %33 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %points_to, align 8, !dbg !9680
  %arrayidx70 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %33, i64 %idxprom, !dbg !9681
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx70, align 8, !dbg !9681
  call fastcc void @equiv_class_add(%struct.htab* %32, i32 %31, %struct.bitmap_head_def* %34) #7, !dbg !9682
  br label %if.end71, !dbg !9683

if.end71:                                         ; preds = %if.then61, %if.then67
  %label.0 = phi i32 [ %call65, %if.then61 ], [ %31, %if.then67 ], !dbg !9673
  call void @llvm.dbg.value(metadata i32 %label.0, metadata !9617, metadata !DIExpression()), !dbg !9673
  %pointer_label72 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 9, !dbg !9684
  %35 = load i32*, i32** %pointer_label72, align 8, !dbg !9684
  %arrayidx74 = getelementptr inbounds i32, i32* %35, i64 %idxprom, !dbg !9685
  store i32 %label.0, i32* %arrayidx74, align 4, !dbg !9686
  br label %if.end75, !dbg !9687

if.end75:                                         ; preds = %if.end56, %if.end71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !9688
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !9688
  ret void, !dbg !9688
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @equiv_class_lookup(%struct.htab* %table, %struct.bitmap_head_def* %labels) unnamed_addr #5 !dbg !9689 {
entry:
  %ecl = alloca %struct.equiv_class_label, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %table, metadata !9693, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %labels, metadata !9694, metadata !DIExpression()), !dbg !9697
  %0 = bitcast %struct.equiv_class_label* %ecl to i8*, !dbg !9698
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !9698
  %labels1 = getelementptr inbounds %struct.equiv_class_label, %struct.equiv_class_label* %ecl, i64 0, i32 2, !dbg !9699
  store %struct.bitmap_head_def* %labels, %struct.bitmap_head_def** %labels1, align 8, !dbg !9700
  %call = tail call i32 @bitmap_hash(%struct.bitmap_head_def* %labels) #6, !dbg !9701
  %hashcode = getelementptr inbounds %struct.equiv_class_label, %struct.equiv_class_label* %ecl, i64 0, i32 0, !dbg !9702
  store i32 %call, i32* %hashcode, align 8, !dbg !9703
  %call3 = call i8** @htab_find_slot_with_hash(%struct.htab* %table, i8* nonnull %0, i32 %call, i32 0) #6, !dbg !9704
  call void @llvm.dbg.value(metadata i8** %call3, metadata !9695, metadata !DIExpression()), !dbg !9697
  %tobool = icmp eq i8** %call3, null, !dbg !9705
  br i1 %tobool, label %cleanup, label %if.else, !dbg !9707

if.else:                                          ; preds = %entry
  %1 = bitcast i8** %call3 to %struct.equiv_class_label**, !dbg !9708
  %2 = load %struct.equiv_class_label*, %struct.equiv_class_label** %1, align 8, !dbg !9708
  %equivalence_class = getelementptr inbounds %struct.equiv_class_label, %struct.equiv_class_label* %2, i64 0, i32 1, !dbg !9709
  %3 = load i32, i32* %equivalence_class, align 4, !dbg !9709
  br label %cleanup, !dbg !9710

cleanup:                                          ; preds = %entry, %if.else
  %retval.0 = phi i32 [ %3, %if.else ], [ 0, %entry ], !dbg !9711
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !9712
  ret i32 %retval.0, !dbg !9712
}

; Function Attrs: nounwind uwtable
define internal fastcc void @equiv_class_add(%struct.htab* %table, i32 %equivalence_class, %struct.bitmap_head_def* %labels) unnamed_addr #5 !dbg !9713 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %table, metadata !9717, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.value(metadata i32 %equivalence_class, metadata !9718, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %labels, metadata !9719, metadata !DIExpression()), !dbg !9722
  %call = tail call i8* @xmalloc(i64 16) #6, !dbg !9723
  call void @llvm.dbg.value(metadata i8* %call, metadata !9721, metadata !DIExpression()), !dbg !9722
  %labels1 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !9724
  %0 = bitcast i8* %labels1 to %struct.bitmap_head_def**, !dbg !9724
  store %struct.bitmap_head_def* %labels, %struct.bitmap_head_def** %0, align 8, !dbg !9725
  %equivalence_class2 = getelementptr inbounds i8, i8* %call, i64 4, !dbg !9726
  %1 = bitcast i8* %equivalence_class2 to i32*, !dbg !9726
  store i32 %equivalence_class, i32* %1, align 4, !dbg !9727
  %call3 = tail call i32 @bitmap_hash(%struct.bitmap_head_def* %labels) #6, !dbg !9728
  %hashcode = bitcast i8* %call to i32*, !dbg !9729
  store i32 %call3, i32* %hashcode, align 8, !dbg !9730
  %call5 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %table, i8* %call, i32 %call3, i32 1) #6, !dbg !9731
  call void @llvm.dbg.value(metadata i8** %call5, metadata !9720, metadata !DIExpression()), !dbg !9722
  %2 = load i8*, i8** %call5, align 8, !dbg !9732
  %tobool = icmp eq i8* %2, null, !dbg !9732
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9732

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1916, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !9732
  br label %cond.end, !dbg !9732

cond.end:                                         ; preds = %entry, %cond.true
  store i8* %call, i8** %call5, align 8, !dbg !9733
  ret void, !dbg !9734
}

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_edges_for_node(%struct.constraint_graph* %graph, i32 %node) unnamed_addr #5 !dbg !9735 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !9739, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i32 %node, metadata !9740, metadata !DIExpression()), !dbg !9741
  %succs = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 1, !dbg !9742
  %0 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !9742
  %idxprom = zext i32 %node to i64, !dbg !9744
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, i64 %idxprom, !dbg !9744
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !9744
  %tobool = icmp eq %struct.bitmap_head_def* %1, null, !dbg !9744
  br i1 %tobool, label %if.end, label %if.then, !dbg !9745

if.then:                                          ; preds = %entry
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %1) #6, !dbg !9746
  %2 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !9746
  %arrayidx6 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %2, i64 %idxprom, !dbg !9746
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx6, align 8, !dbg !9746
  br label %if.end, !dbg !9746

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !9747
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_unsigned_heap* @VEC_unsigned_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !9748 {
entry:
  call void @llvm.dbg.value(metadata i32 1, metadata !9752, metadata !DIExpression()), !dbg !9753
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 1, i64 8, i64 4) #6, !dbg !9754
  %0 = bitcast i8* %call to %struct.VEC_unsigned_heap*, !dbg !9754
  ret %struct.VEC_unsigned_heap* %0, !dbg !9754
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_base_length(%struct.VEC_unsigned_base* %vec_) unnamed_addr #0 !dbg !9755 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_base* %vec_, metadata !9761, metadata !DIExpression()), !dbg !9762
  %tobool = icmp eq %struct.VEC_unsigned_base* %vec_, null, !dbg !9763
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9763

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 0, !dbg !9763
  %0 = load i32, i32* %num, align 4, !dbg !9763
  br label %cond.end, !dbg !9763

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !9763
  ret i32 %cond, !dbg !9763
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_base_last(%struct.VEC_unsigned_base* %vec_) unnamed_addr #0 !dbg !9764 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_base* %vec_, metadata !9766, metadata !DIExpression()), !dbg !9767
  br label %land.end, !dbg !9768

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %num2 = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 0, !dbg !9768
  %0 = load i32, i32* %num2, align 4, !dbg !9768
  %sub = add i32 %0, -1, !dbg !9768
  %idxprom = zext i32 %sub to i64, !dbg !9768
  %arrayidx = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9768
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9768
  ret i32 %1, !dbg !9768
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_base_pop(%struct.VEC_unsigned_base* %vec_) unnamed_addr #0 !dbg !9769 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_base* %vec_, metadata !9774, metadata !DIExpression()), !dbg !9776
  %num1 = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 0, !dbg !9777
  %0 = load i32, i32* %num1, align 4, !dbg !9777
  %dec = add i32 %0, -1, !dbg !9777
  store i32 %dec, i32* %num1, align 4, !dbg !9777
  %idxprom = zext i32 %dec to i64, !dbg !9777
  %arrayidx = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9777
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9777
  call void @llvm.dbg.value(metadata i32 %1, metadata !9775, metadata !DIExpression()), !dbg !9776
  ret i32 %1, !dbg !9777
}

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_unsigned_heap_safe_push(%struct.VEC_unsigned_heap** %vec_, i32 %obj_) unnamed_addr #0 !dbg !9778 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap** %vec_, metadata !9784, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !9785, metadata !DIExpression()), !dbg !9786
  %call = tail call fastcc i32 @VEC_unsigned_heap_reserve(%struct.VEC_unsigned_heap** %vec_, i32 1) #7, !dbg !9787
  %0 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %vec_, align 8, !dbg !9787
  %tobool = icmp eq %struct.VEC_unsigned_heap* %0, null, !dbg !9787
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9787

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %0, i64 0, i32 0, !dbg !9787
  br label %cond.end, !dbg !9787

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_unsigned_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9787
  %call1 = tail call fastcc i32* @VEC_unsigned_base_quick_push(%struct.VEC_unsigned_base* %cond, i32 %obj_) #7, !dbg !9787
  ret i32* %call1, !dbg !9787
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_heap_reserve(%struct.VEC_unsigned_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9788 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap** %vec_, metadata !9792, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.value(metadata i32 1, metadata !9793, metadata !DIExpression()), !dbg !9795
  %0 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %vec_, align 8, !dbg !9796
  %tobool = icmp eq %struct.VEC_unsigned_heap* %0, null, !dbg !9796
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9796

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %0, i64 0, i32 0, !dbg !9796
  br label %cond.end, !dbg !9796

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_unsigned_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9796
  %call = tail call fastcc i32 @VEC_unsigned_base_space(%struct.VEC_unsigned_base* %cond, i32 1) #7, !dbg !9796
  %tobool1 = icmp eq i32 %call, 0, !dbg !9796
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9796
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9794, metadata !DIExpression()), !dbg !9795
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9796

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_unsigned_heap** %vec_ to i8**, !dbg !9797
  %2 = load i8*, i8** %1, align 8, !dbg !9797
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 4) #6, !dbg !9797
  store i8* %call3, i8** %1, align 8, !dbg !9797
  br label %if.end, !dbg !9797

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9796
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_unsigned_base_quick_push(%struct.VEC_unsigned_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !9799 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_base* %vec_, metadata !9803, metadata !DIExpression()), !dbg !9806
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !9804, metadata !DIExpression()), !dbg !9806
  %num1 = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 0, !dbg !9807
  %0 = load i32, i32* %num1, align 4, !dbg !9807
  %inc = add i32 %0, 1, !dbg !9807
  store i32 %inc, i32* %num1, align 4, !dbg !9807
  %idxprom = zext i32 %0 to i64, !dbg !9807
  %arrayidx = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9807
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !9805, metadata !DIExpression()), !dbg !9806
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !9807
  ret i32* %arrayidx, !dbg !9807
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_base_space(%struct.VEC_unsigned_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9808 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_base* %vec_, metadata !9812, metadata !DIExpression()), !dbg !9814
  call void @llvm.dbg.value(metadata i32 1, metadata !9813, metadata !DIExpression()), !dbg !9814
  %tobool = icmp eq %struct.VEC_unsigned_base* %vec_, null, !dbg !9815
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9815

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 1, !dbg !9815
  %0 = load i32, i32* %alloc, align 4, !dbg !9815
  %num = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 0, !dbg !9815
  %1 = load i32, i32* %num, align 4, !dbg !9815
  %cmp1 = icmp ne i32 %0, %1, !dbg !9815
  %phitmp = zext i1 %cmp1 to i32, !dbg !9815
  br label %cond.end, !dbg !9815

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9815

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !9815
}

declare dso_local i32 @bitmap_hash(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constraint* @VEC_constraint_t_base_replace(%struct.VEC_constraint_t_base* %vec_, i32 %ix_, %struct.constraint* %obj_) unnamed_addr #0 !dbg !9816 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_base* %vec_, metadata !9820, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9821, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata %struct.constraint* null, metadata !9822, metadata !DIExpression()), !dbg !9824
  %idxprom = zext i32 %ix_ to i64, !dbg !9825
  %arrayidx = getelementptr inbounds %struct.VEC_constraint_t_base, %struct.VEC_constraint_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9825
  %0 = load %struct.constraint*, %struct.constraint** %arrayidx, align 8, !dbg !9825
  call void @llvm.dbg.value(metadata %struct.constraint* %0, metadata !9823, metadata !DIExpression()), !dbg !9824
  store %struct.constraint* null, %struct.constraint** %arrayidx, align 8, !dbg !9825
  ret %struct.constraint* %0, !dbg !9825
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_equivalent_node(%struct.constraint_graph* %graph, i32 %node, i32 %label) unnamed_addr #5 !dbg !9826 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !9830, metadata !DIExpression()), !dbg !9833
  call void @llvm.dbg.value(metadata i32 %node, metadata !9831, metadata !DIExpression()), !dbg !9833
  call void @llvm.dbg.value(metadata i32 %label, metadata !9832, metadata !DIExpression()), !dbg !9833
  %address_taken = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 14, !dbg !9834
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %address_taken, align 8, !dbg !9834
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %node) #6, !dbg !9836
  %tobool = icmp eq i32 %call, 0, !dbg !9836
  %size22 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 0, !dbg !9837
  %1 = load i32, i32* %size22, align 8, !dbg !9837
  %cmp23 = icmp ugt i32 %1, %label, !dbg !9837
  br i1 %tobool, label %if.then, label %if.else21, !dbg !9838

if.then:                                          ; preds = %entry
  br i1 %cmp23, label %cond.end, label %cond.true, !dbg !9839

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2246, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !9839
  br label %cond.end, !dbg !9839

cond.end:                                         ; preds = %if.then, %cond.true
  %eq_rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 6, !dbg !9841
  %2 = load i32*, i32** %eq_rep, align 8, !dbg !9841
  %idxprom = zext i32 %label to i64, !dbg !9843
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !9843
  %3 = load i32, i32* %arrayidx, align 4, !dbg !9843
  %cmp1 = icmp eq i32 %3, -1, !dbg !9844
  br i1 %cmp1, label %if.else, label %if.then2, !dbg !9845

if.then2:                                         ; preds = %cond.end
  %call6 = tail call fastcc zeroext i8 @unite(i32 %3, i32 %node) #7, !dbg !9846
  %tobool7 = icmp eq i8 %call6, 0, !dbg !9846
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !9849

if.then8:                                         ; preds = %if.then2
  %4 = load i32*, i32** %eq_rep, align 8, !dbg !9850
  %arrayidx11 = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !9851
  %5 = load i32, i32* %arrayidx11, align 4, !dbg !9851
  tail call fastcc void @unify_nodes(%struct.constraint_graph* %graph, i32 %5, i32 %node, i8 zeroext 0) #7, !dbg !9852
  br label %if.end, !dbg !9852

if.end:                                           ; preds = %if.then2, %if.then8
  %6 = load i32*, i32** %eq_rep, align 8, !dbg !9853
  %arrayidx14 = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !9854
  %7 = load i32, i32* %arrayidx14, align 4, !dbg !9854
  br label %return, !dbg !9855

if.else:                                          ; preds = %cond.end
  store i32 %node, i32* %arrayidx, align 4, !dbg !9856
  %pe_rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 8, !dbg !9858
  %8 = load i32*, i32** %pe_rep, align 8, !dbg !9858
  %arrayidx19 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !9859
  store i32 %node, i32* %arrayidx19, align 4, !dbg !9860
  br label %return, !dbg !9861

if.else21:                                        ; preds = %entry
  br i1 %cmp23, label %cond.end26, label %cond.true24, !dbg !9862

cond.true24:                                      ; preds = %if.else21
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 2263, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !9862
  br label %cond.end26, !dbg !9862

cond.end26:                                       ; preds = %if.else21, %cond.true24
  %pe = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 7, !dbg !9864
  %9 = load i32*, i32** %pe, align 8, !dbg !9864
  %idxprom28 = zext i32 %node to i64, !dbg !9865
  %arrayidx29 = getelementptr inbounds i32, i32* %9, i64 %idxprom28, !dbg !9865
  store i32 %label, i32* %arrayidx29, align 4, !dbg !9866
  %pe_rep30 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 8, !dbg !9867
  %10 = load i32*, i32** %pe_rep30, align 8, !dbg !9867
  %idxprom31 = zext i32 %label to i64, !dbg !9869
  %arrayidx32 = getelementptr inbounds i32, i32* %10, i64 %idxprom31, !dbg !9869
  %11 = load i32, i32* %arrayidx32, align 4, !dbg !9869
  %cmp33 = icmp eq i32 %11, -1, !dbg !9870
  br i1 %cmp33, label %if.then34, label %return, !dbg !9871

if.then34:                                        ; preds = %cond.end26
  store i32 %node, i32* %arrayidx32, align 4, !dbg !9872
  br label %return, !dbg !9873

return:                                           ; preds = %if.else, %if.then34, %cond.end26, %if.end
  %retval.0 = phi i32 [ %7, %if.end ], [ %node, %cond.end26 ], [ %node, %if.then34 ], [ %node, %if.else ], !dbg !9833
  ret i32 %retval.0, !dbg !9874
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @unite(i32 %to, i32 %from) unnamed_addr #5 !dbg !9875 {
entry:
  call void @llvm.dbg.value(metadata i32 %to, metadata !9879, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i32 %from, metadata !9880, metadata !DIExpression()), !dbg !9881
  %0 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !9882
  %size = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %0, i64 0, i32 0, !dbg !9882
  %1 = load i32, i32* %size, align 8, !dbg !9882
  %cmp = icmp ugt i32 %1, %to, !dbg !9882
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !9882

land.lhs.true:                                    ; preds = %entry
  %cmp2 = icmp ugt i32 %1, %from, !dbg !9882
  br i1 %cmp2, label %cond.end, label %cond.true, !dbg !9882

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 534, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !9882
  br label %cond.end, !dbg !9882

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %cmp3 = icmp eq i32 %to, %from, !dbg !9883
  br i1 %cmp3, label %return, label %land.lhs.true4, !dbg !9885

land.lhs.true4:                                   ; preds = %cond.end
  %2 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !9886
  %rep = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %2, i64 0, i32 5, !dbg !9887
  %3 = load i32*, i32** %rep, align 8, !dbg !9887
  %idxprom = zext i32 %from to i64, !dbg !9886
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !9886
  %4 = load i32, i32* %arrayidx, align 4, !dbg !9886
  %cmp5 = icmp eq i32 %4, %to, !dbg !9888
  br i1 %cmp5, label %return, label %if.then, !dbg !9889

if.then:                                          ; preds = %land.lhs.true4
  store i32 %to, i32* %arrayidx, align 4, !dbg !9890
  br label %return, !dbg !9892

return:                                           ; preds = %land.lhs.true4, %cond.end, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %land.lhs.true4 ], [ 0, %cond.end ], !dbg !9881
  ret i8 %retval.0, !dbg !9893
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unify_nodes(%struct.constraint_graph* %graph, i32 %to, i32 %from, i8 zeroext %update_changed) unnamed_addr #5 !dbg !9894 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !9898, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i32 %to, metadata !9899, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i32 %from, metadata !9900, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i8 %update_changed, metadata !9901, metadata !DIExpression()), !dbg !9902
  %cmp = icmp eq i32 %to, %from, !dbg !9903
  br i1 %cmp, label %cond.true, label %land.lhs.true, !dbg !9903

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc i32 @find(i32 %to) #7, !dbg !9903
  %cmp1 = icmp eq i32 %call, %to, !dbg !9903
  br i1 %cmp1, label %cond.end, label %cond.true, !dbg !9903

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1404, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !9903
  br label %cond.end, !dbg !9903

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9904
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !9904
  br i1 %tobool, label %if.end, label %land.lhs.true2, !dbg !9906

land.lhs.true2:                                   ; preds = %cond.end
  %1 = load i32, i32* @dump_flags, align 4, !dbg !9907
  %and = and i32 %1, 8, !dbg !9908
  %tobool3 = icmp eq i32 %and, 0, !dbg !9908
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9909

if.then:                                          ; preds = %land.lhs.true2
  %call4 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %from) #7, !dbg !9910
  %name = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call4, i64 0, i32 6, !dbg !9911
  %2 = load i8*, i8** %name, align 8, !dbg !9911
  %call5 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %to) #7, !dbg !9912
  %name6 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call5, i64 0, i32 6, !dbg !9913
  %3 = load i8*, i8** %name6, align 8, !dbg !9913
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.83, i64 0, i64 0), i8* %2, i8* %3) #6, !dbg !9914
  br label %if.end, !dbg !9914

if.end:                                           ; preds = %land.lhs.true2, %cond.end, %if.then
  %tobool8 = icmp eq i8 %update_changed, 0, !dbg !9915
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !9917

if.then9:                                         ; preds = %if.end
  %4 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 3), align 4, !dbg !9918
  %inc = add i32 %4, 1, !dbg !9918
  store i32 %inc, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 3), align 4, !dbg !9918
  br label %if.end11, !dbg !9919

if.else:                                          ; preds = %if.end
  %5 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 2), align 4, !dbg !9920
  %inc10 = add i32 %5, 1, !dbg !9920
  store i32 %inc10, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 2), align 4, !dbg !9920
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then9
  tail call fastcc void @merge_graph_nodes(%struct.constraint_graph* %graph, i32 %to, i32 %from) #7, !dbg !9921
  tail call fastcc void @merge_node_constraints(%struct.constraint_graph* %graph, i32 %to, i32 %from) #7, !dbg !9922
  br i1 %tobool8, label %if.end35, label %land.lhs.true13, !dbg !9923

land.lhs.true13:                                  ; preds = %if.end11
  %6 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !9925
  %div = lshr i32 %from, 6, !dbg !9925
  %idxprom = zext i32 %div to i64, !dbg !9925
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %6, i64 0, i32 3, i64 %idxprom, !dbg !9925
  %7 = load i64, i64* %arrayidx, align 8, !dbg !9925
  %rem = and i32 %from, 63, !dbg !9925
  %sh_prom = zext i32 %rem to i64, !dbg !9925
  %8 = shl i64 1, %sh_prom, !dbg !9925
  %9 = and i64 %7, %8, !dbg !9925
  %tobool15 = icmp eq i64 %9, 0, !dbg !9925
  br i1 %tobool15, label %if.end35, label %if.then16, !dbg !9926

if.then16:                                        ; preds = %land.lhs.true13
  tail call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %6, i32 %from) #7, !dbg !9927
  %10 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !9929
  %div18 = lshr i32 %to, 6, !dbg !9929
  %idxprom19 = zext i32 %div18 to i64, !dbg !9929
  %arrayidx20 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %10, i64 0, i32 3, i64 %idxprom19, !dbg !9929
  %11 = load i64, i64* %arrayidx20, align 8, !dbg !9929
  %rem21 = and i32 %to, 63, !dbg !9929
  %sh_prom22 = zext i32 %rem21 to i64, !dbg !9929
  %12 = shl i64 1, %sh_prom22, !dbg !9929
  %13 = and i64 %11, %12, !dbg !9929
  %tobool25 = icmp eq i64 %13, 0, !dbg !9929
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !9931

if.then26:                                        ; preds = %if.then16
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %10, i32 %to) #7, !dbg !9932
  br label %if.end35, !dbg !9932

if.else27:                                        ; preds = %if.then16
  %14 = load i32, i32* @changed_count, align 4, !dbg !9933
  %cmp28 = icmp eq i32 %14, 0, !dbg !9933
  br i1 %cmp28, label %cond.true30, label %cond.end32, !dbg !9933

cond.true30:                                      ; preds = %if.else27
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1428, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !9933
  %.pre = load i32, i32* @changed_count, align 4, !dbg !9935
  br label %cond.end32, !dbg !9933

cond.end32:                                       ; preds = %if.else27, %cond.true30
  %15 = phi i32 [ %14, %if.else27 ], [ %.pre, %cond.true30 ], !dbg !9935
  %dec = add i32 %15, -1, !dbg !9935
  store i32 %dec, i32* @changed_count, align 4, !dbg !9935
  br label %if.end35

if.end35:                                         ; preds = %land.lhs.true13, %if.end11, %if.then26, %cond.end32
  %call36 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %from) #7, !dbg !9936
  %solution = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call36, i64 0, i32 8, !dbg !9938
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution, align 8, !dbg !9938
  %tobool37 = icmp eq %struct.bitmap_head_def* %16, null, !dbg !9936
  br i1 %tobool37, label %if.end80, label %if.then38, !dbg !9939

if.then38:                                        ; preds = %if.end35
  %call39 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %to) #7, !dbg !9940
  %solution40 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call39, i64 0, i32 8, !dbg !9943
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution40, align 8, !dbg !9943
  %call41 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %from) #7, !dbg !9944
  %solution42 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call41, i64 0, i32 8, !dbg !9945
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution42, align 8, !dbg !9945
  %call43 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %17, %struct.bitmap_head_def* %18) #6, !dbg !9946
  %tobool44 = icmp ne i8 %call43, 0, !dbg !9946
  %tobool47 = icmp ne i8 %update_changed, 0, !dbg !9947
  %or.cond = and i1 %tobool44, %tobool47, !dbg !9950
  br i1 %or.cond, label %land.lhs.true48, label %if.end61, !dbg !9950

land.lhs.true48:                                  ; preds = %if.then38
  %19 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !9951
  %div50 = lshr i32 %to, 6, !dbg !9951
  %idxprom51 = zext i32 %div50 to i64, !dbg !9951
  %arrayidx52 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %19, i64 0, i32 3, i64 %idxprom51, !dbg !9951
  %20 = load i64, i64* %arrayidx52, align 8, !dbg !9951
  %rem53 = and i32 %to, 63, !dbg !9951
  %sh_prom54 = zext i32 %rem53 to i64, !dbg !9951
  %21 = shl i64 1, %sh_prom54, !dbg !9951
  %22 = and i64 %20, %21, !dbg !9951
  %tobool57 = icmp eq i64 %22, 0, !dbg !9951
  br i1 %tobool57, label %if.then58, label %if.end61, !dbg !9952

if.then58:                                        ; preds = %land.lhs.true48
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %19, i32 %to) #7, !dbg !9953
  %23 = load i32, i32* @changed_count, align 4, !dbg !9955
  %inc59 = add i32 %23, 1, !dbg !9955
  store i32 %inc59, i32* @changed_count, align 4, !dbg !9955
  br label %if.end61, !dbg !9956

if.end61:                                         ; preds = %land.lhs.true48, %if.then58, %if.then38
  %call62 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %from) #7, !dbg !9957
  %solution63 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call62, i64 0, i32 8, !dbg !9957
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution63, align 8, !dbg !9957
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %24) #6, !dbg !9957
  %call64 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %from) #7, !dbg !9957
  %solution65 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call64, i64 0, i32 8, !dbg !9957
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %solution65, align 8, !dbg !9957
  %call66 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %from) #7, !dbg !9958
  %oldsolution = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call66, i64 0, i32 9, !dbg !9958
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %oldsolution, align 8, !dbg !9958
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %25) #6, !dbg !9958
  %call67 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %from) #7, !dbg !9958
  %oldsolution68 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call67, i64 0, i32 9, !dbg !9958
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %oldsolution68, align 8, !dbg !9958
  %26 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 4), align 4, !dbg !9959
  %cmp69 = icmp eq i32 %26, 0, !dbg !9961
  br i1 %cmp69, label %if.end80, label %if.then71, !dbg !9962

if.then71:                                        ; preds = %if.end61
  %call72 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %to) #7, !dbg !9963
  %oldsolution73 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call72, i64 0, i32 9, !dbg !9963
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %oldsolution73, align 8, !dbg !9963
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %27) #6, !dbg !9963
  %call74 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %to) #7, !dbg !9963
  %oldsolution75 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call74, i64 0, i32 9, !dbg !9963
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %oldsolution75, align 8, !dbg !9963
  %call76 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @oldpta_obstack) #6, !dbg !9965
  %call77 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %to) #7, !dbg !9966
  %oldsolution78 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call77, i64 0, i32 9, !dbg !9967
  store %struct.bitmap_head_def* %call76, %struct.bitmap_head_def** %oldsolution78, align 8, !dbg !9968
  br label %if.end80, !dbg !9969

if.end80:                                         ; preds = %if.end61, %if.end35, %if.then71
  %call81 = tail call fastcc zeroext i8 @valid_graph_edge(%struct.constraint_graph* %graph, i32 %to, i32 %to) #7, !dbg !9970
  %tobool82 = icmp eq i8 %call81, 0, !dbg !9970
  br i1 %tobool82, label %if.end93, label %if.then83, !dbg !9972

if.then83:                                        ; preds = %if.end80
  %succs = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 1, !dbg !9973
  %28 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !9973
  %idxprom84 = zext i32 %to to i64, !dbg !9976
  %arrayidx85 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %28, i64 %idxprom84, !dbg !9976
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx85, align 8, !dbg !9976
  %tobool86 = icmp eq %struct.bitmap_head_def* %29, null, !dbg !9976
  br i1 %tobool86, label %if.end93, label %if.then87, !dbg !9977

if.then87:                                        ; preds = %if.then83
  %call91 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* nonnull %29, i32 %to) #6, !dbg !9978
  br label %if.end93, !dbg !9978

if.end93:                                         ; preds = %if.then83, %if.end80, %if.then87
  ret void, !dbg !9979
}

; Function Attrs: nounwind uwtable
define internal fastcc void @merge_graph_nodes(%struct.constraint_graph* %graph, i32 %to, i32 %from) unnamed_addr #5 !dbg !9980 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !9982, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i32 %to, metadata !9983, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i32 %from, metadata !9984, metadata !DIExpression()), !dbg !9985
  %indirect_cycles = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 4, !dbg !9986
  %0 = load i32*, i32** %indirect_cycles, align 8, !dbg !9986
  %idxprom = zext i32 %from to i64, !dbg !9988
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !9988
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9988
  %cmp = icmp eq i32 %1, -1, !dbg !9989
  br i1 %cmp, label %if.end12, label %if.then, !dbg !9990

if.then:                                          ; preds = %entry
  %idxprom2 = zext i32 %to to i64, !dbg !9991
  %arrayidx3 = getelementptr inbounds i32, i32* %0, i64 %idxprom2, !dbg !9991
  %2 = load i32, i32* %arrayidx3, align 4, !dbg !9991
  %cmp4 = icmp eq i32 %2, -1, !dbg !9994
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !9995

if.then5:                                         ; preds = %if.then
  store i32 %1, i32* %arrayidx3, align 4, !dbg !9996
  br label %if.end12, !dbg !9997

if.end12:                                         ; preds = %entry, %if.then, %if.then5
  %succs = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 1, !dbg !9998
  %3 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !9998
  %arrayidx14 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %3, i64 %idxprom, !dbg !10000
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx14, align 8, !dbg !10000
  %tobool = icmp eq %struct.bitmap_head_def* %4, null, !dbg !10000
  br i1 %tobool, label %if.end32, label %if.then15, !dbg !10001

if.then15:                                        ; preds = %if.end12
  %idxprom17 = zext i32 %to to i64, !dbg !10002
  %arrayidx18 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %3, i64 %idxprom17, !dbg !10002
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx18, align 8, !dbg !10002
  %tobool19 = icmp eq %struct.bitmap_head_def* %5, null, !dbg !10002
  br i1 %tobool19, label %if.then20, label %if.end24, !dbg !10005

if.then20:                                        ; preds = %if.then15
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @pta_obstack) #6, !dbg !10006
  %6 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !10007
  %arrayidx23 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %6, i64 %idxprom17, !dbg !10008
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %arrayidx23, align 8, !dbg !10009
  %.pre = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !10010
  %arrayidx27.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre, i64 %idxprom17, !dbg !10011
  %.pre1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx27.phi.trans.insert, align 8, !dbg !10012
  %arrayidx30.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre, i64 %idxprom, !dbg !10011
  %.pre2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx30.phi.trans.insert, align 8, !dbg !10013
  br label %if.end24, !dbg !10008

if.end24:                                         ; preds = %if.then15, %if.then20
  %7 = phi %struct.bitmap_head_def* [ %4, %if.then15 ], [ %.pre2, %if.then20 ], !dbg !10013
  %8 = phi %struct.bitmap_head_def* [ %5, %if.then15 ], [ %.pre1, %if.then20 ], !dbg !10012
  %call31 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %8, %struct.bitmap_head_def* %7) #6, !dbg !10014
  br label %if.end32, !dbg !10015

if.end32:                                         ; preds = %if.end12, %if.end24
  tail call fastcc void @clear_edges_for_node(%struct.constraint_graph* %graph, i32 %from) #7, !dbg !10016
  ret void, !dbg !10017
}

; Function Attrs: nounwind uwtable
define internal fastcc void @merge_node_constraints(%struct.constraint_graph* %graph, i32 %to, i32 %from) unnamed_addr #5 !dbg !10018 {
entry:
  %c = alloca %struct.constraint*, align 8
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !10020, metadata !DIExpression()), !dbg !10025
  call void @llvm.dbg.value(metadata i32 %to, metadata !10021, metadata !DIExpression()), !dbg !10025
  call void @llvm.dbg.value(metadata i32 %from, metadata !10022, metadata !DIExpression()), !dbg !10025
  %0 = bitcast %struct.constraint** %c to i8*, !dbg !10026
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10026
  %call = tail call fastcc i32 @find(i32 %from) #7, !dbg !10027
  %cmp = icmp eq i32 %call, %to, !dbg !10027
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10027

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 969, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !10027
  br label %cond.end, !dbg !10027

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata i32 0, metadata !10023, metadata !DIExpression()), !dbg !10025
  %complex = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 15, !dbg !10028
  %idxprom = zext i32 %from to i64, !dbg !10028
  br label %for.cond, !dbg !10031

for.cond:                                         ; preds = %for.inc, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.inc ], !dbg !10032
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10023, metadata !DIExpression()), !dbg !10025
  %1 = load %struct.VEC_constraint_t_heap**, %struct.VEC_constraint_t_heap*** %complex, align 8, !dbg !10033
  %arrayidx = getelementptr inbounds %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %1, i64 %idxprom, !dbg !10033
  %2 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %arrayidx, align 8, !dbg !10033
  %tobool = icmp eq %struct.VEC_constraint_t_heap* %2, null, !dbg !10033
  br i1 %tobool, label %cond.end6, label %cond.true1, !dbg !10033

cond.true1:                                       ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %2, i64 0, i32 0, !dbg !10033
  br label %cond.end6, !dbg !10033

cond.end6:                                        ; preds = %for.cond, %cond.true1
  %cond7 = phi %struct.VEC_constraint_t_base* [ %base, %cond.true1 ], [ null, %for.cond ], !dbg !10033
  call void @llvm.dbg.value(metadata %struct.constraint** %c, metadata !10024, metadata !DIExpression(DW_OP_deref)), !dbg !10025
  %call8 = call fastcc i32 @VEC_constraint_t_base_iterate(%struct.VEC_constraint_t_base* %cond7, i32 %i.0, %struct.constraint** nonnull %c) #7, !dbg !10033
  %tobool9 = icmp eq i32 %call8, 0, !dbg !10034
  br i1 %tobool9, label %for.end, label %for.body, !dbg !10034

for.body:                                         ; preds = %cond.end6
  %3 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !10035
  call void @llvm.dbg.value(metadata %struct.constraint* %3, metadata !10024, metadata !DIExpression()), !dbg !10025
  %type = getelementptr inbounds %struct.constraint, %struct.constraint* %3, i64 0, i32 1, i32 0, !dbg !10038
  %4 = load i32, i32* %type, align 8, !dbg !10038
  %cmp10 = icmp eq i32 %4, 1, !dbg !10039
  call void @llvm.dbg.value(metadata %struct.constraint* %3, metadata !10024, metadata !DIExpression()), !dbg !10025
  br i1 %cmp10, label %if.then, label %if.else, !dbg !10040

if.then:                                          ; preds = %for.body
  %var = getelementptr inbounds %struct.constraint, %struct.constraint* %3, i64 0, i32 1, i32 1, !dbg !10041
  store i32 %to, i32* %var, align 4, !dbg !10042
  br label %for.inc, !dbg !10043

if.else:                                          ; preds = %for.body
  %type12 = getelementptr inbounds %struct.constraint, %struct.constraint* %3, i64 0, i32 0, i32 0, !dbg !10044
  %5 = load i32, i32* %type12, align 8, !dbg !10044
  %cmp13 = icmp eq i32 %5, 1, !dbg !10046
  call void @llvm.dbg.value(metadata %struct.constraint* %3, metadata !10024, metadata !DIExpression()), !dbg !10025
  br i1 %cmp13, label %if.then14, label %if.else17, !dbg !10047

if.then14:                                        ; preds = %if.else
  %var16 = getelementptr inbounds %struct.constraint, %struct.constraint* %3, i64 0, i32 0, i32 1, !dbg !10048
  store i32 %to, i32* %var16, align 4, !dbg !10049
  br label %for.inc, !dbg !10050

if.else17:                                        ; preds = %if.else
  %var19 = getelementptr inbounds %struct.constraint, %struct.constraint* %3, i64 0, i32 1, i32 1, !dbg !10051
  store i32 %to, i32* %var19, align 4, !dbg !10052
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else17, %if.then14
  %inc = add i32 %i.0, 1, !dbg !10053
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10023, metadata !DIExpression()), !dbg !10025
  br label %for.cond, !dbg !10054, !llvm.loop !10055

for.end:                                          ; preds = %cond.end6
  %6 = load %struct.VEC_constraint_t_heap**, %struct.VEC_constraint_t_heap*** %complex, align 8, !dbg !10057
  %idxprom22 = zext i32 %to to i64, !dbg !10058
  %arrayidx23 = getelementptr inbounds %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %6, i64 %idxprom22, !dbg !10058
  %arrayidx26 = getelementptr inbounds %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %6, i64 %idxprom, !dbg !10059
  call fastcc void @constraint_set_union(%struct.VEC_constraint_t_heap** %arrayidx23, %struct.VEC_constraint_t_heap** %arrayidx26) #7, !dbg !10060
  %7 = load %struct.VEC_constraint_t_heap**, %struct.VEC_constraint_t_heap*** %complex, align 8, !dbg !10061
  %arrayidx29 = getelementptr inbounds %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %7, i64 %idxprom, !dbg !10061
  call fastcc void @VEC_constraint_t_heap_free(%struct.VEC_constraint_t_heap** %arrayidx29) #7, !dbg !10061
  %8 = load %struct.VEC_constraint_t_heap**, %struct.VEC_constraint_t_heap*** %complex, align 8, !dbg !10062
  %arrayidx32 = getelementptr inbounds %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %8, i64 %idxprom, !dbg !10063
  store %struct.VEC_constraint_t_heap* null, %struct.VEC_constraint_t_heap** %arrayidx32, align 8, !dbg !10064
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10065
  ret void, !dbg !10065
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @valid_graph_edge(%struct.constraint_graph* %graph, i32 %src, i32 %dest) unnamed_addr #5 !dbg !10066 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !10070, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.value(metadata i32 %src, metadata !10071, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.value(metadata i32 %dest, metadata !10072, metadata !DIExpression()), !dbg !10073
  %succs = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 1, !dbg !10074
  %0 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !10074
  %idxprom = zext i32 %dest to i64, !dbg !10075
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, i64 %idxprom, !dbg !10075
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !10075
  %tobool = icmp eq %struct.bitmap_head_def* %1, null, !dbg !10075
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !10076

land.rhs:                                         ; preds = %entry
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %1, i32 %src) #6, !dbg !10077
  %tobool4 = icmp ne i32 %call, 0, !dbg !10076
  %phitmp = zext i1 %tobool4 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !10078
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @constraint_set_union(%struct.VEC_constraint_t_heap** %to, %struct.VEC_constraint_t_heap** %from) unnamed_addr #5 !dbg !10079 {
entry:
  %c = alloca %struct.constraint*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_heap** %to, metadata !10083, metadata !DIExpression()), !dbg !10093
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_heap** %from, metadata !10084, metadata !DIExpression()), !dbg !10093
  %0 = bitcast %struct.constraint** %c to i8*, !dbg !10094
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10094
  call void @llvm.dbg.value(metadata i32 0, metadata !10085, metadata !DIExpression()), !dbg !10093
  br label %for.cond, !dbg !10095

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !10096
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10085, metadata !DIExpression()), !dbg !10093
  %1 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %from, align 8, !dbg !10097
  %tobool = icmp eq %struct.VEC_constraint_t_heap* %1, null, !dbg !10097
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10097

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %1, i64 0, i32 0, !dbg !10097
  br label %cond.end, !dbg !10097

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_constraint_t_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !10097
  call void @llvm.dbg.value(metadata %struct.constraint** %c, metadata !10086, metadata !DIExpression(DW_OP_deref)), !dbg !10093
  %call = call fastcc i32 @VEC_constraint_t_base_iterate(%struct.VEC_constraint_t_base* %cond, i32 %i.0, %struct.constraint** nonnull %c) #7, !dbg !10097
  %tobool1 = icmp eq i32 %call, 0, !dbg !10098
  br i1 %tobool1, label %for.end, label %for.body, !dbg !10098

for.body:                                         ; preds = %cond.end
  %2 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %to, align 8, !dbg !10099
  %3 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !10100
  call void @llvm.dbg.value(metadata %struct.constraint* %3, metadata !10086, metadata !DIExpression()), !dbg !10093
  %call2 = call fastcc %struct.constraint* @constraint_vec_find(%struct.VEC_constraint_t_heap* %2, %struct.constraint* byval(%struct.constraint) align 8 %3) #7, !dbg !10101
  %cmp = icmp eq %struct.constraint* %call2, null, !dbg !10102
  br i1 %cmp, label %if.then, label %for.inc, !dbg !10103

if.then:                                          ; preds = %for.body
  %4 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %to, align 8, !dbg !10104
  %tobool3 = icmp eq %struct.VEC_constraint_t_heap* %4, null, !dbg !10104
  br i1 %tobool3, label %cond.end7, label %cond.true4, !dbg !10104

cond.true4:                                       ; preds = %if.then
  %base5 = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %4, i64 0, i32 0, !dbg !10104
  br label %cond.end7, !dbg !10104

cond.end7:                                        ; preds = %if.then, %cond.true4
  %cond8 = phi %struct.VEC_constraint_t_base* [ %base5, %cond.true4 ], [ null, %if.then ], !dbg !10104
  %5 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !10104
  call void @llvm.dbg.value(metadata %struct.constraint* %5, metadata !10086, metadata !DIExpression()), !dbg !10093
  %call9 = call fastcc i32 @VEC_constraint_t_base_lower_bound(%struct.VEC_constraint_t_base* %cond8, %struct.constraint* %5, i8 (%struct.constraint*, %struct.constraint*)* nonnull @constraint_less) #7, !dbg !10104
  call void @llvm.dbg.value(metadata i32 %call9, metadata !10087, metadata !DIExpression()), !dbg !10105
  %6 = load %struct.constraint*, %struct.constraint** %c, align 8, !dbg !10106
  call void @llvm.dbg.value(metadata %struct.constraint* %6, metadata !10086, metadata !DIExpression()), !dbg !10093
  %call10 = call fastcc %struct.constraint** @VEC_constraint_t_heap_safe_insert(%struct.VEC_constraint_t_heap** %to, i32 %call9, %struct.constraint* %6) #7, !dbg !10106
  br label %for.inc, !dbg !10107

for.inc:                                          ; preds = %for.body, %cond.end7
  %inc = add nuw nsw i32 %i.0, 1, !dbg !10108
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10085, metadata !DIExpression()), !dbg !10093
  br label %for.cond, !dbg !10109, !llvm.loop !10110

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !10112
  ret void, !dbg !10112
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_constraint_t_heap_free(%struct.VEC_constraint_t_heap** %vec_) unnamed_addr #0 !dbg !10113 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_heap** %vec_, metadata !10117, metadata !DIExpression()), !dbg !10118
  %0 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %vec_, align 8, !dbg !10119
  %tobool = icmp eq %struct.VEC_constraint_t_heap* %0, null, !dbg !10119
  br i1 %tobool, label %if.end, label %if.then, !dbg !10121

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_constraint_t_heap* %0 to i8*, !dbg !10121
  tail call void @free(i8* nonnull %1) #6, !dbg !10119
  br label %if.end, !dbg !10119

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_constraint_t_heap* null, %struct.VEC_constraint_t_heap** %vec_, align 8, !dbg !10121
  ret void, !dbg !10121
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.constraint* @constraint_vec_find(%struct.VEC_constraint_t_heap* %vec, %struct.constraint* byval(%struct.constraint) align 8 %lookfor) unnamed_addr #5 !dbg !10122 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_heap* %vec, metadata !10126, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.declare(metadata %struct.constraint* %lookfor, metadata !10127, metadata !DIExpression()), !dbg !10131
  %cmp = icmp eq %struct.VEC_constraint_t_heap* %vec, null, !dbg !10132
  br i1 %cmp, label %cleanup, label %cond.true, !dbg !10134

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %vec, i64 0, i32 0, !dbg !10135
  %call = call fastcc i32 @VEC_constraint_t_base_lower_bound(%struct.VEC_constraint_t_base* nonnull %base, %struct.constraint* nonnull %lookfor, i8 (%struct.constraint*, %struct.constraint*)* nonnull @constraint_less) #7, !dbg !10135
  call void @llvm.dbg.value(metadata i32 %call, metadata !10128, metadata !DIExpression()), !dbg !10130
  %call7 = call fastcc i32 @VEC_constraint_t_base_length(%struct.VEC_constraint_t_base* nonnull %base) #7, !dbg !10136
  %cmp8 = icmp ult i32 %call, %call7, !dbg !10138
  br i1 %cmp8, label %if.end10, label %cleanup, !dbg !10139

if.end10:                                         ; preds = %cond.true
  %call17 = call fastcc %struct.constraint* @VEC_constraint_t_base_index(%struct.VEC_constraint_t_base* nonnull %base, i32 %call) #7, !dbg !10140
  call void @llvm.dbg.value(metadata %struct.constraint* %call17, metadata !10129, metadata !DIExpression()), !dbg !10130
  %call18 = call fastcc zeroext i8 @constraint_equal(%struct.constraint* byval(%struct.constraint) align 8 %call17, %struct.constraint* nonnull byval(%struct.constraint) align 8 %lookfor) #7, !dbg !10141
  %tobool19 = icmp eq i8 %call18, 0, !dbg !10141
  %call17. = select i1 %tobool19, %struct.constraint* null, %struct.constraint* %call17, !dbg !10130
  br label %cleanup, !dbg !10130

cleanup:                                          ; preds = %cond.true, %if.end10, %entry
  %retval.0 = phi %struct.constraint* [ null, %entry ], [ null, %cond.true ], [ %call17., %if.end10 ], !dbg !10130
  ret %struct.constraint* %retval.0, !dbg !10143
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constraint_t_base_lower_bound(%struct.VEC_constraint_t_base* %vec_, %struct.constraint* %obj_, i8 (%struct.constraint*, %struct.constraint*)* %lessthan_) unnamed_addr #0 !dbg !10144 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_base* %vec_, metadata !10152, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata %struct.constraint* %obj_, metadata !10153, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i8 (%struct.constraint*, %struct.constraint*)* @constraint_less, metadata !10154, metadata !DIExpression()), !dbg !10161
  %call = tail call fastcc i32 @VEC_constraint_t_base_length(%struct.VEC_constraint_t_base* %vec_) #7, !dbg !10162
  call void @llvm.dbg.value(metadata i32 %call, metadata !10155, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32 0, metadata !10158, metadata !DIExpression()), !dbg !10161
  br label %while.cond, !dbg !10162

while.cond:                                       ; preds = %if.end, %entry
  %len_.0 = phi i32 [ %call, %entry ], [ %len_.1, %if.end ], !dbg !10161
  %first_.0 = phi i32 [ 0, %entry ], [ %first_.1, %if.end ], !dbg !10161
  call void @llvm.dbg.value(metadata i32 %first_.0, metadata !10158, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32 %len_.0, metadata !10155, metadata !DIExpression()), !dbg !10161
  %cmp = icmp eq i32 %len_.0, 0, !dbg !10162
  br i1 %cmp, label %while.end, label %while.body, !dbg !10162

while.body:                                       ; preds = %while.cond
  %shr = lshr i32 %len_.0, 1, !dbg !10163
  call void @llvm.dbg.value(metadata i32 %shr, metadata !10156, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32 %first_.0, metadata !10157, metadata !DIExpression()), !dbg !10161
  %add = add i32 %first_.0, %shr, !dbg !10163
  call void @llvm.dbg.value(metadata i32 %add, metadata !10157, metadata !DIExpression()), !dbg !10161
  %call1 = tail call fastcc %struct.constraint* @VEC_constraint_t_base_index(%struct.VEC_constraint_t_base* %vec_, i32 %add) #7, !dbg !10163
  call void @llvm.dbg.value(metadata %struct.constraint* %call1, metadata !10159, metadata !DIExpression()), !dbg !10164
  %call2 = tail call zeroext i8 @constraint_less(%struct.constraint* %call1, %struct.constraint* %obj_) #6, !dbg !10165
  %tobool = icmp eq i8 %call2, 0, !dbg !10165
  br i1 %tobool, label %if.end, label %if.then, !dbg !10163

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 %add, metadata !10158, metadata !DIExpression()), !dbg !10161
  %inc = add i32 %add, 1, !dbg !10167
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10158, metadata !DIExpression()), !dbg !10161
  %0 = xor i32 %shr, -1, !dbg !10167
  %sub3 = add i32 %len_.0, %0, !dbg !10167
  call void @llvm.dbg.value(metadata i32 %sub3, metadata !10155, metadata !DIExpression()), !dbg !10161
  br label %if.end, !dbg !10167

if.end:                                           ; preds = %while.body, %if.then
  %len_.1 = phi i32 [ %sub3, %if.then ], [ %shr, %while.body ], !dbg !10169
  %first_.1 = phi i32 [ %inc, %if.then ], [ %first_.0, %while.body ], !dbg !10161
  call void @llvm.dbg.value(metadata i32 %first_.1, metadata !10158, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32 %len_.1, metadata !10155, metadata !DIExpression()), !dbg !10161
  br label %while.cond, !dbg !10162, !llvm.loop !10170

while.end:                                        ; preds = %while.cond
  %first_.0.lcssa = phi i32 [ %first_.0, %while.cond ], !dbg !10161
  call void @llvm.dbg.value(metadata i32 %first_.0.lcssa, metadata !10158, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32 %first_.0.lcssa, metadata !10158, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32 %first_.0.lcssa, metadata !10158, metadata !DIExpression()), !dbg !10161
  ret i32 %first_.0.lcssa, !dbg !10162
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @constraint_less(%struct.constraint* %a, %struct.constraint* %b) #5 !dbg !10171 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint* %a, metadata !10173, metadata !DIExpression()), !dbg !10175
  call void @llvm.dbg.value(metadata %struct.constraint* %b, metadata !10174, metadata !DIExpression()), !dbg !10175
  %0 = bitcast %struct.constraint* %a to i64*, !dbg !10176
  %1 = load i64, i64* %0, align 8, !dbg !10176
  %2 = getelementptr inbounds %struct.constraint, %struct.constraint* %a, i64 0, i32 0, i32 2, !dbg !10176
  %3 = load i64, i64* %2, align 8, !dbg !10176
  %4 = bitcast %struct.constraint* %b to i64*, !dbg !10176
  %5 = load i64, i64* %4, align 8, !dbg !10176
  %6 = getelementptr inbounds %struct.constraint, %struct.constraint* %b, i64 0, i32 0, i32 2, !dbg !10176
  %7 = load i64, i64* %6, align 8, !dbg !10176
  %call = tail call fastcc zeroext i8 @constraint_expr_less(i64 %1, i64 %3, i64 %5, i64 %7) #7, !dbg !10176
  %tobool = icmp eq i8 %call, 0, !dbg !10176
  br i1 %tobool, label %if.else, label %return, !dbg !10178

if.else:                                          ; preds = %entry
  %8 = load i64, i64* %4, align 8, !dbg !10179
  %9 = load i64, i64* %6, align 8, !dbg !10179
  %10 = load i64, i64* %0, align 8, !dbg !10179
  %11 = load i64, i64* %2, align 8, !dbg !10179
  %call4 = tail call fastcc zeroext i8 @constraint_expr_less(i64 %8, i64 %9, i64 %10, i64 %11) #7, !dbg !10179
  %tobool5 = icmp eq i8 %call4, 0, !dbg !10179
  br i1 %tobool5, label %if.else7, label %return, !dbg !10181

if.else7:                                         ; preds = %if.else
  %rhs = getelementptr inbounds %struct.constraint, %struct.constraint* %a, i64 0, i32 1, !dbg !10182
  %rhs8 = getelementptr inbounds %struct.constraint, %struct.constraint* %b, i64 0, i32 1, !dbg !10183
  %12 = bitcast %struct.constraint_expr* %rhs to i64*, !dbg !10184
  %13 = load i64, i64* %12, align 8, !dbg !10184
  %14 = getelementptr inbounds %struct.constraint, %struct.constraint* %a, i64 0, i32 1, i32 2, !dbg !10184
  %15 = load i64, i64* %14, align 8, !dbg !10184
  %16 = bitcast %struct.constraint_expr* %rhs8 to i64*, !dbg !10184
  %17 = load i64, i64* %16, align 8, !dbg !10184
  %18 = getelementptr inbounds %struct.constraint, %struct.constraint* %b, i64 0, i32 1, i32 2, !dbg !10184
  %19 = load i64, i64* %18, align 8, !dbg !10184
  %call9 = tail call fastcc zeroext i8 @constraint_expr_less(i64 %13, i64 %15, i64 %17, i64 %19) #7, !dbg !10184
  br label %return, !dbg !10185

return:                                           ; preds = %if.else, %entry, %if.else7
  %retval.0 = phi i8 [ %call9, %if.else7 ], [ 1, %entry ], [ 0, %if.else ], !dbg !10186
  ret i8 %retval.0, !dbg !10187
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constraint** @VEC_constraint_t_heap_safe_insert(%struct.VEC_constraint_t_heap** %vec_, i32 %ix_, %struct.constraint* %obj_) unnamed_addr #0 !dbg !10188 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_heap** %vec_, metadata !10192, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10193, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.value(metadata %struct.constraint* %obj_, metadata !10194, metadata !DIExpression()), !dbg !10195
  %call = tail call fastcc i32 @VEC_constraint_t_heap_reserve(%struct.VEC_constraint_t_heap** %vec_, i32 1) #7, !dbg !10196
  %0 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %vec_, align 8, !dbg !10196
  %tobool = icmp eq %struct.VEC_constraint_t_heap* %0, null, !dbg !10196
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10196

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %0, i64 0, i32 0, !dbg !10196
  br label %cond.end, !dbg !10196

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_constraint_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10196
  %call1 = tail call fastcc %struct.constraint** @VEC_constraint_t_base_quick_insert(%struct.VEC_constraint_t_base* %cond, i32 %ix_, %struct.constraint* %obj_) #7, !dbg !10196
  ret %struct.constraint** %call1, !dbg !10196
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constraint_t_base_length(%struct.VEC_constraint_t_base* %vec_) unnamed_addr #0 !dbg !10197 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_base* %vec_, metadata !10201, metadata !DIExpression()), !dbg !10202
  %tobool = icmp eq %struct.VEC_constraint_t_base* %vec_, null, !dbg !10203
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10203

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constraint_t_base, %struct.VEC_constraint_t_base* %vec_, i64 0, i32 0, !dbg !10203
  %0 = load i32, i32* %num, align 8, !dbg !10203
  br label %cond.end, !dbg !10203

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !10203
  ret i32 %cond, !dbg !10203
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constraint* @VEC_constraint_t_base_index(%struct.VEC_constraint_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !10204 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_base* %vec_, metadata !10208, metadata !DIExpression()), !dbg !10210
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10209, metadata !DIExpression()), !dbg !10210
  br label %land.end, !dbg !10211

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !10211
  %arrayidx = getelementptr inbounds %struct.VEC_constraint_t_base, %struct.VEC_constraint_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10211
  %0 = load %struct.constraint*, %struct.constraint** %arrayidx, align 8, !dbg !10211
  ret %struct.constraint* %0, !dbg !10211
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @constraint_equal(%struct.constraint* byval(%struct.constraint) align 8 %a, %struct.constraint* byval(%struct.constraint) align 8 %b) unnamed_addr #5 !dbg !10212 {
entry:
  call void @llvm.dbg.declare(metadata %struct.constraint* %a, metadata !10216, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.declare(metadata %struct.constraint* %b, metadata !10217, metadata !DIExpression()), !dbg !10219
  %0 = bitcast %struct.constraint* %a to i64*, !dbg !10220
  %1 = load i64, i64* %0, align 8, !dbg !10220
  %2 = getelementptr inbounds %struct.constraint, %struct.constraint* %a, i64 0, i32 0, i32 2, !dbg !10220
  %3 = load i64, i64* %2, align 8, !dbg !10220
  %4 = bitcast %struct.constraint* %b to i64*, !dbg !10220
  %5 = load i64, i64* %4, align 8, !dbg !10220
  %6 = getelementptr inbounds %struct.constraint, %struct.constraint* %b, i64 0, i32 0, i32 2, !dbg !10220
  %7 = load i64, i64* %6, align 8, !dbg !10220
  %call = tail call fastcc zeroext i8 @constraint_expr_equal(i64 %1, i64 %3, i64 %5, i64 %7) #7, !dbg !10220
  %tobool = icmp eq i8 %call, 0, !dbg !10220
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !10221

land.rhs:                                         ; preds = %entry
  %rhs = getelementptr inbounds %struct.constraint, %struct.constraint* %a, i64 0, i32 1, !dbg !10222
  %rhs2 = getelementptr inbounds %struct.constraint, %struct.constraint* %b, i64 0, i32 1, !dbg !10223
  %8 = bitcast %struct.constraint_expr* %rhs to i64*, !dbg !10224
  %9 = load i64, i64* %8, align 8, !dbg !10224
  %10 = getelementptr inbounds %struct.constraint, %struct.constraint* %a, i64 0, i32 1, i32 2, !dbg !10224
  %11 = load i64, i64* %10, align 8, !dbg !10224
  %12 = bitcast %struct.constraint_expr* %rhs2 to i64*, !dbg !10224
  %13 = load i64, i64* %12, align 8, !dbg !10224
  %14 = getelementptr inbounds %struct.constraint, %struct.constraint* %b, i64 0, i32 1, i32 2, !dbg !10224
  %15 = load i64, i64* %14, align 8, !dbg !10224
  %call3 = tail call fastcc zeroext i8 @constraint_expr_equal(i64 %9, i64 %11, i64 %13, i64 %15) #7, !dbg !10224
  %tobool5 = icmp ne i8 %call3, 0, !dbg !10221
  %phitmp = zext i1 %tobool5 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %16 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %16, !dbg !10225
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @constraint_expr_equal(i64 %a.coerce0, i64 %a.coerce1, i64 %b.coerce0, i64 %b.coerce1) unnamed_addr #5 !dbg !10226 {
entry:
  %0 = trunc i64 %a.coerce0 to i32, !dbg !10232
  %1 = trunc i64 %b.coerce0 to i32, !dbg !10233
  %cmp = icmp eq i32 %0, %1, !dbg !10234
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !10235

land.lhs.true:                                    ; preds = %entry
  %2 = lshr i64 %b.coerce0, 32, !dbg !10235
  %3 = trunc i64 %2 to i32, !dbg !10235
  %4 = lshr i64 %a.coerce0, 32, !dbg !10235
  %5 = trunc i64 %4 to i32, !dbg !10235
  %cmp3 = icmp eq i32 %5, %3, !dbg !10236
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !10237

land.rhs:                                         ; preds = %land.lhs.true
  %cmp5 = icmp eq i64 %a.coerce1, %b.coerce1, !dbg !10238
  %phitmp = zext i1 %cmp5 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %6 = phi i8 [ 0, %land.lhs.true ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %6, !dbg !10239
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @constraint_expr_less(i64 %a.coerce0, i64 %a.coerce1, i64 %b.coerce0, i64 %b.coerce1) unnamed_addr #5 !dbg !10240 {
entry:
  %0 = trunc i64 %a.coerce0 to i32, !dbg !10244
  %1 = trunc i64 %b.coerce0 to i32, !dbg !10246
  %cmp = icmp eq i32 %0, %1, !dbg !10247
  %2 = lshr i64 %a.coerce0, 32, !dbg !10248
  %3 = trunc i64 %2 to i32, !dbg !10248
  %4 = lshr i64 %b.coerce0, 32, !dbg !10248
  %5 = trunc i64 %4 to i32, !dbg !10248
  br i1 %cmp, label %if.then, label %if.else13, !dbg !10248

if.then:                                          ; preds = %entry
  %cmp3 = icmp eq i32 %3, %5, !dbg !10249
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !10252

if.then4:                                         ; preds = %if.then
  %cmp6 = icmp slt i64 %a.coerce1, %b.coerce1, !dbg !10253
  br label %return, !dbg !10254

if.else:                                          ; preds = %if.then
  %cmp10 = icmp ult i32 %3, %5, !dbg !10255
  br label %return, !dbg !10256

if.else13:                                        ; preds = %entry
  %cmp16 = icmp ult i32 %0, %1, !dbg !10257
  br label %return, !dbg !10258

return:                                           ; preds = %if.else13, %if.else, %if.then4
  %retval.0.in = phi i1 [ %cmp6, %if.then4 ], [ %cmp10, %if.else ], [ %cmp16, %if.else13 ]
  %retval.0 = zext i1 %retval.0.in to i8, !dbg !10259
  ret i8 %retval.0, !dbg !10260
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constraint** @VEC_constraint_t_base_quick_insert(%struct.VEC_constraint_t_base* %vec_, i32 %ix_, %struct.constraint* %obj_) unnamed_addr #0 !dbg !10261 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_base* %vec_, metadata !10265, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10266, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata %struct.constraint* %obj_, metadata !10267, metadata !DIExpression()), !dbg !10269
  %idxprom = zext i32 %ix_ to i64, !dbg !10270
  %arrayidx = getelementptr inbounds %struct.VEC_constraint_t_base, %struct.VEC_constraint_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10270
  call void @llvm.dbg.value(metadata %struct.constraint** %arrayidx, metadata !10268, metadata !DIExpression()), !dbg !10269
  %add.ptr = getelementptr inbounds %struct.constraint*, %struct.constraint** %arrayidx, i64 1, !dbg !10270
  %0 = bitcast %struct.constraint** %add.ptr to i8*, !dbg !10270
  %1 = bitcast %struct.constraint** %arrayidx to i8*, !dbg !10270
  %num4 = getelementptr inbounds %struct.VEC_constraint_t_base, %struct.VEC_constraint_t_base* %vec_, i64 0, i32 0, !dbg !10270
  %2 = load i32, i32* %num4, align 8, !dbg !10270
  %inc = add i32 %2, 1, !dbg !10270
  store i32 %inc, i32* %num4, align 8, !dbg !10270
  %sub = sub i32 %2, %ix_, !dbg !10270
  %conv5 = zext i32 %sub to i64, !dbg !10270
  %mul = shl nuw nsw i64 %conv5, 3, !dbg !10270
  %call = tail call i8* @memmove(i8* nonnull %0, i8* nonnull %1, i64 %mul) #6, !dbg !10270
  store %struct.constraint* %obj_, %struct.constraint** %arrayidx, align 8, !dbg !10270
  ret %struct.constraint** %arrayidx, !dbg !10270
}

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @add_graph_edge(%struct.constraint_graph* %graph, i32 %to, i32 %from) unnamed_addr #5 !dbg !10271 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !10273, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.value(metadata i32 %to, metadata !10274, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.value(metadata i32 %from, metadata !10275, metadata !DIExpression()), !dbg !10279
  %cmp = icmp eq i32 %to, %from, !dbg !10280
  br i1 %cmp, label %return, label %if.else, !dbg !10281

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8 0, metadata !10276, metadata !DIExpression()), !dbg !10282
  %succs = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 1, !dbg !10283
  %0 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !10283
  %idxprom = zext i32 %from to i64, !dbg !10285
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, i64 %idxprom, !dbg !10285
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !10285
  %tobool = icmp eq %struct.bitmap_head_def* %1, null, !dbg !10285
  br i1 %tobool, label %if.then1, label %if.end, !dbg !10286

if.then1:                                         ; preds = %if.else
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @pta_obstack) #6, !dbg !10287
  %2 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !10288
  %arrayidx4 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %2, i64 %idxprom, !dbg !10289
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %arrayidx4, align 8, !dbg !10290
  %.pre = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !10291
  %arrayidx7.phi.trans.insert = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %.pre, i64 %idxprom, !dbg !10293
  %.pre1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx7.phi.trans.insert, align 8, !dbg !10294
  br label %if.end, !dbg !10289

if.end:                                           ; preds = %if.else, %if.then1
  %3 = phi %struct.bitmap_head_def* [ %1, %if.else ], [ %.pre1, %if.then1 ], !dbg !10294
  %call8 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %to) #6, !dbg !10295
  %tobool9 = icmp eq i8 %call8, 0, !dbg !10295
  br i1 %tobool9, label %return, label %if.then10, !dbg !10296

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i8 1, metadata !10276, metadata !DIExpression()), !dbg !10282
  %4 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !10297
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %4, i64 0, i32 0, !dbg !10297
  %call12 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !10297
  %cmp13 = icmp ugt i32 %call12, %to, !dbg !10300
  br i1 %cmp13, label %land.lhs.true, label %return, !dbg !10301

land.lhs.true:                                    ; preds = %if.then10
  %5 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !10302
  %base16 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %5, i64 0, i32 0, !dbg !10302
  %call20 = tail call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base16) #7, !dbg !10302
  %cmp21 = icmp ugt i32 %call20, %from, !dbg !10303
  br i1 %cmp21, label %if.then22, label %return, !dbg !10304

if.then22:                                        ; preds = %land.lhs.true
  %6 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 5), align 4, !dbg !10305
  %inc = add i32 %6, 1, !dbg !10305
  store i32 %inc, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 5), align 4, !dbg !10305
  br label %return, !dbg !10306

return:                                           ; preds = %if.end, %if.then22, %land.lhs.true, %if.then10, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ 1, %if.then22 ], [ 1, %land.lhs.true ], [ 1, %if.then10 ], !dbg !10307
  ret i8 %retval.0, !dbg !10308
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_scc_info(%struct.scc_info* %si) unnamed_addr #5 !dbg !10309 {
entry:
  call void @llvm.dbg.value(metadata %struct.scc_info* %si, metadata !10311, metadata !DIExpression()), !dbg !10312
  %visited = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 0, !dbg !10313
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !10313
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %0, i64 0, i32 0, !dbg !10313
  %1 = load i8*, i8** %popcount, align 8, !dbg !10313
  tail call void @free(i8* %1) #6, !dbg !10313
  %2 = bitcast %struct.scc_info* %si to i8**, !dbg !10313
  %3 = load i8*, i8** %2, align 8, !dbg !10313
  tail call void @free(i8* %3) #6, !dbg !10313
  %deleted = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 1, !dbg !10314
  %4 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %deleted, align 8, !dbg !10314
  %popcount2 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %4, i64 0, i32 0, !dbg !10314
  %5 = load i8*, i8** %popcount2, align 8, !dbg !10314
  tail call void @free(i8* %5) #6, !dbg !10314
  %6 = bitcast %struct.simple_bitmap_def** %deleted to i8**, !dbg !10314
  %7 = load i8*, i8** %6, align 8, !dbg !10314
  tail call void @free(i8* %7) #6, !dbg !10314
  %node_mapping = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 3, !dbg !10315
  %8 = bitcast i32** %node_mapping to i8**, !dbg !10315
  %9 = load i8*, i8** %8, align 8, !dbg !10315
  tail call void @free(i8* %9) #6, !dbg !10316
  %dfs = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 2, !dbg !10317
  %10 = bitcast i32** %dfs to i8**, !dbg !10317
  %11 = load i8*, i8** %10, align 8, !dbg !10317
  tail call void @free(i8* %11) #6, !dbg !10318
  %scc_stack = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 5, !dbg !10319
  tail call fastcc void @VEC_unsigned_heap_free(%struct.VEC_unsigned_heap** nonnull %scc_stack) #7, !dbg !10319
  %12 = bitcast %struct.scc_info* %si to i8*, !dbg !10320
  tail call void @free(i8* %12) #6, !dbg !10321
  ret void, !dbg !10322
}

declare dso_local void @bitmap_obstack_release(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_unsigned_heap_free(%struct.VEC_unsigned_heap** %vec_) unnamed_addr #0 !dbg !10323 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap** %vec_, metadata !10327, metadata !DIExpression()), !dbg !10328
  %0 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %vec_, align 8, !dbg !10329
  %tobool = icmp eq %struct.VEC_unsigned_heap* %0, null, !dbg !10329
  br i1 %tobool, label %if.end, label %if.then, !dbg !10331

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_unsigned_heap* %0 to i8*, !dbg !10331
  tail call void @free(i8* nonnull %1) #6, !dbg !10329
  br label %if.end, !dbg !10329

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_unsigned_heap* null, %struct.VEC_unsigned_heap** %vec_, align 8, !dbg !10331
  ret void, !dbg !10331
}

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_into_complex(%struct.constraint_graph* %graph, i32 %var, %struct.constraint* %c) unnamed_addr #5 !dbg !10332 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !10336, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i32 %var, metadata !10337, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata %struct.constraint* %c, metadata !10338, metadata !DIExpression()), !dbg !10341
  %complex1 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 15, !dbg !10342
  %0 = load %struct.VEC_constraint_t_heap**, %struct.VEC_constraint_t_heap*** %complex1, align 8, !dbg !10342
  %idxprom = zext i32 %var to i64, !dbg !10343
  %arrayidx = getelementptr inbounds %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %0, i64 %idxprom, !dbg !10343
  %1 = load %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %arrayidx, align 8, !dbg !10343
  call void @llvm.dbg.value(metadata %struct.VEC_constraint_t_heap* %1, metadata !10339, metadata !DIExpression()), !dbg !10341
  %base = getelementptr inbounds %struct.VEC_constraint_t_heap, %struct.VEC_constraint_t_heap* %1, i64 0, i32 0, !dbg !10344
  %call = tail call fastcc i32 @VEC_constraint_t_base_lower_bound(%struct.VEC_constraint_t_base* %base, %struct.constraint* %c, i8 (%struct.constraint*, %struct.constraint*)* nonnull @constraint_less) #7, !dbg !10344
  call void @llvm.dbg.value(metadata i32 %call, metadata !10340, metadata !DIExpression()), !dbg !10341
  %call8 = tail call fastcc i32 @VEC_constraint_t_base_length(%struct.VEC_constraint_t_base* %base) #7, !dbg !10345
  %cmp = icmp ult i32 %call, %call8, !dbg !10347
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !10348

lor.lhs.false:                                    ; preds = %entry
  %call15 = tail call fastcc %struct.constraint* @VEC_constraint_t_base_index(%struct.VEC_constraint_t_base* %base, i32 %call) #7, !dbg !10349
  %call16 = tail call fastcc zeroext i8 @constraint_equal(%struct.constraint* byval(%struct.constraint) align 8 %c, %struct.constraint* byval(%struct.constraint) align 8 %call15) #7, !dbg !10350
  %tobool17 = icmp eq i8 %call16, 0, !dbg !10350
  br i1 %tobool17, label %if.then, label %if.end, !dbg !10351

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.VEC_constraint_t_heap**, %struct.VEC_constraint_t_heap*** %complex1, align 8, !dbg !10352
  %arrayidx20 = getelementptr inbounds %struct.VEC_constraint_t_heap*, %struct.VEC_constraint_t_heap** %2, i64 %idxprom, !dbg !10352
  %call21 = tail call fastcc %struct.constraint** @VEC_constraint_t_heap_safe_insert(%struct.VEC_constraint_t_heap** %arrayidx20, i32 %call, %struct.constraint* %c) #7, !dbg !10352
  br label %if.end, !dbg !10352

if.end:                                           ; preds = %lor.lhs.false, %if.then
  ret void, !dbg !10353
}

; Function Attrs: nounwind uwtable
define internal fastcc void @scc_visit(%struct.constraint_graph* %graph, %struct.scc_info* %si, i32 %n) unnamed_addr #5 !dbg !10354 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bi90 = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !10356, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.value(metadata %struct.scc_info* %si, metadata !10357, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.value(metadata i32 %n, metadata !10358, metadata !DIExpression()), !dbg !10379
  %0 = bitcast i32* %i to i8*, !dbg !10380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !10380
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !10381
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !10381
  %visited = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 0, !dbg !10382
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !10382
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %2, i32 %n) #7, !dbg !10383
  %current_index = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 4, !dbg !10384
  %3 = load i32, i32* %current_index, align 8, !dbg !10385
  %inc = add nsw i32 %3, 1, !dbg !10385
  store i32 %inc, i32* %current_index, align 8, !dbg !10385
  %dfs = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 2, !dbg !10386
  %4 = load i32*, i32** %dfs, align 8, !dbg !10386
  %idxprom = zext i32 %n to i64, !dbg !10387
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !10387
  store i32 %3, i32* %arrayidx, align 4, !dbg !10388
  %5 = load i32*, i32** %dfs, align 8, !dbg !10389
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !10390
  %6 = load i32, i32* %arrayidx3, align 4, !dbg !10390
  call void @llvm.dbg.value(metadata i32 %6, metadata !10361, metadata !DIExpression()), !dbg !10379
  %succs = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 1, !dbg !10391
  %7 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !10391
  %arrayidx5 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %7, i64 %idxprom, !dbg !10391
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx5, align 8, !dbg !10391
  %tobool = icmp eq %struct.bitmap_head_def* %8, null, !dbg !10391
  br i1 %tobool, label %if.end60, label %if.then, !dbg !10392

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !10359, metadata !DIExpression(DW_OP_deref)), !dbg !10379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10360, metadata !DIExpression(DW_OP_deref)), !dbg !10379
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %8, i32 0, i32* nonnull %i) #7, !dbg !10393
  %deleted = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 1, !dbg !10394
  br label %for.cond, !dbg !10393

for.cond:                                         ; preds = %for.inc, %if.then
  call void @llvm.dbg.value(metadata i32* %i, metadata !10359, metadata !DIExpression(DW_OP_deref)), !dbg !10379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10360, metadata !DIExpression(DW_OP_deref)), !dbg !10379
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10396
  %tobool9 = icmp eq i8 %call, 0, !dbg !10393
  br i1 %tobool9, label %if.end60.loopexit, label %for.body, !dbg !10393

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !10397
  call void @llvm.dbg.value(metadata i32 %9, metadata !10359, metadata !DIExpression()), !dbg !10379
  %10 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !10399
  %base = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %10, i64 0, i32 0, !dbg !10399
  %call11 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base) #7, !dbg !10399
  %11 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !10399
  %base14 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %11, i64 0, i32 0, !dbg !10399
  %call18 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base14) #7, !dbg !10399
  %sub = add i32 %call18, -1, !dbg !10399
  %add = add i32 %call11, %sub, !dbg !10399
  %cmp = icmp ugt i32 %9, %add, !dbg !10400
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10401

if.end:                                           ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !10402
  call void @llvm.dbg.value(metadata i32 %12, metadata !10359, metadata !DIExpression()), !dbg !10379
  %call20 = call fastcc i32 @find(i32 %12) #7, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %call20, metadata !10362, metadata !DIExpression()), !dbg !10404
  %13 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %deleted, align 8, !dbg !10405
  %div = lshr i32 %call20, 6, !dbg !10405
  %idxprom21 = zext i32 %div to i64, !dbg !10405
  %arrayidx22 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %13, i64 0, i32 3, i64 %idxprom21, !dbg !10405
  %14 = load i64, i64* %arrayidx22, align 8, !dbg !10405
  %rem = and i32 %call20, 63, !dbg !10405
  %sh_prom = zext i32 %rem to i64, !dbg !10405
  %15 = shl i64 1, %sh_prom, !dbg !10405
  %16 = and i64 %14, %15, !dbg !10405
  %tobool23 = icmp eq i64 %16, 0, !dbg !10405
  br i1 %tobool23, label %if.end25, label %cleanup, !dbg !10406

if.end25:                                         ; preds = %if.end
  %17 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !10407
  %arrayidx30 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %17, i64 0, i32 3, i64 %idxprom21, !dbg !10407
  %18 = load i64, i64* %arrayidx30, align 8, !dbg !10407
  %19 = and i64 %18, %15, !dbg !10407
  %tobool35 = icmp eq i64 %19, 0, !dbg !10407
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !10409

if.then36:                                        ; preds = %if.end25
  call fastcc void @scc_visit(%struct.constraint_graph* %graph, %struct.scc_info* %si, i32 %call20) #7, !dbg !10410
  br label %if.end37, !dbg !10410

if.end37:                                         ; preds = %if.end25, %if.then36
  %call38 = call fastcc i32 @find(i32 %call20) #7, !dbg !10411
  call void @llvm.dbg.value(metadata i32 %call38, metadata !10367, metadata !DIExpression()), !dbg !10412
  %call39 = call fastcc i32 @find(i32 %n) #7, !dbg !10413
  call void @llvm.dbg.value(metadata i32 %call39, metadata !10369, metadata !DIExpression()), !dbg !10412
  %cmp40 = icmp eq i32 %call39, %n, !dbg !10414
  br i1 %cmp40, label %cond.end43, label %cond.true41, !dbg !10414

cond.true41:                                      ; preds = %if.end37
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1344, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !10414
  br label %cond.end43, !dbg !10414

cond.end43:                                       ; preds = %if.end37, %cond.true41
  %20 = load i32*, i32** %dfs, align 8, !dbg !10415
  %idxprom46 = zext i32 %call38 to i64, !dbg !10417
  %arrayidx47 = getelementptr inbounds i32, i32* %20, i64 %idxprom46, !dbg !10417
  %21 = load i32, i32* %arrayidx47, align 4, !dbg !10417
  %idxprom49 = zext i32 %call39 to i64, !dbg !10418
  %arrayidx50 = getelementptr inbounds i32, i32* %20, i64 %idxprom49, !dbg !10418
  %22 = load i32, i32* %arrayidx50, align 4, !dbg !10418
  %cmp51 = icmp ult i32 %21, %22, !dbg !10419
  br i1 %cmp51, label %if.then52, label %cleanup, !dbg !10420

if.then52:                                        ; preds = %cond.end43
  %arrayidx58 = getelementptr inbounds i32, i32* %20, i64 %idxprom, !dbg !10421
  store i32 %21, i32* %arrayidx58, align 4, !dbg !10422
  br label %cleanup, !dbg !10421

cleanup:                                          ; preds = %if.end, %cond.end43, %if.then52, %for.body
  %cleanup.dest.slot.0 = phi i1 [ true, %for.body ], [ false, %if.end ], [ false, %if.then52 ], [ false, %cond.end43 ]
  br i1 %cleanup.dest.slot.0, label %if.end60.loopexit, label %for.inc

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata i32* %i, metadata !10359, metadata !DIExpression(DW_OP_deref)), !dbg !10379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10360, metadata !DIExpression(DW_OP_deref)), !dbg !10379
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10396
  br label %for.cond, !dbg !10396, !llvm.loop !10423

if.end60.loopexit:                                ; preds = %cleanup, %for.cond
  %.pre = load i32*, i32** %dfs, align 8, !dbg !10425
  %arrayidx63.phi.trans.insert = getelementptr inbounds i32, i32* %.pre, i64 %idxprom, !dbg !10426
  %.pre1 = load i32, i32* %arrayidx63.phi.trans.insert, align 4, !dbg !10427
  br label %if.end60, !dbg !10425

if.end60:                                         ; preds = %if.end60.loopexit, %entry
  %23 = phi i32 [ %.pre1, %if.end60.loopexit ], [ %6, %entry ], !dbg !10427
  %cmp64 = icmp eq i32 %23, %6, !dbg !10428
  %scc_stack = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 5, !dbg !10426
  br i1 %cmp64, label %if.then65, label %if.else172, !dbg !10429

if.then65:                                        ; preds = %if.end60
  %24 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %scc_stack, align 8, !dbg !10430
  %tobool66 = icmp eq %struct.VEC_unsigned_heap* %24, null, !dbg !10430
  br i1 %tobool66, label %cond.end71, label %cond.true67, !dbg !10430

cond.true67:                                      ; preds = %if.then65
  %base69 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %24, i64 0, i32 0, !dbg !10430
  br label %cond.end71, !dbg !10430

cond.end71:                                       ; preds = %if.then65, %cond.true67
  %cond72 = phi %struct.VEC_unsigned_base* [ %base69, %cond.true67 ], [ null, %if.then65 ], !dbg !10430
  %call73 = call fastcc i32 @VEC_unsigned_base_length(%struct.VEC_unsigned_base* %cond72) #7, !dbg !10430
  %cmp74 = icmp eq i32 %call73, 0, !dbg !10431
  br i1 %cmp74, label %if.end170, label %land.lhs.true, !dbg !10432

land.lhs.true:                                    ; preds = %cond.end71
  %25 = load i32*, i32** %dfs, align 8, !dbg !10433
  %26 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %scc_stack, align 8, !dbg !10434
  %tobool77 = icmp eq %struct.VEC_unsigned_heap* %26, null, !dbg !10434
  br i1 %tobool77, label %cond.end82, label %cond.true78, !dbg !10434

cond.true78:                                      ; preds = %land.lhs.true
  %base80 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %26, i64 0, i32 0, !dbg !10434
  br label %cond.end82, !dbg !10434

cond.end82:                                       ; preds = %land.lhs.true, %cond.true78
  %cond83 = phi %struct.VEC_unsigned_base* [ %base80, %cond.true78 ], [ null, %land.lhs.true ], !dbg !10434
  %call84 = call fastcc i32 @VEC_unsigned_base_last(%struct.VEC_unsigned_base* %cond83) #7, !dbg !10434
  %idxprom85 = zext i32 %call84 to i64, !dbg !10435
  %arrayidx86 = getelementptr inbounds i32, i32* %25, i64 %idxprom85, !dbg !10435
  %27 = load i32, i32* %arrayidx86, align 4, !dbg !10435
  %cmp87 = icmp ult i32 %27, %6, !dbg !10436
  br i1 %cmp87, label %if.end170, label %if.then88, !dbg !10437

if.then88:                                        ; preds = %cond.end82
  %call89 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !10438
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call89, metadata !10370, metadata !DIExpression()), !dbg !10439
  %28 = bitcast %struct.bitmap_iterator* %bi90 to i8*, !dbg !10440
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #8, !dbg !10440
  %call91 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call89, i32 %n) #6, !dbg !10441
  br label %while.cond, !dbg !10442

while.cond:                                       ; preds = %cond.end122, %if.then88
  %29 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %scc_stack, align 8, !dbg !10443
  %tobool93 = icmp eq %struct.VEC_unsigned_heap* %29, null, !dbg !10443
  br i1 %tobool93, label %cond.end98, label %cond.true94, !dbg !10443

cond.true94:                                      ; preds = %while.cond
  %base96 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %29, i64 0, i32 0, !dbg !10443
  br label %cond.end98, !dbg !10443

cond.end98:                                       ; preds = %while.cond, %cond.true94
  %cond99 = phi %struct.VEC_unsigned_base* [ %base96, %cond.true94 ], [ null, %while.cond ], !dbg !10443
  %call100 = call fastcc i32 @VEC_unsigned_base_length(%struct.VEC_unsigned_base* %cond99) #7, !dbg !10443
  %cmp101 = icmp eq i32 %call100, 0, !dbg !10444
  br i1 %cmp101, label %while.end, label %land.rhs, !dbg !10445

land.rhs:                                         ; preds = %cond.end98
  %30 = load i32*, i32** %dfs, align 8, !dbg !10446
  %31 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %scc_stack, align 8, !dbg !10447
  %tobool104 = icmp eq %struct.VEC_unsigned_heap* %31, null, !dbg !10447
  br i1 %tobool104, label %cond.end109, label %cond.true105, !dbg !10447

cond.true105:                                     ; preds = %land.rhs
  %base107 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %31, i64 0, i32 0, !dbg !10447
  br label %cond.end109, !dbg !10447

cond.end109:                                      ; preds = %land.rhs, %cond.true105
  %cond110 = phi %struct.VEC_unsigned_base* [ %base107, %cond.true105 ], [ null, %land.rhs ], !dbg !10447
  %call111 = call fastcc i32 @VEC_unsigned_base_last(%struct.VEC_unsigned_base* %cond110) #7, !dbg !10447
  %idxprom112 = zext i32 %call111 to i64, !dbg !10448
  %arrayidx113 = getelementptr inbounds i32, i32* %30, i64 %idxprom112, !dbg !10448
  %32 = load i32, i32* %arrayidx113, align 4, !dbg !10448
  %cmp114 = icmp ult i32 %32, %6, !dbg !10449
  br i1 %cmp114, label %while.end, label %while.body, !dbg !10442

while.body:                                       ; preds = %cond.end109
  %33 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %scc_stack, align 8, !dbg !10450
  %tobool117 = icmp eq %struct.VEC_unsigned_heap* %33, null, !dbg !10450
  br i1 %tobool117, label %cond.end122, label %cond.true118, !dbg !10450

cond.true118:                                     ; preds = %while.body
  %base120 = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %33, i64 0, i32 0, !dbg !10450
  br label %cond.end122, !dbg !10450

cond.end122:                                      ; preds = %while.body, %cond.true118
  %cond123 = phi %struct.VEC_unsigned_base* [ %base120, %cond.true118 ], [ null, %while.body ], !dbg !10450
  %call124 = call fastcc i32 @VEC_unsigned_base_pop(%struct.VEC_unsigned_base* %cond123) #7, !dbg !10450
  call void @llvm.dbg.value(metadata i32 %call124, metadata !10377, metadata !DIExpression()), !dbg !10451
  %call125 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call89, i32 %call124) #6, !dbg !10452
  br label %while.cond, !dbg !10442, !llvm.loop !10453

while.end:                                        ; preds = %cond.end109, %cond.end98
  %call126 = call i32 @bitmap_first_set_bit(%struct.bitmap_head_def* %call89) #6, !dbg !10455
  call void @llvm.dbg.value(metadata i32 %call126, metadata !10375, metadata !DIExpression()), !dbg !10439
  %34 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !10456
  %base129 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %34, i64 0, i32 0, !dbg !10456
  %call133 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base129) #7, !dbg !10456
  %cmp134 = icmp ult i32 %call126, %call133, !dbg !10456
  br i1 %cmp134, label %cond.end137, label %cond.true135, !dbg !10456

cond.true135:                                     ; preds = %while.end
  call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1372, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !10456
  br label %cond.end137, !dbg !10456

cond.end137:                                      ; preds = %while.end, %cond.true135
  call void @llvm.dbg.value(metadata i32* %i, metadata !10359, metadata !DIExpression(DW_OP_deref)), !dbg !10379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi90, metadata !10376, metadata !DIExpression(DW_OP_deref)), !dbg !10439
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi90, %struct.bitmap_head_def* %call89, i32 0, i32* nonnull %i) #7, !dbg !10457
  %indirect_cycles = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 4, !dbg !10459
  br label %for.cond139, !dbg !10457

for.cond139:                                      ; preds = %for.inc168, %cond.end137
  call void @llvm.dbg.value(metadata i32* %i, metadata !10359, metadata !DIExpression(DW_OP_deref)), !dbg !10379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi90, metadata !10376, metadata !DIExpression(DW_OP_deref)), !dbg !10439
  %call140 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi90, i32* nonnull %i) #7, !dbg !10464
  %tobool141 = icmp eq i8 %call140, 0, !dbg !10457
  br i1 %tobool141, label %for.end169, label %for.body142, !dbg !10457

for.body142:                                      ; preds = %for.cond139
  %35 = load i32, i32* %i, align 4, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %35, metadata !10359, metadata !DIExpression()), !dbg !10379
  %36 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !10466
  %base145 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %36, i64 0, i32 0, !dbg !10466
  %call149 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base145) #7, !dbg !10466
  %cmp150 = icmp ult i32 %35, %call149, !dbg !10467
  %37 = load i32, i32* %i, align 4, !dbg !10468
  call void @llvm.dbg.value(metadata i32 %37, metadata !10359, metadata !DIExpression()), !dbg !10379
  %call152 = call fastcc zeroext i8 @unite(i32 %call126, i32 %37) #7, !dbg !10468
  br i1 %cmp150, label %if.then151, label %if.else, !dbg !10469

if.then151:                                       ; preds = %for.body142
  %tobool153 = icmp eq i8 %call152, 0, !dbg !10470
  br i1 %tobool153, label %for.inc168, label %if.then154, !dbg !10473

if.then154:                                       ; preds = %if.then151
  %38 = load i32, i32* %i, align 4, !dbg !10474
  call void @llvm.dbg.value(metadata i32 %38, metadata !10359, metadata !DIExpression()), !dbg !10379
  call fastcc void @unify_nodes(%struct.constraint_graph* %graph, i32 %call126, i32 %38, i8 zeroext 0) #7, !dbg !10475
  br label %for.inc168, !dbg !10475

if.else:                                          ; preds = %for.body142
  %39 = load i32*, i32** %indirect_cycles, align 8, !dbg !10476
  %40 = load i32, i32* %i, align 4, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %40, metadata !10359, metadata !DIExpression()), !dbg !10379
  %41 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !10478
  %base159 = getelementptr inbounds %struct.VEC_varinfo_t_heap, %struct.VEC_varinfo_t_heap* %41, i64 0, i32 0, !dbg !10478
  %call163 = call fastcc i32 @VEC_varinfo_t_base_length(%struct.VEC_varinfo_t_base* %base159) #7, !dbg !10478
  %sub164 = sub i32 %40, %call163, !dbg !10479
  %idxprom165 = zext i32 %sub164 to i64, !dbg !10480
  %arrayidx166 = getelementptr inbounds i32, i32* %39, i64 %idxprom165, !dbg !10480
  store i32 %call126, i32* %arrayidx166, align 4, !dbg !10481
  br label %for.inc168

for.inc168:                                       ; preds = %if.then151, %if.else, %if.then154
  call void @llvm.dbg.value(metadata i32* %i, metadata !10359, metadata !DIExpression(DW_OP_deref)), !dbg !10379
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi90, metadata !10376, metadata !DIExpression(DW_OP_deref)), !dbg !10439
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi90, i32* nonnull %i) #7, !dbg !10464
  br label %for.cond139, !dbg !10464, !llvm.loop !10482

for.end169:                                       ; preds = %for.cond139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #8, !dbg !10484
  br label %if.end170, !dbg !10485

if.end170:                                        ; preds = %cond.end82, %cond.end71, %for.end169
  %deleted171 = getelementptr inbounds %struct.scc_info, %struct.scc_info* %si, i64 0, i32 1, !dbg !10486
  %42 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %deleted171, align 8, !dbg !10486
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %42, i32 %n) #7, !dbg !10487
  br label %if.end175, !dbg !10488

if.else172:                                       ; preds = %if.end60
  %call174 = call fastcc i32* @VEC_unsigned_heap_safe_push(%struct.VEC_unsigned_heap** nonnull %scc_stack, i32 %n) #7, !dbg !10489
  br label %if.end175

if.end175:                                        ; preds = %if.else172, %if.end170
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !10490
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !10490
  ret void, !dbg !10490
}

declare dso_local i32 @bitmap_first_set_bit(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @bitmap_clear_range(%struct.bitmap_head_def*, i32, i32) local_unnamed_addr #2

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.topo_info* @init_topo_info() unnamed_addr #5 !dbg !10491 {
entry:
  %0 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !10497
  %size1 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %0, i64 0, i32 0, !dbg !10498
  %1 = load i32, i32* %size1, align 8, !dbg !10498
  %call = tail call i8* @xmalloc(i64 16) #6, !dbg !10499
  %2 = bitcast i8* %call to %struct.topo_info*, !dbg !10499
  call void @llvm.dbg.value(metadata %struct.topo_info* %2, metadata !10496, metadata !DIExpression()), !dbg !10500
  %call3 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %1) #6, !dbg !10501
  %visited = bitcast i8* %call to %struct.simple_bitmap_def**, !dbg !10502
  store %struct.simple_bitmap_def* %call3, %struct.simple_bitmap_def** %visited, align 8, !dbg !10503
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call3) #6, !dbg !10504
  %call5 = tail call fastcc %struct.VEC_unsigned_heap* @VEC_unsigned_heap_alloc(i32 1) #7, !dbg !10505
  %topo_order = getelementptr inbounds i8, i8* %call, i64 8, !dbg !10506
  %3 = bitcast i8* %topo_order to %struct.VEC_unsigned_heap**, !dbg !10506
  store %struct.VEC_unsigned_heap* %call5, %struct.VEC_unsigned_heap** %3, align 8, !dbg !10507
  ret %struct.topo_info* %2, !dbg !10508
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_topo_order(%struct.constraint_graph* %graph, %struct.topo_info* %ti) unnamed_addr #5 !dbg !10509 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !10513, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata %struct.topo_info* %ti, metadata !10514, metadata !DIExpression()), !dbg !10517
  %size1 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 0, !dbg !10518
  %0 = load i32, i32* %size1, align 8, !dbg !10518
  call void @llvm.dbg.value(metadata i32 %0, metadata !10516, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i32 0, metadata !10515, metadata !DIExpression()), !dbg !10517
  %visited = getelementptr inbounds %struct.topo_info, %struct.topo_info* %ti, i64 0, i32 0, !dbg !10519
  br label %for.cond, !dbg !10523

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !10524
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10515, metadata !DIExpression()), !dbg !10517
  %cmp = icmp eq i32 %i.0, %0, !dbg !10525
  br i1 %cmp, label %for.end, label %for.body, !dbg !10526

for.body:                                         ; preds = %for.cond
  %1 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !10527
  %div = lshr i32 %i.0, 6, !dbg !10527
  %idxprom = zext i32 %div to i64, !dbg !10527
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %1, i64 0, i32 3, i64 %idxprom, !dbg !10527
  %2 = load i64, i64* %arrayidx, align 8, !dbg !10527
  %rem = and i32 %i.0, 63, !dbg !10527
  %sh_prom = zext i32 %rem to i64, !dbg !10527
  %3 = shl i64 1, %sh_prom, !dbg !10527
  %4 = and i64 %2, %3, !dbg !10527
  %tobool = icmp eq i64 %4, 0, !dbg !10527
  br i1 %tobool, label %land.lhs.true, label %for.inc, !dbg !10528

land.lhs.true:                                    ; preds = %for.body
  %call = tail call fastcc i32 @find(i32 %i.0) #7, !dbg !10529
  %cmp2 = icmp eq i32 %call, %i.0, !dbg !10530
  br i1 %cmp2, label %if.then, label %for.inc, !dbg !10531

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @topo_visit(%struct.constraint_graph* %graph, %struct.topo_info* %ti, i32 %i.0) #7, !dbg !10532
  br label %for.inc, !dbg !10532

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then
  %inc = add i32 %i.0, 1, !dbg !10533
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10515, metadata !DIExpression()), !dbg !10517
  br label %for.cond, !dbg !10534, !llvm.loop !10535

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10537
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @eliminate_indirect_cycles(i32 %node) unnamed_addr #5 !dbg !10538 {
entry:
  %i = alloca i32, align 4
  %queue = alloca %struct.VEC_unsigned_heap*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %node, metadata !10542, metadata !DIExpression()), !dbg !10550
  %0 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !10551
  %indirect_cycles = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %0, i64 0, i32 4, !dbg !10552
  %1 = load i32*, i32** %indirect_cycles, align 8, !dbg !10552
  %idxprom = zext i32 %node to i64, !dbg !10551
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !10551
  %2 = load i32, i32* %arrayidx, align 4, !dbg !10551
  %cmp = icmp eq i32 %2, -1, !dbg !10553
  br i1 %cmp, label %return, label %land.lhs.true, !dbg !10554

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc %struct.variable_info* @get_varinfo(i32 %node) #7, !dbg !10555
  %solution = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 8, !dbg !10555
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution, align 8, !dbg !10555
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %3, i64 0, i32 0, !dbg !10555
  %4 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !10555
  %tobool = icmp eq %struct.bitmap_element_def* %4, null, !dbg !10555
  br i1 %tobool, label %return, label %if.then, !dbg !10556

if.then:                                          ; preds = %land.lhs.true
  %5 = bitcast i32* %i to i8*, !dbg !10557
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8, !dbg !10557
  %6 = bitcast %struct.VEC_unsigned_heap** %queue to i8*, !dbg !10558
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8, !dbg !10558
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap* null, metadata !10546, metadata !DIExpression()), !dbg !10559
  store %struct.VEC_unsigned_heap* null, %struct.VEC_unsigned_heap** %queue, align 8, !dbg !10560
  %7 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !10561
  %indirect_cycles1 = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %7, i64 0, i32 4, !dbg !10562
  %8 = load i32*, i32** %indirect_cycles1, align 8, !dbg !10562
  %arrayidx3 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !10561
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !10561
  %call4 = tail call fastcc i32 @find(i32 %9) #7, !dbg !10563
  call void @llvm.dbg.value(metadata i32 %call4, metadata !10548, metadata !DIExpression()), !dbg !10559
  %10 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !10564
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8, !dbg !10564
  %call5 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %node) #7, !dbg !10565
  %solution6 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call5, i64 0, i32 8, !dbg !10565
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution6, align 8, !dbg !10565
  call void @llvm.dbg.value(metadata i32* %i, metadata !10543, metadata !DIExpression(DW_OP_deref)), !dbg !10559
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10549, metadata !DIExpression(DW_OP_deref)), !dbg !10559
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %11, i32 0, i32* nonnull %i) #7, !dbg !10565
  br label %for.cond, !dbg !10565

for.cond:                                         ; preds = %for.inc, %if.then
  call void @llvm.dbg.value(metadata i32* %i, metadata !10543, metadata !DIExpression(DW_OP_deref)), !dbg !10559
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10549, metadata !DIExpression(DW_OP_deref)), !dbg !10559
  %call7 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10567
  %tobool8 = icmp eq i8 %call7, 0, !dbg !10565
  br i1 %tobool8, label %for.cond19.preheader, label %for.body, !dbg !10565

for.cond19.preheader:                             ; preds = %for.cond
  br label %for.cond19, !dbg !10569

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !10571
  call void @llvm.dbg.value(metadata i32 %12, metadata !10543, metadata !DIExpression()), !dbg !10559
  %call9 = call fastcc i32 @find(i32 %12) #7, !dbg !10574
  %13 = load i32, i32* %i, align 4, !dbg !10575
  call void @llvm.dbg.value(metadata i32 %13, metadata !10543, metadata !DIExpression()), !dbg !10559
  %cmp10 = icmp eq i32 %call9, %13, !dbg !10576
  call void @llvm.dbg.value(metadata i32 %13, metadata !10543, metadata !DIExpression()), !dbg !10559
  %cmp12 = icmp ne i32 %13, %call4, !dbg !10577
  %or.cond = and i1 %cmp10, %cmp12, !dbg !10578
  br i1 %or.cond, label %if.then13, label %for.inc, !dbg !10578

if.then13:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %13, metadata !10543, metadata !DIExpression()), !dbg !10559
  %call14 = call fastcc zeroext i8 @unite(i32 %call4, i32 %call9) #7, !dbg !10579
  %tobool15 = icmp eq i8 %call14, 0, !dbg !10579
  br i1 %tobool15, label %for.inc, label %if.then16, !dbg !10582

if.then16:                                        ; preds = %if.then13
  %14 = load i32, i32* %i, align 4, !dbg !10583
  call void @llvm.dbg.value(metadata i32 %14, metadata !10543, metadata !DIExpression()), !dbg !10559
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap** %queue, metadata !10546, metadata !DIExpression(DW_OP_deref)), !dbg !10559
  %call17 = call fastcc i32* @VEC_unsigned_heap_safe_push(%struct.VEC_unsigned_heap** nonnull %queue, i32 %14) #7, !dbg !10583
  br label %for.inc, !dbg !10583

for.inc:                                          ; preds = %if.then13, %for.body, %if.then16
  call void @llvm.dbg.value(metadata i32* %i, metadata !10543, metadata !DIExpression(DW_OP_deref)), !dbg !10559
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10549, metadata !DIExpression(DW_OP_deref)), !dbg !10559
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !10567
  br label %for.cond, !dbg !10567, !llvm.loop !10584

for.cond19:                                       ; preds = %for.cond19.preheader, %for.body23
  %queuepos.0 = phi i32 [ %inc, %for.body23 ], [ 0, %for.cond19.preheader ], !dbg !10586
  call void @llvm.dbg.value(metadata i32 %queuepos.0, metadata !10547, metadata !DIExpression()), !dbg !10559
  %15 = load %struct.VEC_unsigned_heap*, %struct.VEC_unsigned_heap** %queue, align 8, !dbg !10587
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap* %15, metadata !10546, metadata !DIExpression()), !dbg !10559
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap* %15, metadata !10546, metadata !DIExpression()), !dbg !10559
  %base = getelementptr inbounds %struct.VEC_unsigned_heap, %struct.VEC_unsigned_heap* %15, i64 0, i32 0, !dbg !10587
  call void @llvm.dbg.value(metadata i32* %i, metadata !10543, metadata !DIExpression(DW_OP_deref)), !dbg !10559
  %call21 = call fastcc i32 @VEC_unsigned_base_iterate(%struct.VEC_unsigned_base* %base, i32 %queuepos.0, i32* nonnull %i) #7, !dbg !10587
  %tobool22 = icmp eq i32 %call21, 0, !dbg !10569
  br i1 %tobool22, label %for.end25, label %for.body23, !dbg !10569

for.body23:                                       ; preds = %for.cond19
  %16 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !10589
  %17 = load i32, i32* %i, align 4, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %17, metadata !10543, metadata !DIExpression()), !dbg !10559
  call fastcc void @unify_nodes(%struct.constraint_graph* %16, i32 %call4, i32 %17, i8 zeroext 1) #7, !dbg !10592
  %inc = add nuw nsw i32 %queuepos.0, 1, !dbg !10593
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10547, metadata !DIExpression()), !dbg !10559
  br label %for.cond19, !dbg !10594, !llvm.loop !10595

for.end25:                                        ; preds = %for.cond19
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_heap** %queue, metadata !10546, metadata !DIExpression(DW_OP_deref)), !dbg !10559
  call fastcc void @VEC_unsigned_heap_free(%struct.VEC_unsigned_heap** nonnull %queue) #7, !dbg !10597
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8, !dbg !10598
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8, !dbg !10598
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8, !dbg !10598
  br label %return

return:                                           ; preds = %land.lhs.true, %entry, %for.end25
  %retval.0 = phi i8 [ 1, %for.end25 ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !10550
  ret i8 %retval.0, !dbg !10599
}

declare dso_local zeroext i8 @bitmap_and_compl(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @do_complex_constraint(%struct.constraint_graph* %graph, %struct.constraint* %c, %struct.bitmap_head_def* %delta) unnamed_addr #5 !dbg !10600 {
entry:
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !10604, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct.constraint* %c, metadata !10605, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %delta, metadata !10606, metadata !DIExpression()), !dbg !10613
  %type = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 0, !dbg !10614
  %0 = load i32, i32* %type, align 8, !dbg !10614
  %cmp = icmp eq i32 %0, 1, !dbg !10615
  %type1 = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 0, !dbg !10616
  %1 = load i32, i32* %type1, align 8, !dbg !10616
  br i1 %cmp, label %if.then, label %if.else4, !dbg !10617

if.then:                                          ; preds = %entry
  %cmp2 = icmp eq i32 %1, 2, !dbg !10618
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !10621

if.then3:                                         ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1729, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !10622
  br label %if.end46, !dbg !10624

if.else:                                          ; preds = %if.then
  tail call fastcc void @do_ds_constraint(%struct.constraint* %c, %struct.bitmap_head_def* %delta) #7, !dbg !10625
  br label %if.end46

if.else4:                                         ; preds = %entry
  %cmp7 = icmp eq i32 %1, 1, !dbg !10627
  br i1 %cmp7, label %if.then8, label %if.else12, !dbg !10628

if.then8:                                         ; preds = %if.else4
  %var = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 1, !dbg !10629
  %2 = load i32, i32* %var, align 4, !dbg !10629
  %call = tail call fastcc %struct.variable_info* @get_varinfo(i32 %2) #7, !dbg !10632
  %is_special_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 1, !dbg !10633
  %bf.load = load i8, i8* %is_special_var, align 4, !dbg !10633
  %bf.clear = and i8 %bf.load, 2, !dbg !10633
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !10634
  br i1 %tobool, label %if.then10, label %if.end46, !dbg !10635

if.then10:                                        ; preds = %if.then8
  tail call fastcc void @do_sd_constraint(%struct.constraint_graph* %graph, %struct.constraint* %c, %struct.bitmap_head_def* %delta) #7, !dbg !10636
  br label %if.end46, !dbg !10636

if.else12:                                        ; preds = %if.else4
  call void @llvm.dbg.value(metadata i8 0, metadata !10612, metadata !DIExpression()), !dbg !10637
  %cmp15 = icmp eq i32 %1, 0, !dbg !10638
  br i1 %cmp15, label %land.lhs.true, label %cond.true, !dbg !10638

land.lhs.true:                                    ; preds = %if.else12
  %cmp18 = icmp eq i32 %0, 0, !dbg !10638
  br i1 %cmp18, label %cond.end, label %cond.true, !dbg !10638

cond.true:                                        ; preds = %land.lhs.true, %if.else12
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1749, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !10638
  br label %cond.end, !dbg !10638

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %var20 = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 1, !dbg !10639
  %3 = load i32, i32* %var20, align 4, !dbg !10639
  %call21 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %3) #7, !dbg !10640
  %solution22 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call21, i64 0, i32 8, !dbg !10641
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution22, align 8, !dbg !10641
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %4, metadata !10611, metadata !DIExpression()), !dbg !10637
  %var24 = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 1, !dbg !10642
  %5 = load i32, i32* %var24, align 4, !dbg !10642
  %call25 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %5) #7, !dbg !10643
  %solution26 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call25, i64 0, i32 8, !dbg !10644
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution26, align 8, !dbg !10644
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %6, metadata !10607, metadata !DIExpression()), !dbg !10637
  %offset = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 2, !dbg !10645
  %7 = load i64, i64* %offset, align 8, !dbg !10645
  %call28 = tail call fastcc zeroext i8 @set_union_with_increment(%struct.bitmap_head_def* %6, %struct.bitmap_head_def* %4, i64 %7) #7, !dbg !10646
  call void @llvm.dbg.value(metadata i8 %call28, metadata !10612, metadata !DIExpression()), !dbg !10637
  %tobool29 = icmp eq i8 %call28, 0, !dbg !10647
  br i1 %tobool29, label %if.end46, label %if.then30, !dbg !10649

if.then30:                                        ; preds = %cond.end
  %8 = load i32, i32* %var24, align 4, !dbg !10650
  %call33 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %8) #7, !dbg !10652
  %solution34 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call33, i64 0, i32 8, !dbg !10653
  store %struct.bitmap_head_def* %6, %struct.bitmap_head_def** %solution34, align 8, !dbg !10654
  %9 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !10655
  %10 = load i32, i32* %var24, align 4, !dbg !10655
  %div = lshr i32 %10, 6, !dbg !10655
  %idxprom = zext i32 %div to i64, !dbg !10655
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !10655
  %11 = load i64, i64* %arrayidx, align 8, !dbg !10655
  %rem = and i32 %10, 63, !dbg !10655
  %sh_prom = zext i32 %rem to i64, !dbg !10655
  %12 = shl i64 1, %sh_prom, !dbg !10655
  %13 = and i64 %11, %12, !dbg !10655
  %tobool39 = icmp eq i64 %13, 0, !dbg !10655
  br i1 %tobool39, label %if.then40, label %if.end46, !dbg !10657

if.then40:                                        ; preds = %if.then30
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %9, i32 %10) #7, !dbg !10658
  %14 = load i32, i32* @changed_count, align 4, !dbg !10660
  %inc = add i32 %14, 1, !dbg !10660
  store i32 %inc, i32* @changed_count, align 4, !dbg !10660
  br label %if.end46, !dbg !10661

if.end46:                                         ; preds = %if.then8, %if.then30, %cond.end, %if.then10, %if.then40, %if.then3, %if.else
  ret void, !dbg !10662
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @set_union_with_increment(%struct.bitmap_head_def* %to, %struct.bitmap_head_def* %from, i64 %inc) unnamed_addr #5 !dbg !10663 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %to, metadata !10667, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %from, metadata !10668, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata i64 %inc, metadata !10669, metadata !DIExpression()), !dbg !10674
  %cmp = icmp eq i64 %inc, 0, !dbg !10675
  br i1 %cmp, label %if.then, label %if.else, !dbg !10676

if.then:                                          ; preds = %entry
  %call = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %to, %struct.bitmap_head_def* %from) #6, !dbg !10677
  br label %return, !dbg !10678

if.else:                                          ; preds = %entry
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @iteration_obstack) #6, !dbg !10679
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !10670, metadata !DIExpression()), !dbg !10680
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call1, %struct.bitmap_head_def* %from) #6, !dbg !10681
  tail call fastcc void @solution_set_add(%struct.bitmap_head_def* %call1, i64 %inc) #7, !dbg !10682
  %call2 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %to, %struct.bitmap_head_def* %call1) #6, !dbg !10683
  call void @llvm.dbg.value(metadata i8 %call2, metadata !10673, metadata !DIExpression()), !dbg !10680
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call1) #6, !dbg !10684
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !10670, metadata !DIExpression()), !dbg !10680
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i8 [ %call, %if.then ], [ %call2, %if.else ], !dbg !10685
  ret i8 %retval.0, !dbg !10686
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_topo_info(%struct.topo_info* %ti) unnamed_addr #5 !dbg !10687 {
entry:
  call void @llvm.dbg.value(metadata %struct.topo_info* %ti, metadata !10691, metadata !DIExpression()), !dbg !10692
  %visited = getelementptr inbounds %struct.topo_info, %struct.topo_info* %ti, i64 0, i32 0, !dbg !10693
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !10693
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %0, i64 0, i32 0, !dbg !10693
  %1 = load i8*, i8** %popcount, align 8, !dbg !10693
  tail call void @free(i8* %1) #6, !dbg !10693
  %2 = bitcast %struct.topo_info* %ti to i8**, !dbg !10693
  %3 = load i8*, i8** %2, align 8, !dbg !10693
  tail call void @free(i8* %3) #6, !dbg !10693
  %topo_order = getelementptr inbounds %struct.topo_info, %struct.topo_info* %ti, i64 0, i32 1, !dbg !10694
  tail call fastcc void @VEC_unsigned_heap_free(%struct.VEC_unsigned_heap** nonnull %topo_order) #7, !dbg !10694
  %4 = bitcast %struct.topo_info* %ti to i8*, !dbg !10695
  tail call void @free(i8* %4) #6, !dbg !10696
  ret void, !dbg !10697
}

; Function Attrs: nounwind uwtable
define internal fastcc void @topo_visit(%struct.constraint_graph* %graph, %struct.topo_info* %ti, i32 %n) unnamed_addr #5 !dbg !10698 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %j = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !10702, metadata !DIExpression()), !dbg !10707
  call void @llvm.dbg.value(metadata %struct.topo_info* %ti, metadata !10703, metadata !DIExpression()), !dbg !10707
  call void @llvm.dbg.value(metadata i32 %n, metadata !10704, metadata !DIExpression()), !dbg !10707
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !10708
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !10708
  %1 = bitcast i32* %j to i8*, !dbg !10709
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !10709
  %visited = getelementptr inbounds %struct.topo_info, %struct.topo_info* %ti, i64 0, i32 0, !dbg !10710
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !10710
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %2, i32 %n) #7, !dbg !10711
  %succs = getelementptr inbounds %struct.constraint_graph, %struct.constraint_graph* %graph, i64 0, i32 1, !dbg !10712
  %3 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %succs, align 8, !dbg !10712
  %idxprom = zext i32 %n to i64, !dbg !10714
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %3, i64 %idxprom, !dbg !10714
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !10714
  %tobool = icmp eq %struct.bitmap_head_def* %4, null, !dbg !10714
  br i1 %tobool, label %if.end10, label %if.then, !dbg !10715

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10705, metadata !DIExpression(DW_OP_deref)), !dbg !10707
  call void @llvm.dbg.value(metadata i32* %j, metadata !10706, metadata !DIExpression(DW_OP_deref)), !dbg !10707
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %4, i32 0, i32* nonnull %j) #7, !dbg !10716
  br label %for.cond, !dbg !10716

for.cond:                                         ; preds = %for.inc, %if.then
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10705, metadata !DIExpression(DW_OP_deref)), !dbg !10707
  call void @llvm.dbg.value(metadata i32* %j, metadata !10706, metadata !DIExpression(DW_OP_deref)), !dbg !10707
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !10718
  %tobool4 = icmp eq i8 %call, 0, !dbg !10716
  br i1 %tobool4, label %if.end10.loopexit, label %for.body, !dbg !10716

for.body:                                         ; preds = %for.cond
  %5 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !10720
  %6 = load i32, i32* %j, align 4, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %6, metadata !10706, metadata !DIExpression()), !dbg !10707
  %div = lshr i32 %6, 6, !dbg !10720
  %idxprom6 = zext i32 %div to i64, !dbg !10720
  %arrayidx7 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %5, i64 0, i32 3, i64 %idxprom6, !dbg !10720
  %7 = load i64, i64* %arrayidx7, align 8, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %6, metadata !10706, metadata !DIExpression()), !dbg !10707
  %rem = and i32 %6, 63, !dbg !10720
  %sh_prom = zext i32 %rem to i64, !dbg !10720
  %8 = shl i64 1, %sh_prom, !dbg !10720
  %9 = and i64 %7, %8, !dbg !10720
  %tobool8 = icmp eq i64 %9, 0, !dbg !10720
  br i1 %tobool8, label %if.then9, label %for.inc, !dbg !10723

if.then9:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %6, metadata !10706, metadata !DIExpression()), !dbg !10707
  call fastcc void @topo_visit(%struct.constraint_graph* %graph, %struct.topo_info* %ti, i32 %6) #7, !dbg !10724
  br label %for.inc, !dbg !10724

for.inc:                                          ; preds = %for.body, %if.then9
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10705, metadata !DIExpression(DW_OP_deref)), !dbg !10707
  call void @llvm.dbg.value(metadata i32* %j, metadata !10706, metadata !DIExpression(DW_OP_deref)), !dbg !10707
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !10718
  br label %for.cond, !dbg !10718, !llvm.loop !10725

if.end10.loopexit:                                ; preds = %for.cond
  br label %if.end10, !dbg !10727

if.end10:                                         ; preds = %if.end10.loopexit, %entry
  %topo_order = getelementptr inbounds %struct.topo_info, %struct.topo_info* %ti, i64 0, i32 1, !dbg !10727
  %call11 = call fastcc i32* @VEC_unsigned_heap_safe_push(%struct.VEC_unsigned_heap** nonnull %topo_order, i32 %n) #7, !dbg !10727
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !10728
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !10728
  ret void, !dbg !10728
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_unsigned_base_iterate(%struct.VEC_unsigned_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !10729 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_unsigned_base* %vec_, metadata !10733, metadata !DIExpression()), !dbg !10736
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10734, metadata !DIExpression()), !dbg !10736
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !10735, metadata !DIExpression()), !dbg !10736
  %tobool = icmp eq %struct.VEC_unsigned_base* %vec_, null, !dbg !10737
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !10737

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 0, !dbg !10737
  %0 = load i32, i32* %num, align 4, !dbg !10737
  %cmp = icmp ugt i32 %0, %ix_, !dbg !10737
  br i1 %cmp, label %if.then, label %if.else, !dbg !10739

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !10740
  %arrayidx = getelementptr inbounds %struct.VEC_unsigned_base, %struct.VEC_unsigned_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10740
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10740
  br label %return, !dbg !10740

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !10742

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !10744
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !10744
  store i32 %storemerge, i32* %ptr, align 4, !dbg !10744
  ret i32 %retval.0, !dbg !10739
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_ds_constraint(%struct.constraint* %c, %struct.bitmap_head_def* %delta) unnamed_addr #5 !dbg !10745 {
entry:
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.constraint* %c, metadata !10749, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %delta, metadata !10750, metadata !DIExpression()), !dbg !10765
  %var = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 1, !dbg !10766
  %0 = load i32, i32* %var, align 4, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %0, metadata !10751, metadata !DIExpression()), !dbg !10765
  %call = tail call fastcc %struct.variable_info* @get_varinfo(i32 %0) #7, !dbg !10767
  %solution = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 8, !dbg !10768
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution, align 8, !dbg !10768
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %1, metadata !10752, metadata !DIExpression()), !dbg !10765
  %2 = bitcast i32* %j to i8*, !dbg !10769
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !10769
  %3 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !10770
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8, !dbg !10770
  %offset = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 2, !dbg !10771
  %4 = load i64, i64* %offset, align 8, !dbg !10771
  call void @llvm.dbg.value(metadata i64 %4, metadata !10755, metadata !DIExpression()), !dbg !10765
  %offset3 = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 2, !dbg !10772
  %5 = load i64, i64* %offset3, align 8, !dbg !10772
  %cmp = icmp eq i64 %5, 0, !dbg !10772
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10772

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1624, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !10772
  br label %cond.end, !dbg !10772

cond.end:                                         ; preds = %entry, %cond.true
  %call4 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %1, i32 1) #6, !dbg !10773
  %tobool = icmp eq i32 %call4, 0, !dbg !10773
  br i1 %tobool, label %if.end, label %if.then, !dbg !10775

if.then:                                          ; preds = %cond.end
  %call5 = tail call fastcc i32 @find(i32 1) #7, !dbg !10776
  %call6 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %call5) #7, !dbg !10777
  %solution7 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call6, i64 0, i32 8, !dbg !10778
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution7, align 8, !dbg !10778
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %6, metadata !10752, metadata !DIExpression()), !dbg !10765
  br label %if.end, !dbg !10779

if.end:                                           ; preds = %cond.end, %if.then
  %sol.0 = phi %struct.bitmap_head_def* [ %6, %if.then ], [ %1, %cond.end ], !dbg !10765
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %sol.0, metadata !10752, metadata !DIExpression()), !dbg !10765
  %call8 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %delta, i32 1) #6, !dbg !10780
  %tobool9 = icmp eq i32 %call8, 0, !dbg !10780
  br i1 %tobool9, label %if.end25, label %if.then10, !dbg !10781

if.then10:                                        ; preds = %if.end
  %call11 = tail call fastcc i32 @find(i32 6) #7, !dbg !10782
  call void @llvm.dbg.value(metadata i32 %call11, metadata !10756, metadata !DIExpression()), !dbg !10783
  %7 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !10784
  %call12 = tail call fastcc zeroext i8 @add_graph_edge(%struct.constraint_graph* %7, i32 %call11, i32 %0) #7, !dbg !10786
  %tobool13 = icmp eq i8 %call12, 0, !dbg !10786
  br i1 %tobool13, label %cleanup121, label %if.then14, !dbg !10787

if.then14:                                        ; preds = %if.then10
  %call15 = tail call fastcc %struct.variable_info* @get_varinfo(i32 %call11) #7, !dbg !10788
  %solution16 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call15, i64 0, i32 8, !dbg !10791
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution16, align 8, !dbg !10791
  %call17 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %8, %struct.bitmap_head_def* %sol.0) #6, !dbg !10792
  %tobool18 = icmp eq i8 %call17, 0, !dbg !10792
  br i1 %tobool18, label %cleanup121, label %if.then19, !dbg !10793

if.then19:                                        ; preds = %if.then14
  %9 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !10794
  %div = lshr i32 %call11, 6, !dbg !10794
  %idxprom = zext i32 %div to i64, !dbg !10794
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !10794
  %10 = load i64, i64* %arrayidx, align 8, !dbg !10794
  %rem = and i32 %call11, 63, !dbg !10794
  %sh_prom = zext i32 %rem to i64, !dbg !10794
  %11 = shl i64 1, %sh_prom, !dbg !10794
  %12 = and i64 %10, %11, !dbg !10794
  %tobool20 = icmp eq i64 %12, 0, !dbg !10794
  br i1 %tobool20, label %if.then21, label %cleanup121, !dbg !10797

if.then21:                                        ; preds = %if.then19
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %9, i32 %call11) #7, !dbg !10798
  %13 = load i32, i32* @changed_count, align 4, !dbg !10800
  %inc = add i32 %13, 1, !dbg !10800
  store i32 %inc, i32* @changed_count, align 4, !dbg !10800
  br label %cleanup121, !dbg !10801

if.end25:                                         ; preds = %if.end
  %cmp26 = icmp eq i64 %4, -9223372036854775808, !dbg !10802
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !10804

if.then27:                                        ; preds = %if.end25
  tail call fastcc void @solution_set_expand(%struct.bitmap_head_def* %delta, %struct.bitmap_head_def* %delta) #7, !dbg !10805
  call void @llvm.dbg.value(metadata i64 0, metadata !10755, metadata !DIExpression()), !dbg !10765
  br label %if.end28, !dbg !10807

if.end28:                                         ; preds = %if.then27, %if.end25
  %loff.0 = phi i64 [ 0, %if.then27 ], [ %4, %if.end25 ], !dbg !10765
  call void @llvm.dbg.value(metadata i64 %loff.0, metadata !10755, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32* %j, metadata !10753, metadata !DIExpression(DW_OP_deref)), !dbg !10765
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10754, metadata !DIExpression(DW_OP_deref)), !dbg !10765
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %delta, i32 0, i32* nonnull %j) #7, !dbg !10808
  %cmp71 = icmp eq i64 %loff.0, 0, !dbg !10809
  br label %for.cond, !dbg !10808

for.cond:                                         ; preds = %cleanup, %if.end28
  call void @llvm.dbg.value(metadata i32* %j, metadata !10753, metadata !DIExpression(DW_OP_deref)), !dbg !10765
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10754, metadata !DIExpression(DW_OP_deref)), !dbg !10765
  %call29 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !10812
  %tobool30 = icmp eq i8 %call29, 0, !dbg !10808
  br i1 %tobool30, label %cleanup121.loopexit, label %for.body, !dbg !10808

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %j, align 4, !dbg !10813
  call void @llvm.dbg.value(metadata i32 %14, metadata !10753, metadata !DIExpression()), !dbg !10765
  %call31 = call fastcc %struct.variable_info* @get_varinfo(i32 %14) #7, !dbg !10814
  call void @llvm.dbg.value(metadata %struct.variable_info* %call31, metadata !10759, metadata !DIExpression()), !dbg !10815
  %offset33 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call31, i64 0, i32 3, !dbg !10816
  %15 = load i64, i64* %offset33, align 8, !dbg !10816
  %add = add i64 %15, %loff.0, !dbg !10817
  call void @llvm.dbg.value(metadata i64 %add, metadata !10764, metadata !DIExpression()), !dbg !10815
  %is_global_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call31, i64 0, i32 1, !dbg !10818
  %bf.load = load i8, i8* %is_global_var, align 4, !dbg !10818
  %tobool34 = icmp slt i8 %bf.load, 0, !dbg !10820
  br i1 %tobool34, label %if.then35, label %if.end57, !dbg !10821

if.then35:                                        ; preds = %for.body
  %call36 = call fastcc i32 @find(i32 3) #7, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %call36, metadata !10763, metadata !DIExpression()), !dbg !10815
  %16 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !10824
  %call37 = call fastcc zeroext i8 @add_graph_edge(%struct.constraint_graph* %16, i32 %call36, i32 %0) #7, !dbg !10826
  %tobool38 = icmp eq i8 %call37, 0, !dbg !10826
  br i1 %tobool38, label %if.end57, label %land.lhs.true, !dbg !10827

land.lhs.true:                                    ; preds = %if.then35
  %call39 = call fastcc %struct.variable_info* @get_varinfo(i32 %call36) #7, !dbg !10828
  %solution40 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call39, i64 0, i32 8, !dbg !10829
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution40, align 8, !dbg !10829
  %call41 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %17, %struct.bitmap_head_def* %sol.0) #6, !dbg !10830
  %tobool43 = icmp eq i8 %call41, 0, !dbg !10830
  br i1 %tobool43, label %if.end57, label %land.lhs.true44, !dbg !10831

land.lhs.true44:                                  ; preds = %land.lhs.true
  %18 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !10832
  %div46 = lshr i32 %call36, 6, !dbg !10832
  %idxprom47 = zext i32 %div46 to i64, !dbg !10832
  %arrayidx48 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %18, i64 0, i32 3, i64 %idxprom47, !dbg !10832
  %19 = load i64, i64* %arrayidx48, align 8, !dbg !10832
  %rem49 = and i32 %call36, 63, !dbg !10832
  %sh_prom50 = zext i32 %rem49 to i64, !dbg !10832
  %20 = shl i64 1, %sh_prom50, !dbg !10832
  %21 = and i64 %19, %20, !dbg !10832
  %tobool53 = icmp eq i64 %21, 0, !dbg !10832
  br i1 %tobool53, label %if.then54, label %if.end57, !dbg !10833

if.then54:                                        ; preds = %land.lhs.true44
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %18, i32 %call36) #7, !dbg !10834
  %22 = load i32, i32* @changed_count, align 4, !dbg !10836
  %inc55 = add i32 %22, 1, !dbg !10836
  store i32 %inc55, i32* @changed_count, align 4, !dbg !10836
  br label %if.end57, !dbg !10837

if.end57:                                         ; preds = %land.lhs.true44, %land.lhs.true, %if.then35, %if.then54, %for.body
  %bf.load58 = load i8, i8* %is_global_var, align 4, !dbg !10838
  %bf.clear = and i8 %bf.load58, 2, !dbg !10838
  %tobool61 = icmp eq i8 %bf.clear, 0, !dbg !10840
  br i1 %tobool61, label %if.end63, label %cleanup, !dbg !10841

if.end63:                                         ; preds = %if.end57
  %bf.clear66 = and i8 %bf.load58, 8, !dbg !10842
  %tobool68 = icmp eq i8 %bf.clear66, 0, !dbg !10843
  br i1 %tobool68, label %if.else, label %if.then69, !dbg !10844

if.then69:                                        ; preds = %if.end63
  %23 = load i64, i64* %offset33, align 8, !dbg !10845
  call void @llvm.dbg.value(metadata i64 %23, metadata !10764, metadata !DIExpression()), !dbg !10815
  br label %if.end76, !dbg !10846

if.else:                                          ; preds = %if.end63
  br i1 %cmp71, label %if.end76, label %if.then73, !dbg !10847

if.then73:                                        ; preds = %if.else
  %call74 = call fastcc %struct.variable_info* @first_vi_for_offset(%struct.variable_info* %call31, i64 %add) #7, !dbg !10848
  call void @llvm.dbg.value(metadata %struct.variable_info* %call74, metadata !10759, metadata !DIExpression()), !dbg !10815
  br label %if.end76, !dbg !10849

if.end76:                                         ; preds = %if.else, %if.then73, %if.then69
  %v.1 = phi %struct.variable_info* [ %call31, %if.then69 ], [ %call74, %if.then73 ], [ %call31, %if.else ], !dbg !10815
  %fieldoffset.0 = phi i64 [ %23, %if.then69 ], [ %add, %if.then73 ], [ %add, %if.else ], !dbg !10815
  call void @llvm.dbg.value(metadata i64 %fieldoffset.0, metadata !10764, metadata !DIExpression()), !dbg !10815
  call void @llvm.dbg.value(metadata %struct.variable_info* %v.1, metadata !10759, metadata !DIExpression()), !dbg !10815
  %tobool77 = icmp eq %struct.variable_info* %v.1, null, !dbg !10850
  br i1 %tobool77, label %cleanup, label %do.body.preheader, !dbg !10852

do.body.preheader:                                ; preds = %if.end76
  br label %do.body, !dbg !10853

do.body:                                          ; preds = %do.body.preheader, %if.end116
  %v.2 = phi %struct.variable_info* [ %33, %if.end116 ], [ %v.1, %do.body.preheader ], !dbg !10815
  %fieldoffset.1 = phi i64 [ %34, %if.end116 ], [ %fieldoffset.0, %do.body.preheader ], !dbg !10815
  call void @llvm.dbg.value(metadata i64 %fieldoffset.1, metadata !10764, metadata !DIExpression()), !dbg !10815
  call void @llvm.dbg.value(metadata %struct.variable_info* %v.2, metadata !10759, metadata !DIExpression()), !dbg !10815
  %may_have_pointers = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.2, i64 0, i32 1, !dbg !10855
  %bf.load80 = load i8, i8* %may_have_pointers, align 4, !dbg !10855
  %bf.clear82 = and i8 %bf.load80, 64, !dbg !10855
  %tobool84 = icmp eq i8 %bf.clear82, 0, !dbg !10857
  br i1 %tobool84, label %if.end109, label %if.then85, !dbg !10853

if.then85:                                        ; preds = %do.body
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.2, i64 0, i32 0, !dbg !10858
  %24 = load i32, i32* %id, align 8, !dbg !10858
  %call86 = call fastcc i32 @find(i32 %24) #7, !dbg !10860
  call void @llvm.dbg.value(metadata i32 %call86, metadata !10763, metadata !DIExpression()), !dbg !10815
  %25 = load %struct.constraint_graph*, %struct.constraint_graph** @graph, align 8, !dbg !10861
  %call87 = call fastcc zeroext i8 @add_graph_edge(%struct.constraint_graph* %25, i32 %call86, i32 %0) #7, !dbg !10863
  %tobool89 = icmp eq i8 %call87, 0, !dbg !10863
  br i1 %tobool89, label %if.end109, label %land.lhs.true90, !dbg !10864

land.lhs.true90:                                  ; preds = %if.then85
  %call91 = call fastcc %struct.variable_info* @get_varinfo(i32 %call86) #7, !dbg !10865
  %solution92 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call91, i64 0, i32 8, !dbg !10866
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution92, align 8, !dbg !10866
  %call93 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %26, %struct.bitmap_head_def* %sol.0) #6, !dbg !10867
  %tobool95 = icmp eq i8 %call93, 0, !dbg !10867
  br i1 %tobool95, label %if.end109, label %land.lhs.true96, !dbg !10868

land.lhs.true96:                                  ; preds = %land.lhs.true90
  %27 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !10869
  %div98 = lshr i32 %call86, 6, !dbg !10869
  %idxprom99 = zext i32 %div98 to i64, !dbg !10869
  %arrayidx100 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %27, i64 0, i32 3, i64 %idxprom99, !dbg !10869
  %28 = load i64, i64* %arrayidx100, align 8, !dbg !10869
  %rem101 = and i32 %call86, 63, !dbg !10869
  %sh_prom102 = zext i32 %rem101 to i64, !dbg !10869
  %29 = shl i64 1, %sh_prom102, !dbg !10869
  %30 = and i64 %28, %29, !dbg !10869
  %tobool105 = icmp eq i64 %30, 0, !dbg !10869
  br i1 %tobool105, label %if.then106, label %if.end109, !dbg !10870

if.then106:                                       ; preds = %land.lhs.true96
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %27, i32 %call86) #7, !dbg !10871
  %31 = load i32, i32* @changed_count, align 4, !dbg !10873
  %inc107 = add i32 %31, 1, !dbg !10873
  store i32 %inc107, i32* @changed_count, align 4, !dbg !10873
  br label %if.end109, !dbg !10874

if.end109:                                        ; preds = %land.lhs.true96, %land.lhs.true90, %if.then85, %do.body, %if.then106
  %offset110 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.2, i64 0, i32 3, !dbg !10875
  %32 = load i64, i64* %offset110, align 8, !dbg !10875
  %cmp111 = icmp eq i64 %32, %fieldoffset.1, !dbg !10877
  br i1 %cmp111, label %cleanup.loopexit, label %lor.lhs.false, !dbg !10878

lor.lhs.false:                                    ; preds = %if.end109
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.2, i64 0, i32 2, !dbg !10879
  %33 = load %struct.variable_info*, %struct.variable_info** %next, align 8, !dbg !10879
  %cmp113 = icmp eq %struct.variable_info* %33, null, !dbg !10880
  br i1 %cmp113, label %cleanup.loopexit, label %if.end116, !dbg !10881

if.end116:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.variable_info* %33, metadata !10759, metadata !DIExpression()), !dbg !10815
  %offset118 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %33, i64 0, i32 3, !dbg !10882
  %34 = load i64, i64* %offset118, align 8, !dbg !10882
  call void @llvm.dbg.value(metadata i64 %34, metadata !10764, metadata !DIExpression()), !dbg !10815
  br label %do.body, !dbg !10883

cleanup.loopexit:                                 ; preds = %if.end109, %lor.lhs.false
  br label %cleanup, !dbg !10812

cleanup:                                          ; preds = %cleanup.loopexit, %if.end76, %if.end57
  call void @llvm.dbg.value(metadata i32* %j, metadata !10753, metadata !DIExpression(DW_OP_deref)), !dbg !10765
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10754, metadata !DIExpression(DW_OP_deref)), !dbg !10765
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !10812
  br label %for.cond, !dbg !10812, !llvm.loop !10884

cleanup121.loopexit:                              ; preds = %for.cond
  br label %cleanup121, !dbg !10886

cleanup121:                                       ; preds = %cleanup121.loopexit, %if.then19, %if.then14, %if.then10, %if.then21
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8, !dbg !10886
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !10886
  ret void, !dbg !10886
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_sd_constraint(%struct.constraint_graph* %graph, %struct.constraint* %c, %struct.bitmap_head_def* %delta) unnamed_addr #5 !dbg !10887 {
entry:
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.constraint_graph* %graph, metadata !10889, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata %struct.constraint* %c, metadata !10890, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %delta, metadata !10891, metadata !DIExpression()), !dbg !10905
  %var = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 1, !dbg !10906
  %0 = load i32, i32* %var, align 4, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %0, metadata !10892, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 0, metadata !10893, metadata !DIExpression()), !dbg !10905
  %call = tail call fastcc %struct.variable_info* @get_varinfo(i32 %0) #7, !dbg !10907
  %solution = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 8, !dbg !10908
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution, align 8, !dbg !10908
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %1, metadata !10894, metadata !DIExpression()), !dbg !10905
  %2 = bitcast i32* %j to i8*, !dbg !10909
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !10909
  %3 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !10910
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8, !dbg !10910
  %offset = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 1, i32 2, !dbg !10911
  %4 = load i64, i64* %offset, align 8, !dbg !10911
  call void @llvm.dbg.value(metadata i64 %4, metadata !10897, metadata !DIExpression()), !dbg !10905
  %offset3 = getelementptr inbounds %struct.constraint, %struct.constraint* %c, i64 0, i32 0, i32 2, !dbg !10912
  %5 = load i64, i64* %offset3, align 8, !dbg !10912
  %cmp = icmp eq i64 %5, 0, !dbg !10912
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10912

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 1535, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !10912
  br label %cond.end, !dbg !10912

cond.end:                                         ; preds = %entry, %cond.true
  %call4 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %delta, i32 1) #6, !dbg !10913
  %tobool = icmp eq i32 %call4, 0, !dbg !10913
  br i1 %tobool, label %if.end, label %if.then, !dbg !10915

if.then:                                          ; preds = %cond.end
  %call5 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %1, i32 1) #6, !dbg !10916
  call void @llvm.dbg.value(metadata i8 %call5, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %done, !dbg !10918

if.end:                                           ; preds = %cond.end
  %cmp8 = icmp eq i64 %4, -9223372036854775808, !dbg !10919
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !10921

if.then10:                                        ; preds = %if.end
  tail call fastcc void @solution_set_expand(%struct.bitmap_head_def* %delta, %struct.bitmap_head_def* %delta) #7, !dbg !10922
  call void @llvm.dbg.value(metadata i64 0, metadata !10897, metadata !DIExpression()), !dbg !10905
  br label %if.end11, !dbg !10924

if.end11:                                         ; preds = %if.then10, %if.end
  %roffset.0 = phi i64 [ 0, %if.then10 ], [ %4, %if.end ], !dbg !10905
  call void @llvm.dbg.value(metadata i64 %roffset.0, metadata !10897, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32* %j, metadata !10895, metadata !DIExpression(DW_OP_deref)), !dbg !10905
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10896, metadata !DIExpression(DW_OP_deref)), !dbg !10905
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %delta, i32 0, i32* nonnull %j) #7, !dbg !10925
  %cmp19 = icmp eq i64 %roffset.0, 0, !dbg !10926
  br i1 %cmp19, label %if.end11.split.us, label %if.end11.if.end11.split_crit_edge, !dbg !10925

if.end11.if.end11.split_crit_edge:                ; preds = %if.end11
  br label %for.cond, !dbg !10925

if.end11.split.us:                                ; preds = %if.end11
  br label %for.cond.us, !dbg !10925

for.cond.us:                                      ; preds = %cleanup.us, %if.end11.split.us
  %flag.0.us = phi i8 [ 0, %if.end11.split.us ], [ %flag.5.us, %cleanup.us ], !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.0.us, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32* %j, metadata !10895, metadata !DIExpression(DW_OP_deref)), !dbg !10905
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10896, metadata !DIExpression(DW_OP_deref)), !dbg !10905
  %call12.us = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !10929
  %tobool13.us = icmp eq i8 %call12.us, 0, !dbg !10925
  br i1 %tobool13.us, label %done.loopexit.us-lcssa.us, label %for.body.us, !dbg !10925

for.body.us:                                      ; preds = %for.cond.us
  %6 = load i32, i32* %j, align 4, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %6, metadata !10895, metadata !DIExpression()), !dbg !10905
  %call14.us = call fastcc %struct.variable_info* @get_varinfo(i32 %6) #7, !dbg !10931
  call void @llvm.dbg.value(metadata %struct.variable_info* %call14.us, metadata !10898, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i64 undef, metadata !10902, metadata !DIExpression()), !dbg !10932
  %is_full_var.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call14.us, i64 0, i32 1, !dbg !10933
  %bf.load.us = load i8, i8* %is_full_var.us, align 4, !dbg !10933
  %bf.clear.us = and i8 %bf.load.us, 8, !dbg !10933
  %tobool16.us = icmp eq i8 %bf.clear.us, 0, !dbg !10934
  br i1 %tobool16.us, label %if.else.us, label %if.then17.us, !dbg !10935

if.then17.us:                                     ; preds = %for.body.us
  br label %if.end24.us, !dbg !10936

if.else.us:                                       ; preds = %for.body.us
  br label %if.end24.us, !dbg !10937

if.end24.us:                                      ; preds = %if.else.us, %if.then17.us
  call void @llvm.dbg.value(metadata i64 undef, metadata !10902, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata %struct.variable_info* %call14.us, metadata !10898, metadata !DIExpression()), !dbg !10932
  %tobool25.us = icmp eq %struct.variable_info* %call14.us, null, !dbg !10938
  br i1 %tobool25.us, label %cleanup.us, label %do.body.preheader.us, !dbg !10940

do.body.us:                                       ; preds = %do.body.preheader.us, %if.end73.us
  %flag.1.us = phi i8 [ %flag.4.us, %if.end73.us ], [ %flag.0.us, %do.body.preheader.us ], !dbg !10905
  %v.2.us = phi %struct.variable_info* [ %12, %if.end73.us ], [ %call14.us, %do.body.preheader.us ], !dbg !10932
  %.pn = phi %struct.variable_info* [ %12, %if.end73.us ], [ %call14.us, %do.body.preheader.us ]
  %fieldoffset.1.us.in = getelementptr inbounds %struct.variable_info, %struct.variable_info* %.pn, i64 0, i32 3, !dbg !10932
  %fieldoffset.1.us = load i64, i64* %fieldoffset.1.us.in, align 8, !dbg !10932
  call void @llvm.dbg.value(metadata i64 %fieldoffset.1.us, metadata !10902, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata %struct.variable_info* %v.2.us, metadata !10898, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i8 %flag.1.us, metadata !10893, metadata !DIExpression()), !dbg !10905
  %id.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.2.us, i64 0, i32 0, !dbg !10941
  %7 = load i32, i32* %id.us, align 8, !dbg !10941
  %call28.us = call fastcc i32 @find(i32 %7) #7, !dbg !10943
  call void @llvm.dbg.value(metadata i32 %call28.us, metadata !10903, metadata !DIExpression()), !dbg !10932
  %call29.us = call fastcc %struct.variable_info* @get_varinfo(i32 %call28.us) #7, !dbg !10944
  %is_special_var.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call29.us, i64 0, i32 1, !dbg !10946
  %bf.load30.us = load i8, i8* %is_special_var.us, align 4, !dbg !10946
  %bf.clear32.us = and i8 %bf.load30.us, 2, !dbg !10946
  %tobool34.us = icmp eq i8 %bf.clear32.us, 0, !dbg !10944
  br i1 %tobool34.us, label %if.else43.us, label %if.then35.us, !dbg !10947

if.then35.us:                                     ; preds = %do.body.us
  %call36.us = call fastcc %struct.variable_info* @get_varinfo(i32 %call28.us) #7, !dbg !10948
  %solution37.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call36.us, i64 0, i32 8, !dbg !10949
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution37.us, align 8, !dbg !10949
  %call38.us = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %1, %struct.bitmap_head_def* %8) #6, !dbg !10950
  %or413.us = or i8 %flag.1.us, %call38.us, !dbg !10951
  call void @llvm.dbg.value(metadata i8 %or413.us, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %if.end66.us, !dbg !10952

if.else43.us:                                     ; preds = %do.body.us
  %9 = load i32, i32* %id.us, align 8, !dbg !10953
  %cmp45.us = icmp eq i32 %9, 3, !dbg !10955
  br i1 %cmp45.us, label %if.then47.us, label %if.else53.us, !dbg !10956

if.else53.us:                                     ; preds = %if.else43.us
  %call54.us = call fastcc zeroext i8 @add_graph_edge(%struct.constraint_graph* %graph, i32 %0, i32 %call28.us) #7, !dbg !10957
  %tobool55.us = icmp eq i8 %call54.us, 0, !dbg !10957
  br i1 %tobool55.us, label %if.end66.us, label %if.then56.us, !dbg !10959

if.then56.us:                                     ; preds = %if.else53.us
  %call57.us = call fastcc %struct.variable_info* @get_varinfo(i32 %call28.us) #7, !dbg !10960
  %solution58.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call57.us, i64 0, i32 8, !dbg !10961
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution58.us, align 8, !dbg !10961
  %call59.us = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %1, %struct.bitmap_head_def* %10) #6, !dbg !10962
  %or621.us = or i8 %flag.1.us, %call59.us, !dbg !10963
  call void @llvm.dbg.value(metadata i8 %or621.us, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %if.end66.us, !dbg !10964

if.then47.us:                                     ; preds = %if.else43.us
  %call48.us = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %1, i32 3) #6, !dbg !10965
  %or512.us = or i8 %flag.1.us, %call48.us, !dbg !10966
  call void @llvm.dbg.value(metadata i8 %or512.us, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %if.end66.us, !dbg !10967

if.end66.us:                                      ; preds = %if.then47.us, %if.then56.us, %if.else53.us, %if.then35.us
  %flag.4.us = phi i8 [ %or413.us, %if.then35.us ], [ %or512.us, %if.then47.us ], [ %or621.us, %if.then56.us ], [ %flag.1.us, %if.else53.us ], !dbg !10968
  call void @llvm.dbg.value(metadata i8 %flag.4.us, metadata !10893, metadata !DIExpression()), !dbg !10905
  %offset67.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.2.us, i64 0, i32 3, !dbg !10969
  %11 = load i64, i64* %offset67.us, align 8, !dbg !10969
  %cmp68.us = icmp eq i64 %11, %fieldoffset.1.us, !dbg !10971
  br i1 %cmp68.us, label %cleanup.loopexit.us, label %lor.lhs.false.us, !dbg !10972

lor.lhs.false.us:                                 ; preds = %if.end66.us
  %next.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.2.us, i64 0, i32 2, !dbg !10973
  %12 = load %struct.variable_info*, %struct.variable_info** %next.us, align 8, !dbg !10973
  %cmp70.us = icmp eq %struct.variable_info* %12, null, !dbg !10974
  br i1 %cmp70.us, label %cleanup.loopexit.us, label %if.end73.us, !dbg !10975

if.end73.us:                                      ; preds = %lor.lhs.false.us
  call void @llvm.dbg.value(metadata %struct.variable_info* %12, metadata !10898, metadata !DIExpression()), !dbg !10932
  br label %do.body.us, !dbg !10976

cleanup.us:                                       ; preds = %cleanup.loopexit.us, %if.end24.us
  %flag.5.us = phi i8 [ %flag.0.us, %if.end24.us ], [ %flag.4.us.lcssa, %cleanup.loopexit.us ], !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.5.us, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32* %j, metadata !10895, metadata !DIExpression(DW_OP_deref)), !dbg !10905
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10896, metadata !DIExpression(DW_OP_deref)), !dbg !10905
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !10929
  br label %for.cond.us, !dbg !10929, !llvm.loop !10977

do.body.preheader.us:                             ; preds = %if.end24.us
  br label %do.body.us, !dbg !10947

cleanup.loopexit.us:                              ; preds = %lor.lhs.false.us, %if.end66.us
  %flag.4.us.lcssa = phi i8 [ %flag.4.us, %lor.lhs.false.us ], [ %flag.4.us, %if.end66.us ], !dbg !10968
  call void @llvm.dbg.value(metadata i8 %flag.4.us.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.4.us.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.4.us.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.4.us.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.4.us.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.4.us.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %cleanup.us, !dbg !10929

done.loopexit.us-lcssa.us:                        ; preds = %for.cond.us
  %flag.0.us.lcssa = phi i8 [ %flag.0.us, %for.cond.us ], !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.0.us.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.0.us.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %done.loopexit, !dbg !10979

for.cond:                                         ; preds = %cleanup, %if.end11.if.end11.split_crit_edge
  %flag.0 = phi i8 [ 0, %if.end11.if.end11.split_crit_edge ], [ %flag.5, %cleanup ], !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.0, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32* %j, metadata !10895, metadata !DIExpression(DW_OP_deref)), !dbg !10905
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10896, metadata !DIExpression(DW_OP_deref)), !dbg !10905
  %call12 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !10929
  %tobool13 = icmp eq i8 %call12, 0, !dbg !10925
  br i1 %tobool13, label %done.loopexit.us-lcssa, label %for.body, !dbg !10925

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %j, align 4, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %13, metadata !10895, metadata !DIExpression()), !dbg !10905
  %call14 = call fastcc %struct.variable_info* @get_varinfo(i32 %13) #7, !dbg !10931
  call void @llvm.dbg.value(metadata %struct.variable_info* %call14, metadata !10898, metadata !DIExpression()), !dbg !10932
  %offset15 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call14, i64 0, i32 3, !dbg !10981
  %14 = load i64, i64* %offset15, align 8, !dbg !10981
  %add = add i64 %14, %roffset.0, !dbg !10982
  call void @llvm.dbg.value(metadata i64 %add, metadata !10902, metadata !DIExpression()), !dbg !10932
  %is_full_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call14, i64 0, i32 1, !dbg !10933
  %bf.load = load i8, i8* %is_full_var, align 4, !dbg !10933
  %bf.clear = and i8 %bf.load, 8, !dbg !10933
  %tobool16 = icmp eq i8 %bf.clear, 0, !dbg !10934
  br i1 %tobool16, label %if.else, label %if.then17, !dbg !10935

if.then17:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata i64 %14, metadata !10902, metadata !DIExpression()), !dbg !10932
  br label %if.end24, !dbg !10936

if.else:                                          ; preds = %for.body
  %call22 = call fastcc %struct.variable_info* @first_vi_for_offset(%struct.variable_info* %call14, i64 %add) #7, !dbg !10983
  call void @llvm.dbg.value(metadata %struct.variable_info* %call22, metadata !10898, metadata !DIExpression()), !dbg !10932
  br label %if.end24, !dbg !10984

if.end24:                                         ; preds = %if.else, %if.then17
  %v.1 = phi %struct.variable_info* [ %call14, %if.then17 ], [ %call22, %if.else ], !dbg !10932
  %fieldoffset.0 = phi i64 [ %14, %if.then17 ], [ %add, %if.else ], !dbg !10932
  call void @llvm.dbg.value(metadata i64 %fieldoffset.0, metadata !10902, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata %struct.variable_info* %v.1, metadata !10898, metadata !DIExpression()), !dbg !10932
  %tobool25 = icmp eq %struct.variable_info* %v.1, null, !dbg !10938
  br i1 %tobool25, label %cleanup, label %do.body.preheader, !dbg !10940

do.body.preheader:                                ; preds = %if.end24
  br label %do.body, !dbg !10947

do.body:                                          ; preds = %do.body.preheader, %if.end73
  %flag.1 = phi i8 [ %flag.4, %if.end73 ], [ %flag.0, %do.body.preheader ], !dbg !10905
  %v.2 = phi %struct.variable_info* [ %20, %if.end73 ], [ %v.1, %do.body.preheader ], !dbg !10932
  %fieldoffset.1 = phi i64 [ %21, %if.end73 ], [ %fieldoffset.0, %do.body.preheader ], !dbg !10932
  call void @llvm.dbg.value(metadata i64 %fieldoffset.1, metadata !10902, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata %struct.variable_info* %v.2, metadata !10898, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i8 %flag.1, metadata !10893, metadata !DIExpression()), !dbg !10905
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.2, i64 0, i32 0, !dbg !10941
  %15 = load i32, i32* %id, align 8, !dbg !10941
  %call28 = call fastcc i32 @find(i32 %15) #7, !dbg !10943
  call void @llvm.dbg.value(metadata i32 %call28, metadata !10903, metadata !DIExpression()), !dbg !10932
  %call29 = call fastcc %struct.variable_info* @get_varinfo(i32 %call28) #7, !dbg !10944
  %is_special_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call29, i64 0, i32 1, !dbg !10946
  %bf.load30 = load i8, i8* %is_special_var, align 4, !dbg !10946
  %bf.clear32 = and i8 %bf.load30, 2, !dbg !10946
  %tobool34 = icmp eq i8 %bf.clear32, 0, !dbg !10944
  br i1 %tobool34, label %if.else43, label %if.then35, !dbg !10947

if.then35:                                        ; preds = %do.body
  %call36 = call fastcc %struct.variable_info* @get_varinfo(i32 %call28) #7, !dbg !10948
  %solution37 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call36, i64 0, i32 8, !dbg !10949
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution37, align 8, !dbg !10949
  %call38 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %1, %struct.bitmap_head_def* %16) #6, !dbg !10950
  %or413 = or i8 %flag.1, %call38, !dbg !10951
  call void @llvm.dbg.value(metadata i8 %or413, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %if.end66, !dbg !10952

if.else43:                                        ; preds = %do.body
  %17 = load i32, i32* %id, align 8, !dbg !10953
  %cmp45 = icmp eq i32 %17, 3, !dbg !10955
  br i1 %cmp45, label %if.then47, label %if.else53, !dbg !10956

if.then47:                                        ; preds = %if.else43
  %call48 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %1, i32 3) #6, !dbg !10965
  %or512 = or i8 %flag.1, %call48, !dbg !10966
  call void @llvm.dbg.value(metadata i8 %or512, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %if.end66, !dbg !10967

if.else53:                                        ; preds = %if.else43
  %call54 = call fastcc zeroext i8 @add_graph_edge(%struct.constraint_graph* %graph, i32 %0, i32 %call28) #7, !dbg !10957
  %tobool55 = icmp eq i8 %call54, 0, !dbg !10957
  br i1 %tobool55, label %if.end66, label %if.then56, !dbg !10959

if.then56:                                        ; preds = %if.else53
  %call57 = call fastcc %struct.variable_info* @get_varinfo(i32 %call28) #7, !dbg !10960
  %solution58 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call57, i64 0, i32 8, !dbg !10961
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %solution58, align 8, !dbg !10961
  %call59 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %1, %struct.bitmap_head_def* %18) #6, !dbg !10962
  %or621 = or i8 %flag.1, %call59, !dbg !10963
  call void @llvm.dbg.value(metadata i8 %or621, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %if.end66, !dbg !10964

if.end66:                                         ; preds = %if.else53, %if.then47, %if.then56, %if.then35
  %flag.4 = phi i8 [ %or413, %if.then35 ], [ %or512, %if.then47 ], [ %or621, %if.then56 ], [ %flag.1, %if.else53 ], !dbg !10968
  call void @llvm.dbg.value(metadata i8 %flag.4, metadata !10893, metadata !DIExpression()), !dbg !10905
  %offset67 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.2, i64 0, i32 3, !dbg !10969
  %19 = load i64, i64* %offset67, align 8, !dbg !10969
  %cmp68 = icmp eq i64 %19, %fieldoffset.1, !dbg !10971
  br i1 %cmp68, label %cleanup.loopexit, label %lor.lhs.false, !dbg !10972

lor.lhs.false:                                    ; preds = %if.end66
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v.2, i64 0, i32 2, !dbg !10973
  %20 = load %struct.variable_info*, %struct.variable_info** %next, align 8, !dbg !10973
  %cmp70 = icmp eq %struct.variable_info* %20, null, !dbg !10974
  br i1 %cmp70, label %cleanup.loopexit, label %if.end73, !dbg !10975

if.end73:                                         ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.variable_info* %20, metadata !10898, metadata !DIExpression()), !dbg !10932
  %offset75 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %20, i64 0, i32 3, !dbg !10985
  %21 = load i64, i64* %offset75, align 8, !dbg !10985
  call void @llvm.dbg.value(metadata i64 %21, metadata !10902, metadata !DIExpression()), !dbg !10932
  br label %do.body, !dbg !10976

cleanup.loopexit:                                 ; preds = %if.end66, %lor.lhs.false
  %flag.4.lcssa = phi i8 [ %flag.4, %if.end66 ], [ %flag.4, %lor.lhs.false ], !dbg !10968
  call void @llvm.dbg.value(metadata i8 %flag.4.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.4.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.4.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.4.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.4.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.4.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %cleanup, !dbg !10929

cleanup:                                          ; preds = %cleanup.loopexit, %if.end24
  %flag.5 = phi i8 [ %flag.0, %if.end24 ], [ %flag.4.lcssa, %cleanup.loopexit ], !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.5, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32* %j, metadata !10895, metadata !DIExpression(DW_OP_deref)), !dbg !10905
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !10896, metadata !DIExpression(DW_OP_deref)), !dbg !10905
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !10929
  br label %for.cond, !dbg !10929, !llvm.loop !10977

done.loopexit.us-lcssa:                           ; preds = %for.cond
  %flag.0.lcssa5 = phi i8 [ %flag.0, %for.cond ], !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.0.lcssa5, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.0.lcssa5, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %done.loopexit, !dbg !10979

done.loopexit:                                    ; preds = %done.loopexit.us-lcssa.us, %done.loopexit.us-lcssa
  %flag.0.lcssa = phi i8 [ %flag.0.lcssa5, %done.loopexit.us-lcssa ], [ %flag.0.us.lcssa, %done.loopexit.us-lcssa.us ], !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.0.lcssa, metadata !10893, metadata !DIExpression()), !dbg !10905
  br label %done, !dbg !10979

done:                                             ; preds = %done.loopexit, %if.then
  %flag.6 = phi i8 [ %call5, %if.then ], [ %flag.0.lcssa, %done.loopexit ], !dbg !10905
  call void @llvm.dbg.value(metadata i8 %flag.6, metadata !10893, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.label(metadata !10904), !dbg !10986
  %tobool78 = icmp eq i8 %flag.6, 0, !dbg !10979
  br i1 %tobool78, label %if.end85, label %if.then79, !dbg !10987

if.then79:                                        ; preds = %done
  %call80 = call fastcc %struct.variable_info* @get_varinfo(i32 %0) #7, !dbg !10988
  %solution81 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call80, i64 0, i32 8, !dbg !10990
  store %struct.bitmap_head_def* %1, %struct.bitmap_head_def** %solution81, align 8, !dbg !10991
  %22 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @changed, align 8, !dbg !10992
  %div = lshr i32 %0, 6, !dbg !10992
  %idxprom = zext i32 %div to i64, !dbg !10992
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %22, i64 0, i32 3, i64 %idxprom, !dbg !10992
  %23 = load i64, i64* %arrayidx, align 8, !dbg !10992
  %rem = and i32 %0, 63, !dbg !10992
  %sh_prom = zext i32 %rem to i64, !dbg !10992
  %24 = shl i64 1, %sh_prom, !dbg !10992
  %25 = and i64 %23, %24, !dbg !10992
  %tobool82 = icmp eq i64 %25, 0, !dbg !10992
  br i1 %tobool82, label %if.then83, label %if.end85, !dbg !10994

if.then83:                                        ; preds = %if.then79
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %22, i32 %0) #7, !dbg !10995
  %26 = load i32, i32* @changed_count, align 4, !dbg !10997
  %inc = add i32 %26, 1, !dbg !10997
  store i32 %inc, i32* @changed_count, align 4, !dbg !10997
  br label %if.end85, !dbg !10998

if.end85:                                         ; preds = %if.then79, %done, %if.then83
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8, !dbg !10999
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !10999
  ret void, !dbg !10999
}

; Function Attrs: nounwind uwtable
define internal fastcc void @solution_set_expand(%struct.bitmap_head_def* %result, %struct.bitmap_head_def* %set) unnamed_addr #5 !dbg !11000 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %j = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %result, metadata !11004, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %set, metadata !11005, metadata !DIExpression()), !dbg !11019
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !11020
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !11020
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !11007, metadata !DIExpression()), !dbg !11019
  %1 = bitcast i32* %j to i8*, !dbg !11021
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !11021
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11006, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  call void @llvm.dbg.value(metadata i32* %j, metadata !11008, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %set, i32 0, i32* nonnull %j) #7, !dbg !11022
  br label %for.cond, !dbg !11022

for.cond:                                         ; preds = %cleanup, %entry
  %vars.0 = phi %struct.bitmap_head_def* [ null, %entry ], [ %vars.2, %cleanup ], !dbg !11023
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %vars.0, metadata !11007, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11006, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  call void @llvm.dbg.value(metadata i32* %j, metadata !11008, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !11024
  %tobool = icmp eq i8 %call, 0, !dbg !11022
  br i1 %tobool, label %for.end, label %for.body, !dbg !11022

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %j, align 4, !dbg !11025
  call void @llvm.dbg.value(metadata i32 %2, metadata !11008, metadata !DIExpression()), !dbg !11019
  %call1 = call fastcc %struct.variable_info* @get_varinfo(i32 %2) #7, !dbg !11026
  call void @llvm.dbg.value(metadata %struct.variable_info* %call1, metadata !11009, metadata !DIExpression()), !dbg !11027
  %is_artificial_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call1, i64 0, i32 1, !dbg !11028
  %bf.load = load i8, i8* %is_artificial_var, align 4, !dbg !11028
  %bf.clear = and i8 %bf.load, 1, !dbg !11028
  %tobool2 = icmp eq i8 %bf.clear, 0, !dbg !11030
  br i1 %tobool2, label %lor.lhs.false, label %cleanup, !dbg !11031

lor.lhs.false:                                    ; preds = %for.body
  %bf.clear4 = and i8 %bf.load, 8, !dbg !11032
  %tobool6 = icmp eq i8 %bf.clear4, 0, !dbg !11033
  br i1 %tobool6, label %if.end, label %cleanup, !dbg !11034

if.end:                                           ; preds = %lor.lhs.false
  %decl = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call1, i64 0, i32 7, !dbg !11035
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !11035
  %call7 = call fastcc %struct.variable_info* @lookup_vi_for_tree(%union.tree_node* %3) #7, !dbg !11036
  call void @llvm.dbg.value(metadata %struct.variable_info* %call7, metadata !11009, metadata !DIExpression()), !dbg !11027
  %cmp = icmp eq %struct.bitmap_head_def* %vars.0, null, !dbg !11037
  br i1 %cmp, label %if.then8, label %if.end10, !dbg !11039

if.then8:                                         ; preds = %if.end
  %call9 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !11040
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call9, metadata !11007, metadata !DIExpression()), !dbg !11019
  br label %if.end10, !dbg !11041

if.end10:                                         ; preds = %if.then8, %if.end
  %vars.1 = phi %struct.bitmap_head_def* [ %call9, %if.then8 ], [ %vars.0, %if.end ], !dbg !11019
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %vars.1, metadata !11007, metadata !DIExpression()), !dbg !11019
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call7, i64 0, i32 0, !dbg !11042
  %4 = load i32, i32* %id, align 8, !dbg !11042
  %call11 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %vars.1, i32 %4) #6, !dbg !11043
  br label %cleanup, !dbg !11044

cleanup:                                          ; preds = %lor.lhs.false, %for.body, %if.end10
  %vars.2 = phi %struct.bitmap_head_def* [ %vars.1, %if.end10 ], [ %vars.0, %lor.lhs.false ], [ %vars.0, %for.body ], !dbg !11019
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %vars.2, metadata !11007, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11006, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  call void @llvm.dbg.value(metadata i32* %j, metadata !11008, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !11024
  br label %for.cond, !dbg !11024, !llvm.loop !11045

for.end:                                          ; preds = %for.cond
  %vars.0.lcssa = phi %struct.bitmap_head_def* [ %vars.0, %for.cond ], !dbg !11023
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %vars.0.lcssa, metadata !11007, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %vars.0.lcssa, metadata !11007, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %vars.0.lcssa, metadata !11007, metadata !DIExpression()), !dbg !11019
  %cmp12 = icmp eq %struct.bitmap_head_def* %vars.0.lcssa, null, !dbg !11047
  br i1 %cmp12, label %if.end29, label %if.then13, !dbg !11048

if.then13:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11006, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  call void @llvm.dbg.value(metadata i32* %j, metadata !11008, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* nonnull %vars.0.lcssa, i32 0, i32* nonnull %j) #7, !dbg !11049
  br label %for.cond14, !dbg !11049

for.cond14:                                       ; preds = %for.inc27, %if.then13
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11006, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  call void @llvm.dbg.value(metadata i32* %j, metadata !11008, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  %call15 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !11050
  %tobool16 = icmp eq i8 %call15, 0, !dbg !11049
  br i1 %tobool16, label %for.end28, label %for.body17, !dbg !11049

for.body17:                                       ; preds = %for.cond14
  %5 = load i32, i32* %j, align 4, !dbg !11051
  call void @llvm.dbg.value(metadata i32 %5, metadata !11008, metadata !DIExpression()), !dbg !11019
  %call19 = call fastcc %struct.variable_info* @get_varinfo(i32 %5) #7, !dbg !11052
  call void @llvm.dbg.value(metadata %struct.variable_info* %call19, metadata !11013, metadata !DIExpression()), !dbg !11053
  br label %for.cond20, !dbg !11054

for.cond20:                                       ; preds = %for.body22, %for.body17
  %v18.0 = phi %struct.variable_info* [ %call19, %for.body17 ], [ %7, %for.body22 ], !dbg !11053
  call void @llvm.dbg.value(metadata %struct.variable_info* %v18.0, metadata !11013, metadata !DIExpression()), !dbg !11053
  %cmp21 = icmp eq %struct.variable_info* %v18.0, null, !dbg !11055
  br i1 %cmp21, label %for.inc27, label %for.body22, !dbg !11058

for.body22:                                       ; preds = %for.cond20
  %id23 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v18.0, i64 0, i32 0, !dbg !11059
  %6 = load i32, i32* %id23, align 8, !dbg !11059
  %call24 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %result, i32 %6) #6, !dbg !11060
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %v18.0, i64 0, i32 2, !dbg !11061
  %7 = load %struct.variable_info*, %struct.variable_info** %next, align 8, !dbg !11061
  call void @llvm.dbg.value(metadata %struct.variable_info* %7, metadata !11013, metadata !DIExpression()), !dbg !11053
  br label %for.cond20, !dbg !11062, !llvm.loop !11063

for.inc27:                                        ; preds = %for.cond20
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11006, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  call void @llvm.dbg.value(metadata i32* %j, metadata !11008, metadata !DIExpression(DW_OP_deref)), !dbg !11019
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #7, !dbg !11050
  br label %for.cond14, !dbg !11050, !llvm.loop !11065

for.end28:                                        ; preds = %for.cond14
  call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %vars.0.lcssa) #6, !dbg !11067
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !11007, metadata !DIExpression()), !dbg !11019
  br label %if.end29, !dbg !11068

if.end29:                                         ; preds = %for.end, %for.end28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !11069
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !11069
  ret void, !dbg !11069
}

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @solution_set_add(%struct.bitmap_head_def* %set, i64 %offset) unnamed_addr #5 !dbg !11070 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %set, metadata !11074, metadata !DIExpression()), !dbg !11086
  call void @llvm.dbg.value(metadata i64 %offset, metadata !11075, metadata !DIExpression()), !dbg !11086
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @iteration_obstack) #6, !dbg !11087
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !11076, metadata !DIExpression()), !dbg !11086
  %0 = bitcast i32* %i to i8*, !dbg !11088
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !11088
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !11089
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !11089
  %cmp = icmp eq i64 %offset, -9223372036854775808, !dbg !11090
  br i1 %cmp, label %if.then, label %if.end, !dbg !11092

if.then:                                          ; preds = %entry
  tail call fastcc void @solution_set_expand(%struct.bitmap_head_def* %set, %struct.bitmap_head_def* %set) #7, !dbg !11093
  br label %cleanup, !dbg !11095

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !11077, metadata !DIExpression(DW_OP_deref)), !dbg !11086
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11078, metadata !DIExpression(DW_OP_deref)), !dbg !11086
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %set, i32 0, i32* nonnull %i) #7, !dbg !11096
  %cmp17 = icmp slt i64 %offset, 0, !dbg !11097
  %cmp22 = icmp eq i64 %offset, 0, !dbg !11099
  br i1 %cmp17, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !11096

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %for.cond, !dbg !11096

if.end.split.us:                                  ; preds = %if.end
  br label %for.cond.us, !dbg !11096

for.cond.us:                                      ; preds = %for.inc.us, %if.end.split.us
  call void @llvm.dbg.value(metadata i32* %i, metadata !11077, metadata !DIExpression(DW_OP_deref)), !dbg !11086
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11078, metadata !DIExpression(DW_OP_deref)), !dbg !11086
  %call1.us = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !11101
  %tobool.us = icmp eq i8 %call1.us, 0, !dbg !11096
  br i1 %tobool.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !11096

for.body.us:                                      ; preds = %for.cond.us
  %2 = load i32, i32* %i, align 4, !dbg !11102
  call void @llvm.dbg.value(metadata i32 %2, metadata !11077, metadata !DIExpression()), !dbg !11086
  %call2.us = call fastcc %struct.variable_info* @get_varinfo(i32 %2) #7, !dbg !11103
  call void @llvm.dbg.value(metadata %struct.variable_info* %call2.us, metadata !11079, metadata !DIExpression()), !dbg !11104
  %is_artificial_var.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call2.us, i64 0, i32 1, !dbg !11105
  %bf.load.us = load i8, i8* %is_artificial_var.us, align 4, !dbg !11105
  %bf.clear.us = and i8 %bf.load.us, 1, !dbg !11105
  %tobool3.us = icmp eq i8 %bf.clear.us, 0, !dbg !11106
  br i1 %tobool3.us, label %lor.lhs.false.us, label %if.then14.us, !dbg !11107

lor.lhs.false.us:                                 ; preds = %for.body.us
  %bf.clear5.us = and i8 %bf.load.us, 4, !dbg !11108
  %tobool7.us = icmp eq i8 %bf.clear5.us, 0, !dbg !11109
  br i1 %tobool7.us, label %lor.lhs.false8.us, label %if.then14.us, !dbg !11110

lor.lhs.false8.us:                                ; preds = %lor.lhs.false.us
  %bf.clear11.us = and i8 %bf.load.us, 8, !dbg !11111
  %tobool13.us = icmp eq i8 %bf.clear11.us, 0, !dbg !11112
  br i1 %tobool13.us, label %if.else.us, label %if.then14.us, !dbg !11113

if.then14.us:                                     ; preds = %lor.lhs.false8.us, %lor.lhs.false.us, %for.body.us
  %3 = load i32, i32* %i, align 4, !dbg !11114
  call void @llvm.dbg.value(metadata i32 %3, metadata !11077, metadata !DIExpression()), !dbg !11086
  %call15.us = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %3) #6, !dbg !11115
  br label %for.inc.us, !dbg !11115

if.else.us:                                       ; preds = %lor.lhs.false8.us
  %offset16.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call2.us, i64 0, i32 3, !dbg !11116
  %4 = load i64, i64* %offset16.us, align 8, !dbg !11116
  %add.us = add i64 %4, %offset, !dbg !11117
  call void @llvm.dbg.value(metadata i64 %add.us, metadata !11083, metadata !DIExpression()), !dbg !11118
  %cmp19.us = icmp ugt i64 %add.us, %4, !dbg !11119
  %spec.select.us = select i1 %cmp19.us, i64 0, i64 %add.us, !dbg !11120
  call void @llvm.dbg.value(metadata i64 %spec.select.us, metadata !11083, metadata !DIExpression()), !dbg !11118
  br i1 %cmp22, label %if.end25.us, label %if.then23.us, !dbg !11121

if.then23.us:                                     ; preds = %if.else.us
  %call24.us = call fastcc %struct.variable_info* @first_or_preceding_vi_for_offset(%struct.variable_info* %call2.us, i64 %spec.select.us) #7, !dbg !11122
  call void @llvm.dbg.value(metadata %struct.variable_info* %call24.us, metadata !11079, metadata !DIExpression()), !dbg !11104
  br label %if.end25.us, !dbg !11123

if.end25.us:                                      ; preds = %if.then23.us, %if.else.us
  %vi.0.us = phi %struct.variable_info* [ %call24.us, %if.then23.us ], [ %call2.us, %if.else.us ], !dbg !11104
  call void @llvm.dbg.value(metadata %struct.variable_info* %vi.0.us, metadata !11079, metadata !DIExpression()), !dbg !11104
  %id.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %vi.0.us, i64 0, i32 0, !dbg !11124
  %5 = load i32, i32* %id.us, align 8, !dbg !11124
  %call26.us = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %5) #6, !dbg !11125
  %offset27.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %vi.0.us, i64 0, i32 3, !dbg !11126
  %6 = load i64, i64* %offset27.us, align 8, !dbg !11126
  %cmp28.us = icmp eq i64 %6, %spec.select.us, !dbg !11128
  br i1 %cmp28.us, label %for.inc.us, label %land.lhs.true29.us, !dbg !11129

land.lhs.true29.us:                               ; preds = %if.end25.us
  %next.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %vi.0.us, i64 0, i32 2, !dbg !11130
  %7 = load %struct.variable_info*, %struct.variable_info** %next.us, align 8, !dbg !11130
  %cmp30.us = icmp eq %struct.variable_info* %7, null, !dbg !11131
  br i1 %cmp30.us, label %for.inc.us, label %if.then31.us, !dbg !11132

if.then31.us:                                     ; preds = %land.lhs.true29.us
  %id33.us = getelementptr inbounds %struct.variable_info, %struct.variable_info* %7, i64 0, i32 0, !dbg !11133
  %8 = load i32, i32* %id33.us, align 8, !dbg !11133
  %call34.us = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %8) #6, !dbg !11134
  br label %for.inc.us, !dbg !11134

for.inc.us:                                       ; preds = %if.then31.us, %land.lhs.true29.us, %if.end25.us, %if.then14.us
  call void @llvm.dbg.value(metadata i32* %i, metadata !11077, metadata !DIExpression(DW_OP_deref)), !dbg !11086
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11078, metadata !DIExpression(DW_OP_deref)), !dbg !11086
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !11101
  br label %for.cond.us, !dbg !11101, !llvm.loop !11135

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !11137

for.cond:                                         ; preds = %for.inc, %if.end.if.end.split_crit_edge
  call void @llvm.dbg.value(metadata i32* %i, metadata !11077, metadata !DIExpression(DW_OP_deref)), !dbg !11086
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11078, metadata !DIExpression(DW_OP_deref)), !dbg !11086
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !11101
  %tobool = icmp eq i8 %call1, 0, !dbg !11096
  br i1 %tobool, label %for.end.us-lcssa, label %for.body, !dbg !11096

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !11102
  call void @llvm.dbg.value(metadata i32 %9, metadata !11077, metadata !DIExpression()), !dbg !11086
  %call2 = call fastcc %struct.variable_info* @get_varinfo(i32 %9) #7, !dbg !11103
  call void @llvm.dbg.value(metadata %struct.variable_info* %call2, metadata !11079, metadata !DIExpression()), !dbg !11104
  %is_artificial_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call2, i64 0, i32 1, !dbg !11105
  %bf.load = load i8, i8* %is_artificial_var, align 4, !dbg !11105
  %bf.clear = and i8 %bf.load, 1, !dbg !11105
  %tobool3 = icmp eq i8 %bf.clear, 0, !dbg !11106
  br i1 %tobool3, label %lor.lhs.false, label %if.then14, !dbg !11107

lor.lhs.false:                                    ; preds = %for.body
  %bf.clear5 = and i8 %bf.load, 4, !dbg !11108
  %tobool7 = icmp eq i8 %bf.clear5, 0, !dbg !11109
  br i1 %tobool7, label %lor.lhs.false8, label %if.then14, !dbg !11110

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %bf.clear11 = and i8 %bf.load, 8, !dbg !11111
  %tobool13 = icmp eq i8 %bf.clear11, 0, !dbg !11112
  br i1 %tobool13, label %if.else, label %if.then14, !dbg !11113

if.then14:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !11114
  call void @llvm.dbg.value(metadata i32 %10, metadata !11077, metadata !DIExpression()), !dbg !11086
  %call15 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %10) #6, !dbg !11115
  br label %for.inc, !dbg !11115

if.else:                                          ; preds = %lor.lhs.false8
  %offset16 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call2, i64 0, i32 3, !dbg !11116
  %11 = load i64, i64* %offset16, align 8, !dbg !11116
  %add = add i64 %11, %offset, !dbg !11117
  call void @llvm.dbg.value(metadata i64 %add, metadata !11083, metadata !DIExpression()), !dbg !11118
  call void @llvm.dbg.value(metadata i64 %add, metadata !11083, metadata !DIExpression()), !dbg !11118
  br i1 %cmp22, label %if.end25, label %if.then23, !dbg !11121

if.then23:                                        ; preds = %if.else
  %call24 = call fastcc %struct.variable_info* @first_or_preceding_vi_for_offset(%struct.variable_info* %call2, i64 %add) #7, !dbg !11122
  call void @llvm.dbg.value(metadata %struct.variable_info* %call24, metadata !11079, metadata !DIExpression()), !dbg !11104
  br label %if.end25, !dbg !11123

if.end25:                                         ; preds = %if.else, %if.then23
  %vi.0 = phi %struct.variable_info* [ %call24, %if.then23 ], [ %call2, %if.else ], !dbg !11104
  call void @llvm.dbg.value(metadata %struct.variable_info* %vi.0, metadata !11079, metadata !DIExpression()), !dbg !11104
  %id = getelementptr inbounds %struct.variable_info, %struct.variable_info* %vi.0, i64 0, i32 0, !dbg !11124
  %12 = load i32, i32* %id, align 8, !dbg !11124
  %call26 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %12) #6, !dbg !11125
  %offset27 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %vi.0, i64 0, i32 3, !dbg !11126
  %13 = load i64, i64* %offset27, align 8, !dbg !11126
  %cmp28 = icmp eq i64 %13, %add, !dbg !11128
  br i1 %cmp28, label %for.inc, label %land.lhs.true29, !dbg !11129

land.lhs.true29:                                  ; preds = %if.end25
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %vi.0, i64 0, i32 2, !dbg !11130
  %14 = load %struct.variable_info*, %struct.variable_info** %next, align 8, !dbg !11130
  %cmp30 = icmp eq %struct.variable_info* %14, null, !dbg !11131
  br i1 %cmp30, label %for.inc, label %if.then31, !dbg !11132

if.then31:                                        ; preds = %land.lhs.true29
  %id33 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %14, i64 0, i32 0, !dbg !11133
  %15 = load i32, i32* %id33, align 8, !dbg !11133
  %call34 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %15) #6, !dbg !11134
  br label %for.inc, !dbg !11134

for.inc:                                          ; preds = %land.lhs.true29, %if.end25, %if.then14, %if.then31
  call void @llvm.dbg.value(metadata i32* %i, metadata !11077, metadata !DIExpression(DW_OP_deref)), !dbg !11086
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11078, metadata !DIExpression(DW_OP_deref)), !dbg !11086
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !11101
  br label %for.cond, !dbg !11101, !llvm.loop !11135

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !11137

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  call void @bitmap_copy(%struct.bitmap_head_def* %set, %struct.bitmap_head_def* %call) #6, !dbg !11137
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !11138
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !11076, metadata !DIExpression()), !dbg !11086
  br label %cleanup, !dbg !11139

cleanup:                                          ; preds = %for.end, %if.then
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !11139
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !11139
  ret void, !dbg !11139
}

declare dso_local %struct.bitmap_head_def* @bitmap_gc_alloc_stat() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @set_uids_in_ptset(%struct.bitmap_head_def* %into, %struct.bitmap_head_def* %from, %struct.pt_solution* %pt) unnamed_addr #5 !dbg !11140 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %into, metadata !11144, metadata !DIExpression()), !dbg !11153
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %from, metadata !11145, metadata !DIExpression()), !dbg !11153
  call void @llvm.dbg.value(metadata %struct.pt_solution* %pt, metadata !11146, metadata !DIExpression()), !dbg !11153
  %0 = bitcast i32* %i to i8*, !dbg !11154
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !11154
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !11155
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !11155
  call void @llvm.dbg.value(metadata i32* %i, metadata !11147, metadata !DIExpression(DW_OP_deref)), !dbg !11153
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11148, metadata !DIExpression(DW_OP_deref)), !dbg !11153
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %from, i32 0, i32* nonnull %i) #7, !dbg !11156
  %2 = getelementptr inbounds %struct.pt_solution, %struct.pt_solution* %pt, i64 0, i32 0, !dbg !11157
  br label %for.cond, !dbg !11156

for.cond:                                         ; preds = %cleanup, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !11147, metadata !DIExpression(DW_OP_deref)), !dbg !11153
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11148, metadata !DIExpression(DW_OP_deref)), !dbg !11153
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !11161
  %tobool = icmp eq i8 %call, 0, !dbg !11156
  br i1 %tobool, label %for.end, label %for.body, !dbg !11156

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %3, metadata !11147, metadata !DIExpression()), !dbg !11153
  %call1 = call fastcc %struct.variable_info* @get_varinfo(i32 %3) #7, !dbg !11163
  call void @llvm.dbg.value(metadata %struct.variable_info* %call1, metadata !11149, metadata !DIExpression()), !dbg !11164
  %is_artificial_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call1, i64 0, i32 1, !dbg !11165
  %bf.load = load i8, i8* %is_artificial_var, align 4, !dbg !11165
  %bf.clear = and i8 %bf.load, 1, !dbg !11165
  %tobool2 = icmp eq i8 %bf.clear, 0, !dbg !11167
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !11168

land.lhs.true:                                    ; preds = %for.body
  %bf.clear4 = and i8 %bf.load, 16, !dbg !11169
  %tobool6 = icmp eq i8 %bf.clear4, 0, !dbg !11170
  br i1 %tobool6, label %cleanup, label %if.end, !dbg !11171

if.end:                                           ; preds = %land.lhs.true, %for.body
  %decl = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call1, i64 0, i32 7, !dbg !11172
  %4 = bitcast %union.tree_node** %decl to i64**, !dbg !11172
  %5 = load i64*, i64** %4, align 8, !dbg !11172
  %bf.load7 = load i64, i64* %5, align 8, !dbg !11172
  %bf.cast91 = and i64 %bf.load7, 65535, !dbg !11173
  %cmp = icmp eq i64 %bf.cast91, 32, !dbg !11173
  %6 = bitcast i64* %5 to %struct.tree_decl_minimal*, !dbg !11174
  br i1 %cmp, label %if.then23, label %lor.lhs.false, !dbg !11174

lor.lhs.false:                                    ; preds = %if.end
  %cmp15 = icmp eq i64 %bf.cast91, 34, !dbg !11175
  br i1 %cmp15, label %if.then23, label %lor.lhs.false16, !dbg !11176

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %cmp22 = icmp eq i64 %bf.cast91, 36, !dbg !11177
  br i1 %cmp22, label %if.then23, label %cleanup, !dbg !11178

if.then23:                                        ; preds = %lor.lhs.false16, %lor.lhs.false, %if.end
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %6, i64 0, i32 2, !dbg !11179
  %7 = load i32, i32* %uid, align 4, !dbg !11179
  %call25 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %into, i32 %7) #6, !dbg !11180
  %bf.load26 = load i8, i8* %is_artificial_var, align 4, !dbg !11181
  %tobool29 = icmp slt i8 %bf.load26, 0, !dbg !11182
  br i1 %tobool29, label %if.then30, label %cleanup, !dbg !11183

if.then30:                                        ; preds = %if.then23
  %bf.load31 = load i8, i8* %2, align 8, !dbg !11184
  %bf.set = or i8 %bf.load31, 16, !dbg !11184
  store i8 %bf.set, i8* %2, align 8, !dbg !11184
  br label %cleanup, !dbg !11185

cleanup:                                          ; preds = %land.lhs.true, %lor.lhs.false16, %if.then30, %if.then23
  call void @llvm.dbg.value(metadata i32* %i, metadata !11147, metadata !DIExpression(DW_OP_deref)), !dbg !11153
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !11148, metadata !DIExpression(DW_OP_deref)), !dbg !11153
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !11161
  br label %for.cond, !dbg !11161, !llvm.loop !11186

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !11188
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !11188
  ret void, !dbg !11188
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.bitmap_head_def* @shared_bitmap_lookup(%struct.bitmap_head_def* %pt_vars) unnamed_addr #5 !dbg !11189 {
entry:
  %sbi = alloca %struct.shared_bitmap_info, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %pt_vars, metadata !11193, metadata !DIExpression()), !dbg !11196
  %0 = bitcast %struct.shared_bitmap_info* %sbi to i8*, !dbg !11197
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !11197
  %pt_vars1 = getelementptr inbounds %struct.shared_bitmap_info, %struct.shared_bitmap_info* %sbi, i64 0, i32 0, !dbg !11198
  store %struct.bitmap_head_def* %pt_vars, %struct.bitmap_head_def** %pt_vars1, align 8, !dbg !11199
  %call = tail call i32 @bitmap_hash(%struct.bitmap_head_def* %pt_vars) #6, !dbg !11200
  %hashcode = getelementptr inbounds %struct.shared_bitmap_info, %struct.shared_bitmap_info* %sbi, i64 0, i32 1, !dbg !11201
  store i32 %call, i32* %hashcode, align 8, !dbg !11202
  %1 = load %struct.htab*, %struct.htab** @shared_bitmap_table, align 8, !dbg !11203
  %call3 = call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* nonnull %0, i32 %call, i32 0) #6, !dbg !11204
  call void @llvm.dbg.value(metadata i8** %call3, metadata !11194, metadata !DIExpression()), !dbg !11196
  %tobool = icmp eq i8** %call3, null, !dbg !11205
  br i1 %tobool, label %cleanup, label %if.else, !dbg !11207

if.else:                                          ; preds = %entry
  %2 = bitcast i8** %call3 to %struct.shared_bitmap_info**, !dbg !11208
  %3 = load %struct.shared_bitmap_info*, %struct.shared_bitmap_info** %2, align 8, !dbg !11208
  %pt_vars4 = getelementptr inbounds %struct.shared_bitmap_info, %struct.shared_bitmap_info* %3, i64 0, i32 0, !dbg !11209
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %pt_vars4, align 8, !dbg !11209
  br label %cleanup, !dbg !11210

cleanup:                                          ; preds = %entry, %if.else
  %retval.0 = phi %struct.bitmap_head_def* [ %4, %if.else ], [ null, %entry ], !dbg !11211
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !11212
  ret %struct.bitmap_head_def* %retval.0, !dbg !11212
}

; Function Attrs: nounwind uwtable
define internal fastcc void @shared_bitmap_add(%struct.bitmap_head_def* %pt_vars) unnamed_addr #5 !dbg !11213 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %pt_vars, metadata !11217, metadata !DIExpression()), !dbg !11220
  %call = tail call i8* @xmalloc(i64 16) #6, !dbg !11221
  call void @llvm.dbg.value(metadata i8* %call, metadata !11219, metadata !DIExpression()), !dbg !11220
  %pt_vars1 = bitcast i8* %call to %struct.bitmap_head_def**, !dbg !11222
  store %struct.bitmap_head_def* %pt_vars, %struct.bitmap_head_def** %pt_vars1, align 8, !dbg !11223
  %call2 = tail call i32 @bitmap_hash(%struct.bitmap_head_def* %pt_vars) #6, !dbg !11224
  %hashcode = getelementptr inbounds i8, i8* %call, i64 8, !dbg !11225
  %0 = bitcast i8* %hashcode to i32*, !dbg !11225
  store i32 %call2, i32* %0, align 8, !dbg !11226
  %1 = load %struct.htab*, %struct.htab** @shared_bitmap_table, align 8, !dbg !11227
  %call4 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* %call, i32 %call2, i32 1) #6, !dbg !11228
  call void @llvm.dbg.value(metadata i8** %call4, metadata !11218, metadata !DIExpression()), !dbg !11220
  %2 = load i8*, i8** %call4, align 8, !dbg !11229
  %tobool = icmp eq i8* %2, null, !dbg !11229
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11229

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 4754, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !11229
  br label %cond.end, !dbg !11229

cond.end:                                         ; preds = %entry, %cond.true
  store i8* %call, i8** %call4, align 8, !dbg !11230
  ret void, !dbg !11231
}

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local %struct.ptr_info_def* @get_ptr_info(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @pointer_map_destroy(%struct.pointer_map_t*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_varinfo_t_heap_free(%struct.VEC_varinfo_t_heap** %vec_) unnamed_addr #0 !dbg !11232 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_varinfo_t_heap** @varmap, metadata !11236, metadata !DIExpression()), !dbg !11237
  %0 = load %struct.VEC_varinfo_t_heap*, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !11238
  %tobool = icmp eq %struct.VEC_varinfo_t_heap* %0, null, !dbg !11238
  br i1 %tobool, label %if.end, label %if.then, !dbg !11240

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_varinfo_t_heap* %0 to i8*, !dbg !11240
  tail call void @free(i8* nonnull %1) #6, !dbg !11238
  br label %if.end, !dbg !11238

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_varinfo_t_heap* null, %struct.VEC_varinfo_t_heap** @varmap, align 8, !dbg !11240
  ret void, !dbg !11240
}

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_has_body_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @create_function_info_for(%union.tree_node* %decl, i8* %name) unnamed_addr #5 !dbg !11241 {
entry:
  %is_varargs = alloca i8, align 1
  %tempname = alloca i8*, align 8
  %tempname39 = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !11243, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.value(metadata i8* %name, metadata !11244, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.value(metadata i8* %is_varargs, metadata !11248, metadata !DIExpression(DW_OP_deref)), !dbg !11262
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %is_varargs) #8, !dbg !11263
  call void @llvm.dbg.value(metadata i8 0, metadata !11248, metadata !DIExpression()), !dbg !11262
  store i8 0, i8* %is_varargs, align 1, !dbg !11264
  %call = tail call fastcc %struct.variable_info* @new_var_info(%union.tree_node* %decl, i8* %name) #7, !dbg !11265
  call void @llvm.dbg.value(metadata %struct.variable_info* %call, metadata !11245, metadata !DIExpression()), !dbg !11262
  %offset = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 3, !dbg !11266
  store i64 0, i64* %offset, align 8, !dbg !11267
  %size = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 4, !dbg !11268
  store i64 1, i64* %size, align 8, !dbg !11269
  call void @llvm.dbg.value(metadata i8* %is_varargs, metadata !11248, metadata !DIExpression(DW_OP_deref)), !dbg !11262
  %call1 = call fastcc i32 @count_num_arguments(%union.tree_node* %decl, i8* nonnull %is_varargs) #7, !dbg !11270
  %add = add i32 %call1, 1, !dbg !11271
  %conv = zext i32 %add to i64, !dbg !11270
  %fullsize = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 5, !dbg !11272
  store i64 %conv, i64* %fullsize, align 8, !dbg !11273
  %decl2 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 7, !dbg !11274
  %0 = load %union.tree_node*, %union.tree_node** %decl2, align 8, !dbg !11274
  call fastcc void @insert_vi_for_tree(%union.tree_node* %0, %struct.variable_info* %call) #7, !dbg !11275
  %1 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 0), align 4, !dbg !11276
  %inc = add i32 %1, 1, !dbg !11276
  store i32 %inc, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 0), align 4, !dbg !11276
  %2 = load i8, i8* %is_varargs, align 1, !dbg !11277
  call void @llvm.dbg.value(metadata i8 %2, metadata !11248, metadata !DIExpression()), !dbg !11262
  %tobool = icmp eq i8 %2, 0, !dbg !11277
  br i1 %tobool, label %if.end, label %if.then, !dbg !11279

if.then:                                          ; preds = %entry
  store i64 -1, i64* %fullsize, align 8, !dbg !11280
  store i64 -1, i64* %size, align 8, !dbg !11282
  %is_unknown_size_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 1, !dbg !11283
  %bf.load = load i8, i8* %is_unknown_size_var, align 4, !dbg !11284
  %bf.set = or i8 %bf.load, 4, !dbg !11284
  store i8 %bf.set, i8* %is_unknown_size_var, align 4, !dbg !11284
  br label %cleanup, !dbg !11285

if.end:                                           ; preds = %entry
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2, !dbg !11286
  %3 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !11286
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !11246, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.value(metadata i32 1, metadata !11247, metadata !DIExpression()), !dbg !11262
  %4 = bitcast i8** %tempname to i8*, !dbg !11287
  br label %for.cond, !dbg !11288

for.cond:                                         ; preds = %if.end25, %if.end
  %i.0 = phi i32 [ 1, %if.end ], [ %inc26, %if.end25 ], !dbg !11289
  %arg.0 = phi %union.tree_node* [ %3, %if.end ], [ %arg.1, %if.end25 ], !dbg !11262
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !11246, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !11247, metadata !DIExpression()), !dbg !11262
  %conv5 = zext i32 %i.0 to i64, !dbg !11290
  %5 = load i64, i64* %fullsize, align 8, !dbg !11291
  %cmp = icmp ugt i64 %5, %conv5, !dbg !11292
  br i1 %cmp, label %for.body, label %for.end, !dbg !11293

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !11294
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !11255, metadata !DIExpression()), !dbg !11287
  %tobool8 = icmp eq %union.tree_node* %arg.0, null, !dbg !11295
  %spec.select = select i1 %tobool8, %union.tree_node* %decl, %union.tree_node* %arg.0, !dbg !11297
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !11255, metadata !DIExpression()), !dbg !11287
  %sub = add i32 %i.0, -1, !dbg !11298
  call void @llvm.dbg.value(metadata i8** %tempname, metadata !11254, metadata !DIExpression(DW_OP_deref)), !dbg !11287
  %call11 = call i32 (i8**, i8*, ...) @asprintf(i8** nonnull %tempname, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0), i8* %name, i32 %sub) #6, !dbg !11299
  %6 = load i8*, i8** %tempname, align 8, !dbg !11300
  call void @llvm.dbg.value(metadata i8* %6, metadata !11254, metadata !DIExpression()), !dbg !11287
  %call12 = call i8* @ggc_alloc_string(i8* %6, i32 -1) #6, !dbg !11300
  call void @llvm.dbg.value(metadata i8* %call12, metadata !11253, metadata !DIExpression()), !dbg !11287
  %7 = load i8*, i8** %tempname, align 8, !dbg !11301
  call void @llvm.dbg.value(metadata i8* %7, metadata !11254, metadata !DIExpression()), !dbg !11287
  call void @free(i8* %7) #6, !dbg !11302
  %call13 = call fastcc %struct.variable_info* @new_var_info(%union.tree_node* %spec.select, i8* %call12) #7, !dbg !11303
  call void @llvm.dbg.value(metadata %struct.variable_info* %call13, metadata !11249, metadata !DIExpression()), !dbg !11287
  %offset15 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call13, i64 0, i32 3, !dbg !11304
  store i64 %conv5, i64* %offset15, align 8, !dbg !11305
  %size16 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call13, i64 0, i32 4, !dbg !11306
  store i64 1, i64* %size16, align 8, !dbg !11307
  %is_full_var = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call13, i64 0, i32 1, !dbg !11308
  %bf.load17 = load i8, i8* %is_full_var, align 4, !dbg !11309
  %bf.set19 = or i8 %bf.load17, 8, !dbg !11309
  store i8 %bf.set19, i8* %is_full_var, align 4, !dbg !11309
  %8 = load i64, i64* %fullsize, align 8, !dbg !11310
  %fullsize21 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call13, i64 0, i32 5, !dbg !11311
  store i64 %8, i64* %fullsize21, align 8, !dbg !11312
  call fastcc void @insert_into_field_list_sorted(%struct.variable_info* %call, %struct.variable_info* %call13) #7, !dbg !11313
  %9 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 0), align 4, !dbg !11314
  %inc22 = add i32 %9, 1, !dbg !11314
  store i32 %inc22, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 0), align 4, !dbg !11314
  br i1 %tobool8, label %if.end25, label %if.then24, !dbg !11315

if.then24:                                        ; preds = %for.body
  call fastcc void @insert_vi_for_tree(%union.tree_node* nonnull %arg.0, %struct.variable_info* %call13) #7, !dbg !11316
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11319
  %10 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !11319
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !11246, metadata !DIExpression()), !dbg !11262
  br label %if.end25, !dbg !11320

if.end25:                                         ; preds = %for.body, %if.then24
  %arg.1 = phi %union.tree_node* [ %10, %if.then24 ], [ null, %for.body ], !dbg !11262
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.1, metadata !11246, metadata !DIExpression()), !dbg !11262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !11321
  %inc26 = add i32 %i.0, 1, !dbg !11322
  call void @llvm.dbg.value(metadata i32 %inc26, metadata !11247, metadata !DIExpression()), !dbg !11262
  br label %for.cond, !dbg !11323, !llvm.loop !11324

for.end:                                          ; preds = %for.cond
  %conv5.lcssa = phi i64 [ %conv5, %for.cond ], !dbg !11290
  %.lcssa = phi i64 [ %5, %for.cond ], !dbg !11291
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !11247, metadata !DIExpression()), !dbg !11262
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 3, !dbg !11326
  %11 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !11326
  %cmp28 = icmp eq %union.tree_node* %11, null, !dbg !11327
  br i1 %cmp28, label %lor.lhs.false, label %if.then37, !dbg !11328

lor.lhs.false:                                    ; preds = %for.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11329
  %12 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !11329
  %13 = load %struct.tree_common*, %struct.tree_common** %12, align 8, !dbg !11329
  %type32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !11329
  %14 = bitcast %union.tree_node** %type32 to i64**, !dbg !11329
  %15 = load i64*, i64** %14, align 8, !dbg !11329
  %bf.load33 = load i64, i64* %15, align 8, !dbg !11329
  %bf.cast1 = and i64 %bf.load33, 65535, !dbg !11329
  %cmp35 = icmp eq i64 %bf.cast1, 19, !dbg !11329
  br i1 %cmp35, label %if.end69, label %if.then37, !dbg !11330

if.then37:                                        ; preds = %for.end, %lor.lhs.false
  %16 = bitcast i8** %tempname39 to i8*, !dbg !11331
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8, !dbg !11331
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !11261, metadata !DIExpression()), !dbg !11332
  %inc41 = add i64 %.lcssa, 1, !dbg !11333
  store i64 %inc41, i64* %fullsize, align 8, !dbg !11333
  %17 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !11334
  %tobool44 = icmp eq %union.tree_node* %17, null, !dbg !11334
  br i1 %tobool44, label %if.end48, label %if.then45, !dbg !11336

if.then45:                                        ; preds = %if.then37
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !11261, metadata !DIExpression()), !dbg !11332
  br label %if.end48, !dbg !11337

if.end48:                                         ; preds = %if.then37, %if.then45
  %resultdecl.0 = phi %union.tree_node* [ %17, %if.then45 ], [ %decl, %if.then37 ], !dbg !11332
  call void @llvm.dbg.value(metadata %union.tree_node* %resultdecl.0, metadata !11261, metadata !DIExpression()), !dbg !11332
  call void @llvm.dbg.value(metadata i8** %tempname39, metadata !11260, metadata !DIExpression(DW_OP_deref)), !dbg !11332
  %call49 = call i32 (i8**, i8*, ...) @asprintf(i8** nonnull %tempname39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i64 0, i64 0), i8* %name) #6, !dbg !11338
  %18 = load i8*, i8** %tempname39, align 8, !dbg !11339
  call void @llvm.dbg.value(metadata i8* %18, metadata !11260, metadata !DIExpression()), !dbg !11332
  %call50 = call i8* @ggc_alloc_string(i8* %18, i32 -1) #6, !dbg !11339
  call void @llvm.dbg.value(metadata i8* %call50, metadata !11259, metadata !DIExpression()), !dbg !11332
  %19 = load i8*, i8** %tempname39, align 8, !dbg !11340
  call void @llvm.dbg.value(metadata i8* %19, metadata !11260, metadata !DIExpression()), !dbg !11332
  call void @free(i8* %19) #6, !dbg !11341
  %call51 = call fastcc %struct.variable_info* @new_var_info(%union.tree_node* %resultdecl.0, i8* %call50) #7, !dbg !11342
  call void @llvm.dbg.value(metadata %struct.variable_info* %call51, metadata !11256, metadata !DIExpression()), !dbg !11332
  %offset53 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call51, i64 0, i32 3, !dbg !11343
  store i64 %conv5.lcssa, i64* %offset53, align 8, !dbg !11344
  %size54 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call51, i64 0, i32 4, !dbg !11345
  store i64 1, i64* %size54, align 8, !dbg !11346
  %20 = load i64, i64* %fullsize, align 8, !dbg !11347
  %fullsize56 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call51, i64 0, i32 5, !dbg !11348
  store i64 %20, i64* %fullsize56, align 8, !dbg !11349
  %is_full_var57 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call51, i64 0, i32 1, !dbg !11350
  %bf.load58 = load i8, i8* %is_full_var57, align 4, !dbg !11351
  %bf.set60 = or i8 %bf.load58, 8, !dbg !11351
  store i8 %bf.set60, i8* %is_full_var57, align 4, !dbg !11351
  call fastcc void @insert_into_field_list_sorted(%struct.variable_info* %call, %struct.variable_info* %call51) #7, !dbg !11352
  %21 = load i32, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 0), align 4, !dbg !11353
  %inc61 = add i32 %21, 1, !dbg !11353
  store i32 %inc61, i32* getelementptr inbounds (%struct.constraint_stats, %struct.constraint_stats* @stats, i64 0, i32 0), align 4, !dbg !11353
  %22 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !11354
  %tobool64 = icmp eq %union.tree_node* %22, null, !dbg !11354
  br i1 %tobool64, label %if.end68, label %if.then65, !dbg !11356

if.then65:                                        ; preds = %if.end48
  call fastcc void @insert_vi_for_tree(%union.tree_node* nonnull %22, %struct.variable_info* %call51) #7, !dbg !11357
  br label %if.end68, !dbg !11357

if.end68:                                         ; preds = %if.end48, %if.then65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8, !dbg !11358
  br label %if.end69, !dbg !11359

if.end69:                                         ; preds = %if.end68, %lor.lhs.false
  br label %cleanup, !dbg !11360

cleanup:                                          ; preds = %if.end69, %if.then
  %retval.0.in = getelementptr inbounds %struct.variable_info, %struct.variable_info* %call, i64 0, i32 0, !dbg !11262
  %retval.0 = load i32, i32* %retval.0.in, align 8, !dbg !11262
  call void @llvm.dbg.value(metadata i8* %is_varargs, metadata !11248, metadata !DIExpression(DW_OP_deref)), !dbg !11262
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %is_varargs) #8, !dbg !11361
  ret i32 %retval.0, !dbg !11361
}

declare dso_local i8* @cgraph_node_name(%struct.cgraph_node*) local_unnamed_addr #2

declare dso_local void @push_cfun(%struct.function*) local_unnamed_addr #2

declare dso_local void @pop_cfun() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @count_num_arguments(%union.tree_node* %decl, i8* %is_varargs) unnamed_addr #5 !dbg !11362 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !11366, metadata !DIExpression()), !dbg !11370
  call void @llvm.dbg.value(metadata i8* %is_varargs, metadata !11367, metadata !DIExpression()), !dbg !11370
  call void @llvm.dbg.value(metadata i32 0, metadata !11368, metadata !DIExpression()), !dbg !11370
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2, !dbg !11371
  br label %for.cond, !dbg !11373

for.cond:                                         ; preds = %for.body, %entry
  %num.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !11370
  %t.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain, %for.body ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !11374
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !11369, metadata !DIExpression()), !dbg !11370
  call void @llvm.dbg.value(metadata i32 %num.0, metadata !11368, metadata !DIExpression()), !dbg !11370
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !11375
  br i1 %tobool, label %for.end, label %for.body, !dbg !11375

for.body:                                         ; preds = %for.cond
  %inc = add i32 %num.0, 1, !dbg !11376
  call void @llvm.dbg.value(metadata i32 %inc, metadata !11368, metadata !DIExpression()), !dbg !11370
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11378
  br label %for.cond, !dbg !11379, !llvm.loop !11380

for.end:                                          ; preds = %for.cond
  %num.0.lcssa = phi i32 [ %num.0, %for.cond ], !dbg !11370
  call void @llvm.dbg.value(metadata i32 %num.0.lcssa, metadata !11368, metadata !DIExpression()), !dbg !11370
  call void @llvm.dbg.value(metadata i32 %num.0.lcssa, metadata !11368, metadata !DIExpression()), !dbg !11370
  call void @llvm.dbg.value(metadata i32 %num.0.lcssa, metadata !11368, metadata !DIExpression()), !dbg !11370
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11382
  %0 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !11382
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !11382
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 1, !dbg !11382
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !11384
  br label %for.cond3, !dbg !11387

for.cond3:                                        ; preds = %for.inc6, %for.end
  %t.1.in = phi %union.tree_node** [ %values, %for.end ], [ %chain8, %for.inc6 ]
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !11388
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !11369, metadata !DIExpression()), !dbg !11370
  %cond = icmp eq %union.tree_node* %t.1, null, !dbg !11389
  br i1 %cond, label %if.then11.loopexit, label %for.body5, !dbg !11389

for.body5:                                        ; preds = %for.cond3
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11390
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !11390
  %cmp = icmp eq %union.tree_node* %4, %2, !dbg !11391
  br i1 %cmp, label %for.end9, label %for.inc6, !dbg !11392

for.inc6:                                         ; preds = %for.body5
  %chain8 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11393
  br label %for.cond3, !dbg !11394, !llvm.loop !11395

for.end9:                                         ; preds = %for.body5
  br label %if.end12, !dbg !11397

if.then11.loopexit:                               ; preds = %for.cond3
  store i8 1, i8* %is_varargs, align 1, !dbg !11398
  br label %if.end12, !dbg !11400

if.end12:                                         ; preds = %for.end9, %if.then11.loopexit
  ret i32 %num.0.lcssa, !dbg !11401
}

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_into_field_list_sorted(%struct.variable_info* %base, %struct.variable_info* %field) unnamed_addr #5 !dbg !11402 {
entry:
  call void @llvm.dbg.value(metadata %struct.variable_info* %base, metadata !11404, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata %struct.variable_info* %field, metadata !11405, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata %struct.variable_info* %base, metadata !11406, metadata !DIExpression()), !dbg !11408
  %next = getelementptr inbounds %struct.variable_info, %struct.variable_info* %base, i64 0, i32 2, !dbg !11409
  %0 = load %struct.variable_info*, %struct.variable_info** %next, align 8, !dbg !11409
  call void @llvm.dbg.value(metadata %struct.variable_info* %0, metadata !11407, metadata !DIExpression()), !dbg !11408
  %cmp = icmp eq %struct.variable_info* %0, null, !dbg !11410
  br i1 %cmp, label %if.then, label %while.cond.preheader, !dbg !11412

while.cond.preheader:                             ; preds = %entry
  %offset = getelementptr inbounds %struct.variable_info, %struct.variable_info* %field, i64 0, i32 3, !dbg !11413
  br label %while.cond, !dbg !11417

if.then:                                          ; preds = %entry
  store %struct.variable_info* %field, %struct.variable_info** %next, align 8, !dbg !11418
  %next2 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %field, i64 0, i32 2, !dbg !11420
  store %struct.variable_info* null, %struct.variable_info** %next2, align 8, !dbg !11421
  br label %if.end10, !dbg !11422

while.cond:                                       ; preds = %while.cond.preheader, %if.end
  %prev.0 = phi %struct.variable_info* [ %curr.0, %if.end ], [ %base, %while.cond.preheader ], !dbg !11408
  %curr.0 = phi %struct.variable_info* [ %3, %if.end ], [ %0, %while.cond.preheader ], !dbg !11408
  call void @llvm.dbg.value(metadata %struct.variable_info* %curr.0, metadata !11407, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata %struct.variable_info* %prev.0, metadata !11406, metadata !DIExpression()), !dbg !11408
  %tobool = icmp eq %struct.variable_info* %curr.0, null, !dbg !11417
  br i1 %tobool, label %while.end, label %while.body, !dbg !11417

while.body:                                       ; preds = %while.cond
  %1 = load i64, i64* %offset, align 8, !dbg !11413
  %offset3 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.0, i64 0, i32 3, !dbg !11423
  %2 = load i64, i64* %offset3, align 8, !dbg !11423
  %cmp4 = icmp ugt i64 %1, %2, !dbg !11424
  br i1 %cmp4, label %if.end, label %while.end, !dbg !11425

if.end:                                           ; preds = %while.body
  call void @llvm.dbg.value(metadata %struct.variable_info* %curr.0, metadata !11406, metadata !DIExpression()), !dbg !11408
  %next6 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %curr.0, i64 0, i32 2, !dbg !11426
  %3 = load %struct.variable_info*, %struct.variable_info** %next6, align 8, !dbg !11426
  call void @llvm.dbg.value(metadata %struct.variable_info* %3, metadata !11407, metadata !DIExpression()), !dbg !11408
  br label %while.cond, !dbg !11417, !llvm.loop !11427

while.end:                                        ; preds = %while.body, %while.cond
  %prev.0.lcssa = phi %struct.variable_info* [ %prev.0, %while.body ], [ %prev.0, %while.cond ], !dbg !11408
  call void @llvm.dbg.value(metadata %struct.variable_info* %prev.0.lcssa, metadata !11406, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata %struct.variable_info* %prev.0.lcssa, metadata !11406, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata %struct.variable_info* %prev.0.lcssa, metadata !11406, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata %struct.variable_info* %prev.0.lcssa, metadata !11406, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata %struct.variable_info* %prev.0.lcssa, metadata !11406, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata %struct.variable_info* %prev.0.lcssa, metadata !11406, metadata !DIExpression()), !dbg !11408
  %next7 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %prev.0.lcssa, i64 0, i32 2, !dbg !11429
  %4 = bitcast %struct.variable_info** %next7 to i64*, !dbg !11429
  %5 = load i64, i64* %4, align 8, !dbg !11429
  %next8 = getelementptr inbounds %struct.variable_info, %struct.variable_info* %field, i64 0, i32 2, !dbg !11430
  %6 = bitcast %struct.variable_info** %next8 to i64*, !dbg !11431
  store i64 %5, i64* %6, align 8, !dbg !11431
  store %struct.variable_info* %field, %struct.variable_info** %next7, align 8, !dbg !11432
  br label %if.end10

if.end10:                                         ; preds = %while.end, %if.then
  ret void, !dbg !11433
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2339, !2340, !2341}
!llvm.ident = !{!2342}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "heapvar_for_stmt", scope: !2, file: !3, line: 165, type: !1514, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !659, globals: !2188, nameTableKind: None)
!3 = !DIFile(filename: "tree-ssa-structalias.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !11, !139, !334, !340, !345, !350, !368, !375, !382, !389, !565, !604, !630, !636}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 382, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10}
!8 = !DIEnumerator(name: "SCALAR", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "DEREF", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "ADDRESSOF", value: 2, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !12, line: 7, baseType: !6, size: 32, elements: !13)
!12 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138}
!14 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!20 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!21 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!22 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!23 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!24 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!25 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!26 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!27 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!28 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!29 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!30 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!31 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!32 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!33 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!34 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!35 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!36 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!37 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!38 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!39 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!40 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!41 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!42 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!43 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!44 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!45 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!46 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!47 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!48 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!49 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!50 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!51 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!52 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!53 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!54 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!55 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!56 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!57 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!58 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!59 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!60 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!61 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!62 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!63 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!64 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!65 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!66 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!67 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!68 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!69 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!70 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!71 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!72 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!73 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!74 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!75 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!76 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!77 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!78 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!79 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!80 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!81 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!82 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!83 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!84 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!85 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!86 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!87 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!88 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!89 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!90 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!91 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!92 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!93 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!94 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!95 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!96 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!97 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!98 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!99 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!100 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!101 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!102 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!104 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!105 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!106 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!107 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!108 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!109 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!110 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!111 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!112 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!113 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!114 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!115 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!116 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!117 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!118 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!119 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!120 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!121 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!122 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!123 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!124 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!125 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!126 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!127 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!128 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!134 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!137 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!138 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !140, line: 39, baseType: !6, size: 32, elements: !141)
!140 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!141 = !{!142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333}
!142 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!145 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!146 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!147 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!148 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!149 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!150 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!151 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!152 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!153 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!154 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!155 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!156 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!157 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!158 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!159 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!160 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!161 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!162 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!163 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!164 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!165 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!166 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!167 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!168 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!169 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!170 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!171 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!172 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!173 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!174 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!175 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!176 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!177 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!178 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!179 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!180 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!181 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!182 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!183 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!184 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!185 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!186 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!187 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!188 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!189 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!190 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!191 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!192 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!193 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!194 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!195 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!196 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!197 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!198 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!199 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!200 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!201 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!202 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!203 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!204 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!205 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!206 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!207 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!208 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!209 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!210 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!211 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!212 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!213 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!214 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!216 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!217 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!218 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!219 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!220 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!221 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!222 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!223 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!224 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!225 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!226 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!227 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!228 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!229 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!230 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!231 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!232 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!234 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!235 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!236 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!237 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!238 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!239 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!240 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!241 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!242 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!243 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!244 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!245 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!246 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!247 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!248 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!249 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!250 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!251 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!252 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!253 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!254 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!255 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!256 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!257 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!258 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!259 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!260 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!261 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!262 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!263 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!264 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!265 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!266 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!267 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!268 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!269 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!270 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!271 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!272 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!273 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!274 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!275 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!276 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!277 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!278 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!279 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!280 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!281 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!282 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!283 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!284 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!285 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!286 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!287 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!288 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!289 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!290 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!291 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!292 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!293 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!294 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!301 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!302 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!303 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!304 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!305 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!306 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!307 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!308 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!309 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!310 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!311 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!322 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!323 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!324 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!325 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!326 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!327 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!328 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!329 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!330 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!331 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!332 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!333 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!334 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !335, line: 363, baseType: !6, size: 32, elements: !336)
!335 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!336 = !{!337, !338, !339}
!337 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!338 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!339 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !335, line: 355, baseType: !6, size: 32, elements: !341)
!341 = !{!342, !343, !344}
!342 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!343 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!344 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !346, line: 474, baseType: !6, size: 32, elements: !347)
!346 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!347 = !{!348, !349}
!348 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!349 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!350 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !140, line: 280, baseType: !6, size: 32, elements: !351)
!351 = !{!352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!352 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !140, line: 1817, baseType: !6, size: 32, elements: !369)
!369 = !{!370, !371, !372, !373, !374}
!370 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!375 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !140, line: 1805, baseType: !6, size: 32, elements: !376)
!376 = !{!377, !378, !379, !380, !381}
!377 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!378 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !383, line: 104, baseType: !6, size: 32, elements: !384)
!383 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!384 = !{!385, !386, !387, !388}
!385 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!386 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!387 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!388 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!389 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !390, line: 74, baseType: !6, size: 32, elements: !391)
!390 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!391 = !{!392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564}
!392 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!393 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!394 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!395 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!396 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!397 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!398 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!399 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!400 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!401 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!564 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!565 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !566, line: 51, baseType: !6, size: 32, elements: !567)
!566 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!567 = !{!568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603}
!568 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!569 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!570 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!571 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!572 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!573 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!574 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!575 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!576 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!577 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!578 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!579 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!580 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!581 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!582 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!583 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!584 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!585 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!586 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!587 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!588 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!589 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!590 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!591 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!592 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!593 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!594 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!595 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!596 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!597 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!598 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!599 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!600 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!601 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!602 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!603 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !566, line: 727, baseType: !6, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629}
!606 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!607 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!608 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!609 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!610 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!611 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!612 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!613 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!614 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!615 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!616 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!617 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!618 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!619 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!620 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!621 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!622 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!623 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!624 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!625 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!626 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!627 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!628 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!629 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!630 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !566, line: 80, baseType: !6, size: 32, elements: !631)
!631 = !{!632, !633, !634, !635}
!632 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!633 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!634 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!635 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!636 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !637, line: 309, baseType: !6, size: 32, elements: !638)
!637 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!638 = !{!639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658}
!639 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!640 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!641 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!642 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!643 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!644 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!645 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!646 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!647 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!648 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!649 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!650 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!651 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!652 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!653 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!654 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!655 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!656 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!657 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!658 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!659 = !{!660, !661, !662, !663, !666, !667, !669, !670, !139, !682, !685, !699, !2053, !730, !711, !6, !2060, !2074, !2075, !2076, !2096, !732, !2098, !2100, !853, !684, !1051, !2101, !1085, !664, !630, !2103, !2116, !2121, !2125, !2127, !2148, !1598, !2149, !2158, !2171, !2179, !2180, !2181, !2186, !2187}
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!662 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !665)
!669 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "constraint_t", file: !3, line: 187, baseType: !671)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constraint", file: !3, line: 418, size: 256, elements: !673)
!673 = !{!674, !681}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !672, file: !3, line: 420, baseType: !675, size: 128)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constraint_expr", file: !3, line: 386, size: 128, elements: !676)
!676 = !{!677, !679, !680}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !675, file: !3, line: 389, baseType: !678, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "constraint_expr_type", file: !3, line: 382, baseType: !5)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !675, file: !3, line: 392, baseType: !6, size: 32, offset: 32)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !675, file: !3, line: 399, baseType: !669, size: 64, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !672, file: !3, line: 421, baseType: !675, size: 128, offset: 128)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !683, line: 46, baseType: !684)
!683 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!684 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constraint_t_heap", file: !3, line: 190, baseType: !687)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constraint_t_heap", file: !3, line: 190, size: 128, elements: !688)
!688 = !{!689}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !687, file: !3, line: 190, baseType: !690, size: 128)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constraint_t_base", file: !3, line: 189, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constraint_t_base", file: !3, line: 189, size: 128, elements: !692)
!692 = !{!693, !694, !695}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !691, file: !3, line: 189, baseType: !6, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !691, file: !3, line: 189, baseType: !6, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !691, file: !3, line: 189, baseType: !696, size: 64, offset: 64)
!696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !670, size: 64, elements: !697)
!697 = !{!698}
!698 = !DISubrange(count: 1)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_varinfo_t_heap", file: !3, line: 275, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_varinfo_t_heap", file: !3, line: 275, size: 128, elements: !702)
!702 = !{!703}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !701, file: !3, line: 275, baseType: !704, size: 128)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_varinfo_t_base", file: !3, line: 273, baseType: !705)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_varinfo_t_base", file: !3, line: 273, size: 128, elements: !706)
!706 = !{!707, !708, !709}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !705, file: !3, line: 273, baseType: !6, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !705, file: !3, line: 273, baseType: !6, size: 32, offset: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !705, file: !3, line: 273, baseType: !710, size: 64, offset: 64)
!710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 64, elements: !697)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "varinfo_t", file: !3, line: 263, baseType: !712)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "variable_info", file: !3, line: 208, size: 576, elements: !714)
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !2051, !2052}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !713, file: !3, line: 211, baseType: !6, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "is_artificial_var", scope: !713, file: !3, line: 215, baseType: !6, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "is_special_var", scope: !713, file: !3, line: 219, baseType: !6, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "is_unknown_size_var", scope: !713, file: !3, line: 222, baseType: !6, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "is_full_var", scope: !713, file: !3, line: 225, baseType: !6, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "is_heap_var", scope: !713, file: !3, line: 228, baseType: !6, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "is_restrict_var", scope: !713, file: !3, line: 231, baseType: !6, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "may_have_pointers", scope: !713, file: !3, line: 234, baseType: !6, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "is_global_var", scope: !713, file: !3, line: 237, baseType: !6, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !713, file: !3, line: 240, baseType: !712, size: 64, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !713, file: !3, line: 243, baseType: !684, size: 64, offset: 128)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !713, file: !3, line: 246, baseType: !684, size: 64, offset: 192)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "fullsize", scope: !713, file: !3, line: 249, baseType: !684, size: 64, offset: 256)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !713, file: !3, line: 252, baseType: !667, size: 64, offset: 320)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !713, file: !3, line: 255, baseType: !730, size: 64, offset: 384)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !731, line: 56, baseType: !732)
!731 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !140, line: 3371, size: 1792, elements: !734)
!734 = !{!735, !768, !774, !785, !804, !815, !820, !827, !833, !846, !858, !896, !1386, !1414, !1431, !1432, !1437, !1446, !1452, !1457, !1461, !1465, !1702, !1749, !1755, !1761, !1768, !1781, !1795, !1812, !1824, !1846, !1861, !2033}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !733, file: !140, line: 3372, baseType: !736, size: 64)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !140, line: 360, size: 64, elements: !737)
!737 = !{!738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !736, file: !140, line: 361, baseType: !6, size: 16, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !736, file: !140, line: 363, baseType: !6, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !736, file: !140, line: 364, baseType: !6, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !736, file: !140, line: 365, baseType: !6, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !736, file: !140, line: 366, baseType: !6, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !736, file: !140, line: 367, baseType: !6, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !736, file: !140, line: 368, baseType: !6, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !736, file: !140, line: 369, baseType: !6, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !736, file: !140, line: 370, baseType: !6, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !736, file: !140, line: 372, baseType: !6, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !736, file: !140, line: 373, baseType: !6, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !736, file: !140, line: 374, baseType: !6, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !736, file: !140, line: 375, baseType: !6, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !736, file: !140, line: 376, baseType: !6, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !736, file: !140, line: 377, baseType: !6, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !736, file: !140, line: 378, baseType: !6, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !736, file: !140, line: 379, baseType: !6, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !736, file: !140, line: 381, baseType: !6, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !736, file: !140, line: 382, baseType: !6, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !736, file: !140, line: 383, baseType: !6, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !736, file: !140, line: 384, baseType: !6, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !736, file: !140, line: 385, baseType: !6, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !736, file: !140, line: 386, baseType: !6, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !736, file: !140, line: 387, baseType: !6, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !736, file: !140, line: 388, baseType: !6, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !736, file: !140, line: 390, baseType: !6, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !736, file: !140, line: 391, baseType: !6, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !736, file: !140, line: 392, baseType: !6, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !736, file: !140, line: 394, baseType: !6, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !736, file: !140, line: 399, baseType: !6, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !733, file: !140, line: 3373, baseType: !769, size: 192)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !140, line: 402, size: 192, elements: !770)
!770 = !{!771, !772, !773}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !769, file: !140, line: 403, baseType: !736, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !769, file: !140, line: 404, baseType: !730, size: 64, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !769, file: !140, line: 405, baseType: !730, size: 64, offset: 128)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !733, file: !140, line: 3374, baseType: !775, size: 320)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !140, line: 1384, size: 320, elements: !776)
!776 = !{!777, !778}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !775, file: !140, line: 1385, baseType: !769, size: 192)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !775, file: !140, line: 1386, baseType: !779, size: 128, offset: 192)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !780, line: 58, baseType: !781)
!780 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !780, line: 54, size: 128, elements: !782)
!782 = !{!783, !784}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !781, file: !780, line: 56, baseType: !684, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !781, file: !780, line: 57, baseType: !669, size: 64, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !733, file: !140, line: 3375, baseType: !786, size: 256)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !140, line: 1397, size: 256, elements: !787)
!787 = !{!788, !789}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !786, file: !140, line: 1398, baseType: !769, size: 192)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !786, file: !140, line: 1399, baseType: !790, size: 64, offset: 192)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !792, line: 52, size: 256, elements: !793)
!792 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!793 = !{!794, !795, !796, !797, !798, !799, !800}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !791, file: !792, line: 56, baseType: !6, size: 2, flags: DIFlagBitField, extraData: i64 0)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !791, file: !792, line: 57, baseType: !6, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !791, file: !792, line: 58, baseType: !6, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !791, file: !792, line: 59, baseType: !6, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !791, file: !792, line: 60, baseType: !6, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !791, file: !792, line: 61, baseType: !6, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !791, file: !792, line: 62, baseType: !801, size: 192, offset: 64)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 192, elements: !802)
!802 = !{!803}
!803 = !DISubrange(count: 3)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !733, file: !140, line: 3376, baseType: !805, size: 256)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !140, line: 1408, size: 256, elements: !806)
!806 = !{!807, !808}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !805, file: !140, line: 1409, baseType: !769, size: 192)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !805, file: !140, line: 1410, baseType: !809, size: 64, offset: 192)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !811, line: 27, size: 192, elements: !812)
!811 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!812 = !{!813, !814}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !810, file: !811, line: 29, baseType: !779, size: 128)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !810, file: !811, line: 30, baseType: !11, size: 32, offset: 128)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !733, file: !140, line: 3377, baseType: !816, size: 256)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !140, line: 1437, size: 256, elements: !817)
!817 = !{!818, !819}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !816, file: !140, line: 1438, baseType: !769, size: 192)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !816, file: !140, line: 1439, baseType: !730, size: 64, offset: 192)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !733, file: !140, line: 3378, baseType: !821, size: 256)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !140, line: 1418, size: 256, elements: !822)
!822 = !{!823, !824, !825}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !821, file: !140, line: 1419, baseType: !769, size: 192)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !821, file: !140, line: 1420, baseType: !662, size: 32, offset: 192)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !821, file: !140, line: 1421, baseType: !826, size: 8, offset: 224)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 8, elements: !697)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !733, file: !140, line: 3379, baseType: !828, size: 320)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !140, line: 1428, size: 320, elements: !829)
!829 = !{!830, !831, !832}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !828, file: !140, line: 1429, baseType: !769, size: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !828, file: !140, line: 1430, baseType: !730, size: 64, offset: 192)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !828, file: !140, line: 1431, baseType: !730, size: 64, offset: 256)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !733, file: !140, line: 3380, baseType: !834, size: 320)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !140, line: 1460, size: 320, elements: !835)
!835 = !{!836, !837}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !834, file: !140, line: 1461, baseType: !769, size: 192)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !834, file: !140, line: 1462, baseType: !838, size: 128, offset: 192)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !839, line: 31, size: 128, elements: !840)
!839 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!840 = !{!841, !844, !845}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !838, file: !839, line: 32, baseType: !842, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !838, file: !839, line: 33, baseType: !6, size: 32, offset: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !838, file: !839, line: 34, baseType: !6, size: 32, offset: 96)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !733, file: !140, line: 3381, baseType: !847, size: 384)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !140, line: 2507, size: 384, elements: !848)
!848 = !{!849, !850, !855, !856, !857}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !847, file: !140, line: 2508, baseType: !769, size: 192)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !847, file: !140, line: 2509, baseType: !851, size: 32, offset: 192)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !852, line: 58, baseType: !853)
!852 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!853 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !854, line: 44, baseType: !6)
!854 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!855 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !847, file: !140, line: 2510, baseType: !6, size: 32, offset: 224)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !847, file: !140, line: 2511, baseType: !730, size: 64, offset: 256)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !847, file: !140, line: 2512, baseType: !730, size: 64, offset: 320)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !733, file: !140, line: 3382, baseType: !859, size: 896)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !140, line: 2652, size: 896, elements: !860)
!860 = !{!861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !859, file: !140, line: 2653, baseType: !847, size: 384)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !859, file: !140, line: 2654, baseType: !730, size: 64, offset: 384)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !859, file: !140, line: 2656, baseType: !6, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !859, file: !140, line: 2658, baseType: !6, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !859, file: !140, line: 2659, baseType: !6, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !859, file: !140, line: 2660, baseType: !6, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !859, file: !140, line: 2661, baseType: !6, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !859, file: !140, line: 2662, baseType: !6, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !859, file: !140, line: 2663, baseType: !6, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !859, file: !140, line: 2664, baseType: !6, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !859, file: !140, line: 2666, baseType: !6, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !859, file: !140, line: 2667, baseType: !6, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !859, file: !140, line: 2668, baseType: !6, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !859, file: !140, line: 2669, baseType: !6, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !859, file: !140, line: 2670, baseType: !6, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !859, file: !140, line: 2671, baseType: !6, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !859, file: !140, line: 2672, baseType: !6, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !859, file: !140, line: 2673, baseType: !6, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !859, file: !140, line: 2674, baseType: !6, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !859, file: !140, line: 2678, baseType: !6, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !859, file: !140, line: 2682, baseType: !6, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !859, file: !140, line: 2685, baseType: !6, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !859, file: !140, line: 2688, baseType: !6, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !859, file: !140, line: 2690, baseType: !6, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !859, file: !140, line: 2692, baseType: !6, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !859, file: !140, line: 2695, baseType: !6, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !859, file: !140, line: 2698, baseType: !6, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !859, file: !140, line: 2703, baseType: !6, size: 32, offset: 512)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !859, file: !140, line: 2705, baseType: !730, size: 64, offset: 576)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !859, file: !140, line: 2706, baseType: !730, size: 64, offset: 640)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !859, file: !140, line: 2707, baseType: !730, size: 64, offset: 704)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !859, file: !140, line: 2708, baseType: !730, size: 64, offset: 768)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !859, file: !140, line: 2711, baseType: !894, size: 64, offset: 832)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !140, line: 2711, flags: DIFlagFwdDecl)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !733, file: !140, line: 3383, baseType: !897, size: 960)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !140, line: 2756, size: 960, elements: !898)
!898 = !{!899, !900}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !897, file: !140, line: 2757, baseType: !859, size: 896)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !897, file: !140, line: 2758, baseType: !901, size: 64, offset: 896)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !731, line: 50, baseType: !902)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !904, line: 240, size: 384, elements: !905)
!904 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!905 = !{!906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !903, file: !904, line: 242, baseType: !6, size: 16, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !903, file: !904, line: 245, baseType: !6, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !903, file: !904, line: 252, baseType: !6, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !903, file: !904, line: 257, baseType: !6, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !903, file: !904, line: 265, baseType: !6, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !903, file: !904, line: 277, baseType: !6, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !903, file: !904, line: 291, baseType: !6, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !903, file: !904, line: 298, baseType: !6, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !903, file: !904, line: 305, baseType: !6, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !903, file: !904, line: 310, baseType: !6, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !903, file: !904, line: 321, baseType: !917, size: 320, offset: 64)
!917 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !904, line: 315, size: 320, elements: !918)
!918 = !{!919, !1319, !1321, !1384, !1385}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !917, file: !904, line: 316, baseType: !920, size: 64)
!920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 64, elements: !697)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !904, line: 183, baseType: !922)
!922 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !904, line: 166, size: 64, elements: !923)
!923 = !{!924, !925, !926, !927, !928, !936, !937, !949, !952, !1012, !1013, !1296, !1309, !1316}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !922, file: !904, line: 168, baseType: !662, size: 32)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !922, file: !904, line: 169, baseType: !6, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !922, file: !904, line: 170, baseType: !667, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !922, file: !904, line: 171, baseType: !901, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !922, file: !904, line: 172, baseType: !929, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !731, line: 53, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !904, line: 359, size: 128, elements: !932)
!932 = !{!933, !934}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !931, file: !904, line: 360, baseType: !662, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !931, file: !904, line: 361, baseType: !935, size: 64, offset: 64)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 64, elements: !697)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !922, file: !904, line: 173, baseType: !11, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !922, file: !904, line: 174, baseType: !938, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !904, line: 133, baseType: !939)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !904, line: 115, size: 32, elements: !940)
!940 = !{!941, !942, !943, !944, !945, !946, !947, !948}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !939, file: !904, line: 118, baseType: !6, size: 8, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !939, file: !904, line: 120, baseType: !6, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !939, file: !904, line: 121, baseType: !6, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !939, file: !904, line: 123, baseType: !6, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !939, file: !904, line: 125, baseType: !6, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !939, file: !904, line: 127, baseType: !6, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !939, file: !904, line: 130, baseType: !6, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !939, file: !904, line: 132, baseType: !6, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !922, file: !904, line: 175, baseType: !950, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !904, line: 175, flags: DIFlagFwdDecl)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !922, file: !904, line: 176, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !955, line: 75, size: 256, elements: !956)
!955 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!956 = !{!957, !971, !972, !973}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !954, file: !955, line: 76, baseType: !958, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !955, line: 68, baseType: !960)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !955, line: 63, size: 320, elements: !961)
!961 = !{!962, !964, !965, !966}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !960, file: !955, line: 64, baseType: !963, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !960, file: !955, line: 65, baseType: !963, size: 64, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !960, file: !955, line: 66, baseType: !6, size: 32, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !960, file: !955, line: 67, baseType: !967, size: 128, offset: 192)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !968, size: 128, elements: !969)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !955, line: 29, baseType: !684)
!969 = !{!970}
!970 = !DISubrange(count: 2)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !954, file: !955, line: 77, baseType: !958, size: 64, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !954, file: !955, line: 78, baseType: !6, size: 32, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !954, file: !955, line: 79, baseType: !974, size: 64, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !955, line: 49, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !955, line: 45, size: 832, elements: !977)
!977 = !{!978, !979, !980}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !976, file: !955, line: 46, baseType: !963, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !976, file: !955, line: 47, baseType: !953, size: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !976, file: !955, line: 48, baseType: !981, size: 704, offset: 128)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !982, line: 164, size: 704, elements: !983)
!982 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!983 = !{!984, !985, !995, !996, !997, !998, !999, !1000, !1004, !1008, !1009, !1010, !1011}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !981, file: !982, line: 166, baseType: !669, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !981, file: !982, line: 167, baseType: !986, size: 64, offset: 64)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !982, line: 157, size: 192, elements: !988)
!988 = !{!989, !990, !991}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !987, file: !982, line: 159, baseType: !664, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !987, file: !982, line: 160, baseType: !986, size: 64, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !987, file: !982, line: 161, baseType: !992, size: 32, offset: 128)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 32, elements: !993)
!993 = !{!994}
!994 = !DISubrange(count: 4)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !981, file: !982, line: 168, baseType: !664, size: 64, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !981, file: !982, line: 169, baseType: !664, size: 64, offset: 192)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !981, file: !982, line: 170, baseType: !664, size: 64, offset: 256)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !981, file: !982, line: 171, baseType: !669, size: 64, offset: 320)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !981, file: !982, line: 172, baseType: !662, size: 32, offset: 384)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !981, file: !982, line: 176, baseType: !1001, size: 64, offset: 448)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!986, !666, !669}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !981, file: !982, line: 177, baseType: !1005, size: 64, offset: 512)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !666, !986}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !981, file: !982, line: 178, baseType: !666, size: 64, offset: 576)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !981, file: !982, line: 179, baseType: !6, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !981, file: !982, line: 180, baseType: !6, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !981, file: !982, line: 184, baseType: !6, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !922, file: !904, line: 177, baseType: !730, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !922, file: !904, line: 178, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !335, line: 217, size: 832, elements: !1016)
!1016 = !{!1017, !1261, !1262, !1263, !1266, !1270, !1271, !1272, !1290, !1291, !1292, !1293, !1294, !1295}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1015, file: !335, line: 219, baseType: !1018, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !335, line: 151, baseType: !1020)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !335, line: 151, size: 128, elements: !1021)
!1021 = !{!1022}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1020, file: !335, line: 151, baseType: !1023, size: 128)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !335, line: 150, baseType: !1024)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !335, line: 150, size: 128, elements: !1025)
!1025 = !{!1026, !1027, !1028}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1024, file: !335, line: 150, baseType: !6, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1024, file: !335, line: 150, baseType: !6, size: 32, offset: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1024, file: !335, line: 150, baseType: !1029, size: 64, offset: 64)
!1029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1030, size: 64, elements: !697)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !731, line: 108, baseType: !1031)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !335, line: 122, size: 512, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1253, !1254, !1255, !1256, !1257, !1258, !1259}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1032, file: !335, line: 124, baseType: !1014, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1032, file: !335, line: 125, baseType: !1014, size: 64, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1032, file: !335, line: 131, baseType: !1037, size: 64, offset: 128)
!1037 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !335, line: 128, size: 64, elements: !1038)
!1038 = !{!1039, !1252}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1037, file: !335, line: 129, baseType: !1040, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !731, line: 66, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !566, line: 143, size: 192, elements: !1043)
!1043 = !{!1044, !1250, !1251}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1042, file: !566, line: 145, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !731, line: 69, baseType: !1046)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !566, line: 136, size: 192, elements: !1048)
!1048 = !{!1049, !1248, !1249}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1047, file: !566, line: 137, baseType: !1050, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !731, line: 58, baseType: !1051)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !566, line: 737, size: 768, elements: !1053)
!1053 = !{!1054, !1071, !1105, !1111, !1116, !1121, !1128, !1134, !1140, !1145, !1159, !1164, !1170, !1175, !1185, !1190, !1206, !1213, !1220, !1226, !1231, !1237, !1243}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1052, file: !566, line: 738, baseType: !1055, size: 256)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !566, line: 271, size: 256, elements: !1056)
!1056 = !{!1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1055, file: !566, line: 274, baseType: !6, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1055, file: !566, line: 277, baseType: !6, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1055, file: !566, line: 281, baseType: !6, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1055, file: !566, line: 284, baseType: !6, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1055, file: !566, line: 291, baseType: !6, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1055, file: !566, line: 295, baseType: !6, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1055, file: !566, line: 298, baseType: !6, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1055, file: !566, line: 301, baseType: !6, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1055, file: !566, line: 307, baseType: !6, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1055, file: !566, line: 312, baseType: !6, size: 32, offset: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1055, file: !566, line: 316, baseType: !851, size: 32, offset: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1055, file: !566, line: 319, baseType: !6, size: 32, offset: 96)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1055, file: !566, line: 323, baseType: !1014, size: 64, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1055, file: !566, line: 327, baseType: !730, size: 64, offset: 192)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1052, file: !566, line: 739, baseType: !1072, size: 448)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !566, line: 350, size: 448, elements: !1073)
!1073 = !{!1074, !1103}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1072, file: !566, line: 353, baseType: !1075, size: 384)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !566, line: 333, size: 384, elements: !1076)
!1076 = !{!1077, !1078, !1086}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1075, file: !566, line: 336, baseType: !1055, size: 256)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1075, file: !566, line: 343, baseType: !1079, size: 64, offset: 256)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1081, line: 37, size: 128, elements: !1082)
!1081 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1082 = !{!1083, !1084}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1080, file: !1081, line: 39, baseType: !1079, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1080, file: !1081, line: 40, baseType: !1085, size: 64, offset: 64)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1075, file: !566, line: 344, baseType: !1087, size: 64, offset: 320)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1081, line: 45, size: 320, elements: !1089)
!1089 = !{!1090, !1091}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1088, file: !1081, line: 47, baseType: !1087, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1088, file: !1081, line: 48, baseType: !1092, size: 256, offset: 64)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !140, line: 1883, size: 256, elements: !1093)
!1093 = !{!1094, !1096, !1097, !1102}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1092, file: !140, line: 1884, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1092, file: !140, line: 1885, baseType: !1095, size: 64, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1092, file: !140, line: 1891, baseType: !1098, size: 64, offset: 128)
!1098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1092, file: !140, line: 1891, size: 64, elements: !1099)
!1099 = !{!1100, !1101}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1098, file: !140, line: 1891, baseType: !1050, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1098, file: !140, line: 1891, baseType: !730, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1092, file: !140, line: 1892, baseType: !1085, size: 64, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1072, file: !566, line: 359, baseType: !1104, size: 64, offset: 384)
!1104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !730, size: 64, elements: !697)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1052, file: !566, line: 740, baseType: !1106, size: 512)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !566, line: 365, size: 512, elements: !1107)
!1107 = !{!1108, !1109, !1110}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1106, file: !566, line: 368, baseType: !1075, size: 384)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1106, file: !566, line: 373, baseType: !730, size: 64, offset: 384)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1106, file: !566, line: 374, baseType: !730, size: 64, offset: 448)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1052, file: !566, line: 741, baseType: !1112, size: 576)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !566, line: 380, size: 576, elements: !1113)
!1113 = !{!1114, !1115}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1112, file: !566, line: 383, baseType: !1106, size: 512)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1112, file: !566, line: 389, baseType: !1104, size: 64, offset: 512)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1052, file: !566, line: 742, baseType: !1117, size: 320)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !566, line: 395, size: 320, elements: !1118)
!1118 = !{!1119, !1120}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1117, file: !566, line: 397, baseType: !1055, size: 256)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1117, file: !566, line: 400, baseType: !1040, size: 64, offset: 256)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1052, file: !566, line: 743, baseType: !1122, size: 448)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !566, line: 406, size: 448, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1127}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1122, file: !566, line: 408, baseType: !1055, size: 256)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1122, file: !566, line: 412, baseType: !730, size: 64, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1122, file: !566, line: 420, baseType: !730, size: 64, offset: 320)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1122, file: !566, line: 423, baseType: !1040, size: 64, offset: 384)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1052, file: !566, line: 744, baseType: !1129, size: 384)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !566, line: 429, size: 384, elements: !1130)
!1130 = !{!1131, !1132, !1133}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1129, file: !566, line: 431, baseType: !1055, size: 256)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1129, file: !566, line: 434, baseType: !730, size: 64, offset: 256)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1129, file: !566, line: 437, baseType: !1040, size: 64, offset: 320)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1052, file: !566, line: 745, baseType: !1135, size: 384)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !566, line: 443, size: 384, elements: !1136)
!1136 = !{!1137, !1138, !1139}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1135, file: !566, line: 445, baseType: !1055, size: 256)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1135, file: !566, line: 449, baseType: !730, size: 64, offset: 256)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1135, file: !566, line: 453, baseType: !1040, size: 64, offset: 320)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1052, file: !566, line: 746, baseType: !1141, size: 320)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !566, line: 459, size: 320, elements: !1142)
!1142 = !{!1143, !1144}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1141, file: !566, line: 461, baseType: !1055, size: 256)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1141, file: !566, line: 464, baseType: !730, size: 64, offset: 256)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1052, file: !566, line: 747, baseType: !1146, size: 768)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !566, line: 469, size: 768, elements: !1147)
!1147 = !{!1148, !1149, !1150, !1151, !1152}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1146, file: !566, line: 471, baseType: !1055, size: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1146, file: !566, line: 474, baseType: !6, size: 32, offset: 256)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1146, file: !566, line: 475, baseType: !6, size: 32, offset: 288)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1146, file: !566, line: 478, baseType: !730, size: 64, offset: 320)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1146, file: !566, line: 481, baseType: !1153, size: 384, offset: 384)
!1153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1154, size: 384, elements: !697)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !140, line: 1917, size: 384, elements: !1155)
!1155 = !{!1156, !1157, !1158}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1154, file: !140, line: 1920, baseType: !1092, size: 256)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1154, file: !140, line: 1921, baseType: !730, size: 64, offset: 256)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1154, file: !140, line: 1922, baseType: !851, size: 32, offset: 320)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1052, file: !566, line: 748, baseType: !1160, size: 320)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !566, line: 487, size: 320, elements: !1161)
!1161 = !{!1162, !1163}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1160, file: !566, line: 490, baseType: !1055, size: 256)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1160, file: !566, line: 494, baseType: !662, size: 32, offset: 256)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1052, file: !566, line: 749, baseType: !1165, size: 384)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !566, line: 500, size: 384, elements: !1166)
!1166 = !{!1167, !1168, !1169}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1165, file: !566, line: 502, baseType: !1055, size: 256)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1165, file: !566, line: 506, baseType: !1040, size: 64, offset: 256)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1165, file: !566, line: 510, baseType: !1040, size: 64, offset: 320)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1052, file: !566, line: 750, baseType: !1171, size: 320)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !566, line: 529, size: 320, elements: !1172)
!1172 = !{!1173, !1174}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1171, file: !566, line: 531, baseType: !1055, size: 256)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1171, file: !566, line: 540, baseType: !1040, size: 64, offset: 256)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1052, file: !566, line: 751, baseType: !1176, size: 704)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !566, line: 546, size: 704, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182, !1183, !1184}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1176, file: !566, line: 549, baseType: !1106, size: 512)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1176, file: !566, line: 553, baseType: !667, size: 64, offset: 512)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1176, file: !566, line: 557, baseType: !661, size: 8, offset: 576)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1176, file: !566, line: 558, baseType: !661, size: 8, offset: 584)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1176, file: !566, line: 559, baseType: !661, size: 8, offset: 592)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1176, file: !566, line: 560, baseType: !661, size: 8, offset: 600)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1176, file: !566, line: 566, baseType: !1104, size: 64, offset: 640)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1052, file: !566, line: 752, baseType: !1186, size: 384)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !566, line: 571, size: 384, elements: !1187)
!1187 = !{!1188, !1189}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1186, file: !566, line: 573, baseType: !1117, size: 320)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1186, file: !566, line: 577, baseType: !730, size: 64, offset: 320)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1052, file: !566, line: 753, baseType: !1191, size: 576)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !566, line: 600, size: 576, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1205}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1191, file: !566, line: 602, baseType: !1117, size: 320)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1191, file: !566, line: 605, baseType: !730, size: 64, offset: 320)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1191, file: !566, line: 609, baseType: !682, size: 64, offset: 384)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1191, file: !566, line: 612, baseType: !1197, size: 64, offset: 448)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !566, line: 581, size: 320, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1203, !1204}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1198, file: !566, line: 583, baseType: !139, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1198, file: !566, line: 586, baseType: !730, size: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1198, file: !566, line: 589, baseType: !730, size: 64, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1198, file: !566, line: 592, baseType: !730, size: 64, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1198, file: !566, line: 595, baseType: !730, size: 64, offset: 256)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1191, file: !566, line: 616, baseType: !1040, size: 64, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1052, file: !566, line: 754, baseType: !1207, size: 512)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !566, line: 622, size: 512, elements: !1208)
!1208 = !{!1209, !1210, !1211, !1212}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1207, file: !566, line: 624, baseType: !1117, size: 320)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1207, file: !566, line: 628, baseType: !730, size: 64, offset: 320)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1207, file: !566, line: 632, baseType: !730, size: 64, offset: 384)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1207, file: !566, line: 636, baseType: !730, size: 64, offset: 448)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1052, file: !566, line: 755, baseType: !1214, size: 704)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !566, line: 642, size: 704, elements: !1215)
!1215 = !{!1216, !1217, !1218, !1219}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1214, file: !566, line: 644, baseType: !1207, size: 512)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1214, file: !566, line: 648, baseType: !730, size: 64, offset: 512)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1214, file: !566, line: 652, baseType: !730, size: 64, offset: 576)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1214, file: !566, line: 653, baseType: !730, size: 64, offset: 640)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1052, file: !566, line: 756, baseType: !1221, size: 448)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !566, line: 663, size: 448, elements: !1222)
!1222 = !{!1223, !1224, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1221, file: !566, line: 665, baseType: !1117, size: 320)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1221, file: !566, line: 668, baseType: !730, size: 64, offset: 320)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1221, file: !566, line: 673, baseType: !730, size: 64, offset: 384)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1052, file: !566, line: 757, baseType: !1227, size: 384)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !566, line: 694, size: 384, elements: !1228)
!1228 = !{!1229, !1230}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1227, file: !566, line: 696, baseType: !1117, size: 320)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1227, file: !566, line: 699, baseType: !730, size: 64, offset: 320)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1052, file: !566, line: 758, baseType: !1232, size: 384)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !566, line: 681, size: 384, elements: !1233)
!1233 = !{!1234, !1235, !1236}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1232, file: !566, line: 683, baseType: !1055, size: 256)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1232, file: !566, line: 686, baseType: !730, size: 64, offset: 256)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1232, file: !566, line: 689, baseType: !730, size: 64, offset: 320)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1052, file: !566, line: 759, baseType: !1238, size: 384)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !566, line: 707, size: 384, elements: !1239)
!1239 = !{!1240, !1241, !1242}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1238, file: !566, line: 709, baseType: !1055, size: 256)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1238, file: !566, line: 712, baseType: !730, size: 64, offset: 256)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1238, file: !566, line: 712, baseType: !730, size: 64, offset: 320)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1052, file: !566, line: 760, baseType: !1244, size: 320)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !566, line: 718, size: 320, elements: !1245)
!1245 = !{!1246, !1247}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1244, file: !566, line: 720, baseType: !1055, size: 256)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1244, file: !566, line: 723, baseType: !730, size: 64, offset: 256)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1047, file: !566, line: 138, baseType: !1046, size: 64, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1047, file: !566, line: 139, baseType: !1046, size: 64, offset: 128)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1042, file: !566, line: 146, baseType: !1045, size: 64, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1042, file: !566, line: 152, baseType: !1040, size: 64, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1037, file: !335, line: 130, baseType: !901, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1032, file: !335, line: 134, baseType: !666, size: 64, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1032, file: !335, line: 137, baseType: !730, size: 64, offset: 256)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1032, file: !335, line: 138, baseType: !851, size: 32, offset: 320)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1032, file: !335, line: 142, baseType: !6, size: 32, offset: 352)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1032, file: !335, line: 144, baseType: !662, size: 32, offset: 384)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1032, file: !335, line: 145, baseType: !662, size: 32, offset: 416)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1032, file: !335, line: 146, baseType: !1260, size: 64, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !335, line: 119, baseType: !669)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1015, file: !335, line: 220, baseType: !1018, size: 64, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1015, file: !335, line: 223, baseType: !666, size: 64, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1015, file: !335, line: 226, baseType: !1264, size: 64, offset: 192)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !335, line: 185, flags: DIFlagFwdDecl)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1015, file: !335, line: 229, baseType: !1267, size: 128, offset: 256)
!1267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1268, size: 128, elements: !969)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !335, line: 229, flags: DIFlagFwdDecl)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1015, file: !335, line: 232, baseType: !1014, size: 64, offset: 384)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1015, file: !335, line: 233, baseType: !1014, size: 64, offset: 448)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1015, file: !335, line: 238, baseType: !1273, size: 64, offset: 512)
!1273 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !335, line: 235, size: 64, elements: !1274)
!1274 = !{!1275, !1281}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1273, file: !335, line: 236, baseType: !1276, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !335, line: 273, size: 128, elements: !1278)
!1278 = !{!1279, !1280}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1277, file: !335, line: 275, baseType: !1040, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1277, file: !335, line: 278, baseType: !1040, size: 64, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1273, file: !335, line: 237, baseType: !1282, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !335, line: 259, size: 320, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288, !1289}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1283, file: !335, line: 261, baseType: !901, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1283, file: !335, line: 262, baseType: !901, size: 64, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1283, file: !335, line: 266, baseType: !901, size: 64, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1283, file: !335, line: 267, baseType: !901, size: 64, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1283, file: !335, line: 270, baseType: !662, size: 32, offset: 256)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1015, file: !335, line: 241, baseType: !1260, size: 64, offset: 576)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1015, file: !335, line: 244, baseType: !662, size: 32, offset: 640)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1015, file: !335, line: 247, baseType: !662, size: 32, offset: 672)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1015, file: !335, line: 250, baseType: !662, size: 32, offset: 704)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1015, file: !335, line: 253, baseType: !662, size: 32, offset: 736)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1015, file: !335, line: 256, baseType: !662, size: 32, offset: 768)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !922, file: !904, line: 179, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !904, line: 150, baseType: !1299)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !904, line: 142, size: 320, elements: !1300)
!1300 = !{!1301, !1302, !1303, !1304, !1307, !1308}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1299, file: !904, line: 144, baseType: !730, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1299, file: !904, line: 145, baseType: !901, size: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1299, file: !904, line: 146, baseType: !901, size: 64, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1299, file: !904, line: 147, baseType: !1305, size: 32, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1306, line: 31, baseType: !662)
!1306 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1299, file: !904, line: 148, baseType: !6, size: 32, offset: 224)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1299, file: !904, line: 149, baseType: !661, size: 8, offset: 256)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !922, file: !904, line: 180, baseType: !1310, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !904, line: 162, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !904, line: 159, size: 128, elements: !1313)
!1313 = !{!1314, !1315}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1312, file: !904, line: 160, baseType: !730, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1312, file: !904, line: 161, baseType: !669, size: 64, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !922, file: !904, line: 181, baseType: !1317, size: 64)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !904, line: 181, flags: DIFlagFwdDecl)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !917, file: !904, line: 317, baseType: !1320, size: 64)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !669, size: 64, elements: !697)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !917, file: !904, line: 318, baseType: !1322, size: 320)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !904, line: 188, size: 320, elements: !1323)
!1323 = !{!1324, !1326, !1383}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1322, file: !904, line: 190, baseType: !1325, size: 192)
!1325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 192, elements: !802)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1322, file: !904, line: 193, baseType: !1327, size: 64, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !904, line: 206, size: 320, elements: !1329)
!1329 = !{!1330, !1368, !1369, !1370, !1382}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1328, file: !904, line: 208, baseType: !1331, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !731, line: 62, baseType: !1333)
!1333 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1334, line: 538, size: 256, elements: !1335)
!1334 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1335 = !{!1336, !1340, !1346, !1359}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1333, file: !1334, line: 539, baseType: !1337, size: 32)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1334, line: 482, size: 32, elements: !1338)
!1338 = !{!1339}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1337, file: !1334, line: 484, baseType: !6, size: 32)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1333, file: !1334, line: 540, baseType: !1341, size: 192)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1334, line: 488, size: 192, elements: !1342)
!1342 = !{!1343, !1344, !1345}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1341, file: !1334, line: 489, baseType: !1337, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1341, file: !1334, line: 492, baseType: !667, size: 64, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1341, file: !1334, line: 496, baseType: !730, size: 64, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1333, file: !1334, line: 541, baseType: !1347, size: 256)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1334, line: 504, size: 256, elements: !1348)
!1348 = !{!1349, !1350, !1357, !1358}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1347, file: !1334, line: 505, baseType: !1337, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1347, file: !1334, line: 509, baseType: !1351, size: 64, offset: 64)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1334, line: 501, baseType: !1352)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{null, !1355}
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1347, file: !1334, line: 510, baseType: !1355, size: 64, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1347, file: !1334, line: 513, baseType: !1331, size: 64, offset: 192)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1333, file: !1334, line: 542, baseType: !1360, size: 128)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1334, line: 530, size: 128, elements: !1361)
!1361 = !{!1362, !1363}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1360, file: !1334, line: 531, baseType: !1337, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1360, file: !1334, line: 534, baseType: !1364, size: 64, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1334, line: 525, baseType: !1365)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!661, !730, !667, !684, !684}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1328, file: !904, line: 211, baseType: !6, size: 32, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1328, file: !904, line: 214, baseType: !669, size: 64, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1328, file: !904, line: 224, baseType: !1371, size: 64, offset: 192)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !904, line: 202, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !904, line: 202, size: 128, elements: !1374)
!1374 = !{!1375}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1373, file: !904, line: 202, baseType: !1376, size: 128)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !904, line: 200, baseType: !1377)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !904, line: 200, size: 128, elements: !1378)
!1378 = !{!1379, !1380, !1381}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1377, file: !904, line: 200, baseType: !6, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1377, file: !904, line: 200, baseType: !6, size: 32, offset: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1377, file: !904, line: 200, baseType: !935, size: 64, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1328, file: !904, line: 234, baseType: !1371, size: 64, offset: 256)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1322, file: !904, line: 197, baseType: !669, size: 64, offset: 256)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !917, file: !904, line: 319, baseType: !791, size: 256)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !917, file: !904, line: 320, baseType: !810, size: 192)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !733, file: !140, line: 3384, baseType: !1387, size: 1472)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !140, line: 3114, size: 1472, elements: !1388)
!1388 = !{!1389, !1410, !1411, !1412, !1413}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1387, file: !140, line: 3115, baseType: !1390, size: 1216)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !140, line: 2984, size: 1216, elements: !1391)
!1391 = !{!1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1390, file: !140, line: 2985, baseType: !897, size: 960)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1390, file: !140, line: 2986, baseType: !730, size: 64, offset: 960)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1390, file: !140, line: 2987, baseType: !730, size: 64, offset: 1024)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1390, file: !140, line: 2988, baseType: !730, size: 64, offset: 1088)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1390, file: !140, line: 2991, baseType: !6, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1390, file: !140, line: 2992, baseType: !6, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1390, file: !140, line: 2993, baseType: !6, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1390, file: !140, line: 2994, baseType: !6, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1390, file: !140, line: 2995, baseType: !6, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1390, file: !140, line: 2996, baseType: !6, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1390, file: !140, line: 2998, baseType: !6, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1390, file: !140, line: 3000, baseType: !6, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1390, file: !140, line: 3002, baseType: !6, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1390, file: !140, line: 3003, baseType: !6, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1390, file: !140, line: 3004, baseType: !6, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1390, file: !140, line: 3005, baseType: !6, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1390, file: !140, line: 3007, baseType: !6, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1390, file: !140, line: 3010, baseType: !6, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1387, file: !140, line: 3117, baseType: !730, size: 64, offset: 1216)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1387, file: !140, line: 3119, baseType: !730, size: 64, offset: 1280)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1387, file: !140, line: 3121, baseType: !730, size: 64, offset: 1344)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1387, file: !140, line: 3123, baseType: !730, size: 64, offset: 1408)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !733, file: !140, line: 3385, baseType: !1415, size: 1088)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !140, line: 2874, size: 1088, elements: !1416)
!1416 = !{!1417, !1418, !1419}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1415, file: !140, line: 2875, baseType: !897, size: 960)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1415, file: !140, line: 2876, baseType: !901, size: 64, offset: 960)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1415, file: !140, line: 2877, baseType: !1420, size: 64, offset: 1024)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1422, line: 172, size: 128, elements: !1423)
!1422 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1423 = !{!1424, !1425, !1426, !1427, !1428, !1429, !1430}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1421, file: !1422, line: 174, baseType: !6, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1421, file: !1422, line: 178, baseType: !6, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1421, file: !1422, line: 183, baseType: !6, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1421, file: !1422, line: 187, baseType: !6, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1421, file: !1422, line: 192, baseType: !6, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1421, file: !1422, line: 195, baseType: !6, size: 32, offset: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1421, file: !1422, line: 199, baseType: !730, size: 64, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !733, file: !140, line: 3386, baseType: !1390, size: 1216)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !733, file: !140, line: 3387, baseType: !1433, size: 1280)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !140, line: 3093, size: 1280, elements: !1434)
!1434 = !{!1435, !1436}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1433, file: !140, line: 3094, baseType: !1390, size: 1216)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1433, file: !140, line: 3095, baseType: !1420, size: 64, offset: 1216)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !733, file: !140, line: 3388, baseType: !1438, size: 1216)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !140, line: 2824, size: 1216, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1445}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1438, file: !140, line: 2825, baseType: !859, size: 896)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1438, file: !140, line: 2827, baseType: !730, size: 64, offset: 896)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1438, file: !140, line: 2828, baseType: !730, size: 64, offset: 960)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1438, file: !140, line: 2829, baseType: !730, size: 64, offset: 1024)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1438, file: !140, line: 2830, baseType: !730, size: 64, offset: 1088)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1438, file: !140, line: 2831, baseType: !730, size: 64, offset: 1152)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !733, file: !140, line: 3389, baseType: !1447, size: 1024)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !140, line: 2850, size: 1024, elements: !1448)
!1448 = !{!1449, !1450, !1451}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1447, file: !140, line: 2851, baseType: !897, size: 960)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1447, file: !140, line: 2852, baseType: !662, size: 32, offset: 960)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1447, file: !140, line: 2853, baseType: !662, size: 32, offset: 992)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !733, file: !140, line: 3390, baseType: !1453, size: 1024)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !140, line: 2857, size: 1024, elements: !1454)
!1454 = !{!1455, !1456}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1453, file: !140, line: 2858, baseType: !897, size: 960)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1453, file: !140, line: 2859, baseType: !1420, size: 64, offset: 960)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !733, file: !140, line: 3391, baseType: !1458, size: 960)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !140, line: 2862, size: 960, elements: !1459)
!1459 = !{!1460}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1458, file: !140, line: 2863, baseType: !897, size: 960)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !733, file: !140, line: 3392, baseType: !1462, size: 1472)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !140, line: 3304, size: 1472, elements: !1463)
!1463 = !{!1464}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1462, file: !140, line: 3305, baseType: !1387, size: 1472)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !733, file: !140, line: 3393, baseType: !1466, size: 1792)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !140, line: 3248, size: 1792, elements: !1467)
!1467 = !{!1468, !1469, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1466, file: !140, line: 3249, baseType: !1387, size: 1472)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1466, file: !140, line: 3251, baseType: !1470, size: 64, offset: 1472)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1472, line: 463, size: 1152, elements: !1473)
!1472 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1473 = !{!1474, !1477, !1508, !1509, !1622, !1625, !1626, !1627, !1628, !1629, !1630, !1654, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1471, file: !1472, line: 464, baseType: !1475, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1472, line: 464, flags: DIFlagFwdDecl)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1471, file: !1472, line: 467, baseType: !1478, size: 64, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !335, line: 374, size: 640, elements: !1480)
!1480 = !{!1481, !1483, !1484, !1497, !1498, !1499, !1500, !1501, !1502, !1504, !1506, !1507}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1479, file: !335, line: 377, baseType: !1482, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !731, line: 111, baseType: !1014)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1479, file: !335, line: 378, baseType: !1482, size: 64, offset: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1479, file: !335, line: 381, baseType: !1485, size: 64, offset: 128)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !335, line: 282, baseType: !1487)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !335, line: 282, size: 128, elements: !1488)
!1488 = !{!1489}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1487, file: !335, line: 282, baseType: !1490, size: 128)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !335, line: 281, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !335, line: 281, size: 128, elements: !1492)
!1492 = !{!1493, !1494, !1495}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1491, file: !335, line: 281, baseType: !6, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1491, file: !335, line: 281, baseType: !6, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1491, file: !335, line: 281, baseType: !1496, size: 64, offset: 64)
!1496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1482, size: 64, elements: !697)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1479, file: !335, line: 384, baseType: !662, size: 32, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1479, file: !335, line: 387, baseType: !662, size: 32, offset: 224)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1479, file: !335, line: 390, baseType: !662, size: 32, offset: 256)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1479, file: !335, line: 394, baseType: !1485, size: 64, offset: 320)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1479, file: !335, line: 396, baseType: !334, size: 32, offset: 384)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1479, file: !335, line: 399, baseType: !1503, size: 64, offset: 416)
!1503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !340, size: 64, elements: !969)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1479, file: !335, line: 402, baseType: !1505, size: 64, offset: 480)
!1505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 64, elements: !969)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1479, file: !335, line: 406, baseType: !662, size: 32, offset: 544)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1479, file: !335, line: 409, baseType: !662, size: 32, offset: 576)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1471, file: !1472, line: 470, baseType: !1041, size: 64, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1471, file: !1472, line: 473, baseType: !1510, size: 64, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1422, line: 39, size: 1152, elements: !1512)
!1512 = !{!1513, !1561, !1574, !1586, !1587, !1599, !1600, !1604, !1605, !1606, !1607, !1608}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1511, file: !1422, line: 41, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1515, line: 144, baseType: !1516)
!1515 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1515, line: 100, size: 896, elements: !1518)
!1518 = !{!1519, !1525, !1530, !1535, !1537, !1538, !1539, !1540, !1541, !1542, !1547, !1549, !1550, !1555, !1560}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1517, file: !1515, line: 102, baseType: !1520, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1515, line: 52, baseType: !1521)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!1524, !1355}
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1515, line: 47, baseType: !6)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1517, file: !1515, line: 105, baseType: !1526, size: 64, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1515, line: 59, baseType: !1527)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!662, !1355, !1355}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1517, file: !1515, line: 108, baseType: !1531, size: 64, offset: 128)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1515, line: 63, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{null, !666}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1517, file: !1515, line: 111, baseType: !1536, size: 64, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1517, file: !1515, line: 114, baseType: !682, size: 64, offset: 256)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1517, file: !1515, line: 117, baseType: !682, size: 64, offset: 320)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1517, file: !1515, line: 120, baseType: !682, size: 64, offset: 384)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1517, file: !1515, line: 124, baseType: !6, size: 32, offset: 448)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1517, file: !1515, line: 128, baseType: !6, size: 32, offset: 480)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1517, file: !1515, line: 131, baseType: !1543, size: 64, offset: 512)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1515, line: 75, baseType: !1544)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!666, !682, !682}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1517, file: !1515, line: 132, baseType: !1548, size: 64, offset: 576)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1515, line: 78, baseType: !1532)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1517, file: !1515, line: 135, baseType: !666, size: 64, offset: 640)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1517, file: !1515, line: 136, baseType: !1551, size: 64, offset: 704)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1515, line: 82, baseType: !1552)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!666, !666, !682, !682}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1517, file: !1515, line: 137, baseType: !1556, size: 64, offset: 768)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1515, line: 83, baseType: !1557)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{null, !666, !666}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1517, file: !1515, line: 141, baseType: !6, size: 32, offset: 832)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1511, file: !1422, line: 48, baseType: !1562, size: 64, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !566, line: 35, baseType: !1564)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !566, line: 35, size: 128, elements: !1565)
!1565 = !{!1566}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1564, file: !566, line: 35, baseType: !1567, size: 128)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !566, line: 33, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !566, line: 33, size: 128, elements: !1569)
!1569 = !{!1570, !1571, !1572}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1568, file: !566, line: 33, baseType: !6, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1568, file: !566, line: 33, baseType: !6, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1568, file: !566, line: 33, baseType: !1573, size: 64, offset: 64)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 64, elements: !697)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1511, file: !1422, line: 51, baseType: !1575, size: 64, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !140, line: 183, baseType: !1577)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !140, line: 183, size: 128, elements: !1578)
!1578 = !{!1579}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1577, file: !140, line: 183, baseType: !1580, size: 128)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !140, line: 182, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !140, line: 182, size: 128, elements: !1582)
!1582 = !{!1583, !1584, !1585}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1581, file: !140, line: 182, baseType: !6, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1581, file: !140, line: 182, baseType: !6, size: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1581, file: !140, line: 182, baseType: !1104, size: 64, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1511, file: !1422, line: 54, baseType: !730, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1511, file: !1422, line: 57, baseType: !1588, size: 128, offset: 256)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1589, line: 31, size: 128, elements: !1590)
!1589 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1590 = !{!1591, !1592, !1593, !1594, !1595, !1596, !1597}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1588, file: !1589, line: 35, baseType: !6, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1588, file: !1589, line: 39, baseType: !6, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1588, file: !1589, line: 42, baseType: !6, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1588, file: !1589, line: 46, baseType: !6, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1588, file: !1589, line: 50, baseType: !6, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1588, file: !1589, line: 53, baseType: !6, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1588, file: !1589, line: 56, baseType: !1598, size: 64, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !731, line: 47, baseType: !953)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1511, file: !1422, line: 60, baseType: !1588, size: 128, offset: 384)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1511, file: !1422, line: 64, baseType: !1601, size: 64, offset: 512)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1603, line: 33, flags: DIFlagFwdDecl)
!1603 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1511, file: !1422, line: 67, baseType: !730, size: 64, offset: 576)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1511, file: !1422, line: 73, baseType: !1514, size: 64, offset: 640)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1511, file: !1422, line: 77, baseType: !1598, size: 64, offset: 704)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1511, file: !1422, line: 80, baseType: !6, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1511, file: !1422, line: 82, baseType: !1609, size: 320, offset: 832)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !1081, line: 62, size: 320, elements: !1610)
!1610 = !{!1611, !1617, !1618, !1619, !1620, !1621}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1609, file: !1081, line: 63, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !1081, line: 56, size: 128, elements: !1614)
!1614 = !{!1615, !1616}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1613, file: !1081, line: 57, baseType: !1612, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1613, file: !1081, line: 58, baseType: !826, size: 8, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1609, file: !1081, line: 64, baseType: !6, size: 32, offset: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1609, file: !1081, line: 66, baseType: !6, size: 32, offset: 96)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1609, file: !1081, line: 68, baseType: !661, size: 8, offset: 128)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1609, file: !1081, line: 70, baseType: !1079, size: 64, offset: 192)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1609, file: !1081, line: 71, baseType: !1087, size: 64, offset: 256)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1471, file: !1472, line: 476, baseType: !1623, size: 64, offset: 256)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1472, line: 476, flags: DIFlagFwdDecl)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1471, file: !1472, line: 479, baseType: !1514, size: 64, offset: 320)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1471, file: !1472, line: 484, baseType: !730, size: 64, offset: 384)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1471, file: !1472, line: 488, baseType: !730, size: 64, offset: 448)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1471, file: !1472, line: 493, baseType: !730, size: 64, offset: 512)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1471, file: !1472, line: 496, baseType: !730, size: 64, offset: 576)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1471, file: !1472, line: 501, baseType: !1631, size: 64, offset: 640)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !346, line: 2355, size: 576, elements: !1633)
!1633 = !{!1634, !1637, !1638, !1639, !1640, !1642, !1643, !1648, !1649, !1650, !1651, !1652, !1653}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1632, file: !346, line: 2356, baseType: !1635, size: 64)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !346, line: 2356, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1632, file: !346, line: 2357, baseType: !667, size: 64, offset: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1632, file: !346, line: 2358, baseType: !662, size: 32, offset: 128)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1632, file: !346, line: 2359, baseType: !662, size: 32, offset: 160)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1632, file: !346, line: 2360, baseType: !1641, size: 128, offset: 192)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 128, elements: !993)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1632, file: !346, line: 2364, baseType: !662, size: 32, offset: 320)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1632, file: !346, line: 2367, baseType: !1644, size: 128, offset: 384)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !346, line: 2349, size: 128, elements: !1645)
!1645 = !{!1646, !1647}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1644, file: !346, line: 2351, baseType: !901, size: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1644, file: !346, line: 2352, baseType: !669, size: 64, offset: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1632, file: !346, line: 2371, baseType: !345, size: 32, offset: 512)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1632, file: !346, line: 2374, baseType: !6, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1632, file: !346, line: 2377, baseType: !6, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1632, file: !346, line: 2381, baseType: !6, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1632, file: !346, line: 2392, baseType: !6, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1632, file: !346, line: 2396, baseType: !6, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1471, file: !1472, line: 504, baseType: !1655, size: 64, offset: 704)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1472, line: 504, flags: DIFlagFwdDecl)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1471, file: !1472, line: 507, baseType: !1514, size: 64, offset: 768)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1471, file: !1472, line: 510, baseType: !662, size: 32, offset: 832)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1471, file: !1472, line: 513, baseType: !662, size: 32, offset: 864)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1471, file: !1472, line: 516, baseType: !851, size: 32, offset: 896)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1471, file: !1472, line: 519, baseType: !851, size: 32, offset: 928)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1471, file: !1472, line: 522, baseType: !6, size: 32, offset: 960)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1471, file: !1472, line: 523, baseType: !6, size: 32, offset: 992)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1471, file: !1472, line: 528, baseType: !667, size: 64, offset: 1024)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1471, file: !1472, line: 535, baseType: !6, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1471, file: !1472, line: 539, baseType: !6, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1471, file: !1472, line: 543, baseType: !6, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1471, file: !1472, line: 546, baseType: !6, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1471, file: !1472, line: 550, baseType: !6, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1471, file: !1472, line: 554, baseType: !6, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1471, file: !1472, line: 559, baseType: !6, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1471, file: !1472, line: 562, baseType: !6, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1471, file: !1472, line: 571, baseType: !6, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1471, file: !1472, line: 573, baseType: !6, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1471, file: !1472, line: 574, baseType: !6, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1471, file: !1472, line: 581, baseType: !6, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1471, file: !1472, line: 585, baseType: !6, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1471, file: !1472, line: 588, baseType: !6, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1471, file: !1472, line: 592, baseType: !6, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1471, file: !1472, line: 598, baseType: !6, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1466, file: !140, line: 3254, baseType: !730, size: 64, offset: 1536)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1466, file: !140, line: 3257, baseType: !730, size: 64, offset: 1600)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1466, file: !140, line: 3258, baseType: !730, size: 64, offset: 1664)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1466, file: !140, line: 3264, baseType: !6, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1466, file: !140, line: 3265, baseType: !6, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1466, file: !140, line: 3267, baseType: !6, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1466, file: !140, line: 3268, baseType: !6, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1466, file: !140, line: 3269, baseType: !6, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1466, file: !140, line: 3271, baseType: !6, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1466, file: !140, line: 3272, baseType: !6, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1466, file: !140, line: 3273, baseType: !6, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1466, file: !140, line: 3274, baseType: !6, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1466, file: !140, line: 3275, baseType: !6, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1466, file: !140, line: 3276, baseType: !6, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1466, file: !140, line: 3277, baseType: !6, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1466, file: !140, line: 3279, baseType: !6, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1466, file: !140, line: 3280, baseType: !6, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1466, file: !140, line: 3281, baseType: !6, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1466, file: !140, line: 3282, baseType: !6, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1466, file: !140, line: 3283, baseType: !6, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1466, file: !140, line: 3284, baseType: !6, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !733, file: !140, line: 3394, baseType: !1703, size: 1344)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !140, line: 2279, size: 1344, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1703, file: !140, line: 2280, baseType: !769, size: 192)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1703, file: !140, line: 2281, baseType: !730, size: 64, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1703, file: !140, line: 2282, baseType: !730, size: 64, offset: 256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1703, file: !140, line: 2283, baseType: !730, size: 64, offset: 320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1703, file: !140, line: 2284, baseType: !730, size: 64, offset: 384)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1703, file: !140, line: 2285, baseType: !6, size: 32, offset: 448)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1703, file: !140, line: 2287, baseType: !6, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1703, file: !140, line: 2288, baseType: !6, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1703, file: !140, line: 2289, baseType: !6, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1703, file: !140, line: 2290, baseType: !6, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1703, file: !140, line: 2291, baseType: !6, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1703, file: !140, line: 2292, baseType: !6, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1703, file: !140, line: 2294, baseType: !6, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1703, file: !140, line: 2296, baseType: !6, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1703, file: !140, line: 2297, baseType: !6, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1703, file: !140, line: 2298, baseType: !6, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1703, file: !140, line: 2299, baseType: !6, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1703, file: !140, line: 2300, baseType: !6, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1703, file: !140, line: 2301, baseType: !6, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1703, file: !140, line: 2302, baseType: !6, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1703, file: !140, line: 2303, baseType: !6, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1703, file: !140, line: 2305, baseType: !6, size: 32, offset: 512)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1703, file: !140, line: 2306, baseType: !1305, size: 32, offset: 544)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1703, file: !140, line: 2307, baseType: !730, size: 64, offset: 576)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1703, file: !140, line: 2308, baseType: !730, size: 64, offset: 640)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1703, file: !140, line: 2314, baseType: !1731, size: 64, offset: 704)
!1731 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !140, line: 2309, size: 64, elements: !1732)
!1732 = !{!1733, !1734, !1735}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1731, file: !140, line: 2310, baseType: !662, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1731, file: !140, line: 2311, baseType: !667, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1731, file: !140, line: 2312, baseType: !1736, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !140, line: 2277, flags: DIFlagFwdDecl)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1703, file: !140, line: 2315, baseType: !730, size: 64, offset: 768)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1703, file: !140, line: 2316, baseType: !730, size: 64, offset: 832)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1703, file: !140, line: 2317, baseType: !730, size: 64, offset: 896)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1703, file: !140, line: 2318, baseType: !730, size: 64, offset: 960)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1703, file: !140, line: 2319, baseType: !730, size: 64, offset: 1024)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1703, file: !140, line: 2320, baseType: !730, size: 64, offset: 1088)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1703, file: !140, line: 2321, baseType: !730, size: 64, offset: 1152)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1703, file: !140, line: 2322, baseType: !730, size: 64, offset: 1216)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1703, file: !140, line: 2324, baseType: !1747, size: 64, offset: 1280)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !140, line: 2324, flags: DIFlagFwdDecl)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !733, file: !140, line: 3395, baseType: !1750, size: 320)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !140, line: 1469, size: 320, elements: !1751)
!1751 = !{!1752, !1753, !1754}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1750, file: !140, line: 1470, baseType: !769, size: 192)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1750, file: !140, line: 1471, baseType: !730, size: 64, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1750, file: !140, line: 1472, baseType: !730, size: 64, offset: 256)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !733, file: !140, line: 3396, baseType: !1756, size: 320)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !140, line: 1482, size: 320, elements: !1757)
!1757 = !{!1758, !1759, !1760}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1756, file: !140, line: 1483, baseType: !769, size: 192)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1756, file: !140, line: 1484, baseType: !662, size: 32, offset: 192)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1756, file: !140, line: 1485, baseType: !1104, size: 64, offset: 256)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !733, file: !140, line: 3397, baseType: !1762, size: 384)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !140, line: 1829, size: 384, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1762, file: !140, line: 1830, baseType: !769, size: 192)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1762, file: !140, line: 1831, baseType: !851, size: 32, offset: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1762, file: !140, line: 1832, baseType: !730, size: 64, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1762, file: !140, line: 1835, baseType: !1104, size: 64, offset: 320)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !733, file: !140, line: 3398, baseType: !1769, size: 704)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !140, line: 1898, size: 704, elements: !1770)
!1770 = !{!1771, !1772, !1773, !1774, !1775, !1780}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1769, file: !140, line: 1899, baseType: !769, size: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1769, file: !140, line: 1902, baseType: !730, size: 64, offset: 192)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1769, file: !140, line: 1905, baseType: !1050, size: 64, offset: 256)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1769, file: !140, line: 1908, baseType: !6, size: 32, offset: 320)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1769, file: !140, line: 1911, baseType: !1776, size: 64, offset: 384)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1422, line: 117, size: 128, elements: !1778)
!1778 = !{!1779}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1777, file: !1422, line: 120, baseType: !1588, size: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1769, file: !140, line: 1914, baseType: !1092, size: 256, offset: 448)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !733, file: !140, line: 3399, baseType: !1782, size: 704)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !140, line: 2008, size: 704, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1782, file: !140, line: 2009, baseType: !769, size: 192)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1782, file: !140, line: 2011, baseType: !6, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1782, file: !140, line: 2012, baseType: !6, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1782, file: !140, line: 2014, baseType: !851, size: 32, offset: 224)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1782, file: !140, line: 2016, baseType: !730, size: 64, offset: 256)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1782, file: !140, line: 2017, baseType: !1575, size: 64, offset: 320)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1782, file: !140, line: 2019, baseType: !730, size: 64, offset: 384)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1782, file: !140, line: 2020, baseType: !730, size: 64, offset: 448)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1782, file: !140, line: 2021, baseType: !730, size: 64, offset: 512)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1782, file: !140, line: 2022, baseType: !730, size: 64, offset: 576)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1782, file: !140, line: 2023, baseType: !730, size: 64, offset: 640)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !733, file: !140, line: 3400, baseType: !1796, size: 832)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !140, line: 2430, size: 832, elements: !1797)
!1797 = !{!1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1796, file: !140, line: 2431, baseType: !769, size: 192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1796, file: !140, line: 2433, baseType: !730, size: 64, offset: 192)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1796, file: !140, line: 2434, baseType: !730, size: 64, offset: 256)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1796, file: !140, line: 2435, baseType: !730, size: 64, offset: 320)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1796, file: !140, line: 2436, baseType: !730, size: 64, offset: 384)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1796, file: !140, line: 2437, baseType: !1575, size: 64, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1796, file: !140, line: 2438, baseType: !730, size: 64, offset: 512)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1796, file: !140, line: 2440, baseType: !730, size: 64, offset: 576)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1796, file: !140, line: 2441, baseType: !730, size: 64, offset: 640)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1796, file: !140, line: 2443, baseType: !1808, size: 128, offset: 704)
!1808 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !140, line: 182, baseType: !1809)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !140, line: 182, size: 128, elements: !1810)
!1810 = !{!1811}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1809, file: !140, line: 182, baseType: !1580, size: 128)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !733, file: !140, line: 3401, baseType: !1813, size: 320)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !140, line: 3327, size: 320, elements: !1814)
!1814 = !{!1815, !1816, !1823}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1813, file: !140, line: 3329, baseType: !769, size: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1813, file: !140, line: 3330, baseType: !1817, size: 64, offset: 192)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !140, line: 3320, size: 192, elements: !1819)
!1819 = !{!1820, !1821, !1822}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1818, file: !140, line: 3322, baseType: !1817, size: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1818, file: !140, line: 3323, baseType: !1817, size: 64, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1818, file: !140, line: 3324, baseType: !730, size: 64, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1813, file: !140, line: 3331, baseType: !1817, size: 64, offset: 256)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !733, file: !140, line: 3402, baseType: !1825, size: 256)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !140, line: 1540, size: 256, elements: !1826)
!1826 = !{!1827, !1828}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1825, file: !140, line: 1541, baseType: !769, size: 192)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1825, file: !140, line: 1542, baseType: !1829, size: 64, offset: 192)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !140, line: 1538, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !140, line: 1538, size: 192, elements: !1832)
!1832 = !{!1833}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1831, file: !140, line: 1538, baseType: !1834, size: 192)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !140, line: 1537, baseType: !1835)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !140, line: 1537, size: 192, elements: !1836)
!1836 = !{!1837, !1838, !1839}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1835, file: !140, line: 1537, baseType: !6, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1835, file: !140, line: 1537, baseType: !6, size: 32, offset: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1835, file: !140, line: 1537, baseType: !1840, size: 128, offset: 64)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 128, elements: !697)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !140, line: 1535, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !140, line: 1532, size: 128, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1842, file: !140, line: 1533, baseType: !730, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1842, file: !140, line: 1534, baseType: !730, size: 64, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !733, file: !140, line: 3403, baseType: !1847, size: 512)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !140, line: 1938, size: 512, elements: !1848)
!1848 = !{!1849, !1850, !1851, !1852, !1858, !1859, !1860}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1847, file: !140, line: 1939, baseType: !769, size: 192)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1847, file: !140, line: 1940, baseType: !851, size: 32, offset: 192)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1847, file: !140, line: 1941, baseType: !350, size: 32, offset: 224)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1847, file: !140, line: 1946, baseType: !1853, size: 32, offset: 256)
!1853 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !140, line: 1942, size: 32, elements: !1854)
!1854 = !{!1855, !1856, !1857}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1853, file: !140, line: 1943, baseType: !368, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1853, file: !140, line: 1944, baseType: !375, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1853, file: !140, line: 1945, baseType: !139, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1847, file: !140, line: 1950, baseType: !1040, size: 64, offset: 320)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1847, file: !140, line: 1951, baseType: !1040, size: 64, offset: 384)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1847, file: !140, line: 1953, baseType: !1104, size: 64, offset: 448)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !733, file: !140, line: 3404, baseType: !1862, size: 1664)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !140, line: 3337, size: 1664, elements: !1863)
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1862, file: !140, line: 3338, baseType: !769, size: 192)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1862, file: !140, line: 3341, baseType: !1866, size: 1472, offset: 192)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1867, line: 410, size: 1472, elements: !1868)
!1867 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1868 = !{!1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1866, file: !1867, line: 412, baseType: !662, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1866, file: !1867, line: 413, baseType: !662, size: 32, offset: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1866, file: !1867, line: 414, baseType: !662, size: 32, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1866, file: !1867, line: 415, baseType: !662, size: 32, offset: 96)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1866, file: !1867, line: 416, baseType: !662, size: 32, offset: 128)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1866, file: !1867, line: 417, baseType: !662, size: 32, offset: 160)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1866, file: !1867, line: 418, baseType: !661, size: 8, offset: 192)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1866, file: !1867, line: 419, baseType: !661, size: 8, offset: 200)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1866, file: !1867, line: 420, baseType: !1878, size: 8, offset: 208)
!1878 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1866, file: !1867, line: 421, baseType: !1878, size: 8, offset: 216)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1866, file: !1867, line: 422, baseType: !1878, size: 8, offset: 224)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1866, file: !1867, line: 423, baseType: !1878, size: 8, offset: 232)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1866, file: !1867, line: 424, baseType: !1878, size: 8, offset: 240)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1866, file: !1867, line: 425, baseType: !1878, size: 8, offset: 248)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1866, file: !1867, line: 426, baseType: !1878, size: 8, offset: 256)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1866, file: !1867, line: 427, baseType: !1878, size: 8, offset: 264)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1866, file: !1867, line: 428, baseType: !1878, size: 8, offset: 272)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1866, file: !1867, line: 429, baseType: !1878, size: 8, offset: 280)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1866, file: !1867, line: 430, baseType: !1878, size: 8, offset: 288)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1866, file: !1867, line: 431, baseType: !1878, size: 8, offset: 296)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1866, file: !1867, line: 432, baseType: !1878, size: 8, offset: 304)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1866, file: !1867, line: 433, baseType: !1878, size: 8, offset: 312)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1866, file: !1867, line: 434, baseType: !1878, size: 8, offset: 320)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1866, file: !1867, line: 435, baseType: !1878, size: 8, offset: 328)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1866, file: !1867, line: 436, baseType: !1878, size: 8, offset: 336)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1866, file: !1867, line: 437, baseType: !1878, size: 8, offset: 344)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1866, file: !1867, line: 438, baseType: !1878, size: 8, offset: 352)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1866, file: !1867, line: 439, baseType: !1878, size: 8, offset: 360)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1866, file: !1867, line: 440, baseType: !1878, size: 8, offset: 368)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1866, file: !1867, line: 441, baseType: !1878, size: 8, offset: 376)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1866, file: !1867, line: 442, baseType: !1878, size: 8, offset: 384)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1866, file: !1867, line: 443, baseType: !1878, size: 8, offset: 392)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1866, file: !1867, line: 444, baseType: !1878, size: 8, offset: 400)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1866, file: !1867, line: 445, baseType: !1878, size: 8, offset: 408)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1866, file: !1867, line: 446, baseType: !1878, size: 8, offset: 416)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1866, file: !1867, line: 447, baseType: !1878, size: 8, offset: 424)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1866, file: !1867, line: 448, baseType: !1878, size: 8, offset: 432)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1866, file: !1867, line: 449, baseType: !1878, size: 8, offset: 440)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1866, file: !1867, line: 450, baseType: !1878, size: 8, offset: 448)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1866, file: !1867, line: 451, baseType: !1878, size: 8, offset: 456)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1866, file: !1867, line: 452, baseType: !1878, size: 8, offset: 464)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1866, file: !1867, line: 453, baseType: !1878, size: 8, offset: 472)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1866, file: !1867, line: 454, baseType: !1878, size: 8, offset: 480)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1866, file: !1867, line: 455, baseType: !1878, size: 8, offset: 488)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1866, file: !1867, line: 456, baseType: !1878, size: 8, offset: 496)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1866, file: !1867, line: 457, baseType: !1878, size: 8, offset: 504)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1866, file: !1867, line: 458, baseType: !1878, size: 8, offset: 512)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1866, file: !1867, line: 459, baseType: !1878, size: 8, offset: 520)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1866, file: !1867, line: 460, baseType: !1878, size: 8, offset: 528)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1866, file: !1867, line: 461, baseType: !1878, size: 8, offset: 536)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1866, file: !1867, line: 462, baseType: !1878, size: 8, offset: 544)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1866, file: !1867, line: 463, baseType: !1878, size: 8, offset: 552)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1866, file: !1867, line: 464, baseType: !1878, size: 8, offset: 560)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1866, file: !1867, line: 465, baseType: !1878, size: 8, offset: 568)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1866, file: !1867, line: 466, baseType: !1878, size: 8, offset: 576)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1866, file: !1867, line: 467, baseType: !1878, size: 8, offset: 584)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1866, file: !1867, line: 468, baseType: !1878, size: 8, offset: 592)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1866, file: !1867, line: 469, baseType: !1878, size: 8, offset: 600)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1866, file: !1867, line: 470, baseType: !1878, size: 8, offset: 608)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1866, file: !1867, line: 471, baseType: !1878, size: 8, offset: 616)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1866, file: !1867, line: 472, baseType: !1878, size: 8, offset: 624)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1866, file: !1867, line: 473, baseType: !1878, size: 8, offset: 632)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1866, file: !1867, line: 474, baseType: !1878, size: 8, offset: 640)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1866, file: !1867, line: 475, baseType: !1878, size: 8, offset: 648)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1866, file: !1867, line: 476, baseType: !1878, size: 8, offset: 656)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1866, file: !1867, line: 477, baseType: !1878, size: 8, offset: 664)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1866, file: !1867, line: 478, baseType: !1878, size: 8, offset: 672)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1866, file: !1867, line: 479, baseType: !1878, size: 8, offset: 680)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1866, file: !1867, line: 480, baseType: !1878, size: 8, offset: 688)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1866, file: !1867, line: 481, baseType: !1878, size: 8, offset: 696)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1866, file: !1867, line: 482, baseType: !1878, size: 8, offset: 704)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1866, file: !1867, line: 483, baseType: !1878, size: 8, offset: 712)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1866, file: !1867, line: 484, baseType: !1878, size: 8, offset: 720)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1866, file: !1867, line: 485, baseType: !1878, size: 8, offset: 728)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1866, file: !1867, line: 486, baseType: !1878, size: 8, offset: 736)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1866, file: !1867, line: 487, baseType: !1878, size: 8, offset: 744)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1866, file: !1867, line: 488, baseType: !1878, size: 8, offset: 752)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1866, file: !1867, line: 489, baseType: !1878, size: 8, offset: 760)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1866, file: !1867, line: 490, baseType: !1878, size: 8, offset: 768)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1866, file: !1867, line: 491, baseType: !1878, size: 8, offset: 776)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1866, file: !1867, line: 492, baseType: !1878, size: 8, offset: 784)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1866, file: !1867, line: 493, baseType: !1878, size: 8, offset: 792)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1866, file: !1867, line: 494, baseType: !1878, size: 8, offset: 800)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1866, file: !1867, line: 495, baseType: !1878, size: 8, offset: 808)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1866, file: !1867, line: 496, baseType: !1878, size: 8, offset: 816)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1866, file: !1867, line: 497, baseType: !1878, size: 8, offset: 824)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1866, file: !1867, line: 498, baseType: !1878, size: 8, offset: 832)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1866, file: !1867, line: 499, baseType: !1878, size: 8, offset: 840)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1866, file: !1867, line: 500, baseType: !1878, size: 8, offset: 848)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1866, file: !1867, line: 501, baseType: !1878, size: 8, offset: 856)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1866, file: !1867, line: 502, baseType: !1878, size: 8, offset: 864)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1866, file: !1867, line: 503, baseType: !1878, size: 8, offset: 872)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1866, file: !1867, line: 504, baseType: !1878, size: 8, offset: 880)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1866, file: !1867, line: 505, baseType: !1878, size: 8, offset: 888)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1866, file: !1867, line: 506, baseType: !1878, size: 8, offset: 896)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1866, file: !1867, line: 507, baseType: !1878, size: 8, offset: 904)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1866, file: !1867, line: 508, baseType: !1878, size: 8, offset: 912)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1866, file: !1867, line: 509, baseType: !1878, size: 8, offset: 920)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1866, file: !1867, line: 510, baseType: !1878, size: 8, offset: 928)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1866, file: !1867, line: 511, baseType: !1878, size: 8, offset: 936)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1866, file: !1867, line: 512, baseType: !1878, size: 8, offset: 944)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1866, file: !1867, line: 513, baseType: !1878, size: 8, offset: 952)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1866, file: !1867, line: 514, baseType: !1878, size: 8, offset: 960)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1866, file: !1867, line: 515, baseType: !1878, size: 8, offset: 968)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1866, file: !1867, line: 516, baseType: !1878, size: 8, offset: 976)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1866, file: !1867, line: 517, baseType: !1878, size: 8, offset: 984)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1866, file: !1867, line: 518, baseType: !1878, size: 8, offset: 992)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1866, file: !1867, line: 519, baseType: !1878, size: 8, offset: 1000)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1866, file: !1867, line: 520, baseType: !1878, size: 8, offset: 1008)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1866, file: !1867, line: 521, baseType: !1878, size: 8, offset: 1016)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1866, file: !1867, line: 522, baseType: !1878, size: 8, offset: 1024)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1866, file: !1867, line: 523, baseType: !1878, size: 8, offset: 1032)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1866, file: !1867, line: 524, baseType: !1878, size: 8, offset: 1040)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1866, file: !1867, line: 525, baseType: !1878, size: 8, offset: 1048)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1866, file: !1867, line: 526, baseType: !1878, size: 8, offset: 1056)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1866, file: !1867, line: 527, baseType: !1878, size: 8, offset: 1064)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1866, file: !1867, line: 528, baseType: !1878, size: 8, offset: 1072)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1866, file: !1867, line: 529, baseType: !1878, size: 8, offset: 1080)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1866, file: !1867, line: 530, baseType: !1878, size: 8, offset: 1088)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1866, file: !1867, line: 531, baseType: !1878, size: 8, offset: 1096)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1866, file: !1867, line: 532, baseType: !1878, size: 8, offset: 1104)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1866, file: !1867, line: 533, baseType: !1878, size: 8, offset: 1112)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1866, file: !1867, line: 534, baseType: !1878, size: 8, offset: 1120)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1866, file: !1867, line: 535, baseType: !1878, size: 8, offset: 1128)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1866, file: !1867, line: 536, baseType: !1878, size: 8, offset: 1136)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1866, file: !1867, line: 537, baseType: !1878, size: 8, offset: 1144)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1866, file: !1867, line: 538, baseType: !1878, size: 8, offset: 1152)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1866, file: !1867, line: 539, baseType: !1878, size: 8, offset: 1160)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1866, file: !1867, line: 540, baseType: !1878, size: 8, offset: 1168)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1866, file: !1867, line: 541, baseType: !1878, size: 8, offset: 1176)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1866, file: !1867, line: 542, baseType: !1878, size: 8, offset: 1184)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1866, file: !1867, line: 543, baseType: !1878, size: 8, offset: 1192)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1866, file: !1867, line: 544, baseType: !1878, size: 8, offset: 1200)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1866, file: !1867, line: 545, baseType: !1878, size: 8, offset: 1208)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1866, file: !1867, line: 546, baseType: !1878, size: 8, offset: 1216)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1866, file: !1867, line: 547, baseType: !1878, size: 8, offset: 1224)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1866, file: !1867, line: 548, baseType: !1878, size: 8, offset: 1232)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1866, file: !1867, line: 549, baseType: !1878, size: 8, offset: 1240)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1866, file: !1867, line: 550, baseType: !1878, size: 8, offset: 1248)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1866, file: !1867, line: 551, baseType: !1878, size: 8, offset: 1256)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1866, file: !1867, line: 552, baseType: !1878, size: 8, offset: 1264)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1866, file: !1867, line: 553, baseType: !1878, size: 8, offset: 1272)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1866, file: !1867, line: 554, baseType: !1878, size: 8, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1866, file: !1867, line: 555, baseType: !1878, size: 8, offset: 1288)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1866, file: !1867, line: 556, baseType: !1878, size: 8, offset: 1296)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1866, file: !1867, line: 557, baseType: !1878, size: 8, offset: 1304)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1866, file: !1867, line: 558, baseType: !1878, size: 8, offset: 1312)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1866, file: !1867, line: 559, baseType: !1878, size: 8, offset: 1320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1866, file: !1867, line: 560, baseType: !1878, size: 8, offset: 1328)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1866, file: !1867, line: 561, baseType: !1878, size: 8, offset: 1336)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1866, file: !1867, line: 562, baseType: !1878, size: 8, offset: 1344)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1866, file: !1867, line: 563, baseType: !1878, size: 8, offset: 1352)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1866, file: !1867, line: 564, baseType: !1878, size: 8, offset: 1360)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1866, file: !1867, line: 565, baseType: !1878, size: 8, offset: 1368)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1866, file: !1867, line: 566, baseType: !1878, size: 8, offset: 1376)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1866, file: !1867, line: 567, baseType: !1878, size: 8, offset: 1384)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1866, file: !1867, line: 568, baseType: !1878, size: 8, offset: 1392)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1866, file: !1867, line: 569, baseType: !1878, size: 8, offset: 1400)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1866, file: !1867, line: 570, baseType: !1878, size: 8, offset: 1408)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1866, file: !1867, line: 571, baseType: !1878, size: 8, offset: 1416)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1866, file: !1867, line: 572, baseType: !1878, size: 8, offset: 1424)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1866, file: !1867, line: 573, baseType: !1878, size: 8, offset: 1432)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1866, file: !1867, line: 574, baseType: !1878, size: 8, offset: 1440)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !733, file: !140, line: 3405, baseType: !2034, size: 384)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !140, line: 3352, size: 384, elements: !2035)
!2035 = !{!2036, !2037}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2034, file: !140, line: 3353, baseType: !769, size: 192)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2034, file: !140, line: 3356, baseType: !2038, size: 192, offset: 192)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1867, line: 578, size: 192, elements: !2039)
!2039 = !{!2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2038, file: !1867, line: 580, baseType: !662, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2038, file: !1867, line: 581, baseType: !662, size: 32, offset: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2038, file: !1867, line: 582, baseType: !662, size: 32, offset: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2038, file: !1867, line: 583, baseType: !662, size: 32, offset: 96)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2038, file: !1867, line: 584, baseType: !661, size: 8, offset: 128)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2038, file: !1867, line: 585, baseType: !661, size: 8, offset: 136)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2038, file: !1867, line: 586, baseType: !661, size: 8, offset: 144)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2038, file: !1867, line: 587, baseType: !661, size: 8, offset: 152)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2038, file: !1867, line: 588, baseType: !661, size: 8, offset: 160)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2038, file: !1867, line: 589, baseType: !661, size: 8, offset: 168)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2038, file: !1867, line: 590, baseType: !661, size: 8, offset: 176)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "solution", scope: !713, file: !3, line: 258, baseType: !1598, size: 64, offset: 448)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "oldsolution", scope: !713, file: !3, line: 261, baseType: !1598, size: 64, offset: 512)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_shared_bitmap_info_t", file: !3, line: 4697, baseType: !2054)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2056)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shared_bitmap_info", file: !3, line: 4692, size: 128, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "pt_vars", scope: !2056, file: !3, line: 4694, baseType: !1598, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !2056, file: !3, line: 4695, baseType: !1524, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2062)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "heapvar_map", file: !3, line: 294, size: 256, elements: !2063)
!2063 = !{!2064, !2073}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2062, file: !3, line: 295, baseType: !2065, size: 192)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_map", file: !140, line: 5278, size: 192, elements: !2066)
!2066 = !{!2067, !2071, !2072}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2065, file: !140, line: 5279, baseType: !2068, size: 64)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_map_base", file: !140, line: 5267, size: 64, elements: !2069)
!2069 = !{!2070}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2068, file: !140, line: 5268, baseType: !730, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2065, file: !140, line: 5280, baseType: !6, size: 32, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2065, file: !140, line: 5281, baseType: !730, size: 64, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2062, file: !3, line: 296, baseType: !684, size: 64, offset: 192)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_fieldoff_s_heap", file: !3, line: 4140, baseType: !2078)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_fieldoff_s_heap", file: !3, line: 4140, size: 256, elements: !2079)
!2079 = !{!2080}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2078, file: !3, line: 4140, baseType: !2081, size: 256)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_fieldoff_s_base", file: !3, line: 4139, baseType: !2082)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_fieldoff_s_base", file: !3, line: 4139, size: 256, elements: !2083)
!2083 = !{!2084, !2085, !2086}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2082, file: !3, line: 4139, baseType: !6, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2082, file: !3, line: 4139, baseType: !6, size: 32, offset: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2082, file: !3, line: 4139, baseType: !2087, size: 192, offset: 64)
!2087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2088, size: 192, elements: !697)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "fieldoff_s", file: !3, line: 4137, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fieldoff", file: !3, line: 4123, size: 192, elements: !2090)
!2090 = !{!2091, !2092, !2093, !2094, !2095}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2089, file: !3, line: 4126, baseType: !669, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2089, file: !3, line: 4129, baseType: !684, size: 64, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "has_unknown_size", scope: !2089, file: !3, line: 4131, baseType: !6, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "may_have_pointers", scope: !2089, file: !3, line: 4133, baseType: !6, size: 1, offset: 129, flags: DIFlagBitField, extraData: i64 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "only_restrict_pointers", scope: !2089, file: !3, line: 4135, baseType: !6, size: 1, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2088)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ce_s_heap", file: !3, line: 407, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ce_s_heap", file: !3, line: 407, size: 192, elements: !2106)
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2105, file: !3, line: 407, baseType: !2108, size: 192)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ce_s_base", file: !3, line: 406, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ce_s_base", file: !3, line: 406, size: 192, elements: !2110)
!2110 = !{!2111, !2112, !2113}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2109, file: !3, line: 406, baseType: !6, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2109, file: !3, line: 406, baseType: !6, size: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2109, file: !3, line: 406, baseType: !2114, size: 128, offset: 64)
!2114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2115, size: 128, elements: !697)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "ce_s", file: !3, line: 405, baseType: !675)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constraint_graph", file: !3, line: 432, size: 1024, elements: !2118)
!2118 = !{!2119, !2120, !2122, !2123, !2124, !2126, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2146, !2147}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2117, file: !3, line: 436, baseType: !6, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !2117, file: !3, line: 439, baseType: !2121, size: 64, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "implicit_preds", scope: !2117, file: !3, line: 443, baseType: !2121, size: 64, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !2117, file: !3, line: 446, baseType: !2121, size: 64, offset: 192)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_cycles", scope: !2117, file: !3, line: 450, baseType: !2125, size: 64, offset: 256)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "rep", scope: !2117, file: !3, line: 454, baseType: !2127, size: 64, offset: 320)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "eq_rep", scope: !2117, file: !3, line: 458, baseType: !2125, size: 64, offset: 384)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !2117, file: !3, line: 464, baseType: !2127, size: 64, offset: 448)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "pe_rep", scope: !2117, file: !3, line: 470, baseType: !2125, size: 64, offset: 512)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_label", scope: !2117, file: !3, line: 474, baseType: !2127, size: 64, offset: 576)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "loc_label", scope: !2117, file: !3, line: 478, baseType: !2127, size: 64, offset: 640)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "pointed_by", scope: !2117, file: !3, line: 483, baseType: !2121, size: 64, offset: 704)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "points_to", scope: !2117, file: !3, line: 487, baseType: !2121, size: 64, offset: 768)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "direct_nodes", scope: !2117, file: !3, line: 491, baseType: !2136, size: 64, offset: 832)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2137, line: 45, baseType: !2138)
!2137 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2137, line: 39, size: 192, elements: !2140)
!2140 = !{!2141, !2142, !2143, !2144}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2139, file: !2137, line: 41, baseType: !660, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2139, file: !2137, line: 42, baseType: !6, size: 32, offset: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2139, file: !2137, line: 43, baseType: !6, size: 32, offset: 96)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2139, file: !2137, line: 44, baseType: !2145, size: 64, offset: 128)
!2145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 64, elements: !697)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !2117, file: !3, line: 495, baseType: !1598, size: 64, offset: 896)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !2117, file: !3, line: 500, baseType: !2148, size: 64, offset: 960)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scc_info", file: !3, line: 1294, size: 384, elements: !2151)
!2151 = !{!2152, !2153, !2154, !2155, !2156, !2157}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2150, file: !3, line: 1296, baseType: !2136, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !2150, file: !3, line: 1297, baseType: !2136, size: 64, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "dfs", scope: !2150, file: !3, line: 1298, baseType: !2127, size: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "node_mapping", scope: !2150, file: !3, line: 1299, baseType: !2127, size: 64, offset: 192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "current_index", scope: !2150, file: !3, line: 1300, baseType: !662, size: 32, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "scc_stack", scope: !2150, file: !3, line: 1301, baseType: !2158, size: 64, offset: 320)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_unsigned_heap", file: !2160, line: 35, baseType: !2161)
!2160 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_unsigned_heap", file: !2160, line: 35, size: 96, elements: !2162)
!2162 = !{!2163}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2161, file: !2160, line: 35, baseType: !2164, size: 96)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_unsigned_base", file: !2160, line: 34, baseType: !2165)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_unsigned_base", file: !2160, line: 34, size: 96, elements: !2166)
!2166 = !{!2167, !2168, !2169}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2165, file: !2160, line: 34, baseType: !6, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2165, file: !2160, line: 34, baseType: !6, size: 32, offset: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2165, file: !2160, line: 34, baseType: !2170, size: 32, offset: 64)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 32, elements: !697)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_equiv_class_label_t", file: !3, line: 1849, baseType: !2172)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2174)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "equiv_class_label", file: !3, line: 1843, size: 128, elements: !2175)
!2175 = !{!2176, !2177, !2178}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "hashcode", scope: !2174, file: !3, line: 1845, baseType: !1524, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "equivalence_class", scope: !2174, file: !3, line: 1846, baseType: !6, size: 32, offset: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "labels", scope: !2174, file: !3, line: 1847, baseType: !1598, size: 64, offset: 64)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "equiv_class_label_t", file: !3, line: 1848, baseType: !2180)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "topo_info", file: !3, line: 1464, size: 128, elements: !2183)
!2183 = !{!2184, !2185}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2182, file: !3, line: 1467, baseType: !2136, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "topo_order", scope: !2182, file: !3, line: 1470, baseType: !2158, size: 64, offset: 64)
!2186 = !DIDerivedType(tag: DW_TAG_typedef, name: "shared_bitmap_info_t", file: !3, line: 4696, baseType: !2187)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2188 = !{!2189, !2217, !2219, !2224, !2243, !0, !2254, !2262, !2264, !2266, !2269, !2281, !2283, !2285, !2287, !2289, !2312, !2314, !2316, !2318, !2320, !2322, !2324, !2326, !2328, !2330, !2332}
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "pass_build_alias", scope: !2, file: !3, line: 5625, type: !2191, isLocal: false, isDefinition: true)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_opt_pass", file: !383, line: 156, size: 640, elements: !2192)
!2192 = !{!2193}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2191, file: !383, line: 158, baseType: !2194, size: 640)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !383, line: 114, size: 640, elements: !2195)
!2195 = !{!2196, !2197, !2198, !2202, !2206, !2208, !2209, !2210, !2212, !2213, !2214, !2215, !2216}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2194, file: !383, line: 117, baseType: !382, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2194, file: !383, line: 121, baseType: !667, size: 64, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2194, file: !383, line: 125, baseType: !2199, size: 64, offset: 128)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!661}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2194, file: !383, line: 130, baseType: !2203, size: 64, offset: 192)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{!6}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2194, file: !383, line: 133, baseType: !2207, size: 64, offset: 256)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2194, file: !383, line: 136, baseType: !2207, size: 64, offset: 320)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2194, file: !383, line: 139, baseType: !662, size: 32, offset: 384)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2194, file: !383, line: 143, baseType: !2211, size: 32, offset: 416)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !390, line: 80, baseType: !389)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2194, file: !383, line: 146, baseType: !6, size: 32, offset: 448)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2194, file: !383, line: 147, baseType: !6, size: 32, offset: 480)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2194, file: !383, line: 148, baseType: !6, size: 32, offset: 512)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2194, file: !383, line: 151, baseType: !6, size: 32, offset: 544)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2194, file: !383, line: 152, baseType: !6, size: 32, offset: 576)
!2217 = !DIGlobalVariableExpression(var: !2218, expr: !DIExpression())
!2218 = distinct !DIGlobalVariable(name: "pass_build_ealias", scope: !2, file: !3, line: 5647, type: !2191, isLocal: false, isDefinition: true)
!2219 = !DIGlobalVariableExpression(var: !2220, expr: !DIExpression())
!2220 = distinct !DIGlobalVariable(name: "pass_ipa_pta", scope: !2, file: !3, line: 5771, type: !2221, isLocal: false, isDefinition: true)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_ipa_opt_pass", file: !383, line: 202, size: 640, elements: !2222)
!2222 = !{!2223}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2221, file: !383, line: 204, baseType: !2194, size: 640)
!2224 = !DIGlobalVariableExpression(var: !2225, expr: !DIExpression())
!2225 = distinct !DIGlobalVariable(name: "gt_ggc_rc_gt_tree_ssa_structalias_h", scope: !2, file: !2226, line: 24, type: !2227, isLocal: false, isDefinition: true)
!2226 = !DIFile(filename: "./gt-tree-ssa-structalias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2228, size: 768, elements: !969)
!2228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2229)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_cache_tab", file: !2230, line: 85, size: 384, elements: !2231)
!2230 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2231 = !{!2232, !2234, !2235, !2236, !2238, !2239}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2229, file: !2230, line: 86, baseType: !2233, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2229, file: !2230, line: 87, baseType: !682, size: 64, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2229, file: !2230, line: 88, baseType: !682, size: 64, offset: 128)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2229, file: !2230, line: 89, baseType: !2237, size: 64, offset: 192)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !2230, line: 65, baseType: !1532)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2229, file: !2230, line: 90, baseType: !2237, size: 64, offset: 256)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "marked_p", scope: !2229, file: !2230, line: 91, baseType: !2240, size: 64, offset: 320)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{!662, !1355}
!2243 = !DIGlobalVariableExpression(var: !2244, expr: !DIExpression())
!2244 = distinct !DIGlobalVariable(name: "gt_pch_rc_gt_tree_ssa_structalias_h", scope: !2, file: !2226, line: 36, type: !2245, isLocal: false, isDefinition: true)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2246, size: 640, elements: !969)
!2246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !2230, line: 69, size: 320, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2253}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2247, file: !2230, line: 70, baseType: !666, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2247, file: !2230, line: 71, baseType: !682, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2247, file: !2230, line: 72, baseType: !682, size: 64, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2247, file: !2230, line: 73, baseType: !2237, size: 64, offset: 192)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2247, file: !2230, line: 74, baseType: !2237, size: 64, offset: 256)
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(name: "pta_stats", scope: !2, file: !3, line: 4894, type: !2256, isLocal: true, isDefinition: true)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 4889, size: 256, elements: !2257)
!2257 = !{!2258, !2259, !2260, !2261}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "pt_solution_includes_may_alias", scope: !2256, file: !3, line: 4890, baseType: !684, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "pt_solution_includes_no_alias", scope: !2256, file: !3, line: 4891, baseType: !684, size: 64, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "pt_solutions_intersect_may_alias", scope: !2256, file: !3, line: 4892, baseType: !684, size: 64, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "pt_solutions_intersect_no_alias", scope: !2256, file: !3, line: 4893, baseType: !684, size: 64, offset: 192)
!2262 = !DIGlobalVariableExpression(var: !2263, expr: !DIExpression())
!2263 = distinct !DIGlobalVariable(name: "varmap", scope: !2, file: !3, line: 279, type: !699, isLocal: true, isDefinition: true)
!2264 = !DIGlobalVariableExpression(var: !2265, expr: !DIExpression())
!2265 = distinct !DIGlobalVariable(name: "constraints", scope: !2, file: !3, line: 426, type: !685, isLocal: true, isDefinition: true)
!2266 = !DIGlobalVariableExpression(var: !2267, expr: !DIExpression())
!2267 = distinct !DIGlobalVariable(name: "graph", scope: !2, file: !3, line: 503, type: !2268, isLocal: true, isDefinition: true)
!2268 = !DIDerivedType(tag: DW_TAG_typedef, name: "constraint_graph_t", file: !3, line: 183, baseType: !2116)
!2269 = !DIGlobalVariableExpression(var: !2270, expr: !DIExpression())
!2270 = distinct !DIGlobalVariable(name: "stats", scope: !2, file: !3, line: 206, type: !2271, isLocal: true, isDefinition: true)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constraint_stats", file: !3, line: 196, size: 256, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "total_vars", scope: !2271, file: !3, line: 198, baseType: !6, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "nonpointer_vars", scope: !2271, file: !3, line: 199, baseType: !6, size: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "unified_vars_static", scope: !2271, file: !3, line: 200, baseType: !6, size: 32, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "unified_vars_dynamic", scope: !2271, file: !3, line: 201, baseType: !6, size: 32, offset: 96)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !2271, file: !3, line: 202, baseType: !6, size: 32, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "num_edges", scope: !2271, file: !3, line: 203, baseType: !6, size: 32, offset: 160)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "num_implicit_edges", scope: !2271, file: !3, line: 204, baseType: !6, size: 32, offset: 192)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "points_to_sets_created", scope: !2271, file: !3, line: 205, baseType: !6, size: 32, offset: 224)
!2281 = !DIGlobalVariableExpression(var: !2282, expr: !DIExpression())
!2282 = distinct !DIGlobalVariable(name: "use_field_sensitive", scope: !2, file: !3, line: 167, type: !661, isLocal: true, isDefinition: true)
!2283 = !DIGlobalVariableExpression(var: !2284, expr: !DIExpression())
!2284 = distinct !DIGlobalVariable(name: "pta_obstack", scope: !2, file: !3, line: 174, type: !975, isLocal: true, isDefinition: true)
!2285 = !DIGlobalVariableExpression(var: !2286, expr: !DIExpression())
!2286 = distinct !DIGlobalVariable(name: "oldpta_obstack", scope: !2, file: !3, line: 177, type: !975, isLocal: true, isDefinition: true)
!2287 = !DIGlobalVariableExpression(var: !2288, expr: !DIExpression())
!2288 = distinct !DIGlobalVariable(name: "predbitmap_obstack", scope: !2, file: !3, line: 171, type: !975, isLocal: true, isDefinition: true)
!2289 = !DIGlobalVariableExpression(var: !2290, expr: !DIExpression())
!2290 = distinct !DIGlobalVariable(name: "constraint_pool", scope: !2, file: !3, line: 427, type: !2291, isLocal: true, isDefinition: true)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !2292, line: 58, baseType: !2293)
!2292 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 64)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !2292, line: 32, size: 704, elements: !2295)
!2295 = !{!2296, !2297, !2298, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2294, file: !2292, line: 34, baseType: !667, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !2294, file: !2292, line: 38, baseType: !682, size: 64, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !2294, file: !2292, line: 41, baseType: !2299, size: 64, offset: 128)
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !2292, line: 30, baseType: !2300)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !2292, line: 26, size: 64, elements: !2302)
!2302 = !{!2303}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2301, file: !2292, line: 28, baseType: !2300, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !2294, file: !2292, line: 45, baseType: !664, size: 64, offset: 192)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !2294, file: !2292, line: 49, baseType: !682, size: 64, offset: 256)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !2294, file: !2292, line: 51, baseType: !682, size: 64, offset: 320)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !2294, file: !2292, line: 52, baseType: !682, size: 64, offset: 384)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !2294, file: !2292, line: 53, baseType: !682, size: 64, offset: 448)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !2294, file: !2292, line: 54, baseType: !2299, size: 64, offset: 512)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2294, file: !2292, line: 55, baseType: !682, size: 64, offset: 576)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !2294, file: !2292, line: 56, baseType: !682, size: 64, offset: 640)
!2312 = !DIGlobalVariableExpression(var: !2313, expr: !DIExpression())
!2313 = distinct !DIGlobalVariable(name: "variable_info_pool", scope: !2, file: !3, line: 271, type: !2291, isLocal: true, isDefinition: true)
!2314 = !DIGlobalVariableExpression(var: !2315, expr: !DIExpression())
!2315 = distinct !DIGlobalVariable(name: "vi_for_tree", scope: !2, file: !3, line: 2594, type: !1601, isLocal: true, isDefinition: true)
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "shared_bitmap_table", scope: !2, file: !3, line: 4699, type: !1514, isLocal: true, isDefinition: true)
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "in_ipa_mode", scope: !2, file: !3, line: 168, type: !662, isLocal: true, isDefinition: true)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "iteration_obstack", scope: !2, file: !3, line: 180, type: !975, isLocal: true, isDefinition: true)
!2322 = !DIGlobalVariableExpression(var: !2323, expr: !DIExpression())
!2323 = distinct !DIGlobalVariable(name: "pointer_equiv_class_table", scope: !2, file: !3, line: 1853, type: !1514, isLocal: true, isDefinition: true)
!2324 = !DIGlobalVariableExpression(var: !2325, expr: !DIExpression())
!2325 = distinct !DIGlobalVariable(name: "location_equiv_class_table", scope: !2, file: !3, line: 1857, type: !1514, isLocal: true, isDefinition: true)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "pointer_equiv_class", scope: !2, file: !3, line: 1964, type: !662, isLocal: true, isDefinition: true)
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "location_equiv_class", scope: !2, file: !3, line: 1967, type: !662, isLocal: true, isDefinition: true)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "changed", scope: !2, file: !3, line: 1290, type: !2136, isLocal: true, isDefinition: true)
!2332 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression())
!2333 = distinct !DIGlobalVariable(name: "changed_count", scope: !2, file: !3, line: 1289, type: !6, isLocal: true, isDefinition: true)
!2334 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2335 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 64))
!2336 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression(DW_OP_LLVM_fragment, 64, 64))
!2337 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression(DW_OP_LLVM_fragment, 128, 64))
!2338 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression(DW_OP_LLVM_fragment, 192, 64))
!2339 = !{i32 2, !"Dwarf Version", i32 4}
!2340 = !{i32 2, !"Debug Info Version", i32 3}
!2341 = !{i32 1, !"wchar_size", i32 4}
!2342 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2343 = distinct !DISubprogram(name: "vprintf", scope: !2344, file: !2344, line: 39, type: !2345, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2355)
!2344 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2345 = !DISubroutineType(types: !2346)
!2346 = !{!662, !2347, !2348}
!2347 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !667)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2350)
!2350 = !{!2351, !2352, !2353, !2354}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2349, file: !3, baseType: !6, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2349, file: !3, baseType: !6, size: 32, offset: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2349, file: !3, baseType: !666, size: 64, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2349, file: !3, baseType: !666, size: 64, offset: 128)
!2355 = !{!2356, !2357}
!2356 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2343, file: !2344, line: 39, type: !2347)
!2357 = !DILocalVariable(name: "__arg", arg: 2, scope: !2343, file: !2344, line: 39, type: !2348)
!2358 = !DILocation(line: 0, scope: !2343)
!2359 = !DILocation(line: 41, column: 20, scope: !2343)
!2360 = !DILocation(line: 41, column: 10, scope: !2343)
!2361 = !DILocation(line: 41, column: 3, scope: !2343)
!2362 = distinct !DISubprogram(name: "getchar", scope: !2344, file: !2344, line: 47, type: !2363, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!662}
!2365 = !{}
!2366 = !DILocation(line: 49, column: 16, scope: !2362)
!2367 = !DILocation(line: 49, column: 10, scope: !2362)
!2368 = !DILocation(line: 49, column: 3, scope: !2362)
!2369 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2344, file: !2344, line: 56, type: !2370, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2423)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!662, !2372}
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2374, line: 7, baseType: !2375)
!2374 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2376, line: 49, size: 1728, elements: !2377)
!2376 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2377 = !{!2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2393, !2395, !2396, !2397, !2400, !2402, !2403, !2404, !2407, !2409, !2412, !2415, !2416, !2417, !2418, !2419}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2375, file: !2376, line: 51, baseType: !662, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2375, file: !2376, line: 54, baseType: !664, size: 64, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2375, file: !2376, line: 55, baseType: !664, size: 64, offset: 128)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2375, file: !2376, line: 56, baseType: !664, size: 64, offset: 192)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2375, file: !2376, line: 57, baseType: !664, size: 64, offset: 256)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2375, file: !2376, line: 58, baseType: !664, size: 64, offset: 320)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2375, file: !2376, line: 59, baseType: !664, size: 64, offset: 384)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2375, file: !2376, line: 60, baseType: !664, size: 64, offset: 448)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2375, file: !2376, line: 61, baseType: !664, size: 64, offset: 512)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2375, file: !2376, line: 64, baseType: !664, size: 64, offset: 576)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2375, file: !2376, line: 65, baseType: !664, size: 64, offset: 640)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2375, file: !2376, line: 66, baseType: !664, size: 64, offset: 704)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2375, file: !2376, line: 68, baseType: !2391, size: 64, offset: 768)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2376, line: 36, flags: DIFlagFwdDecl)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2375, file: !2376, line: 70, baseType: !2394, size: 64, offset: 832)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2375, file: !2376, line: 72, baseType: !662, size: 32, offset: 896)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2375, file: !2376, line: 73, baseType: !662, size: 32, offset: 928)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2375, file: !2376, line: 74, baseType: !2398, size: 64, offset: 960)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2399, line: 152, baseType: !669)
!2399 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2375, file: !2376, line: 77, baseType: !2401, size: 16, offset: 1024)
!2401 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2375, file: !2376, line: 78, baseType: !1878, size: 8, offset: 1040)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2375, file: !2376, line: 79, baseType: !826, size: 8, offset: 1048)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2375, file: !2376, line: 81, baseType: !2405, size: 64, offset: 1088)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2376, line: 43, baseType: null)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2375, file: !2376, line: 89, baseType: !2408, size: 64, offset: 1152)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2399, line: 153, baseType: !669)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2375, file: !2376, line: 91, baseType: !2410, size: 64, offset: 1216)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2376, line: 37, flags: DIFlagFwdDecl)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2375, file: !2376, line: 92, baseType: !2413, size: 64, offset: 1280)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2376, line: 38, flags: DIFlagFwdDecl)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2375, file: !2376, line: 93, baseType: !2394, size: 64, offset: 1344)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2375, file: !2376, line: 94, baseType: !666, size: 64, offset: 1408)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2375, file: !2376, line: 95, baseType: !682, size: 64, offset: 1472)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2375, file: !2376, line: 96, baseType: !662, size: 32, offset: 1536)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2375, file: !2376, line: 98, baseType: !2420, size: 160, offset: 1568)
!2420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 160, elements: !2421)
!2421 = !{!2422}
!2422 = !DISubrange(count: 20)
!2423 = !{!2424}
!2424 = !DILocalVariable(name: "__fp", arg: 1, scope: !2369, file: !2344, line: 56, type: !2372)
!2425 = !DILocation(line: 0, scope: !2369)
!2426 = !DILocation(line: 58, column: 10, scope: !2369)
!2427 = !DILocation(line: 58, column: 3, scope: !2369)
!2428 = distinct !DISubprogram(name: "getc_unlocked", scope: !2344, file: !2344, line: 66, type: !2370, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2429)
!2429 = !{!2430}
!2430 = !DILocalVariable(name: "__fp", arg: 1, scope: !2428, file: !2344, line: 66, type: !2372)
!2431 = !DILocation(line: 0, scope: !2428)
!2432 = !DILocation(line: 68, column: 10, scope: !2428)
!2433 = !DILocation(line: 68, column: 3, scope: !2428)
!2434 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2344, file: !2344, line: 73, type: !2363, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!2435 = !DILocation(line: 75, column: 10, scope: !2434)
!2436 = !DILocation(line: 75, column: 3, scope: !2434)
!2437 = distinct !DISubprogram(name: "putchar", scope: !2344, file: !2344, line: 82, type: !2438, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2440)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!662, !662}
!2440 = !{!2441}
!2441 = !DILocalVariable(name: "__c", arg: 1, scope: !2437, file: !2344, line: 82, type: !662)
!2442 = !DILocation(line: 0, scope: !2437)
!2443 = !DILocation(line: 84, column: 21, scope: !2437)
!2444 = !DILocation(line: 84, column: 10, scope: !2437)
!2445 = !DILocation(line: 84, column: 3, scope: !2437)
!2446 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2344, file: !2344, line: 91, type: !2447, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2449)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!662, !662, !2372}
!2449 = !{!2450, !2451}
!2450 = !DILocalVariable(name: "__c", arg: 1, scope: !2446, file: !2344, line: 91, type: !662)
!2451 = !DILocalVariable(name: "__stream", arg: 2, scope: !2446, file: !2344, line: 91, type: !2372)
!2452 = !DILocation(line: 0, scope: !2446)
!2453 = !DILocation(line: 93, column: 10, scope: !2446)
!2454 = !DILocation(line: 93, column: 3, scope: !2446)
!2455 = distinct !DISubprogram(name: "putc_unlocked", scope: !2344, file: !2344, line: 101, type: !2447, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2456)
!2456 = !{!2457, !2458}
!2457 = !DILocalVariable(name: "__c", arg: 1, scope: !2455, file: !2344, line: 101, type: !662)
!2458 = !DILocalVariable(name: "__stream", arg: 2, scope: !2455, file: !2344, line: 101, type: !2372)
!2459 = !DILocation(line: 0, scope: !2455)
!2460 = !DILocation(line: 103, column: 10, scope: !2455)
!2461 = !DILocation(line: 103, column: 3, scope: !2455)
!2462 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2344, file: !2344, line: 108, type: !2438, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2463)
!2463 = !{!2464}
!2464 = !DILocalVariable(name: "__c", arg: 1, scope: !2462, file: !2344, line: 108, type: !662)
!2465 = !DILocation(line: 0, scope: !2462)
!2466 = !DILocation(line: 110, column: 10, scope: !2462)
!2467 = !DILocation(line: 110, column: 3, scope: !2462)
!2468 = distinct !DISubprogram(name: "getline", scope: !2344, file: !2344, line: 118, type: !2469, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2473)
!2469 = !DISubroutineType(types: !2470)
!2470 = !{!2471, !663, !2472, !2372}
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2399, line: 193, baseType: !669)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!2473 = !{!2474, !2475, !2476}
!2474 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2468, file: !2344, line: 118, type: !663)
!2475 = !DILocalVariable(name: "__n", arg: 2, scope: !2468, file: !2344, line: 118, type: !2472)
!2476 = !DILocalVariable(name: "__stream", arg: 3, scope: !2468, file: !2344, line: 118, type: !2372)
!2477 = !DILocation(line: 0, scope: !2468)
!2478 = !DILocation(line: 120, column: 10, scope: !2468)
!2479 = !DILocation(line: 120, column: 3, scope: !2468)
!2480 = distinct !DISubprogram(name: "feof_unlocked", scope: !2344, file: !2344, line: 128, type: !2370, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2481)
!2481 = !{!2482}
!2482 = !DILocalVariable(name: "__stream", arg: 1, scope: !2480, file: !2344, line: 128, type: !2372)
!2483 = !DILocation(line: 0, scope: !2480)
!2484 = !DILocation(line: 130, column: 10, scope: !2480)
!2485 = !DILocation(line: 130, column: 3, scope: !2480)
!2486 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2344, file: !2344, line: 135, type: !2370, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2487)
!2487 = !{!2488}
!2488 = !DILocalVariable(name: "__stream", arg: 1, scope: !2486, file: !2344, line: 135, type: !2372)
!2489 = !DILocation(line: 0, scope: !2486)
!2490 = !DILocation(line: 137, column: 10, scope: !2486)
!2491 = !DILocation(line: 137, column: 3, scope: !2486)
!2492 = distinct !DISubprogram(name: "tolower", scope: !2493, file: !2493, line: 207, type: !2438, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2494)
!2493 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2494 = !{!2495}
!2495 = !DILocalVariable(name: "__c", arg: 1, scope: !2492, file: !2493, line: 207, type: !662)
!2496 = !DILocation(line: 0, scope: !2492)
!2497 = !DILocation(line: 209, column: 22, scope: !2492)
!2498 = !DILocation(line: 209, column: 39, scope: !2492)
!2499 = !DILocation(line: 209, column: 38, scope: !2492)
!2500 = !DILocation(line: 209, column: 37, scope: !2492)
!2501 = !DILocation(line: 209, column: 10, scope: !2492)
!2502 = !DILocation(line: 209, column: 3, scope: !2492)
!2503 = distinct !DISubprogram(name: "toupper", scope: !2493, file: !2493, line: 213, type: !2438, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2504)
!2504 = !{!2505}
!2505 = !DILocalVariable(name: "__c", arg: 1, scope: !2503, file: !2493, line: 213, type: !662)
!2506 = !DILocation(line: 0, scope: !2503)
!2507 = !DILocation(line: 215, column: 22, scope: !2503)
!2508 = !DILocation(line: 215, column: 39, scope: !2503)
!2509 = !DILocation(line: 215, column: 38, scope: !2503)
!2510 = !DILocation(line: 215, column: 37, scope: !2503)
!2511 = !DILocation(line: 215, column: 10, scope: !2503)
!2512 = !DILocation(line: 215, column: 3, scope: !2503)
!2513 = distinct !DISubprogram(name: "atoi", scope: !2514, file: !2514, line: 361, type: !2515, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2517)
!2514 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2515 = !DISubroutineType(types: !2516)
!2516 = !{!662, !667}
!2517 = !{!2518}
!2518 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2513, file: !2514, line: 361, type: !667)
!2519 = !DILocation(line: 0, scope: !2513)
!2520 = !DILocation(line: 363, column: 16, scope: !2513)
!2521 = !DILocation(line: 363, column: 10, scope: !2513)
!2522 = !DILocation(line: 363, column: 3, scope: !2513)
!2523 = distinct !DISubprogram(name: "atol", scope: !2514, file: !2514, line: 366, type: !2524, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2526)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{!669, !667}
!2526 = !{!2527}
!2527 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2523, file: !2514, line: 366, type: !667)
!2528 = !DILocation(line: 0, scope: !2523)
!2529 = !DILocation(line: 368, column: 10, scope: !2523)
!2530 = !DILocation(line: 368, column: 3, scope: !2523)
!2531 = distinct !DISubprogram(name: "atoll", scope: !2514, file: !2514, line: 373, type: !2532, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2535)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!2534, !667}
!2534 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2535 = !{!2536}
!2536 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2531, file: !2514, line: 373, type: !667)
!2537 = !DILocation(line: 0, scope: !2531)
!2538 = !DILocation(line: 375, column: 10, scope: !2531)
!2539 = !DILocation(line: 375, column: 3, scope: !2531)
!2540 = distinct !DISubprogram(name: "bsearch", scope: !2541, file: !2541, line: 20, type: !2542, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2545)
!2541 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2542 = !DISubroutineType(types: !2543)
!2543 = !{!666, !1355, !1355, !682, !682, !2544}
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2514, line: 808, baseType: !1527)
!2545 = !{!2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555}
!2546 = !DILocalVariable(name: "__key", arg: 1, scope: !2540, file: !2541, line: 20, type: !1355)
!2547 = !DILocalVariable(name: "__base", arg: 2, scope: !2540, file: !2541, line: 20, type: !1355)
!2548 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2540, file: !2541, line: 20, type: !682)
!2549 = !DILocalVariable(name: "__size", arg: 4, scope: !2540, file: !2541, line: 20, type: !682)
!2550 = !DILocalVariable(name: "__compar", arg: 5, scope: !2540, file: !2541, line: 21, type: !2544)
!2551 = !DILocalVariable(name: "__l", scope: !2540, file: !2541, line: 23, type: !682)
!2552 = !DILocalVariable(name: "__u", scope: !2540, file: !2541, line: 23, type: !682)
!2553 = !DILocalVariable(name: "__idx", scope: !2540, file: !2541, line: 23, type: !682)
!2554 = !DILocalVariable(name: "__p", scope: !2540, file: !2541, line: 24, type: !1355)
!2555 = !DILocalVariable(name: "__comparison", scope: !2540, file: !2541, line: 25, type: !662)
!2556 = !DILocation(line: 0, scope: !2540)
!2557 = !DILocation(line: 29, column: 3, scope: !2540)
!2558 = !DILocation(line: 27, column: 7, scope: !2540)
!2559 = !DILocation(line: 29, column: 14, scope: !2540)
!2560 = !DILocation(line: 31, column: 20, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2540, file: !2541, line: 30, column: 5)
!2562 = !DILocation(line: 31, column: 27, scope: !2561)
!2563 = !DILocation(line: 32, column: 56, scope: !2561)
!2564 = !DILocation(line: 32, column: 47, scope: !2561)
!2565 = !DILocation(line: 33, column: 22, scope: !2561)
!2566 = !DILocation(line: 34, column: 24, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2561, file: !2541, line: 34, column: 11)
!2568 = !DILocation(line: 34, column: 11, scope: !2561)
!2569 = !DILocation(line: 36, column: 29, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2567, file: !2541, line: 36, column: 16)
!2571 = !DILocation(line: 36, column: 16, scope: !2567)
!2572 = !DILocation(line: 37, column: 14, scope: !2570)
!2573 = distinct !{!2573, !2557, !2574}
!2574 = !DILocation(line: 40, column: 5, scope: !2540)
!2575 = !DILocation(line: 43, column: 1, scope: !2540)
!2576 = distinct !DISubprogram(name: "atof", scope: !2577, file: !2577, line: 25, type: !2578, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2581)
!2577 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!2580, !667}
!2580 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2581 = !{!2582}
!2582 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2576, file: !2577, line: 25, type: !667)
!2583 = !DILocation(line: 0, scope: !2576)
!2584 = !DILocation(line: 27, column: 10, scope: !2576)
!2585 = !DILocation(line: 27, column: 3, scope: !2576)
!2586 = distinct !DISubprogram(name: "strtoimax", scope: !2587, file: !2587, line: 324, type: !2588, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2594)
!2587 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2588 = !DISubroutineType(types: !2589)
!2589 = !{!2590, !2347, !2593, !662}
!2590 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2591, line: 101, baseType: !2592)
!2591 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2399, line: 72, baseType: !669)
!2593 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !663)
!2594 = !{!2595, !2596, !2597}
!2595 = !DILocalVariable(name: "nptr", arg: 1, scope: !2586, file: !2587, line: 324, type: !2347)
!2596 = !DILocalVariable(name: "endptr", arg: 2, scope: !2586, file: !2587, line: 324, type: !2593)
!2597 = !DILocalVariable(name: "base", arg: 3, scope: !2586, file: !2587, line: 324, type: !662)
!2598 = !DILocation(line: 0, scope: !2586)
!2599 = !DILocation(line: 327, column: 10, scope: !2586)
!2600 = !DILocation(line: 327, column: 3, scope: !2586)
!2601 = distinct !DISubprogram(name: "strtoumax", scope: !2587, file: !2587, line: 336, type: !2602, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2606)
!2602 = !DISubroutineType(types: !2603)
!2603 = !{!2604, !2347, !2593, !662}
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2591, line: 102, baseType: !2605)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2399, line: 73, baseType: !684)
!2606 = !{!2607, !2608, !2609}
!2607 = !DILocalVariable(name: "nptr", arg: 1, scope: !2601, file: !2587, line: 336, type: !2347)
!2608 = !DILocalVariable(name: "endptr", arg: 2, scope: !2601, file: !2587, line: 336, type: !2593)
!2609 = !DILocalVariable(name: "base", arg: 3, scope: !2601, file: !2587, line: 336, type: !662)
!2610 = !DILocation(line: 0, scope: !2601)
!2611 = !DILocation(line: 339, column: 10, scope: !2601)
!2612 = !DILocation(line: 339, column: 3, scope: !2601)
!2613 = distinct !DISubprogram(name: "wcstoimax", scope: !2587, file: !2587, line: 348, type: !2614, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2623)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{!2590, !2616, !2620, !662}
!2616 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2617)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2619)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2587, line: 34, baseType: !662)
!2620 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2621)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 64)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2623 = !{!2624, !2625, !2626}
!2624 = !DILocalVariable(name: "nptr", arg: 1, scope: !2613, file: !2587, line: 348, type: !2616)
!2625 = !DILocalVariable(name: "endptr", arg: 2, scope: !2613, file: !2587, line: 348, type: !2620)
!2626 = !DILocalVariable(name: "base", arg: 3, scope: !2613, file: !2587, line: 348, type: !662)
!2627 = !DILocation(line: 0, scope: !2613)
!2628 = !DILocation(line: 351, column: 10, scope: !2613)
!2629 = !DILocation(line: 351, column: 3, scope: !2613)
!2630 = distinct !DISubprogram(name: "wcstoumax", scope: !2587, file: !2587, line: 362, type: !2631, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2633)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!2604, !2616, !2620, !662}
!2633 = !{!2634, !2635, !2636}
!2634 = !DILocalVariable(name: "nptr", arg: 1, scope: !2630, file: !2587, line: 362, type: !2616)
!2635 = !DILocalVariable(name: "endptr", arg: 2, scope: !2630, file: !2587, line: 362, type: !2620)
!2636 = !DILocalVariable(name: "base", arg: 3, scope: !2630, file: !2587, line: 362, type: !662)
!2637 = !DILocation(line: 0, scope: !2630)
!2638 = !DILocation(line: 365, column: 10, scope: !2630)
!2639 = !DILocation(line: 365, column: 3, scope: !2630)
!2640 = distinct !DISubprogram(name: "stat", scope: !2641, file: !2641, line: 453, type: !2642, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2679)
!2641 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2642 = !DISubroutineType(types: !2643)
!2643 = !{!662, !667, !2644}
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2646, line: 46, size: 1152, elements: !2647)
!2646 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2647 = !{!2648, !2650, !2652, !2654, !2656, !2658, !2660, !2661, !2662, !2663, !2665, !2667, !2675, !2676, !2677}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2645, file: !2646, line: 48, baseType: !2649, size: 64)
!2649 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2399, line: 145, baseType: !684)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2645, file: !2646, line: 53, baseType: !2651, size: 64, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2399, line: 148, baseType: !684)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2645, file: !2646, line: 61, baseType: !2653, size: 64, offset: 128)
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2399, line: 151, baseType: !684)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2645, file: !2646, line: 62, baseType: !2655, size: 32, offset: 192)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2399, line: 150, baseType: !6)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2645, file: !2646, line: 64, baseType: !2657, size: 32, offset: 224)
!2657 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2399, line: 146, baseType: !6)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2645, file: !2646, line: 65, baseType: !2659, size: 32, offset: 256)
!2659 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2399, line: 147, baseType: !6)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2645, file: !2646, line: 67, baseType: !662, size: 32, offset: 288)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2645, file: !2646, line: 69, baseType: !2649, size: 64, offset: 320)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2645, file: !2646, line: 74, baseType: !2398, size: 64, offset: 384)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2645, file: !2646, line: 78, baseType: !2664, size: 64, offset: 448)
!2664 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2399, line: 174, baseType: !669)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2645, file: !2646, line: 80, baseType: !2666, size: 64, offset: 512)
!2666 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2399, line: 179, baseType: !669)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2645, file: !2646, line: 91, baseType: !2668, size: 128, offset: 576)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2669, line: 10, size: 128, elements: !2670)
!2669 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2670 = !{!2671, !2673}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2668, file: !2669, line: 12, baseType: !2672, size: 64)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2399, line: 160, baseType: !669)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2668, file: !2669, line: 16, baseType: !2674, size: 64, offset: 64)
!2674 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2399, line: 196, baseType: !669)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2645, file: !2646, line: 92, baseType: !2668, size: 128, offset: 704)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2645, file: !2646, line: 93, baseType: !2668, size: 128, offset: 832)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2645, file: !2646, line: 106, baseType: !2678, size: 192, offset: 960)
!2678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2674, size: 192, elements: !802)
!2679 = !{!2680, !2681}
!2680 = !DILocalVariable(name: "__path", arg: 1, scope: !2640, file: !2641, line: 453, type: !667)
!2681 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2640, file: !2641, line: 453, type: !2644)
!2682 = !DILocation(line: 0, scope: !2640)
!2683 = !DILocation(line: 455, column: 10, scope: !2640)
!2684 = !DILocation(line: 455, column: 3, scope: !2640)
!2685 = distinct !DISubprogram(name: "lstat", scope: !2641, file: !2641, line: 460, type: !2642, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2686)
!2686 = !{!2687, !2688}
!2687 = !DILocalVariable(name: "__path", arg: 1, scope: !2685, file: !2641, line: 460, type: !667)
!2688 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2685, file: !2641, line: 460, type: !2644)
!2689 = !DILocation(line: 0, scope: !2685)
!2690 = !DILocation(line: 462, column: 10, scope: !2685)
!2691 = !DILocation(line: 462, column: 3, scope: !2685)
!2692 = distinct !DISubprogram(name: "fstat", scope: !2641, file: !2641, line: 467, type: !2693, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2695)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!662, !662, !2644}
!2695 = !{!2696, !2697}
!2696 = !DILocalVariable(name: "__fd", arg: 1, scope: !2692, file: !2641, line: 467, type: !662)
!2697 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2692, file: !2641, line: 467, type: !2644)
!2698 = !DILocation(line: 0, scope: !2692)
!2699 = !DILocation(line: 469, column: 10, scope: !2692)
!2700 = !DILocation(line: 469, column: 3, scope: !2692)
!2701 = distinct !DISubprogram(name: "fstatat", scope: !2641, file: !2641, line: 474, type: !2702, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2704)
!2702 = !DISubroutineType(types: !2703)
!2703 = !{!662, !662, !667, !2644, !662}
!2704 = !{!2705, !2706, !2707, !2708}
!2705 = !DILocalVariable(name: "__fd", arg: 1, scope: !2701, file: !2641, line: 474, type: !662)
!2706 = !DILocalVariable(name: "__filename", arg: 2, scope: !2701, file: !2641, line: 474, type: !667)
!2707 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2701, file: !2641, line: 474, type: !2644)
!2708 = !DILocalVariable(name: "__flag", arg: 4, scope: !2701, file: !2641, line: 474, type: !662)
!2709 = !DILocation(line: 0, scope: !2701)
!2710 = !DILocation(line: 477, column: 10, scope: !2701)
!2711 = !DILocation(line: 477, column: 3, scope: !2701)
!2712 = distinct !DISubprogram(name: "mknod", scope: !2641, file: !2641, line: 483, type: !2713, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2715)
!2713 = !DISubroutineType(types: !2714)
!2714 = !{!662, !667, !2655, !2649}
!2715 = !{!2716, !2717, !2718}
!2716 = !DILocalVariable(name: "__path", arg: 1, scope: !2712, file: !2641, line: 483, type: !667)
!2717 = !DILocalVariable(name: "__mode", arg: 2, scope: !2712, file: !2641, line: 483, type: !2655)
!2718 = !DILocalVariable(name: "__dev", arg: 3, scope: !2712, file: !2641, line: 483, type: !2649)
!2719 = !DILocation(line: 0, scope: !2712)
!2720 = !DILocation(line: 485, column: 10, scope: !2712)
!2721 = !DILocation(line: 485, column: 3, scope: !2712)
!2722 = distinct !DISubprogram(name: "mknodat", scope: !2641, file: !2641, line: 491, type: !2723, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2725)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!662, !662, !667, !2655, !2649}
!2725 = !{!2726, !2727, !2728, !2729}
!2726 = !DILocalVariable(name: "__fd", arg: 1, scope: !2722, file: !2641, line: 491, type: !662)
!2727 = !DILocalVariable(name: "__path", arg: 2, scope: !2722, file: !2641, line: 491, type: !667)
!2728 = !DILocalVariable(name: "__mode", arg: 3, scope: !2722, file: !2641, line: 491, type: !2655)
!2729 = !DILocalVariable(name: "__dev", arg: 4, scope: !2722, file: !2641, line: 491, type: !2649)
!2730 = !DILocation(line: 0, scope: !2722)
!2731 = !DILocation(line: 494, column: 10, scope: !2722)
!2732 = !DILocation(line: 494, column: 3, scope: !2722)
!2733 = distinct !DISubprogram(name: "stat64", scope: !2641, file: !2641, line: 502, type: !2734, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2756)
!2734 = !DISubroutineType(types: !2735)
!2735 = !{!662, !667, !2736}
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2646, line: 119, size: 1152, elements: !2738)
!2738 = !{!2739, !2740, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2752, !2753, !2754, !2755}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2737, file: !2646, line: 121, baseType: !2649, size: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2737, file: !2646, line: 123, baseType: !2741, size: 64, offset: 64)
!2741 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2399, line: 149, baseType: !684)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2737, file: !2646, line: 124, baseType: !2653, size: 64, offset: 128)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2737, file: !2646, line: 125, baseType: !2655, size: 32, offset: 192)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2737, file: !2646, line: 132, baseType: !2657, size: 32, offset: 224)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2737, file: !2646, line: 133, baseType: !2659, size: 32, offset: 256)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2737, file: !2646, line: 135, baseType: !662, size: 32, offset: 288)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2737, file: !2646, line: 136, baseType: !2649, size: 64, offset: 320)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2737, file: !2646, line: 137, baseType: !2398, size: 64, offset: 384)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2737, file: !2646, line: 143, baseType: !2664, size: 64, offset: 448)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2737, file: !2646, line: 144, baseType: !2751, size: 64, offset: 512)
!2751 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2399, line: 180, baseType: !669)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2737, file: !2646, line: 152, baseType: !2668, size: 128, offset: 576)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2737, file: !2646, line: 153, baseType: !2668, size: 128, offset: 704)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2737, file: !2646, line: 154, baseType: !2668, size: 128, offset: 832)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2737, file: !2646, line: 164, baseType: !2678, size: 192, offset: 960)
!2756 = !{!2757, !2758}
!2757 = !DILocalVariable(name: "__path", arg: 1, scope: !2733, file: !2641, line: 502, type: !667)
!2758 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2733, file: !2641, line: 502, type: !2736)
!2759 = !DILocation(line: 0, scope: !2733)
!2760 = !DILocation(line: 504, column: 10, scope: !2733)
!2761 = !DILocation(line: 504, column: 3, scope: !2733)
!2762 = distinct !DISubprogram(name: "lstat64", scope: !2641, file: !2641, line: 509, type: !2734, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2763)
!2763 = !{!2764, !2765}
!2764 = !DILocalVariable(name: "__path", arg: 1, scope: !2762, file: !2641, line: 509, type: !667)
!2765 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2762, file: !2641, line: 509, type: !2736)
!2766 = !DILocation(line: 0, scope: !2762)
!2767 = !DILocation(line: 511, column: 10, scope: !2762)
!2768 = !DILocation(line: 511, column: 3, scope: !2762)
!2769 = distinct !DISubprogram(name: "fstat64", scope: !2641, file: !2641, line: 516, type: !2770, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2772)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!662, !662, !2736}
!2772 = !{!2773, !2774}
!2773 = !DILocalVariable(name: "__fd", arg: 1, scope: !2769, file: !2641, line: 516, type: !662)
!2774 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2769, file: !2641, line: 516, type: !2736)
!2775 = !DILocation(line: 0, scope: !2769)
!2776 = !DILocation(line: 518, column: 10, scope: !2769)
!2777 = !DILocation(line: 518, column: 3, scope: !2769)
!2778 = distinct !DISubprogram(name: "fstatat64", scope: !2641, file: !2641, line: 523, type: !2779, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2781)
!2779 = !DISubroutineType(types: !2780)
!2780 = !{!662, !662, !667, !2736, !662}
!2781 = !{!2782, !2783, !2784, !2785}
!2782 = !DILocalVariable(name: "__fd", arg: 1, scope: !2778, file: !2641, line: 523, type: !662)
!2783 = !DILocalVariable(name: "__filename", arg: 2, scope: !2778, file: !2641, line: 523, type: !667)
!2784 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2778, file: !2641, line: 523, type: !2736)
!2785 = !DILocalVariable(name: "__flag", arg: 4, scope: !2778, file: !2641, line: 523, type: !662)
!2786 = !DILocation(line: 0, scope: !2778)
!2787 = !DILocation(line: 526, column: 10, scope: !2778)
!2788 = !DILocation(line: 526, column: 3, scope: !2778)
!2789 = distinct !DISubprogram(name: "debug_constraint", scope: !3, file: !3, line: 592, type: !2790, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2792)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{null, !670}
!2792 = !{!2793}
!2793 = !DILocalVariable(name: "c", arg: 1, scope: !2789, file: !3, line: 592, type: !670)
!2794 = !DILocation(line: 0, scope: !2789)
!2795 = !DILocation(line: 594, column: 20, scope: !2789)
!2796 = !DILocation(line: 594, column: 3, scope: !2789)
!2797 = !DILocation(line: 595, column: 1, scope: !2789)
!2798 = distinct !DISubprogram(name: "dump_constraint", scope: !3, file: !3, line: 558, type: !2799, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2801)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{null, !2372, !670}
!2801 = !{!2802, !2803}
!2802 = !DILocalVariable(name: "file", arg: 1, scope: !2798, file: !3, line: 558, type: !2372)
!2803 = !DILocalVariable(name: "c", arg: 2, scope: !2798, file: !3, line: 558, type: !670)
!2804 = !DILocation(line: 0, scope: !2798)
!2805 = !DILocation(line: 560, column: 14, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 560, column: 7)
!2807 = !DILocation(line: 560, column: 19, scope: !2806)
!2808 = !DILocation(line: 560, column: 7, scope: !2798)
!2809 = !DILocation(line: 561, column: 5, scope: !2806)
!2810 = !DILocation(line: 562, column: 24, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 562, column: 12)
!2812 = !DILocation(line: 562, column: 12, scope: !2806)
!2813 = !DILocation(line: 563, column: 5, scope: !2811)
!2814 = !DILocation(line: 564, column: 44, scope: !2798)
!2815 = !DILocation(line: 564, column: 24, scope: !2798)
!2816 = !DILocation(line: 564, column: 50, scope: !2798)
!2817 = !DILocation(line: 564, column: 3, scope: !2798)
!2818 = !DILocation(line: 565, column: 14, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 565, column: 7)
!2820 = !DILocation(line: 565, column: 21, scope: !2819)
!2821 = !DILocation(line: 565, column: 7, scope: !2798)
!2822 = !DILocation(line: 566, column: 5, scope: !2819)
!2823 = !DILocation(line: 567, column: 26, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 567, column: 12)
!2825 = !DILocation(line: 567, column: 12, scope: !2819)
!2826 = !DILocation(line: 568, column: 5, scope: !2824)
!2827 = !DILocation(line: 569, column: 3, scope: !2798)
!2828 = !DILocation(line: 570, column: 14, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 570, column: 7)
!2830 = !DILocation(line: 570, column: 19, scope: !2829)
!2831 = !DILocation(line: 570, column: 7, scope: !2798)
!2832 = !DILocation(line: 571, column: 5, scope: !2829)
!2833 = !DILocation(line: 572, column: 24, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 572, column: 12)
!2835 = !DILocation(line: 572, column: 12, scope: !2829)
!2836 = !DILocation(line: 573, column: 5, scope: !2834)
!2837 = !DILocation(line: 574, column: 44, scope: !2798)
!2838 = !DILocation(line: 574, column: 24, scope: !2798)
!2839 = !DILocation(line: 574, column: 50, scope: !2798)
!2840 = !DILocation(line: 574, column: 3, scope: !2798)
!2841 = !DILocation(line: 575, column: 14, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 575, column: 7)
!2843 = !DILocation(line: 575, column: 21, scope: !2842)
!2844 = !DILocation(line: 575, column: 7, scope: !2798)
!2845 = !DILocation(line: 576, column: 5, scope: !2842)
!2846 = !DILocation(line: 577, column: 26, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 577, column: 12)
!2848 = !DILocation(line: 577, column: 12, scope: !2842)
!2849 = !DILocation(line: 578, column: 5, scope: !2847)
!2850 = !DILocation(line: 579, column: 3, scope: !2798)
!2851 = !DILocation(line: 580, column: 1, scope: !2798)
!2852 = distinct !DISubprogram(name: "debug_constraints", scope: !3, file: !3, line: 611, type: !2853, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{null}
!2855 = !DILocation(line: 613, column: 21, scope: !2852)
!2856 = !DILocation(line: 613, column: 3, scope: !2852)
!2857 = !DILocation(line: 614, column: 1, scope: !2852)
!2858 = distinct !DISubprogram(name: "dump_constraints", scope: !3, file: !3, line: 600, type: !2859, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2861)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{null, !2372}
!2861 = !{!2862, !2863, !2864}
!2862 = !DILocalVariable(name: "file", arg: 1, scope: !2858, file: !3, line: 600, type: !2372)
!2863 = !DILocalVariable(name: "i", scope: !2858, file: !3, line: 602, type: !662)
!2864 = !DILocalVariable(name: "c", scope: !2858, file: !3, line: 603, type: !670)
!2865 = !DILocation(line: 0, scope: !2858)
!2866 = !DILocation(line: 603, column: 3, scope: !2858)
!2867 = !DILocation(line: 604, column: 8, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 604, column: 3)
!2869 = !DILocation(line: 0, scope: !2868)
!2870 = !DILocation(line: 604, column: 15, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 604, column: 3)
!2872 = !DILocation(line: 604, column: 3, scope: !2868)
!2873 = !DILocation(line: 605, column: 28, scope: !2871)
!2874 = !DILocation(line: 605, column: 5, scope: !2871)
!2875 = !DILocation(line: 604, column: 63, scope: !2871)
!2876 = !DILocation(line: 604, column: 3, scope: !2871)
!2877 = distinct !{!2877, !2872, !2878}
!2878 = !DILocation(line: 605, column: 29, scope: !2868)
!2879 = !DILocation(line: 606, column: 1, scope: !2858)
!2880 = distinct !DISubprogram(name: "debug_constraint_graph", scope: !3, file: !3, line: 701, type: !2853, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!2881 = !DILocation(line: 703, column: 26, scope: !2880)
!2882 = !DILocation(line: 703, column: 3, scope: !2880)
!2883 = !DILocation(line: 704, column: 1, scope: !2880)
!2884 = distinct !DISubprogram(name: "dump_constraint_graph", scope: !3, file: !3, line: 652, type: !2859, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2885)
!2885 = !{!2886, !2887, !2888, !2889, !2890}
!2886 = !DILocalVariable(name: "file", arg: 1, scope: !2884, file: !3, line: 652, type: !2372)
!2887 = !DILocalVariable(name: "i", scope: !2884, file: !3, line: 654, type: !6)
!2888 = !DILocalVariable(name: "size", scope: !2884, file: !3, line: 654, type: !6)
!2889 = !DILocalVariable(name: "c", scope: !2884, file: !3, line: 655, type: !670)
!2890 = !DILocalVariable(name: "name", scope: !2891, file: !3, line: 683, type: !667)
!2891 = distinct !DILexicalBlock(scope: !2892, file: !3, line: 682, column: 5)
!2892 = distinct !DILexicalBlock(scope: !2893, file: !3, line: 681, column: 3)
!2893 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 681, column: 3)
!2894 = !DILocation(line: 0, scope: !2884)
!2895 = !DILocation(line: 655, column: 3, scope: !2884)
!2896 = !DILocation(line: 658, column: 8, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 658, column: 7)
!2898 = !DILocation(line: 658, column: 7, scope: !2884)
!2899 = !DILocation(line: 663, column: 3, scope: !2884)
!2900 = !DILocation(line: 664, column: 3, scope: !2884)
!2901 = !DILocation(line: 665, column: 3, scope: !2884)
!2902 = !DILocation(line: 668, column: 3, scope: !2884)
!2903 = !DILocation(line: 669, column: 3, scope: !2884)
!2904 = !DILocation(line: 670, column: 3, scope: !2884)
!2905 = !DILocation(line: 671, column: 3, scope: !2884)
!2906 = !DILocation(line: 672, column: 3, scope: !2884)
!2907 = !DILocation(line: 679, column: 10, scope: !2884)
!2908 = !DILocation(line: 680, column: 17, scope: !2884)
!2909 = !DILocation(line: 680, column: 24, scope: !2884)
!2910 = !DILocation(line: 680, column: 15, scope: !2884)
!2911 = !DILocation(line: 680, column: 10, scope: !2884)
!2912 = !DILocation(line: 681, column: 8, scope: !2893)
!2913 = !DILocation(line: 0, scope: !2893)
!2914 = !DILocation(line: 681, column: 17, scope: !2892)
!2915 = !DILocation(line: 681, column: 3, scope: !2893)
!2916 = !DILocation(line: 683, column: 39, scope: !2891)
!2917 = !DILocation(line: 683, column: 46, scope: !2891)
!2918 = !DILocation(line: 683, column: 26, scope: !2891)
!2919 = !DILocation(line: 683, column: 55, scope: !2891)
!2920 = !DILocation(line: 0, scope: !2891)
!2921 = !DILocation(line: 684, column: 7, scope: !2891)
!2922 = !DILocation(line: 681, column: 26, scope: !2892)
!2923 = !DILocation(line: 681, column: 3, scope: !2892)
!2924 = distinct !{!2924, !2915, !2925}
!2925 = !DILocation(line: 685, column: 5, scope: !2893)
!2926 = !DILocation(line: 689, column: 3, scope: !2884)
!2927 = !DILocation(line: 690, column: 8, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 690, column: 3)
!2929 = !DILocation(line: 0, scope: !2928)
!2930 = !DILocation(line: 690, column: 15, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 690, column: 3)
!2932 = !DILocation(line: 690, column: 3, scope: !2928)
!2933 = !DILocation(line: 691, column: 9, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 691, column: 9)
!2935 = !DILocation(line: 691, column: 9, scope: !2931)
!2936 = !DILocation(line: 692, column: 7, scope: !2934)
!2937 = !DILocation(line: 690, column: 63, scope: !2931)
!2938 = !DILocation(line: 690, column: 3, scope: !2931)
!2939 = distinct !{!2939, !2932, !2940}
!2940 = !DILocation(line: 692, column: 36, scope: !2928)
!2941 = !DILocation(line: 695, column: 3, scope: !2884)
!2942 = !DILocation(line: 696, column: 1, scope: !2884)
!2943 = distinct !DISubprogram(name: "debug_solution_for_var", scope: !3, file: !3, line: 4607, type: !2944, scopeLine: 4608, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2946)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null, !6}
!2946 = !{!2947}
!2947 = !DILocalVariable(name: "var", arg: 1, scope: !2943, file: !3, line: 4607, type: !6)
!2948 = !DILocation(line: 0, scope: !2943)
!2949 = !DILocation(line: 4609, column: 26, scope: !2943)
!2950 = !DILocation(line: 4609, column: 3, scope: !2943)
!2951 = !DILocation(line: 4610, column: 1, scope: !2943)
!2952 = distinct !DISubprogram(name: "dump_solution_for_var", scope: !3, file: !3, line: 4582, type: !2953, scopeLine: 4583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2955)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{null, !2372, !6}
!2955 = !{!2956, !2957, !2958, !2959, !2960, !2968}
!2956 = !DILocalVariable(name: "file", arg: 1, scope: !2952, file: !3, line: 4582, type: !2372)
!2957 = !DILocalVariable(name: "var", arg: 2, scope: !2952, file: !3, line: 4582, type: !6)
!2958 = !DILocalVariable(name: "vi", scope: !2952, file: !3, line: 4584, type: !711)
!2959 = !DILocalVariable(name: "i", scope: !2952, file: !3, line: 4585, type: !6)
!2960 = !DILocalVariable(name: "bi", scope: !2952, file: !3, line: 4586, type: !2961)
!2961 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !955, line: 218, baseType: !2962)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !955, line: 203, size: 256, elements: !2963)
!2963 = !{!2964, !2965, !2966, !2967}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !2962, file: !955, line: 206, baseType: !958, size: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !2962, file: !955, line: 209, baseType: !958, size: 64, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !2962, file: !955, line: 212, baseType: !6, size: 32, offset: 128)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2962, file: !955, line: 217, baseType: !968, size: 64, offset: 192)
!2968 = !DILocalVariable(name: "vipt", scope: !2969, file: !3, line: 4590, type: !711)
!2969 = distinct !DILexicalBlock(scope: !2970, file: !3, line: 4589, column: 5)
!2970 = distinct !DILexicalBlock(scope: !2952, file: !3, line: 4588, column: 7)
!2971 = !DILocation(line: 0, scope: !2952)
!2972 = !DILocation(line: 4584, column: 18, scope: !2952)
!2973 = !DILocation(line: 4585, column: 3, scope: !2952)
!2974 = !DILocation(line: 4586, column: 3, scope: !2952)
!2975 = !DILocation(line: 4588, column: 7, scope: !2970)
!2976 = !DILocation(line: 4588, column: 18, scope: !2970)
!2977 = !DILocation(line: 4588, column: 7, scope: !2952)
!2978 = !DILocation(line: 4590, column: 37, scope: !2969)
!2979 = !DILocation(line: 4590, column: 24, scope: !2969)
!2980 = !DILocation(line: 0, scope: !2969)
!2981 = !DILocation(line: 4591, column: 47, scope: !2969)
!2982 = !DILocation(line: 4591, column: 59, scope: !2969)
!2983 = !DILocation(line: 4591, column: 7, scope: !2969)
!2984 = !DILocation(line: 4592, column: 5, scope: !2969)
!2985 = !DILocation(line: 4595, column: 37, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2970, file: !3, line: 4594, column: 5)
!2987 = !DILocation(line: 4595, column: 7, scope: !2986)
!2988 = !DILocation(line: 4596, column: 7, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 4596, column: 7)
!2990 = !DILocation(line: 4596, column: 7, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 4596, column: 7)
!2992 = !DILocation(line: 4598, column: 39, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 4597, column: 2)
!2994 = !DILocation(line: 4598, column: 26, scope: !2993)
!2995 = !DILocation(line: 4598, column: 43, scope: !2993)
!2996 = !DILocation(line: 4598, column: 4, scope: !2993)
!2997 = distinct !{!2997, !2988, !2998}
!2998 = !DILocation(line: 4599, column: 2, scope: !2989)
!2999 = !DILocation(line: 4600, column: 7, scope: !2986)
!3000 = !DILocation(line: 4602, column: 1, scope: !2952)
!3001 = distinct !DISubprogram(name: "dump_pta_stats", scope: !3, file: !3, line: 4897, type: !2859, scopeLine: 4898, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3002)
!3002 = !{!3003}
!3003 = !DILocalVariable(name: "s", arg: 1, scope: !3001, file: !3, line: 4897, type: !2372)
!3004 = !DILocation(line: 0, scope: !3001)
!3005 = !DILocation(line: 4899, column: 3, scope: !3001)
!3006 = !DILocation(line: 4903, column: 15, scope: !3001)
!3007 = !DILocation(line: 4905, column: 17, scope: !3001)
!3008 = !DILocation(line: 4905, column: 5, scope: !3001)
!3009 = !DILocation(line: 4900, column: 3, scope: !3001)
!3010 = !DILocation(line: 4909, column: 15, scope: !3001)
!3011 = !DILocation(line: 4911, column: 17, scope: !3001)
!3012 = !DILocation(line: 4911, column: 5, scope: !3001)
!3013 = !DILocation(line: 4906, column: 3, scope: !3001)
!3014 = !DILocation(line: 4912, column: 1, scope: !3001)
!3015 = distinct !DISubprogram(name: "pt_solution_reset", scope: !3, file: !3, line: 4919, type: !3016, scopeLine: 4920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3019)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{null, !3018}
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!3019 = !{!3020}
!3020 = !DILocalVariable(name: "pt", arg: 1, scope: !3015, file: !3, line: 4919, type: !3018)
!3021 = !DILocation(line: 0, scope: !3015)
!3022 = !DILocation(line: 4921, column: 11, scope: !3015)
!3023 = !DILocation(line: 4921, column: 3, scope: !3015)
!3024 = !DILocation(line: 4922, column: 16, scope: !3015)
!3025 = !DILocation(line: 4923, column: 1, scope: !3015)
!3026 = distinct !DISubprogram(name: "pt_solution_set", scope: !3, file: !3, line: 4929, type: !3027, scopeLine: 4930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3029)
!3027 = !DISubroutineType(types: !3028)
!3028 = !{null, !3018, !1598}
!3029 = !{!3030, !3031, !3032, !3033, !3034}
!3030 = !DILocalVariable(name: "pt", arg: 1, scope: !3026, file: !3, line: 4929, type: !3018)
!3031 = !DILocalVariable(name: "vars", arg: 2, scope: !3026, file: !3, line: 4929, type: !1598)
!3032 = !DILocalVariable(name: "bi", scope: !3026, file: !3, line: 4931, type: !2961)
!3033 = !DILocalVariable(name: "i", scope: !3026, file: !3, line: 4932, type: !6)
!3034 = !DILocalVariable(name: "var", scope: !3035, file: !3, line: 4938, type: !730)
!3035 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 4937, column: 5)
!3036 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 4936, column: 3)
!3037 = distinct !DILexicalBlock(scope: !3026, file: !3, line: 4936, column: 3)
!3038 = !DILocation(line: 0, scope: !3026)
!3039 = !DILocation(line: 4931, column: 3, scope: !3026)
!3040 = !DILocation(line: 4932, column: 3, scope: !3026)
!3041 = !DILocation(line: 4934, column: 11, scope: !3026)
!3042 = !DILocation(line: 4934, column: 3, scope: !3026)
!3043 = !DILocation(line: 4935, column: 7, scope: !3026)
!3044 = !DILocation(line: 4935, column: 12, scope: !3026)
!3045 = !DILocation(line: 4936, column: 3, scope: !3037)
!3046 = !DILocation(line: 4936, column: 3, scope: !3036)
!3047 = !DILocation(line: 4938, column: 41, scope: !3035)
!3048 = !DILocation(line: 4938, column: 18, scope: !3035)
!3049 = !DILocation(line: 0, scope: !3035)
!3050 = !DILocation(line: 4939, column: 11, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 4939, column: 11)
!3052 = !DILocation(line: 4939, column: 11, scope: !3035)
!3053 = !DILocation(line: 4941, column: 29, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 4940, column: 2)
!3055 = !DILocation(line: 4942, column: 4, scope: !3054)
!3056 = distinct !{!3056, !3045, !3057}
!3057 = !DILocation(line: 4944, column: 5, scope: !3037)
!3058 = !DILocation(line: 4945, column: 1, scope: !3026)
!3059 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !955, file: !955, line: 224, type: !3060, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3066)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{null, !3062, !3063, !6, !2127}
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!3063 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !731, line: 48, baseType: !3064)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!3066 = !{!3067, !3068, !3069, !3070}
!3067 = !DILocalVariable(name: "bi", arg: 1, scope: !3059, file: !955, line: 224, type: !3062)
!3068 = !DILocalVariable(name: "map", arg: 2, scope: !3059, file: !955, line: 224, type: !3063)
!3069 = !DILocalVariable(name: "start_bit", arg: 3, scope: !3059, file: !955, line: 225, type: !6)
!3070 = !DILocalVariable(name: "bit_no", arg: 4, scope: !3059, file: !955, line: 225, type: !2127)
!3071 = !DILocation(line: 0, scope: !3059)
!3072 = !DILocation(line: 227, column: 19, scope: !3059)
!3073 = !DILocation(line: 227, column: 12, scope: !3059)
!3074 = !DILocation(line: 228, column: 7, scope: !3059)
!3075 = !DILocation(line: 228, column: 12, scope: !3059)
!3076 = !DILocation(line: 0, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3078, file: !955, line: 233, column: 11)
!3078 = distinct !DILexicalBlock(scope: !3059, file: !955, line: 232, column: 5)
!3079 = !DILocation(line: 231, column: 3, scope: !3059)
!3080 = !DILocation(line: 233, column: 12, scope: !3077)
!3081 = !DILocation(line: 233, column: 11, scope: !3078)
!3082 = !DILocation(line: 235, column: 13, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3077, file: !955, line: 234, column: 2)
!3084 = !DILocation(line: 236, column: 4, scope: !3083)
!3085 = !DILocation(line: 239, column: 11, scope: !3078)
!3086 = distinct !{!3086, !3079, !3087}
!3087 = !DILocation(line: 242, column: 5, scope: !3059)
!3088 = !DILocation(line: 245, column: 11, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3059, file: !955, line: 245, column: 7)
!3090 = !DILocation(line: 245, column: 17, scope: !3089)
!3091 = !DILocation(line: 245, column: 22, scope: !3089)
!3092 = !DILocation(line: 245, column: 7, scope: !3059)
!3093 = !DILocation(line: 246, column: 27, scope: !3089)
!3094 = !DILocation(line: 246, column: 32, scope: !3089)
!3095 = !DILocation(line: 246, column: 5, scope: !3089)
!3096 = !DILocation(line: 249, column: 7, scope: !3059)
!3097 = !DILocation(line: 249, column: 15, scope: !3059)
!3098 = !DILocation(line: 250, column: 14, scope: !3059)
!3099 = !DILocation(line: 251, column: 7, scope: !3059)
!3100 = !DILocation(line: 251, column: 12, scope: !3059)
!3101 = !DILocation(line: 257, column: 16, scope: !3059)
!3102 = !DILocation(line: 257, column: 13, scope: !3059)
!3103 = !DILocation(line: 259, column: 11, scope: !3059)
!3104 = !DILocation(line: 260, column: 1, scope: !3059)
!3105 = distinct !DISubprogram(name: "bmp_iter_set", scope: !955, file: !955, line: 393, type: !3106, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3108)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{!661, !3062, !2127}
!3108 = !{!3109, !3110, !3111}
!3109 = !DILocalVariable(name: "bi", arg: 1, scope: !3105, file: !955, line: 393, type: !3062)
!3110 = !DILocalVariable(name: "bit_no", arg: 2, scope: !3105, file: !955, line: 393, type: !2127)
!3111 = !DILabel(scope: !3112, name: "next_bit", file: !955, line: 398)
!3112 = distinct !DILexicalBlock(scope: !3113, file: !955, line: 397, column: 5)
!3113 = distinct !DILexicalBlock(scope: !3105, file: !955, line: 396, column: 7)
!3114 = !DILocation(line: 0, scope: !3105)
!3115 = !DILocation(line: 396, column: 11, scope: !3113)
!3116 = !DILocation(line: 396, column: 7, scope: !3113)
!3117 = !DILocation(line: 396, column: 7, scope: !3105)
!3118 = !DILocation(line: 419, column: 15, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3120, file: !955, line: 418, column: 2)
!3120 = distinct !DILexicalBlock(scope: !3105, file: !955, line: 415, column: 5)
!3121 = !DILocation(line: 399, column: 7, scope: !3112)
!3122 = !DILocation(line: 398, column: 5, scope: !3112)
!3123 = !DILocation(line: 399, column: 20, scope: !3112)
!3124 = !DILocation(line: 399, column: 25, scope: !3112)
!3125 = !DILocation(line: 399, column: 14, scope: !3112)
!3126 = !DILocation(line: 401, column: 13, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3112, file: !955, line: 400, column: 2)
!3128 = !DILocation(line: 402, column: 12, scope: !3127)
!3129 = distinct !{!3129, !3121, !3130}
!3130 = !DILocation(line: 403, column: 2, scope: !3112)
!3131 = !DILocation(line: 410, column: 15, scope: !3105)
!3132 = !DILocation(line: 410, column: 42, scope: !3105)
!3133 = !DILocation(line: 411, column: 26, scope: !3105)
!3134 = !DILocation(line: 410, column: 11, scope: !3105)
!3135 = !DILocation(line: 412, column: 7, scope: !3105)
!3136 = !DILocation(line: 412, column: 14, scope: !3105)
!3137 = !DILocation(line: 0, scope: !3120)
!3138 = !DILocation(line: 414, column: 3, scope: !3105)
!3139 = !DILocation(line: 417, column: 7, scope: !3120)
!3140 = !DILocation(line: 417, column: 18, scope: !3120)
!3141 = !DILocation(line: 417, column: 26, scope: !3120)
!3142 = !DILocation(line: 419, column: 13, scope: !3119)
!3143 = !DILocation(line: 420, column: 8, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3119, file: !955, line: 420, column: 8)
!3145 = !DILocation(line: 420, column: 8, scope: !3119)
!3146 = !DILocation(line: 422, column: 12, scope: !3119)
!3147 = !DILocation(line: 423, column: 15, scope: !3119)
!3148 = distinct !{!3148, !3139, !3149}
!3149 = !DILocation(line: 424, column: 2, scope: !3120)
!3150 = !DILocation(line: 427, column: 28, scope: !3120)
!3151 = !DILocation(line: 427, column: 16, scope: !3120)
!3152 = !DILocation(line: 428, column: 12, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3120, file: !955, line: 428, column: 11)
!3154 = !DILocation(line: 428, column: 11, scope: !3120)
!3155 = !DILocation(line: 430, column: 27, scope: !3120)
!3156 = !DILocation(line: 430, column: 32, scope: !3120)
!3157 = !DILocation(line: 430, column: 15, scope: !3120)
!3158 = !DILocation(line: 431, column: 19, scope: !3120)
!3159 = distinct !{!3159, !3138, !3160}
!3160 = !DILocation(line: 432, column: 5, scope: !3105)
!3161 = !DILocation(line: 433, column: 1, scope: !3105)
!3162 = distinct !DISubprogram(name: "is_global_var", scope: !3163, file: !3163, line: 575, type: !3164, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3167)
!3163 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3164 = !DISubroutineType(types: !3165)
!3165 = !{!661, !3166}
!3166 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !731, line: 59, baseType: !2098)
!3167 = !{!3168}
!3168 = !DILocalVariable(name: "t", arg: 1, scope: !3162, file: !3163, line: 575, type: !3166)
!3169 = !DILocation(line: 0, scope: !3162)
!3170 = !DILocation(line: 577, column: 11, scope: !3162)
!3171 = !DILocation(line: 577, column: 27, scope: !3162)
!3172 = !DILocation(line: 577, column: 30, scope: !3162)
!3173 = !DILocation(line: 577, column: 3, scope: !3162)
!3174 = distinct !DISubprogram(name: "bmp_iter_next", scope: !955, file: !955, line: 382, type: !3175, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3177)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{null, !3062, !2127}
!3177 = !{!3178, !3179}
!3178 = !DILocalVariable(name: "bi", arg: 1, scope: !3174, file: !955, line: 382, type: !3062)
!3179 = !DILocalVariable(name: "bit_no", arg: 2, scope: !3174, file: !955, line: 382, type: !2127)
!3180 = !DILocation(line: 0, scope: !3174)
!3181 = !DILocation(line: 384, column: 7, scope: !3174)
!3182 = !DILocation(line: 384, column: 12, scope: !3174)
!3183 = !DILocation(line: 385, column: 11, scope: !3174)
!3184 = !DILocation(line: 386, column: 1, scope: !3174)
!3185 = distinct !DISubprogram(name: "pt_solution_includes_global", scope: !3, file: !3, line: 4971, type: !3186, scopeLine: 4972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3188)
!3186 = !DISubroutineType(types: !3187)
!3187 = !{!661, !3018}
!3188 = !{!3189}
!3189 = !DILocalVariable(name: "pt", arg: 1, scope: !3185, file: !3, line: 4971, type: !3018)
!3190 = !DILocation(line: 0, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 4978, column: 7)
!3192 = !DILocation(line: 4979, column: 12, scope: !3191)
!3193 = !DILocation(line: 0, scope: !3185)
!3194 = !DILocation(line: 4973, column: 11, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 4973, column: 7)
!3196 = !DILocation(line: 4973, column: 7, scope: !3195)
!3197 = !DILocation(line: 4974, column: 7, scope: !3195)
!3198 = !DILocation(line: 4974, column: 14, scope: !3195)
!3199 = !DILocation(line: 4974, column: 10, scope: !3195)
!3200 = !DILocation(line: 4975, column: 7, scope: !3195)
!3201 = !DILocation(line: 4975, column: 14, scope: !3195)
!3202 = !DILocation(line: 4975, column: 10, scope: !3195)
!3203 = !DILocation(line: 4973, column: 7, scope: !3185)
!3204 = !DILocation(line: 4978, column: 11, scope: !3191)
!3205 = !DILocation(line: 4978, column: 7, scope: !3191)
!3206 = !DILocation(line: 4978, column: 7, scope: !3185)
!3207 = !DILocation(line: 4979, column: 48, scope: !3191)
!3208 = !DILocation(line: 4979, column: 59, scope: !3191)
!3209 = !DILocation(line: 4982, column: 1, scope: !3185)
!3210 = distinct !DISubprogram(name: "pt_solution_includes", scope: !3, file: !3, line: 5010, type: !3211, scopeLine: 5011, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3213)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{!661, !3018, !3166}
!3213 = !{!3214, !3215, !3216}
!3214 = !DILocalVariable(name: "pt", arg: 1, scope: !3210, file: !3, line: 5010, type: !3018)
!3215 = !DILocalVariable(name: "decl", arg: 2, scope: !3210, file: !3, line: 5010, type: !3166)
!3216 = !DILocalVariable(name: "res", scope: !3210, file: !3, line: 5012, type: !661)
!3217 = !DILocation(line: 0, scope: !3210)
!3218 = !DILocation(line: 5012, column: 14, scope: !3210)
!3219 = !DILocation(line: 5013, column: 7, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 5013, column: 7)
!3221 = !DILocation(line: 5013, column: 7, scope: !3210)
!3222 = !DILocation(line: 5014, column: 5, scope: !3220)
!3223 = !DILocation(line: 5016, column: 5, scope: !3220)
!3224 = !DILocation(line: 5017, column: 3, scope: !3210)
!3225 = distinct !DISubprogram(name: "pt_solution_includes_1", scope: !3, file: !3, line: 4988, type: !3211, scopeLine: 4989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3226)
!3226 = !{!3227, !3228}
!3227 = !DILocalVariable(name: "pt", arg: 1, scope: !3225, file: !3, line: 4988, type: !3018)
!3228 = !DILocalVariable(name: "decl", arg: 2, scope: !3225, file: !3, line: 4988, type: !3166)
!3229 = !DILocation(line: 0, scope: !3225)
!3230 = !DILocation(line: 4990, column: 11, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 4990, column: 7)
!3232 = !DILocation(line: 4990, column: 7, scope: !3231)
!3233 = !DILocation(line: 4990, column: 7, scope: !3225)
!3234 = !DILocation(line: 4993, column: 11, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 4993, column: 7)
!3236 = !DILocation(line: 4993, column: 7, scope: !3235)
!3237 = !DILocation(line: 4994, column: 7, scope: !3235)
!3238 = !DILocation(line: 4994, column: 10, scope: !3235)
!3239 = !DILocation(line: 4993, column: 7, scope: !3225)
!3240 = !DILocation(line: 4997, column: 11, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 4997, column: 7)
!3242 = !DILocation(line: 4997, column: 7, scope: !3241)
!3243 = !DILocation(line: 4998, column: 7, scope: !3241)
!3244 = !DILocation(line: 4998, column: 34, scope: !3241)
!3245 = !DILocation(line: 4998, column: 10, scope: !3241)
!3246 = !DILocation(line: 4997, column: 7, scope: !3225)
!3247 = !DILocation(line: 5002, column: 11, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 5002, column: 7)
!3249 = !DILocation(line: 5002, column: 7, scope: !3248)
!3250 = !DILocation(line: 5003, column: 7, scope: !3248)
!3251 = !DILocation(line: 5003, column: 35, scope: !3248)
!3252 = !DILocation(line: 5003, column: 41, scope: !3248)
!3253 = !DILocation(line: 5003, column: 52, scope: !3248)
!3254 = !DILocation(line: 5003, column: 10, scope: !3248)
!3255 = !DILocation(line: 5002, column: 7, scope: !3225)
!3256 = !DILocation(line: 5006, column: 3, scope: !3225)
!3257 = !DILocation(line: 5007, column: 1, scope: !3225)
!3258 = distinct !DISubprogram(name: "pt_solutions_intersect", scope: !3, file: !3, line: 5063, type: !3259, scopeLine: 5064, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3261)
!3259 = !DISubroutineType(types: !3260)
!3260 = !{!661, !3018, !3018}
!3261 = !{!3262, !3263, !3264}
!3262 = !DILocalVariable(name: "pt1", arg: 1, scope: !3258, file: !3, line: 5063, type: !3018)
!3263 = !DILocalVariable(name: "pt2", arg: 2, scope: !3258, file: !3, line: 5063, type: !3018)
!3264 = !DILocalVariable(name: "res", scope: !3258, file: !3, line: 5065, type: !661)
!3265 = !DILocation(line: 0, scope: !3258)
!3266 = !DILocation(line: 5065, column: 14, scope: !3258)
!3267 = !DILocation(line: 5066, column: 7, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 5066, column: 7)
!3269 = !DILocation(line: 5066, column: 7, scope: !3258)
!3270 = !DILocation(line: 5067, column: 5, scope: !3268)
!3271 = !DILocation(line: 5069, column: 5, scope: !3268)
!3272 = !DILocation(line: 5070, column: 3, scope: !3258)
!3273 = distinct !DISubprogram(name: "pt_solutions_intersect_1", scope: !3, file: !3, line: 5024, type: !3259, scopeLine: 5025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3274)
!3274 = !{!3275, !3276}
!3275 = !DILocalVariable(name: "pt1", arg: 1, scope: !3273, file: !3, line: 5024, type: !3018)
!3276 = !DILocalVariable(name: "pt2", arg: 2, scope: !3273, file: !3, line: 5024, type: !3018)
!3277 = !DILocation(line: 0, scope: !3273)
!3278 = !DILocation(line: 5026, column: 12, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 5026, column: 7)
!3280 = !DILocation(line: 5026, column: 7, scope: !3279)
!3281 = !DILocation(line: 5026, column: 21, scope: !3279)
!3282 = !DILocation(line: 5026, column: 29, scope: !3279)
!3283 = !DILocation(line: 5026, column: 24, scope: !3279)
!3284 = !DILocation(line: 5026, column: 7, scope: !3273)
!3285 = !DILocation(line: 5031, column: 13, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 5031, column: 7)
!3287 = !DILocation(line: 5031, column: 8, scope: !3286)
!3288 = !DILocation(line: 5032, column: 8, scope: !3286)
!3289 = !DILocation(line: 5034, column: 16, scope: !3286)
!3290 = !DILocation(line: 5032, column: 17, scope: !3286)
!3291 = !DILocation(line: 5032, column: 12, scope: !3286)
!3292 = !DILocation(line: 5033, column: 5, scope: !3286)
!3293 = !DILocation(line: 5033, column: 13, scope: !3286)
!3294 = !DILocation(line: 5033, column: 8, scope: !3286)
!3295 = !DILocation(line: 5034, column: 7, scope: !3286)
!3296 = !DILocation(line: 5035, column: 4, scope: !3286)
!3297 = !DILocation(line: 5035, column: 12, scope: !3286)
!3298 = !DILocation(line: 5035, column: 7, scope: !3286)
!3299 = !DILocation(line: 5031, column: 7, scope: !3273)
!3300 = !DILocation(line: 5039, column: 13, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 5039, column: 7)
!3302 = !DILocation(line: 5039, column: 8, scope: !3301)
!3303 = !DILocation(line: 5039, column: 21, scope: !3301)
!3304 = !DILocation(line: 5039, column: 29, scope: !3301)
!3305 = !DILocation(line: 5039, column: 24, scope: !3301)
!3306 = !DILocation(line: 5040, column: 7, scope: !3301)
!3307 = !DILocation(line: 5040, column: 33, scope: !3301)
!3308 = !DILocation(line: 5040, column: 39, scope: !3301)
!3309 = !DILocation(line: 5040, column: 50, scope: !3301)
!3310 = !DILocation(line: 5040, column: 11, scope: !3301)
!3311 = !DILocation(line: 5039, column: 7, scope: !3273)
!3312 = !DILocation(line: 5044, column: 16, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 5044, column: 11)
!3314 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 5041, column: 5)
!3315 = !DILocation(line: 5044, column: 11, scope: !3313)
!3316 = !DILocation(line: 5044, column: 24, scope: !3313)
!3317 = !DILocation(line: 5044, column: 32, scope: !3313)
!3318 = !DILocation(line: 5044, column: 27, scope: !3313)
!3319 = !DILocation(line: 5044, column: 11, scope: !3314)
!3320 = !DILocation(line: 5050, column: 5, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 5049, column: 11)
!3322 = !DILocation(line: 5050, column: 35, scope: !3321)
!3323 = !DILocation(line: 5050, column: 41, scope: !3321)
!3324 = !DILocation(line: 5050, column: 52, scope: !3321)
!3325 = !DILocation(line: 5050, column: 8, scope: !3321)
!3326 = !DILocation(line: 5051, column: 4, scope: !3321)
!3327 = !DILocation(line: 5051, column: 13, scope: !3321)
!3328 = !DILocation(line: 5051, column: 8, scope: !3321)
!3329 = !DILocation(line: 5052, column: 8, scope: !3321)
!3330 = !DILocation(line: 5052, column: 38, scope: !3321)
!3331 = !DILocation(line: 5052, column: 44, scope: !3321)
!3332 = !DILocation(line: 5052, column: 55, scope: !3321)
!3333 = !DILocation(line: 5052, column: 11, scope: !3321)
!3334 = !DILocation(line: 5049, column: 11, scope: !3314)
!3335 = !DILocation(line: 5057, column: 16, scope: !3273)
!3336 = !DILocation(line: 5057, column: 11, scope: !3273)
!3337 = !DILocation(line: 5058, column: 4, scope: !3273)
!3338 = !DILocation(line: 5058, column: 12, scope: !3273)
!3339 = !DILocation(line: 5058, column: 7, scope: !3273)
!3340 = !DILocation(line: 5059, column: 4, scope: !3273)
!3341 = !DILocation(line: 5059, column: 7, scope: !3273)
!3342 = !DILocation(line: 5057, column: 3, scope: !3273)
!3343 = !DILocation(line: 5060, column: 1, scope: !3273)
!3344 = distinct !DISubprogram(name: "pt_solutions_same_restrict_base", scope: !3, file: !3, line: 5077, type: !3259, scopeLine: 5079, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3345)
!3345 = !{!3346, !3347}
!3346 = !DILocalVariable(name: "pt1", arg: 1, scope: !3344, file: !3, line: 5077, type: !3018)
!3347 = !DILocalVariable(name: "pt2", arg: 2, scope: !3344, file: !3, line: 5078, type: !3018)
!3348 = !DILocation(line: 0, scope: !3344)
!3349 = !DILocation(line: 5084, column: 12, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 5084, column: 7)
!3351 = !DILocation(line: 5084, column: 7, scope: !3350)
!3352 = !DILocation(line: 5085, column: 7, scope: !3350)
!3353 = !DILocation(line: 5085, column: 15, scope: !3350)
!3354 = !DILocation(line: 5085, column: 10, scope: !3350)
!3355 = !DILocation(line: 5084, column: 7, scope: !3344)
!3356 = !DILocation(line: 5087, column: 7, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 5086, column: 5)
!3358 = !DILocation(line: 5088, column: 39, scope: !3357)
!3359 = !DILocation(line: 0, scope: !3357)
!3360 = !DILocation(line: 5088, column: 50, scope: !3357)
!3361 = !DILocation(line: 5088, column: 14, scope: !3357)
!3362 = !DILocation(line: 5088, column: 7, scope: !3357)
!3363 = !DILocation(line: 5092, column: 1, scope: !3344)
!3364 = distinct !DISubprogram(name: "debug_sa_points_to_info", scope: !3, file: !3, line: 5128, type: !2853, scopeLine: 5129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!3365 = !DILocation(line: 5130, column: 27, scope: !3364)
!3366 = !DILocation(line: 5130, column: 3, scope: !3364)
!3367 = !DILocation(line: 5131, column: 1, scope: !3364)
!3368 = distinct !DISubprogram(name: "dump_sa_points_to_info", scope: !3, file: !3, line: 5098, type: !2859, scopeLine: 5099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3369)
!3369 = !{!3370, !3371}
!3370 = !DILocalVariable(name: "outfile", arg: 1, scope: !3368, file: !3, line: 5098, type: !2372)
!3371 = !DILocalVariable(name: "i", scope: !3368, file: !3, line: 5100, type: !6)
!3372 = !DILocation(line: 0, scope: !3368)
!3373 = !DILocation(line: 5102, column: 3, scope: !3368)
!3374 = !DILocation(line: 5104, column: 7, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 5104, column: 7)
!3376 = !DILocation(line: 5104, column: 18, scope: !3375)
!3377 = !DILocation(line: 5104, column: 7, scope: !3368)
!3378 = !DILocation(line: 5106, column: 7, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 5105, column: 5)
!3380 = !DILocation(line: 5107, column: 65, scope: !3379)
!3381 = !DILocation(line: 5107, column: 7, scope: !3379)
!3382 = !DILocation(line: 5109, column: 15, scope: !3379)
!3383 = !DILocation(line: 5108, column: 7, scope: !3379)
!3384 = !DILocation(line: 5111, column: 15, scope: !3379)
!3385 = !DILocation(line: 5110, column: 7, scope: !3379)
!3386 = !DILocation(line: 5113, column: 15, scope: !3379)
!3387 = !DILocation(line: 5112, column: 7, scope: !3379)
!3388 = !DILocation(line: 5114, column: 65, scope: !3379)
!3389 = !DILocation(line: 5114, column: 7, scope: !3379)
!3390 = !DILocation(line: 5115, column: 65, scope: !3379)
!3391 = !DILocation(line: 5115, column: 7, scope: !3379)
!3392 = !DILocation(line: 5117, column: 15, scope: !3379)
!3393 = !DILocation(line: 5116, column: 7, scope: !3379)
!3394 = !DILocation(line: 5118, column: 5, scope: !3379)
!3395 = !DILocation(line: 5120, column: 8, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 5120, column: 3)
!3397 = !DILocation(line: 0, scope: !3396)
!3398 = !DILocation(line: 5120, column: 19, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 5120, column: 3)
!3400 = !DILocation(line: 5120, column: 17, scope: !3399)
!3401 = !DILocation(line: 5120, column: 3, scope: !3396)
!3402 = !DILocation(line: 5121, column: 5, scope: !3399)
!3403 = !DILocation(line: 5120, column: 52, scope: !3399)
!3404 = !DILocation(line: 5120, column: 3, scope: !3399)
!3405 = distinct !{!3405, !3401, !3406}
!3406 = !DILocation(line: 5121, column: 38, scope: !3396)
!3407 = !DILocation(line: 5122, column: 1, scope: !3368)
!3408 = distinct !DISubprogram(name: "delete_alias_heapvars", scope: !3, file: !3, line: 5408, type: !2853, scopeLine: 5409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!3409 = !DILocation(line: 5410, column: 7, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 5410, column: 7)
!3411 = !DILocation(line: 5410, column: 7, scope: !3408)
!3412 = !DILocation(line: 5411, column: 5, scope: !3410)
!3413 = !DILocation(line: 5412, column: 20, scope: !3408)
!3414 = !DILocation(line: 5413, column: 1, scope: !3408)
!3415 = distinct !DISubprogram(name: "compute_may_aliases", scope: !3, file: !3, line: 5591, type: !2204, scopeLine: 5592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!3416 = !DILocation(line: 5596, column: 3, scope: !3415)
!3417 = !DILocation(line: 5599, column: 7, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 5599, column: 7)
!3419 = !DILocation(line: 5599, column: 7, scope: !3415)
!3420 = !DILocation(line: 5601, column: 7, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 5600, column: 5)
!3422 = !DILocation(line: 5603, column: 11, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 5603, column: 11)
!3424 = !DILocation(line: 5603, column: 22, scope: !3423)
!3425 = !DILocation(line: 5603, column: 11, scope: !3421)
!3426 = !DILocation(line: 5604, column: 24, scope: !3423)
!3427 = !DILocation(line: 5604, column: 2, scope: !3423)
!3428 = !DILocation(line: 5609, column: 3, scope: !3415)
!3429 = !DILocation(line: 5611, column: 3, scope: !3415)
!3430 = !DILocation(line: 5613, column: 3, scope: !3415)
!3431 = distinct !DISubprogram(name: "compute_points_to_sets", scope: !3, file: !3, line: 5483, type: !2853, scopeLine: 5484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3432)
!3432 = !{!3433, !3434, !3435, !3436, !3446, !3450, !3454}
!3433 = !DILocalVariable(name: "bb", scope: !3431, file: !3, line: 5485, type: !1482)
!3434 = !DILocalVariable(name: "i", scope: !3431, file: !3, line: 5486, type: !6)
!3435 = !DILocalVariable(name: "vi", scope: !3431, file: !3, line: 5487, type: !711)
!3436 = !DILocalVariable(name: "gsi", scope: !3437, file: !3, line: 5499, type: !3440)
!3437 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 5498, column: 5)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 5497, column: 3)
!3439 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 5497, column: 3)
!3440 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !566, line: 265, baseType: !3441)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 254, size: 192, elements: !3442)
!3442 = !{!3443, !3444, !3445}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3441, file: !566, line: 257, baseType: !1045, size: 64)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3441, file: !566, line: 263, baseType: !1040, size: 64, offset: 64)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3441, file: !566, line: 264, baseType: !1482, size: 64, offset: 128)
!3446 = !DILocalVariable(name: "phi", scope: !3447, file: !3, line: 5503, type: !1050)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !3, line: 5502, column: 2)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 5501, column: 7)
!3449 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 5501, column: 7)
!3450 = !DILocalVariable(name: "stmt", scope: !3451, file: !3, line: 5511, type: !1050)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 5510, column: 2)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !3, line: 5509, column: 7)
!3453 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 5509, column: 7)
!3454 = !DILocalVariable(name: "ptr", scope: !3455, file: !3, line: 5543, type: !730)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 5542, column: 5)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 5541, column: 3)
!3457 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 5541, column: 3)
!3458 = !DILocation(line: 5487, column: 3, scope: !3431)
!3459 = !DILocation(line: 5489, column: 3, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 5489, column: 3)
!3461 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 5489, column: 3)
!3462 = !DILocation(line: 5489, column: 3, scope: !3461)
!3463 = !DILocation(line: 5491, column: 3, scope: !3431)
!3464 = !DILocation(line: 5492, column: 3, scope: !3431)
!3465 = !DILocation(line: 5494, column: 3, scope: !3431)
!3466 = !DILocation(line: 5497, column: 3, scope: !3439)
!3467 = !DILocation(line: 0, scope: !3437)
!3468 = !DILocation(line: 0, scope: !3449)
!3469 = !DILocation(line: 0, scope: !3453)
!3470 = !DILocation(line: 5497, column: 3, scope: !3438)
!3471 = !DILocation(line: 0, scope: !3439)
!3472 = !DILocation(line: 0, scope: !3431)
!3473 = !DILocation(line: 5499, column: 7, scope: !3437)
!3474 = !DILocation(line: 5501, column: 18, scope: !3449)
!3475 = !DILocation(line: 5501, column: 12, scope: !3449)
!3476 = !DILocation(line: 5501, column: 40, scope: !3448)
!3477 = !DILocation(line: 5501, column: 39, scope: !3448)
!3478 = !DILocation(line: 5501, column: 7, scope: !3449)
!3479 = !DILocation(line: 5503, column: 17, scope: !3447)
!3480 = !DILocation(line: 0, scope: !3447)
!3481 = !DILocation(line: 5505, column: 23, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 5505, column: 8)
!3483 = !DILocation(line: 5505, column: 8, scope: !3482)
!3484 = !DILocation(line: 5505, column: 8, scope: !3447)
!3485 = !DILocation(line: 5506, column: 6, scope: !3482)
!3486 = !DILocation(line: 5501, column: 57, scope: !3448)
!3487 = !DILocation(line: 5501, column: 7, scope: !3448)
!3488 = distinct !{!3488, !3478, !3489}
!3489 = !DILocation(line: 5507, column: 2, scope: !3449)
!3490 = !DILocation(line: 5509, column: 18, scope: !3453)
!3491 = !DILocation(line: 5509, column: 12, scope: !3453)
!3492 = !DILocation(line: 5509, column: 38, scope: !3452)
!3493 = !DILocation(line: 5509, column: 37, scope: !3452)
!3494 = !DILocation(line: 5509, column: 7, scope: !3453)
!3495 = !DILocation(line: 5511, column: 18, scope: !3451)
!3496 = !DILocation(line: 0, scope: !3451)
!3497 = !DILocation(line: 5513, column: 4, scope: !3451)
!3498 = !DILocation(line: 5509, column: 55, scope: !3452)
!3499 = !DILocation(line: 5509, column: 7, scope: !3452)
!3500 = distinct !{!3500, !3494, !3501}
!3501 = !DILocation(line: 5514, column: 2, scope: !3453)
!3502 = !DILocation(line: 5515, column: 5, scope: !3438)
!3503 = !DILocation(line: 0, scope: !3438)
!3504 = distinct !{!3504, !3466, !3505}
!3505 = !DILocation(line: 5515, column: 5, scope: !3439)
!3506 = !DILocation(line: 5518, column: 3, scope: !3431)
!3507 = !DILocation(line: 5522, column: 28, scope: !3431)
!3508 = !DILocation(line: 5523, column: 8, scope: !3431)
!3509 = !DILocation(line: 5523, column: 14, scope: !3431)
!3510 = !DILocation(line: 5523, column: 25, scope: !3431)
!3511 = !DILocation(line: 5522, column: 3, scope: !3431)
!3512 = !DILocation(line: 5524, column: 28, scope: !3431)
!3513 = !DILocation(line: 5525, column: 8, scope: !3431)
!3514 = !DILocation(line: 5525, column: 14, scope: !3431)
!3515 = !DILocation(line: 5525, column: 25, scope: !3431)
!3516 = !DILocation(line: 5524, column: 3, scope: !3431)
!3517 = !DILocation(line: 5530, column: 3, scope: !3431)
!3518 = !DILocation(line: 5530, column: 9, scope: !3431)
!3519 = !DILocation(line: 5530, column: 28, scope: !3431)
!3520 = !DILocation(line: 5530, column: 36, scope: !3431)
!3521 = !DILocation(line: 5533, column: 8, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 5533, column: 3)
!3523 = !DILocation(line: 0, scope: !3522)
!3524 = !DILocation(line: 5533, column: 15, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 5533, column: 3)
!3526 = !DILocation(line: 5533, column: 3, scope: !3522)
!3527 = !DILocation(line: 5541, column: 3, scope: !3457)
!3528 = !DILocation(line: 5534, column: 9, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3525, file: !3, line: 5534, column: 9)
!3530 = !DILocation(line: 5534, column: 13, scope: !3529)
!3531 = !DILocation(line: 5535, column: 2, scope: !3529)
!3532 = !DILocation(line: 5535, column: 10, scope: !3529)
!3533 = !DILocation(line: 5535, column: 6, scope: !3529)
!3534 = !DILocation(line: 5536, column: 2, scope: !3529)
!3535 = !DILocation(line: 5536, column: 6, scope: !3529)
!3536 = !DILocation(line: 5534, column: 9, scope: !3525)
!3537 = !DILocation(line: 5538, column: 27, scope: !3529)
!3538 = !DILocation(line: 5538, column: 33, scope: !3529)
!3539 = !DILocation(line: 5538, column: 44, scope: !3529)
!3540 = !DILocation(line: 5538, column: 57, scope: !3529)
!3541 = !DILocation(line: 5538, column: 4, scope: !3529)
!3542 = !DILocation(line: 5537, column: 34, scope: !3529)
!3543 = !DILocation(line: 5537, column: 38, scope: !3529)
!3544 = !DILocation(line: 5538, column: 2, scope: !3529)
!3545 = !DILocation(line: 5537, column: 7, scope: !3529)
!3546 = !DILocation(line: 5537, column: 32, scope: !3529)
!3547 = !DILocation(line: 5533, column: 55, scope: !3525)
!3548 = !DILocation(line: 5533, column: 3, scope: !3525)
!3549 = distinct !{!3549, !3526, !3550}
!3550 = !DILocation(line: 5538, column: 61, scope: !3522)
!3551 = !DILocation(line: 0, scope: !3457)
!3552 = !DILocation(line: 5541, column: 19, scope: !3456)
!3553 = !DILocation(line: 5541, column: 17, scope: !3456)
!3554 = !DILocation(line: 5543, column: 18, scope: !3455)
!3555 = !DILocation(line: 0, scope: !3455)
!3556 = !DILocation(line: 5544, column: 11, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 5544, column: 11)
!3558 = !DILocation(line: 5545, column: 4, scope: !3557)
!3559 = !DILocation(line: 5545, column: 7, scope: !3557)
!3560 = !DILocation(line: 5544, column: 11, scope: !3455)
!3561 = !DILocation(line: 5546, column: 2, scope: !3557)
!3562 = !DILocation(line: 5541, column: 34, scope: !3456)
!3563 = !DILocation(line: 5541, column: 3, scope: !3456)
!3564 = distinct !{!3564, !3527, !3565}
!3565 = !DILocation(line: 5547, column: 5, scope: !3457)
!3566 = !DILocation(line: 5549, column: 3, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 5549, column: 3)
!3568 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 5549, column: 3)
!3569 = !DILocation(line: 5549, column: 3, scope: !3568)
!3570 = !DILocation(line: 5550, column: 1, scope: !3431)
!3571 = distinct !DISubprogram(name: "delete_points_to_sets", scope: !3, file: !3, line: 5556, type: !2853, scopeLine: 5557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3572)
!3572 = !{!3573}
!3573 = !DILocalVariable(name: "i", scope: !3571, file: !3, line: 5558, type: !6)
!3574 = !DILocation(line: 5560, column: 16, scope: !3571)
!3575 = !DILocation(line: 5560, column: 3, scope: !3571)
!3576 = !DILocation(line: 5561, column: 7, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 5561, column: 7)
!3578 = !DILocation(line: 5561, column: 17, scope: !3577)
!3579 = !DILocation(line: 5561, column: 21, scope: !3577)
!3580 = !DILocation(line: 5561, column: 32, scope: !3577)
!3581 = !DILocation(line: 5561, column: 7, scope: !3571)
!3582 = !DILocation(line: 5563, column: 13, scope: !3577)
!3583 = !DILocation(line: 5562, column: 5, scope: !3577)
!3584 = !DILocation(line: 5565, column: 24, scope: !3571)
!3585 = !DILocation(line: 5565, column: 3, scope: !3571)
!3586 = !DILocation(line: 5566, column: 3, scope: !3571)
!3587 = !DILocation(line: 5567, column: 3, scope: !3571)
!3588 = !DILocation(line: 0, scope: !3571)
!3589 = !DILocation(line: 5569, column: 8, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 5569, column: 3)
!3591 = !DILocation(line: 0, scope: !3590)
!3592 = !DILocation(line: 5569, column: 19, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3590, file: !3, line: 5569, column: 3)
!3594 = !DILocation(line: 5569, column: 26, scope: !3593)
!3595 = !DILocation(line: 5569, column: 17, scope: !3593)
!3596 = !DILocation(line: 5569, column: 3, scope: !3590)
!3597 = !DILocation(line: 5570, column: 5, scope: !3593)
!3598 = !DILocation(line: 5569, column: 33, scope: !3593)
!3599 = !DILocation(line: 5569, column: 3, scope: !3593)
!3600 = distinct !{!3600, !3596, !3601}
!3601 = !DILocation(line: 5570, column: 5, scope: !3590)
!3602 = !DILocation(line: 5571, column: 9, scope: !3571)
!3603 = !DILocation(line: 5571, column: 3, scope: !3571)
!3604 = !DILocation(line: 5573, column: 9, scope: !3571)
!3605 = !DILocation(line: 5573, column: 16, scope: !3571)
!3606 = !DILocation(line: 5573, column: 3, scope: !3571)
!3607 = !DILocation(line: 5574, column: 9, scope: !3571)
!3608 = !DILocation(line: 5574, column: 16, scope: !3571)
!3609 = !DILocation(line: 5574, column: 3, scope: !3571)
!3610 = !DILocation(line: 5575, column: 9, scope: !3571)
!3611 = !DILocation(line: 5575, column: 16, scope: !3571)
!3612 = !DILocation(line: 5575, column: 3, scope: !3571)
!3613 = !DILocation(line: 5576, column: 9, scope: !3571)
!3614 = !DILocation(line: 5576, column: 16, scope: !3571)
!3615 = !DILocation(line: 5576, column: 3, scope: !3571)
!3616 = !DILocation(line: 5577, column: 9, scope: !3571)
!3617 = !DILocation(line: 5577, column: 16, scope: !3571)
!3618 = !DILocation(line: 5577, column: 3, scope: !3571)
!3619 = !DILocation(line: 5578, column: 9, scope: !3571)
!3620 = !DILocation(line: 5578, column: 3, scope: !3571)
!3621 = !DILocation(line: 5580, column: 3, scope: !3571)
!3622 = !DILocation(line: 5581, column: 20, scope: !3571)
!3623 = !DILocation(line: 5581, column: 3, scope: !3571)
!3624 = !DILocation(line: 5582, column: 20, scope: !3571)
!3625 = !DILocation(line: 5582, column: 3, scope: !3571)
!3626 = !DILocation(line: 5583, column: 1, scope: !3571)
!3627 = distinct !DISubprogram(name: "gate_tree_pta", scope: !3, file: !3, line: 5617, type: !2200, scopeLine: 5618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!3628 = !DILocation(line: 5619, column: 10, scope: !3627)
!3629 = !DILocation(line: 5619, column: 3, scope: !3627)
!3630 = distinct !DISubprogram(name: "gate_ipa_pta", scope: !3, file: !3, line: 5669, type: !2200, scopeLine: 5670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!3631 = !DILocation(line: 5671, column: 11, scope: !3630)
!3632 = !DILocation(line: 5672, column: 7, scope: !3630)
!3633 = !DILocation(line: 5672, column: 4, scope: !3630)
!3634 = !DILocation(line: 5674, column: 9, scope: !3630)
!3635 = !DILocation(line: 5674, column: 20, scope: !3630)
!3636 = !DILocation(line: 5674, column: 23, scope: !3630)
!3637 = !DILocation(line: 5671, column: 3, scope: !3630)
!3638 = distinct !DISubprogram(name: "ipa_pta_execute", scope: !3, file: !3, line: 5679, type: !2204, scopeLine: 5680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3639)
!3639 = !{!3640, !3844, !3848, !3849, !3850, !3854, !3858}
!3640 = !DILocalVariable(name: "node", scope: !3638, file: !3, line: 5681, type: !3641)
!3641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3642, size: 64)
!3642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !637, line: 181, size: 2496, elements: !3643)
!3643 = !{!3644, !3645, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3759, !3781, !3791, !3795, !3821, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3842, !3843}
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3642, file: !637, line: 182, baseType: !730, size: 64)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !3642, file: !637, line: 183, baseType: !3646, size: 64, offset: 64)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !637, line: 314, size: 768, elements: !3648)
!3648 = !{!3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3660, !3661, !3662, !3663, !3664, !3665, !3666}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3647, file: !637, line: 316, baseType: !1260, size: 64)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3647, file: !637, line: 317, baseType: !3641, size: 64, offset: 64)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !3647, file: !637, line: 318, baseType: !3641, size: 64, offset: 128)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !3647, file: !637, line: 319, baseType: !3646, size: 64, offset: 192)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !3647, file: !637, line: 320, baseType: !3646, size: 64, offset: 256)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !3647, file: !637, line: 321, baseType: !3646, size: 64, offset: 320)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !3647, file: !637, line: 322, baseType: !3646, size: 64, offset: 384)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !3647, file: !637, line: 323, baseType: !1050, size: 64, offset: 448)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3647, file: !637, line: 324, baseType: !666, size: 64, offset: 512)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !3647, file: !637, line: 327, baseType: !3659, size: 32, offset: 576)
!3659 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !637, line: 312, baseType: !636)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !3647, file: !637, line: 330, baseType: !6, size: 32, offset: 608)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !3647, file: !637, line: 334, baseType: !662, size: 32, offset: 640)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3647, file: !637, line: 336, baseType: !662, size: 32, offset: 672)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !3647, file: !637, line: 338, baseType: !2401, size: 16, offset: 704)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !3647, file: !637, line: 340, baseType: !6, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !3647, file: !637, line: 342, baseType: !6, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !3647, file: !637, line: 344, baseType: !6, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !3642, file: !637, line: 184, baseType: !3646, size: 64, offset: 128)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3642, file: !637, line: 185, baseType: !3641, size: 64, offset: 192)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !3642, file: !637, line: 186, baseType: !3641, size: 64, offset: 256)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !3642, file: !637, line: 188, baseType: !3641, size: 64, offset: 320)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !3642, file: !637, line: 190, baseType: !3641, size: 64, offset: 384)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !3642, file: !637, line: 192, baseType: !3641, size: 64, offset: 448)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !3642, file: !637, line: 194, baseType: !3641, size: 64, offset: 512)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !3642, file: !637, line: 196, baseType: !3641, size: 64, offset: 576)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !3642, file: !637, line: 197, baseType: !3641, size: 64, offset: 640)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !3642, file: !637, line: 198, baseType: !3641, size: 64, offset: 704)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !3642, file: !637, line: 199, baseType: !3641, size: 64, offset: 768)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !3642, file: !637, line: 202, baseType: !3641, size: 64, offset: 832)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !3642, file: !637, line: 204, baseType: !3641, size: 64, offset: 896)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !3642, file: !637, line: 207, baseType: !1514, size: 64, offset: 960)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3642, file: !637, line: 209, baseType: !666, size: 64, offset: 1024)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !3642, file: !637, line: 214, baseType: !3683, size: 64, offset: 1088)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !1472, line: 177, baseType: !3685)
!3685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !1472, line: 177, size: 128, elements: !3686)
!3686 = !{!3687}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3685, file: !1472, line: 177, baseType: !3688, size: 128)
!3688 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !1472, line: 176, baseType: !3689)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !1472, line: 176, size: 128, elements: !3690)
!3690 = !{!3691, !3692, !3693}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3689, file: !1472, line: 176, baseType: !6, size: 32)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3689, file: !1472, line: 176, baseType: !6, size: 32, offset: 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3689, file: !1472, line: 176, baseType: !3694, size: 64, offset: 64)
!3694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3695, size: 64, elements: !697)
!3695 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !1472, line: 174, baseType: !3696)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !383, line: 173, size: 1152, elements: !3698)
!3698 = !{!3699, !3700, !3702, !3725, !3726, !3730, !3735, !3736, !3740}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !3697, file: !383, line: 175, baseType: !2194, size: 640)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !3697, file: !383, line: 179, baseType: !3701, size: 64, offset: 640)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !3697, file: !383, line: 182, baseType: !3703, size: 64, offset: 704)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{null, !3706}
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !637, line: 276, size: 192, elements: !3708)
!3708 = !{!3709, !3710, !3724}
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !3707, file: !637, line: 278, baseType: !1514, size: 64)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !3707, file: !637, line: 279, baseType: !3711, size: 64, offset: 64)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !637, line: 272, baseType: !3713)
!3713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !637, line: 272, size: 128, elements: !3714)
!3714 = !{!3715}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3713, file: !637, line: 272, baseType: !3716, size: 128)
!3716 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !637, line: 270, baseType: !3717)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !637, line: 270, size: 128, elements: !3718)
!3718 = !{!3719, !3720, !3721}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3717, file: !637, line: 270, baseType: !6, size: 32)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3717, file: !637, line: 270, baseType: !6, size: 32, offset: 32)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3717, file: !637, line: 270, baseType: !3722, size: 64, offset: 64)
!3722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3723, size: 64, elements: !697)
!3723 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !637, line: 268, baseType: !3641)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3707, file: !637, line: 280, baseType: !666, size: 64, offset: 128)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !3697, file: !383, line: 187, baseType: !3701, size: 64, offset: 768)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !3697, file: !383, line: 188, baseType: !3727, size: 64, offset: 832)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 64)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{null, !3641}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !3697, file: !383, line: 191, baseType: !3731, size: 64, offset: 896)
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3732, size: 64)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{null, !3641, !3734}
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !3697, file: !383, line: 195, baseType: !6, size: 32, offset: 960)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !3697, file: !383, line: 196, baseType: !3737, size: 64, offset: 1024)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!6, !3641}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !3697, file: !383, line: 197, baseType: !3741, size: 64, offset: 1088)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = !DISubroutineType(types: !3743)
!3743 = !{null, !3744}
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 64)
!3745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !637, line: 358, size: 320, elements: !3746)
!3746 = !{!3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3745, file: !637, line: 359, baseType: !730, size: 64)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3745, file: !637, line: 361, baseType: !3744, size: 64, offset: 64)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !3745, file: !637, line: 363, baseType: !3744, size: 64, offset: 128)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !3745, file: !637, line: 366, baseType: !3744, size: 64, offset: 192)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !3745, file: !637, line: 368, baseType: !662, size: 32, offset: 256)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !3745, file: !637, line: 372, baseType: !6, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !3745, file: !637, line: 375, baseType: !6, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !3745, file: !637, line: 378, baseType: !6, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !3745, file: !637, line: 380, baseType: !6, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3745, file: !637, line: 382, baseType: !6, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !3745, file: !637, line: 384, baseType: !6, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3745, file: !637, line: 387, baseType: !6, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !3642, file: !637, line: 216, baseType: !3760, size: 320, offset: 1152)
!3760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !637, line: 88, size: 320, elements: !3761)
!3761 = !{!3762, !3765, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780}
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !3760, file: !637, line: 90, baseType: !3763, size: 64)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !637, line: 51, flags: DIFlagFwdDecl)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !3760, file: !637, line: 92, baseType: !3766, size: 192, offset: 64)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !637, line: 57, size: 192, elements: !3767)
!3767 = !{!3768, !3769, !3770, !3771, !3772}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !3766, file: !637, line: 60, baseType: !669, size: 64)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !3766, file: !637, line: 63, baseType: !662, size: 32, offset: 64)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !3766, file: !637, line: 65, baseType: !662, size: 32, offset: 96)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !3766, file: !637, line: 67, baseType: !662, size: 32, offset: 128)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !3766, file: !637, line: 69, baseType: !662, size: 32, offset: 160)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !3760, file: !637, line: 96, baseType: !6, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !3760, file: !637, line: 99, baseType: !6, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !3760, file: !637, line: 102, baseType: !6, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !3760, file: !637, line: 105, baseType: !6, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !3760, file: !637, line: 108, baseType: !6, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !3760, file: !637, line: 112, baseType: !6, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !3760, file: !637, line: 116, baseType: !6, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !3760, file: !637, line: 120, baseType: !6, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !3642, file: !637, line: 217, baseType: !3782, size: 320, offset: 1472)
!3782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !637, line: 126, size: 320, elements: !3783)
!3783 = !{!3784, !3785, !3786, !3787, !3788, !3789, !3790}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !3782, file: !637, line: 128, baseType: !669, size: 64)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !3782, file: !637, line: 130, baseType: !669, size: 64, offset: 64)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !3782, file: !637, line: 134, baseType: !3641, size: 64, offset: 128)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3782, file: !637, line: 137, baseType: !662, size: 32, offset: 192)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3782, file: !637, line: 138, baseType: !662, size: 32, offset: 224)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !3782, file: !637, line: 141, baseType: !662, size: 32, offset: 256)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !3782, file: !637, line: 144, baseType: !661, size: 8, offset: 288)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !3642, file: !637, line: 218, baseType: !3792, size: 32, offset: 1792)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !637, line: 150, size: 32, elements: !3793)
!3793 = !{!3794}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !3792, file: !637, line: 151, baseType: !6, size: 32)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !3642, file: !637, line: 219, baseType: !3796, size: 192, offset: 1856)
!3796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !637, line: 171, size: 192, elements: !3797)
!3797 = !{!3798, !3819, !3820}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !3796, file: !637, line: 173, baseType: !3799, size: 64)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !637, line: 169, baseType: !3801)
!3801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !637, line: 169, size: 128, elements: !3802)
!3802 = !{!3803}
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3801, file: !637, line: 169, baseType: !3804, size: 128)
!3804 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !637, line: 168, baseType: !3805)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !637, line: 168, size: 128, elements: !3806)
!3806 = !{!3807, !3808, !3809}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3805, file: !637, line: 168, baseType: !6, size: 32)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3805, file: !637, line: 168, baseType: !6, size: 32, offset: 32)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3805, file: !637, line: 168, baseType: !3810, size: 64, offset: 64)
!3810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3811, size: 64, elements: !697)
!3811 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !637, line: 167, baseType: !3812)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !637, line: 156, size: 192, elements: !3814)
!3814 = !{!3815, !3816, !3817, !3818}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !3813, file: !637, line: 159, baseType: !730, size: 64)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !3813, file: !637, line: 161, baseType: !730, size: 64, offset: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !3813, file: !637, line: 163, baseType: !661, size: 8, offset: 128)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !3813, file: !637, line: 165, baseType: !661, size: 8, offset: 136)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !3796, file: !637, line: 174, baseType: !1598, size: 64, offset: 64)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !3796, file: !637, line: 175, baseType: !1598, size: 64, offset: 128)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !3642, file: !637, line: 220, baseType: !3822, size: 256, offset: 2048)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !637, line: 74, size: 256, elements: !3823)
!3823 = !{!3824, !3825, !3826, !3827, !3828, !3829}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !3822, file: !637, line: 76, baseType: !669, size: 64)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !3822, file: !637, line: 77, baseType: !669, size: 64, offset: 64)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3822, file: !637, line: 78, baseType: !730, size: 64, offset: 128)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !3822, file: !637, line: 79, baseType: !661, size: 8, offset: 192)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !3822, file: !637, line: 80, baseType: !661, size: 8, offset: 200)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !3822, file: !637, line: 82, baseType: !661, size: 8, offset: 208)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3642, file: !637, line: 223, baseType: !1260, size: 64, offset: 2304)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3642, file: !637, line: 225, baseType: !662, size: 32, offset: 2368)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !3642, file: !637, line: 227, baseType: !662, size: 32, offset: 2400)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3642, file: !637, line: 231, baseType: !662, size: 32, offset: 2432)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !3642, file: !637, line: 238, baseType: !6, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !3642, file: !637, line: 241, baseType: !6, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !3642, file: !637, line: 244, baseType: !6, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !3642, file: !637, line: 251, baseType: !6, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !3642, file: !637, line: 253, baseType: !6, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !3642, file: !637, line: 256, baseType: !6, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !3642, file: !637, line: 258, baseType: !6, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3642, file: !637, line: 260, baseType: !6, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !3642, file: !637, line: 262, baseType: !6, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !3642, file: !637, line: 265, baseType: !6, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!3844 = !DILocalVariable(name: "func", scope: !3845, file: !3, line: 5710, type: !1470)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 5709, column: 5)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 5708, column: 3)
!3847 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 5708, column: 3)
!3848 = !DILocalVariable(name: "bb", scope: !3845, file: !3, line: 5711, type: !1482)
!3849 = !DILocalVariable(name: "old_func_decl", scope: !3845, file: !3, line: 5712, type: !730)
!3850 = !DILocalVariable(name: "gsi", scope: !3851, file: !3, line: 5738, type: !3440)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 5737, column: 2)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 5736, column: 7)
!3853 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 5736, column: 7)
!3854 = !DILocalVariable(name: "phi", scope: !3855, file: !3, line: 5743, type: !1050)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !3, line: 5742, column: 6)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 5740, column: 4)
!3857 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 5740, column: 4)
!3858 = !DILocalVariable(name: "stmt", scope: !3859, file: !3, line: 5751, type: !1050)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 5750, column: 6)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 5749, column: 4)
!3861 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 5749, column: 4)
!3862 = !DILocation(line: 5683, column: 15, scope: !3638)
!3863 = !DILocation(line: 5685, column: 3, scope: !3638)
!3864 = !DILocation(line: 5686, column: 3, scope: !3638)
!3865 = !DILocation(line: 5689, column: 8, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 5689, column: 3)
!3867 = !DILocation(line: 0, scope: !3866)
!3868 = !DILocation(line: 0, scope: !3638)
!3869 = !DILocation(line: 5689, column: 3, scope: !3866)
!3870 = !DILocation(line: 5694, column: 37, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 5694, column: 11)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 5690, column: 5)
!3873 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 5689, column: 3)
!3874 = !DILocation(line: 5694, column: 12, scope: !3871)
!3875 = !DILocation(line: 5695, column: 4, scope: !3871)
!3876 = !DILocation(line: 5695, column: 13, scope: !3871)
!3877 = !DILocation(line: 5695, column: 7, scope: !3871)
!3878 = !DILocation(line: 5694, column: 11, scope: !3872)
!3879 = !DILocation(line: 5701, column: 23, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 5701, column: 11)
!3881 = !DILocation(line: 5701, column: 11, scope: !3880)
!3882 = !DILocation(line: 5701, column: 11, scope: !3872)
!3883 = !DILocation(line: 5704, column: 39, scope: !3872)
!3884 = !DILocation(line: 5705, column: 5, scope: !3872)
!3885 = !DILocation(line: 5704, column: 7, scope: !3872)
!3886 = !DILocation(line: 5706, column: 5, scope: !3872)
!3887 = !DILocation(line: 5689, column: 48, scope: !3873)
!3888 = !DILocation(line: 5689, column: 3, scope: !3873)
!3889 = distinct !{!3889, !3869, !3890}
!3890 = !DILocation(line: 5706, column: 5, scope: !3866)
!3891 = !DILocation(line: 0, scope: !3851)
!3892 = !DILocation(line: 0, scope: !3857)
!3893 = !DILocation(line: 0, scope: !3861)
!3894 = !DILocation(line: 5708, column: 8, scope: !3847)
!3895 = !DILocation(line: 0, scope: !3847)
!3896 = !DILocation(line: 5708, column: 3, scope: !3847)
!3897 = !DILocation(line: 5715, column: 37, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 5715, column: 11)
!3899 = !DILocation(line: 5715, column: 12, scope: !3898)
!3900 = !DILocation(line: 5716, column: 4, scope: !3898)
!3901 = !DILocation(line: 5716, column: 13, scope: !3898)
!3902 = !DILocation(line: 5716, column: 7, scope: !3898)
!3903 = !DILocation(line: 5715, column: 11, scope: !3845)
!3904 = !DILocation(line: 5719, column: 11, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 5719, column: 11)
!3906 = !DILocation(line: 5719, column: 11, scope: !3845)
!3907 = !DILocation(line: 5722, column: 4, scope: !3905)
!3908 = !DILocation(line: 5720, column: 2, scope: !3905)
!3909 = !DILocation(line: 5724, column: 14, scope: !3845)
!3910 = !DILocation(line: 0, scope: !3845)
!3911 = !DILocation(line: 5725, column: 23, scope: !3845)
!3912 = !DILocation(line: 5726, column: 7, scope: !3845)
!3913 = !DILocation(line: 5727, column: 37, scope: !3845)
!3914 = !DILocation(line: 5727, column: 29, scope: !3845)
!3915 = !DILocation(line: 5732, column: 23, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 5732, column: 11)
!3917 = !DILocation(line: 5732, column: 11, scope: !3916)
!3918 = !DILocation(line: 5732, column: 11, scope: !3845)
!3919 = !DILocation(line: 5733, column: 2, scope: !3916)
!3920 = !DILocation(line: 5736, column: 7, scope: !3853)
!3921 = !DILocation(line: 5736, column: 7, scope: !3852)
!3922 = !DILocation(line: 0, scope: !3853)
!3923 = !DILocation(line: 5738, column: 4, scope: !3851)
!3924 = !DILocation(line: 5740, column: 15, scope: !3857)
!3925 = !DILocation(line: 5740, column: 9, scope: !3857)
!3926 = !DILocation(line: 5740, column: 37, scope: !3856)
!3927 = !DILocation(line: 5740, column: 36, scope: !3856)
!3928 = !DILocation(line: 5740, column: 4, scope: !3857)
!3929 = !DILocation(line: 5743, column: 21, scope: !3855)
!3930 = !DILocation(line: 0, scope: !3855)
!3931 = !DILocation(line: 5745, column: 27, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 5745, column: 12)
!3933 = !DILocation(line: 5745, column: 12, scope: !3932)
!3934 = !DILocation(line: 5745, column: 12, scope: !3855)
!3935 = !DILocation(line: 5746, column: 3, scope: !3932)
!3936 = !DILocation(line: 5741, column: 9, scope: !3856)
!3937 = !DILocation(line: 5740, column: 4, scope: !3856)
!3938 = distinct !{!3938, !3928, !3939}
!3939 = !DILocation(line: 5747, column: 6, scope: !3857)
!3940 = !DILocation(line: 5749, column: 15, scope: !3861)
!3941 = !DILocation(line: 5749, column: 9, scope: !3861)
!3942 = !DILocation(line: 5749, column: 35, scope: !3860)
!3943 = !DILocation(line: 5749, column: 34, scope: !3860)
!3944 = !DILocation(line: 5749, column: 4, scope: !3861)
!3945 = !DILocation(line: 5751, column: 22, scope: !3859)
!3946 = !DILocation(line: 0, scope: !3859)
!3947 = !DILocation(line: 5753, column: 8, scope: !3859)
!3948 = !DILocation(line: 5749, column: 52, scope: !3860)
!3949 = !DILocation(line: 5749, column: 4, scope: !3860)
!3950 = distinct !{!3950, !3944, !3951}
!3951 = !DILocation(line: 5754, column: 6, scope: !3861)
!3952 = !DILocation(line: 5755, column: 2, scope: !3852)
!3953 = distinct !{!3953, !3920, !3954}
!3954 = !DILocation(line: 5755, column: 2, scope: !3853)
!3955 = !DILocation(line: 5757, column: 29, scope: !3845)
!3956 = !DILocation(line: 5758, column: 7, scope: !3845)
!3957 = !DILocation(line: 5759, column: 5, scope: !3846)
!3958 = !DILocation(line: 5708, column: 48, scope: !3846)
!3959 = !DILocation(line: 5708, column: 3, scope: !3846)
!3960 = distinct !{!3960, !3896, !3961}
!3961 = !DILocation(line: 5759, column: 5, scope: !3847)
!3962 = !DILocation(line: 5762, column: 3, scope: !3638)
!3963 = !DILocation(line: 5764, column: 3, scope: !3638)
!3964 = !DILocation(line: 5766, column: 15, scope: !3638)
!3965 = !DILocation(line: 5768, column: 3, scope: !3638)
!3966 = distinct !DISubprogram(name: "get_varinfo", scope: !3, file: !3, line: 284, type: !3967, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3969)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!711, !6}
!3969 = !{!3970}
!3970 = !DILocalVariable(name: "n", arg: 1, scope: !3966, file: !3, line: 284, type: !6)
!3971 = !DILocation(line: 0, scope: !3966)
!3972 = !DILocation(line: 286, column: 10, scope: !3966)
!3973 = !DILocation(line: 286, column: 3, scope: !3966)
!3974 = distinct !DISubprogram(name: "VEC_varinfo_t_base_index", scope: !3, file: !3, line: 273, type: !3975, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3979)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!711, !3977, !6}
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3978, size: 64)
!3978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !704)
!3979 = !{!3980, !3981}
!3980 = !DILocalVariable(name: "vec_", arg: 1, scope: !3974, file: !3, line: 273, type: !3977)
!3981 = !DILocalVariable(name: "ix_", arg: 2, scope: !3974, file: !3, line: 273, type: !6)
!3982 = !DILocation(line: 0, scope: !3974)
!3983 = !DILocation(line: 273, column: 1, scope: !3974)
!3984 = distinct !DISubprogram(name: "VEC_constraint_t_base_iterate", scope: !3, file: !3, line: 189, type: !3985, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3990)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!662, !3987, !6, !3989}
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !690)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!3990 = !{!3991, !3992, !3993}
!3991 = !DILocalVariable(name: "vec_", arg: 1, scope: !3984, file: !3, line: 189, type: !3987)
!3992 = !DILocalVariable(name: "ix_", arg: 2, scope: !3984, file: !3, line: 189, type: !6)
!3993 = !DILocalVariable(name: "ptr", arg: 3, scope: !3984, file: !3, line: 189, type: !3989)
!3994 = !DILocation(line: 0, scope: !3984)
!3995 = !DILocation(line: 189, column: 1, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 189, column: 1)
!3997 = !DILocation(line: 189, column: 1, scope: !3984)
!3998 = !DILocation(line: 189, column: 1, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 189, column: 1)
!4000 = !DILocation(line: 189, column: 1, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 189, column: 1)
!4002 = !DILocation(line: 0, scope: !3996)
!4003 = distinct !DISubprogram(name: "VEC_varinfo_t_base_length", scope: !3, file: !3, line: 273, type: !4004, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4006)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{!6, !3977}
!4006 = !{!4007}
!4007 = !DILocalVariable(name: "vec_", arg: 1, scope: !4003, file: !3, line: 273, type: !3977)
!4008 = !DILocation(line: 0, scope: !4003)
!4009 = !DILocation(line: 273, column: 1, scope: !4003)
!4010 = distinct !DISubprogram(name: "dump_constraint_edge", scope: !3, file: !3, line: 624, type: !2799, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4011)
!4011 = !{!4012, !4013, !4014, !4017}
!4012 = !DILocalVariable(name: "file", arg: 1, scope: !4010, file: !3, line: 624, type: !2372)
!4013 = !DILocalVariable(name: "c", arg: 2, scope: !4010, file: !3, line: 624, type: !670)
!4014 = !DILocalVariable(name: "src", scope: !4015, file: !3, line: 628, type: !667)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 627, column: 5)
!4016 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 626, column: 7)
!4017 = !DILocalVariable(name: "dst", scope: !4015, file: !3, line: 629, type: !667)
!4018 = !DILocation(line: 0, scope: !4010)
!4019 = !DILocation(line: 626, column: 14, scope: !4016)
!4020 = !DILocation(line: 626, column: 19, scope: !4016)
!4021 = !DILocation(line: 626, column: 7, scope: !4010)
!4022 = !DILocation(line: 628, column: 45, scope: !4015)
!4023 = !DILocation(line: 628, column: 25, scope: !4015)
!4024 = !DILocation(line: 628, column: 51, scope: !4015)
!4025 = !DILocation(line: 0, scope: !4015)
!4026 = !DILocation(line: 629, column: 45, scope: !4015)
!4027 = !DILocation(line: 629, column: 25, scope: !4015)
!4028 = !DILocation(line: 629, column: 51, scope: !4015)
!4029 = !DILocation(line: 630, column: 7, scope: !4015)
!4030 = !DILocation(line: 633, column: 18, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4015, file: !3, line: 633, column: 11)
!4032 = !DILocation(line: 633, column: 23, scope: !4031)
!4033 = !DILocation(line: 633, column: 11, scope: !4015)
!4034 = !DILocation(line: 634, column: 9, scope: !4031)
!4035 = !DILocation(line: 635, column: 23, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 635, column: 16)
!4037 = !DILocation(line: 635, column: 28, scope: !4036)
!4038 = !DILocation(line: 635, column: 16, scope: !4031)
!4039 = !DILocation(line: 636, column: 9, scope: !4036)
!4040 = !DILocation(line: 641, column: 22, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 641, column: 15)
!4042 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 638, column: 9)
!4043 = !DILocation(line: 641, column: 39, scope: !4041)
!4044 = !DILocation(line: 641, column: 29, scope: !4041)
!4045 = !DILocation(line: 641, column: 15, scope: !4042)
!4046 = !DILocation(line: 642, column: 13, scope: !4041)
!4047 = !DILocation(line: 644, column: 13, scope: !4041)
!4048 = !DILocation(line: 647, column: 1, scope: !4010)
!4049 = distinct !DISubprogram(name: "find", scope: !3, file: !3, line: 518, type: !4050, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4052)
!4050 = !DISubroutineType(types: !4051)
!4051 = !{!6, !6}
!4052 = !{!4053}
!4053 = !DILocalVariable(name: "node", arg: 1, scope: !4049, file: !3, line: 518, type: !6)
!4054 = !DILocation(line: 0, scope: !4049)
!4055 = !DILocation(line: 520, column: 3, scope: !4049)
!4056 = !DILocation(line: 521, column: 7, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 521, column: 7)
!4058 = !DILocation(line: 521, column: 14, scope: !4057)
!4059 = !DILocation(line: 521, column: 24, scope: !4057)
!4060 = !DILocation(line: 521, column: 7, scope: !4049)
!4061 = !DILocation(line: 522, column: 31, scope: !4057)
!4062 = !DILocation(line: 522, column: 12, scope: !4057)
!4063 = !DILocation(line: 522, column: 19, scope: !4057)
!4064 = !DILocation(line: 522, column: 29, scope: !4057)
!4065 = !DILocation(line: 524, column: 1, scope: !4049)
!4066 = distinct !DISubprogram(name: "pt_solution_empty_p", scope: !3, file: !3, line: 4950, type: !3186, scopeLine: 4951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4067)
!4067 = !{!4068}
!4068 = !DILocalVariable(name: "pt", arg: 1, scope: !4066, file: !3, line: 4950, type: !3018)
!4069 = !DILocation(line: 0, scope: !4066)
!4070 = !DILocation(line: 4952, column: 11, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 4952, column: 7)
!4072 = !DILocation(line: 4952, column: 7, scope: !4071)
!4073 = !DILocation(line: 4953, column: 7, scope: !4071)
!4074 = !DILocation(line: 4953, column: 14, scope: !4071)
!4075 = !DILocation(line: 4953, column: 10, scope: !4071)
!4076 = !DILocation(line: 4952, column: 7, scope: !4066)
!4077 = !DILocation(line: 4956, column: 11, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 4956, column: 7)
!4079 = !DILocation(line: 4956, column: 7, scope: !4078)
!4080 = !DILocation(line: 4957, column: 7, scope: !4078)
!4081 = !DILocation(line: 4957, column: 11, scope: !4078)
!4082 = !DILocation(line: 4956, column: 7, scope: !4066)
!4083 = !DILocation(line: 4961, column: 11, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 4961, column: 7)
!4085 = !DILocation(line: 4961, column: 7, scope: !4084)
!4086 = !DILocation(line: 4962, column: 7, scope: !4084)
!4087 = !DILocation(line: 4962, column: 33, scope: !4084)
!4088 = !DILocation(line: 4962, column: 39, scope: !4084)
!4089 = !DILocation(line: 4962, column: 50, scope: !4084)
!4090 = !DILocation(line: 4962, column: 11, scope: !4084)
!4091 = !DILocation(line: 4961, column: 7, scope: !4066)
!4092 = !DILocation(line: 4965, column: 3, scope: !4066)
!4093 = !DILocation(line: 4966, column: 1, scope: !4066)
!4094 = distinct !DISubprogram(name: "init_alias_vars", scope: !3, file: !3, line: 5337, type: !2853, scopeLine: 5338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!4095 = !DILocation(line: 5339, column: 26, scope: !4094)
!4096 = !DILocation(line: 5339, column: 57, scope: !4094)
!4097 = !DILocation(line: 5339, column: 25, scope: !4094)
!4098 = !DILocation(line: 5339, column: 23, scope: !4094)
!4099 = !DILocation(line: 5341, column: 3, scope: !4094)
!4100 = !DILocation(line: 5342, column: 3, scope: !4094)
!4101 = !DILocation(line: 5343, column: 3, scope: !4094)
!4102 = !DILocation(line: 5345, column: 21, scope: !4094)
!4103 = !DILocation(line: 5345, column: 19, scope: !4094)
!4104 = !DILocation(line: 5347, column: 24, scope: !4094)
!4105 = !DILocation(line: 5347, column: 22, scope: !4094)
!4106 = !DILocation(line: 5349, column: 17, scope: !4094)
!4107 = !DILocation(line: 5349, column: 15, scope: !4094)
!4108 = !DILocation(line: 5350, column: 12, scope: !4094)
!4109 = !DILocation(line: 5350, column: 10, scope: !4094)
!4110 = !DILocation(line: 5351, column: 17, scope: !4094)
!4111 = !DILocation(line: 5351, column: 15, scope: !4094)
!4112 = !DILocation(line: 5353, column: 3, scope: !4094)
!4113 = !DILocation(line: 5354, column: 25, scope: !4094)
!4114 = !DILocation(line: 5354, column: 23, scope: !4094)
!4115 = !DILocation(line: 5356, column: 3, scope: !4094)
!4116 = !DILocation(line: 5357, column: 1, scope: !4094)
!4117 = distinct !DISubprogram(name: "init_alias_heapvars", scope: !3, file: !3, line: 5398, type: !2853, scopeLine: 5399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!4118 = !DILocation(line: 5400, column: 8, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 5400, column: 7)
!4120 = !DILocation(line: 5400, column: 7, scope: !4117)
!4121 = !DILocation(line: 5401, column: 24, scope: !4119)
!4122 = !DILocation(line: 5401, column: 22, scope: !4119)
!4123 = !DILocation(line: 5401, column: 5, scope: !4119)
!4124 = !DILocation(line: 5403, column: 1, scope: !4117)
!4125 = distinct !DISubprogram(name: "intra_create_variable_infos", scope: !3, file: !3, line: 4616, type: !2853, scopeLine: 4617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4126)
!4126 = !{!4127, !4128, !4132, !4135, !4136, !4137, !4138, !4142, !4145, !4146, !4149}
!4127 = !DILocalVariable(name: "t", scope: !4125, file: !3, line: 4618, type: !730)
!4128 = !DILocalVariable(name: "p", scope: !4129, file: !3, line: 4624, type: !711)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !3, line: 4623, column: 5)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !3, line: 4622, column: 3)
!4131 = distinct !DILexicalBlock(scope: !4125, file: !3, line: 4622, column: 3)
!4132 = !DILocalVariable(name: "lhsc", scope: !4133, file: !3, line: 4635, type: !675)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !3, line: 4634, column: 2)
!4134 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 4631, column: 11)
!4135 = !DILocalVariable(name: "rhsc", scope: !4133, file: !3, line: 4635, type: !675)
!4136 = !DILocalVariable(name: "vi", scope: !4133, file: !3, line: 4636, type: !711)
!4137 = !DILocalVariable(name: "heapvar", scope: !4133, file: !3, line: 4637, type: !730)
!4138 = !DILocalVariable(name: "ann", scope: !4139, file: !3, line: 4640, type: !4141)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 4639, column: 6)
!4140 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 4638, column: 8)
!4141 = !DIDerivedType(tag: DW_TAG_typedef, name: "var_ann_t", file: !1422, line: 297, baseType: !1420)
!4142 = !DILocalVariable(name: "p", scope: !4143, file: !3, line: 4673, type: !711)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 4672, column: 5)
!4144 = distinct !DILexicalBlock(scope: !4125, file: !3, line: 4670, column: 7)
!4145 = !DILocalVariable(name: "result_vi", scope: !4143, file: !3, line: 4673, type: !711)
!4146 = !DILocalVariable(name: "p", scope: !4147, file: !3, line: 4682, type: !711)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 4681, column: 5)
!4148 = distinct !DILexicalBlock(scope: !4125, file: !3, line: 4680, column: 7)
!4149 = !DILocalVariable(name: "chain_vi", scope: !4147, file: !3, line: 4682, type: !711)
!4150 = !DILocation(line: 4622, column: 12, scope: !4131)
!4151 = !DILocation(line: 0, scope: !4133)
!4152 = !DILocation(line: 4622, column: 8, scope: !4131)
!4153 = !DILocation(line: 0, scope: !4131)
!4154 = !DILocation(line: 0, scope: !4125)
!4155 = !DILocation(line: 4622, column: 3, scope: !4131)
!4156 = !DILocation(line: 4626, column: 12, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 4626, column: 11)
!4158 = !DILocation(line: 4626, column: 11, scope: !4129)
!4159 = !DILocation(line: 4631, column: 11, scope: !4134)
!4160 = !DILocation(line: 4632, column: 4, scope: !4134)
!4161 = !DILocation(line: 4632, column: 7, scope: !4134)
!4162 = !DILocation(line: 4633, column: 4, scope: !4134)
!4163 = !DILocation(line: 4633, column: 7, scope: !4134)
!4164 = !DILocation(line: 4631, column: 11, scope: !4129)
!4165 = !DILocation(line: 4635, column: 4, scope: !4133)
!4166 = !DILocation(line: 4637, column: 19, scope: !4133)
!4167 = !DILocation(line: 4638, column: 16, scope: !4140)
!4168 = !DILocation(line: 4638, column: 8, scope: !4133)
!4169 = !DILocation(line: 4641, column: 38, scope: !4139)
!4170 = !DILocation(line: 4641, column: 18, scope: !4139)
!4171 = !DILocation(line: 4643, column: 8, scope: !4139)
!4172 = !DILocation(line: 4643, column: 32, scope: !4139)
!4173 = !DILocation(line: 4644, column: 8, scope: !4139)
!4174 = !DILocation(line: 4645, column: 14, scope: !4139)
!4175 = !DILocation(line: 0, scope: !4139)
!4176 = !DILocation(line: 4646, column: 13, scope: !4139)
!4177 = !DILocation(line: 4646, column: 24, scope: !4139)
!4178 = !DILocation(line: 4647, column: 6, scope: !4139)
!4179 = !DILocation(line: 4648, column: 32, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 4648, column: 8)
!4181 = !DILocation(line: 4648, column: 8, scope: !4180)
!4182 = !DILocation(line: 4648, column: 8, scope: !4133)
!4183 = !DILocation(line: 4649, column: 6, scope: !4180)
!4184 = !DILocation(line: 4650, column: 15, scope: !4133)
!4185 = !DILocation(line: 4650, column: 36, scope: !4133)
!4186 = !DILocation(line: 4650, column: 13, scope: !4133)
!4187 = !DILocation(line: 4651, column: 14, scope: !4133)
!4188 = !DILocation(line: 4652, column: 16, scope: !4133)
!4189 = !DILocation(line: 4653, column: 21, scope: !4133)
!4190 = !DILocation(line: 4653, column: 49, scope: !4133)
!4191 = !DILocation(line: 4653, column: 13, scope: !4133)
!4192 = !DILocation(line: 4654, column: 14, scope: !4133)
!4193 = !DILocation(line: 4655, column: 16, scope: !4133)
!4194 = !DILocation(line: 4656, column: 24, scope: !4133)
!4195 = !DILocation(line: 4656, column: 4, scope: !4133)
!4196 = !DILocation(line: 4657, column: 8, scope: !4133)
!4197 = !DILocation(line: 4657, column: 24, scope: !4133)
!4198 = !DILocation(line: 4659, column: 2, scope: !4134)
!4199 = !DILocation(line: 4661, column: 16, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 4661, column: 7)
!4201 = !DILocation(line: 0, scope: !4129)
!4202 = !DILocation(line: 4661, column: 12, scope: !4200)
!4203 = !DILocation(line: 0, scope: !4200)
!4204 = !DILocation(line: 4661, column: 7, scope: !4200)
!4205 = !DILocation(line: 4662, column: 9, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4207, file: !3, line: 4662, column: 6)
!4207 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 4661, column: 7)
!4208 = !DILocation(line: 4662, column: 6, scope: !4206)
!4209 = !DILocation(line: 4662, column: 6, scope: !4207)
!4210 = !DILocation(line: 4663, column: 4, scope: !4206)
!4211 = !DILocation(line: 4661, column: 47, scope: !4207)
!4212 = !DILocation(line: 4661, column: 7, scope: !4207)
!4213 = distinct !{!4213, !4204, !4214}
!4214 = !DILocation(line: 4663, column: 40, scope: !4200)
!4215 = !DILocation(line: 4664, column: 11, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 4664, column: 11)
!4217 = !DILocation(line: 4665, column: 4, scope: !4216)
!4218 = !DILocation(line: 4665, column: 7, scope: !4216)
!4219 = !DILocation(line: 4664, column: 11, scope: !4129)
!4220 = !DILocation(line: 4666, column: 33, scope: !4216)
!4221 = !DILocation(line: 4666, column: 2, scope: !4216)
!4222 = !DILocation(line: 4622, column: 59, scope: !4130)
!4223 = !DILocation(line: 4622, column: 3, scope: !4130)
!4224 = distinct !{!4224, !4155, !4225}
!4225 = !DILocation(line: 4667, column: 5, scope: !4131)
!4226 = !DILocation(line: 4670, column: 7, scope: !4144)
!4227 = !DILocation(line: 4671, column: 7, scope: !4144)
!4228 = !DILocation(line: 4671, column: 10, scope: !4144)
!4229 = !DILocation(line: 4670, column: 7, scope: !4125)
!4230 = !DILocation(line: 4673, column: 32, scope: !4143)
!4231 = !DILocation(line: 0, scope: !4143)
!4232 = !DILocation(line: 4675, column: 12, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 4675, column: 7)
!4234 = !DILocation(line: 0, scope: !4233)
!4235 = !DILocation(line: 4675, column: 7, scope: !4233)
!4236 = !DILocation(line: 4676, column: 2, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 4675, column: 7)
!4238 = !DILocation(line: 4675, column: 37, scope: !4237)
!4239 = !DILocation(line: 4675, column: 7, scope: !4237)
!4240 = distinct !{!4240, !4235, !4241}
!4241 = !DILocation(line: 4676, column: 38, scope: !4233)
!4242 = !DILocation(line: 4680, column: 7, scope: !4148)
!4243 = !DILocation(line: 4680, column: 13, scope: !4148)
!4244 = !DILocation(line: 4680, column: 31, scope: !4148)
!4245 = !DILocation(line: 4680, column: 7, scope: !4125)
!4246 = !DILocation(line: 4682, column: 31, scope: !4147)
!4247 = !DILocation(line: 0, scope: !4147)
!4248 = !DILocation(line: 4684, column: 12, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 4684, column: 7)
!4250 = !DILocation(line: 0, scope: !4249)
!4251 = !DILocation(line: 4684, column: 7, scope: !4249)
!4252 = !DILocation(line: 4685, column: 2, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 4684, column: 7)
!4254 = !DILocation(line: 4684, column: 36, scope: !4253)
!4255 = !DILocation(line: 4684, column: 7, scope: !4253)
!4256 = distinct !{!4256, !4251, !4257}
!4257 = !DILocation(line: 4685, column: 38, scope: !4249)
!4258 = !DILocation(line: 4687, column: 1, scope: !4125)
!4259 = distinct !DISubprogram(name: "gsi_end_p", scope: !566, file: !566, line: 4467, type: !4260, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4262)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{!661, !3440}
!4262 = !{!4263}
!4263 = !DILocalVariable(name: "i", arg: 1, scope: !4259, file: !566, line: 4467, type: !3440)
!4264 = !DILocation(line: 4467, column: 33, scope: !4259)
!4265 = !DILocation(line: 4469, column: 12, scope: !4259)
!4266 = !DILocation(line: 4469, column: 16, scope: !4259)
!4267 = !DILocation(line: 4469, column: 10, scope: !4259)
!4268 = !DILocation(line: 4469, column: 3, scope: !4259)
!4269 = distinct !DISubprogram(name: "gsi_stmt", scope: !566, file: !566, line: 4501, type: !4270, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4272)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!1050, !3440}
!4272 = !{!4273}
!4273 = !DILocalVariable(name: "i", arg: 1, scope: !4269, file: !566, line: 4501, type: !3440)
!4274 = !DILocation(line: 4501, column: 32, scope: !4269)
!4275 = !DILocation(line: 4503, column: 12, scope: !4269)
!4276 = !DILocation(line: 4503, column: 17, scope: !4269)
!4277 = !DILocation(line: 4503, column: 3, scope: !4269)
!4278 = distinct !DISubprogram(name: "gimple_phi_result", scope: !566, file: !566, line: 3071, type: !4279, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4282)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{!730, !4281}
!4281 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !731, line: 60, baseType: !2101)
!4282 = !{!4283}
!4283 = !DILocalVariable(name: "gs", arg: 1, scope: !4278, file: !566, line: 3071, type: !4281)
!4284 = !DILocation(line: 0, scope: !4278)
!4285 = !DILocation(line: 3074, column: 25, scope: !4278)
!4286 = !DILocation(line: 3074, column: 3, scope: !4278)
!4287 = distinct !DISubprogram(name: "find_func_aliases", scope: !3, file: !3, line: 3620, type: !4288, scopeLine: 3621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4290)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{null, !1050}
!4290 = !{!4291, !4292, !4293, !4294, !4295, !4297, !4302, !4303, !4307, !4311, !4314, !4318, !4319, !4320, !4322, !4323, !4324, !4326, !4327, !4330, !4331, !4333, !4334, !4335, !4336, !4337, !4341, !4342, !4343, !4346, !4347, !4348, !4351, !4352, !4355, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4370, !4371, !4374, !4375, !4376, !4377, !4381}
!4291 = !DILocalVariable(name: "origt", arg: 1, scope: !4287, file: !3, line: 3620, type: !1050)
!4292 = !DILocalVariable(name: "t", scope: !4287, file: !3, line: 3622, type: !1050)
!4293 = !DILocalVariable(name: "lhsc", scope: !4287, file: !3, line: 3623, type: !2103)
!4294 = !DILocalVariable(name: "rhsc", scope: !4287, file: !3, line: 3624, type: !2103)
!4295 = !DILocalVariable(name: "c", scope: !4287, file: !3, line: 3625, type: !4296)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!4297 = !DILocalVariable(name: "i", scope: !4298, file: !3, line: 3636, type: !682)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 3635, column: 2)
!4299 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 3634, column: 11)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 3629, column: 5)
!4301 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 3628, column: 7)
!4302 = !DILocalVariable(name: "j", scope: !4298, file: !3, line: 3637, type: !6)
!4303 = !DILocalVariable(name: "strippedrhs", scope: !4304, file: !3, line: 3644, type: !730)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 3643, column: 6)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 3642, column: 4)
!4306 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 3642, column: 4)
!4307 = !DILocalVariable(name: "c2", scope: !4308, file: !3, line: 3651, type: !4296)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !3, line: 3650, column: 3)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 3649, column: 8)
!4310 = distinct !DILexicalBlock(scope: !4304, file: !3, line: 3649, column: 8)
!4311 = !DILocalVariable(name: "fndecl", scope: !4312, file: !3, line: 3671, type: !730)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 3670, column: 5)
!4313 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 3669, column: 12)
!4314 = !DILocalVariable(name: "res", scope: !4315, file: !3, line: 3694, type: !730)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 3693, column: 6)
!4316 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 3677, column: 4)
!4317 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 3672, column: 11)
!4318 = !DILocalVariable(name: "dest", scope: !4315, file: !3, line: 3695, type: !730)
!4319 = !DILocalVariable(name: "src", scope: !4315, file: !3, line: 3697, type: !730)
!4320 = !DILocalVariable(name: "res", scope: !4321, file: !3, line: 3723, type: !730)
!4321 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 3722, column: 6)
!4322 = !DILocalVariable(name: "dest", scope: !4321, file: !3, line: 3724, type: !730)
!4323 = !DILocalVariable(name: "i", scope: !4321, file: !3, line: 3725, type: !6)
!4324 = !DILocalVariable(name: "lhsp", scope: !4321, file: !3, line: 3726, type: !4325)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!4326 = !DILocalVariable(name: "ac", scope: !4321, file: !3, line: 3727, type: !675)
!4327 = !DILocalVariable(name: "rhsc", scope: !4328, file: !3, line: 3788, type: !2103)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 3787, column: 2)
!4329 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 3784, column: 11)
!4330 = !DILocalVariable(name: "flags", scope: !4328, file: !3, line: 3789, type: !662)
!4331 = !DILocalVariable(name: "lhsop", scope: !4332, file: !3, line: 3813, type: !730)
!4332 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 3812, column: 2)
!4333 = !DILocalVariable(name: "fi", scope: !4332, file: !3, line: 3814, type: !711)
!4334 = !DILocalVariable(name: "i", scope: !4332, file: !3, line: 3815, type: !662)
!4335 = !DILocalVariable(name: "j", scope: !4332, file: !3, line: 3816, type: !682)
!4336 = !DILocalVariable(name: "decl", scope: !4332, file: !3, line: 3817, type: !730)
!4337 = !DILocalVariable(name: "lhs", scope: !4338, file: !3, line: 3837, type: !675)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 3836, column: 6)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 3835, column: 4)
!4340 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 3835, column: 4)
!4341 = !DILocalVariable(name: "rhsp", scope: !4338, file: !3, line: 3838, type: !4296)
!4342 = !DILocalVariable(name: "arg", scope: !4338, file: !3, line: 3839, type: !730)
!4343 = !DILocalVariable(name: "rhs", scope: !4344, file: !3, line: 3866, type: !675)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 3865, column: 6)
!4345 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 3864, column: 8)
!4346 = !DILocalVariable(name: "lhsp", scope: !4344, file: !3, line: 3867, type: !4296)
!4347 = !DILocalVariable(name: "j", scope: !4344, file: !3, line: 3868, type: !6)
!4348 = !DILocalVariable(name: "lhsop", scope: !4349, file: !3, line: 3895, type: !730)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 3893, column: 5)
!4350 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 3891, column: 12)
!4351 = !DILocalVariable(name: "rhsop", scope: !4349, file: !3, line: 3896, type: !730)
!4352 = !DILocalVariable(name: "temp", scope: !4353, file: !3, line: 3902, type: !675)
!4353 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 3901, column: 2)
!4354 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 3898, column: 11)
!4355 = !DILocalVariable(name: "i", scope: !4356, file: !3, line: 3954, type: !6)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 3953, column: 5)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 3952, column: 12)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 3945, column: 12)
!4359 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 3938, column: 12)
!4360 = !DILocalVariable(name: "noutputs", scope: !4356, file: !3, line: 3954, type: !6)
!4361 = !DILocalVariable(name: "oconstraints", scope: !4356, file: !3, line: 3955, type: !2100)
!4362 = !DILocalVariable(name: "constraint", scope: !4356, file: !3, line: 3956, type: !667)
!4363 = !DILocalVariable(name: "allows_mem", scope: !4356, file: !3, line: 3957, type: !661)
!4364 = !DILocalVariable(name: "allows_reg", scope: !4356, file: !3, line: 3957, type: !661)
!4365 = !DILocalVariable(name: "is_inout", scope: !4356, file: !3, line: 3957, type: !661)
!4366 = !DILocalVariable(name: "link", scope: !4367, file: !3, line: 3964, type: !730)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 3963, column: 2)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 3962, column: 7)
!4369 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 3962, column: 7)
!4370 = !DILocalVariable(name: "op", scope: !4367, file: !3, line: 3965, type: !730)
!4371 = !DILocalVariable(name: "lhsc", scope: !4372, file: !3, line: 3980, type: !2103)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !3, line: 3979, column: 6)
!4373 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 3978, column: 8)
!4374 = !DILocalVariable(name: "rhsc", scope: !4372, file: !3, line: 3981, type: !675)
!4375 = !DILocalVariable(name: "lhsp", scope: !4372, file: !3, line: 3981, type: !4296)
!4376 = !DILocalVariable(name: "j", scope: !4372, file: !3, line: 3982, type: !6)
!4377 = !DILocalVariable(name: "link", scope: !4378, file: !3, line: 3994, type: !730)
!4378 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 3993, column: 2)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 3992, column: 7)
!4380 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 3992, column: 7)
!4381 = !DILocalVariable(name: "op", scope: !4378, file: !3, line: 3995, type: !730)
!4382 = !DILocation(line: 0, scope: !4287)
!4383 = !DILocation(line: 3623, column: 3, scope: !4287)
!4384 = !DILocation(line: 3623, column: 20, scope: !4287)
!4385 = !DILocation(line: 3624, column: 3, scope: !4287)
!4386 = !DILocation(line: 3624, column: 20, scope: !4287)
!4387 = !DILocation(line: 3625, column: 3, scope: !4287)
!4388 = !DILocation(line: 3628, column: 7, scope: !4301)
!4389 = !DILocation(line: 3628, column: 23, scope: !4301)
!4390 = !DILocation(line: 3628, column: 7, scope: !4287)
!4391 = !DILocation(line: 3630, column: 7, scope: !4300)
!4392 = !DILocation(line: 3634, column: 32, scope: !4299)
!4393 = !DILocation(line: 3634, column: 11, scope: !4299)
!4394 = !DILocation(line: 3634, column: 11, scope: !4300)
!4395 = !DILocation(line: 3641, column: 24, scope: !4298)
!4396 = !DILocation(line: 3641, column: 4, scope: !4298)
!4397 = !DILocation(line: 0, scope: !4298)
!4398 = !DILocation(line: 0, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 3653, column: 7)
!4400 = !DILocation(line: 3642, column: 9, scope: !4306)
!4401 = !DILocation(line: 0, scope: !4306)
!4402 = !DILocation(line: 3642, column: 20, scope: !4305)
!4403 = !DILocation(line: 3642, column: 18, scope: !4305)
!4404 = !DILocation(line: 3642, column: 4, scope: !4306)
!4405 = !DILocation(line: 3644, column: 27, scope: !4304)
!4406 = !DILocation(line: 0, scope: !4304)
!4407 = !DILocation(line: 3646, column: 8, scope: !4304)
!4408 = !DILocation(line: 3647, column: 28, scope: !4304)
!4409 = !DILocation(line: 3647, column: 8, scope: !4304)
!4410 = !DILocation(line: 3649, column: 13, scope: !4310)
!4411 = !DILocation(line: 0, scope: !4310)
!4412 = !DILocation(line: 3649, column: 20, scope: !4309)
!4413 = !DILocation(line: 3649, column: 8, scope: !4310)
!4414 = !DILocation(line: 3652, column: 5, scope: !4308)
!4415 = !DILocation(line: 3652, column: 12, scope: !4308)
!4416 = !DILocation(line: 3652, column: 36, scope: !4308)
!4417 = !DILocation(line: 3654, column: 14, scope: !4399)
!4418 = !DILocation(line: 0, scope: !4308)
!4419 = !DILocation(line: 3655, column: 46, scope: !4399)
!4420 = !DILocation(line: 3655, column: 29, scope: !4399)
!4421 = !DILocation(line: 3655, column: 9, scope: !4399)
!4422 = !DILocation(line: 3656, column: 9, scope: !4399)
!4423 = distinct !{!4423, !4414, !4424}
!4424 = !DILocation(line: 3657, column: 7, scope: !4308)
!4425 = !DILocation(line: 3649, column: 53, scope: !4309)
!4426 = !DILocation(line: 3649, column: 8, scope: !4309)
!4427 = distinct !{!4427, !4413, !4428}
!4428 = !DILocation(line: 3658, column: 3, scope: !4310)
!4429 = !DILocation(line: 3642, column: 46, scope: !4305)
!4430 = !DILocation(line: 3642, column: 4, scope: !4305)
!4431 = distinct !{!4431, !4404, !4432}
!4432 = !DILocation(line: 3659, column: 6, scope: !4306)
!4433 = !DILocation(line: 3669, column: 12, scope: !4313)
!4434 = !DILocation(line: 3669, column: 12, scope: !4301)
!4435 = !DILocation(line: 3671, column: 21, scope: !4312)
!4436 = !DILocation(line: 0, scope: !4312)
!4437 = !DILocation(line: 3672, column: 18, scope: !4317)
!4438 = !DILocation(line: 3673, column: 4, scope: !4317)
!4439 = !DILocation(line: 3673, column: 7, scope: !4317)
!4440 = !DILocation(line: 3673, column: 36, scope: !4317)
!4441 = !DILocation(line: 3672, column: 11, scope: !4312)
!4442 = !DILocation(line: 3676, column: 10, scope: !4317)
!4443 = !DILocation(line: 3676, column: 2, scope: !4317)
!4444 = !DILocation(line: 3694, column: 19, scope: !4315)
!4445 = !DILocation(line: 0, scope: !4315)
!4446 = !DILocation(line: 3695, column: 41, scope: !4315)
!4447 = !DILocation(line: 3696, column: 13, scope: !4315)
!4448 = !DILocation(line: 3695, column: 20, scope: !4315)
!4449 = !DILocation(line: 3697, column: 40, scope: !4315)
!4450 = !DILocation(line: 3698, column: 12, scope: !4315)
!4451 = !DILocation(line: 3697, column: 19, scope: !4315)
!4452 = !DILocation(line: 3699, column: 16, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 3699, column: 12)
!4454 = !DILocation(line: 3699, column: 12, scope: !4315)
!4455 = !DILocation(line: 3701, column: 5, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 3700, column: 3)
!4457 = !DILocation(line: 3702, column: 9, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 3702, column: 9)
!4459 = !DILocation(line: 3702, column: 37, scope: !4458)
!4460 = !DILocation(line: 3703, column: 9, scope: !4458)
!4461 = !DILocation(line: 3703, column: 40, scope: !4458)
!4462 = !DILocation(line: 3704, column: 9, scope: !4458)
!4463 = !DILocation(line: 3704, column: 40, scope: !4458)
!4464 = !DILocation(line: 3702, column: 9, scope: !4456)
!4465 = !DILocation(line: 3705, column: 7, scope: !4458)
!4466 = !DILocation(line: 3707, column: 7, scope: !4458)
!4467 = !DILocation(line: 3708, column: 34, scope: !4456)
!4468 = !DILocation(line: 3708, column: 40, scope: !4456)
!4469 = !DILocation(line: 3708, column: 5, scope: !4456)
!4470 = !DILocation(line: 3709, column: 5, scope: !4456)
!4471 = !DILocation(line: 3710, column: 5, scope: !4456)
!4472 = !DILocation(line: 3711, column: 3, scope: !4456)
!4473 = !DILocation(line: 3712, column: 8, scope: !4315)
!4474 = !DILocation(line: 3713, column: 8, scope: !4315)
!4475 = !DILocation(line: 3714, column: 8, scope: !4315)
!4476 = !DILocation(line: 3715, column: 8, scope: !4315)
!4477 = !DILocation(line: 3716, column: 37, scope: !4315)
!4478 = !DILocation(line: 3716, column: 43, scope: !4315)
!4479 = !DILocation(line: 3716, column: 8, scope: !4315)
!4480 = !DILocation(line: 3717, column: 8, scope: !4315)
!4481 = !DILocation(line: 3718, column: 8, scope: !4315)
!4482 = !DILocation(line: 3723, column: 19, scope: !4321)
!4483 = !DILocation(line: 0, scope: !4321)
!4484 = !DILocation(line: 3724, column: 20, scope: !4321)
!4485 = !DILocation(line: 3726, column: 8, scope: !4321)
!4486 = !DILocation(line: 3727, column: 8, scope: !4321)
!4487 = !DILocation(line: 3728, column: 16, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 3728, column: 12)
!4489 = !DILocation(line: 3728, column: 12, scope: !4321)
!4490 = !DILocation(line: 3730, column: 5, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 3729, column: 3)
!4492 = !DILocation(line: 3731, column: 5, scope: !4491)
!4493 = !DILocation(line: 3732, column: 34, scope: !4491)
!4494 = !DILocation(line: 3732, column: 40, scope: !4491)
!4495 = !DILocation(line: 3732, column: 5, scope: !4491)
!4496 = !DILocation(line: 3733, column: 5, scope: !4491)
!4497 = !DILocation(line: 3734, column: 5, scope: !4491)
!4498 = !DILocation(line: 3735, column: 3, scope: !4491)
!4499 = !DILocation(line: 3736, column: 8, scope: !4321)
!4500 = !DILocation(line: 3737, column: 8, scope: !4321)
!4501 = !DILocation(line: 3738, column: 12, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 3738, column: 12)
!4503 = !DILocation(line: 3739, column: 5, scope: !4502)
!4504 = !DILocation(line: 3739, column: 23, scope: !4502)
!4505 = !DILocation(line: 3739, column: 8, scope: !4502)
!4506 = !DILocation(line: 3738, column: 12, scope: !4321)
!4507 = !DILocation(line: 3741, column: 8, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 3740, column: 3)
!4509 = !DILocation(line: 3741, column: 13, scope: !4508)
!4510 = !DILocation(line: 3742, column: 8, scope: !4508)
!4511 = !DILocation(line: 3742, column: 12, scope: !4508)
!4512 = !DILocation(line: 3743, column: 3, scope: !4508)
!4513 = !DILocation(line: 3746, column: 8, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 3745, column: 3)
!4515 = !DILocation(line: 3746, column: 13, scope: !4514)
!4516 = !DILocation(line: 3747, column: 8, scope: !4514)
!4517 = !DILocation(line: 3747, column: 12, scope: !4514)
!4518 = !DILocation(line: 3749, column: 11, scope: !4321)
!4519 = !DILocation(line: 3749, column: 18, scope: !4321)
!4520 = !DILocation(line: 0, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 3750, column: 8)
!4522 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 3750, column: 8)
!4523 = !DILocation(line: 3750, column: 13, scope: !4522)
!4524 = !DILocation(line: 0, scope: !4522)
!4525 = !DILocation(line: 3750, column: 20, scope: !4521)
!4526 = !DILocation(line: 3750, column: 8, scope: !4522)
!4527 = !DILocation(line: 3751, column: 40, scope: !4521)
!4528 = !DILocation(line: 3751, column: 23, scope: !4521)
!4529 = !DILocation(line: 3751, column: 3, scope: !4521)
!4530 = !DILocation(line: 3750, column: 55, scope: !4521)
!4531 = !DILocation(line: 3750, column: 8, scope: !4521)
!4532 = distinct !{!4532, !4526, !4533}
!4533 = !DILocation(line: 3751, column: 49, scope: !4522)
!4534 = !DILocation(line: 3752, column: 8, scope: !4321)
!4535 = !DILocation(line: 3754, column: 6, scope: !4316)
!4536 = !DILocation(line: 3784, column: 12, scope: !4329)
!4537 = !DILocation(line: 3785, column: 4, scope: !4329)
!4538 = !DILocation(line: 3786, column: 8, scope: !4329)
!4539 = !DILocation(line: 3786, column: 12, scope: !4329)
!4540 = !DILocation(line: 3784, column: 11, scope: !4312)
!4541 = !DILocation(line: 3788, column: 4, scope: !4328)
!4542 = !DILocation(line: 0, scope: !4328)
!4543 = !DILocation(line: 3788, column: 21, scope: !4328)
!4544 = !DILocation(line: 3789, column: 16, scope: !4328)
!4545 = !DILocation(line: 3793, column: 14, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 3793, column: 8)
!4547 = !DILocation(line: 3793, column: 8, scope: !4328)
!4548 = !DILocation(line: 3795, column: 12, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 3795, column: 12)
!4550 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 3794, column: 6)
!4551 = !DILocation(line: 3796, column: 5, scope: !4549)
!4552 = !DILocation(line: 3796, column: 29, scope: !4549)
!4553 = !DILocation(line: 3796, column: 8, scope: !4549)
!4554 = !DILocation(line: 3795, column: 12, scope: !4550)
!4555 = !DILocation(line: 3797, column: 3, scope: !4549)
!4556 = !DILocation(line: 3802, column: 19, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 3802, column: 13)
!4558 = !DILocation(line: 3802, column: 13, scope: !4546)
!4559 = !DILocation(line: 3803, column: 6, scope: !4557)
!4560 = !DILocation(line: 3805, column: 6, scope: !4557)
!4561 = !DILocation(line: 3806, column: 8, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 3806, column: 8)
!4563 = !DILocation(line: 3807, column: 8, scope: !4562)
!4564 = !DILocation(line: 3807, column: 32, scope: !4562)
!4565 = !DILocation(line: 3807, column: 11, scope: !4562)
!4566 = !DILocation(line: 3806, column: 8, scope: !4328)
!4567 = !DILocation(line: 3808, column: 23, scope: !4562)
!4568 = !DILocation(line: 3808, column: 51, scope: !4562)
!4569 = !DILocation(line: 3808, column: 6, scope: !4562)
!4570 = !DILocation(line: 3809, column: 4, scope: !4328)
!4571 = !DILocation(line: 3810, column: 2, scope: !4329)
!4572 = !DILocation(line: 3810, column: 2, scope: !4328)
!4573 = !DILocation(line: 0, scope: !4332)
!4574 = !DILocation(line: 3819, column: 12, scope: !4332)
!4575 = !DILocation(line: 3820, column: 11, scope: !4332)
!4576 = !DILocation(line: 3825, column: 8, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 3825, column: 8)
!4578 = !DILocation(line: 3825, column: 8, scope: !4332)
!4579 = !DILocation(line: 3826, column: 11, scope: !4577)
!4580 = !DILocation(line: 3826, column: 6, scope: !4577)
!4581 = !DILocation(line: 3829, column: 15, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 3828, column: 6)
!4583 = !DILocation(line: 3830, column: 13, scope: !4582)
!4584 = !DILocation(line: 0, scope: !4577)
!4585 = !DILocation(line: 0, scope: !4338)
!4586 = !DILocation(line: 0, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 3842, column: 12)
!4588 = !DILocation(line: 0, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 3843, column: 3)
!4590 = !DILocation(line: 0, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 3855, column: 3)
!4592 = !DILocation(line: 3835, column: 9, scope: !4340)
!4593 = !DILocation(line: 0, scope: !4340)
!4594 = !DILocation(line: 3835, column: 20, scope: !4339)
!4595 = !DILocation(line: 3835, column: 18, scope: !4339)
!4596 = !DILocation(line: 3835, column: 4, scope: !4340)
!4597 = !DILocation(line: 3837, column: 8, scope: !4338)
!4598 = !DILocation(line: 3839, column: 39, scope: !4338)
!4599 = !DILocation(line: 3839, column: 19, scope: !4338)
!4600 = !DILocation(line: 3841, column: 8, scope: !4338)
!4601 = !DILocation(line: 3842, column: 12, scope: !4587)
!4602 = !DILocation(line: 3842, column: 29, scope: !4587)
!4603 = !DILocation(line: 3842, column: 12, scope: !4338)
!4604 = !DILocation(line: 3844, column: 14, scope: !4589)
!4605 = !DILocation(line: 3847, column: 3, scope: !4589)
!4606 = !DILocation(line: 3850, column: 14, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 3849, column: 3)
!4608 = !DILocation(line: 3851, column: 15, scope: !4607)
!4609 = !DILocation(line: 3851, column: 44, scope: !4607)
!4610 = !DILocation(line: 3854, column: 8, scope: !4338)
!4611 = !DILocation(line: 3854, column: 15, scope: !4338)
!4612 = !DILocation(line: 3854, column: 39, scope: !4338)
!4613 = !DILocation(line: 3856, column: 12, scope: !4591)
!4614 = !DILocation(line: 3857, column: 25, scope: !4591)
!4615 = !DILocation(line: 3857, column: 5, scope: !4591)
!4616 = !DILocation(line: 3858, column: 5, scope: !4591)
!4617 = distinct !{!4617, !4610, !4618}
!4618 = !DILocation(line: 3859, column: 3, scope: !4338)
!4619 = !DILocation(line: 3860, column: 9, scope: !4338)
!4620 = !DILocation(line: 3861, column: 6, scope: !4339)
!4621 = !DILocation(line: 3835, column: 47, scope: !4339)
!4622 = !DILocation(line: 3835, column: 4, scope: !4339)
!4623 = distinct !{!4623, !4596, !4624}
!4624 = !DILocation(line: 3861, column: 6, scope: !4340)
!4625 = !DILocation(line: 3864, column: 8, scope: !4345)
!4626 = !DILocation(line: 3864, column: 8, scope: !4332)
!4627 = !DILocation(line: 3866, column: 8, scope: !4344)
!4628 = !DILocation(line: 3867, column: 8, scope: !4344)
!4629 = !DILocation(line: 0, scope: !4344)
!4630 = !DILocation(line: 3870, column: 8, scope: !4344)
!4631 = !DILocation(line: 3871, column: 12, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 3871, column: 12)
!4633 = !DILocation(line: 3871, column: 29, scope: !4632)
!4634 = !DILocation(line: 0, scope: !4632)
!4635 = !DILocation(line: 3871, column: 12, scope: !4344)
!4636 = !DILocation(line: 3873, column: 14, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 3872, column: 3)
!4638 = !DILocation(line: 3874, column: 19, scope: !4637)
!4639 = !DILocation(line: 3874, column: 9, scope: !4637)
!4640 = !DILocation(line: 3874, column: 13, scope: !4637)
!4641 = !DILocation(line: 3875, column: 18, scope: !4637)
!4642 = !DILocation(line: 3875, column: 9, scope: !4637)
!4643 = !DILocation(line: 3875, column: 16, scope: !4637)
!4644 = !DILocation(line: 3876, column: 3, scope: !4637)
!4645 = !DILocation(line: 3879, column: 14, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 3878, column: 3)
!4647 = !DILocation(line: 3880, column: 40, scope: !4646)
!4648 = !DILocation(line: 3880, column: 15, scope: !4646)
!4649 = !DILocation(line: 3880, column: 44, scope: !4646)
!4650 = !DILocation(line: 3880, column: 9, scope: !4646)
!4651 = !DILocation(line: 3880, column: 13, scope: !4646)
!4652 = !DILocation(line: 3881, column: 9, scope: !4646)
!4653 = !DILocation(line: 3881, column: 16, scope: !4646)
!4654 = !DILocation(line: 0, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 3883, column: 8)
!4656 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 3883, column: 8)
!4657 = !DILocation(line: 3883, column: 13, scope: !4656)
!4658 = !DILocation(line: 0, scope: !4656)
!4659 = !DILocation(line: 3883, column: 20, scope: !4655)
!4660 = !DILocation(line: 3883, column: 8, scope: !4656)
!4661 = !DILocation(line: 3884, column: 40, scope: !4655)
!4662 = !DILocation(line: 3884, column: 23, scope: !4655)
!4663 = !DILocation(line: 3884, column: 3, scope: !4655)
!4664 = !DILocation(line: 3883, column: 56, scope: !4655)
!4665 = !DILocation(line: 3883, column: 8, scope: !4655)
!4666 = distinct !{!4666, !4660, !4667}
!4667 = !DILocation(line: 3884, column: 50, scope: !4656)
!4668 = !DILocation(line: 3885, column: 6, scope: !4345)
!4669 = !DILocation(line: 3885, column: 6, scope: !4344)
!4670 = !DILocation(line: 3891, column: 12, scope: !4350)
!4671 = !DILocation(line: 3892, column: 5, scope: !4350)
!4672 = !DILocation(line: 3892, column: 29, scope: !4350)
!4673 = !DILocation(line: 3892, column: 8, scope: !4350)
!4674 = !DILocation(line: 3891, column: 12, scope: !4313)
!4675 = !DILocation(line: 3895, column: 20, scope: !4349)
!4676 = !DILocation(line: 0, scope: !4349)
!4677 = !DILocation(line: 3896, column: 21, scope: !4349)
!4678 = !DILocation(line: 3896, column: 40, scope: !4349)
!4679 = !DILocation(line: 3896, column: 20, scope: !4349)
!4680 = !DILocation(line: 3896, column: 48, scope: !4349)
!4681 = !DILocation(line: 3898, column: 11, scope: !4354)
!4682 = !DILocation(line: 3898, column: 17, scope: !4354)
!4683 = !DILocation(line: 3898, column: 20, scope: !4354)
!4684 = !DILocation(line: 3898, column: 11, scope: !4349)
!4685 = !DILocation(line: 3899, column: 2, scope: !4354)
!4686 = !DILocation(line: 3902, column: 4, scope: !4353)
!4687 = !DILocation(line: 3903, column: 4, scope: !4353)
!4688 = !DILocation(line: 3905, column: 8, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4353, file: !3, line: 3905, column: 8)
!4690 = !DILocation(line: 3905, column: 35, scope: !4689)
!4691 = !DILocation(line: 3905, column: 8, scope: !4353)
!4692 = !DILocation(line: 3906, column: 37, scope: !4689)
!4693 = !DILocation(line: 3907, column: 9, scope: !4689)
!4694 = !DILocation(line: 3906, column: 6, scope: !4689)
!4695 = !DILocation(line: 3908, column: 14, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 3908, column: 13)
!4697 = !DILocation(line: 3909, column: 7, scope: !4696)
!4698 = !DILocation(line: 3909, column: 12, scope: !4696)
!4699 = !DILocation(line: 3910, column: 5, scope: !4696)
!4700 = !DILocation(line: 3910, column: 9, scope: !4696)
!4701 = !DILocation(line: 3911, column: 6, scope: !4696)
!4702 = !DILocation(line: 3911, column: 9, scope: !4696)
!4703 = !DILocation(line: 3908, column: 13, scope: !4689)
!4704 = !DILocation(line: 3912, column: 6, scope: !4696)
!4705 = !DILocation(line: 3915, column: 13, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 3914, column: 6)
!4707 = !DILocation(line: 3915, column: 18, scope: !4706)
!4708 = !DILocation(line: 3916, column: 13, scope: !4706)
!4709 = !DILocation(line: 3916, column: 17, scope: !4706)
!4710 = !DILocation(line: 3917, column: 13, scope: !4706)
!4711 = !DILocation(line: 3917, column: 20, scope: !4706)
!4712 = !DILocation(line: 0, scope: !4353)
!4713 = !DILocation(line: 3918, column: 8, scope: !4706)
!4714 = !DILocation(line: 3920, column: 33, scope: !4353)
!4715 = !DILocation(line: 3920, column: 39, scope: !4353)
!4716 = !DILocation(line: 3920, column: 4, scope: !4353)
!4717 = !DILocation(line: 3921, column: 2, scope: !4354)
!4718 = !DILocation(line: 3923, column: 20, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 3923, column: 11)
!4720 = !DILocation(line: 3923, column: 46, scope: !4719)
!4721 = !DILocation(line: 3924, column: 4, scope: !4719)
!4722 = !DILocation(line: 3924, column: 7, scope: !4719)
!4723 = !DILocation(line: 3925, column: 4, scope: !4719)
!4724 = !DILocation(line: 3925, column: 7, scope: !4719)
!4725 = !DILocation(line: 3923, column: 11, scope: !4349)
!4726 = !DILocation(line: 3926, column: 2, scope: !4719)
!4727 = !DILocation(line: 3929, column: 16, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 3929, column: 16)
!4729 = !DILocation(line: 3930, column: 9, scope: !4728)
!4730 = !DILocation(line: 3930, column: 12, scope: !4728)
!4731 = !DILocation(line: 3931, column: 9, scope: !4728)
!4732 = !DILocation(line: 3931, column: 12, scope: !4728)
!4733 = !DILocation(line: 3932, column: 9, scope: !4728)
!4734 = !DILocation(line: 3932, column: 13, scope: !4728)
!4735 = !DILocation(line: 3933, column: 9, scope: !4728)
!4736 = !DILocation(line: 3933, column: 12, scope: !4728)
!4737 = !DILocation(line: 3929, column: 16, scope: !4719)
!4738 = !DILocation(line: 3934, column: 33, scope: !4728)
!4739 = !DILocation(line: 3934, column: 2, scope: !4728)
!4740 = !DILocation(line: 3938, column: 12, scope: !4359)
!4741 = !DILocation(line: 3939, column: 5, scope: !4359)
!4742 = !DILocation(line: 3939, column: 8, scope: !4359)
!4743 = !DILocation(line: 3940, column: 5, scope: !4359)
!4744 = !DILocation(line: 3940, column: 9, scope: !4359)
!4745 = !DILocation(line: 3938, column: 12, scope: !4350)
!4746 = !DILocation(line: 3942, column: 31, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 3941, column: 5)
!4748 = !DILocation(line: 3942, column: 7, scope: !4747)
!4749 = !DILocation(line: 3943, column: 5, scope: !4747)
!4750 = !DILocation(line: 3945, column: 12, scope: !4358)
!4751 = !DILocation(line: 3945, column: 28, scope: !4358)
!4752 = !DILocation(line: 3946, column: 5, scope: !4358)
!4753 = !DILocation(line: 3946, column: 8, scope: !4358)
!4754 = !DILocation(line: 3946, column: 33, scope: !4358)
!4755 = !DILocation(line: 3947, column: 5, scope: !4358)
!4756 = !DILocation(line: 3947, column: 29, scope: !4358)
!4757 = !DILocation(line: 3947, column: 8, scope: !4358)
!4758 = !DILocation(line: 3945, column: 12, scope: !4359)
!4759 = !DILocation(line: 3949, column: 31, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 3948, column: 5)
!4761 = !DILocation(line: 3949, column: 7, scope: !4760)
!4762 = !DILocation(line: 3950, column: 5, scope: !4760)
!4763 = !DILocation(line: 3952, column: 12, scope: !4357)
!4764 = !DILocation(line: 3952, column: 28, scope: !4357)
!4765 = !DILocation(line: 3952, column: 12, scope: !4358)
!4766 = !DILocation(line: 3956, column: 7, scope: !4356)
!4767 = !DILocation(line: 0, scope: !4356)
!4768 = !DILocation(line: 3957, column: 7, scope: !4356)
!4769 = !DILocation(line: 3959, column: 18, scope: !4356)
!4770 = !DILocation(line: 3960, column: 22, scope: !4356)
!4771 = !DILocation(line: 0, scope: !4372)
!4772 = !DILocation(line: 0, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !3, line: 3987, column: 8)
!4774 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 3987, column: 8)
!4775 = !DILocation(line: 3962, column: 21, scope: !4368)
!4776 = !DILocation(line: 3962, column: 12, scope: !4369)
!4777 = !DILocation(line: 0, scope: !4369)
!4778 = !DILocation(line: 3962, column: 7, scope: !4369)
!4779 = !DILocation(line: 3992, column: 7, scope: !4380)
!4780 = !DILocation(line: 3964, column: 16, scope: !4367)
!4781 = !DILocation(line: 0, scope: !4367)
!4782 = !DILocation(line: 3965, column: 14, scope: !4367)
!4783 = !DILocation(line: 3967, column: 17, scope: !4367)
!4784 = !DILocation(line: 3967, column: 15, scope: !4367)
!4785 = !DILocation(line: 3968, column: 22, scope: !4367)
!4786 = !DILocation(line: 3968, column: 4, scope: !4367)
!4787 = !DILocation(line: 3968, column: 20, scope: !4367)
!4788 = !DILocation(line: 3969, column: 4, scope: !4367)
!4789 = !DILocation(line: 3973, column: 9, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 3973, column: 8)
!4791 = !DILocation(line: 3973, column: 20, scope: !4790)
!4792 = !DILocation(line: 3973, column: 23, scope: !4790)
!4793 = !DILocation(line: 3973, column: 8, scope: !4367)
!4794 = !DILocation(line: 3974, column: 30, scope: !4790)
!4795 = !DILocation(line: 3974, column: 6, scope: !4790)
!4796 = !DILocation(line: 3978, column: 8, scope: !4373)
!4797 = !DILocation(line: 3978, column: 11, scope: !4373)
!4798 = !DILocation(line: 3978, column: 14, scope: !4373)
!4799 = !DILocation(line: 3978, column: 8, scope: !4367)
!4800 = !DILocation(line: 3980, column: 8, scope: !4372)
!4801 = !DILocation(line: 3980, column: 25, scope: !4372)
!4802 = !DILocation(line: 3981, column: 8, scope: !4372)
!4803 = !DILocation(line: 3983, column: 8, scope: !4372)
!4804 = !DILocation(line: 3984, column: 17, scope: !4372)
!4805 = !DILocation(line: 3985, column: 20, scope: !4372)
!4806 = !DILocation(line: 3986, column: 18, scope: !4372)
!4807 = !DILocation(line: 3987, column: 13, scope: !4774)
!4808 = !DILocation(line: 0, scope: !4774)
!4809 = !DILocation(line: 3987, column: 20, scope: !4773)
!4810 = !DILocation(line: 3987, column: 8, scope: !4774)
!4811 = !DILocation(line: 3988, column: 40, scope: !4773)
!4812 = !DILocation(line: 3988, column: 23, scope: !4773)
!4813 = !DILocation(line: 3988, column: 3, scope: !4773)
!4814 = !DILocation(line: 3987, column: 56, scope: !4773)
!4815 = !DILocation(line: 3987, column: 8, scope: !4773)
!4816 = distinct !{!4816, !4810, !4817}
!4817 = !DILocation(line: 3988, column: 51, scope: !4774)
!4818 = !DILocation(line: 3989, column: 8, scope: !4372)
!4819 = !DILocation(line: 3990, column: 6, scope: !4373)
!4820 = !DILocation(line: 3990, column: 6, scope: !4372)
!4821 = !DILocation(line: 3962, column: 33, scope: !4368)
!4822 = !DILocation(line: 3962, column: 7, scope: !4368)
!4823 = distinct !{!4823, !4778, !4824}
!4824 = !DILocation(line: 3991, column: 2, scope: !4369)
!4825 = !DILocation(line: 0, scope: !4380)
!4826 = !DILocation(line: 3992, column: 23, scope: !4379)
!4827 = !DILocation(line: 3992, column: 21, scope: !4379)
!4828 = !DILocation(line: 3994, column: 16, scope: !4378)
!4829 = !DILocation(line: 0, scope: !4378)
!4830 = !DILocation(line: 3995, column: 14, scope: !4378)
!4831 = !DILocation(line: 3997, column: 17, scope: !4378)
!4832 = !DILocation(line: 3997, column: 15, scope: !4378)
!4833 = !DILocation(line: 3999, column: 4, scope: !4378)
!4834 = !DILocation(line: 4003, column: 9, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 4003, column: 8)
!4836 = !DILocation(line: 4003, column: 20, scope: !4835)
!4837 = !DILocation(line: 4003, column: 23, scope: !4835)
!4838 = !DILocation(line: 4003, column: 8, scope: !4378)
!4839 = !DILocation(line: 4004, column: 30, scope: !4835)
!4840 = !DILocation(line: 4004, column: 6, scope: !4835)
!4841 = !DILocation(line: 4008, column: 13, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 4008, column: 13)
!4843 = !DILocation(line: 4008, column: 16, scope: !4842)
!4844 = !DILocation(line: 4008, column: 19, scope: !4842)
!4845 = !DILocation(line: 4008, column: 13, scope: !4835)
!4846 = !DILocation(line: 4009, column: 6, scope: !4842)
!4847 = !DILocation(line: 3992, column: 47, scope: !4379)
!4848 = !DILocation(line: 3992, column: 7, scope: !4379)
!4849 = distinct !{!4849, !4779, !4850}
!4850 = !DILocation(line: 4010, column: 2, scope: !4380)
!4851 = !DILocation(line: 4011, column: 5, scope: !4357)
!4852 = !DILocation(line: 4011, column: 5, scope: !4356)
!4853 = !DILocation(line: 4013, column: 3, scope: !4287)
!4854 = !DILocation(line: 4014, column: 3, scope: !4287)
!4855 = !DILocation(line: 4015, column: 1, scope: !4287)
!4856 = distinct !DISubprogram(name: "gsi_next", scope: !566, file: !566, line: 4485, type: !4857, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4860)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{null, !4859}
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!4860 = !{!4861}
!4861 = !DILocalVariable(name: "i", arg: 1, scope: !4856, file: !566, line: 4485, type: !4859)
!4862 = !DILocation(line: 0, scope: !4856)
!4863 = !DILocation(line: 4487, column: 15, scope: !4856)
!4864 = !DILocation(line: 4487, column: 20, scope: !4856)
!4865 = !DILocation(line: 4487, column: 10, scope: !4856)
!4866 = !DILocation(line: 4488, column: 1, scope: !4856)
!4867 = distinct !DISubprogram(name: "gsi_start_bb", scope: !566, file: !566, line: 4418, type: !4868, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4870)
!4868 = !DISubroutineType(types: !4869)
!4869 = !{!3440, !1482}
!4870 = !{!4871, !4872, !4873}
!4871 = !DILocalVariable(name: "bb", arg: 1, scope: !4867, file: !566, line: 4418, type: !1482)
!4872 = !DILocalVariable(name: "i", scope: !4867, file: !566, line: 4420, type: !3440)
!4873 = !DILocalVariable(name: "seq", scope: !4867, file: !566, line: 4421, type: !1040)
!4874 = !DILocation(line: 0, scope: !4867)
!4875 = !DILocation(line: 4420, column: 24, scope: !4867)
!4876 = !DILocation(line: 4423, column: 9, scope: !4867)
!4877 = !DILocation(line: 4424, column: 11, scope: !4867)
!4878 = !DILocation(line: 4424, column: 5, scope: !4867)
!4879 = !DILocation(line: 4424, column: 9, scope: !4867)
!4880 = !DILocation(line: 4425, column: 5, scope: !4867)
!4881 = !DILocation(line: 4425, column: 9, scope: !4867)
!4882 = !DILocation(line: 4426, column: 5, scope: !4867)
!4883 = !DILocation(line: 4426, column: 8, scope: !4867)
!4884 = !DILocation(line: 4429, column: 1, scope: !4867)
!4885 = distinct !DISubprogram(name: "solve_constraints", scope: !3, file: !3, line: 5418, type: !2853, scopeLine: 5419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4886)
!4886 = !{!4887}
!4887 = !DILocalVariable(name: "si", scope: !4885, file: !3, line: 5420, type: !2149)
!4888 = !DILocation(line: 5422, column: 7, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 5422, column: 7)
!4890 = !DILocation(line: 5422, column: 7, scope: !4885)
!4891 = !DILocation(line: 5424, column: 7, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 5423, column: 5)
!4893 = !DILocation(line: 5425, column: 25, scope: !4892)
!4894 = !DILocation(line: 5425, column: 7, scope: !4892)
!4895 = !DILocation(line: 5428, column: 7, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 5428, column: 7)
!4897 = !DILocation(line: 5426, column: 5, scope: !4892)
!4898 = !DILocation(line: 5428, column: 7, scope: !4885)
!4899 = !DILocation(line: 5429, column: 5, scope: !4896)
!4900 = !DILocation(line: 5433, column: 15, scope: !4885)
!4901 = !DILocation(line: 5433, column: 46, scope: !4885)
!4902 = !DILocation(line: 5433, column: 3, scope: !4885)
!4903 = !DILocation(line: 5435, column: 7, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 5435, column: 7)
!4905 = !DILocation(line: 5435, column: 7, scope: !4885)
!4906 = !DILocation(line: 5436, column: 5, scope: !4904)
!4907 = !DILocation(line: 5437, column: 3, scope: !4885)
!4908 = !DILocation(line: 5439, column: 7, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 5439, column: 7)
!4910 = !DILocation(line: 5439, column: 7, scope: !4885)
!4911 = !DILocation(line: 5440, column: 5, scope: !4909)
!4912 = !DILocation(line: 5442, column: 34, scope: !4885)
!4913 = !DILocation(line: 5442, column: 8, scope: !4885)
!4914 = !DILocation(line: 0, scope: !4885)
!4915 = !DILocation(line: 5444, column: 7, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 5444, column: 7)
!4917 = !DILocation(line: 5444, column: 7, scope: !4885)
!4918 = !DILocation(line: 5445, column: 5, scope: !4916)
!4919 = !DILocation(line: 5447, column: 24, scope: !4885)
!4920 = !DILocation(line: 5447, column: 3, scope: !4885)
!4921 = !DILocation(line: 5449, column: 3, scope: !4885)
!4922 = !DILocation(line: 5450, column: 3, scope: !4885)
!4923 = !DILocation(line: 5452, column: 7, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 5452, column: 7)
!4925 = !DILocation(line: 5452, column: 17, scope: !4924)
!4926 = !DILocation(line: 5452, column: 21, scope: !4924)
!4927 = !DILocation(line: 5452, column: 32, scope: !4924)
!4928 = !DILocation(line: 5452, column: 7, scope: !4885)
!4929 = !DILocation(line: 5453, column: 5, scope: !4924)
!4930 = !DILocation(line: 5455, column: 29, scope: !4885)
!4931 = !DILocation(line: 5455, column: 3, scope: !4885)
!4932 = !DILocation(line: 5457, column: 7, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 5457, column: 7)
!4934 = !DILocation(line: 5457, column: 7, scope: !4885)
!4935 = !DILocation(line: 5458, column: 5, scope: !4933)
!4936 = !DILocation(line: 5460, column: 31, scope: !4885)
!4937 = !DILocation(line: 5460, column: 3, scope: !4885)
!4938 = !DILocation(line: 5462, column: 7, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 5462, column: 7)
!4940 = !DILocation(line: 5462, column: 7, scope: !4885)
!4941 = !DILocation(line: 5463, column: 5, scope: !4939)
!4942 = !DILocation(line: 5464, column: 25, scope: !4885)
!4943 = !DILocation(line: 5464, column: 3, scope: !4885)
!4944 = !DILocation(line: 5468, column: 32, scope: !4885)
!4945 = !DILocation(line: 5468, column: 3, scope: !4885)
!4946 = !DILocation(line: 5470, column: 7, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 5470, column: 7)
!4948 = !DILocation(line: 5470, column: 7, scope: !4885)
!4949 = !DILocation(line: 5471, column: 5, scope: !4947)
!4950 = !DILocation(line: 5473, column: 16, scope: !4885)
!4951 = !DILocation(line: 5473, column: 3, scope: !4885)
!4952 = !DILocation(line: 5475, column: 7, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 5475, column: 7)
!4954 = !DILocation(line: 5475, column: 7, scope: !4885)
!4955 = !DILocation(line: 5476, column: 5, scope: !4953)
!4956 = !DILocation(line: 5477, column: 1, scope: !4885)
!4957 = distinct !DISubprogram(name: "find_what_var_points_to", scope: !3, file: !3, line: 4793, type: !4958, scopeLine: 4794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4960)
!4958 = !DISubroutineType(types: !4959)
!4959 = !{null, !711, !3018}
!4960 = !{!4961, !4962, !4963, !4964, !4965, !4966, !4967, !4968}
!4961 = !DILocalVariable(name: "orig_vi", arg: 1, scope: !4957, file: !3, line: 4793, type: !711)
!4962 = !DILocalVariable(name: "pt", arg: 2, scope: !4957, file: !3, line: 4793, type: !3018)
!4963 = !DILocalVariable(name: "i", scope: !4957, file: !3, line: 4795, type: !6)
!4964 = !DILocalVariable(name: "bi", scope: !4957, file: !3, line: 4796, type: !2961)
!4965 = !DILocalVariable(name: "finished_solution", scope: !4957, file: !3, line: 4797, type: !1598)
!4966 = !DILocalVariable(name: "result", scope: !4957, file: !3, line: 4798, type: !1598)
!4967 = !DILocalVariable(name: "vi", scope: !4957, file: !3, line: 4799, type: !711)
!4968 = !DILocalVariable(name: "vi", scope: !4969, file: !3, line: 4811, type: !711)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 4810, column: 5)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 4809, column: 3)
!4971 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 4809, column: 3)
!4972 = !DILocation(line: 0, scope: !4957)
!4973 = !DILocation(line: 4795, column: 3, scope: !4957)
!4974 = !DILocation(line: 4796, column: 3, scope: !4957)
!4975 = !DILocation(line: 4801, column: 11, scope: !4957)
!4976 = !DILocation(line: 4801, column: 3, scope: !4957)
!4977 = !DILocation(line: 4805, column: 36, scope: !4957)
!4978 = !DILocation(line: 4805, column: 21, scope: !4957)
!4979 = !DILocation(line: 4805, column: 8, scope: !4957)
!4980 = !DILocation(line: 4809, column: 3, scope: !4971)
!4981 = !DILocation(line: 4809, column: 3, scope: !4970)
!4982 = !DILocation(line: 4811, column: 35, scope: !4969)
!4983 = !DILocation(line: 4811, column: 22, scope: !4969)
!4984 = !DILocation(line: 0, scope: !4969)
!4985 = !DILocation(line: 4813, column: 15, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4969, file: !3, line: 4813, column: 11)
!4987 = !DILocation(line: 4813, column: 11, scope: !4986)
!4988 = !DILocation(line: 4813, column: 11, scope: !4969)
!4989 = !DILocation(line: 4815, column: 12, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 4815, column: 8)
!4991 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 4814, column: 2)
!4992 = !DILocation(line: 4815, column: 15, scope: !4990)
!4993 = !DILocation(line: 4815, column: 8, scope: !4991)
!4994 = !DILocation(line: 4816, column: 15, scope: !4990)
!4995 = !DILocation(line: 4816, column: 6, scope: !4990)
!4996 = !DILocation(line: 4817, column: 20, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 4817, column: 13)
!4998 = !DILocation(line: 4817, column: 13, scope: !4990)
!4999 = !DILocation(line: 4818, column: 18, scope: !4997)
!5000 = !DILocation(line: 4818, column: 6, scope: !4997)
!5001 = !DILocation(line: 4819, column: 20, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 4819, column: 13)
!5003 = !DILocation(line: 4819, column: 13, scope: !4997)
!5004 = !DILocation(line: 4820, column: 6, scope: !5002)
!5005 = !DILocation(line: 4821, column: 20, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 4821, column: 13)
!5007 = !DILocation(line: 4821, column: 13, scope: !5002)
!5008 = !DILocation(line: 4822, column: 19, scope: !5006)
!5009 = !DILocation(line: 4822, column: 6, scope: !5006)
!5010 = !DILocation(line: 4823, column: 17, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 4823, column: 13)
!5012 = !DILocation(line: 4823, column: 13, scope: !5011)
!5013 = !DILocation(line: 4823, column: 13, scope: !5006)
!5014 = !DILocation(line: 4826, column: 20, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 4826, column: 13)
!5016 = !DILocation(line: 4826, column: 13, scope: !5011)
!5017 = !DILocation(line: 4829, column: 20, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 4829, column: 13)
!5019 = !DILocation(line: 4830, column: 6, scope: !5018)
!5020 = !DILocation(line: 4830, column: 16, scope: !5018)
!5021 = !DILocation(line: 4829, column: 13, scope: !5015)
!5022 = !DILocation(line: 4831, column: 19, scope: !5018)
!5023 = !DILocation(line: 4831, column: 6, scope: !5018)
!5024 = !DILocation(line: 4833, column: 15, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !4969, file: !3, line: 4833, column: 11)
!5026 = !DILocation(line: 4833, column: 11, scope: !5025)
!5027 = !DILocation(line: 4833, column: 11, scope: !4969)
!5028 = !DILocation(line: 4834, column: 29, scope: !5025)
!5029 = !DILocation(line: 4834, column: 2, scope: !5025)
!5030 = distinct !{!5030, !4980, !5031}
!5031 = !DILocation(line: 4835, column: 5, scope: !4971)
!5032 = !DILocation(line: 4839, column: 11, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 4839, column: 7)
!5034 = !DILocation(line: 4839, column: 7, scope: !5033)
!5035 = !DILocation(line: 4840, column: 7, scope: !5033)
!5036 = !DILocation(line: 4840, column: 20, scope: !5033)
!5037 = !DILocation(line: 4840, column: 11, scope: !5033)
!5038 = !DILocation(line: 4841, column: 4, scope: !5033)
!5039 = !DILocation(line: 4841, column: 12, scope: !5033)
!5040 = !DILocation(line: 4841, column: 8, scope: !5033)
!5041 = !DILocation(line: 4839, column: 7, scope: !4957)
!5042 = !DILocation(line: 4845, column: 23, scope: !4957)
!5043 = !DILocation(line: 4846, column: 31, scope: !4957)
!5044 = !DILocation(line: 4848, column: 45, scope: !4957)
!5045 = !DILocation(line: 4848, column: 3, scope: !4957)
!5046 = !DILocation(line: 4849, column: 12, scope: !4957)
!5047 = !DILocation(line: 4850, column: 8, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 4850, column: 7)
!5049 = !DILocation(line: 4850, column: 7, scope: !4957)
!5050 = !DILocation(line: 4852, column: 7, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 4851, column: 5)
!5052 = !DILocation(line: 4853, column: 11, scope: !5051)
!5053 = !DILocation(line: 4853, column: 16, scope: !5051)
!5054 = !DILocation(line: 4854, column: 5, scope: !5051)
!5055 = !DILocation(line: 4857, column: 11, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 4856, column: 5)
!5057 = !DILocation(line: 4857, column: 16, scope: !5056)
!5058 = !DILocation(line: 4858, column: 7, scope: !5056)
!5059 = !DILocation(line: 4860, column: 1, scope: !4957)
!5060 = distinct !DISubprogram(name: "VEC_varinfo_t_base_iterate", scope: !3, file: !3, line: 273, type: !5061, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5064)
!5061 = !DISubroutineType(types: !5062)
!5062 = !{!662, !3977, !6, !5063}
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!5064 = !{!5065, !5066, !5067}
!5065 = !DILocalVariable(name: "vec_", arg: 1, scope: !5060, file: !3, line: 273, type: !3977)
!5066 = !DILocalVariable(name: "ix_", arg: 2, scope: !5060, file: !3, line: 273, type: !6)
!5067 = !DILocalVariable(name: "ptr", arg: 3, scope: !5060, file: !3, line: 273, type: !5063)
!5068 = !DILocation(line: 0, scope: !5060)
!5069 = !DILocation(line: 273, column: 1, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5060, file: !3, line: 273, column: 1)
!5071 = !DILocation(line: 273, column: 1, scope: !5060)
!5072 = !DILocation(line: 273, column: 1, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 273, column: 1)
!5074 = !DILocation(line: 273, column: 1, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 273, column: 1)
!5076 = !DILocation(line: 0, scope: !5070)
!5077 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !140, file: !140, line: 182, type: !5078, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5082)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{!6, !5080}
!5080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5081, size: 64)
!5081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1580)
!5082 = !{!5083}
!5083 = !DILocalVariable(name: "vec_", arg: 1, scope: !5077, file: !140, line: 182, type: !5080)
!5084 = !DILocation(line: 0, scope: !5077)
!5085 = !DILocation(line: 182, column: 1, scope: !5077)
!5086 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !140, file: !140, line: 182, type: !5087, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5089)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!730, !5080, !6}
!5089 = !{!5090, !5091}
!5090 = !DILocalVariable(name: "vec_", arg: 1, scope: !5086, file: !140, line: 182, type: !5080)
!5091 = !DILocalVariable(name: "ix_", arg: 2, scope: !5086, file: !140, line: 182, type: !6)
!5092 = !DILocation(line: 0, scope: !5086)
!5093 = !DILocation(line: 182, column: 1, scope: !5086)
!5094 = distinct !DISubprogram(name: "find_what_p_points_to", scope: !3, file: !3, line: 4865, type: !5095, scopeLine: 4866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5097)
!5095 = !DISubroutineType(types: !5096)
!5096 = !{null, !730}
!5097 = !{!5098, !5099, !5100, !5101}
!5098 = !DILocalVariable(name: "p", arg: 1, scope: !5094, file: !3, line: 4865, type: !730)
!5099 = !DILocalVariable(name: "pi", scope: !5094, file: !3, line: 4867, type: !1776)
!5100 = !DILocalVariable(name: "lookup_p", scope: !5094, file: !3, line: 4868, type: !730)
!5101 = !DILocalVariable(name: "vi", scope: !5094, file: !3, line: 4869, type: !711)
!5102 = !DILocation(line: 0, scope: !5094)
!5103 = !DILocation(line: 4873, column: 7, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 4873, column: 7)
!5105 = !DILocation(line: 4873, column: 21, scope: !5104)
!5106 = !DILocation(line: 4874, column: 7, scope: !5104)
!5107 = !DILocation(line: 4874, column: 10, scope: !5104)
!5108 = !DILocation(line: 4874, column: 39, scope: !5104)
!5109 = !DILocation(line: 4875, column: 7, scope: !5104)
!5110 = !DILocation(line: 4875, column: 10, scope: !5104)
!5111 = !DILocation(line: 4873, column: 7, scope: !5094)
!5112 = !DILocation(line: 4876, column: 5, scope: !5104)
!5113 = !DILocation(line: 4878, column: 8, scope: !5094)
!5114 = !DILocation(line: 4879, column: 8, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 4879, column: 7)
!5116 = !DILocation(line: 4879, column: 7, scope: !5094)
!5117 = !DILocation(line: 4882, column: 8, scope: !5094)
!5118 = !DILocation(line: 4883, column: 37, scope: !5094)
!5119 = !DILocation(line: 4883, column: 3, scope: !5094)
!5120 = !DILocation(line: 4884, column: 1, scope: !5094)
!5121 = distinct !DISubprogram(name: "VEC_constraint_t_heap_alloc", scope: !3, file: !3, line: 190, type: !5122, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5124)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!685, !662}
!5124 = !{!5125}
!5125 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5121, file: !3, line: 190, type: !662)
!5126 = !DILocation(line: 0, scope: !5121)
!5127 = !DILocation(line: 190, column: 1, scope: !5121)
!5128 = distinct !DISubprogram(name: "VEC_varinfo_t_heap_alloc", scope: !3, file: !3, line: 275, type: !5129, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5131)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!699, !662}
!5131 = !{!5132}
!5132 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5128, file: !3, line: 275, type: !662)
!5133 = !DILocation(line: 0, scope: !5128)
!5134 = !DILocation(line: 275, column: 1, scope: !5128)
!5135 = distinct !DISubprogram(name: "shared_bitmap_hash", scope: !3, file: !3, line: 4704, type: !1522, scopeLine: 4705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5136)
!5136 = !{!5137, !5138}
!5137 = !DILocalVariable(name: "p", arg: 1, scope: !5135, file: !3, line: 4704, type: !1355)
!5138 = !DILocalVariable(name: "bi", scope: !5135, file: !3, line: 4706, type: !5139)
!5139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2053)
!5140 = !DILocation(line: 0, scope: !5135)
!5141 = !DILocation(line: 4707, column: 14, scope: !5135)
!5142 = !DILocation(line: 4707, column: 3, scope: !5135)
!5143 = distinct !DISubprogram(name: "shared_bitmap_eq", scope: !3, file: !3, line: 4713, type: !1528, scopeLine: 4714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5144)
!5144 = !{!5145, !5146, !5147, !5148}
!5145 = !DILocalVariable(name: "p1", arg: 1, scope: !5143, file: !3, line: 4713, type: !1355)
!5146 = !DILocalVariable(name: "p2", arg: 2, scope: !5143, file: !3, line: 4713, type: !1355)
!5147 = !DILocalVariable(name: "sbi1", scope: !5143, file: !3, line: 4715, type: !5139)
!5148 = !DILocalVariable(name: "sbi2", scope: !5143, file: !3, line: 4716, type: !5139)
!5149 = !DILocation(line: 0, scope: !5143)
!5150 = !DILocation(line: 4717, column: 32, scope: !5143)
!5151 = !DILocation(line: 4717, column: 47, scope: !5143)
!5152 = !DILocation(line: 4717, column: 10, scope: !5143)
!5153 = !DILocation(line: 4717, column: 3, scope: !5143)
!5154 = distinct !DISubprogram(name: "init_base_vars", scope: !3, file: !3, line: 5138, type: !2853, scopeLine: 5139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5155)
!5155 = !{!5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165}
!5156 = !DILocalVariable(name: "lhs", scope: !5154, file: !3, line: 5140, type: !675)
!5157 = !DILocalVariable(name: "rhs", scope: !5154, file: !3, line: 5140, type: !675)
!5158 = !DILocalVariable(name: "var_anything", scope: !5154, file: !3, line: 5141, type: !711)
!5159 = !DILocalVariable(name: "var_nothing", scope: !5154, file: !3, line: 5142, type: !711)
!5160 = !DILocalVariable(name: "var_readonly", scope: !5154, file: !3, line: 5143, type: !711)
!5161 = !DILocalVariable(name: "var_escaped", scope: !5154, file: !3, line: 5144, type: !711)
!5162 = !DILocalVariable(name: "var_nonlocal", scope: !5154, file: !3, line: 5145, type: !711)
!5163 = !DILocalVariable(name: "var_callused", scope: !5154, file: !3, line: 5146, type: !711)
!5164 = !DILocalVariable(name: "var_storedanything", scope: !5154, file: !3, line: 5147, type: !711)
!5165 = !DILocalVariable(name: "var_integer", scope: !5154, file: !3, line: 5148, type: !711)
!5166 = !DILocation(line: 5140, column: 3, scope: !5154)
!5167 = !DILocation(line: 5152, column: 17, scope: !5154)
!5168 = !DILocation(line: 0, scope: !5154)
!5169 = !DILocation(line: 5153, column: 3, scope: !5154)
!5170 = !DILocation(line: 5154, column: 16, scope: !5154)
!5171 = !DILocation(line: 5154, column: 34, scope: !5154)
!5172 = !DILocation(line: 5155, column: 16, scope: !5154)
!5173 = !DILocation(line: 5155, column: 23, scope: !5154)
!5174 = !DILocation(line: 5156, column: 16, scope: !5154)
!5175 = !DILocation(line: 5156, column: 21, scope: !5154)
!5176 = !DILocation(line: 5157, column: 16, scope: !5154)
!5177 = !DILocation(line: 5157, column: 25, scope: !5154)
!5178 = !DILocation(line: 5158, column: 31, scope: !5154)
!5179 = !DILocation(line: 5162, column: 18, scope: !5154)
!5180 = !DILocation(line: 5163, column: 3, scope: !5154)
!5181 = !DILocation(line: 5164, column: 17, scope: !5154)
!5182 = !DILocation(line: 5164, column: 35, scope: !5154)
!5183 = !DILocation(line: 5165, column: 17, scope: !5154)
!5184 = !DILocation(line: 5165, column: 22, scope: !5154)
!5185 = !DILocation(line: 5166, column: 17, scope: !5154)
!5186 = !DILocation(line: 5166, column: 24, scope: !5154)
!5187 = !DILocation(line: 5167, column: 17, scope: !5154)
!5188 = !DILocation(line: 5167, column: 22, scope: !5154)
!5189 = !DILocation(line: 5168, column: 17, scope: !5154)
!5190 = !DILocation(line: 5168, column: 26, scope: !5154)
!5191 = !DILocation(line: 5169, column: 32, scope: !5154)
!5192 = !DILocation(line: 5174, column: 7, scope: !5154)
!5193 = !DILocation(line: 5174, column: 12, scope: !5154)
!5194 = !DILocation(line: 5175, column: 7, scope: !5154)
!5195 = !DILocation(line: 5175, column: 11, scope: !5154)
!5196 = !DILocation(line: 5176, column: 7, scope: !5154)
!5197 = !DILocation(line: 5176, column: 14, scope: !5154)
!5198 = !DILocation(line: 5177, column: 7, scope: !5154)
!5199 = !DILocation(line: 5177, column: 12, scope: !5154)
!5200 = !DILocation(line: 5178, column: 7, scope: !5154)
!5201 = !DILocation(line: 5178, column: 11, scope: !5154)
!5202 = !DILocation(line: 5179, column: 7, scope: !5154)
!5203 = !DILocation(line: 5179, column: 14, scope: !5154)
!5204 = !DILocation(line: 5184, column: 3, scope: !5154)
!5205 = !DILocation(line: 5188, column: 18, scope: !5154)
!5206 = !DILocation(line: 5189, column: 3, scope: !5154)
!5207 = !DILocation(line: 5190, column: 17, scope: !5154)
!5208 = !DILocation(line: 5190, column: 35, scope: !5154)
!5209 = !DILocation(line: 5191, column: 17, scope: !5154)
!5210 = !DILocation(line: 5191, column: 24, scope: !5154)
!5211 = !DILocation(line: 5192, column: 17, scope: !5154)
!5212 = !DILocation(line: 5192, column: 22, scope: !5154)
!5213 = !DILocation(line: 5193, column: 17, scope: !5154)
!5214 = !DILocation(line: 5193, column: 26, scope: !5154)
!5215 = !DILocation(line: 5194, column: 17, scope: !5154)
!5216 = !DILocation(line: 5194, column: 22, scope: !5154)
!5217 = !DILocation(line: 5195, column: 32, scope: !5154)
!5218 = !DILocation(line: 5201, column: 12, scope: !5154)
!5219 = !DILocation(line: 5202, column: 11, scope: !5154)
!5220 = !DILocation(line: 5203, column: 14, scope: !5154)
!5221 = !DILocation(line: 5204, column: 12, scope: !5154)
!5222 = !DILocation(line: 5205, column: 11, scope: !5154)
!5223 = !DILocation(line: 5206, column: 14, scope: !5154)
!5224 = !DILocation(line: 5207, column: 23, scope: !5154)
!5225 = !DILocation(line: 5207, column: 3, scope: !5154)
!5226 = !DILocation(line: 5211, column: 17, scope: !5154)
!5227 = !DILocation(line: 5212, column: 3, scope: !5154)
!5228 = !DILocation(line: 5213, column: 16, scope: !5154)
!5229 = !DILocation(line: 5213, column: 34, scope: !5154)
!5230 = !DILocation(line: 5214, column: 16, scope: !5154)
!5231 = !DILocation(line: 5214, column: 23, scope: !5154)
!5232 = !DILocation(line: 5215, column: 16, scope: !5154)
!5233 = !DILocation(line: 5215, column: 21, scope: !5154)
!5234 = !DILocation(line: 5216, column: 16, scope: !5154)
!5235 = !DILocation(line: 5216, column: 25, scope: !5154)
!5236 = !DILocation(line: 5217, column: 31, scope: !5154)
!5237 = !DILocation(line: 5221, column: 18, scope: !5154)
!5238 = !DILocation(line: 5222, column: 3, scope: !5154)
!5239 = !DILocation(line: 5223, column: 17, scope: !5154)
!5240 = !DILocation(line: 5223, column: 35, scope: !5154)
!5241 = !DILocation(line: 5224, column: 17, scope: !5154)
!5242 = !DILocation(line: 5224, column: 24, scope: !5154)
!5243 = !DILocation(line: 5225, column: 17, scope: !5154)
!5244 = !DILocation(line: 5225, column: 22, scope: !5154)
!5245 = !DILocation(line: 5226, column: 17, scope: !5154)
!5246 = !DILocation(line: 5226, column: 26, scope: !5154)
!5247 = !DILocation(line: 5227, column: 32, scope: !5154)
!5248 = !DILocation(line: 5230, column: 12, scope: !5154)
!5249 = !DILocation(line: 5231, column: 11, scope: !5154)
!5250 = !DILocation(line: 5233, column: 12, scope: !5154)
!5251 = !DILocation(line: 5234, column: 11, scope: !5154)
!5252 = !DILocation(line: 5236, column: 23, scope: !5154)
!5253 = !DILocation(line: 5236, column: 3, scope: !5154)
!5254 = !DILocation(line: 5240, column: 12, scope: !5154)
!5255 = !DILocation(line: 5241, column: 11, scope: !5154)
!5256 = !DILocation(line: 5243, column: 12, scope: !5154)
!5257 = !DILocation(line: 5244, column: 11, scope: !5154)
!5258 = !DILocation(line: 5246, column: 23, scope: !5154)
!5259 = !DILocation(line: 5246, column: 3, scope: !5154)
!5260 = !DILocation(line: 5251, column: 12, scope: !5154)
!5261 = !DILocation(line: 5252, column: 11, scope: !5154)
!5262 = !DILocation(line: 5254, column: 12, scope: !5154)
!5263 = !DILocation(line: 5255, column: 11, scope: !5154)
!5264 = !DILocation(line: 5257, column: 23, scope: !5154)
!5265 = !DILocation(line: 5257, column: 3, scope: !5154)
!5266 = !DILocation(line: 5261, column: 12, scope: !5154)
!5267 = !DILocation(line: 5262, column: 11, scope: !5154)
!5268 = !DILocation(line: 5263, column: 14, scope: !5154)
!5269 = !DILocation(line: 5264, column: 12, scope: !5154)
!5270 = !DILocation(line: 5265, column: 11, scope: !5154)
!5271 = !DILocation(line: 5267, column: 23, scope: !5154)
!5272 = !DILocation(line: 5267, column: 3, scope: !5154)
!5273 = !DILocation(line: 5268, column: 12, scope: !5154)
!5274 = !DILocation(line: 5269, column: 11, scope: !5154)
!5275 = !DILocation(line: 5270, column: 14, scope: !5154)
!5276 = !DILocation(line: 5271, column: 23, scope: !5154)
!5277 = !DILocation(line: 5271, column: 3, scope: !5154)
!5278 = !DILocation(line: 5275, column: 18, scope: !5154)
!5279 = !DILocation(line: 5276, column: 3, scope: !5154)
!5280 = !DILocation(line: 5277, column: 17, scope: !5154)
!5281 = !DILocation(line: 5277, column: 35, scope: !5154)
!5282 = !DILocation(line: 5278, column: 17, scope: !5154)
!5283 = !DILocation(line: 5278, column: 24, scope: !5154)
!5284 = !DILocation(line: 5279, column: 17, scope: !5154)
!5285 = !DILocation(line: 5279, column: 22, scope: !5154)
!5286 = !DILocation(line: 5280, column: 17, scope: !5154)
!5287 = !DILocation(line: 5280, column: 26, scope: !5154)
!5288 = !DILocation(line: 5281, column: 32, scope: !5154)
!5289 = !DILocation(line: 5284, column: 12, scope: !5154)
!5290 = !DILocation(line: 5285, column: 11, scope: !5154)
!5291 = !DILocation(line: 5287, column: 12, scope: !5154)
!5292 = !DILocation(line: 5288, column: 11, scope: !5154)
!5293 = !DILocation(line: 5290, column: 23, scope: !5154)
!5294 = !DILocation(line: 5290, column: 3, scope: !5154)
!5295 = !DILocation(line: 5294, column: 12, scope: !5154)
!5296 = !DILocation(line: 5295, column: 11, scope: !5154)
!5297 = !DILocation(line: 5296, column: 14, scope: !5154)
!5298 = !DILocation(line: 5297, column: 12, scope: !5154)
!5299 = !DILocation(line: 5298, column: 11, scope: !5154)
!5300 = !DILocation(line: 5299, column: 14, scope: !5154)
!5301 = !DILocation(line: 5300, column: 23, scope: !5154)
!5302 = !DILocation(line: 5300, column: 3, scope: !5154)
!5303 = !DILocation(line: 5304, column: 24, scope: !5154)
!5304 = !DILocation(line: 5305, column: 3, scope: !5154)
!5305 = !DILocation(line: 5306, column: 23, scope: !5154)
!5306 = !DILocation(line: 5306, column: 41, scope: !5154)
!5307 = !DILocation(line: 5307, column: 23, scope: !5154)
!5308 = !DILocation(line: 5307, column: 30, scope: !5154)
!5309 = !DILocation(line: 5308, column: 23, scope: !5154)
!5310 = !DILocation(line: 5308, column: 28, scope: !5154)
!5311 = !DILocation(line: 5309, column: 23, scope: !5154)
!5312 = !DILocation(line: 5309, column: 32, scope: !5154)
!5313 = !DILocation(line: 5310, column: 38, scope: !5154)
!5314 = !DILocation(line: 5314, column: 17, scope: !5154)
!5315 = !DILocation(line: 5315, column: 3, scope: !5154)
!5316 = !DILocation(line: 5316, column: 16, scope: !5154)
!5317 = !DILocation(line: 5316, column: 34, scope: !5154)
!5318 = !DILocation(line: 5317, column: 16, scope: !5154)
!5319 = !DILocation(line: 5317, column: 21, scope: !5154)
!5320 = !DILocation(line: 5318, column: 16, scope: !5154)
!5321 = !DILocation(line: 5318, column: 25, scope: !5154)
!5322 = !DILocation(line: 5319, column: 16, scope: !5154)
!5323 = !DILocation(line: 5319, column: 23, scope: !5154)
!5324 = !DILocation(line: 5320, column: 16, scope: !5154)
!5325 = !DILocation(line: 5320, column: 21, scope: !5154)
!5326 = !DILocation(line: 5321, column: 31, scope: !5154)
!5327 = !DILocation(line: 5325, column: 12, scope: !5154)
!5328 = !DILocation(line: 5326, column: 11, scope: !5154)
!5329 = !DILocation(line: 5327, column: 14, scope: !5154)
!5330 = !DILocation(line: 5328, column: 12, scope: !5154)
!5331 = !DILocation(line: 5329, column: 11, scope: !5154)
!5332 = !DILocation(line: 5330, column: 14, scope: !5154)
!5333 = !DILocation(line: 5331, column: 23, scope: !5154)
!5334 = !DILocation(line: 5331, column: 3, scope: !5154)
!5335 = !DILocation(line: 5332, column: 1, scope: !5154)
!5336 = distinct !DISubprogram(name: "new_var_info", scope: !3, file: !3, line: 354, type: !5337, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5339)
!5337 = !DISubroutineType(types: !5338)
!5338 = !{!711, !730, !667}
!5339 = !{!5340, !5341, !5342, !5343}
!5340 = !DILocalVariable(name: "t", arg: 1, scope: !5336, file: !3, line: 354, type: !730)
!5341 = !DILocalVariable(name: "name", arg: 2, scope: !5336, file: !3, line: 354, type: !667)
!5342 = !DILocalVariable(name: "index", scope: !5336, file: !3, line: 356, type: !6)
!5343 = !DILocalVariable(name: "ret", scope: !5336, file: !3, line: 357, type: !711)
!5344 = !DILocation(line: 0, scope: !5336)
!5345 = !DILocation(line: 356, column: 20, scope: !5336)
!5346 = !DILocation(line: 357, column: 43, scope: !5336)
!5347 = !DILocation(line: 357, column: 31, scope: !5336)
!5348 = !DILocation(line: 357, column: 19, scope: !5336)
!5349 = !DILocation(line: 359, column: 8, scope: !5336)
!5350 = !DILocation(line: 359, column: 11, scope: !5336)
!5351 = !DILocation(line: 360, column: 8, scope: !5336)
!5352 = !DILocation(line: 360, column: 13, scope: !5336)
!5353 = !DILocation(line: 361, column: 8, scope: !5336)
!5354 = !DILocation(line: 361, column: 13, scope: !5336)
!5355 = !DILocation(line: 363, column: 31, scope: !5336)
!5356 = !DILocation(line: 363, column: 8, scope: !5336)
!5357 = !DILocation(line: 363, column: 26, scope: !5336)
!5358 = !DILocation(line: 366, column: 20, scope: !5336)
!5359 = !DILocation(line: 370, column: 22, scope: !5336)
!5360 = !DILocation(line: 371, column: 9, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 371, column: 7)
!5362 = !DILocation(line: 371, column: 12, scope: !5361)
!5363 = !DILocation(line: 371, column: 7, scope: !5336)
!5364 = !DILocation(line: 372, column: 26, scope: !5361)
!5365 = !DILocation(line: 372, column: 24, scope: !5361)
!5366 = !DILocation(line: 372, column: 5, scope: !5361)
!5367 = !DILocation(line: 373, column: 19, scope: !5336)
!5368 = !DILocation(line: 373, column: 8, scope: !5336)
!5369 = !DILocation(line: 373, column: 17, scope: !5336)
!5370 = !DILocation(line: 374, column: 22, scope: !5336)
!5371 = !DILocation(line: 374, column: 8, scope: !5336)
!5372 = !DILocation(line: 374, column: 20, scope: !5336)
!5373 = !DILocation(line: 375, column: 8, scope: !5336)
!5374 = !DILocation(line: 375, column: 13, scope: !5336)
!5375 = !DILocation(line: 377, column: 3, scope: !5336)
!5376 = !DILocation(line: 379, column: 3, scope: !5336)
!5377 = distinct !DISubprogram(name: "VEC_constraint_t_heap_safe_push", scope: !3, file: !3, line: 190, type: !5378, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5380)
!5378 = !DISubroutineType(types: !5379)
!5379 = !{!3989, !2148, !670}
!5380 = !{!5381, !5382}
!5381 = !DILocalVariable(name: "vec_", arg: 1, scope: !5377, file: !3, line: 190, type: !2148)
!5382 = !DILocalVariable(name: "obj_", arg: 2, scope: !5377, file: !3, line: 190, type: !670)
!5383 = !DILocation(line: 0, scope: !5377)
!5384 = !DILocation(line: 190, column: 1, scope: !5377)
!5385 = distinct !DISubprogram(name: "new_constraint", scope: !3, file: !3, line: 546, type: !5386, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5389)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{!670, !5388, !5388}
!5388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !675)
!5389 = !{!5390, !5391, !5392}
!5390 = !DILocalVariable(name: "lhs", arg: 1, scope: !5385, file: !3, line: 546, type: !5388)
!5391 = !DILocalVariable(name: "rhs", arg: 2, scope: !5385, file: !3, line: 547, type: !5388)
!5392 = !DILocalVariable(name: "ret", scope: !5385, file: !3, line: 549, type: !670)
!5393 = !DILocation(line: 549, column: 49, scope: !5385)
!5394 = !DILocation(line: 549, column: 37, scope: !5385)
!5395 = !DILocation(line: 549, column: 22, scope: !5385)
!5396 = !DILocation(line: 0, scope: !5385)
!5397 = !DILocation(line: 550, column: 14, scope: !5385)
!5398 = !DILocation(line: 551, column: 8, scope: !5385)
!5399 = !DILocation(line: 551, column: 14, scope: !5385)
!5400 = !DILocation(line: 552, column: 3, scope: !5385)
!5401 = distinct !DISubprogram(name: "process_constraint", scope: !3, file: !3, line: 2744, type: !2790, scopeLine: 2745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5402)
!5402 = !{!5403, !5404, !5405, !5406, !5409}
!5403 = !DILocalVariable(name: "t", arg: 1, scope: !5401, file: !3, line: 2744, type: !670)
!5404 = !DILocalVariable(name: "rhs", scope: !5401, file: !3, line: 2746, type: !675)
!5405 = !DILocalVariable(name: "lhs", scope: !5401, file: !3, line: 2747, type: !675)
!5406 = !DILocalVariable(name: "tmplhs", scope: !5407, file: !3, line: 2766, type: !675)
!5407 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 2764, column: 5)
!5408 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 2763, column: 7)
!5409 = !DILocalVariable(name: "tmplhs", scope: !5410, file: !3, line: 2774, type: !675)
!5410 = distinct !DILexicalBlock(scope: !5411, file: !3, line: 2772, column: 5)
!5411 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 2771, column: 12)
!5412 = !DILocation(line: 0, scope: !5401)
!5413 = !DILocation(line: 2746, column: 3, scope: !5401)
!5414 = !DILocation(line: 2746, column: 35, scope: !5401)
!5415 = !DILocation(line: 2747, column: 3, scope: !5401)
!5416 = !DILocation(line: 2747, column: 35, scope: !5401)
!5417 = !DILocation(line: 2749, column: 3, scope: !5401)
!5418 = !DILocation(line: 2750, column: 3, scope: !5401)
!5419 = !DILocation(line: 2755, column: 11, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 2755, column: 7)
!5421 = !DILocation(line: 2755, column: 16, scope: !5420)
!5422 = !DILocation(line: 2756, column: 7, scope: !5420)
!5423 = !DILocation(line: 2756, column: 18, scope: !5420)
!5424 = !DILocation(line: 2755, column: 7, scope: !5401)
!5425 = !DILocation(line: 2757, column: 14, scope: !5420)
!5426 = !DILocation(line: 2757, column: 5, scope: !5420)
!5427 = !DILocation(line: 2760, column: 3, scope: !5401)
!5428 = !DILocation(line: 2763, column: 11, scope: !5408)
!5429 = !DILocation(line: 2763, column: 16, scope: !5408)
!5430 = !DILocation(line: 2763, column: 25, scope: !5408)
!5431 = !DILocation(line: 2763, column: 37, scope: !5408)
!5432 = !DILocation(line: 2763, column: 46, scope: !5408)
!5433 = !DILocation(line: 2763, column: 57, scope: !5408)
!5434 = !DILocation(line: 2763, column: 7, scope: !5401)
!5435 = !DILocation(line: 2766, column: 7, scope: !5407)
!5436 = !DILocation(line: 2767, column: 16, scope: !5407)
!5437 = !DILocation(line: 2768, column: 27, scope: !5407)
!5438 = !DILocation(line: 2768, column: 7, scope: !5407)
!5439 = !DILocation(line: 2769, column: 27, scope: !5407)
!5440 = !DILocation(line: 2769, column: 7, scope: !5407)
!5441 = !DILocation(line: 2770, column: 5, scope: !5408)
!5442 = !DILocation(line: 2770, column: 5, scope: !5407)
!5443 = !DILocation(line: 2771, column: 21, scope: !5411)
!5444 = !DILocation(line: 2771, column: 34, scope: !5411)
!5445 = !DILocation(line: 2771, column: 46, scope: !5411)
!5446 = !DILocation(line: 2771, column: 12, scope: !5408)
!5447 = !DILocation(line: 2774, column: 7, scope: !5410)
!5448 = !DILocation(line: 2775, column: 16, scope: !5410)
!5449 = !DILocation(line: 2776, column: 27, scope: !5410)
!5450 = !DILocation(line: 2776, column: 7, scope: !5410)
!5451 = !DILocation(line: 2777, column: 27, scope: !5410)
!5452 = !DILocation(line: 2777, column: 7, scope: !5410)
!5453 = !DILocation(line: 2778, column: 5, scope: !5411)
!5454 = !DILocation(line: 2778, column: 5, scope: !5410)
!5455 = !DILocation(line: 2781, column: 7, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5411, file: !3, line: 2780, column: 5)
!5457 = !DILocation(line: 2782, column: 7, scope: !5456)
!5458 = !DILocation(line: 2784, column: 1, scope: !5401)
!5459 = distinct !DISubprogram(name: "VEC_varinfo_t_heap_safe_push", scope: !3, file: !3, line: 275, type: !5460, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5463)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{!5063, !5462, !711}
!5462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!5463 = !{!5464, !5465}
!5464 = !DILocalVariable(name: "vec_", arg: 1, scope: !5459, file: !3, line: 275, type: !5462)
!5465 = !DILocalVariable(name: "obj_", arg: 2, scope: !5459, file: !3, line: 275, type: !711)
!5466 = !DILocation(line: 0, scope: !5459)
!5467 = !DILocation(line: 275, column: 1, scope: !5459)
!5468 = distinct !DISubprogram(name: "VEC_varinfo_t_heap_reserve", scope: !3, file: !3, line: 275, type: !5469, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5471)
!5469 = !DISubroutineType(types: !5470)
!5470 = !{!662, !5462, !662}
!5471 = !{!5472, !5473, !5474}
!5472 = !DILocalVariable(name: "vec_", arg: 1, scope: !5468, file: !3, line: 275, type: !5462)
!5473 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5468, file: !3, line: 275, type: !662)
!5474 = !DILocalVariable(name: "extend", scope: !5468, file: !3, line: 275, type: !662)
!5475 = !DILocation(line: 0, scope: !5468)
!5476 = !DILocation(line: 275, column: 1, scope: !5468)
!5477 = !DILocation(line: 275, column: 1, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 275, column: 1)
!5479 = distinct !DISubprogram(name: "VEC_varinfo_t_base_quick_push", scope: !3, file: !3, line: 273, type: !5480, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5483)
!5480 = !DISubroutineType(types: !5481)
!5481 = !{!5063, !5482, !711}
!5482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!5483 = !{!5484, !5485, !5486}
!5484 = !DILocalVariable(name: "vec_", arg: 1, scope: !5479, file: !3, line: 273, type: !5482)
!5485 = !DILocalVariable(name: "obj_", arg: 2, scope: !5479, file: !3, line: 273, type: !711)
!5486 = !DILocalVariable(name: "slot_", scope: !5479, file: !3, line: 273, type: !5063)
!5487 = !DILocation(line: 0, scope: !5479)
!5488 = !DILocation(line: 273, column: 1, scope: !5479)
!5489 = distinct !DISubprogram(name: "VEC_varinfo_t_base_space", scope: !3, file: !3, line: 273, type: !5490, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5492)
!5490 = !DISubroutineType(types: !5491)
!5491 = !{!662, !5482, !662}
!5492 = !{!5493, !5494}
!5493 = !DILocalVariable(name: "vec_", arg: 1, scope: !5489, file: !3, line: 273, type: !5482)
!5494 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5489, file: !3, line: 273, type: !662)
!5495 = !DILocation(line: 0, scope: !5489)
!5496 = !DILocation(line: 273, column: 1, scope: !5489)
!5497 = distinct !DISubprogram(name: "VEC_constraint_t_heap_reserve", scope: !3, file: !3, line: 190, type: !5498, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5500)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{!662, !2148, !662}
!5500 = !{!5501, !5502, !5503}
!5501 = !DILocalVariable(name: "vec_", arg: 1, scope: !5497, file: !3, line: 190, type: !2148)
!5502 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5497, file: !3, line: 190, type: !662)
!5503 = !DILocalVariable(name: "extend", scope: !5497, file: !3, line: 190, type: !662)
!5504 = !DILocation(line: 0, scope: !5497)
!5505 = !DILocation(line: 190, column: 1, scope: !5497)
!5506 = !DILocation(line: 190, column: 1, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 190, column: 1)
!5508 = distinct !DISubprogram(name: "VEC_constraint_t_base_quick_push", scope: !3, file: !3, line: 189, type: !5509, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5512)
!5509 = !DISubroutineType(types: !5510)
!5510 = !{!3989, !5511, !670}
!5511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!5512 = !{!5513, !5514, !5515}
!5513 = !DILocalVariable(name: "vec_", arg: 1, scope: !5508, file: !3, line: 189, type: !5511)
!5514 = !DILocalVariable(name: "obj_", arg: 2, scope: !5508, file: !3, line: 189, type: !670)
!5515 = !DILocalVariable(name: "slot_", scope: !5508, file: !3, line: 189, type: !3989)
!5516 = !DILocation(line: 0, scope: !5508)
!5517 = !DILocation(line: 189, column: 1, scope: !5508)
!5518 = distinct !DISubprogram(name: "VEC_constraint_t_base_space", scope: !3, file: !3, line: 189, type: !5519, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5521)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{!662, !5511, !662}
!5521 = !{!5522, !5523}
!5522 = !DILocalVariable(name: "vec_", arg: 1, scope: !5518, file: !3, line: 189, type: !5511)
!5523 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5518, file: !3, line: 189, type: !662)
!5524 = !DILocation(line: 0, scope: !5518)
!5525 = !DILocation(line: 189, column: 1, scope: !5518)
!5526 = distinct !DISubprogram(name: "new_scalar_tmp_constraint_exp", scope: !3, file: !3, line: 2671, type: !5527, scopeLine: 2672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5529)
!5527 = !DISubroutineType(types: !5528)
!5528 = !{!675, !667}
!5529 = !{!5530, !5531, !5532}
!5530 = !DILocalVariable(name: "name", arg: 1, scope: !5526, file: !3, line: 2671, type: !667)
!5531 = !DILocalVariable(name: "tmp", scope: !5526, file: !3, line: 2673, type: !675)
!5532 = !DILocalVariable(name: "vi", scope: !5526, file: !3, line: 2674, type: !711)
!5533 = !DILocation(line: 0, scope: !5526)
!5534 = !DILocation(line: 2676, column: 8, scope: !5526)
!5535 = !DILocation(line: 2677, column: 7, scope: !5526)
!5536 = !DILocation(line: 2677, column: 14, scope: !5526)
!5537 = !DILocation(line: 2678, column: 7, scope: !5526)
!5538 = !DILocation(line: 2678, column: 12, scope: !5526)
!5539 = !DILocation(line: 2679, column: 7, scope: !5526)
!5540 = !DILocation(line: 2679, column: 16, scope: !5526)
!5541 = !DILocation(line: 2680, column: 7, scope: !5526)
!5542 = !DILocation(line: 2680, column: 19, scope: !5526)
!5543 = !DILocation(line: 2682, column: 17, scope: !5526)
!5544 = !DILocation(line: 2682, column: 7, scope: !5526)
!5545 = !DILocation(line: 2682, column: 11, scope: !5526)
!5546 = !DILocation(line: 2683, column: 7, scope: !5526)
!5547 = !DILocation(line: 2683, column: 12, scope: !5526)
!5548 = !DILocation(line: 2684, column: 7, scope: !5526)
!5549 = !DILocation(line: 2684, column: 14, scope: !5526)
!5550 = !DILocation(line: 2687, column: 1, scope: !5526)
!5551 = distinct !DISubprogram(name: "heapvar_map_eq", scope: !3, file: !3, line: 300, type: !1528, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5552)
!5552 = !{!5553, !5554, !5555, !5556}
!5553 = !DILocalVariable(name: "p1", arg: 1, scope: !5551, file: !3, line: 300, type: !1355)
!5554 = !DILocalVariable(name: "p2", arg: 2, scope: !5551, file: !3, line: 300, type: !1355)
!5555 = !DILocalVariable(name: "h1", scope: !5551, file: !3, line: 302, type: !2060)
!5556 = !DILocalVariable(name: "h2", scope: !5551, file: !3, line: 303, type: !2060)
!5557 = !DILocation(line: 0, scope: !5551)
!5558 = !DILocation(line: 304, column: 24, scope: !5551)
!5559 = !DILocation(line: 304, column: 45, scope: !5551)
!5560 = !DILocation(line: 304, column: 29, scope: !5551)
!5561 = !DILocation(line: 305, column: 4, scope: !5551)
!5562 = !DILocation(line: 305, column: 11, scope: !5551)
!5563 = !DILocation(line: 305, column: 25, scope: !5551)
!5564 = !DILocation(line: 305, column: 18, scope: !5551)
!5565 = !DILocation(line: 304, column: 3, scope: !5551)
!5566 = distinct !DISubprogram(name: "could_have_pointers", scope: !3, file: !3, line: 2804, type: !5567, scopeLine: 2805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5569)
!5567 = !DISubroutineType(types: !5568)
!5568 = !{!661, !730}
!5569 = !{!5570}
!5570 = !DILocalVariable(name: "t", arg: 1, scope: !5566, file: !3, line: 2804, type: !730)
!5571 = !DILocation(line: 0, scope: !5566)
!5572 = !DILocation(line: 2806, column: 36, scope: !5566)
!5573 = !DILocation(line: 2806, column: 10, scope: !5566)
!5574 = !DILocation(line: 2806, column: 3, scope: !5566)
!5575 = distinct !DISubprogram(name: "heapvar_lookup", scope: !3, file: !3, line: 318, type: !5576, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5578)
!5576 = !DISubroutineType(types: !5577)
!5577 = !{!730, !730, !684}
!5578 = !{!5579, !5580, !5581, !5582}
!5579 = !DILocalVariable(name: "from", arg: 1, scope: !5575, file: !3, line: 318, type: !730)
!5580 = !DILocalVariable(name: "offset", arg: 2, scope: !5575, file: !3, line: 318, type: !684)
!5581 = !DILocalVariable(name: "h", scope: !5575, file: !3, line: 320, type: !2074)
!5582 = !DILocalVariable(name: "in", scope: !5575, file: !3, line: 320, type: !2062)
!5583 = !DILocation(line: 0, scope: !5575)
!5584 = !DILocation(line: 320, column: 3, scope: !5575)
!5585 = !DILocation(line: 321, column: 15, scope: !5575)
!5586 = !DILocation(line: 321, column: 20, scope: !5575)
!5587 = !DILocation(line: 322, column: 6, scope: !5575)
!5588 = !DILocation(line: 322, column: 13, scope: !5575)
!5589 = !DILocation(line: 323, column: 51, scope: !5575)
!5590 = !DILocation(line: 324, column: 9, scope: !5575)
!5591 = !DILocation(line: 323, column: 30, scope: !5575)
!5592 = !DILocation(line: 325, column: 7, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 325, column: 7)
!5594 = !DILocation(line: 325, column: 7, scope: !5575)
!5595 = !DILocation(line: 326, column: 19, scope: !5593)
!5596 = !DILocation(line: 326, column: 5, scope: !5593)
!5597 = !DILocation(line: 328, column: 1, scope: !5575)
!5598 = distinct !DISubprogram(name: "heapvar_insert", scope: !3, file: !3, line: 334, type: !5599, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5601)
!5599 = !DISubroutineType(types: !5600)
!5600 = !{null, !730, !684, !730}
!5601 = !{!5602, !5603, !5604, !5605, !5606}
!5602 = !DILocalVariable(name: "from", arg: 1, scope: !5598, file: !3, line: 334, type: !730)
!5603 = !DILocalVariable(name: "offset", arg: 2, scope: !5598, file: !3, line: 334, type: !684)
!5604 = !DILocalVariable(name: "to", arg: 3, scope: !5598, file: !3, line: 334, type: !730)
!5605 = !DILocalVariable(name: "h", scope: !5598, file: !3, line: 336, type: !2074)
!5606 = !DILocalVariable(name: "loc", scope: !5598, file: !3, line: 337, type: !1536)
!5607 = !DILocation(line: 0, scope: !5598)
!5608 = !DILocation(line: 339, column: 7, scope: !5598)
!5609 = !DILocation(line: 340, column: 15, scope: !5598)
!5610 = !DILocation(line: 340, column: 20, scope: !5598)
!5611 = !DILocation(line: 341, column: 6, scope: !5598)
!5612 = !DILocation(line: 341, column: 13, scope: !5598)
!5613 = !DILocation(line: 342, column: 17, scope: !5598)
!5614 = !DILocation(line: 342, column: 10, scope: !5598)
!5615 = !DILocation(line: 342, column: 15, scope: !5598)
!5616 = !DILocation(line: 343, column: 10, scope: !5598)
!5617 = !DILocation(line: 343, column: 13, scope: !5598)
!5618 = !DILocation(line: 344, column: 35, scope: !5598)
!5619 = !DILocation(line: 344, column: 9, scope: !5598)
!5620 = !DILocation(line: 345, column: 3, scope: !5598)
!5621 = !DILocation(line: 346, column: 32, scope: !5598)
!5622 = !DILocation(line: 347, column: 1, scope: !5598)
!5623 = distinct !DISubprogram(name: "get_var_ann", scope: !3163, file: !3163, line: 141, type: !5624, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5626)
!5624 = !DISubroutineType(types: !5625)
!5625 = !{!4141, !730}
!5626 = !{!5627, !5628}
!5627 = !DILocalVariable(name: "var", arg: 1, scope: !5623, file: !3163, line: 141, type: !730)
!5628 = !DILocalVariable(name: "p", scope: !5623, file: !3163, line: 143, type: !5629)
!5629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!5630 = !DILocation(line: 0, scope: !5623)
!5631 = !DILocation(line: 143, column: 18, scope: !5623)
!5632 = !DILocation(line: 144, column: 3, scope: !5623)
!5633 = !DILocation(line: 145, column: 10, scope: !5623)
!5634 = !DILocation(line: 145, column: 20, scope: !5623)
!5635 = !DILocation(line: 145, column: 3, scope: !5623)
!5636 = distinct !DISubprogram(name: "gimple_referenced_vars", scope: !3163, file: !3163, line: 40, type: !5637, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5641)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{!1514, !5639}
!5639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5640, size: 64)
!5640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1471)
!5641 = !{!5642}
!5642 = !DILocalVariable(name: "fun", arg: 1, scope: !5636, file: !3163, line: 40, type: !5639)
!5643 = !DILocation(line: 0, scope: !5636)
!5644 = !DILocation(line: 42, column: 13, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5636, file: !3163, line: 42, column: 7)
!5646 = !DILocation(line: 42, column: 8, scope: !5645)
!5647 = !DILocation(line: 42, column: 7, scope: !5636)
!5648 = !DILocation(line: 44, column: 26, scope: !5636)
!5649 = !DILocation(line: 44, column: 3, scope: !5636)
!5650 = !DILocation(line: 45, column: 1, scope: !5636)
!5651 = distinct !DISubprogram(name: "get_vi_for_tree", scope: !3, file: !3, line: 2659, type: !5652, scopeLine: 2660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5654)
!5652 = !DISubroutineType(types: !5653)
!5653 = !{!711, !730}
!5654 = !{!5655, !5656}
!5655 = !DILocalVariable(name: "t", arg: 1, scope: !5651, file: !3, line: 2659, type: !730)
!5656 = !DILocalVariable(name: "slot", scope: !5651, file: !3, line: 2661, type: !1536)
!5657 = !DILocation(line: 0, scope: !5651)
!5658 = !DILocation(line: 2661, column: 39, scope: !5651)
!5659 = !DILocation(line: 2661, column: 52, scope: !5651)
!5660 = !DILocation(line: 2661, column: 17, scope: !5651)
!5661 = !DILocation(line: 2662, column: 12, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 2662, column: 7)
!5663 = !DILocation(line: 2662, column: 7, scope: !5651)
!5664 = !DILocation(line: 2663, column: 54, scope: !5662)
!5665 = !DILocation(line: 2663, column: 25, scope: !5662)
!5666 = !DILocation(line: 2663, column: 12, scope: !5662)
!5667 = !DILocation(line: 2663, column: 5, scope: !5662)
!5668 = !DILocation(line: 2665, column: 22, scope: !5651)
!5669 = !DILocation(line: 2665, column: 3, scope: !5651)
!5670 = !DILocation(line: 2666, column: 1, scope: !5651)
!5671 = distinct !DISubprogram(name: "make_constraint_from", scope: !3, file: !3, line: 3340, type: !5672, scopeLine: 3341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5674)
!5672 = !DISubroutineType(types: !5673)
!5673 = !{null, !711, !662}
!5674 = !{!5675, !5676, !5677, !5678}
!5675 = !DILocalVariable(name: "vi", arg: 1, scope: !5671, file: !3, line: 3340, type: !711)
!5676 = !DILocalVariable(name: "from", arg: 2, scope: !5671, file: !3, line: 3340, type: !662)
!5677 = !DILocalVariable(name: "lhs", scope: !5671, file: !3, line: 3342, type: !675)
!5678 = !DILocalVariable(name: "rhs", scope: !5671, file: !3, line: 3342, type: !675)
!5679 = !DILocation(line: 0, scope: !5671)
!5680 = !DILocation(line: 3342, column: 3, scope: !5671)
!5681 = !DILocation(line: 3344, column: 17, scope: !5671)
!5682 = !DILocation(line: 3344, column: 7, scope: !5671)
!5683 = !DILocation(line: 3344, column: 11, scope: !5671)
!5684 = !DILocation(line: 3345, column: 7, scope: !5671)
!5685 = !DILocation(line: 3345, column: 14, scope: !5671)
!5686 = !DILocation(line: 3346, column: 7, scope: !5671)
!5687 = !DILocation(line: 3346, column: 12, scope: !5671)
!5688 = !DILocation(line: 3348, column: 7, scope: !5671)
!5689 = !DILocation(line: 3348, column: 11, scope: !5671)
!5690 = !DILocation(line: 3349, column: 7, scope: !5671)
!5691 = !DILocation(line: 3349, column: 14, scope: !5671)
!5692 = !DILocation(line: 3350, column: 7, scope: !5671)
!5693 = !DILocation(line: 3350, column: 12, scope: !5671)
!5694 = !DILocation(line: 3351, column: 23, scope: !5671)
!5695 = !DILocation(line: 3351, column: 3, scope: !5671)
!5696 = !DILocation(line: 3352, column: 1, scope: !5671)
!5697 = distinct !DISubprogram(name: "make_constraint_from_restrict", scope: !3, file: !3, line: 3425, type: !5698, scopeLine: 3426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5700)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{null, !711, !667}
!5700 = !{!5701, !5702, !5703}
!5701 = !DILocalVariable(name: "lhs", arg: 1, scope: !5697, file: !3, line: 3425, type: !711)
!5702 = !DILocalVariable(name: "name", arg: 2, scope: !5697, file: !3, line: 3425, type: !667)
!5703 = !DILocalVariable(name: "vi", scope: !5697, file: !3, line: 3427, type: !711)
!5704 = !DILocation(line: 0, scope: !5697)
!5705 = !DILocation(line: 3428, column: 8, scope: !5697)
!5706 = !DILocation(line: 3429, column: 7, scope: !5697)
!5707 = !DILocation(line: 3429, column: 23, scope: !5697)
!5708 = !DILocation(line: 3432, column: 25, scope: !5697)
!5709 = !DILocation(line: 3433, column: 1, scope: !5697)
!5710 = distinct !DISubprogram(name: "type_could_have_pointers", scope: !3, file: !3, line: 2789, type: !5567, scopeLine: 2790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5711)
!5711 = !{!5712}
!5712 = !DILocalVariable(name: "type", arg: 1, scope: !5710, file: !3, line: 2789, type: !730)
!5713 = !DILocation(line: 2795, column: 12, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 2794, column: 7)
!5715 = !DILocation(line: 0, scope: !5710)
!5716 = !DILocation(line: 2791, column: 7, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 2791, column: 7)
!5718 = !DILocation(line: 2791, column: 7, scope: !5710)
!5719 = !DILocation(line: 2794, column: 24, scope: !5714)
!5720 = !DILocation(line: 2794, column: 7, scope: !5710)
!5721 = !DILocation(line: 2795, column: 38, scope: !5714)
!5722 = !DILocation(line: 2797, column: 10, scope: !5710)
!5723 = !DILocation(line: 2797, column: 3, scope: !5710)
!5724 = !DILocation(line: 2798, column: 1, scope: !5710)
!5725 = distinct !DISubprogram(name: "heapvar_map_hash", scope: !3, file: !3, line: 309, type: !5726, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5728)
!5726 = !DISubroutineType(types: !5727)
!5727 = !{!6, !2074}
!5728 = !{!5729}
!5729 = !DILocalVariable(name: "h", arg: 1, scope: !5725, file: !3, line: 309, type: !2074)
!5730 = !DILocation(line: 0, scope: !5725)
!5731 = !DILocation(line: 311, column: 43, scope: !5725)
!5732 = !DILocation(line: 312, column: 12, scope: !5725)
!5733 = !DILocation(line: 312, column: 43, scope: !5725)
!5734 = !DILocation(line: 311, column: 10, scope: !5725)
!5735 = !DILocation(line: 311, column: 3, scope: !5725)
!5736 = distinct !DISubprogram(name: "create_variable_info_for", scope: !3, file: !3, line: 4438, type: !5737, scopeLine: 4439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5739)
!5737 = !DISubroutineType(types: !5738)
!5738 = !{!6, !730, !667}
!5739 = !{!5740, !5741, !5742, !5743, !5744, !5745, !5746, !5750, !5751, !5752, !5756, !5757}
!5740 = !DILocalVariable(name: "decl", arg: 1, scope: !5736, file: !3, line: 4438, type: !730)
!5741 = !DILocalVariable(name: "name", arg: 2, scope: !5736, file: !3, line: 4438, type: !667)
!5742 = !DILocalVariable(name: "vi", scope: !5736, file: !3, line: 4440, type: !711)
!5743 = !DILocalVariable(name: "decl_type", scope: !5736, file: !3, line: 4441, type: !730)
!5744 = !DILocalVariable(name: "declsize", scope: !5736, file: !3, line: 4442, type: !730)
!5745 = !DILocalVariable(name: "fieldstack", scope: !5736, file: !3, line: 4443, type: !2076)
!5746 = !DILocalVariable(name: "fo", scope: !5747, file: !3, line: 4485, type: !5749)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 4484, column: 5)
!5748 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 4479, column: 7)
!5749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!5750 = !DILocalVariable(name: "notokay", scope: !5747, file: !3, line: 4486, type: !661)
!5751 = !DILocalVariable(name: "i", scope: !5747, file: !3, line: 4487, type: !6)
!5752 = !DILocalVariable(name: "newvi", scope: !5753, file: !3, line: 4541, type: !711)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 4540, column: 2)
!5754 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 4537, column: 7)
!5755 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 4537, column: 7)
!5756 = !DILocalVariable(name: "newname", scope: !5753, file: !3, line: 4542, type: !667)
!5757 = !DILocalVariable(name: "tempname", scope: !5753, file: !3, line: 4543, type: !664)
!5758 = !DILocation(line: 0, scope: !5736)
!5759 = !DILocation(line: 4441, column: 20, scope: !5736)
!5760 = !DILocation(line: 4442, column: 19, scope: !5736)
!5761 = !DILocation(line: 4442, column: 35, scope: !5736)
!5762 = !DILocation(line: 4442, column: 54, scope: !5736)
!5763 = !DILocation(line: 4443, column: 3, scope: !5736)
!5764 = !DILocation(line: 4443, column: 26, scope: !5736)
!5765 = !DILocation(line: 4445, column: 7, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 4445, column: 7)
!5767 = !DILocation(line: 4445, column: 35, scope: !5766)
!5768 = !DILocation(line: 4445, column: 38, scope: !5766)
!5769 = !DILocation(line: 4445, column: 7, scope: !5736)
!5770 = !DILocation(line: 4446, column: 5, scope: !5766)
!5771 = !DILocation(line: 4451, column: 8, scope: !5736)
!5772 = !DILocation(line: 4452, column: 7, scope: !5736)
!5773 = !DILocation(line: 4452, column: 14, scope: !5736)
!5774 = !DILocation(line: 4453, column: 27, scope: !5736)
!5775 = !DILocation(line: 4453, column: 7, scope: !5736)
!5776 = !DILocation(line: 4453, column: 25, scope: !5736)
!5777 = !DILocation(line: 4454, column: 8, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 4454, column: 7)
!5779 = !DILocation(line: 4455, column: 7, scope: !5778)
!5780 = !DILocation(line: 4455, column: 11, scope: !5778)
!5781 = !DILocation(line: 4454, column: 7, scope: !5736)
!5782 = !DILocation(line: 4457, column: 31, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 4456, column: 5)
!5784 = !DILocation(line: 4458, column: 11, scope: !5783)
!5785 = !DILocation(line: 4458, column: 20, scope: !5783)
!5786 = !DILocation(line: 4459, column: 11, scope: !5783)
!5787 = !DILocation(line: 4459, column: 16, scope: !5783)
!5788 = !DILocation(line: 4460, column: 5, scope: !5783)
!5789 = !DILocation(line: 4463, column: 22, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 4462, column: 5)
!5791 = !DILocation(line: 4463, column: 11, scope: !5790)
!5792 = !DILocation(line: 4463, column: 20, scope: !5790)
!5793 = !DILocation(line: 4464, column: 11, scope: !5790)
!5794 = !DILocation(line: 4464, column: 16, scope: !5790)
!5795 = !DILocation(line: 4467, column: 27, scope: !5736)
!5796 = !DILocation(line: 4467, column: 3, scope: !5736)
!5797 = !DILocation(line: 4468, column: 11, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 4468, column: 7)
!5799 = !DILocation(line: 4468, column: 7, scope: !5798)
!5800 = !DILocation(line: 4469, column: 7, scope: !5798)
!5801 = !DILocation(line: 4469, column: 12, scope: !5798)
!5802 = !DILocation(line: 4469, column: 35, scope: !5798)
!5803 = !DILocation(line: 4469, column: 31, scope: !5798)
!5804 = !DILocation(line: 4470, column: 14, scope: !5798)
!5805 = !DILocation(line: 4470, column: 10, scope: !5798)
!5806 = !DILocation(line: 4468, column: 7, scope: !5736)
!5807 = !DILocation(line: 4472, column: 11, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 4472, column: 11)
!5809 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 4471, column: 5)
!5810 = !DILocation(line: 4473, column: 4, scope: !5808)
!5811 = !DILocation(line: 4473, column: 7, scope: !5808)
!5812 = !DILocation(line: 4472, column: 11, scope: !5809)
!5813 = !DILocation(line: 4474, column: 2, scope: !5808)
!5814 = !DILocation(line: 4475, column: 7, scope: !5809)
!5815 = !DILocation(line: 4476, column: 5, scope: !5809)
!5816 = !DILocation(line: 4478, column: 19, scope: !5736)
!5817 = !DILocation(line: 4479, column: 7, scope: !5748)
!5818 = !DILocation(line: 4480, column: 7, scope: !5748)
!5819 = !DILocation(line: 4480, column: 15, scope: !5748)
!5820 = !DILocation(line: 4480, column: 11, scope: !5748)
!5821 = !DILocation(line: 4481, column: 7, scope: !5748)
!5822 = !DILocation(line: 4481, column: 10, scope: !5748)
!5823 = !DILocation(line: 4482, column: 7, scope: !5748)
!5824 = !DILocation(line: 4482, column: 10, scope: !5748)
!5825 = !DILocation(line: 4482, column: 46, scope: !5748)
!5826 = !DILocation(line: 4483, column: 7, scope: !5748)
!5827 = !DILocation(line: 4483, column: 10, scope: !5748)
!5828 = !DILocation(line: 4483, column: 49, scope: !5748)
!5829 = !DILocation(line: 4483, column: 46, scope: !5748)
!5830 = !DILocation(line: 4479, column: 7, scope: !5736)
!5831 = !DILocation(line: 4485, column: 7, scope: !5747)
!5832 = !DILocation(line: 0, scope: !5747)
!5833 = !DILocation(line: 4485, column: 19, scope: !5747)
!5834 = !DILocation(line: 4489, column: 12, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 4489, column: 7)
!5836 = !DILocation(line: 0, scope: !5835)
!5837 = !DILocation(line: 4489, column: 31, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4489, column: 7)
!5839 = !DILocation(line: 4489, column: 28, scope: !5838)
!5840 = !DILocation(line: 4489, column: 7, scope: !5835)
!5841 = !DILocation(line: 4491, column: 8, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 4491, column: 8)
!5843 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 4490, column: 2)
!5844 = !DILocation(line: 4491, column: 12, scope: !5842)
!5845 = !DILocation(line: 4492, column: 8, scope: !5842)
!5846 = !DILocation(line: 4492, column: 15, scope: !5842)
!5847 = !DILocation(line: 4492, column: 22, scope: !5842)
!5848 = !DILocation(line: 4491, column: 8, scope: !5843)
!5849 = !DILocation(line: 4489, column: 77, scope: !5838)
!5850 = !DILocation(line: 4489, column: 7, scope: !5838)
!5851 = distinct !{!5851, !5840, !5852}
!5852 = !DILocation(line: 4497, column: 2, scope: !5835)
!5853 = !DILocation(line: 4503, column: 12, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 4503, column: 11)
!5855 = !DILocation(line: 4503, column: 11, scope: !5747)
!5856 = !DILocation(line: 4505, column: 21, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 4504, column: 2)
!5858 = !DILocation(line: 4505, column: 4, scope: !5857)
!5859 = !DILocation(line: 4510, column: 34, scope: !5857)
!5860 = !DILocation(line: 4510, column: 14, scope: !5857)
!5861 = !DILocation(line: 4511, column: 2, scope: !5857)
!5862 = !DILocation(line: 4514, column: 11, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 4514, column: 11)
!5864 = !DILocation(line: 4514, column: 47, scope: !5863)
!5865 = !DILocation(line: 4514, column: 11, scope: !5747)
!5866 = !DILocation(line: 4517, column: 11, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 4517, column: 11)
!5868 = !DILocation(line: 4515, column: 7, scope: !5863)
!5869 = !DILocation(line: 4515, column: 5, scope: !5863)
!5870 = !DILocation(line: 4515, column: 2, scope: !5863)
!5871 = !DILocation(line: 4517, column: 14, scope: !5867)
!5872 = !DILocation(line: 4517, column: 25, scope: !5867)
!5873 = !DILocation(line: 4517, column: 22, scope: !5867)
!5874 = !DILocation(line: 4519, column: 28, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 4518, column: 2)
!5876 = !DILocation(line: 4520, column: 8, scope: !5875)
!5877 = !DILocation(line: 4520, column: 17, scope: !5875)
!5878 = !DILocation(line: 4521, column: 8, scope: !5875)
!5879 = !DILocation(line: 4521, column: 13, scope: !5875)
!5880 = !DILocation(line: 4522, column: 20, scope: !5875)
!5881 = !DILocation(line: 4523, column: 4, scope: !5875)
!5882 = !DILocation(line: 4524, column: 15, scope: !5875)
!5883 = !DILocation(line: 4524, column: 4, scope: !5875)
!5884 = !DILocation(line: 4527, column: 22, scope: !5747)
!5885 = !DILocation(line: 4527, column: 11, scope: !5747)
!5886 = !DILocation(line: 4527, column: 16, scope: !5747)
!5887 = !DILocation(line: 4528, column: 24, scope: !5747)
!5888 = !DILocation(line: 4528, column: 18, scope: !5747)
!5889 = !DILocation(line: 4529, column: 35, scope: !5747)
!5890 = !DILocation(line: 4529, column: 29, scope: !5747)
!5891 = !DILocation(line: 4530, column: 11, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 4530, column: 11)
!5893 = !DILocation(line: 4531, column: 4, scope: !5892)
!5894 = !DILocation(line: 4531, column: 9, scope: !5892)
!5895 = !DILocation(line: 4531, column: 32, scope: !5892)
!5896 = !DILocation(line: 4531, column: 28, scope: !5892)
!5897 = !DILocation(line: 4532, column: 7, scope: !5892)
!5898 = !DILocation(line: 4530, column: 11, scope: !5747)
!5899 = !DILocation(line: 4534, column: 8, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 4534, column: 8)
!5901 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 4533, column: 2)
!5902 = !DILocation(line: 4534, column: 12, scope: !5900)
!5903 = !DILocation(line: 4534, column: 8, scope: !5901)
!5904 = !DILocation(line: 4535, column: 6, scope: !5900)
!5905 = !DILocation(line: 4537, column: 16, scope: !5755)
!5906 = !DILocation(line: 0, scope: !5753)
!5907 = !DILocation(line: 0, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 4546, column: 6)
!5909 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 4545, column: 8)
!5910 = !DILocation(line: 4537, column: 12, scope: !5755)
!5911 = !DILocation(line: 0, scope: !5755)
!5912 = !DILocation(line: 4538, column: 7, scope: !5754)
!5913 = !DILocation(line: 4538, column: 12, scope: !5754)
!5914 = !DILocation(line: 4538, column: 15, scope: !5754)
!5915 = !DILocation(line: 4537, column: 7, scope: !5755)
!5916 = !DILocation(line: 4543, column: 4, scope: !5753)
!5917 = !DILocation(line: 4545, column: 8, scope: !5909)
!5918 = !DILocation(line: 4545, column: 8, scope: !5753)
!5919 = !DILocation(line: 4549, column: 8, scope: !5908)
!5920 = !DILocation(line: 4549, column: 14, scope: !5908)
!5921 = !DILocation(line: 4549, column: 18, scope: !5908)
!5922 = !DILocation(line: 4549, column: 30, scope: !5908)
!5923 = !DILocation(line: 4547, column: 8, scope: !5908)
!5924 = !DILocation(line: 4550, column: 18, scope: !5908)
!5925 = !DILocation(line: 4551, column: 14, scope: !5908)
!5926 = !DILocation(line: 4551, column: 8, scope: !5908)
!5927 = !DILocation(line: 4552, column: 6, scope: !5908)
!5928 = !DILocation(line: 4553, column: 12, scope: !5753)
!5929 = !DILocation(line: 4554, column: 20, scope: !5753)
!5930 = !DILocation(line: 4554, column: 24, scope: !5753)
!5931 = !DILocation(line: 4554, column: 11, scope: !5753)
!5932 = !DILocation(line: 4554, column: 18, scope: !5753)
!5933 = !DILocation(line: 4555, column: 22, scope: !5753)
!5934 = !DILocation(line: 4555, column: 11, scope: !5753)
!5935 = !DILocation(line: 4555, column: 16, scope: !5753)
!5936 = !DILocation(line: 4556, column: 26, scope: !5753)
!5937 = !DILocation(line: 4556, column: 11, scope: !5753)
!5938 = !DILocation(line: 4556, column: 20, scope: !5753)
!5939 = !DILocation(line: 4557, column: 35, scope: !5753)
!5940 = !DILocation(line: 4557, column: 11, scope: !5753)
!5941 = !DILocation(line: 4557, column: 29, scope: !5753)
!5942 = !DILocation(line: 4558, column: 4, scope: !5753)
!5943 = !DILocation(line: 4559, column: 16, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 4559, column: 8)
!5945 = !DILocation(line: 4559, column: 9, scope: !5944)
!5946 = !DILocation(line: 4559, column: 30, scope: !5944)
!5947 = !DILocation(line: 4559, column: 33, scope: !5944)
!5948 = !DILocation(line: 4559, column: 50, scope: !5944)
!5949 = !DILocation(line: 4560, column: 8, scope: !5944)
!5950 = !DILocation(line: 4560, column: 18, scope: !5944)
!5951 = !DILocation(line: 4560, column: 11, scope: !5944)
!5952 = !DILocation(line: 4559, column: 8, scope: !5753)
!5953 = !DILocation(line: 4562, column: 13, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 4562, column: 13)
!5955 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 4561, column: 6)
!5956 = !DILocation(line: 4562, column: 17, scope: !5954)
!5957 = !DILocation(line: 4562, column: 13, scope: !5955)
!5958 = !DILocation(line: 4563, column: 4, scope: !5954)
!5959 = !DILocation(line: 4564, column: 20, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 4564, column: 13)
!5961 = !DILocation(line: 4564, column: 13, scope: !5960)
!5962 = !DILocation(line: 4564, column: 38, scope: !5960)
!5963 = !DILocation(line: 4564, column: 34, scope: !5960)
!5964 = !DILocation(line: 4565, column: 4, scope: !5960)
!5965 = !DILocation(line: 4568, column: 20, scope: !5753)
!5966 = !DILocation(line: 4569, column: 2, scope: !5754)
!5967 = !DILocation(line: 4537, column: 7, scope: !5754)
!5968 = distinct !{!5968, !5915, !5969}
!5969 = !DILocation(line: 4569, column: 2, scope: !5755)
!5970 = !DILocation(line: 4570, column: 5, scope: !5748)
!5971 = !DILocation(line: 4572, column: 21, scope: !5748)
!5972 = !DILocation(line: 4574, column: 3, scope: !5736)
!5973 = !DILocation(line: 4576, column: 14, scope: !5736)
!5974 = !DILocation(line: 4576, column: 3, scope: !5736)
!5975 = !DILocation(line: 4577, column: 1, scope: !5736)
!5976 = distinct !DISubprogram(name: "alias_get_name", scope: !3, file: !3, line: 2624, type: !5977, scopeLine: 2625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5979)
!5977 = !DISubroutineType(types: !5978)
!5978 = !{!667, !730}
!5979 = !{!5980, !5981, !5982, !5983}
!5980 = !DILocalVariable(name: "decl", arg: 1, scope: !5976, file: !3, line: 2624, type: !730)
!5981 = !DILocalVariable(name: "res", scope: !5976, file: !3, line: 2626, type: !667)
!5982 = !DILocalVariable(name: "temp", scope: !5976, file: !3, line: 2627, type: !664)
!5983 = !DILocalVariable(name: "num_printed", scope: !5976, file: !3, line: 2628, type: !662)
!5984 = !DILocation(line: 0, scope: !5976)
!5985 = !DILocation(line: 2626, column: 21, scope: !5976)
!5986 = !DILocation(line: 2627, column: 3, scope: !5976)
!5987 = !DILocation(line: 2630, column: 11, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 2630, column: 7)
!5989 = !DILocation(line: 2630, column: 7, scope: !5976)
!5990 = !DILocation(line: 2634, column: 8, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 2634, column: 7)
!5992 = !DILocation(line: 2634, column: 7, scope: !5976)
!5993 = !DILocation(line: 2637, column: 7, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 2637, column: 7)
!5995 = !DILocation(line: 2637, column: 24, scope: !5994)
!5996 = !DILocation(line: 2637, column: 7, scope: !5976)
!5997 = !DILocation(line: 2640, column: 26, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5994, file: !3, line: 2638, column: 5)
!5999 = !DILocation(line: 2640, column: 10, scope: !5998)
!6000 = !DILocation(line: 2641, column: 10, scope: !5998)
!6001 = !DILocation(line: 2639, column: 21, scope: !5998)
!6002 = !DILocation(line: 2642, column: 5, scope: !5998)
!6003 = !DILocation(line: 2643, column: 12, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5994, file: !3, line: 2643, column: 12)
!6005 = !DILocation(line: 2643, column: 12, scope: !5994)
!6006 = !DILocation(line: 2645, column: 46, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 2644, column: 5)
!6008 = !DILocation(line: 2645, column: 21, scope: !6007)
!6009 = !DILocation(line: 2646, column: 5, scope: !6007)
!6010 = !DILocation(line: 0, scope: !5994)
!6011 = !DILocation(line: 2647, column: 19, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 2647, column: 7)
!6013 = !DILocation(line: 2647, column: 7, scope: !5976)
!6014 = !DILocation(line: 2649, column: 13, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 2648, column: 5)
!6016 = !DILocation(line: 2650, column: 13, scope: !6015)
!6017 = !DILocation(line: 2650, column: 7, scope: !6015)
!6018 = !DILocation(line: 2651, column: 5, scope: !6015)
!6019 = !DILocation(line: 2653, column: 1, scope: !5976)
!6020 = distinct !DISubprogram(name: "var_can_have_subvars", scope: !3, file: !3, line: 4187, type: !3164, scopeLine: 4188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6021)
!6021 = !{!6022}
!6022 = !DILocalVariable(name: "v", arg: 1, scope: !6020, file: !3, line: 4187, type: !3166)
!6023 = !DILocation(line: 0, scope: !6020)
!6024 = !DILocation(line: 4190, column: 7, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 4190, column: 7)
!6026 = !DILocation(line: 4190, column: 7, scope: !6020)
!6027 = !DILocation(line: 4194, column: 8, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 4194, column: 7)
!6029 = !DILocation(line: 4194, column: 7, scope: !6020)
!6030 = !DILocation(line: 4198, column: 7, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 4198, column: 7)
!6032 = !DILocation(line: 4198, column: 33, scope: !6031)
!6033 = !DILocation(line: 4202, column: 1, scope: !6020)
!6034 = distinct !DISubprogram(name: "push_fields_onto_fieldstack", scope: !3, file: !3, line: 4213, type: !6035, scopeLine: 4215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6038)
!6035 = !DISubroutineType(types: !6036)
!6036 = !{!662, !730, !6037, !669}
!6037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!6038 = !{!6039, !6040, !6041, !6042, !6043, !6044, !6049, !6050, !6051, !6054}
!6039 = !DILocalVariable(name: "type", arg: 1, scope: !6034, file: !3, line: 4213, type: !730)
!6040 = !DILocalVariable(name: "fieldstack", arg: 2, scope: !6034, file: !3, line: 4213, type: !6037)
!6041 = !DILocalVariable(name: "offset", arg: 3, scope: !6034, file: !3, line: 4214, type: !669)
!6042 = !DILocalVariable(name: "field", scope: !6034, file: !3, line: 4216, type: !730)
!6043 = !DILocalVariable(name: "count", scope: !6034, file: !3, line: 4217, type: !662)
!6044 = !DILocalVariable(name: "push", scope: !6045, file: !3, line: 4231, type: !661)
!6045 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 4230, column: 7)
!6046 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 4229, column: 9)
!6047 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 4228, column: 3)
!6048 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 4228, column: 3)
!6049 = !DILocalVariable(name: "pushed", scope: !6045, file: !3, line: 4232, type: !662)
!6050 = !DILocalVariable(name: "foff", scope: !6045, file: !3, line: 4233, type: !669)
!6051 = !DILocalVariable(name: "pair", scope: !6052, file: !3, line: 4250, type: !5749)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 4249, column: 4)
!6053 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 4248, column: 6)
!6054 = !DILocalVariable(name: "has_unknown_size", scope: !6052, file: !3, line: 4251, type: !661)
!6055 = !DILocation(line: 0, scope: !6034)
!6056 = !DILocation(line: 4219, column: 7, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 4219, column: 7)
!6058 = !DILocation(line: 4219, column: 24, scope: !6057)
!6059 = !DILocation(line: 4219, column: 7, scope: !6034)
!6060 = !DILocation(line: 4225, column: 7, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 4225, column: 7)
!6062 = !DILocation(line: 4225, column: 46, scope: !6061)
!6063 = !DILocation(line: 4225, column: 44, scope: !6061)
!6064 = !DILocation(line: 4225, column: 7, scope: !6034)
!6065 = !DILocation(line: 4228, column: 16, scope: !6048)
!6066 = !DILocation(line: 4228, column: 8, scope: !6048)
!6067 = !DILocation(line: 0, scope: !6048)
!6068 = !DILocation(line: 4228, column: 3, scope: !6048)
!6069 = !DILocation(line: 4229, column: 9, scope: !6046)
!6070 = !DILocation(line: 4229, column: 27, scope: !6046)
!6071 = !DILocation(line: 4229, column: 9, scope: !6047)
!6072 = !DILocation(line: 0, scope: !6045)
!6073 = !DILocation(line: 4233, column: 23, scope: !6045)
!6074 = !DILocation(line: 4235, column: 7, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 4235, column: 6)
!6076 = !DILocation(line: 4236, column: 6, scope: !6075)
!6077 = !DILocation(line: 4236, column: 9, scope: !6075)
!6078 = !DILocation(line: 4236, column: 39, scope: !6075)
!6079 = !DILocation(line: 4237, column: 6, scope: !6075)
!6080 = !DILocation(line: 4237, column: 39, scope: !6075)
!6081 = !DILocation(line: 4235, column: 6, scope: !6045)
!6082 = !DILocation(line: 4240, column: 45, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 4239, column: 11)
!6084 = !DILocation(line: 4239, column: 22, scope: !6083)
!6085 = !DILocation(line: 4239, column: 20, scope: !6083)
!6086 = !DILocation(line: 4241, column: 4, scope: !6083)
!6087 = !DILocation(line: 4241, column: 8, scope: !6083)
!6088 = !DILocation(line: 4242, column: 8, scope: !6083)
!6089 = !DILocation(line: 4242, column: 12, scope: !6083)
!6090 = !DILocation(line: 4239, column: 11, scope: !6075)
!6091 = !DILocation(line: 4248, column: 6, scope: !6053)
!6092 = !DILocation(line: 4248, column: 6, scope: !6045)
!6093 = !DILocation(line: 0, scope: !6052)
!6094 = !DILocation(line: 4253, column: 11, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 4253, column: 10)
!6096 = !DILocation(line: 4253, column: 10, scope: !6052)
!6097 = !DILocation(line: 4254, column: 15, scope: !6095)
!6098 = !DILocation(line: 4254, column: 8, scope: !6095)
!6099 = !DILocation(line: 4256, column: 11, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 4256, column: 10)
!6101 = !DILocation(line: 4257, column: 3, scope: !6100)
!6102 = !DILocation(line: 4257, column: 7, scope: !6100)
!6103 = !DILocation(line: 4256, column: 10, scope: !6052)
!6104 = !DILocation(line: 4258, column: 8, scope: !6100)
!6105 = !DILocation(line: 4261, column: 10, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 4261, column: 10)
!6107 = !DILocation(line: 4262, column: 3, scope: !6106)
!6108 = !DILocation(line: 4262, column: 13, scope: !6106)
!6109 = !DILocation(line: 4262, column: 7, scope: !6106)
!6110 = !DILocation(line: 4263, column: 3, scope: !6106)
!6111 = !DILocation(line: 4263, column: 7, scope: !6106)
!6112 = !DILocation(line: 4264, column: 3, scope: !6106)
!6113 = !DILocation(line: 4264, column: 13, scope: !6106)
!6114 = !DILocation(line: 4265, column: 3, scope: !6106)
!6115 = !DILocation(line: 4266, column: 12, scope: !6106)
!6116 = !DILocation(line: 4266, column: 42, scope: !6106)
!6117 = !DILocation(line: 4266, column: 19, scope: !6106)
!6118 = !DILocation(line: 4266, column: 57, scope: !6106)
!6119 = !DILocation(line: 4266, column: 47, scope: !6106)
!6120 = !DILocation(line: 4261, column: 10, scope: !6052)
!6121 = !DILocation(line: 4268, column: 10, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 4267, column: 8)
!6123 = !DILocation(line: 4269, column: 17, scope: !6122)
!6124 = !DILocation(line: 4269, column: 9, scope: !6122)
!6125 = !DILocation(line: 4269, column: 14, scope: !6122)
!6126 = !DILocation(line: 4270, column: 8, scope: !6122)
!6127 = !DILocation(line: 4273, column: 10, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 4272, column: 8)
!6129 = !DILocation(line: 4274, column: 25, scope: !6128)
!6130 = !DILocation(line: 4274, column: 9, scope: !6128)
!6131 = !DILocation(line: 4274, column: 16, scope: !6128)
!6132 = !DILocation(line: 4275, column: 9, scope: !6128)
!6133 = !DILocation(line: 4275, column: 26, scope: !6128)
!6134 = !DILocation(line: 4276, column: 8, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 4276, column: 7)
!6136 = !DILocation(line: 4276, column: 7, scope: !6128)
!6137 = !DILocation(line: 4277, column: 18, scope: !6135)
!6138 = !DILocation(line: 4277, column: 11, scope: !6135)
!6139 = !DILocation(line: 4277, column: 16, scope: !6135)
!6140 = !DILocation(line: 4277, column: 5, scope: !6135)
!6141 = !DILocation(line: 4279, column: 11, scope: !6135)
!6142 = !DILocation(line: 4279, column: 16, scope: !6135)
!6143 = !DILocation(line: 4280, column: 29, scope: !6128)
!6144 = !DILocation(line: 4280, column: 27, scope: !6128)
!6145 = !DILocation(line: 4283, column: 8, scope: !6128)
!6146 = !DILocation(line: 4283, column: 11, scope: !6128)
!6147 = !DILocation(line: 4284, column: 8, scope: !6128)
!6148 = !DILocation(line: 4284, column: 11, scope: !6128)
!6149 = !DILocation(line: 0, scope: !6128)
!6150 = !DILocation(line: 4282, column: 5, scope: !6128)
!6151 = !DILocation(line: 4285, column: 8, scope: !6128)
!6152 = !DILocation(line: 4289, column: 10, scope: !6053)
!6153 = !DILocation(line: 4228, column: 51, scope: !6047)
!6154 = !DILocation(line: 4228, column: 3, scope: !6047)
!6155 = distinct !{!6155, !6068, !6156}
!6156 = !DILocation(line: 4290, column: 7, scope: !6048)
!6157 = !DILocation(line: 4293, column: 1, scope: !6034)
!6158 = distinct !DISubprogram(name: "insert_vi_for_tree", scope: !3, file: !3, line: 2600, type: !6159, scopeLine: 2601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6161)
!6159 = !DISubroutineType(types: !6160)
!6160 = !{null, !730, !711}
!6161 = !{!6162, !6163, !6164}
!6162 = !DILocalVariable(name: "t", arg: 1, scope: !6158, file: !3, line: 2600, type: !730)
!6163 = !DILocalVariable(name: "vi", arg: 2, scope: !6158, file: !3, line: 2600, type: !711)
!6164 = !DILocalVariable(name: "slot", scope: !6158, file: !3, line: 2602, type: !1536)
!6165 = !DILocation(line: 0, scope: !6158)
!6166 = !DILocation(line: 2602, column: 37, scope: !6158)
!6167 = !DILocation(line: 2602, column: 50, scope: !6158)
!6168 = !DILocation(line: 2602, column: 17, scope: !6158)
!6169 = !DILocation(line: 2603, column: 3, scope: !6158)
!6170 = !DILocation(line: 2604, column: 3, scope: !6158)
!6171 = !DILocation(line: 2605, column: 9, scope: !6158)
!6172 = !DILocation(line: 2606, column: 1, scope: !6158)
!6173 = distinct !DISubprogram(name: "make_copy_constraint", scope: !3, file: !3, line: 3357, type: !5672, scopeLine: 3358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6174)
!6174 = !{!6175, !6176, !6177, !6178}
!6175 = !DILocalVariable(name: "vi", arg: 1, scope: !6173, file: !3, line: 3357, type: !711)
!6176 = !DILocalVariable(name: "from", arg: 2, scope: !6173, file: !3, line: 3357, type: !662)
!6177 = !DILocalVariable(name: "lhs", scope: !6173, file: !3, line: 3359, type: !675)
!6178 = !DILocalVariable(name: "rhs", scope: !6173, file: !3, line: 3359, type: !675)
!6179 = !DILocation(line: 0, scope: !6173)
!6180 = !DILocation(line: 3359, column: 3, scope: !6173)
!6181 = !DILocation(line: 3361, column: 17, scope: !6173)
!6182 = !DILocation(line: 3361, column: 7, scope: !6173)
!6183 = !DILocation(line: 3361, column: 11, scope: !6173)
!6184 = !DILocation(line: 3362, column: 7, scope: !6173)
!6185 = !DILocation(line: 3362, column: 14, scope: !6173)
!6186 = !DILocation(line: 3363, column: 7, scope: !6173)
!6187 = !DILocation(line: 3363, column: 12, scope: !6173)
!6188 = !DILocation(line: 3365, column: 7, scope: !6173)
!6189 = !DILocation(line: 3365, column: 11, scope: !6173)
!6190 = !DILocation(line: 3366, column: 7, scope: !6173)
!6191 = !DILocation(line: 3366, column: 14, scope: !6173)
!6192 = !DILocation(line: 3367, column: 7, scope: !6173)
!6193 = !DILocation(line: 3367, column: 12, scope: !6173)
!6194 = !DILocation(line: 3368, column: 23, scope: !6173)
!6195 = !DILocation(line: 3368, column: 3, scope: !6173)
!6196 = !DILocation(line: 3369, column: 1, scope: !6173)
!6197 = distinct !DISubprogram(name: "VEC_fieldoff_s_base_length", scope: !3, file: !3, line: 4139, type: !6198, scopeLine: 4139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6202)
!6198 = !DISubroutineType(types: !6199)
!6199 = !{!6, !6200}
!6200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6201, size: 64)
!6201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2081)
!6202 = !{!6203}
!6203 = !DILocalVariable(name: "vec_", arg: 1, scope: !6197, file: !3, line: 4139, type: !6200)
!6204 = !DILocation(line: 0, scope: !6197)
!6205 = !DILocation(line: 4139, column: 1, scope: !6197)
!6206 = distinct !DISubprogram(name: "VEC_fieldoff_s_base_iterate", scope: !3, file: !3, line: 4139, type: !6207, scopeLine: 4139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6211)
!6207 = !DISubroutineType(types: !6208)
!6208 = !{!662, !6209, !6, !6210}
!6209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!6210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5749, size: 64)
!6211 = !{!6212, !6213, !6214}
!6212 = !DILocalVariable(name: "vec_", arg: 1, scope: !6206, file: !3, line: 4139, type: !6209)
!6213 = !DILocalVariable(name: "ix_", arg: 2, scope: !6206, file: !3, line: 4139, type: !6)
!6214 = !DILocalVariable(name: "ptr", arg: 3, scope: !6206, file: !3, line: 4139, type: !6210)
!6215 = !DILocation(line: 0, scope: !6206)
!6216 = !DILocation(line: 4139, column: 1, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6206, file: !3, line: 4139, column: 1)
!6218 = !DILocation(line: 4139, column: 1, scope: !6206)
!6219 = !DILocation(line: 4139, column: 1, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 4139, column: 1)
!6221 = !DILocation(line: 4139, column: 1, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 4139, column: 1)
!6223 = !DILocation(line: 0, scope: !6217)
!6224 = distinct !DISubprogram(name: "sort_fieldstack", scope: !3, file: !3, line: 4167, type: !6225, scopeLine: 4168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6227)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{null, !2076}
!6227 = !{!6228}
!6228 = !DILocalVariable(name: "fieldstack", arg: 1, scope: !6224, file: !3, line: 4167, type: !2076)
!6229 = !DILocation(line: 0, scope: !6224)
!6230 = !DILocation(line: 4170, column: 15, scope: !6224)
!6231 = !DILocation(line: 4171, column: 15, scope: !6224)
!6232 = !DILocation(line: 4170, column: 3, scope: !6224)
!6233 = !DILocation(line: 4180, column: 1, scope: !6224)
!6234 = distinct !DISubprogram(name: "check_for_overlaps", scope: !3, file: !3, line: 4418, type: !6235, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6237)
!6235 = !DISubroutineType(types: !6236)
!6236 = !{!661, !2076}
!6237 = !{!6238, !6239, !6240, !6241}
!6238 = !DILocalVariable(name: "fieldstack", arg: 1, scope: !6234, file: !3, line: 4418, type: !2076)
!6239 = !DILocalVariable(name: "fo", scope: !6234, file: !3, line: 4420, type: !5749)
!6240 = !DILocalVariable(name: "i", scope: !6234, file: !3, line: 4421, type: !6)
!6241 = !DILocalVariable(name: "lastoffset", scope: !6234, file: !3, line: 4422, type: !669)
!6242 = !DILocation(line: 0, scope: !6234)
!6243 = !DILocation(line: 4420, column: 3, scope: !6234)
!6244 = !DILocation(line: 4420, column: 15, scope: !6234)
!6245 = !DILocation(line: 0, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 4424, column: 3)
!6247 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 4424, column: 3)
!6248 = !DILocation(line: 4424, column: 8, scope: !6247)
!6249 = !DILocation(line: 0, scope: !6247)
!6250 = !DILocation(line: 4424, column: 15, scope: !6246)
!6251 = !DILocation(line: 4424, column: 3, scope: !6247)
!6252 = !DILocation(line: 4426, column: 11, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 4426, column: 11)
!6254 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 4425, column: 5)
!6255 = !DILocation(line: 4426, column: 15, scope: !6253)
!6256 = !DILocation(line: 4426, column: 22, scope: !6253)
!6257 = !DILocation(line: 4426, column: 11, scope: !6254)
!6258 = !DILocation(line: 4424, column: 61, scope: !6246)
!6259 = !DILocation(line: 4424, column: 3, scope: !6246)
!6260 = distinct !{!6260, !6251, !6261}
!6261 = !DILocation(line: 4429, column: 5, scope: !6247)
!6262 = !DILocation(line: 4431, column: 1, scope: !6234)
!6263 = distinct !DISubprogram(name: "VEC_fieldoff_s_base_index", scope: !3, file: !3, line: 4139, type: !6264, scopeLine: 4139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6266)
!6264 = !DISubroutineType(types: !6265)
!6265 = !{!5749, !6209, !6}
!6266 = !{!6267, !6268}
!6267 = !DILocalVariable(name: "vec_", arg: 1, scope: !6263, file: !3, line: 4139, type: !6209)
!6268 = !DILocalVariable(name: "ix_", arg: 2, scope: !6263, file: !3, line: 4139, type: !6)
!6269 = !DILocation(line: 0, scope: !6263)
!6270 = !DILocation(line: 4139, column: 1, scope: !6263)
!6271 = distinct !DISubprogram(name: "VEC_fieldoff_s_heap_free", scope: !3, file: !3, line: 4140, type: !6272, scopeLine: 4140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6274)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{null, !6037}
!6274 = !{!6275}
!6275 = !DILocalVariable(name: "vec_", arg: 1, scope: !6271, file: !3, line: 4140, type: !6037)
!6276 = !DILocation(line: 0, scope: !6271)
!6277 = !DILocation(line: 4140, column: 1, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 4140, column: 1)
!6279 = !DILocation(line: 4140, column: 1, scope: !6271)
!6280 = distinct !DISubprogram(name: "insert_into_field_list", scope: !3, file: !3, line: 4081, type: !6281, scopeLine: 4082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6283)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{null, !711, !711}
!6283 = !{!6284, !6285, !6286, !6287}
!6284 = !DILocalVariable(name: "base", arg: 1, scope: !6280, file: !3, line: 4081, type: !711)
!6285 = !DILocalVariable(name: "field", arg: 2, scope: !6280, file: !3, line: 4081, type: !711)
!6286 = !DILocalVariable(name: "prev", scope: !6280, file: !3, line: 4083, type: !711)
!6287 = !DILocalVariable(name: "curr", scope: !6280, file: !3, line: 4084, type: !711)
!6288 = !DILocation(line: 0, scope: !6280)
!6289 = !DILocation(line: 4084, column: 26, scope: !6280)
!6290 = !DILocation(line: 4086, column: 10, scope: !6280)
!6291 = !DILocation(line: 4086, column: 15, scope: !6280)
!6292 = !DILocation(line: 4087, column: 14, scope: !6280)
!6293 = !DILocation(line: 4088, column: 1, scope: !6280)
!6294 = distinct !DISubprogram(name: "bitpos_of_field", scope: !3, file: !3, line: 2813, type: !6295, scopeLine: 2814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6298)
!6295 = !DISubroutineType(types: !6296)
!6296 = !{!669, !6297}
!6297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !730)
!6298 = !{!6299}
!6299 = !DILocalVariable(name: "fdecl", arg: 1, scope: !6294, file: !3, line: 2813, type: !6297)
!6300 = !DILocation(line: 0, scope: !6294)
!6301 = !DILocation(line: 2816, column: 23, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 2816, column: 7)
!6303 = !DILocation(line: 2816, column: 8, scope: !6302)
!6304 = !DILocation(line: 2817, column: 7, scope: !6302)
!6305 = !DILocation(line: 2817, column: 26, scope: !6302)
!6306 = !DILocation(line: 2817, column: 11, scope: !6302)
!6307 = !DILocation(line: 2816, column: 7, scope: !6294)
!6308 = !DILocation(line: 2820, column: 11, scope: !6294)
!6309 = !DILocation(line: 2820, column: 56, scope: !6294)
!6310 = !DILocation(line: 2821, column: 6, scope: !6294)
!6311 = !DILocation(line: 2821, column: 4, scope: !6294)
!6312 = !DILocation(line: 2820, column: 3, scope: !6294)
!6313 = !DILocation(line: 2822, column: 1, scope: !6294)
!6314 = distinct !DISubprogram(name: "VEC_fieldoff_s_base_last", scope: !3, file: !3, line: 4139, type: !6315, scopeLine: 4139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6317)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{!5749, !6209}
!6317 = !{!6318}
!6318 = !DILocalVariable(name: "vec_", arg: 1, scope: !6314, file: !3, line: 4139, type: !6209)
!6319 = !DILocation(line: 0, scope: !6314)
!6320 = !DILocation(line: 4139, column: 1, scope: !6314)
!6321 = distinct !DISubprogram(name: "VEC_fieldoff_s_heap_safe_push", scope: !3, file: !3, line: 4140, type: !6322, scopeLine: 4140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6324)
!6322 = !DISubroutineType(types: !6323)
!6323 = !{!5749, !6037, !2096}
!6324 = !{!6325, !6326}
!6325 = !DILocalVariable(name: "vec_", arg: 1, scope: !6321, file: !3, line: 4140, type: !6037)
!6326 = !DILocalVariable(name: "obj_", arg: 2, scope: !6321, file: !3, line: 4140, type: !2096)
!6327 = !DILocation(line: 0, scope: !6321)
!6328 = !DILocation(line: 4140, column: 1, scope: !6321)
!6329 = distinct !DISubprogram(name: "VEC_fieldoff_s_heap_reserve", scope: !3, file: !3, line: 4140, type: !6330, scopeLine: 4140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6332)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{!662, !6037, !662}
!6332 = !{!6333, !6334, !6335}
!6333 = !DILocalVariable(name: "vec_", arg: 1, scope: !6329, file: !3, line: 4140, type: !6037)
!6334 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6329, file: !3, line: 4140, type: !662)
!6335 = !DILocalVariable(name: "extend", scope: !6329, file: !3, line: 4140, type: !662)
!6336 = !DILocation(line: 0, scope: !6329)
!6337 = !DILocation(line: 4140, column: 1, scope: !6329)
!6338 = !DILocation(line: 4140, column: 1, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 4140, column: 1)
!6340 = distinct !DISubprogram(name: "VEC_fieldoff_s_base_quick_push", scope: !3, file: !3, line: 4139, type: !6341, scopeLine: 4139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6343)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{!5749, !6209, !2096}
!6343 = !{!6344, !6345, !6346}
!6344 = !DILocalVariable(name: "vec_", arg: 1, scope: !6340, file: !3, line: 4139, type: !6209)
!6345 = !DILocalVariable(name: "obj_", arg: 2, scope: !6340, file: !3, line: 4139, type: !2096)
!6346 = !DILocalVariable(name: "slot_", scope: !6340, file: !3, line: 4139, type: !5749)
!6347 = !DILocation(line: 0, scope: !6340)
!6348 = !DILocation(line: 4139, column: 1, scope: !6340)
!6349 = distinct !DISubprogram(name: "VEC_fieldoff_s_base_space", scope: !3, file: !3, line: 4139, type: !6350, scopeLine: 4139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6352)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{!662, !6209, !662}
!6352 = !{!6353, !6354}
!6353 = !DILocalVariable(name: "vec_", arg: 1, scope: !6349, file: !3, line: 4139, type: !6209)
!6354 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6349, file: !3, line: 4139, type: !662)
!6355 = !DILocation(line: 0, scope: !6349)
!6356 = !DILocation(line: 4139, column: 1, scope: !6349)
!6357 = distinct !DISubprogram(name: "VEC_fieldoff_s_base_address", scope: !3, file: !3, line: 4139, type: !6315, scopeLine: 4139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6358)
!6358 = !{!6359}
!6359 = !DILocalVariable(name: "vec_", arg: 1, scope: !6357, file: !3, line: 4139, type: !6209)
!6360 = !DILocation(line: 0, scope: !6357)
!6361 = !DILocation(line: 4139, column: 1, scope: !6357)
!6362 = distinct !DISubprogram(name: "fieldoff_compare", scope: !3, file: !3, line: 4145, type: !1528, scopeLine: 4146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6363)
!6363 = !{!6364, !6365, !6366, !6367, !6368, !6369}
!6364 = !DILocalVariable(name: "pa", arg: 1, scope: !6362, file: !3, line: 4145, type: !1355)
!6365 = !DILocalVariable(name: "pb", arg: 2, scope: !6362, file: !3, line: 4145, type: !1355)
!6366 = !DILocalVariable(name: "foa", scope: !6362, file: !3, line: 4147, type: !2096)
!6367 = !DILocalVariable(name: "fob", scope: !6362, file: !3, line: 4148, type: !2096)
!6368 = !DILocalVariable(name: "foasize", scope: !6362, file: !3, line: 4149, type: !684)
!6369 = !DILocalVariable(name: "fobsize", scope: !6362, file: !3, line: 4149, type: !684)
!6370 = !DILocation(line: 0, scope: !6362)
!6371 = !DILocation(line: 4151, column: 12, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 4151, column: 7)
!6373 = !DILocation(line: 4151, column: 26, scope: !6372)
!6374 = !DILocation(line: 4151, column: 19, scope: !6372)
!6375 = !DILocation(line: 4151, column: 7, scope: !6362)
!6376 = !DILocation(line: 4153, column: 24, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 4153, column: 12)
!6378 = !DILocation(line: 4153, column: 12, scope: !6372)
!6379 = !DILocation(line: 4156, column: 18, scope: !6362)
!6380 = !DILocation(line: 4157, column: 18, scope: !6362)
!6381 = !DILocation(line: 4158, column: 15, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 4158, column: 7)
!6383 = !DILocation(line: 4158, column: 7, scope: !6362)
!6384 = !DILocation(line: 4160, column: 20, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 4160, column: 12)
!6386 = !DILocation(line: 4160, column: 12, scope: !6382)
!6387 = !DILocation(line: 4163, column: 1, scope: !6362)
!6388 = distinct !DISubprogram(name: "make_constraint_from_heapvar", scope: !3, file: !3, line: 3383, type: !6389, scopeLine: 3384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6391)
!6389 = !DISubroutineType(types: !6390)
!6390 = !{!711, !711, !667}
!6391 = !{!6392, !6393, !6394, !6395, !6396}
!6392 = !DILocalVariable(name: "lhs", arg: 1, scope: !6388, file: !3, line: 3383, type: !711)
!6393 = !DILocalVariable(name: "name", arg: 2, scope: !6388, file: !3, line: 3383, type: !667)
!6394 = !DILocalVariable(name: "vi", scope: !6388, file: !3, line: 3385, type: !711)
!6395 = !DILocalVariable(name: "heapvar", scope: !6388, file: !3, line: 3386, type: !730)
!6396 = !DILocalVariable(name: "ann", scope: !6397, file: !3, line: 3390, type: !4141)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 3389, column: 5)
!6398 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 3388, column: 7)
!6399 = !DILocation(line: 0, scope: !6388)
!6400 = !DILocation(line: 3386, column: 39, scope: !6388)
!6401 = !DILocation(line: 3386, column: 50, scope: !6388)
!6402 = !DILocation(line: 3386, column: 18, scope: !6388)
!6403 = !DILocation(line: 3388, column: 15, scope: !6398)
!6404 = !DILocation(line: 3388, column: 7, scope: !6388)
!6405 = !DILocation(line: 3391, column: 37, scope: !6397)
!6406 = !DILocation(line: 3391, column: 17, scope: !6397)
!6407 = !DILocation(line: 3392, column: 7, scope: !6397)
!6408 = !DILocation(line: 3392, column: 31, scope: !6397)
!6409 = !DILocation(line: 3394, column: 28, scope: !6397)
!6410 = !DILocation(line: 3394, column: 39, scope: !6397)
!6411 = !DILocation(line: 3394, column: 7, scope: !6397)
!6412 = !DILocation(line: 3396, column: 13, scope: !6397)
!6413 = !DILocation(line: 0, scope: !6397)
!6414 = !DILocation(line: 3397, column: 12, scope: !6397)
!6415 = !DILocation(line: 3397, column: 23, scope: !6397)
!6416 = !DILocation(line: 3398, column: 5, scope: !6397)
!6417 = !DILocation(line: 3402, column: 31, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 3402, column: 7)
!6419 = !DILocation(line: 3402, column: 7, scope: !6418)
!6420 = !DILocation(line: 3402, column: 7, scope: !6388)
!6421 = !DILocation(line: 3403, column: 5, scope: !6418)
!6422 = !DILocation(line: 3405, column: 8, scope: !6388)
!6423 = !DILocation(line: 3406, column: 7, scope: !6388)
!6424 = !DILocation(line: 3406, column: 25, scope: !6388)
!6425 = !DILocation(line: 3409, column: 7, scope: !6388)
!6426 = !DILocation(line: 3409, column: 14, scope: !6388)
!6427 = !DILocation(line: 3410, column: 7, scope: !6388)
!6428 = !DILocation(line: 3410, column: 16, scope: !6388)
!6429 = !DILocation(line: 3411, column: 7, scope: !6388)
!6430 = !DILocation(line: 3411, column: 12, scope: !6388)
!6431 = !DILocation(line: 3412, column: 19, scope: !6388)
!6432 = !DILocation(line: 3413, column: 3, scope: !6388)
!6433 = !DILocation(line: 3415, column: 34, scope: !6388)
!6434 = !DILocation(line: 3415, column: 3, scope: !6388)
!6435 = !DILocation(line: 3417, column: 3, scope: !6388)
!6436 = distinct !DISubprogram(name: "gimple_code", scope: !566, file: !566, line: 1052, type: !6437, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6439)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{!565, !4281}
!6439 = !{!6440}
!6440 = !DILocalVariable(name: "g", arg: 1, scope: !6436, file: !566, line: 1052, type: !4281)
!6441 = !DILocation(line: 0, scope: !6436)
!6442 = !DILocation(line: 1054, column: 20, scope: !6436)
!6443 = !DILocation(line: 1054, column: 3, scope: !6436)
!6444 = distinct !DISubprogram(name: "get_constraint_for", scope: !3, file: !3, line: 3227, type: !6445, scopeLine: 3228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6448)
!6445 = !DISubroutineType(types: !6446)
!6446 = !{null, !730, !6447}
!6447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!6448 = !{!6449, !6450}
!6449 = !DILocalVariable(name: "t", arg: 1, scope: !6444, file: !3, line: 3227, type: !730)
!6450 = !DILocalVariable(name: "results", arg: 2, scope: !6444, file: !3, line: 3227, type: !6447)
!6451 = !DILocation(line: 0, scope: !6444)
!6452 = !DILocation(line: 3229, column: 3, scope: !6444)
!6453 = !DILocation(line: 3231, column: 3, scope: !6444)
!6454 = !DILocation(line: 3232, column: 1, scope: !6444)
!6455 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !566, file: !566, line: 3061, type: !6456, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6458)
!6456 = !DISubroutineType(types: !6457)
!6457 = !{!6, !4281}
!6458 = !{!6459}
!6459 = !DILocalVariable(name: "gs", arg: 1, scope: !6455, file: !566, line: 3061, type: !4281)
!6460 = !DILocation(line: 0, scope: !6455)
!6461 = !DILocation(line: 3064, column: 25, scope: !6455)
!6462 = !DILocation(line: 3064, column: 3, scope: !6455)
!6463 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !3163, file: !3163, line: 427, type: !6464, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6469)
!6464 = !DISubroutineType(types: !6465)
!6465 = !{!730, !6466}
!6466 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !1081, line: 30, baseType: !6467)
!6467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6468, size: 64)
!6468 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !140, line: 1893, baseType: !1092)
!6469 = !{!6470}
!6470 = !DILocalVariable(name: "use", arg: 1, scope: !6463, file: !3163, line: 427, type: !6466)
!6471 = !DILocation(line: 0, scope: !6463)
!6472 = !DILocation(line: 429, column: 17, scope: !6463)
!6473 = !DILocation(line: 429, column: 10, scope: !6463)
!6474 = !DILocation(line: 429, column: 3, scope: !6463)
!6475 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !3163, file: !3163, line: 442, type: !6476, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6478)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{!6466, !1050, !662}
!6478 = !{!6479, !6480}
!6479 = !DILocalVariable(name: "gs", arg: 1, scope: !6475, file: !3163, line: 442, type: !1050)
!6480 = !DILocalVariable(name: "i", arg: 2, scope: !6475, file: !3163, line: 442, type: !662)
!6481 = !DILocation(line: 0, scope: !6475)
!6482 = !DILocation(line: 444, column: 11, scope: !6475)
!6483 = !DILocation(line: 444, column: 35, scope: !6475)
!6484 = !DILocation(line: 444, column: 3, scope: !6475)
!6485 = distinct !DISubprogram(name: "gimple_phi_arg_def", scope: !3163, file: !3163, line: 450, type: !6486, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6488)
!6486 = !DISubroutineType(types: !6487)
!6487 = !{!730, !1050, !682}
!6488 = !{!6489, !6490, !6491}
!6489 = !DILocalVariable(name: "gs", arg: 1, scope: !6485, file: !3163, line: 450, type: !1050)
!6490 = !DILocalVariable(name: "index", arg: 2, scope: !6485, file: !3163, line: 450, type: !682)
!6491 = !DILocalVariable(name: "pd", scope: !6485, file: !3163, line: 452, type: !6492)
!6492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!6493 = !DILocation(line: 0, scope: !6485)
!6494 = !DILocation(line: 452, column: 46, scope: !6485)
!6495 = !DILocation(line: 452, column: 26, scope: !6485)
!6496 = !DILocation(line: 453, column: 33, scope: !6485)
!6497 = !DILocation(line: 453, column: 10, scope: !6485)
!6498 = !DILocation(line: 453, column: 3, scope: !6485)
!6499 = distinct !DISubprogram(name: "VEC_ce_s_base_iterate", scope: !3, file: !3, line: 406, type: !6500, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6504)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{!662, !6502, !6, !6503}
!6502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!6503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4325, size: 64)
!6504 = !{!6505, !6506, !6507}
!6505 = !DILocalVariable(name: "vec_", arg: 1, scope: !6499, file: !3, line: 406, type: !6502)
!6506 = !DILocalVariable(name: "ix_", arg: 2, scope: !6499, file: !3, line: 406, type: !6)
!6507 = !DILocalVariable(name: "ptr", arg: 3, scope: !6499, file: !3, line: 406, type: !6503)
!6508 = !DILocation(line: 0, scope: !6499)
!6509 = !DILocation(line: 406, column: 1, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 406, column: 1)
!6511 = !DILocation(line: 406, column: 1, scope: !6499)
!6512 = !DILocation(line: 406, column: 1, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 406, column: 1)
!6514 = !DILocation(line: 406, column: 1, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 406, column: 1)
!6516 = !DILocation(line: 0, scope: !6510)
!6517 = distinct !DISubprogram(name: "VEC_ce_s_base_length", scope: !3, file: !3, line: 406, type: !6518, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6522)
!6518 = !DISubroutineType(types: !6519)
!6519 = !{!6, !6520}
!6520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6521, size: 64)
!6521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2108)
!6522 = !{!6523}
!6523 = !DILocalVariable(name: "vec_", arg: 1, scope: !6517, file: !3, line: 406, type: !6520)
!6524 = !DILocation(line: 0, scope: !6517)
!6525 = !DILocation(line: 406, column: 1, scope: !6517)
!6526 = distinct !DISubprogram(name: "VEC_ce_s_base_last", scope: !3, file: !3, line: 406, type: !6527, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6529)
!6527 = !DISubroutineType(types: !6528)
!6528 = !{!4325, !6502}
!6529 = !{!6530}
!6530 = !DILocalVariable(name: "vec_", arg: 1, scope: !6526, file: !3, line: 406, type: !6502)
!6531 = !DILocation(line: 0, scope: !6526)
!6532 = !DILocation(line: 406, column: 1, scope: !6526)
!6533 = distinct !DISubprogram(name: "VEC_ce_s_base_pop", scope: !3, file: !3, line: 406, type: !6534, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{null, !6502}
!6536 = !{!6537}
!6537 = !DILocalVariable(name: "vec_", arg: 1, scope: !6533, file: !3, line: 406, type: !6502)
!6538 = !DILocation(line: 0, scope: !6533)
!6539 = !DILocation(line: 406, column: 1, scope: !6533)
!6540 = distinct !DISubprogram(name: "is_gimple_call", scope: !566, file: !566, line: 1870, type: !6541, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6543)
!6541 = !DISubroutineType(types: !6542)
!6542 = !{!661, !4281}
!6543 = !{!6544}
!6544 = !DILocalVariable(name: "gs", arg: 1, scope: !6540, file: !566, line: 1870, type: !4281)
!6545 = !DILocation(line: 0, scope: !6540)
!6546 = !DILocation(line: 1872, column: 10, scope: !6540)
!6547 = !DILocation(line: 1872, column: 27, scope: !6540)
!6548 = !DILocation(line: 1872, column: 3, scope: !6540)
!6549 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !566, file: !566, line: 1954, type: !4279, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6550)
!6550 = !{!6551, !6552}
!6551 = !DILocalVariable(name: "gs", arg: 1, scope: !6549, file: !566, line: 1954, type: !4281)
!6552 = !DILocalVariable(name: "addr", scope: !6549, file: !566, line: 1956, type: !730)
!6553 = !DILocation(line: 0, scope: !6549)
!6554 = !DILocation(line: 1956, column: 15, scope: !6549)
!6555 = !DILocation(line: 1957, column: 7, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6549, file: !566, line: 1957, column: 7)
!6557 = !DILocation(line: 1957, column: 24, scope: !6556)
!6558 = !DILocation(line: 1957, column: 7, scope: !6549)
!6559 = !DILocation(line: 1958, column: 12, scope: !6556)
!6560 = !DILocation(line: 1958, column: 5, scope: !6556)
!6561 = !DILocation(line: 1960, column: 1, scope: !6549)
!6562 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !566, file: !566, line: 1878, type: !4279, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6563)
!6563 = !{!6564}
!6564 = !DILocalVariable(name: "gs", arg: 1, scope: !6562, file: !566, line: 1878, type: !4281)
!6565 = !DILocation(line: 0, scope: !6562)
!6566 = !DILocation(line: 1881, column: 10, scope: !6562)
!6567 = !DILocation(line: 1881, column: 3, scope: !6562)
!6568 = distinct !DISubprogram(name: "gimple_call_arg", scope: !566, file: !566, line: 2025, type: !6569, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6571)
!6569 = !DISubroutineType(types: !6570)
!6570 = !{!730, !4281, !6}
!6571 = !{!6572, !6573}
!6572 = !DILocalVariable(name: "gs", arg: 1, scope: !6568, file: !566, line: 2025, type: !4281)
!6573 = !DILocalVariable(name: "index", arg: 2, scope: !6568, file: !566, line: 2025, type: !6)
!6574 = !DILocation(line: 0, scope: !6568)
!6575 = !DILocation(line: 2028, column: 31, scope: !6568)
!6576 = !DILocation(line: 2028, column: 10, scope: !6568)
!6577 = !DILocation(line: 2028, column: 3, scope: !6568)
!6578 = distinct !DISubprogram(name: "get_constraint_for_ptr_offset", scope: !3, file: !3, line: 2829, type: !6579, scopeLine: 2831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6581)
!6579 = !DISubroutineType(types: !6580)
!6580 = !{null, !730, !730, !6447}
!6581 = !{!6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6594, !6598, !6600, !6603, !6604}
!6582 = !DILocalVariable(name: "ptr", arg: 1, scope: !6578, file: !3, line: 2829, type: !730)
!6583 = !DILocalVariable(name: "offset", arg: 2, scope: !6578, file: !3, line: 2829, type: !730)
!6584 = !DILocalVariable(name: "results", arg: 3, scope: !6578, file: !3, line: 2830, type: !6447)
!6585 = !DILocalVariable(name: "c", scope: !6578, file: !3, line: 2832, type: !675)
!6586 = !DILocalVariable(name: "j", scope: !6578, file: !3, line: 2833, type: !6)
!6587 = !DILocalVariable(name: "n", scope: !6578, file: !3, line: 2833, type: !6)
!6588 = !DILocalVariable(name: "rhsunitoffset", scope: !6578, file: !3, line: 2834, type: !669)
!6589 = !DILocalVariable(name: "rhsoffset", scope: !6578, file: !3, line: 2834, type: !669)
!6590 = !DILocalVariable(name: "curr", scope: !6591, file: !3, line: 2869, type: !711)
!6591 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 2868, column: 5)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2867, column: 3)
!6593 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 2867, column: 3)
!6594 = !DILocalVariable(name: "temp", scope: !6595, file: !3, line: 2881, type: !711)
!6595 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 2880, column: 2)
!6596 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 2877, column: 16)
!6597 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2873, column: 11)
!6598 = !DILocalVariable(name: "c2", scope: !6599, file: !3, line: 2884, type: !675)
!6599 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 2883, column: 6)
!6600 = !DILocalVariable(name: "temp", scope: !6601, file: !3, line: 2896, type: !711)
!6601 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 2895, column: 2)
!6602 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 2894, column: 16)
!6603 = !DILocalVariable(name: "offset", scope: !6601, file: !3, line: 2897, type: !684)
!6604 = !DILocalVariable(name: "c2", scope: !6605, file: !3, line: 2920, type: !675)
!6605 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 2919, column: 6)
!6606 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 2917, column: 8)
!6607 = !DILocation(line: 0, scope: !6578)
!6608 = !DILocation(line: 2832, column: 3, scope: !6578)
!6609 = !DILocation(line: 2838, column: 8, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 2838, column: 7)
!6611 = !DILocation(line: 2838, column: 7, scope: !6578)
!6612 = !DILocation(line: 2840, column: 7, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 2839, column: 5)
!6614 = !DILocation(line: 2841, column: 7, scope: !6613)
!6615 = !DILocation(line: 2848, column: 14, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 2848, column: 7)
!6617 = !DILocation(line: 2849, column: 7, scope: !6616)
!6618 = !DILocation(line: 2849, column: 11, scope: !6616)
!6619 = !DILocation(line: 2848, column: 7, scope: !6578)
!6620 = !DILocation(line: 2854, column: 23, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 2852, column: 5)
!6622 = !DILocation(line: 2855, column: 33, scope: !6621)
!6623 = !DILocation(line: 0, scope: !6616)
!6624 = !DILocation(line: 2860, column: 3, scope: !6578)
!6625 = !DILocation(line: 2861, column: 17, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 2861, column: 7)
!6627 = !DILocation(line: 2861, column: 7, scope: !6578)
!6628 = !DILocation(line: 2866, column: 7, scope: !6578)
!6629 = !DILocation(line: 0, scope: !6591)
!6630 = !DILocation(line: 0, scope: !6597)
!6631 = !DILocation(line: 0, scope: !6596)
!6632 = !DILocation(line: 0, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 2907, column: 8)
!6634 = !DILocation(line: 0, scope: !6605)
!6635 = !DILocation(line: 0, scope: !6599)
!6636 = !DILocation(line: 2867, column: 8, scope: !6593)
!6637 = !DILocation(line: 0, scope: !6593)
!6638 = !DILocation(line: 2867, column: 17, scope: !6592)
!6639 = !DILocation(line: 2867, column: 3, scope: !6593)
!6640 = !DILocation(line: 2870, column: 12, scope: !6591)
!6641 = !DILocation(line: 2870, column: 11, scope: !6591)
!6642 = !DILocation(line: 2871, column: 29, scope: !6591)
!6643 = !DILocation(line: 2871, column: 14, scope: !6591)
!6644 = !DILocation(line: 2873, column: 13, scope: !6597)
!6645 = !DILocation(line: 2873, column: 18, scope: !6597)
!6646 = !DILocation(line: 2875, column: 4, scope: !6597)
!6647 = !DILocation(line: 2875, column: 13, scope: !6597)
!6648 = !DILocation(line: 2875, column: 7, scope: !6597)
!6649 = !DILocation(line: 2873, column: 11, scope: !6591)
!6650 = !DILocation(line: 2876, column: 11, scope: !6597)
!6651 = !DILocation(line: 2876, column: 2, scope: !6597)
!6652 = !DILocation(line: 2879, column: 9, scope: !6596)
!6653 = !DILocation(line: 2894, column: 16, scope: !6596)
!6654 = !DILocation(line: 2930, column: 11, scope: !6602)
!6655 = !DILocation(line: 2908, column: 8, scope: !6633)
!6656 = !DILocation(line: 2907, column: 8, scope: !6601)
!6657 = !DILocation(line: 2918, column: 8, scope: !6606)
!6658 = !DILocation(line: 2917, column: 8, scope: !6601)
!6659 = !DILocation(line: 2925, column: 6, scope: !6605)
!6660 = !DILocation(line: 2928, column: 2, scope: !6601)
!6661 = !DILocation(line: 2881, column: 47, scope: !6595)
!6662 = !DILocation(line: 2881, column: 21, scope: !6595)
!6663 = !DILocation(line: 0, scope: !6595)
!6664 = !DILocation(line: 2882, column: 4, scope: !6595)
!6665 = !DILocation(line: 2884, column: 8, scope: !6599)
!6666 = !DILocation(line: 2885, column: 23, scope: !6599)
!6667 = !DILocation(line: 2885, column: 15, scope: !6599)
!6668 = !DILocation(line: 2886, column: 16, scope: !6599)
!6669 = !DILocation(line: 2887, column: 18, scope: !6599)
!6670 = !DILocation(line: 2888, column: 24, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 2888, column: 12)
!6672 = !DILocation(line: 2888, column: 19, scope: !6671)
!6673 = !DILocation(line: 2888, column: 12, scope: !6599)
!6674 = !DILocation(line: 2889, column: 3, scope: !6671)
!6675 = !DILocation(line: 2890, column: 21, scope: !6599)
!6676 = !DILocation(line: 2891, column: 6, scope: !6595)
!6677 = !DILocation(line: 2891, column: 6, scope: !6599)
!6678 = distinct !{!6678, !6664, !6679}
!6679 = !DILocation(line: 2892, column: 15, scope: !6595)
!6680 = !DILocation(line: 2932, column: 7, scope: !6591)
!6681 = !DILocation(line: 2867, column: 23, scope: !6592)
!6682 = !DILocation(line: 2867, column: 3, scope: !6592)
!6683 = distinct !{!6683, !6639, !6684}
!6684 = !DILocation(line: 2933, column: 5, scope: !6593)
!6685 = !DILocation(line: 2934, column: 1, scope: !6578)
!6686 = !DILocation(line: 2897, column: 42, scope: !6601)
!6687 = !DILocation(line: 2897, column: 49, scope: !6601)
!6688 = !DILocation(line: 0, scope: !6601)
!6689 = !DILocation(line: 2908, column: 24, scope: !6633)
!6690 = !DILocation(line: 2910, column: 11, scope: !6601)
!6691 = !DILocation(line: 2917, column: 14, scope: !6606)
!6692 = !DILocation(line: 2917, column: 21, scope: !6606)
!6693 = !DILocation(line: 2918, column: 17, scope: !6606)
!6694 = !DILocation(line: 2918, column: 22, scope: !6606)
!6695 = !DILocation(line: 2920, column: 8, scope: !6605)
!6696 = !DILocation(line: 2921, column: 29, scope: !6605)
!6697 = !DILocation(line: 2921, column: 15, scope: !6605)
!6698 = !DILocation(line: 2922, column: 16, scope: !6605)
!6699 = !DILocation(line: 2923, column: 18, scope: !6605)
!6700 = !DILocation(line: 2924, column: 8, scope: !6605)
!6701 = !DILocation(line: 2925, column: 6, scope: !6606)
!6702 = !DILocation(line: 2926, column: 18, scope: !6601)
!6703 = !DILocation(line: 2926, column: 10, scope: !6601)
!6704 = !DILocation(line: 2927, column: 13, scope: !6601)
!6705 = distinct !DISubprogram(name: "process_all_all_constraints", scope: !3, file: !3, line: 3239, type: !6706, scopeLine: 3240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6708)
!6706 = !DISubroutineType(types: !6707)
!6707 = !{null, !2103, !2103}
!6708 = !{!6709, !6710, !6711, !6712, !6713, !6714, !6715}
!6709 = !DILocalVariable(name: "lhsc", arg: 1, scope: !6705, file: !3, line: 3239, type: !2103)
!6710 = !DILocalVariable(name: "rhsc", arg: 2, scope: !6705, file: !3, line: 3239, type: !2103)
!6711 = !DILocalVariable(name: "lhsp", scope: !6705, file: !3, line: 3241, type: !4296)
!6712 = !DILocalVariable(name: "rhsp", scope: !6705, file: !3, line: 3241, type: !4296)
!6713 = !DILocalVariable(name: "i", scope: !6705, file: !3, line: 3242, type: !6)
!6714 = !DILocalVariable(name: "j", scope: !6705, file: !3, line: 3242, type: !6)
!6715 = !DILocalVariable(name: "tmp", scope: !6716, file: !3, line: 3253, type: !675)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 3252, column: 5)
!6717 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 3244, column: 7)
!6718 = !DILocation(line: 0, scope: !6705)
!6719 = !DILocation(line: 3241, column: 3, scope: !6705)
!6720 = !DILocation(line: 3244, column: 7, scope: !6717)
!6721 = !DILocation(line: 3244, column: 31, scope: !6717)
!6722 = !DILocation(line: 3245, column: 7, scope: !6717)
!6723 = !DILocation(line: 3245, column: 10, scope: !6717)
!6724 = !DILocation(line: 3245, column: 34, scope: !6717)
!6725 = !DILocation(line: 3244, column: 7, scope: !6705)
!6726 = !DILocation(line: 0, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 3248, column: 2)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 3248, column: 2)
!6729 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 3247, column: 7)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 3247, column: 7)
!6731 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 3246, column: 5)
!6732 = !DILocation(line: 3247, column: 12, scope: !6730)
!6733 = !DILocation(line: 0, scope: !6730)
!6734 = !DILocation(line: 3247, column: 19, scope: !6729)
!6735 = !DILocation(line: 3247, column: 7, scope: !6730)
!6736 = !DILocation(line: 3248, column: 2, scope: !6728)
!6737 = !DILocation(line: 0, scope: !6728)
!6738 = !DILocation(line: 3248, column: 14, scope: !6727)
!6739 = !DILocation(line: 3249, column: 41, scope: !6727)
!6740 = !DILocation(line: 3249, column: 48, scope: !6727)
!6741 = !DILocation(line: 3249, column: 24, scope: !6727)
!6742 = !DILocation(line: 3249, column: 4, scope: !6727)
!6743 = !DILocation(line: 3248, column: 49, scope: !6727)
!6744 = !DILocation(line: 3248, column: 2, scope: !6727)
!6745 = distinct !{!6745, !6736, !6746}
!6746 = !DILocation(line: 3249, column: 53, scope: !6728)
!6747 = !DILocation(line: 3247, column: 54, scope: !6729)
!6748 = !DILocation(line: 3247, column: 7, scope: !6729)
!6749 = distinct !{!6749, !6735, !6750}
!6750 = !DILocation(line: 3249, column: 53, scope: !6730)
!6751 = !DILocation(line: 3253, column: 7, scope: !6716)
!6752 = !DILocation(line: 3254, column: 13, scope: !6716)
!6753 = !DILocation(line: 0, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 3255, column: 7)
!6755 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 3255, column: 7)
!6756 = !DILocation(line: 3255, column: 12, scope: !6755)
!6757 = !DILocation(line: 0, scope: !6755)
!6758 = !DILocation(line: 3255, column: 19, scope: !6754)
!6759 = !DILocation(line: 3255, column: 7, scope: !6755)
!6760 = !DILocation(line: 0, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3257, column: 7)
!6762 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 3257, column: 7)
!6763 = !DILocation(line: 3257, column: 7, scope: !6762)
!6764 = !DILocation(line: 3256, column: 44, scope: !6754)
!6765 = !DILocation(line: 3256, column: 22, scope: !6754)
!6766 = !DILocation(line: 3256, column: 2, scope: !6754)
!6767 = !DILocation(line: 3255, column: 54, scope: !6754)
!6768 = !DILocation(line: 3255, column: 7, scope: !6754)
!6769 = distinct !{!6769, !6759, !6770}
!6770 = !DILocation(line: 3256, column: 49, scope: !6755)
!6771 = !DILocation(line: 0, scope: !6762)
!6772 = !DILocation(line: 3257, column: 19, scope: !6761)
!6773 = !DILocation(line: 3258, column: 39, scope: !6761)
!6774 = !DILocation(line: 3258, column: 22, scope: !6761)
!6775 = !DILocation(line: 3258, column: 2, scope: !6761)
!6776 = !DILocation(line: 3257, column: 54, scope: !6761)
!6777 = !DILocation(line: 3257, column: 7, scope: !6761)
!6778 = distinct !{!6778, !6763, !6779}
!6779 = !DILocation(line: 3258, column: 49, scope: !6762)
!6780 = !DILocation(line: 3259, column: 5, scope: !6717)
!6781 = !DILocation(line: 3260, column: 1, scope: !6705)
!6782 = distinct !DISubprogram(name: "VEC_ce_s_heap_free", scope: !3, file: !3, line: 407, type: !6783, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6785)
!6783 = !DISubroutineType(types: !6784)
!6784 = !{null, !6447}
!6785 = !{!6786}
!6786 = !DILocalVariable(name: "vec_", arg: 1, scope: !6782, file: !3, line: 407, type: !6447)
!6787 = !DILocation(line: 0, scope: !6782)
!6788 = !DILocation(line: 407, column: 1, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 407, column: 1)
!6790 = !DILocation(line: 407, column: 1, scope: !6782)
!6791 = distinct !DISubprogram(name: "do_deref", scope: !3, file: !3, line: 3071, type: !6783, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6792)
!6792 = !{!6793, !6794, !6795, !6796}
!6793 = !DILocalVariable(name: "constraints", arg: 1, scope: !6791, file: !3, line: 3071, type: !6447)
!6794 = !DILocalVariable(name: "c", scope: !6791, file: !3, line: 3073, type: !4296)
!6795 = !DILocalVariable(name: "i", scope: !6791, file: !3, line: 3074, type: !6)
!6796 = !DILocalVariable(name: "tmplhs", scope: !6797, file: !3, line: 3084, type: !675)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 3083, column: 2)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 3082, column: 16)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !3, line: 3080, column: 16)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 3078, column: 11)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !3, line: 3077, column: 5)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 3076, column: 3)
!6803 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 3076, column: 3)
!6804 = !DILocation(line: 0, scope: !6791)
!6805 = !DILocation(line: 3073, column: 3, scope: !6791)
!6806 = !DILocation(line: 0, scope: !6797)
!6807 = !DILocation(line: 3076, column: 8, scope: !6803)
!6808 = !DILocation(line: 0, scope: !6803)
!6809 = !DILocation(line: 3076, column: 15, scope: !6802)
!6810 = !DILocation(line: 3076, column: 3, scope: !6803)
!6811 = !DILocation(line: 3078, column: 11, scope: !6800)
!6812 = !DILocation(line: 3078, column: 14, scope: !6800)
!6813 = !DILocation(line: 3078, column: 19, scope: !6800)
!6814 = !DILocation(line: 3078, column: 11, scope: !6801)
!6815 = !DILocation(line: 3079, column: 10, scope: !6800)
!6816 = !DILocation(line: 3079, column: 2, scope: !6800)
!6817 = !DILocation(line: 3080, column: 24, scope: !6799)
!6818 = !DILocation(line: 3080, column: 16, scope: !6800)
!6819 = !DILocation(line: 3081, column: 10, scope: !6799)
!6820 = !DILocation(line: 3081, column: 2, scope: !6799)
!6821 = !DILocation(line: 3082, column: 24, scope: !6798)
!6822 = !DILocation(line: 3082, column: 16, scope: !6799)
!6823 = !DILocation(line: 3084, column: 4, scope: !6797)
!6824 = !DILocation(line: 3085, column: 13, scope: !6797)
!6825 = !DILocation(line: 3086, column: 49, scope: !6797)
!6826 = !DILocation(line: 3086, column: 24, scope: !6797)
!6827 = !DILocation(line: 3086, column: 4, scope: !6797)
!6828 = !DILocation(line: 3087, column: 20, scope: !6797)
!6829 = !DILocation(line: 3087, column: 4, scope: !6797)
!6830 = !DILocation(line: 3087, column: 7, scope: !6797)
!6831 = !DILocation(line: 3087, column: 11, scope: !6797)
!6832 = !DILocation(line: 3088, column: 2, scope: !6798)
!6833 = !DILocation(line: 3088, column: 2, scope: !6797)
!6834 = !DILocation(line: 3090, column: 2, scope: !6798)
!6835 = !DILocation(line: 3076, column: 56, scope: !6802)
!6836 = !DILocation(line: 3076, column: 3, scope: !6802)
!6837 = distinct !{!6837, !6810, !6838}
!6838 = !DILocation(line: 3091, column: 5, scope: !6803)
!6839 = !DILocation(line: 3092, column: 1, scope: !6791)
!6840 = distinct !DISubprogram(name: "lookup_vi_for_tree", scope: !3, file: !3, line: 2612, type: !5652, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6841)
!6841 = !{!6842, !6843}
!6842 = !DILocalVariable(name: "t", arg: 1, scope: !6840, file: !3, line: 2612, type: !730)
!6843 = !DILocalVariable(name: "slot", scope: !6840, file: !3, line: 2614, type: !1536)
!6844 = !DILocation(line: 0, scope: !6840)
!6845 = !DILocation(line: 2614, column: 39, scope: !6840)
!6846 = !DILocation(line: 2614, column: 52, scope: !6840)
!6847 = !DILocation(line: 2614, column: 17, scope: !6840)
!6848 = !DILocation(line: 2615, column: 12, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 2615, column: 7)
!6850 = !DILocation(line: 2615, column: 7, scope: !6840)
!6851 = !DILocation(line: 2618, column: 22, scope: !6840)
!6852 = !DILocation(line: 2618, column: 3, scope: !6840)
!6853 = !DILocation(line: 2619, column: 1, scope: !6840)
!6854 = distinct !DISubprogram(name: "handle_const_call", scope: !3, file: !3, line: 3531, type: !6855, scopeLine: 3532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6857)
!6855 = !DISubroutineType(types: !6856)
!6856 = !{null, !1050, !6447}
!6857 = !{!6858, !6859, !6860, !6861, !6862, !6866, !6869, !6870}
!6858 = !DILocalVariable(name: "stmt", arg: 1, scope: !6854, file: !3, line: 3531, type: !1050)
!6859 = !DILocalVariable(name: "results", arg: 2, scope: !6854, file: !3, line: 3531, type: !6447)
!6860 = !DILocalVariable(name: "rhsc", scope: !6854, file: !3, line: 3533, type: !675)
!6861 = !DILocalVariable(name: "k", scope: !6854, file: !3, line: 3534, type: !6)
!6862 = !DILocalVariable(name: "arg", scope: !6863, file: !3, line: 3550, type: !730)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 3549, column: 5)
!6864 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 3548, column: 3)
!6865 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 3548, column: 3)
!6866 = !DILocalVariable(name: "argc", scope: !6867, file: !3, line: 3554, type: !2103)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !3, line: 3553, column: 2)
!6868 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 3552, column: 11)
!6869 = !DILocalVariable(name: "i", scope: !6867, file: !3, line: 3555, type: !6)
!6870 = !DILocalVariable(name: "argp", scope: !6867, file: !3, line: 3556, type: !4296)
!6871 = !DILocation(line: 0, scope: !6854)
!6872 = !DILocation(line: 3533, column: 3, scope: !6854)
!6873 = !DILocation(line: 3538, column: 7, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 3538, column: 7)
!6875 = !DILocation(line: 3538, column: 7, scope: !6854)
!6876 = !DILocation(line: 3540, column: 40, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 3539, column: 5)
!6878 = !DILocation(line: 3540, column: 7, scope: !6877)
!6879 = !DILocation(line: 3541, column: 12, scope: !6877)
!6880 = !DILocation(line: 3541, column: 16, scope: !6877)
!6881 = !DILocation(line: 3542, column: 12, scope: !6877)
!6882 = !DILocation(line: 3542, column: 19, scope: !6877)
!6883 = !DILocation(line: 3543, column: 12, scope: !6877)
!6884 = !DILocation(line: 3543, column: 17, scope: !6877)
!6885 = !DILocation(line: 3544, column: 7, scope: !6877)
!6886 = !DILocation(line: 3545, column: 5, scope: !6877)
!6887 = !DILocation(line: 0, scope: !6867)
!6888 = !DILocation(line: 3548, column: 8, scope: !6865)
!6889 = !DILocation(line: 0, scope: !6865)
!6890 = !DILocation(line: 3548, column: 19, scope: !6864)
!6891 = !DILocation(line: 3548, column: 17, scope: !6864)
!6892 = !DILocation(line: 3548, column: 3, scope: !6865)
!6893 = !DILocation(line: 3550, column: 18, scope: !6863)
!6894 = !DILocation(line: 0, scope: !6863)
!6895 = !DILocation(line: 3552, column: 11, scope: !6868)
!6896 = !DILocation(line: 3552, column: 11, scope: !6863)
!6897 = !DILocation(line: 3554, column: 4, scope: !6867)
!6898 = !DILocation(line: 3554, column: 21, scope: !6867)
!6899 = !DILocation(line: 3556, column: 4, scope: !6867)
!6900 = !DILocation(line: 3557, column: 4, scope: !6867)
!6901 = !DILocation(line: 3558, column: 9, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 3558, column: 4)
!6903 = !DILocation(line: 0, scope: !6902)
!6904 = !DILocation(line: 3558, column: 16, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 3558, column: 4)
!6906 = !DILocation(line: 3558, column: 4, scope: !6902)
!6907 = !DILocation(line: 3559, column: 6, scope: !6905)
!6908 = !DILocation(line: 3558, column: 51, scope: !6905)
!6909 = !DILocation(line: 3558, column: 4, scope: !6905)
!6910 = distinct !{!6910, !6906, !6911}
!6911 = !DILocation(line: 3559, column: 6, scope: !6902)
!6912 = !DILocation(line: 3560, column: 4, scope: !6867)
!6913 = !DILocation(line: 3561, column: 2, scope: !6868)
!6914 = !DILocation(line: 3561, column: 2, scope: !6867)
!6915 = !DILocation(line: 3548, column: 48, scope: !6864)
!6916 = !DILocation(line: 3548, column: 3, scope: !6864)
!6917 = distinct !{!6917, !6892, !6918}
!6918 = !DILocation(line: 3562, column: 5, scope: !6865)
!6919 = !DILocation(line: 3565, column: 8, scope: !6854)
!6920 = !DILocation(line: 3565, column: 12, scope: !6854)
!6921 = !DILocation(line: 3566, column: 8, scope: !6854)
!6922 = !DILocation(line: 3566, column: 15, scope: !6854)
!6923 = !DILocation(line: 3567, column: 8, scope: !6854)
!6924 = !DILocation(line: 3567, column: 13, scope: !6854)
!6925 = !DILocation(line: 3568, column: 3, scope: !6854)
!6926 = !DILocation(line: 3569, column: 1, scope: !6854)
!6927 = distinct !DISubprogram(name: "handle_pure_call", scope: !3, file: !3, line: 3575, type: !6855, scopeLine: 3576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6928)
!6928 = !{!6929, !6930, !6931, !6932, !6933, !6934}
!6929 = !DILocalVariable(name: "stmt", arg: 1, scope: !6927, file: !3, line: 3575, type: !1050)
!6930 = !DILocalVariable(name: "results", arg: 2, scope: !6927, file: !3, line: 3575, type: !6447)
!6931 = !DILocalVariable(name: "rhsc", scope: !6927, file: !3, line: 3577, type: !675)
!6932 = !DILocalVariable(name: "i", scope: !6927, file: !3, line: 3578, type: !6)
!6933 = !DILocalVariable(name: "need_callused", scope: !6927, file: !3, line: 3579, type: !661)
!6934 = !DILocalVariable(name: "arg", scope: !6935, file: !3, line: 3584, type: !730)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 3583, column: 5)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 3582, column: 3)
!6937 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 3582, column: 3)
!6938 = !DILocation(line: 0, scope: !6927)
!6939 = !DILocation(line: 3577, column: 3, scope: !6927)
!6940 = !DILocation(line: 3582, column: 8, scope: !6937)
!6941 = !DILocation(line: 0, scope: !6937)
!6942 = !DILocation(line: 3582, column: 19, scope: !6936)
!6943 = !DILocation(line: 3582, column: 17, scope: !6936)
!6944 = !DILocation(line: 3582, column: 3, scope: !6937)
!6945 = !DILocation(line: 3584, column: 18, scope: !6935)
!6946 = !DILocation(line: 0, scope: !6935)
!6947 = !DILocation(line: 3586, column: 11, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6935, file: !3, line: 3586, column: 11)
!6949 = !DILocation(line: 3586, column: 11, scope: !6935)
!6950 = !DILocation(line: 3588, column: 4, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 3587, column: 2)
!6952 = !DILocation(line: 3590, column: 2, scope: !6951)
!6953 = !DILocation(line: 3582, column: 48, scope: !6936)
!6954 = !DILocation(line: 3582, column: 3, scope: !6936)
!6955 = distinct !{!6955, !6944, !6956}
!6956 = !DILocation(line: 3591, column: 5, scope: !6937)
!6957 = !DILocation(line: 3594, column: 7, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 3594, column: 7)
!6959 = !DILocation(line: 3594, column: 7, scope: !6927)
!6960 = !DILocation(line: 3596, column: 40, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6958, file: !3, line: 3595, column: 5)
!6962 = !DILocation(line: 3596, column: 7, scope: !6961)
!6963 = !DILocation(line: 3598, column: 5, scope: !6961)
!6964 = !DILocation(line: 3601, column: 7, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 3601, column: 7)
!6966 = !DILocation(line: 3601, column: 7, scope: !6927)
!6967 = !DILocation(line: 3603, column: 12, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 3602, column: 5)
!6969 = !DILocation(line: 3603, column: 16, scope: !6968)
!6970 = !DILocation(line: 3604, column: 12, scope: !6968)
!6971 = !DILocation(line: 3604, column: 19, scope: !6968)
!6972 = !DILocation(line: 3605, column: 12, scope: !6968)
!6973 = !DILocation(line: 3605, column: 17, scope: !6968)
!6974 = !DILocation(line: 3606, column: 7, scope: !6968)
!6975 = !DILocation(line: 3607, column: 5, scope: !6968)
!6976 = !DILocation(line: 3608, column: 8, scope: !6927)
!6977 = !DILocation(line: 3608, column: 12, scope: !6927)
!6978 = !DILocation(line: 3609, column: 8, scope: !6927)
!6979 = !DILocation(line: 3609, column: 15, scope: !6927)
!6980 = !DILocation(line: 3610, column: 8, scope: !6927)
!6981 = !DILocation(line: 3610, column: 13, scope: !6927)
!6982 = !DILocation(line: 3611, column: 3, scope: !6927)
!6983 = !DILocation(line: 3612, column: 1, scope: !6927)
!6984 = distinct !DISubprogram(name: "handle_rhs_call", scope: !3, file: !3, line: 3439, type: !6855, scopeLine: 3440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6985)
!6985 = !{!6986, !6987, !6988, !6989, !6990, !6994, !6997, !6998}
!6986 = !DILocalVariable(name: "stmt", arg: 1, scope: !6984, file: !3, line: 3439, type: !1050)
!6987 = !DILocalVariable(name: "results", arg: 2, scope: !6984, file: !3, line: 3439, type: !6447)
!6988 = !DILocalVariable(name: "rhsc", scope: !6984, file: !3, line: 3441, type: !675)
!6989 = !DILocalVariable(name: "i", scope: !6984, file: !3, line: 3442, type: !6)
!6990 = !DILocalVariable(name: "arg", scope: !6991, file: !3, line: 3446, type: !730)
!6991 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 3445, column: 5)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3444, column: 3)
!6993 = distinct !DILexicalBlock(scope: !6984, file: !3, line: 3444, column: 3)
!6994 = !DILocalVariable(name: "tmpc", scope: !6995, file: !3, line: 3463, type: !2103)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 3462, column: 5)
!6996 = distinct !DILexicalBlock(scope: !6984, file: !3, line: 3459, column: 7)
!6997 = !DILocalVariable(name: "lhsc", scope: !6995, file: !3, line: 3464, type: !675)
!6998 = !DILocalVariable(name: "c", scope: !6995, file: !3, line: 3464, type: !4296)
!6999 = !DILocation(line: 0, scope: !6984)
!7000 = !DILocation(line: 3441, column: 3, scope: !6984)
!7001 = !DILocation(line: 3444, column: 8, scope: !6993)
!7002 = !DILocation(line: 0, scope: !6993)
!7003 = !DILocation(line: 3444, column: 19, scope: !6992)
!7004 = !DILocation(line: 3444, column: 17, scope: !6992)
!7005 = !DILocation(line: 3444, column: 3, scope: !6993)
!7006 = !DILocation(line: 3446, column: 18, scope: !6991)
!7007 = !DILocation(line: 0, scope: !6991)
!7008 = !DILocation(line: 3450, column: 11, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 3450, column: 11)
!7010 = !DILocation(line: 3450, column: 11, scope: !6991)
!7011 = !DILocation(line: 3451, column: 2, scope: !7009)
!7012 = !DILocation(line: 3444, column: 48, scope: !6992)
!7013 = !DILocation(line: 3444, column: 3, scope: !6992)
!7014 = distinct !{!7014, !7005, !7015}
!7015 = !DILocation(line: 3452, column: 5, scope: !6993)
!7016 = !DILocation(line: 3455, column: 7, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !6984, file: !3, line: 3455, column: 7)
!7018 = !DILocation(line: 3455, column: 7, scope: !6984)
!7019 = !DILocation(line: 3456, column: 29, scope: !7017)
!7020 = !DILocation(line: 3456, column: 5, scope: !7017)
!7021 = !DILocation(line: 3459, column: 7, scope: !6996)
!7022 = !DILocation(line: 3460, column: 7, scope: !6996)
!7023 = !DILocation(line: 3460, column: 10, scope: !6996)
!7024 = !DILocation(line: 3460, column: 33, scope: !6996)
!7025 = !DILocation(line: 3461, column: 7, scope: !6996)
!7026 = !DILocation(line: 3461, column: 10, scope: !6996)
!7027 = !DILocation(line: 3459, column: 7, scope: !6984)
!7028 = !DILocation(line: 3463, column: 7, scope: !6995)
!7029 = !DILocation(line: 0, scope: !6995)
!7030 = !DILocation(line: 3463, column: 24, scope: !6995)
!7031 = !DILocation(line: 3464, column: 7, scope: !6995)
!7032 = !DILocation(line: 3465, column: 38, scope: !6995)
!7033 = !DILocation(line: 3465, column: 7, scope: !6995)
!7034 = !DILocation(line: 3466, column: 12, scope: !6995)
!7035 = !DILocation(line: 3466, column: 16, scope: !6995)
!7036 = !DILocation(line: 3467, column: 12, scope: !6995)
!7037 = !DILocation(line: 3467, column: 19, scope: !6995)
!7038 = !DILocation(line: 3468, column: 12, scope: !6995)
!7039 = !DILocation(line: 3468, column: 17, scope: !6995)
!7040 = !DILocation(line: 0, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 3469, column: 7)
!7042 = distinct !DILexicalBlock(scope: !6995, file: !3, line: 3469, column: 7)
!7043 = !DILocation(line: 3469, column: 12, scope: !7042)
!7044 = !DILocation(line: 0, scope: !7042)
!7045 = !DILocation(line: 3469, column: 19, scope: !7041)
!7046 = !DILocation(line: 3469, column: 7, scope: !7042)
!7047 = !DILocation(line: 3470, column: 45, scope: !7041)
!7048 = !DILocation(line: 3470, column: 22, scope: !7041)
!7049 = !DILocation(line: 3470, column: 2, scope: !7041)
!7050 = !DILocation(line: 3469, column: 51, scope: !7041)
!7051 = !DILocation(line: 3469, column: 7, scope: !7041)
!7052 = distinct !{!7052, !7046, !7053}
!7053 = !DILocation(line: 3470, column: 47, scope: !7042)
!7054 = !DILocation(line: 3471, column: 7, scope: !6995)
!7055 = !DILocation(line: 3472, column: 5, scope: !6996)
!7056 = !DILocation(line: 3472, column: 5, scope: !6995)
!7057 = !DILocation(line: 3475, column: 8, scope: !6984)
!7058 = !DILocation(line: 3475, column: 12, scope: !6984)
!7059 = !DILocation(line: 3476, column: 8, scope: !6984)
!7060 = !DILocation(line: 3476, column: 15, scope: !6984)
!7061 = !DILocation(line: 3477, column: 8, scope: !6984)
!7062 = !DILocation(line: 3477, column: 13, scope: !6984)
!7063 = !DILocation(line: 3478, column: 3, scope: !6984)
!7064 = !DILocation(line: 3479, column: 1, scope: !6984)
!7065 = distinct !DISubprogram(name: "handle_lhs_call", scope: !3, file: !3, line: 3486, type: !7066, scopeLine: 3487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7068)
!7066 = !DISubroutineType(types: !7067)
!7067 = !{null, !730, !662, !2103, !730}
!7068 = !{!7069, !7070, !7071, !7072, !7073, !7074, !7077}
!7069 = !DILocalVariable(name: "lhs", arg: 1, scope: !7065, file: !3, line: 3486, type: !730)
!7070 = !DILocalVariable(name: "flags", arg: 2, scope: !7065, file: !3, line: 3486, type: !662)
!7071 = !DILocalVariable(name: "rhsc", arg: 3, scope: !7065, file: !3, line: 3486, type: !2103)
!7072 = !DILocalVariable(name: "fndecl", arg: 4, scope: !7065, file: !3, line: 3486, type: !730)
!7073 = !DILocalVariable(name: "lhsc", scope: !7065, file: !3, line: 3488, type: !2103)
!7074 = !DILocalVariable(name: "vi", scope: !7075, file: !3, line: 3494, type: !711)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 3493, column: 5)
!7076 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 3492, column: 7)
!7077 = !DILocalVariable(name: "tmpc", scope: !7078, file: !3, line: 3516, type: !675)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 3515, column: 2)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 3512, column: 11)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 3508, column: 5)
!7081 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 3507, column: 12)
!7082 = !DILocation(line: 0, scope: !7065)
!7083 = !DILocation(line: 3488, column: 3, scope: !7065)
!7084 = !DILocation(line: 3488, column: 20, scope: !7065)
!7085 = !DILocation(line: 3490, column: 3, scope: !7065)
!7086 = !DILocation(line: 3492, column: 13, scope: !7076)
!7087 = !DILocation(line: 3492, column: 7, scope: !7065)
!7088 = !DILocation(line: 3495, column: 42, scope: !7075)
!7089 = !DILocation(line: 3495, column: 12, scope: !7075)
!7090 = !DILocation(line: 0, scope: !7075)
!7091 = !DILocation(line: 3498, column: 7, scope: !7075)
!7092 = !DILocation(line: 3498, column: 32, scope: !7075)
!7093 = !DILocation(line: 3499, column: 11, scope: !7075)
!7094 = !DILocation(line: 3499, column: 25, scope: !7075)
!7095 = !DILocation(line: 3503, column: 12, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 3503, column: 11)
!7097 = !DILocation(line: 3504, column: 4, scope: !7096)
!7098 = !DILocation(line: 3504, column: 7, scope: !7096)
!7099 = !DILocation(line: 3504, column: 36, scope: !7096)
!7100 = !DILocation(line: 3503, column: 11, scope: !7075)
!7101 = !DILocation(line: 3505, column: 2, scope: !7096)
!7102 = !DILocation(line: 3507, column: 12, scope: !7081)
!7103 = !DILocation(line: 3507, column: 36, scope: !7081)
!7104 = !DILocation(line: 3507, column: 12, scope: !7076)
!7105 = !DILocation(line: 3511, column: 13, scope: !7080)
!7106 = !DILocation(line: 3512, column: 11, scope: !7079)
!7107 = !DILocation(line: 3513, column: 4, scope: !7079)
!7108 = !DILocation(line: 3513, column: 7, scope: !7079)
!7109 = !DILocation(line: 3514, column: 4, scope: !7079)
!7110 = !DILocation(line: 3514, column: 7, scope: !7079)
!7111 = !DILocation(line: 3512, column: 11, scope: !7080)
!7112 = !DILocation(line: 3516, column: 4, scope: !7078)
!7113 = !DILocation(line: 3517, column: 9, scope: !7078)
!7114 = !DILocation(line: 3517, column: 13, scope: !7078)
!7115 = !DILocation(line: 3518, column: 9, scope: !7078)
!7116 = !DILocation(line: 3518, column: 16, scope: !7078)
!7117 = !DILocation(line: 3519, column: 9, scope: !7078)
!7118 = !DILocation(line: 3519, column: 14, scope: !7078)
!7119 = !DILocation(line: 0, scope: !7078)
!7120 = !DILocation(line: 3520, column: 4, scope: !7078)
!7121 = !DILocation(line: 3521, column: 2, scope: !7079)
!7122 = !DILocation(line: 3521, column: 2, scope: !7078)
!7123 = !DILocation(line: 3522, column: 36, scope: !7080)
!7124 = !DILocation(line: 3522, column: 7, scope: !7080)
!7125 = !DILocation(line: 3523, column: 5, scope: !7080)
!7126 = !DILocation(line: 3524, column: 3, scope: !7065)
!7127 = !DILocation(line: 3525, column: 1, scope: !7065)
!7128 = distinct !DISubprogram(name: "gimple_call_fn", scope: !566, file: !566, line: 1911, type: !4279, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7129)
!7129 = !{!7130}
!7130 = !DILocalVariable(name: "gs", arg: 1, scope: !7128, file: !566, line: 1911, type: !4281)
!7131 = !DILocation(line: 0, scope: !7128)
!7132 = !DILocation(line: 1914, column: 10, scope: !7128)
!7133 = !DILocation(line: 1914, column: 3, scope: !7128)
!7134 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !566, file: !566, line: 2013, type: !6456, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7135)
!7135 = !{!7136, !7137}
!7136 = !DILocalVariable(name: "gs", arg: 1, scope: !7134, file: !566, line: 2013, type: !4281)
!7137 = !DILocalVariable(name: "num_ops", scope: !7134, file: !566, line: 2015, type: !6)
!7138 = !DILocation(line: 0, scope: !7134)
!7139 = !DILocation(line: 2017, column: 13, scope: !7134)
!7140 = !DILocation(line: 2018, column: 18, scope: !7134)
!7141 = !DILocation(line: 2018, column: 3, scope: !7134)
!7142 = distinct !DISubprogram(name: "first_vi_for_offset", scope: !3, file: !3, line: 4022, type: !7143, scopeLine: 4023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7145)
!7143 = !DISubroutineType(types: !7144)
!7144 = !{!711, !711, !684}
!7145 = !{!7146, !7147}
!7146 = !DILocalVariable(name: "start", arg: 1, scope: !7142, file: !3, line: 4022, type: !711)
!7147 = !DILocalVariable(name: "offset", arg: 2, scope: !7142, file: !3, line: 4022, type: !684)
!7148 = !DILocation(line: 0, scope: !7142)
!7149 = !DILocation(line: 4025, column: 24, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 4025, column: 7)
!7151 = !DILocation(line: 4025, column: 14, scope: !7150)
!7152 = !DILocation(line: 4025, column: 7, scope: !7142)
!7153 = !DILocation(line: 4030, column: 14, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 4030, column: 7)
!7155 = !DILocation(line: 4030, column: 21, scope: !7154)
!7156 = !DILocation(line: 4030, column: 7, scope: !7142)
!7157 = !DILocation(line: 4031, column: 40, scope: !7154)
!7158 = !DILocation(line: 4031, column: 13, scope: !7154)
!7159 = !DILocation(line: 4031, column: 5, scope: !7154)
!7160 = !DILocation(line: 4033, column: 3, scope: !7142)
!7161 = !DILocation(line: 4039, column: 28, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 4039, column: 11)
!7163 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 4034, column: 5)
!7164 = !DILocation(line: 4039, column: 18, scope: !7162)
!7165 = !DILocation(line: 4040, column: 4, scope: !7162)
!7166 = !DILocation(line: 4040, column: 15, scope: !7162)
!7167 = !DILocation(line: 4040, column: 41, scope: !7162)
!7168 = !DILocation(line: 4040, column: 32, scope: !7162)
!7169 = !DILocation(line: 4039, column: 11, scope: !7163)
!7170 = !DILocation(line: 4043, column: 21, scope: !7163)
!7171 = distinct !{!7171, !7160, !7172}
!7172 = !DILocation(line: 4044, column: 5, scope: !7142)
!7173 = !DILocation(line: 4047, column: 1, scope: !7142)
!7174 = distinct !DISubprogram(name: "is_gimple_assign", scope: !566, file: !566, line: 1677, type: !6541, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7175)
!7175 = !{!7176}
!7176 = !DILocalVariable(name: "gs", arg: 1, scope: !7174, file: !566, line: 1677, type: !4281)
!7177 = !DILocation(line: 0, scope: !7174)
!7178 = !DILocation(line: 1679, column: 10, scope: !7174)
!7179 = !DILocation(line: 1679, column: 27, scope: !7174)
!7180 = !DILocation(line: 1679, column: 3, scope: !7174)
!7181 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !566, file: !566, line: 1694, type: !4279, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7182)
!7182 = !{!7183}
!7183 = !DILocalVariable(name: "gs", arg: 1, scope: !7181, file: !566, line: 1694, type: !4281)
!7184 = !DILocation(line: 0, scope: !7181)
!7185 = !DILocation(line: 1697, column: 10, scope: !7181)
!7186 = !DILocation(line: 1697, column: 3, scope: !7181)
!7187 = distinct !DISubprogram(name: "gimple_num_ops", scope: !566, file: !566, line: 1596, type: !6456, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7188)
!7188 = !{!7189}
!7189 = !DILocalVariable(name: "gs", arg: 1, scope: !7187, file: !566, line: 1596, type: !4281)
!7190 = !DILocation(line: 0, scope: !7187)
!7191 = !DILocation(line: 1598, column: 21, scope: !7187)
!7192 = !DILocation(line: 1598, column: 3, scope: !7187)
!7193 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !566, file: !566, line: 1727, type: !4279, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7194)
!7194 = !{!7195}
!7195 = !DILocalVariable(name: "gs", arg: 1, scope: !7193, file: !566, line: 1727, type: !4281)
!7196 = !DILocation(line: 0, scope: !7193)
!7197 = !DILocation(line: 1730, column: 10, scope: !7193)
!7198 = !DILocation(line: 1730, column: 3, scope: !7193)
!7199 = distinct !DISubprogram(name: "do_structure_copy", scope: !3, file: !3, line: 3266, type: !7200, scopeLine: 3267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7202)
!7200 = !DISubroutineType(types: !7201)
!7201 = !{null, !730, !730}
!7202 = !{!7203, !7204, !7205, !7206, !7207, !7208, !7209, !7210, !7214, !7215, !7216, !7217, !7218, !7219, !7220, !7224}
!7203 = !DILocalVariable(name: "lhsop", arg: 1, scope: !7199, file: !3, line: 3266, type: !730)
!7204 = !DILocalVariable(name: "rhsop", arg: 2, scope: !7199, file: !3, line: 3266, type: !730)
!7205 = !DILocalVariable(name: "lhsp", scope: !7199, file: !3, line: 3268, type: !4296)
!7206 = !DILocalVariable(name: "rhsp", scope: !7199, file: !3, line: 3268, type: !4296)
!7207 = !DILocalVariable(name: "lhsc", scope: !7199, file: !3, line: 3269, type: !2103)
!7208 = !DILocalVariable(name: "rhsc", scope: !7199, file: !3, line: 3269, type: !2103)
!7209 = !DILocalVariable(name: "j", scope: !7199, file: !3, line: 3270, type: !6)
!7210 = !DILocalVariable(name: "lhssize", scope: !7211, file: !3, line: 3284, type: !669)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 3283, column: 5)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 3280, column: 12)
!7213 = distinct !DILexicalBlock(scope: !7199, file: !3, line: 3276, column: 7)
!7214 = !DILocalVariable(name: "lhsmaxsize", scope: !7211, file: !3, line: 3284, type: !669)
!7215 = !DILocalVariable(name: "lhsoffset", scope: !7211, file: !3, line: 3284, type: !669)
!7216 = !DILocalVariable(name: "rhssize", scope: !7211, file: !3, line: 3285, type: !669)
!7217 = !DILocalVariable(name: "rhsmaxsize", scope: !7211, file: !3, line: 3285, type: !669)
!7218 = !DILocalVariable(name: "rhsoffset", scope: !7211, file: !3, line: 3285, type: !669)
!7219 = !DILocalVariable(name: "k", scope: !7211, file: !3, line: 3286, type: !6)
!7220 = !DILocalVariable(name: "lhsv", scope: !7221, file: !3, line: 3291, type: !711)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 3290, column: 2)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 3289, column: 7)
!7223 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 3289, column: 7)
!7224 = !DILocalVariable(name: "rhsv", scope: !7221, file: !3, line: 3291, type: !711)
!7225 = !DILocation(line: 0, scope: !7199)
!7226 = !DILocation(line: 3268, column: 3, scope: !7199)
!7227 = !DILocation(line: 3269, column: 3, scope: !7199)
!7228 = !DILocation(line: 3269, column: 21, scope: !7199)
!7229 = !DILocation(line: 3269, column: 35, scope: !7199)
!7230 = !DILocation(line: 3272, column: 3, scope: !7199)
!7231 = !DILocation(line: 3273, column: 3, scope: !7199)
!7232 = !DILocation(line: 3274, column: 10, scope: !7199)
!7233 = !DILocation(line: 3274, column: 8, scope: !7199)
!7234 = !DILocation(line: 3275, column: 10, scope: !7199)
!7235 = !DILocation(line: 3276, column: 13, scope: !7213)
!7236 = !DILocation(line: 3276, column: 18, scope: !7213)
!7237 = !DILocation(line: 3277, column: 7, scope: !7213)
!7238 = !DILocation(line: 3277, column: 22, scope: !7213)
!7239 = !DILocation(line: 3277, column: 35, scope: !7213)
!7240 = !DILocation(line: 3277, column: 44, scope: !7213)
!7241 = !DILocation(line: 3277, column: 48, scope: !7213)
!7242 = !DILocation(line: 3278, column: 7, scope: !7213)
!7243 = !DILocation(line: 3278, column: 16, scope: !7213)
!7244 = !DILocation(line: 3278, column: 21, scope: !7213)
!7245 = !DILocation(line: 3276, column: 7, scope: !7199)
!7246 = !DILocation(line: 3279, column: 34, scope: !7213)
!7247 = !DILocation(line: 3279, column: 40, scope: !7213)
!7248 = !DILocation(line: 3279, column: 5, scope: !7213)
!7249 = !DILocation(line: 3280, column: 23, scope: !7212)
!7250 = !DILocation(line: 3281, column: 5, scope: !7212)
!7251 = !DILocation(line: 3281, column: 20, scope: !7212)
!7252 = !DILocation(line: 3282, column: 9, scope: !7212)
!7253 = !DILocation(line: 3282, column: 23, scope: !7212)
!7254 = !DILocation(line: 3280, column: 12, scope: !7213)
!7255 = !DILocation(line: 3284, column: 7, scope: !7211)
!7256 = !DILocation(line: 3285, column: 7, scope: !7211)
!7257 = !DILocation(line: 0, scope: !7211)
!7258 = !DILocation(line: 3287, column: 7, scope: !7211)
!7259 = !DILocation(line: 3288, column: 7, scope: !7211)
!7260 = !DILocation(line: 0, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 3295, column: 8)
!7262 = !DILocation(line: 3289, column: 12, scope: !7223)
!7263 = !DILocation(line: 3289, column: 14, scope: !7223)
!7264 = !DILocation(line: 3289, column: 19, scope: !7222)
!7265 = !DILocation(line: 3289, column: 7, scope: !7223)
!7266 = !DILocation(line: 3292, column: 11, scope: !7221)
!7267 = !DILocation(line: 3293, column: 24, scope: !7221)
!7268 = !DILocation(line: 3293, column: 30, scope: !7221)
!7269 = !DILocation(line: 3293, column: 11, scope: !7221)
!7270 = !DILocation(line: 0, scope: !7221)
!7271 = !DILocation(line: 3294, column: 30, scope: !7221)
!7272 = !DILocation(line: 3294, column: 11, scope: !7221)
!7273 = !DILocation(line: 3295, column: 14, scope: !7261)
!7274 = !DILocation(line: 3295, column: 8, scope: !7261)
!7275 = !DILocation(line: 3296, column: 8, scope: !7261)
!7276 = !DILocation(line: 3296, column: 35, scope: !7261)
!7277 = !DILocation(line: 3296, column: 44, scope: !7261)
!7278 = !DILocation(line: 3296, column: 42, scope: !7261)
!7279 = !DILocation(line: 3296, column: 61, scope: !7261)
!7280 = !DILocation(line: 3297, column: 14, scope: !7261)
!7281 = !DILocation(line: 3297, column: 23, scope: !7261)
!7282 = !DILocation(line: 3297, column: 21, scope: !7261)
!7283 = !DILocation(line: 3297, column: 40, scope: !7261)
!7284 = !DILocation(line: 3296, column: 11, scope: !7261)
!7285 = !DILocation(line: 3295, column: 8, scope: !7221)
!7286 = !DILocation(line: 3298, column: 43, scope: !7261)
!7287 = !DILocation(line: 3298, column: 26, scope: !7261)
!7288 = !DILocation(line: 3298, column: 6, scope: !7261)
!7289 = !DILocation(line: 3299, column: 14, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 3299, column: 8)
!7291 = !DILocation(line: 3299, column: 23, scope: !7290)
!7292 = !DILocation(line: 3299, column: 21, scope: !7290)
!7293 = !DILocation(line: 3299, column: 41, scope: !7290)
!7294 = !DILocation(line: 3299, column: 33, scope: !7290)
!7295 = !DILocation(line: 3300, column: 16, scope: !7290)
!7296 = !DILocation(line: 3300, column: 25, scope: !7290)
!7297 = !DILocation(line: 3300, column: 23, scope: !7290)
!7298 = !DILocation(line: 3300, column: 43, scope: !7290)
!7299 = !DILocation(line: 3300, column: 35, scope: !7290)
!7300 = !DILocation(line: 3300, column: 8, scope: !7290)
!7301 = !DILocation(line: 3299, column: 8, scope: !7221)
!7302 = !DILocation(line: 3302, column: 8, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 3301, column: 6)
!7304 = !DILocation(line: 3303, column: 17, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 3303, column: 12)
!7306 = !DILocation(line: 3303, column: 14, scope: !7305)
!7307 = !DILocation(line: 3303, column: 12, scope: !7303)
!7308 = !DILocation(line: 3307, column: 6, scope: !7290)
!7309 = !DILocation(line: 0, scope: !7223)
!7310 = !DILocation(line: 3308, column: 2, scope: !7222)
!7311 = distinct !{!7311, !7265, !7312}
!7312 = !DILocation(line: 3308, column: 2, scope: !7223)
!7313 = !DILocation(line: 3309, column: 5, scope: !7212)
!7314 = !DILocation(line: 3309, column: 5, scope: !7211)
!7315 = !DILocation(line: 3311, column: 5, scope: !7212)
!7316 = !DILocation(line: 3313, column: 3, scope: !7199)
!7317 = !DILocation(line: 3314, column: 3, scope: !7199)
!7318 = !DILocation(line: 3315, column: 1, scope: !7199)
!7319 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !566, file: !566, line: 1815, type: !7320, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7322)
!7320 = !DISubroutineType(types: !7321)
!7321 = !{!139, !4281}
!7322 = !{!7323, !7324}
!7323 = !DILocalVariable(name: "gs", arg: 1, scope: !7319, file: !566, line: 1815, type: !4281)
!7324 = !DILocalVariable(name: "code", scope: !7319, file: !566, line: 1817, type: !139)
!7325 = !DILocation(line: 0, scope: !7319)
!7326 = !DILocation(line: 1820, column: 10, scope: !7319)
!7327 = !DILocation(line: 1821, column: 7, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7319, file: !566, line: 1821, column: 7)
!7329 = !DILocation(line: 1821, column: 35, scope: !7328)
!7330 = !DILocation(line: 1821, column: 7, scope: !7319)
!7331 = !DILocation(line: 1822, column: 12, scope: !7328)
!7332 = !DILocation(line: 1822, column: 5, scope: !7328)
!7333 = !DILocation(line: 1824, column: 3, scope: !7319)
!7334 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !566, file: !566, line: 1759, type: !4279, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7335)
!7335 = !{!7336}
!7336 = !DILocalVariable(name: "gs", arg: 1, scope: !7334, file: !566, line: 1759, type: !4281)
!7337 = !DILocation(line: 0, scope: !7334)
!7338 = !DILocation(line: 1763, column: 7, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7334, file: !566, line: 1763, column: 7)
!7340 = !DILocation(line: 1763, column: 27, scope: !7339)
!7341 = !DILocation(line: 1763, column: 7, scope: !7334)
!7342 = !DILocation(line: 1764, column: 12, scope: !7339)
!7343 = !DILocation(line: 1764, column: 5, scope: !7339)
!7344 = !DILocation(line: 0, scope: !7339)
!7345 = !DILocation(line: 1767, column: 1, scope: !7334)
!7346 = distinct !DISubprogram(name: "gimple_expr_type", scope: !566, file: !566, line: 4366, type: !4279, scopeLine: 4367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7347)
!7347 = !{!7348, !7349, !7350}
!7348 = !DILocalVariable(name: "stmt", arg: 1, scope: !7346, file: !566, line: 4366, type: !4281)
!7349 = !DILocalVariable(name: "code", scope: !7346, file: !566, line: 4368, type: !565)
!7350 = !DILocalVariable(name: "type", scope: !7351, file: !566, line: 4372, type: !730)
!7351 = distinct !DILexicalBlock(scope: !7352, file: !566, line: 4371, column: 5)
!7352 = distinct !DILexicalBlock(scope: !7346, file: !566, line: 4370, column: 7)
!7353 = !DILocation(line: 0, scope: !7346)
!7354 = !DILocation(line: 4368, column: 27, scope: !7346)
!7355 = !DILocation(line: 4370, column: 29, scope: !7352)
!7356 = !DILocation(line: 4378, column: 9, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7351, file: !566, line: 4377, column: 11)
!7358 = !DILocation(line: 0, scope: !7351)
!7359 = !DILocation(line: 4378, column: 2, scope: !7357)
!7360 = !DILocation(line: 4380, column: 10, scope: !7357)
!7361 = !DILocation(line: 4380, column: 2, scope: !7357)
!7362 = !DILocation(line: 4383, column: 13, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7357, file: !566, line: 4381, column: 4)
!7364 = !DILocation(line: 4384, column: 6, scope: !7363)
!7365 = !DILocation(line: 4388, column: 13, scope: !7363)
!7366 = !DILocation(line: 4389, column: 6, scope: !7363)
!7367 = !DILocation(line: 4394, column: 12, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7352, file: !566, line: 4393, column: 12)
!7369 = !DILocation(line: 4394, column: 5, scope: !7368)
!7370 = !DILocation(line: 4396, column: 12, scope: !7368)
!7371 = !DILocation(line: 4396, column: 5, scope: !7368)
!7372 = !DILocation(line: 0, scope: !7352)
!7373 = !DILocation(line: 4397, column: 1, scope: !7346)
!7374 = distinct !DISubprogram(name: "VEC_ce_s_heap_safe_push", scope: !3, file: !3, line: 407, type: !7375, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7379)
!7375 = !DISubroutineType(types: !7376)
!7376 = !{!4325, !6447, !7377}
!7377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7378, size: 64)
!7378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2115)
!7379 = !{!7380, !7381}
!7380 = !DILocalVariable(name: "vec_", arg: 1, scope: !7374, file: !3, line: 407, type: !6447)
!7381 = !DILocalVariable(name: "obj_", arg: 2, scope: !7374, file: !3, line: 407, type: !7377)
!7382 = !DILocation(line: 0, scope: !7374)
!7383 = !DILocation(line: 407, column: 1, scope: !7374)
!7384 = distinct !DISubprogram(name: "make_escape_constraint", scope: !3, file: !3, line: 3374, type: !5095, scopeLine: 3375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7385)
!7385 = !{!7386}
!7386 = !DILocalVariable(name: "op", arg: 1, scope: !7384, file: !3, line: 3374, type: !730)
!7387 = !DILocation(line: 0, scope: !7384)
!7388 = !DILocation(line: 3376, column: 3, scope: !7384)
!7389 = !DILocation(line: 3377, column: 1, scope: !7384)
!7390 = distinct !DISubprogram(name: "gimple_assign_cast_p", scope: !566, file: !566, line: 1853, type: !7391, scopeLine: 1854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7393)
!7391 = !DISubroutineType(types: !7392)
!7392 = !{!661, !1050}
!7393 = !{!7394, !7395}
!7394 = !DILocalVariable(name: "s", arg: 1, scope: !7390, file: !566, line: 1853, type: !1050)
!7395 = !DILocalVariable(name: "sc", scope: !7396, file: !566, line: 1857, type: !139)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !566, line: 1856, column: 5)
!7397 = distinct !DILexicalBlock(scope: !7390, file: !566, line: 1855, column: 7)
!7398 = !DILocation(line: 0, scope: !7390)
!7399 = !DILocation(line: 1855, column: 7, scope: !7397)
!7400 = !DILocation(line: 1855, column: 7, scope: !7390)
!7401 = !DILocation(line: 1857, column: 27, scope: !7396)
!7402 = !DILocation(line: 0, scope: !7396)
!7403 = !DILocation(line: 1858, column: 14, scope: !7396)
!7404 = !DILocation(line: 1860, column: 7, scope: !7396)
!7405 = !DILocation(line: 1864, column: 1, scope: !7390)
!7406 = distinct !DISubprogram(name: "gimple_return_retval", scope: !566, file: !566, line: 4253, type: !4279, scopeLine: 4254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7407)
!7407 = !{!7408}
!7408 = !DILocalVariable(name: "gs", arg: 1, scope: !7406, file: !566, line: 4253, type: !4281)
!7409 = !DILocation(line: 0, scope: !7406)
!7410 = !DILocation(line: 4256, column: 10, scope: !7406)
!7411 = !DILocation(line: 4256, column: 3, scope: !7406)
!7412 = distinct !DISubprogram(name: "gimple_asm_noutputs", scope: !566, file: !566, line: 2591, type: !6456, scopeLine: 2592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7413)
!7413 = !{!7414}
!7414 = !DILocalVariable(name: "gs", arg: 1, scope: !7412, file: !566, line: 2591, type: !4281)
!7415 = !DILocation(line: 0, scope: !7412)
!7416 = !DILocation(line: 2594, column: 14, scope: !7412)
!7417 = !DILocation(line: 2594, column: 25, scope: !7412)
!7418 = !DILocation(line: 2594, column: 10, scope: !7412)
!7419 = !DILocation(line: 2594, column: 3, scope: !7412)
!7420 = distinct !DISubprogram(name: "gimple_asm_output_op", scope: !566, file: !566, line: 2652, type: !6569, scopeLine: 2653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7421)
!7421 = !{!7422, !7423}
!7422 = !DILocalVariable(name: "gs", arg: 1, scope: !7420, file: !566, line: 2652, type: !4281)
!7423 = !DILocalVariable(name: "index", arg: 2, scope: !7420, file: !566, line: 2652, type: !6)
!7424 = !DILocation(line: 0, scope: !7420)
!7425 = !DILocation(line: 2655, column: 3, scope: !7420)
!7426 = !DILocation(line: 2656, column: 48, scope: !7420)
!7427 = !DILocation(line: 2656, column: 33, scope: !7420)
!7428 = !DILocation(line: 2656, column: 31, scope: !7420)
!7429 = !DILocation(line: 2656, column: 10, scope: !7420)
!7430 = !DILocation(line: 2656, column: 3, scope: !7420)
!7431 = distinct !DISubprogram(name: "gimple_asm_ninputs", scope: !566, file: !566, line: 2581, type: !6456, scopeLine: 2582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7432)
!7432 = !{!7433}
!7433 = !DILocalVariable(name: "gs", arg: 1, scope: !7431, file: !566, line: 2581, type: !4281)
!7434 = !DILocation(line: 0, scope: !7431)
!7435 = !DILocation(line: 2584, column: 25, scope: !7431)
!7436 = !DILocation(line: 2584, column: 10, scope: !7431)
!7437 = !DILocation(line: 2584, column: 3, scope: !7431)
!7438 = distinct !DISubprogram(name: "gimple_asm_input_op", scope: !566, file: !566, line: 2619, type: !6569, scopeLine: 2620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7439)
!7439 = !{!7440, !7441}
!7440 = !DILocalVariable(name: "gs", arg: 1, scope: !7438, file: !566, line: 2619, type: !4281)
!7441 = !DILocalVariable(name: "index", arg: 2, scope: !7438, file: !566, line: 2619, type: !6)
!7442 = !DILocation(line: 0, scope: !7438)
!7443 = !DILocation(line: 2622, column: 3, scope: !7438)
!7444 = !DILocation(line: 2623, column: 10, scope: !7438)
!7445 = !DILocation(line: 2623, column: 3, scope: !7438)
!7446 = distinct !DISubprogram(name: "get_constraint_for_1", scope: !3, file: !3, line: 3119, type: !7447, scopeLine: 3120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7449)
!7447 = !DISubroutineType(types: !7448)
!7448 = !{null, !730, !6447, !661}
!7449 = !{!7450, !7451, !7452, !7453}
!7450 = !DILocalVariable(name: "t", arg: 1, scope: !7446, file: !3, line: 3119, type: !730)
!7451 = !DILocalVariable(name: "results", arg: 2, scope: !7446, file: !3, line: 3119, type: !6447)
!7452 = !DILocalVariable(name: "address_p", arg: 3, scope: !7446, file: !3, line: 3119, type: !661)
!7453 = !DILocalVariable(name: "temp", scope: !7446, file: !3, line: 3121, type: !675)
!7454 = !DILocation(line: 0, scope: !7446)
!7455 = !DILocation(line: 3121, column: 3, scope: !7446)
!7456 = !DILocation(line: 3136, column: 7, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 3136, column: 7)
!7458 = !DILocation(line: 3137, column: 7, scope: !7457)
!7459 = !DILocation(line: 0, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 3151, column: 7)
!7461 = !DILocation(line: 3151, column: 7, scope: !7460)
!7462 = !DILocation(line: 3137, column: 12, scope: !7457)
!7463 = !DILocation(line: 3137, column: 26, scope: !7457)
!7464 = !DILocation(line: 3138, column: 5, scope: !7457)
!7465 = !DILocation(line: 3138, column: 8, scope: !7457)
!7466 = !DILocation(line: 3141, column: 4, scope: !7457)
!7467 = !DILocation(line: 3141, column: 7, scope: !7457)
!7468 = !DILocation(line: 3141, column: 21, scope: !7457)
!7469 = !DILocation(line: 3136, column: 7, scope: !7446)
!7470 = !DILocation(line: 3143, column: 12, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7457, file: !3, line: 3142, column: 5)
!7472 = !DILocation(line: 3143, column: 16, scope: !7471)
!7473 = !DILocation(line: 3144, column: 12, scope: !7471)
!7474 = !DILocation(line: 3144, column: 17, scope: !7471)
!7475 = !DILocation(line: 3145, column: 12, scope: !7471)
!7476 = !DILocation(line: 3145, column: 19, scope: !7471)
!7477 = !DILocation(line: 3146, column: 7, scope: !7471)
!7478 = !DILocation(line: 3147, column: 7, scope: !7471)
!7479 = !DILocation(line: 3151, column: 21, scope: !7460)
!7480 = !DILocation(line: 3151, column: 7, scope: !7446)
!7481 = !DILocation(line: 3153, column: 12, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7460, file: !3, line: 3152, column: 5)
!7483 = !DILocation(line: 3153, column: 16, scope: !7482)
!7484 = !DILocation(line: 3154, column: 12, scope: !7482)
!7485 = !DILocation(line: 3154, column: 17, scope: !7482)
!7486 = !DILocation(line: 3155, column: 12, scope: !7482)
!7487 = !DILocation(line: 3155, column: 19, scope: !7482)
!7488 = !DILocation(line: 3156, column: 7, scope: !7482)
!7489 = !DILocation(line: 3157, column: 7, scope: !7482)
!7490 = !DILocation(line: 3160, column: 11, scope: !7446)
!7491 = !DILocation(line: 3160, column: 3, scope: !7446)
!7492 = !DILocation(line: 3164, column: 2, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 3163, column: 7)
!7494 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 3161, column: 5)
!7495 = !DILocation(line: 3167, column: 37, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7493, file: !3, line: 3165, column: 4)
!7497 = !DILocation(line: 3167, column: 6, scope: !7496)
!7498 = !DILocation(line: 3168, column: 6, scope: !7496)
!7499 = !DILocation(line: 3175, column: 10, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 3174, column: 7)
!7501 = !DILocation(line: 3175, column: 2, scope: !7500)
!7502 = !DILocation(line: 3179, column: 30, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 3178, column: 6)
!7504 = distinct !DILexicalBlock(scope: !7500, file: !3, line: 3176, column: 4)
!7505 = !DILocation(line: 3179, column: 8, scope: !7503)
!7506 = !DILocation(line: 3180, column: 8, scope: !7503)
!7507 = !DILocation(line: 3181, column: 8, scope: !7503)
!7508 = !DILocation(line: 3186, column: 6, scope: !7504)
!7509 = !DILocation(line: 3187, column: 6, scope: !7504)
!7510 = !DILocation(line: 3189, column: 28, scope: !7504)
!7511 = !DILocation(line: 3189, column: 6, scope: !7504)
!7512 = !DILocation(line: 3190, column: 6, scope: !7504)
!7513 = !DILocation(line: 3198, column: 2, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 3197, column: 7)
!7515 = !DILocation(line: 3202, column: 8, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 3201, column: 6)
!7517 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 3199, column: 4)
!7518 = !DILocation(line: 3203, column: 8, scope: !7516)
!7519 = !DILocation(line: 3211, column: 2, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 3210, column: 7)
!7521 = !DILocation(line: 3212, column: 2, scope: !7520)
!7522 = !DILocation(line: 3218, column: 8, scope: !7446)
!7523 = !DILocation(line: 3218, column: 13, scope: !7446)
!7524 = !DILocation(line: 3219, column: 8, scope: !7446)
!7525 = !DILocation(line: 3219, column: 12, scope: !7446)
!7526 = !DILocation(line: 3220, column: 8, scope: !7446)
!7527 = !DILocation(line: 3220, column: 15, scope: !7446)
!7528 = !DILocation(line: 3221, column: 3, scope: !7446)
!7529 = !DILocation(line: 3222, column: 1, scope: !7446)
!7530 = distinct !DISubprogram(name: "get_constraint_for_address_of", scope: !3, file: !3, line: 3100, type: !6445, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7531)
!7531 = !{!7532, !7533, !7534, !7535}
!7532 = !DILocalVariable(name: "t", arg: 1, scope: !7530, file: !3, line: 3100, type: !730)
!7533 = !DILocalVariable(name: "results", arg: 2, scope: !7530, file: !3, line: 3100, type: !6447)
!7534 = !DILocalVariable(name: "c", scope: !7530, file: !3, line: 3102, type: !4296)
!7535 = !DILocalVariable(name: "i", scope: !7530, file: !3, line: 3103, type: !6)
!7536 = !DILocation(line: 0, scope: !7530)
!7537 = !DILocation(line: 3102, column: 3, scope: !7530)
!7538 = !DILocation(line: 3105, column: 3, scope: !7530)
!7539 = !DILocation(line: 3107, column: 8, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 3107, column: 3)
!7541 = !DILocation(line: 0, scope: !7540)
!7542 = !DILocation(line: 3107, column: 15, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 3107, column: 3)
!7544 = !DILocation(line: 3107, column: 3, scope: !7540)
!7545 = !DILocation(line: 3109, column: 11, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 3109, column: 11)
!7547 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 3108, column: 5)
!7548 = !DILocation(line: 3109, column: 14, scope: !7546)
!7549 = !DILocation(line: 3109, column: 19, scope: !7546)
!7550 = !DILocation(line: 3109, column: 11, scope: !7547)
!7551 = !DILocation(line: 3110, column: 2, scope: !7546)
!7552 = !DILocation(line: 0, scope: !7546)
!7553 = !DILocation(line: 3107, column: 52, scope: !7543)
!7554 = !DILocation(line: 3107, column: 3, scope: !7543)
!7555 = distinct !{!7555, !7544, !7556}
!7556 = !DILocation(line: 3113, column: 5, scope: !7540)
!7557 = !DILocation(line: 3114, column: 1, scope: !7530)
!7558 = distinct !DISubprogram(name: "get_constraint_for_component_ref", scope: !3, file: !3, line: 2941, type: !7447, scopeLine: 2943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7559)
!7559 = !{!7560, !7561, !7562, !7563, !7564, !7565, !7566, !7567, !7568, !7569, !7572, !7578}
!7560 = !DILocalVariable(name: "t", arg: 1, scope: !7558, file: !3, line: 2941, type: !730)
!7561 = !DILocalVariable(name: "results", arg: 2, scope: !7558, file: !3, line: 2941, type: !6447)
!7562 = !DILocalVariable(name: "address_p", arg: 3, scope: !7558, file: !3, line: 2942, type: !661)
!7563 = !DILocalVariable(name: "orig_t", scope: !7558, file: !3, line: 2944, type: !730)
!7564 = !DILocalVariable(name: "bitsize", scope: !7558, file: !3, line: 2945, type: !669)
!7565 = !DILocalVariable(name: "bitmaxsize", scope: !7558, file: !3, line: 2946, type: !669)
!7566 = !DILocalVariable(name: "bitpos", scope: !7558, file: !3, line: 2947, type: !669)
!7567 = !DILocalVariable(name: "forzero", scope: !7558, file: !3, line: 2948, type: !730)
!7568 = !DILocalVariable(name: "result", scope: !7558, file: !3, line: 2949, type: !4296)
!7569 = !DILocalVariable(name: "temp", scope: !7570, file: !3, line: 2959, type: !675)
!7570 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 2958, column: 5)
!7571 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 2957, column: 7)
!7572 = !DILocalVariable(name: "cexpr", scope: !7573, file: !3, line: 2994, type: !675)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 2989, column: 2)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 2987, column: 11)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 2981, column: 5)
!7576 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 2980, column: 12)
!7577 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 2976, column: 7)
!7578 = !DILocalVariable(name: "curr", scope: !7573, file: !3, line: 2995, type: !711)
!7579 = !DILocation(line: 0, scope: !7558)
!7580 = !DILocation(line: 2945, column: 3, scope: !7558)
!7581 = !DILocation(line: 2945, column: 17, scope: !7558)
!7582 = !DILocation(line: 2946, column: 3, scope: !7558)
!7583 = !DILocation(line: 2946, column: 17, scope: !7558)
!7584 = !DILocation(line: 2947, column: 3, scope: !7558)
!7585 = !DILocation(line: 2954, column: 3, scope: !7558)
!7586 = !DILocation(line: 2954, column: 11, scope: !7558)
!7587 = !DILocation(line: 2954, column: 35, scope: !7558)
!7588 = !DILocation(line: 2955, column: 15, scope: !7558)
!7589 = distinct !{!7589, !7585, !7588}
!7590 = !DILocation(line: 2957, column: 7, scope: !7571)
!7591 = !DILocation(line: 2957, column: 34, scope: !7571)
!7592 = !DILocation(line: 2957, column: 37, scope: !7571)
!7593 = !DILocation(line: 2957, column: 7, scope: !7558)
!7594 = !DILocation(line: 2959, column: 7, scope: !7570)
!7595 = !DILocation(line: 2961, column: 12, scope: !7570)
!7596 = !DILocation(line: 2961, column: 19, scope: !7570)
!7597 = !DILocation(line: 2962, column: 12, scope: !7570)
!7598 = !DILocation(line: 2962, column: 16, scope: !7570)
!7599 = !DILocation(line: 2963, column: 12, scope: !7570)
!7600 = !DILocation(line: 2963, column: 17, scope: !7570)
!7601 = !DILocation(line: 0, scope: !7570)
!7602 = !DILocation(line: 2964, column: 7, scope: !7570)
!7603 = !DILocation(line: 2966, column: 5, scope: !7571)
!7604 = !DILocation(line: 2968, column: 7, scope: !7558)
!7605 = !DILocation(line: 2972, column: 3, scope: !7558)
!7606 = !DILocation(line: 2973, column: 3, scope: !7558)
!7607 = !DILocation(line: 2974, column: 12, scope: !7558)
!7608 = !DILocation(line: 2976, column: 15, scope: !7577)
!7609 = !DILocation(line: 2976, column: 20, scope: !7577)
!7610 = !DILocation(line: 2977, column: 7, scope: !7577)
!7611 = !DILocation(line: 2977, column: 31, scope: !7577)
!7612 = !DILocation(line: 2977, column: 10, scope: !7577)
!7613 = !DILocation(line: 2977, column: 37, scope: !7577)
!7614 = !DILocation(line: 2976, column: 7, scope: !7558)
!7615 = !DILocation(line: 2980, column: 20, scope: !7576)
!7616 = !DILocation(line: 2979, column: 13, scope: !7577)
!7617 = !DILocation(line: 2979, column: 20, scope: !7577)
!7618 = !DILocation(line: 2979, column: 5, scope: !7577)
!7619 = !DILocation(line: 2980, column: 25, scope: !7576)
!7620 = !DILocation(line: 2980, column: 12, scope: !7577)
!7621 = !DILocation(line: 2987, column: 35, scope: !7574)
!7622 = !DILocation(line: 2987, column: 65, scope: !7574)
!7623 = !DILocation(line: 2987, column: 44, scope: !7574)
!7624 = !DILocation(line: 2987, column: 71, scope: !7574)
!7625 = !DILocation(line: 2987, column: 42, scope: !7574)
!7626 = !DILocation(line: 2988, column: 7, scope: !7574)
!7627 = !DILocation(line: 2988, column: 18, scope: !7574)
!7628 = !DILocation(line: 2988, column: 4, scope: !7574)
!7629 = !DILocation(line: 2994, column: 4, scope: !7573)
!7630 = !DILocation(line: 2994, column: 35, scope: !7573)
!7631 = !DILocation(line: 2996, column: 4, scope: !7573)
!7632 = !DILocation(line: 2997, column: 10, scope: !7573)
!7633 = !DILocation(line: 2997, column: 17, scope: !7573)
!7634 = !DILocation(line: 2998, column: 35, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 2998, column: 4)
!7636 = !DILocation(line: 2998, column: 16, scope: !7635)
!7637 = !DILocation(line: 0, scope: !7573)
!7638 = !DILocation(line: 0, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 3005, column: 9)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 3002, column: 3)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 3000, column: 12)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !3, line: 2999, column: 6)
!7643 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 2998, column: 4)
!7644 = !DILocation(line: 2998, column: 9, scope: !7635)
!7645 = !DILocation(line: 0, scope: !7635)
!7646 = !DILocation(line: 2998, column: 4, scope: !7635)
!7647 = !DILocation(line: 3000, column: 36, scope: !7641)
!7648 = !DILocation(line: 3000, column: 50, scope: !7641)
!7649 = !DILocation(line: 3001, column: 9, scope: !7641)
!7650 = !DILocation(line: 3001, column: 17, scope: !7641)
!7651 = !DILocation(line: 3000, column: 12, scope: !7641)
!7652 = !DILocation(line: 3000, column: 12, scope: !7642)
!7653 = !DILocation(line: 3003, column: 23, scope: !7640)
!7654 = !DILocation(line: 3003, column: 15, scope: !7640)
!7655 = !DILocation(line: 3004, column: 5, scope: !7640)
!7656 = !DILocation(line: 3005, column: 9, scope: !7640)
!7657 = !DILocation(line: 2998, column: 60, scope: !7643)
!7658 = !DILocation(line: 2998, column: 4, scope: !7643)
!7659 = distinct !{!7659, !7646, !7660}
!7660 = !DILocation(line: 3008, column: 6, scope: !7635)
!7661 = !DILocation(line: 3012, column: 8, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 3012, column: 8)
!7663 = !DILocation(line: 3013, column: 8, scope: !7662)
!7664 = !DILocation(line: 3013, column: 11, scope: !7662)
!7665 = !DILocation(line: 3013, column: 39, scope: !7662)
!7666 = !DILocation(line: 3012, column: 8, scope: !7573)
!7667 = !DILocation(line: 3015, column: 34, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 3014, column: 6)
!7669 = !DILocation(line: 3015, column: 15, scope: !7668)
!7670 = !DILocation(line: 3016, column: 8, scope: !7668)
!7671 = !DILocation(line: 0, scope: !7668)
!7672 = !DILocation(line: 3016, column: 21, scope: !7668)
!7673 = !DILocation(line: 3016, column: 26, scope: !7668)
!7674 = distinct !{!7674, !7670, !7675}
!7675 = !DILocation(line: 3017, column: 16, scope: !7668)
!7676 = !DILocation(line: 3018, column: 26, scope: !7668)
!7677 = !DILocation(line: 3018, column: 18, scope: !7668)
!7678 = !DILocation(line: 3019, column: 8, scope: !7668)
!7679 = !DILocation(line: 3020, column: 6, scope: !7668)
!7680 = !DILocation(line: 3026, column: 6, scope: !7662)
!7681 = !DILocation(line: 3028, column: 2, scope: !7574)
!7682 = !DILocation(line: 3028, column: 2, scope: !7573)
!7683 = !DILocation(line: 3029, column: 27, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 3029, column: 16)
!7685 = !DILocation(line: 0, scope: !7684)
!7686 = !DILocation(line: 3029, column: 16, scope: !7574)
!7687 = !DILocation(line: 3031, column: 18, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 3031, column: 8)
!7689 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 3030, column: 2)
!7690 = !DILocation(line: 3031, column: 22, scope: !7688)
!7691 = !DILocation(line: 3031, column: 33, scope: !7688)
!7692 = !DILocation(line: 3031, column: 8, scope: !7689)
!7693 = !DILocation(line: 3032, column: 6, scope: !7688)
!7694 = !DILocation(line: 3036, column: 16, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 3036, column: 6)
!7696 = !DILocation(line: 3036, column: 20, scope: !7695)
!7697 = !DILocation(line: 3036, column: 31, scope: !7695)
!7698 = !DILocation(line: 3036, column: 6, scope: !7684)
!7699 = !DILocation(line: 3037, column: 4, scope: !7695)
!7700 = !DILocation(line: 3039, column: 25, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 3039, column: 12)
!7702 = !DILocation(line: 3039, column: 12, scope: !7576)
!7703 = !DILocation(line: 3044, column: 11, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 3044, column: 11)
!7705 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 3040, column: 5)
!7706 = !DILocation(line: 3044, column: 18, scope: !7704)
!7707 = !DILocation(line: 3045, column: 4, scope: !7704)
!7708 = !DILocation(line: 3045, column: 7, scope: !7704)
!7709 = !DILocation(line: 3045, column: 18, scope: !7704)
!7710 = !DILocation(line: 3045, column: 15, scope: !7704)
!7711 = !DILocation(line: 3046, column: 4, scope: !7704)
!7712 = !DILocation(line: 3046, column: 7, scope: !7704)
!7713 = !DILocation(line: 3044, column: 11, scope: !7705)
!7714 = !DILocation(line: 3047, column: 10, scope: !7704)
!7715 = !DILocation(line: 3047, column: 17, scope: !7704)
!7716 = !DILocation(line: 3047, column: 2, scope: !7704)
!7717 = !DILocation(line: 3049, column: 10, scope: !7704)
!7718 = !DILocation(line: 3049, column: 17, scope: !7704)
!7719 = !DILocation(line: 3051, column: 25, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 3051, column: 12)
!7721 = !DILocation(line: 3051, column: 12, scope: !7701)
!7722 = !DILocation(line: 3055, column: 20, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 3052, column: 5)
!7724 = !DILocation(line: 3056, column: 15, scope: !7723)
!7725 = !DILocation(line: 3056, column: 19, scope: !7723)
!7726 = !DILocation(line: 3057, column: 15, scope: !7723)
!7727 = !DILocation(line: 3057, column: 22, scope: !7723)
!7728 = !DILocation(line: 3058, column: 5, scope: !7723)
!7729 = !DILocation(line: 3060, column: 5, scope: !7720)
!7730 = !DILocation(line: 3061, column: 1, scope: !7558)
!7731 = distinct !DISubprogram(name: "get_constraint_for_ssa_var", scope: !3, file: !3, line: 2693, type: !7447, scopeLine: 2694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7732)
!7732 = !{!7733, !7734, !7735, !7736, !7737}
!7733 = !DILocalVariable(name: "t", arg: 1, scope: !7731, file: !3, line: 2693, type: !730)
!7734 = !DILocalVariable(name: "results", arg: 2, scope: !7731, file: !3, line: 2693, type: !6447)
!7735 = !DILocalVariable(name: "address_p", arg: 3, scope: !7731, file: !3, line: 2693, type: !661)
!7736 = !DILocalVariable(name: "cexpr", scope: !7731, file: !3, line: 2695, type: !675)
!7737 = !DILocalVariable(name: "vi", scope: !7731, file: !3, line: 2696, type: !711)
!7738 = !DILocation(line: 0, scope: !7731)
!7739 = !DILocation(line: 2695, column: 3, scope: !7731)
!7740 = !DILocation(line: 2699, column: 3, scope: !7731)
!7741 = !DILocation(line: 2703, column: 7, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 2703, column: 7)
!7743 = !DILocation(line: 2703, column: 21, scope: !7742)
!7744 = !DILocation(line: 2704, column: 7, scope: !7742)
!7745 = !DILocation(line: 2704, column: 10, scope: !7742)
!7746 = !DILocation(line: 2704, column: 39, scope: !7742)
!7747 = !DILocation(line: 2705, column: 7, scope: !7742)
!7748 = !DILocation(line: 2705, column: 10, scope: !7742)
!7749 = !DILocation(line: 2703, column: 7, scope: !7731)
!7750 = !DILocation(line: 2707, column: 7, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 2706, column: 5)
!7752 = !DILocation(line: 2708, column: 7, scope: !7751)
!7753 = !DILocation(line: 2711, column: 8, scope: !7731)
!7754 = !DILocation(line: 2712, column: 19, scope: !7731)
!7755 = !DILocation(line: 2712, column: 9, scope: !7731)
!7756 = !DILocation(line: 2712, column: 13, scope: !7731)
!7757 = !DILocation(line: 2713, column: 9, scope: !7731)
!7758 = !DILocation(line: 2713, column: 14, scope: !7731)
!7759 = !DILocation(line: 2714, column: 9, scope: !7731)
!7760 = !DILocation(line: 2714, column: 16, scope: !7731)
!7761 = !DILocation(line: 2717, column: 17, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 2717, column: 7)
!7763 = !DILocation(line: 2717, column: 32, scope: !7762)
!7764 = !DILocation(line: 2717, column: 35, scope: !7762)
!7765 = !DILocation(line: 2717, column: 7, scope: !7731)
!7766 = !DILocation(line: 2719, column: 7, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 2718, column: 5)
!7768 = !DILocation(line: 2720, column: 18, scope: !7767)
!7769 = !DILocation(line: 2721, column: 17, scope: !7767)
!7770 = !DILocation(line: 2722, column: 5, scope: !7767)
!7771 = !DILocation(line: 2726, column: 8, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 2726, column: 7)
!7773 = !DILocation(line: 2727, column: 7, scope: !7772)
!7774 = !DILocation(line: 2727, column: 15, scope: !7772)
!7775 = !DILocation(line: 2727, column: 11, scope: !7772)
!7776 = !DILocation(line: 2726, column: 7, scope: !7731)
!7777 = !DILocation(line: 2729, column: 7, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2729, column: 7)
!7779 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 2728, column: 5)
!7780 = !DILocation(line: 2731, column: 20, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !3, line: 2730, column: 2)
!7782 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 2729, column: 7)
!7783 = !DILocation(line: 2731, column: 14, scope: !7781)
!7784 = !DILocation(line: 2732, column: 4, scope: !7781)
!7785 = !DILocation(line: 2729, column: 27, scope: !7782)
!7786 = !DILocation(line: 2729, column: 7, scope: !7782)
!7787 = distinct !{!7787, !7777, !7788}
!7788 = !DILocation(line: 2733, column: 2, scope: !7778)
!7789 = !DILocation(line: 2737, column: 3, scope: !7731)
!7790 = !DILocation(line: 2738, column: 1, scope: !7731)
!7791 = distinct !DISubprogram(name: "ranges_overlap_p", scope: !3163, file: !3163, line: 1192, type: !7792, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7794)
!7792 = !DISubroutineType(types: !7793)
!7793 = !{!661, !684, !684, !684, !684}
!7794 = !{!7795, !7796, !7797, !7798}
!7795 = !DILocalVariable(name: "pos1", arg: 1, scope: !7791, file: !3163, line: 1192, type: !684)
!7796 = !DILocalVariable(name: "size1", arg: 2, scope: !7791, file: !3163, line: 1193, type: !684)
!7797 = !DILocalVariable(name: "pos2", arg: 3, scope: !7791, file: !3163, line: 1194, type: !684)
!7798 = !DILocalVariable(name: "size2", arg: 4, scope: !7791, file: !3163, line: 1195, type: !684)
!7799 = !DILocation(line: 0, scope: !7791)
!7800 = !DILocation(line: 1197, column: 12, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7791, file: !3163, line: 1197, column: 7)
!7802 = !DILocation(line: 1198, column: 7, scope: !7801)
!7803 = !DILocation(line: 1198, column: 17, scope: !7801)
!7804 = !DILocation(line: 1199, column: 20, scope: !7801)
!7805 = !DILocation(line: 1199, column: 12, scope: !7801)
!7806 = !DILocation(line: 1199, column: 4, scope: !7801)
!7807 = !DILocation(line: 1201, column: 12, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7791, file: !3163, line: 1201, column: 7)
!7809 = !DILocation(line: 1202, column: 7, scope: !7808)
!7810 = !DILocation(line: 1202, column: 17, scope: !7808)
!7811 = !DILocation(line: 1203, column: 20, scope: !7808)
!7812 = !DILocation(line: 1203, column: 12, scope: !7808)
!7813 = !DILocation(line: 1203, column: 4, scope: !7808)
!7814 = !DILocation(line: 1206, column: 3, scope: !7791)
!7815 = !DILocation(line: 1207, column: 1, scope: !7791)
!7816 = distinct !DISubprogram(name: "ref_contains_array_ref", scope: !3163, file: !3163, line: 1159, type: !3164, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7817)
!7817 = !{!7818}
!7818 = !DILocalVariable(name: "ref", arg: 1, scope: !7816, file: !3163, line: 1159, type: !3166)
!7819 = !DILocation(line: 0, scope: !7816)
!7820 = !DILocation(line: 1161, column: 3, scope: !7816)
!7821 = !DILocation(line: 1163, column: 3, scope: !7816)
!7822 = !DILocation(line: 1164, column: 9, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !3163, line: 1164, column: 9)
!7824 = distinct !DILexicalBlock(scope: !7816, file: !3163, line: 1163, column: 6)
!7825 = !DILocation(line: 1164, column: 25, scope: !7823)
!7826 = !DILocation(line: 1164, column: 9, scope: !7824)
!7827 = !DILocation(line: 1166, column: 11, scope: !7824)
!7828 = !DILocation(line: 1167, column: 12, scope: !7816)
!7829 = !DILocation(line: 1167, column: 3, scope: !7824)
!7830 = distinct !{!7830, !7821, !7831}
!7831 = !DILocation(line: 1167, column: 37, scope: !7816)
!7832 = !DILocation(line: 1170, column: 1, scope: !7816)
!7833 = distinct !DISubprogram(name: "handled_component_p", scope: !140, file: !140, line: 4551, type: !3164, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7834)
!7834 = !{!7835}
!7835 = !DILocalVariable(name: "t", arg: 1, scope: !7833, file: !140, line: 4551, type: !3166)
!7836 = !DILocation(line: 0, scope: !7833)
!7837 = !DILocation(line: 4553, column: 11, scope: !7833)
!7838 = !DILocation(line: 4553, column: 3, scope: !7833)
!7839 = !DILocation(line: 4565, column: 7, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7833, file: !140, line: 4554, column: 5)
!7841 = !DILocation(line: 0, scope: !7840)
!7842 = !DILocation(line: 4567, column: 1, scope: !7833)
!7843 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !566, file: !566, line: 3100, type: !7844, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7846)
!7844 = !DISubroutineType(types: !7845)
!7845 = !{!6492, !1050, !6}
!7846 = !{!7847, !7848}
!7847 = !DILocalVariable(name: "gs", arg: 1, scope: !7843, file: !566, line: 3100, type: !1050)
!7848 = !DILocalVariable(name: "index", arg: 2, scope: !7843, file: !566, line: 3100, type: !6)
!7849 = !DILocation(line: 0, scope: !7843)
!7850 = !DILocation(line: 3103, column: 3, scope: !7843)
!7851 = !DILocation(line: 3104, column: 12, scope: !7843)
!7852 = !DILocation(line: 3104, column: 3, scope: !7843)
!7853 = distinct !DISubprogram(name: "gimple_op", scope: !566, file: !566, line: 1631, type: !6569, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7854)
!7854 = !{!7855, !7856}
!7855 = !DILocalVariable(name: "gs", arg: 1, scope: !7853, file: !566, line: 1631, type: !4281)
!7856 = !DILocalVariable(name: "i", arg: 2, scope: !7853, file: !566, line: 1631, type: !6)
!7857 = !DILocation(line: 0, scope: !7853)
!7858 = !DILocation(line: 1633, column: 7, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7853, file: !566, line: 1633, column: 7)
!7860 = !DILocation(line: 1633, column: 7, scope: !7853)
!7861 = !DILocation(line: 1638, column: 14, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7859, file: !566, line: 1634, column: 5)
!7863 = !DILocation(line: 1638, column: 7, scope: !7862)
!7864 = !DILocation(line: 0, scope: !7859)
!7865 = !DILocation(line: 1642, column: 1, scope: !7853)
!7866 = distinct !DISubprogram(name: "gimple_has_ops", scope: !566, file: !566, line: 1274, type: !6541, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7867)
!7867 = !{!7868}
!7868 = !DILocalVariable(name: "g", arg: 1, scope: !7866, file: !566, line: 1274, type: !4281)
!7869 = !DILocation(line: 0, scope: !7866)
!7870 = !DILocation(line: 1276, column: 10, scope: !7866)
!7871 = !DILocation(line: 1276, column: 26, scope: !7866)
!7872 = !DILocation(line: 1276, column: 41, scope: !7866)
!7873 = !DILocation(line: 1276, column: 44, scope: !7866)
!7874 = !DILocation(line: 1276, column: 60, scope: !7866)
!7875 = !DILocation(line: 1276, column: 3, scope: !7866)
!7876 = distinct !DISubprogram(name: "gimple_ops", scope: !566, file: !566, line: 1614, type: !7877, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7879)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!1085, !1050}
!7879 = !{!7880, !7881}
!7880 = !DILocalVariable(name: "gs", arg: 1, scope: !7876, file: !566, line: 1614, type: !1050)
!7881 = !DILocalVariable(name: "off", scope: !7876, file: !566, line: 1616, type: !682)
!7882 = !DILocation(line: 0, scope: !7876)
!7883 = !DILocation(line: 1621, column: 28, scope: !7876)
!7884 = !DILocation(line: 1621, column: 9, scope: !7876)
!7885 = !DILocation(line: 1622, column: 3, scope: !7876)
!7886 = !DILocation(line: 1624, column: 20, scope: !7876)
!7887 = !DILocation(line: 1624, column: 32, scope: !7876)
!7888 = !DILocation(line: 1624, column: 10, scope: !7876)
!7889 = !DILocation(line: 1624, column: 3, scope: !7876)
!7890 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !566, file: !566, line: 1073, type: !7891, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7893)
!7891 = !DISubroutineType(types: !7892)
!7892 = !{!604, !1050}
!7893 = !{!7894}
!7894 = !DILocalVariable(name: "gs", arg: 1, scope: !7890, file: !566, line: 1073, type: !1050)
!7895 = !DILocation(line: 0, scope: !7890)
!7896 = !DILocation(line: 1075, column: 24, scope: !7890)
!7897 = !DILocation(line: 1075, column: 10, scope: !7890)
!7898 = !DILocation(line: 1075, column: 3, scope: !7890)
!7899 = distinct !DISubprogram(name: "gss_for_code", scope: !566, file: !566, line: 1061, type: !7900, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7902)
!7900 = !DISubroutineType(types: !7901)
!7901 = !{!604, !565}
!7902 = !{!7903}
!7903 = !DILocalVariable(name: "code", arg: 1, scope: !7899, file: !566, line: 1061, type: !565)
!7904 = !DILocation(line: 0, scope: !7899)
!7905 = !DILocation(line: 1066, column: 10, scope: !7899)
!7906 = !DILocation(line: 1066, column: 3, scope: !7899)
!7907 = distinct !DISubprogram(name: "VEC_ce_s_base_index", scope: !3, file: !3, line: 406, type: !7908, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7910)
!7908 = !DISubroutineType(types: !7909)
!7909 = !{!4325, !6502, !6}
!7910 = !{!7911, !7912}
!7911 = !DILocalVariable(name: "vec_", arg: 1, scope: !7907, file: !3, line: 406, type: !6502)
!7912 = !DILocalVariable(name: "ix_", arg: 2, scope: !7907, file: !3, line: 406, type: !6)
!7913 = !DILocation(line: 0, scope: !7907)
!7914 = !DILocation(line: 406, column: 1, scope: !7907)
!7915 = distinct !DISubprogram(name: "first_or_preceding_vi_for_offset", scope: !3, file: !3, line: 4054, type: !7143, scopeLine: 4056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7916)
!7916 = !{!7917, !7918}
!7917 = !DILocalVariable(name: "start", arg: 1, scope: !7915, file: !3, line: 4054, type: !711)
!7918 = !DILocalVariable(name: "offset", arg: 2, scope: !7915, file: !3, line: 4055, type: !684)
!7919 = !DILocation(line: 0, scope: !7915)
!7920 = !DILocation(line: 4059, column: 14, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 4059, column: 7)
!7922 = !DILocation(line: 4059, column: 21, scope: !7921)
!7923 = !DILocation(line: 4059, column: 7, scope: !7915)
!7924 = !DILocation(line: 4060, column: 40, scope: !7921)
!7925 = !DILocation(line: 4060, column: 13, scope: !7921)
!7926 = !DILocation(line: 4060, column: 5, scope: !7921)
!7927 = !DILocation(line: 4068, column: 3, scope: !7915)
!7928 = !DILocation(line: 4068, column: 17, scope: !7915)
!7929 = !DILocation(line: 4068, column: 10, scope: !7915)
!7930 = !DILocation(line: 4069, column: 3, scope: !7915)
!7931 = !DILocation(line: 4069, column: 23, scope: !7915)
!7932 = !DILocation(line: 4069, column: 13, scope: !7915)
!7933 = !DILocation(line: 4070, column: 3, scope: !7915)
!7934 = !DILocation(line: 4070, column: 16, scope: !7915)
!7935 = !DILocation(line: 4070, column: 42, scope: !7915)
!7936 = !DILocation(line: 4070, column: 33, scope: !7915)
!7937 = distinct !{!7937, !7927, !7938}
!7938 = !DILocation(line: 4071, column: 20, scope: !7915)
!7939 = !DILocation(line: 4073, column: 3, scope: !7915)
!7940 = distinct !DISubprogram(name: "VEC_ce_s_base_replace", scope: !3, file: !3, line: 406, type: !7941, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7943)
!7941 = !DISubroutineType(types: !7942)
!7942 = !{!4325, !6502, !6, !7377}
!7943 = !{!7944, !7945, !7946, !7947}
!7944 = !DILocalVariable(name: "vec_", arg: 1, scope: !7940, file: !3, line: 406, type: !6502)
!7945 = !DILocalVariable(name: "ix_", arg: 2, scope: !7940, file: !3, line: 406, type: !6)
!7946 = !DILocalVariable(name: "obj_", arg: 3, scope: !7940, file: !3, line: 406, type: !7377)
!7947 = !DILocalVariable(name: "slot_", scope: !7940, file: !3, line: 406, type: !4325)
!7948 = !DILocation(line: 0, scope: !7940)
!7949 = !DILocation(line: 406, column: 1, scope: !7940)
!7950 = !DILocation(line: 406, column: 1, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 406, column: 1)
!7952 = distinct !DISubprogram(name: "gimple_call_chain", scope: !566, file: !566, line: 1983, type: !4279, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7953)
!7953 = !{!7954}
!7954 = !DILocalVariable(name: "gs", arg: 1, scope: !7952, file: !566, line: 1983, type: !4281)
!7955 = !DILocation(line: 0, scope: !7952)
!7956 = !DILocation(line: 1986, column: 10, scope: !7952)
!7957 = !DILocation(line: 1986, column: 3, scope: !7952)
!7958 = distinct !DISubprogram(name: "make_constraint_to", scope: !3, file: !3, line: 3320, type: !7959, scopeLine: 3321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7961)
!7959 = !DISubroutineType(types: !7960)
!7960 = !{null, !6, !730}
!7961 = !{!7962, !7963, !7964, !7965, !7966, !7967}
!7962 = !DILocalVariable(name: "id", arg: 1, scope: !7958, file: !3, line: 3320, type: !6)
!7963 = !DILocalVariable(name: "op", arg: 2, scope: !7958, file: !3, line: 3320, type: !730)
!7964 = !DILocalVariable(name: "rhsc", scope: !7958, file: !3, line: 3322, type: !2103)
!7965 = !DILocalVariable(name: "c", scope: !7958, file: !3, line: 3323, type: !4296)
!7966 = !DILocalVariable(name: "includes", scope: !7958, file: !3, line: 3324, type: !675)
!7967 = !DILocalVariable(name: "j", scope: !7958, file: !3, line: 3325, type: !6)
!7968 = !DILocation(line: 0, scope: !7958)
!7969 = !DILocation(line: 3322, column: 3, scope: !7958)
!7970 = !DILocation(line: 3322, column: 20, scope: !7958)
!7971 = !DILocation(line: 3323, column: 3, scope: !7958)
!7972 = !DILocation(line: 3324, column: 3, scope: !7958)
!7973 = !DILocation(line: 3327, column: 12, scope: !7958)
!7974 = !DILocation(line: 3327, column: 16, scope: !7958)
!7975 = !DILocation(line: 3328, column: 12, scope: !7958)
!7976 = !DILocation(line: 3328, column: 19, scope: !7958)
!7977 = !DILocation(line: 3329, column: 12, scope: !7958)
!7978 = !DILocation(line: 3329, column: 17, scope: !7958)
!7979 = !DILocation(line: 3331, column: 3, scope: !7958)
!7980 = !DILocation(line: 0, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 3332, column: 3)
!7982 = distinct !DILexicalBlock(scope: !7958, file: !3, line: 3332, column: 3)
!7983 = !DILocation(line: 3332, column: 8, scope: !7982)
!7984 = !DILocation(line: 0, scope: !7982)
!7985 = !DILocation(line: 3332, column: 15, scope: !7981)
!7986 = !DILocation(line: 3332, column: 3, scope: !7982)
!7987 = !DILocation(line: 3333, column: 52, scope: !7981)
!7988 = !DILocation(line: 3333, column: 25, scope: !7981)
!7989 = !DILocation(line: 3333, column: 5, scope: !7981)
!7990 = !DILocation(line: 3332, column: 48, scope: !7981)
!7991 = !DILocation(line: 3332, column: 3, scope: !7981)
!7992 = distinct !{!7992, !7986, !7993}
!7993 = !DILocation(line: 3333, column: 54, scope: !7982)
!7994 = !DILocation(line: 3334, column: 3, scope: !7958)
!7995 = !DILocation(line: 3335, column: 1, scope: !7958)
!7996 = distinct !DISubprogram(name: "gimple_call_return_slot_opt_p", scope: !566, file: !566, line: 2119, type: !7391, scopeLine: 2120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7997)
!7997 = !{!7998}
!7998 = !DILocalVariable(name: "s", arg: 1, scope: !7996, file: !566, line: 2119, type: !1050)
!7999 = !DILocation(line: 0, scope: !7996)
!8000 = !DILocation(line: 2122, column: 21, scope: !7996)
!8001 = !DILocation(line: 2122, column: 10, scope: !7996)
!8002 = !DILocation(line: 2122, column: 3, scope: !7996)
!8003 = distinct !DISubprogram(name: "gimple_expr_code", scope: !566, file: !566, line: 1438, type: !7320, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8004)
!8004 = !{!8005, !8006}
!8005 = !DILocalVariable(name: "stmt", arg: 1, scope: !8003, file: !566, line: 1438, type: !4281)
!8006 = !DILocalVariable(name: "code", scope: !8003, file: !566, line: 1440, type: !565)
!8007 = !DILocation(line: 0, scope: !8003)
!8008 = !DILocation(line: 1440, column: 27, scope: !8003)
!8009 = !DILocation(line: 1441, column: 29, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8003, file: !566, line: 1441, column: 7)
!8011 = !DILocation(line: 1442, column: 42, scope: !8010)
!8012 = !DILocation(line: 1442, column: 5, scope: !8010)
!8013 = !DILocation(line: 1446, column: 5, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8010, file: !566, line: 1443, column: 12)
!8015 = !DILocation(line: 1448, column: 5, scope: !8003)
!8016 = !DILocation(line: 1450, column: 1, scope: !8003)
!8017 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !566, file: !566, line: 1686, type: !8018, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8020)
!8018 = !DISubroutineType(types: !8019)
!8019 = !{!630, !139}
!8020 = !{!8021}
!8021 = !DILocalVariable(name: "code", arg: 1, scope: !8017, file: !566, line: 1686, type: !139)
!8022 = !DILocation(line: 0, scope: !8017)
!8023 = !DILocation(line: 1688, column: 34, scope: !8017)
!8024 = !DILocation(line: 1688, column: 10, scope: !8017)
!8025 = !DILocation(line: 1688, column: 3, scope: !8017)
!8026 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !566, file: !566, line: 1966, type: !4279, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8027)
!8027 = !{!8028, !8029, !8030}
!8028 = !DILocalVariable(name: "gs", arg: 1, scope: !8026, file: !566, line: 1966, type: !4281)
!8029 = !DILocalVariable(name: "fn", scope: !8026, file: !566, line: 1968, type: !730)
!8030 = !DILocalVariable(name: "type", scope: !8026, file: !566, line: 1969, type: !730)
!8031 = !DILocation(line: 0, scope: !8026)
!8032 = !DILocation(line: 1968, column: 13, scope: !8026)
!8033 = !DILocation(line: 1969, column: 15, scope: !8026)
!8034 = !DILocation(line: 1972, column: 10, scope: !8026)
!8035 = !DILocation(line: 1976, column: 10, scope: !8026)
!8036 = !DILocation(line: 1976, column: 3, scope: !8026)
!8037 = distinct !DISubprogram(name: "VEC_ce_s_heap_reserve", scope: !3, file: !3, line: 407, type: !8038, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8040)
!8038 = !DISubroutineType(types: !8039)
!8039 = !{!662, !6447, !662}
!8040 = !{!8041, !8042, !8043}
!8041 = !DILocalVariable(name: "vec_", arg: 1, scope: !8037, file: !3, line: 407, type: !6447)
!8042 = !DILocalVariable(name: "alloc_", arg: 2, scope: !8037, file: !3, line: 407, type: !662)
!8043 = !DILocalVariable(name: "extend", scope: !8037, file: !3, line: 407, type: !662)
!8044 = !DILocation(line: 0, scope: !8037)
!8045 = !DILocation(line: 407, column: 1, scope: !8037)
!8046 = !DILocation(line: 407, column: 1, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 407, column: 1)
!8048 = distinct !DISubprogram(name: "VEC_ce_s_base_quick_push", scope: !3, file: !3, line: 406, type: !8049, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8051)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{!4325, !6502, !7377}
!8051 = !{!8052, !8053, !8054}
!8052 = !DILocalVariable(name: "vec_", arg: 1, scope: !8048, file: !3, line: 406, type: !6502)
!8053 = !DILocalVariable(name: "obj_", arg: 2, scope: !8048, file: !3, line: 406, type: !7377)
!8054 = !DILocalVariable(name: "slot_", scope: !8048, file: !3, line: 406, type: !4325)
!8055 = !DILocation(line: 0, scope: !8048)
!8056 = !DILocation(line: 406, column: 1, scope: !8048)
!8057 = !DILocation(line: 406, column: 1, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 406, column: 1)
!8059 = distinct !DISubprogram(name: "VEC_ce_s_base_space", scope: !3, file: !3, line: 406, type: !8060, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8062)
!8060 = !DISubroutineType(types: !8061)
!8061 = !{!662, !6502, !662}
!8062 = !{!8063, !8064}
!8063 = !DILocalVariable(name: "vec_", arg: 1, scope: !8059, file: !3, line: 406, type: !6502)
!8064 = !DILocalVariable(name: "alloc_", arg: 2, scope: !8059, file: !3, line: 406, type: !662)
!8065 = !DILocation(line: 0, scope: !8059)
!8066 = !DILocation(line: 406, column: 1, scope: !8059)
!8067 = distinct !DISubprogram(name: "bb_seq", scope: !566, file: !566, line: 237, type: !8068, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8073)
!8068 = !DISubroutineType(types: !8069)
!8069 = !{!1040, !8070}
!8070 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !731, line: 112, baseType: !8071)
!8071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8072, size: 64)
!8072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!8073 = !{!8074}
!8074 = !DILocalVariable(name: "bb", arg: 1, scope: !8067, file: !566, line: 237, type: !8070)
!8075 = !DILocation(line: 0, scope: !8067)
!8076 = !DILocation(line: 239, column: 17, scope: !8067)
!8077 = !DILocation(line: 239, column: 23, scope: !8067)
!8078 = !DILocation(line: 239, column: 33, scope: !8067)
!8079 = !DILocation(line: 239, column: 43, scope: !8067)
!8080 = !DILocation(line: 239, column: 36, scope: !8067)
!8081 = !DILocation(line: 239, column: 10, scope: !8067)
!8082 = !DILocation(line: 239, column: 68, scope: !8067)
!8083 = !DILocation(line: 239, column: 3, scope: !8067)
!8084 = distinct !DISubprogram(name: "gimple_seq_first", scope: !566, file: !566, line: 159, type: !8085, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8090)
!8085 = !DISubroutineType(types: !8086)
!8086 = !{!1045, !8087}
!8087 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !731, line: 67, baseType: !8088)
!8088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8089, size: 64)
!8089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!8090 = !{!8091}
!8091 = !DILocalVariable(name: "s", arg: 1, scope: !8084, file: !566, line: 159, type: !8087)
!8092 = !DILocation(line: 0, scope: !8084)
!8093 = !DILocation(line: 161, column: 10, scope: !8084)
!8094 = !DILocation(line: 161, column: 17, scope: !8084)
!8095 = !DILocation(line: 161, column: 3, scope: !8084)
!8096 = distinct !DISubprogram(name: "init_graph", scope: !3, file: !3, line: 1103, type: !2944, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8097)
!8097 = !{!8098, !8099}
!8098 = !DILocalVariable(name: "size", arg: 1, scope: !8096, file: !3, line: 1103, type: !6)
!8099 = !DILocalVariable(name: "j", scope: !8096, file: !3, line: 1105, type: !6)
!8100 = !DILocation(line: 0, scope: !8096)
!8101 = !DILocation(line: 1107, column: 11, scope: !8096)
!8102 = !DILocation(line: 1107, column: 9, scope: !8096)
!8103 = !DILocation(line: 1108, column: 10, scope: !8096)
!8104 = !DILocation(line: 1108, column: 15, scope: !8096)
!8105 = !DILocation(line: 1109, column: 18, scope: !8096)
!8106 = !DILocation(line: 1109, column: 3, scope: !8096)
!8107 = !DILocation(line: 1109, column: 10, scope: !8096)
!8108 = !DILocation(line: 1109, column: 16, scope: !8096)
!8109 = !DILocation(line: 1110, column: 28, scope: !8096)
!8110 = !DILocation(line: 1110, column: 3, scope: !8096)
!8111 = !DILocation(line: 1110, column: 10, scope: !8096)
!8112 = !DILocation(line: 1110, column: 26, scope: !8096)
!8113 = !DILocation(line: 1111, column: 16, scope: !8096)
!8114 = !DILocation(line: 1111, column: 3, scope: !8096)
!8115 = !DILocation(line: 1111, column: 10, scope: !8096)
!8116 = !DILocation(line: 1111, column: 14, scope: !8096)
!8117 = !DILocation(line: 1112, column: 20, scope: !8096)
!8118 = !DILocation(line: 1112, column: 3, scope: !8096)
!8119 = !DILocation(line: 1112, column: 10, scope: !8096)
!8120 = !DILocation(line: 1112, column: 18, scope: !8096)
!8121 = !DILocation(line: 1113, column: 15, scope: !8096)
!8122 = !DILocation(line: 1113, column: 3, scope: !8096)
!8123 = !DILocation(line: 1113, column: 10, scope: !8096)
!8124 = !DILocation(line: 1113, column: 13, scope: !8096)
!8125 = !DILocation(line: 1114, column: 19, scope: !8096)
!8126 = !DILocation(line: 1114, column: 3, scope: !8096)
!8127 = !DILocation(line: 1114, column: 10, scope: !8096)
!8128 = !DILocation(line: 1114, column: 17, scope: !8096)
!8129 = !DILocation(line: 1116, column: 8, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1116, column: 3)
!8131 = !DILocation(line: 1116, column: 19, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 1116, column: 3)
!8133 = !DILocation(line: 1116, column: 26, scope: !8132)
!8134 = !DILocation(line: 1116, column: 17, scope: !8132)
!8135 = !DILocation(line: 1116, column: 3, scope: !8130)
!8136 = !DILocation(line: 1118, column: 14, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 1117, column: 5)
!8138 = !DILocation(line: 1118, column: 7, scope: !8137)
!8139 = !DILocation(line: 1118, column: 21, scope: !8137)
!8140 = !DILocation(line: 1119, column: 7, scope: !8137)
!8141 = !DILocation(line: 1119, column: 14, scope: !8137)
!8142 = !DILocation(line: 1119, column: 24, scope: !8137)
!8143 = !DILocation(line: 1120, column: 7, scope: !8137)
!8144 = !DILocation(line: 1120, column: 14, scope: !8137)
!8145 = !DILocation(line: 1120, column: 33, scope: !8137)
!8146 = !DILocation(line: 1116, column: 33, scope: !8132)
!8147 = !DILocation(line: 1116, column: 3, scope: !8132)
!8148 = distinct !{!8148, !8135, !8149}
!8149 = !DILocation(line: 1121, column: 5, scope: !8130)
!8150 = !DILocation(line: 1122, column: 1, scope: !8096)
!8151 = distinct !DISubprogram(name: "build_pred_graph", scope: !3, file: !3, line: 1127, type: !2853, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8152)
!8152 = !{!8153, !8154, !8155, !8156, !8160, !8161, !8162, !8163}
!8153 = !DILocalVariable(name: "i", scope: !8151, file: !3, line: 1129, type: !662)
!8154 = !DILocalVariable(name: "c", scope: !8151, file: !3, line: 1130, type: !670)
!8155 = !DILocalVariable(name: "j", scope: !8151, file: !3, line: 1131, type: !6)
!8156 = !DILocalVariable(name: "lhs", scope: !8157, file: !3, line: 1158, type: !675)
!8157 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 1157, column: 5)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 1156, column: 3)
!8159 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 1156, column: 3)
!8160 = !DILocalVariable(name: "rhs", scope: !8157, file: !3, line: 1159, type: !675)
!8161 = !DILocalVariable(name: "lhsvar", scope: !8157, file: !3, line: 1160, type: !6)
!8162 = !DILocalVariable(name: "rhsvar", scope: !8157, file: !3, line: 1161, type: !6)
!8163 = !DILocalVariable(name: "v", scope: !8164, file: !3, line: 1179, type: !711)
!8164 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 1178, column: 2)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 1177, column: 16)
!8166 = distinct !DILexicalBlock(scope: !8167, file: !3, line: 1169, column: 16)
!8167 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 1163, column: 11)
!8168 = !DILocation(line: 1130, column: 3, scope: !8151)
!8169 = !DILocation(line: 1133, column: 27, scope: !8151)
!8170 = !DILocation(line: 1133, column: 3, scope: !8151)
!8171 = !DILocation(line: 1133, column: 10, scope: !8151)
!8172 = !DILocation(line: 1133, column: 25, scope: !8151)
!8173 = !DILocation(line: 1134, column: 18, scope: !8151)
!8174 = !DILocation(line: 1134, column: 3, scope: !8151)
!8175 = !DILocation(line: 1134, column: 10, scope: !8151)
!8176 = !DILocation(line: 1134, column: 16, scope: !8151)
!8177 = !DILocation(line: 1135, column: 26, scope: !8151)
!8178 = !DILocation(line: 1135, column: 3, scope: !8151)
!8179 = !DILocation(line: 1135, column: 10, scope: !8151)
!8180 = !DILocation(line: 1135, column: 24, scope: !8151)
!8181 = !DILocation(line: 1136, column: 22, scope: !8151)
!8182 = !DILocation(line: 1136, column: 3, scope: !8151)
!8183 = !DILocation(line: 1136, column: 10, scope: !8151)
!8184 = !DILocation(line: 1136, column: 20, scope: !8151)
!8185 = !DILocation(line: 1137, column: 23, scope: !8151)
!8186 = !DILocation(line: 1137, column: 3, scope: !8151)
!8187 = !DILocation(line: 1137, column: 10, scope: !8151)
!8188 = !DILocation(line: 1137, column: 21, scope: !8151)
!8189 = !DILocation(line: 1138, column: 22, scope: !8151)
!8190 = !DILocation(line: 1138, column: 3, scope: !8151)
!8191 = !DILocation(line: 1138, column: 10, scope: !8151)
!8192 = !DILocation(line: 1138, column: 20, scope: !8151)
!8193 = !DILocation(line: 1139, column: 19, scope: !8151)
!8194 = !DILocation(line: 1139, column: 3, scope: !8151)
!8195 = !DILocation(line: 1139, column: 10, scope: !8151)
!8196 = !DILocation(line: 1139, column: 17, scope: !8151)
!8197 = !DILocation(line: 1140, column: 47, scope: !8151)
!8198 = !DILocation(line: 1140, column: 25, scope: !8151)
!8199 = !DILocation(line: 1140, column: 3, scope: !8151)
!8200 = !DILocation(line: 1140, column: 10, scope: !8151)
!8201 = !DILocation(line: 1140, column: 23, scope: !8151)
!8202 = !DILocation(line: 1141, column: 26, scope: !8151)
!8203 = !DILocation(line: 1141, column: 3, scope: !8151)
!8204 = !DILocation(line: 1141, column: 10, scope: !8151)
!8205 = !DILocation(line: 1141, column: 24, scope: !8151)
!8206 = !DILocation(line: 1142, column: 24, scope: !8151)
!8207 = !DILocation(line: 1142, column: 3, scope: !8151)
!8208 = !DILocation(line: 0, scope: !8151)
!8209 = !DILocation(line: 1144, column: 8, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 1144, column: 3)
!8211 = !DILocation(line: 0, scope: !8210)
!8212 = !DILocation(line: 1144, column: 19, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 1144, column: 3)
!8214 = !DILocation(line: 1144, column: 17, scope: !8213)
!8215 = !DILocation(line: 1144, column: 3, scope: !8210)
!8216 = !DILocation(line: 1150, column: 3, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 1150, column: 3)
!8218 = !DILocation(line: 1146, column: 12, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 1146, column: 11)
!8220 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 1145, column: 5)
!8221 = !DILocation(line: 1146, column: 29, scope: !8219)
!8222 = !DILocation(line: 1146, column: 11, scope: !8220)
!8223 = !DILocation(line: 1147, column: 11, scope: !8219)
!8224 = !DILocation(line: 1147, column: 18, scope: !8219)
!8225 = !DILocation(line: 1147, column: 2, scope: !8219)
!8226 = !DILocation(line: 1144, column: 36, scope: !8213)
!8227 = !DILocation(line: 1144, column: 3, scope: !8213)
!8228 = distinct !{!8228, !8215, !8229}
!8229 = !DILocation(line: 1148, column: 5, scope: !8210)
!8230 = !DILocation(line: 0, scope: !8217)
!8231 = !DILocation(line: 1150, column: 19, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 1150, column: 3)
!8233 = !DILocation(line: 1150, column: 26, scope: !8232)
!8234 = !DILocation(line: 1150, column: 17, scope: !8232)
!8235 = !DILocation(line: 1153, column: 3, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 1153, column: 3)
!8237 = !DILocation(line: 1151, column: 12, scope: !8232)
!8238 = !DILocation(line: 1151, column: 5, scope: !8232)
!8239 = !DILocation(line: 1151, column: 22, scope: !8232)
!8240 = !DILocation(line: 1150, column: 33, scope: !8232)
!8241 = !DILocation(line: 1150, column: 3, scope: !8232)
!8242 = distinct !{!8242, !8216, !8243}
!8243 = !DILocation(line: 1151, column: 25, scope: !8217)
!8244 = !DILocation(line: 0, scope: !8236)
!8245 = !DILocation(line: 1153, column: 19, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 1153, column: 3)
!8247 = !DILocation(line: 1153, column: 17, scope: !8246)
!8248 = !DILocation(line: 0, scope: !8157)
!8249 = !DILocation(line: 0, scope: !8167)
!8250 = !DILocation(line: 0, scope: !8166)
!8251 = !DILocation(line: 0, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 1208, column: 16)
!8253 = !DILocation(line: 1156, column: 3, scope: !8159)
!8254 = !DILocation(line: 1154, column: 5, scope: !8246)
!8255 = !DILocation(line: 1154, column: 12, scope: !8246)
!8256 = !DILocation(line: 1154, column: 31, scope: !8246)
!8257 = !DILocation(line: 1153, column: 52, scope: !8246)
!8258 = !DILocation(line: 1153, column: 3, scope: !8246)
!8259 = distinct !{!8259, !8235, !8260}
!8260 = !DILocation(line: 1154, column: 34, scope: !8236)
!8261 = !DILocation(line: 0, scope: !8159)
!8262 = !DILocation(line: 1156, column: 15, scope: !8158)
!8263 = !DILocation(line: 1158, column: 7, scope: !8157)
!8264 = !DILocation(line: 1158, column: 36, scope: !8157)
!8265 = !DILocation(line: 1158, column: 39, scope: !8157)
!8266 = !DILocation(line: 1159, column: 7, scope: !8157)
!8267 = !DILocation(line: 1159, column: 39, scope: !8157)
!8268 = !DILocation(line: 1160, column: 33, scope: !8157)
!8269 = !DILocation(line: 1161, column: 33, scope: !8157)
!8270 = !DILocation(line: 1163, column: 15, scope: !8167)
!8271 = !DILocation(line: 1163, column: 20, scope: !8167)
!8272 = !DILocation(line: 1163, column: 11, scope: !8157)
!8273 = !DILocation(line: 1166, column: 12, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8275, file: !3, line: 1166, column: 8)
!8275 = distinct !DILexicalBlock(scope: !8167, file: !3, line: 1164, column: 2)
!8276 = !DILocation(line: 1166, column: 19, scope: !8274)
!8277 = !DILocation(line: 1166, column: 24, scope: !8274)
!8278 = !DILocation(line: 1166, column: 31, scope: !8274)
!8279 = !DILocation(line: 1166, column: 38, scope: !8274)
!8280 = !DILocation(line: 1166, column: 43, scope: !8274)
!8281 = !DILocation(line: 1166, column: 50, scope: !8274)
!8282 = !DILocation(line: 1166, column: 55, scope: !8274)
!8283 = !DILocation(line: 1166, column: 8, scope: !8275)
!8284 = !DILocation(line: 1167, column: 27, scope: !8274)
!8285 = !DILocation(line: 1167, column: 34, scope: !8274)
!8286 = !DILocation(line: 1167, column: 49, scope: !8274)
!8287 = !DILocation(line: 1167, column: 6, scope: !8274)
!8288 = !DILocation(line: 1169, column: 20, scope: !8166)
!8289 = !DILocation(line: 1169, column: 25, scope: !8166)
!8290 = !DILocation(line: 1169, column: 16, scope: !8167)
!8291 = !DILocation(line: 1172, column: 12, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 1172, column: 8)
!8293 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 1170, column: 2)
!8294 = !DILocation(line: 1172, column: 19, scope: !8292)
!8295 = !DILocation(line: 1172, column: 24, scope: !8292)
!8296 = !DILocation(line: 1172, column: 31, scope: !8292)
!8297 = !DILocation(line: 1172, column: 38, scope: !8292)
!8298 = !DILocation(line: 1172, column: 43, scope: !8292)
!8299 = !DILocation(line: 1172, column: 55, scope: !8292)
!8300 = !DILocation(line: 1172, column: 8, scope: !8293)
!8301 = !DILocation(line: 1173, column: 27, scope: !8292)
!8302 = !DILocation(line: 1173, column: 42, scope: !8292)
!8303 = !DILocation(line: 1173, column: 57, scope: !8292)
!8304 = !DILocation(line: 1173, column: 6, scope: !8292)
!8305 = !DILocation(line: 1175, column: 17, scope: !8292)
!8306 = !DILocation(line: 1175, column: 24, scope: !8292)
!8307 = !DILocation(line: 1175, column: 6, scope: !8292)
!8308 = !DILocation(line: 1177, column: 25, scope: !8165)
!8309 = !DILocation(line: 1177, column: 16, scope: !8166)
!8310 = !DILocation(line: 1182, column: 8, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 1182, column: 8)
!8312 = !DILocation(line: 1182, column: 15, scope: !8311)
!8313 = !DILocation(line: 1182, column: 33, scope: !8311)
!8314 = !DILocation(line: 1182, column: 8, scope: !8164)
!8315 = !DILocation(line: 1183, column: 33, scope: !8311)
!8316 = !DILocation(line: 1183, column: 6, scope: !8311)
!8317 = !DILocation(line: 1183, column: 13, scope: !8311)
!8318 = !DILocation(line: 1183, column: 31, scope: !8311)
!8319 = !DILocation(line: 1184, column: 20, scope: !8164)
!8320 = !DILocation(line: 0, scope: !8164)
!8321 = !DILocation(line: 1184, column: 27, scope: !8164)
!8322 = !DILocation(line: 1184, column: 4, scope: !8164)
!8323 = !DILocation(line: 1186, column: 8, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 1186, column: 8)
!8325 = !DILocation(line: 1186, column: 15, scope: !8324)
!8326 = !DILocation(line: 1186, column: 34, scope: !8324)
!8327 = !DILocation(line: 1186, column: 8, scope: !8164)
!8328 = !DILocation(line: 1187, column: 34, scope: !8324)
!8329 = !DILocation(line: 1187, column: 6, scope: !8324)
!8330 = !DILocation(line: 1187, column: 13, scope: !8324)
!8331 = !DILocation(line: 1187, column: 32, scope: !8324)
!8332 = !DILocation(line: 1188, column: 20, scope: !8164)
!8333 = !DILocation(line: 1188, column: 27, scope: !8164)
!8334 = !DILocation(line: 1188, column: 4, scope: !8164)
!8335 = !DILocation(line: 1191, column: 29, scope: !8164)
!8336 = !DILocation(line: 1191, column: 36, scope: !8164)
!8337 = !DILocation(line: 1191, column: 51, scope: !8164)
!8338 = !DILocation(line: 1191, column: 4, scope: !8164)
!8339 = !DILocation(line: 1194, column: 15, scope: !8164)
!8340 = !DILocation(line: 1194, column: 22, scope: !8164)
!8341 = !DILocation(line: 1194, column: 4, scope: !8164)
!8342 = !DILocation(line: 1195, column: 15, scope: !8164)
!8343 = !DILocation(line: 1196, column: 19, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 1196, column: 15)
!8345 = !DILocation(line: 1196, column: 16, scope: !8344)
!8346 = !DILocation(line: 1196, column: 15, scope: !8164)
!8347 = !DILocation(line: 1198, column: 42, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 1197, column: 13)
!8349 = !DILocation(line: 1198, column: 19, scope: !8348)
!8350 = !DILocation(line: 1199, column: 15, scope: !8348)
!8351 = !DILocation(line: 0, scope: !8348)
!8352 = !DILocation(line: 1201, column: 30, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8348, file: !3, line: 1200, column: 17)
!8354 = !DILocation(line: 1201, column: 37, scope: !8353)
!8355 = !DILocation(line: 1201, column: 54, scope: !8353)
!8356 = !DILocation(line: 1201, column: 19, scope: !8353)
!8357 = !DILocation(line: 1202, column: 26, scope: !8353)
!8358 = !DILocation(line: 1204, column: 24, scope: !8348)
!8359 = !DILocation(line: 1203, column: 17, scope: !8353)
!8360 = distinct !{!8360, !8350, !8361}
!8361 = !DILocation(line: 1204, column: 31, scope: !8348)
!8362 = !DILocation(line: 1206, column: 20, scope: !8164)
!8363 = !DILocation(line: 1206, column: 27, scope: !8164)
!8364 = !DILocation(line: 1206, column: 4, scope: !8164)
!8365 = !DILocation(line: 1207, column: 2, scope: !8164)
!8366 = !DILocation(line: 1208, column: 23, scope: !8252)
!8367 = !DILocation(line: 1209, column: 19, scope: !8252)
!8368 = !DILocation(line: 1209, column: 9, scope: !8252)
!8369 = !DILocation(line: 1217, column: 20, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 1217, column: 16)
!8371 = !DILocation(line: 1209, column: 36, scope: !8252)
!8372 = !DILocation(line: 1209, column: 43, scope: !8252)
!8373 = !DILocation(line: 1209, column: 48, scope: !8252)
!8374 = !DILocation(line: 1209, column: 55, scope: !8252)
!8375 = !DILocation(line: 1209, column: 62, scope: !8252)
!8376 = !DILocation(line: 1208, column: 16, scope: !8165)
!8377 = !DILocation(line: 1212, column: 25, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 1210, column: 2)
!8379 = !DILocation(line: 1212, column: 4, scope: !8378)
!8380 = !DILocation(line: 1214, column: 29, scope: !8378)
!8381 = !DILocation(line: 1214, column: 36, scope: !8378)
!8382 = !DILocation(line: 1214, column: 51, scope: !8378)
!8383 = !DILocation(line: 1215, column: 8, scope: !8378)
!8384 = !DILocation(line: 1215, column: 23, scope: !8378)
!8385 = !DILocation(line: 1214, column: 4, scope: !8378)
!8386 = !DILocation(line: 1216, column: 2, scope: !8378)
!8387 = !DILocation(line: 1217, column: 27, scope: !8370)
!8388 = !DILocation(line: 1217, column: 32, scope: !8370)
!8389 = !DILocation(line: 1219, column: 12, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 1219, column: 8)
!8391 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 1218, column: 2)
!8392 = !DILocation(line: 1217, column: 39, scope: !8370)
!8393 = !DILocation(line: 1217, column: 46, scope: !8370)
!8394 = !DILocation(line: 1217, column: 16, scope: !8252)
!8395 = !DILocation(line: 1219, column: 19, scope: !8390)
!8396 = !DILocation(line: 1219, column: 8, scope: !8391)
!8397 = !DILocation(line: 1220, column: 17, scope: !8390)
!8398 = !DILocation(line: 1220, column: 24, scope: !8390)
!8399 = !DILocation(line: 1220, column: 6, scope: !8390)
!8400 = !DILocation(line: 1221, column: 13, scope: !8390)
!8401 = !DILocation(line: 1222, column: 17, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 1221, column: 13)
!8403 = !DILocation(line: 1222, column: 24, scope: !8402)
!8404 = !DILocation(line: 1222, column: 6, scope: !8402)
!8405 = !DILocation(line: 1224, column: 5, scope: !8158)
!8406 = !DILocation(line: 1156, column: 63, scope: !8158)
!8407 = !DILocation(line: 1156, column: 3, scope: !8158)
!8408 = distinct !{!8408, !8253, !8409}
!8409 = !DILocation(line: 1224, column: 5, scope: !8159)
!8410 = !DILocation(line: 1225, column: 1, scope: !8151)
!8411 = distinct !DISubprogram(name: "perform_var_substitution", scope: !3, file: !3, line: 2112, type: !8412, scopeLine: 2113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8414)
!8412 = !DISubroutineType(types: !8413)
!8413 = !{!2149, !2268}
!8414 = !{!8415, !8416, !8417, !8418, !8419, !8423, !8424, !8425, !8426, !8431}
!8415 = !DILocalVariable(name: "graph", arg: 1, scope: !8411, file: !3, line: 2112, type: !2268)
!8416 = !DILocalVariable(name: "i", scope: !8411, file: !3, line: 2114, type: !6)
!8417 = !DILocalVariable(name: "size", scope: !8411, file: !3, line: 2115, type: !6)
!8418 = !DILocalVariable(name: "si", scope: !8411, file: !3, line: 2116, type: !2149)
!8419 = !DILocalVariable(name: "pointed_by", scope: !8420, file: !3, line: 2141, type: !1598)
!8420 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 2140, column: 5)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 2139, column: 3)
!8422 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2139, column: 3)
!8423 = !DILocalVariable(name: "bi", scope: !8420, file: !3, line: 2142, type: !2961)
!8424 = !DILocalVariable(name: "j", scope: !8420, file: !3, line: 2143, type: !6)
!8425 = !DILocalVariable(name: "label", scope: !8420, file: !3, line: 2144, type: !6)
!8426 = !DILocalVariable(name: "direct_node", scope: !8427, file: !3, line: 2184, type: !661)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 2183, column: 7)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 2182, column: 5)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 2182, column: 5)
!8430 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2181, column: 7)
!8431 = !DILocalVariable(name: "node", scope: !8432, file: !3, line: 2198, type: !6)
!8432 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 2197, column: 5)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 2196, column: 3)
!8434 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2196, column: 3)
!8435 = !DILocation(line: 0, scope: !8411)
!8436 = !DILocation(line: 2115, column: 30, scope: !8411)
!8437 = !DILocation(line: 2116, column: 40, scope: !8411)
!8438 = !DILocation(line: 2116, column: 25, scope: !8411)
!8439 = !DILocation(line: 2118, column: 3, scope: !8411)
!8440 = !DILocation(line: 2119, column: 31, scope: !8411)
!8441 = !DILocation(line: 2119, column: 29, scope: !8411)
!8442 = !DILocation(line: 2121, column: 32, scope: !8411)
!8443 = !DILocation(line: 2121, column: 30, scope: !8411)
!8444 = !DILocation(line: 2123, column: 23, scope: !8411)
!8445 = !DILocation(line: 2124, column: 24, scope: !8411)
!8446 = !DILocation(line: 0, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 2129, column: 9)
!8448 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 2128, column: 3)
!8449 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2128, column: 3)
!8450 = !DILocation(line: 2128, column: 8, scope: !8449)
!8451 = !DILocation(line: 0, scope: !8449)
!8452 = !DILocation(line: 2128, column: 19, scope: !8448)
!8453 = !DILocation(line: 2128, column: 17, scope: !8448)
!8454 = !DILocation(line: 2128, column: 3, scope: !8449)
!8455 = !DILocation(line: 2129, column: 10, scope: !8447)
!8456 = !DILocation(line: 2129, column: 9, scope: !8448)
!8457 = !DILocation(line: 2130, column: 7, scope: !8447)
!8458 = !DILocation(line: 2128, column: 36, scope: !8448)
!8459 = !DILocation(line: 2128, column: 3, scope: !8448)
!8460 = distinct !{!8460, !8454, !8461}
!8461 = !DILocation(line: 2130, column: 53, scope: !8449)
!8462 = !DILocation(line: 2132, column: 3, scope: !8411)
!8463 = !DILocation(line: 2134, column: 8, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2134, column: 3)
!8465 = !DILocation(line: 0, scope: !8464)
!8466 = !DILocation(line: 2134, column: 19, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 2134, column: 3)
!8468 = !DILocation(line: 2134, column: 17, scope: !8467)
!8469 = !DILocation(line: 2134, column: 3, scope: !8464)
!8470 = !DILocation(line: 0, scope: !8420)
!8471 = !DILocation(line: 0, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 2146, column: 11)
!8473 = !DILocation(line: 0, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 2153, column: 2)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 2152, column: 7)
!8476 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 2152, column: 7)
!8477 = !DILocation(line: 2139, column: 3, scope: !8422)
!8478 = !DILocation(line: 2135, column: 10, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 2135, column: 9)
!8480 = !DILocation(line: 2135, column: 9, scope: !8467)
!8481 = !DILocation(line: 2136, column: 7, scope: !8479)
!8482 = !DILocation(line: 2134, column: 36, scope: !8467)
!8483 = !DILocation(line: 2134, column: 3, scope: !8467)
!8484 = distinct !{!8484, !8469, !8485}
!8485 = !DILocation(line: 2136, column: 50, scope: !8464)
!8486 = !DILocation(line: 0, scope: !8422)
!8487 = !DILocation(line: 2139, column: 19, scope: !8421)
!8488 = !DILocation(line: 2139, column: 17, scope: !8421)
!8489 = !DILocation(line: 2142, column: 7, scope: !8420)
!8490 = !DILocation(line: 2143, column: 7, scope: !8420)
!8491 = !DILocation(line: 2146, column: 19, scope: !8472)
!8492 = !DILocation(line: 2146, column: 12, scope: !8472)
!8493 = !DILocation(line: 2146, column: 11, scope: !8420)
!8494 = !DILocation(line: 2148, column: 20, scope: !8420)
!8495 = !DILocation(line: 2152, column: 7, scope: !8476)
!8496 = !DILocation(line: 2152, column: 7, scope: !8475)
!8497 = !DILocation(line: 2155, column: 13, scope: !8474)
!8498 = !DILocation(line: 2155, column: 31, scope: !8474)
!8499 = !DILocation(line: 2155, column: 44, scope: !8474)
!8500 = !DILocation(line: 2155, column: 27, scope: !8474)
!8501 = !DILocation(line: 2155, column: 6, scope: !8474)
!8502 = !DILocation(line: 2154, column: 4, scope: !8474)
!8503 = distinct !{!8503, !8495, !8504}
!8504 = !DILocation(line: 2156, column: 2, scope: !8476)
!8505 = !DILocation(line: 2158, column: 7, scope: !8420)
!8506 = !DILocation(line: 2162, column: 35, scope: !8420)
!8507 = !DILocation(line: 2162, column: 15, scope: !8420)
!8508 = !DILocation(line: 2164, column: 17, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 2164, column: 11)
!8510 = !DILocation(line: 2164, column: 11, scope: !8420)
!8511 = !DILocation(line: 2166, column: 32, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 2165, column: 2)
!8513 = !DILocation(line: 2167, column: 21, scope: !8512)
!8514 = !DILocation(line: 2167, column: 4, scope: !8512)
!8515 = !DILocation(line: 2169, column: 2, scope: !8512)
!8516 = !DILocation(line: 2172, column: 8, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 2172, column: 8)
!8518 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 2171, column: 2)
!8519 = !DILocation(line: 2172, column: 18, scope: !8517)
!8520 = !DILocation(line: 2172, column: 22, scope: !8517)
!8521 = !DILocation(line: 2172, column: 33, scope: !8517)
!8522 = !DILocation(line: 2172, column: 8, scope: !8518)
!8523 = !DILocation(line: 2174, column: 8, scope: !8517)
!8524 = !DILocation(line: 2174, column: 25, scope: !8517)
!8525 = !DILocation(line: 2173, column: 6, scope: !8517)
!8526 = !DILocation(line: 2175, column: 4, scope: !8518)
!8527 = !DILocation(line: 2177, column: 14, scope: !8420)
!8528 = !DILocation(line: 2177, column: 7, scope: !8420)
!8529 = !DILocation(line: 2177, column: 27, scope: !8420)
!8530 = !DILocation(line: 2179, column: 5, scope: !8421)
!8531 = !DILocation(line: 2139, column: 36, scope: !8421)
!8532 = !DILocation(line: 2139, column: 3, scope: !8421)
!8533 = distinct !{!8533, !8477, !8534}
!8534 = !DILocation(line: 2179, column: 5, scope: !8422)
!8535 = !DILocation(line: 2181, column: 7, scope: !8430)
!8536 = !DILocation(line: 2181, column: 17, scope: !8430)
!8537 = !DILocation(line: 2181, column: 21, scope: !8430)
!8538 = !DILocation(line: 2181, column: 32, scope: !8430)
!8539 = !DILocation(line: 2181, column: 7, scope: !8411)
!8540 = !DILocation(line: 0, scope: !8427)
!8541 = !DILocation(line: 2182, column: 5, scope: !8429)
!8542 = !DILocation(line: 0, scope: !8429)
!8543 = !DILocation(line: 2182, column: 21, scope: !8428)
!8544 = !DILocation(line: 2182, column: 19, scope: !8428)
!8545 = !DILocation(line: 2184, column: 21, scope: !8427)
!8546 = !DILocation(line: 2185, column: 11, scope: !8427)
!8547 = !DILocation(line: 2188, column: 4, scope: !8427)
!8548 = !DILocation(line: 2189, column: 4, scope: !8427)
!8549 = !DILocation(line: 2189, column: 21, scope: !8427)
!8550 = !DILocation(line: 2190, column: 11, scope: !8427)
!8551 = !DILocation(line: 2190, column: 29, scope: !8427)
!8552 = !DILocation(line: 2190, column: 25, scope: !8427)
!8553 = !DILocation(line: 2190, column: 4, scope: !8427)
!8554 = !DILocation(line: 2191, column: 11, scope: !8427)
!8555 = !DILocation(line: 2191, column: 4, scope: !8427)
!8556 = !DILocation(line: 2185, column: 2, scope: !8427)
!8557 = !DILocation(line: 2182, column: 38, scope: !8428)
!8558 = !DILocation(line: 2182, column: 5, scope: !8428)
!8559 = distinct !{!8559, !8541, !8560}
!8560 = !DILocation(line: 2192, column: 7, scope: !8429)
!8561 = !DILocation(line: 2196, column: 8, scope: !8434)
!8562 = !DILocation(line: 0, scope: !8434)
!8563 = !DILocation(line: 2196, column: 19, scope: !8433)
!8564 = !DILocation(line: 2196, column: 17, scope: !8433)
!8565 = !DILocation(line: 2196, column: 3, scope: !8434)
!8566 = !DILocation(line: 2198, column: 31, scope: !8432)
!8567 = !DILocation(line: 2198, column: 27, scope: !8432)
!8568 = !DILocation(line: 0, scope: !8432)
!8569 = !DILocation(line: 2200, column: 18, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8432, file: !3, line: 2200, column: 11)
!8571 = !DILocation(line: 2200, column: 11, scope: !8570)
!8572 = !DILocation(line: 2200, column: 38, scope: !8570)
!8573 = !DILocation(line: 2200, column: 11, scope: !8432)
!8574 = !DILocation(line: 2202, column: 8, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 2202, column: 8)
!8576 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 2201, column: 2)
!8577 = !DILocation(line: 2202, column: 18, scope: !8575)
!8578 = !DILocation(line: 2202, column: 22, scope: !8575)
!8579 = !DILocation(line: 2202, column: 33, scope: !8575)
!8580 = !DILocation(line: 2202, column: 8, scope: !8576)
!8581 = !DILocation(line: 2205, column: 8, scope: !8575)
!8582 = !DILocation(line: 2205, column: 28, scope: !8575)
!8583 = !DILocation(line: 2203, column: 6, scope: !8575)
!8584 = !DILocation(line: 2206, column: 25, scope: !8576)
!8585 = !DILocation(line: 2207, column: 4, scope: !8576)
!8586 = !DILocation(line: 2208, column: 2, scope: !8576)
!8587 = !DILocation(line: 2196, column: 36, scope: !8433)
!8588 = !DILocation(line: 2196, column: 3, scope: !8433)
!8589 = distinct !{!8589, !8565, !8590}
!8590 = !DILocation(line: 2209, column: 5, scope: !8434)
!8591 = !DILocation(line: 2211, column: 3, scope: !8411)
!8592 = distinct !DISubprogram(name: "rewrite_constraints", scope: !3, file: !3, line: 2339, type: !8593, scopeLine: 2341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8595)
!8593 = !DISubroutineType(types: !8594)
!8594 = !{null, !2268, !2149}
!8595 = !{!8596, !8597, !8598, !8599, !8600, !8601, !8605, !8606, !8607, !8608, !8609, !8610, !8611}
!8596 = !DILocalVariable(name: "graph", arg: 1, scope: !8592, file: !3, line: 2339, type: !2268)
!8597 = !DILocalVariable(name: "si", arg: 2, scope: !8592, file: !3, line: 2340, type: !2149)
!8598 = !DILocalVariable(name: "i", scope: !8592, file: !3, line: 2342, type: !662)
!8599 = !DILocalVariable(name: "j", scope: !8592, file: !3, line: 2343, type: !6)
!8600 = !DILocalVariable(name: "c", scope: !8592, file: !3, line: 2344, type: !670)
!8601 = !DILocalVariable(name: "lhs", scope: !8602, file: !3, line: 2351, type: !675)
!8602 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 2350, column: 5)
!8603 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 2349, column: 3)
!8604 = distinct !DILexicalBlock(scope: !8592, file: !3, line: 2349, column: 3)
!8605 = !DILocalVariable(name: "rhs", scope: !8602, file: !3, line: 2352, type: !675)
!8606 = !DILocalVariable(name: "lhsvar", scope: !8602, file: !3, line: 2353, type: !6)
!8607 = !DILocalVariable(name: "rhsvar", scope: !8602, file: !3, line: 2354, type: !6)
!8608 = !DILocalVariable(name: "lhsnode", scope: !8602, file: !3, line: 2355, type: !6)
!8609 = !DILocalVariable(name: "rhsnode", scope: !8602, file: !3, line: 2355, type: !6)
!8610 = !DILocalVariable(name: "lhslabel", scope: !8602, file: !3, line: 2356, type: !6)
!8611 = !DILocalVariable(name: "rhslabel", scope: !8602, file: !3, line: 2356, type: !6)
!8612 = !DILocation(line: 0, scope: !8592)
!8613 = !DILocation(line: 2344, column: 3, scope: !8592)
!8614 = !DILocation(line: 0, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 2346, column: 3)
!8616 = distinct !DILexicalBlock(scope: !8592, file: !3, line: 2346, column: 3)
!8617 = !DILocation(line: 2346, column: 8, scope: !8616)
!8618 = !DILocation(line: 0, scope: !8616)
!8619 = !DILocation(line: 2346, column: 26, scope: !8615)
!8620 = !DILocation(line: 2346, column: 17, scope: !8615)
!8621 = !DILocation(line: 2346, column: 3, scope: !8616)
!8622 = !DILocation(line: 0, scope: !8602)
!8623 = !DILocation(line: 2349, column: 3, scope: !8604)
!8624 = !DILocation(line: 2347, column: 5, scope: !8615)
!8625 = !DILocation(line: 2346, column: 33, scope: !8615)
!8626 = !DILocation(line: 2346, column: 3, scope: !8615)
!8627 = distinct !{!8627, !8621, !8628}
!8628 = !DILocation(line: 2347, column: 5, scope: !8616)
!8629 = !DILocation(line: 0, scope: !8604)
!8630 = !DILocation(line: 2349, column: 15, scope: !8603)
!8631 = !DILocation(line: 2351, column: 7, scope: !8602)
!8632 = !DILocation(line: 2351, column: 36, scope: !8602)
!8633 = !DILocation(line: 2351, column: 39, scope: !8602)
!8634 = !DILocation(line: 2352, column: 7, scope: !8602)
!8635 = !DILocation(line: 2352, column: 39, scope: !8602)
!8636 = !DILocation(line: 2353, column: 39, scope: !8602)
!8637 = !DILocation(line: 2353, column: 29, scope: !8602)
!8638 = !DILocation(line: 2354, column: 39, scope: !8602)
!8639 = !DILocation(line: 2354, column: 29, scope: !8602)
!8640 = !DILocation(line: 2358, column: 21, scope: !8602)
!8641 = !DILocation(line: 2358, column: 17, scope: !8602)
!8642 = !DILocation(line: 2359, column: 17, scope: !8602)
!8643 = !DILocation(line: 2360, column: 25, scope: !8602)
!8644 = !DILocation(line: 2360, column: 18, scope: !8602)
!8645 = !DILocation(line: 2361, column: 18, scope: !8602)
!8646 = !DILocation(line: 2365, column: 20, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 2365, column: 11)
!8648 = !DILocation(line: 2365, column: 11, scope: !8602)
!8649 = !DILocation(line: 2367, column: 8, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8651, file: !3, line: 2367, column: 8)
!8651 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 2366, column: 2)
!8652 = !DILocation(line: 2367, column: 18, scope: !8650)
!8653 = !DILocation(line: 2367, column: 22, scope: !8650)
!8654 = !DILocation(line: 2367, column: 33, scope: !8650)
!8655 = !DILocation(line: 2367, column: 8, scope: !8651)
!8656 = !DILocation(line: 2372, column: 10, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 2368, column: 6)
!8658 = !DILocation(line: 2372, column: 33, scope: !8657)
!8659 = !DILocation(line: 2370, column: 8, scope: !8657)
!8660 = !DILocation(line: 2373, column: 25, scope: !8657)
!8661 = !DILocation(line: 2373, column: 36, scope: !8657)
!8662 = !DILocation(line: 2373, column: 8, scope: !8657)
!8663 = !DILocation(line: 2374, column: 6, scope: !8657)
!8664 = !DILocation(line: 2375, column: 4, scope: !8651)
!8665 = !DILocation(line: 2376, column: 4, scope: !8651)
!8666 = !DILocation(line: 2379, column: 20, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 2379, column: 11)
!8668 = !DILocation(line: 2379, column: 11, scope: !8602)
!8669 = !DILocation(line: 2381, column: 8, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 2381, column: 8)
!8671 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 2380, column: 2)
!8672 = !DILocation(line: 2381, column: 18, scope: !8670)
!8673 = !DILocation(line: 2381, column: 22, scope: !8670)
!8674 = !DILocation(line: 2381, column: 33, scope: !8670)
!8675 = !DILocation(line: 2381, column: 8, scope: !8671)
!8676 = !DILocation(line: 2386, column: 10, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 2382, column: 6)
!8678 = !DILocation(line: 2386, column: 33, scope: !8677)
!8679 = !DILocation(line: 2384, column: 8, scope: !8677)
!8680 = !DILocation(line: 2387, column: 25, scope: !8677)
!8681 = !DILocation(line: 2387, column: 36, scope: !8677)
!8682 = !DILocation(line: 2387, column: 8, scope: !8677)
!8683 = !DILocation(line: 2388, column: 6, scope: !8677)
!8684 = !DILocation(line: 2389, column: 4, scope: !8671)
!8685 = !DILocation(line: 2390, column: 4, scope: !8671)
!8686 = !DILocation(line: 2393, column: 16, scope: !8602)
!8687 = !DILocation(line: 2394, column: 16, scope: !8602)
!8688 = !DILocation(line: 2395, column: 7, scope: !8602)
!8689 = !DILocation(line: 2395, column: 14, scope: !8602)
!8690 = !DILocation(line: 2395, column: 18, scope: !8602)
!8691 = !DILocation(line: 2396, column: 7, scope: !8602)
!8692 = !DILocation(line: 2396, column: 14, scope: !8602)
!8693 = !DILocation(line: 2396, column: 18, scope: !8602)
!8694 = !DILocation(line: 2398, column: 5, scope: !8603)
!8695 = !DILocation(line: 2349, column: 63, scope: !8603)
!8696 = !DILocation(line: 2349, column: 3, scope: !8603)
!8697 = distinct !{!8697, !8623, !8698}
!8698 = !DILocation(line: 2398, column: 5, scope: !8604)
!8699 = !DILocation(line: 2399, column: 1, scope: !8592)
!8700 = distinct !DISubprogram(name: "build_succ_graph", scope: !3, file: !3, line: 1230, type: !2853, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8701)
!8701 = !{!8702, !8703, !8704, !8705, !8709, !8710, !8711}
!8702 = !DILocalVariable(name: "i", scope: !8700, file: !3, line: 1232, type: !6)
!8703 = !DILocalVariable(name: "t", scope: !8700, file: !3, line: 1232, type: !6)
!8704 = !DILocalVariable(name: "c", scope: !8700, file: !3, line: 1233, type: !670)
!8705 = !DILocalVariable(name: "lhs", scope: !8706, file: !3, line: 1237, type: !675)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !3, line: 1236, column: 5)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !3, line: 1235, column: 3)
!8708 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 1235, column: 3)
!8709 = !DILocalVariable(name: "rhs", scope: !8706, file: !3, line: 1238, type: !675)
!8710 = !DILocalVariable(name: "lhsvar", scope: !8706, file: !3, line: 1239, type: !6)
!8711 = !DILocalVariable(name: "rhsvar", scope: !8706, file: !3, line: 1240, type: !6)
!8712 = !DILocation(line: 1233, column: 3, scope: !8700)
!8713 = !DILocation(line: 0, scope: !8700)
!8714 = !DILocation(line: 0, scope: !8706)
!8715 = !DILocation(line: 0, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 1250, column: 11)
!8717 = !DILocation(line: 0, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1255, column: 16)
!8719 = !DILocation(line: 0, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 1266, column: 16)
!8721 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 1260, column: 16)
!8722 = !DILocation(line: 1235, column: 8, scope: !8708)
!8723 = !DILocation(line: 0, scope: !8708)
!8724 = !DILocation(line: 1235, column: 15, scope: !8707)
!8725 = !DILocation(line: 1235, column: 3, scope: !8708)
!8726 = !DILocation(line: 1237, column: 7, scope: !8706)
!8727 = !DILocation(line: 1238, column: 7, scope: !8706)
!8728 = !DILocation(line: 1242, column: 12, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 1242, column: 11)
!8730 = !DILocation(line: 1242, column: 11, scope: !8706)
!8731 = !DILocation(line: 1245, column: 16, scope: !8706)
!8732 = !DILocation(line: 1246, column: 16, scope: !8706)
!8733 = !DILocation(line: 1247, column: 26, scope: !8706)
!8734 = !DILocation(line: 1247, column: 16, scope: !8706)
!8735 = !DILocation(line: 1248, column: 26, scope: !8706)
!8736 = !DILocation(line: 1248, column: 16, scope: !8706)
!8737 = !DILocation(line: 1250, column: 15, scope: !8716)
!8738 = !DILocation(line: 1250, column: 20, scope: !8716)
!8739 = !DILocation(line: 1250, column: 11, scope: !8706)
!8740 = !DILocation(line: 1252, column: 12, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 1252, column: 8)
!8742 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1251, column: 2)
!8743 = !DILocation(line: 1252, column: 19, scope: !8741)
!8744 = !DILocation(line: 1252, column: 24, scope: !8741)
!8745 = !DILocation(line: 1252, column: 31, scope: !8741)
!8746 = !DILocation(line: 1252, column: 38, scope: !8741)
!8747 = !DILocation(line: 1252, column: 43, scope: !8741)
!8748 = !DILocation(line: 1252, column: 50, scope: !8741)
!8749 = !DILocation(line: 1252, column: 55, scope: !8741)
!8750 = !DILocation(line: 1252, column: 8, scope: !8742)
!8751 = !DILocation(line: 1253, column: 22, scope: !8741)
!8752 = !DILocation(line: 1253, column: 29, scope: !8741)
!8753 = !DILocation(line: 1253, column: 44, scope: !8741)
!8754 = !DILocation(line: 1253, column: 6, scope: !8741)
!8755 = !DILocation(line: 1255, column: 20, scope: !8718)
!8756 = !DILocation(line: 1255, column: 25, scope: !8718)
!8757 = !DILocation(line: 1255, column: 16, scope: !8716)
!8758 = !DILocation(line: 1257, column: 12, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 1257, column: 8)
!8760 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 1256, column: 2)
!8761 = !DILocation(line: 1257, column: 19, scope: !8759)
!8762 = !DILocation(line: 1257, column: 24, scope: !8759)
!8763 = !DILocation(line: 1257, column: 31, scope: !8759)
!8764 = !DILocation(line: 1257, column: 38, scope: !8759)
!8765 = !DILocation(line: 1257, column: 43, scope: !8759)
!8766 = !DILocation(line: 1257, column: 55, scope: !8759)
!8767 = !DILocation(line: 1257, column: 8, scope: !8760)
!8768 = !DILocation(line: 1258, column: 22, scope: !8759)
!8769 = !DILocation(line: 1258, column: 37, scope: !8759)
!8770 = !DILocation(line: 1258, column: 52, scope: !8759)
!8771 = !DILocation(line: 1258, column: 6, scope: !8759)
!8772 = !DILocation(line: 1260, column: 25, scope: !8721)
!8773 = !DILocation(line: 1260, column: 16, scope: !8718)
!8774 = !DILocation(line: 1263, column: 4, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 1261, column: 2)
!8776 = !DILocation(line: 1264, column: 20, scope: !8775)
!8777 = !DILocation(line: 1264, column: 42, scope: !8775)
!8778 = !DILocation(line: 1264, column: 4, scope: !8775)
!8779 = !DILocation(line: 1265, column: 2, scope: !8775)
!8780 = !DILocation(line: 1266, column: 23, scope: !8720)
!8781 = !DILocation(line: 1267, column: 19, scope: !8720)
!8782 = !DILocation(line: 1267, column: 9, scope: !8720)
!8783 = !DILocation(line: 1267, column: 36, scope: !8720)
!8784 = !DILocation(line: 1267, column: 43, scope: !8720)
!8785 = !DILocation(line: 1267, column: 48, scope: !8720)
!8786 = !DILocation(line: 1267, column: 55, scope: !8720)
!8787 = !DILocation(line: 1267, column: 62, scope: !8720)
!8788 = !DILocation(line: 1266, column: 16, scope: !8721)
!8789 = !DILocation(line: 1269, column: 20, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 1268, column: 2)
!8791 = !DILocation(line: 1269, column: 4, scope: !8790)
!8792 = !DILocation(line: 1270, column: 2, scope: !8790)
!8793 = !DILocation(line: 1271, column: 5, scope: !8707)
!8794 = !DILocation(line: 1235, column: 63, scope: !8707)
!8795 = !DILocation(line: 1235, column: 3, scope: !8707)
!8796 = distinct !{!8796, !8725, !8797}
!8797 = !DILocation(line: 1271, column: 5, scope: !8708)
!8798 = !DILocation(line: 1275, column: 7, scope: !8700)
!8799 = !DILocation(line: 1276, column: 8, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 1276, column: 3)
!8801 = !DILocation(line: 0, scope: !8800)
!8802 = !DILocation(line: 1276, column: 32, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 1276, column: 3)
!8804 = !DILocation(line: 1276, column: 30, scope: !8803)
!8805 = !DILocation(line: 1276, column: 3, scope: !8800)
!8806 = !DILocation(line: 1278, column: 12, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 1278, column: 11)
!8808 = distinct !DILexicalBlock(scope: !8803, file: !3, line: 1277, column: 5)
!8809 = !DILocation(line: 1279, column: 4, scope: !8807)
!8810 = !DILocation(line: 1279, column: 7, scope: !8807)
!8811 = !DILocation(line: 1279, column: 24, scope: !8807)
!8812 = !DILocation(line: 1278, column: 11, scope: !8808)
!8813 = !DILocation(line: 1280, column: 18, scope: !8807)
!8814 = !DILocation(line: 1280, column: 25, scope: !8807)
!8815 = !DILocation(line: 1280, column: 2, scope: !8807)
!8816 = !DILocation(line: 1276, column: 48, scope: !8803)
!8817 = !DILocation(line: 1276, column: 3, scope: !8803)
!8818 = distinct !{!8818, !8805, !8819}
!8819 = !DILocation(line: 1281, column: 5, scope: !8800)
!8820 = !DILocation(line: 1284, column: 26, scope: !8700)
!8821 = !DILocation(line: 1284, column: 3, scope: !8700)
!8822 = !DILocation(line: 1285, column: 1, scope: !8700)
!8823 = distinct !DISubprogram(name: "free_var_substitution_info", scope: !3, file: !3, line: 2218, type: !8824, scopeLine: 2219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8826)
!8824 = !DISubroutineType(types: !8825)
!8825 = !{null, !2149}
!8826 = !{!8827}
!8827 = !DILocalVariable(name: "si", arg: 1, scope: !8823, file: !3, line: 2218, type: !2149)
!8828 = !DILocation(line: 0, scope: !8823)
!8829 = !DILocation(line: 2220, column: 3, scope: !8823)
!8830 = !DILocation(line: 2221, column: 9, scope: !8823)
!8831 = !DILocation(line: 2221, column: 16, scope: !8823)
!8832 = !DILocation(line: 2221, column: 3, scope: !8823)
!8833 = !DILocation(line: 2222, column: 9, scope: !8823)
!8834 = !DILocation(line: 2222, column: 16, scope: !8823)
!8835 = !DILocation(line: 2222, column: 3, scope: !8823)
!8836 = !DILocation(line: 2223, column: 9, scope: !8823)
!8837 = !DILocation(line: 2223, column: 16, scope: !8823)
!8838 = !DILocation(line: 2223, column: 3, scope: !8823)
!8839 = !DILocation(line: 2224, column: 9, scope: !8823)
!8840 = !DILocation(line: 2224, column: 16, scope: !8823)
!8841 = !DILocation(line: 2224, column: 3, scope: !8823)
!8842 = !DILocation(line: 2225, column: 9, scope: !8823)
!8843 = !DILocation(line: 2225, column: 16, scope: !8823)
!8844 = !DILocation(line: 2225, column: 3, scope: !8823)
!8845 = !DILocation(line: 2226, column: 3, scope: !8823)
!8846 = !DILocation(line: 2227, column: 16, scope: !8823)
!8847 = !DILocation(line: 2227, column: 3, scope: !8823)
!8848 = !DILocation(line: 2228, column: 16, scope: !8823)
!8849 = !DILocation(line: 2228, column: 3, scope: !8823)
!8850 = !DILocation(line: 2229, column: 3, scope: !8823)
!8851 = !DILocation(line: 2230, column: 1, scope: !8823)
!8852 = distinct !DISubprogram(name: "move_complex_constraints", scope: !3, file: !3, line: 2303, type: !8853, scopeLine: 2304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8855)
!8853 = !DISubroutineType(types: !8854)
!8854 = !{null, !2268}
!8855 = !{!8856, !8857, !8858, !8859, !8865}
!8856 = !DILocalVariable(name: "graph", arg: 1, scope: !8852, file: !3, line: 2303, type: !2268)
!8857 = !DILocalVariable(name: "i", scope: !8852, file: !3, line: 2305, type: !662)
!8858 = !DILocalVariable(name: "c", scope: !8852, file: !3, line: 2306, type: !670)
!8859 = !DILocalVariable(name: "lhs", scope: !8860, file: !3, line: 2312, type: !675)
!8860 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 2311, column: 2)
!8861 = distinct !DILexicalBlock(scope: !8862, file: !3, line: 2310, column: 11)
!8862 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 2309, column: 5)
!8863 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 2308, column: 3)
!8864 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 2308, column: 3)
!8865 = !DILocalVariable(name: "rhs", scope: !8860, file: !3, line: 2313, type: !675)
!8866 = !DILocation(line: 0, scope: !8852)
!8867 = !DILocation(line: 2306, column: 3, scope: !8852)
!8868 = !DILocation(line: 0, scope: !8860)
!8869 = !DILocation(line: 0, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8860, file: !3, line: 2315, column: 8)
!8871 = !DILocation(line: 0, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8870, file: !3, line: 2319, column: 13)
!8873 = !DILocation(line: 0, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 2324, column: 13)
!8875 = !DILocation(line: 0, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 2326, column: 6)
!8877 = !DILocation(line: 2308, column: 8, scope: !8864)
!8878 = !DILocation(line: 0, scope: !8864)
!8879 = !DILocation(line: 2308, column: 15, scope: !8863)
!8880 = !DILocation(line: 2308, column: 3, scope: !8864)
!8881 = !DILocation(line: 2310, column: 11, scope: !8861)
!8882 = !DILocation(line: 2310, column: 11, scope: !8862)
!8883 = !DILocation(line: 2312, column: 4, scope: !8860)
!8884 = !DILocation(line: 2312, column: 36, scope: !8860)
!8885 = !DILocation(line: 2313, column: 4, scope: !8860)
!8886 = !DILocation(line: 2313, column: 36, scope: !8860)
!8887 = !DILocation(line: 2315, column: 12, scope: !8870)
!8888 = !DILocation(line: 2315, column: 17, scope: !8870)
!8889 = !DILocation(line: 2315, column: 8, scope: !8860)
!8890 = !DILocation(line: 2317, column: 40, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8870, file: !3, line: 2316, column: 6)
!8892 = !DILocation(line: 2317, column: 8, scope: !8891)
!8893 = !DILocation(line: 2318, column: 6, scope: !8891)
!8894 = !DILocation(line: 2319, column: 17, scope: !8872)
!8895 = !DILocation(line: 2319, column: 22, scope: !8872)
!8896 = !DILocation(line: 2319, column: 13, scope: !8870)
!8897 = !DILocation(line: 2321, column: 31, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 2321, column: 12)
!8899 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 2320, column: 6)
!8900 = !DILocation(line: 2321, column: 14, scope: !8898)
!8901 = !DILocation(line: 2321, column: 37, scope: !8898)
!8902 = !DILocation(line: 2321, column: 13, scope: !8898)
!8903 = !DILocation(line: 2321, column: 12, scope: !8899)
!8904 = !DILocation(line: 2322, column: 35, scope: !8898)
!8905 = !DILocation(line: 2322, column: 40, scope: !8898)
!8906 = !DILocation(line: 2322, column: 3, scope: !8898)
!8907 = !DILocation(line: 2324, column: 22, scope: !8874)
!8908 = !DILocation(line: 2324, column: 35, scope: !8874)
!8909 = !DILocation(line: 2324, column: 42, scope: !8874)
!8910 = !DILocation(line: 2324, column: 46, scope: !8874)
!8911 = !DILocation(line: 2325, column: 6, scope: !8874)
!8912 = !DILocation(line: 2325, column: 14, scope: !8874)
!8913 = !DILocation(line: 2325, column: 21, scope: !8874)
!8914 = !DILocation(line: 2325, column: 26, scope: !8874)
!8915 = !DILocation(line: 2325, column: 33, scope: !8874)
!8916 = !DILocation(line: 2325, column: 40, scope: !8874)
!8917 = !DILocation(line: 2324, column: 13, scope: !8872)
!8918 = !DILocation(line: 2327, column: 40, scope: !8876)
!8919 = !DILocation(line: 2327, column: 8, scope: !8876)
!8920 = !DILocation(line: 2328, column: 6, scope: !8876)
!8921 = !DILocation(line: 2329, column: 2, scope: !8861)
!8922 = !DILocation(line: 2329, column: 2, scope: !8860)
!8923 = !DILocation(line: 2308, column: 63, scope: !8863)
!8924 = !DILocation(line: 2308, column: 3, scope: !8863)
!8925 = distinct !{!8925, !8880, !8926}
!8926 = !DILocation(line: 2330, column: 5, scope: !8864)
!8927 = !DILocation(line: 2331, column: 1, scope: !8852)
!8928 = distinct !DISubprogram(name: "unite_pointer_equivalences", scope: !3, file: !3, line: 2277, type: !8853, scopeLine: 2278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8929)
!8929 = !{!8930, !8931, !8932, !8936}
!8930 = !DILocalVariable(name: "graph", arg: 1, scope: !8928, file: !3, line: 2277, type: !2268)
!8931 = !DILocalVariable(name: "i", scope: !8928, file: !3, line: 2279, type: !6)
!8932 = !DILocalVariable(name: "label", scope: !8933, file: !3, line: 2285, type: !6)
!8933 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 2284, column: 5)
!8934 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 2283, column: 3)
!8935 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 2283, column: 3)
!8936 = !DILocalVariable(name: "label_rep", scope: !8937, file: !3, line: 2288, type: !662)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 2287, column: 2)
!8938 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 2286, column: 11)
!8939 = !DILocation(line: 0, scope: !8928)
!8940 = !DILocation(line: 0, scope: !8933)
!8941 = !DILocation(line: 0, scope: !8937)
!8942 = !DILocation(line: 2283, column: 8, scope: !8935)
!8943 = !DILocation(line: 0, scope: !8935)
!8944 = !DILocation(line: 2283, column: 19, scope: !8934)
!8945 = !DILocation(line: 2283, column: 17, scope: !8934)
!8946 = !DILocation(line: 2283, column: 3, scope: !8935)
!8947 = !DILocation(line: 2285, column: 35, scope: !8933)
!8948 = !DILocation(line: 2285, column: 28, scope: !8933)
!8949 = !DILocation(line: 2286, column: 11, scope: !8938)
!8950 = !DILocation(line: 2286, column: 11, scope: !8933)
!8951 = !DILocation(line: 2288, column: 27, scope: !8937)
!8952 = !DILocation(line: 2288, column: 20, scope: !8937)
!8953 = !DILocation(line: 2290, column: 18, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 2290, column: 8)
!8955 = !DILocation(line: 2290, column: 8, scope: !8937)
!8956 = !DILocation(line: 2293, column: 16, scope: !8937)
!8957 = !DILocation(line: 2294, column: 18, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 2294, column: 8)
!8959 = !DILocation(line: 2294, column: 23, scope: !8958)
!8960 = !DILocation(line: 2294, column: 44, scope: !8958)
!8961 = !DILocation(line: 2294, column: 26, scope: !8958)
!8962 = !DILocation(line: 2294, column: 8, scope: !8937)
!8963 = !DILocation(line: 2295, column: 6, scope: !8958)
!8964 = !DILocation(line: 2297, column: 5, scope: !8934)
!8965 = !DILocation(line: 2283, column: 36, scope: !8934)
!8966 = !DILocation(line: 2283, column: 3, scope: !8934)
!8967 = distinct !{!8967, !8946, !8968}
!8968 = !DILocation(line: 2297, column: 5, scope: !8935)
!8969 = !DILocation(line: 2298, column: 1, scope: !8928)
!8970 = distinct !DISubprogram(name: "find_indirect_cycles", scope: !3, file: !3, line: 1812, type: !8853, scopeLine: 1813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8971)
!8971 = !{!8972, !8973, !8974, !8975}
!8972 = !DILocalVariable(name: "graph", arg: 1, scope: !8970, file: !3, line: 1812, type: !2268)
!8973 = !DILocalVariable(name: "i", scope: !8970, file: !3, line: 1814, type: !6)
!8974 = !DILocalVariable(name: "size", scope: !8970, file: !3, line: 1815, type: !6)
!8975 = !DILocalVariable(name: "si", scope: !8970, file: !3, line: 1816, type: !2149)
!8976 = !DILocation(line: 0, scope: !8970)
!8977 = !DILocation(line: 1815, column: 30, scope: !8970)
!8978 = !DILocation(line: 1816, column: 40, scope: !8970)
!8979 = !DILocation(line: 1816, column: 25, scope: !8970)
!8980 = !DILocation(line: 0, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 1819, column: 9)
!8982 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 1818, column: 3)
!8983 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 1818, column: 3)
!8984 = !DILocation(line: 1818, column: 8, scope: !8983)
!8985 = !DILocation(line: 0, scope: !8983)
!8986 = !DILocation(line: 1818, column: 19, scope: !8982)
!8987 = !DILocation(line: 1818, column: 17, scope: !8982)
!8988 = !DILocation(line: 1818, column: 3, scope: !8983)
!8989 = !DILocation(line: 1819, column: 10, scope: !8981)
!8990 = !DILocation(line: 1819, column: 36, scope: !8981)
!8991 = !DILocation(line: 1819, column: 39, scope: !8981)
!8992 = !DILocation(line: 1819, column: 48, scope: !8981)
!8993 = !DILocation(line: 1819, column: 9, scope: !8982)
!8994 = !DILocation(line: 1820, column: 7, scope: !8981)
!8995 = !DILocation(line: 1818, column: 48, scope: !8982)
!8996 = !DILocation(line: 1818, column: 3, scope: !8982)
!8997 = distinct !{!8997, !8988, !8998}
!8998 = !DILocation(line: 1820, column: 30, scope: !8983)
!8999 = !DILocation(line: 1822, column: 3, scope: !8970)
!9000 = !DILocation(line: 1823, column: 1, scope: !8970)
!9001 = distinct !DISubprogram(name: "remove_preds_and_fake_succs", scope: !3, file: !3, line: 5363, type: !8853, scopeLine: 5364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9002)
!9002 = !{!9003, !9004}
!9003 = !DILocalVariable(name: "graph", arg: 1, scope: !9001, file: !3, line: 5363, type: !2268)
!9004 = !DILocalVariable(name: "i", scope: !9001, file: !3, line: 5365, type: !6)
!9005 = !DILocation(line: 0, scope: !9001)
!9006 = !DILocation(line: 0, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 5371, column: 11)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 5370, column: 5)
!9009 = distinct !DILexicalBlock(scope: !9010, file: !3, line: 5369, column: 3)
!9010 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 5369, column: 3)
!9011 = !DILocation(line: 5369, column: 8, scope: !9010)
!9012 = !DILocation(line: 0, scope: !9010)
!9013 = !DILocation(line: 5369, column: 19, scope: !9009)
!9014 = !DILocation(line: 5369, column: 17, scope: !9009)
!9015 = !DILocation(line: 5369, column: 3, scope: !9010)
!9016 = !DILocation(line: 5371, column: 18, scope: !9007)
!9017 = !DILocation(line: 5371, column: 11, scope: !9007)
!9018 = !DILocation(line: 5371, column: 11, scope: !9008)
!9019 = !DILocation(line: 5372, column: 39, scope: !9007)
!9020 = !DILocation(line: 5373, column: 8, scope: !9007)
!9021 = !DILocation(line: 5373, column: 23, scope: !9007)
!9022 = !DILocation(line: 5372, column: 2, scope: !9007)
!9023 = !DILocation(line: 5369, column: 36, scope: !9009)
!9024 = !DILocation(line: 5369, column: 3, scope: !9009)
!9025 = distinct !{!9025, !9015, !9026}
!9026 = !DILocation(line: 5374, column: 5, scope: !9010)
!9027 = !DILocation(line: 5377, column: 12, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 5377, column: 3)
!9029 = !DILocation(line: 0, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 5377, column: 3)
!9031 = !DILocation(line: 5377, column: 8, scope: !9028)
!9032 = !DILocation(line: 0, scope: !9028)
!9033 = !DILocation(line: 5377, column: 39, scope: !9030)
!9034 = !DILocation(line: 5377, column: 30, scope: !9030)
!9035 = !DILocation(line: 5377, column: 3, scope: !9028)
!9036 = !DILocation(line: 5379, column: 18, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !3, line: 5379, column: 11)
!9038 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 5378, column: 5)
!9039 = !DILocation(line: 5379, column: 11, scope: !9037)
!9040 = !DILocation(line: 5379, column: 11, scope: !9038)
!9041 = !DILocation(line: 5380, column: 2, scope: !9037)
!9042 = !DILocation(line: 5377, column: 46, scope: !9030)
!9043 = !DILocation(line: 5377, column: 3, scope: !9030)
!9044 = distinct !{!9044, !9035, !9045}
!9045 = !DILocation(line: 5381, column: 5, scope: !9028)
!9046 = !DILocation(line: 5385, column: 17, scope: !9001)
!9047 = !DILocation(line: 5385, column: 15, scope: !9001)
!9048 = !DILocation(line: 5386, column: 18, scope: !9001)
!9049 = !DILocation(line: 5386, column: 16, scope: !9001)
!9050 = !DILocation(line: 5388, column: 16, scope: !9001)
!9051 = !DILocation(line: 5388, column: 3, scope: !9001)
!9052 = !DILocation(line: 5389, column: 25, scope: !9001)
!9053 = !DILocation(line: 5390, column: 16, scope: !9001)
!9054 = !DILocation(line: 5390, column: 3, scope: !9001)
!9055 = !DILocation(line: 5391, column: 16, scope: !9001)
!9056 = !DILocation(line: 5392, column: 3, scope: !9001)
!9057 = !DILocation(line: 5393, column: 1, scope: !9001)
!9058 = distinct !DISubprogram(name: "solve_graph", scope: !3, file: !3, line: 2449, type: !8853, scopeLine: 2450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9059)
!9059 = !{!9060, !9061, !9062, !9063, !9064, !9068, !9070, !9071, !9075, !9076, !9077, !9078, !9079, !9082, !9083, !9088, !9089}
!9060 = !DILocalVariable(name: "graph", arg: 1, scope: !9058, file: !3, line: 2449, type: !2268)
!9061 = !DILocalVariable(name: "size", scope: !9058, file: !3, line: 2451, type: !6)
!9062 = !DILocalVariable(name: "i", scope: !9058, file: !3, line: 2452, type: !6)
!9063 = !DILocalVariable(name: "pts", scope: !9058, file: !3, line: 2453, type: !1598)
!9064 = !DILocalVariable(name: "ivi", scope: !9065, file: !3, line: 2462, type: !711)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 2461, column: 5)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 2460, column: 3)
!9067 = distinct !DILexicalBlock(scope: !9058, file: !3, line: 2460, column: 3)
!9068 = !DILocalVariable(name: "i", scope: !9069, file: !3, line: 2477, type: !6)
!9069 = distinct !DILexicalBlock(scope: !9058, file: !3, line: 2476, column: 5)
!9070 = !DILocalVariable(name: "ti", scope: !9069, file: !3, line: 2478, type: !2181)
!9071 = !DILocalVariable(name: "j", scope: !9072, file: !3, line: 2503, type: !6)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 2502, column: 6)
!9073 = distinct !DILexicalBlock(scope: !9074, file: !3, line: 2501, column: 8)
!9074 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 2486, column: 2)
!9075 = !DILocalVariable(name: "c", scope: !9072, file: !3, line: 2504, type: !670)
!9076 = !DILocalVariable(name: "solution", scope: !9072, file: !3, line: 2505, type: !1598)
!9077 = !DILocalVariable(name: "complex", scope: !9072, file: !3, line: 2506, type: !685)
!9078 = !DILocalVariable(name: "solution_empty", scope: !9072, file: !3, line: 2507, type: !661)
!9079 = !DILocalVariable(name: "bi", scope: !9080, file: !3, line: 2546, type: !2961)
!9080 = distinct !DILexicalBlock(scope: !9081, file: !3, line: 2545, column: 3)
!9081 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 2544, column: 12)
!9082 = !DILocalVariable(name: "eff_escaped_id", scope: !9080, file: !3, line: 2547, type: !6)
!9083 = !DILocalVariable(name: "tmp", scope: !9084, file: !3, line: 2553, type: !1598)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !3, line: 2552, column: 7)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 2550, column: 5)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 2550, column: 5)
!9087 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 2550, column: 5)
!9088 = !DILocalVariable(name: "flag", scope: !9084, file: !3, line: 2554, type: !661)
!9089 = !DILocalVariable(name: "to", scope: !9084, file: !3, line: 2556, type: !6)
!9090 = !DILocation(line: 0, scope: !9058)
!9091 = !DILocation(line: 2451, column: 30, scope: !9058)
!9092 = !DILocation(line: 2455, column: 17, scope: !9058)
!9093 = !DILocation(line: 2456, column: 13, scope: !9058)
!9094 = !DILocation(line: 2456, column: 11, scope: !9058)
!9095 = !DILocation(line: 2457, column: 3, scope: !9058)
!9096 = !DILocation(line: 0, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9065, file: !3, line: 2463, column: 11)
!9098 = !DILocation(line: 2460, column: 17, scope: !9066)
!9099 = !DILocation(line: 2460, column: 8, scope: !9067)
!9100 = !DILocation(line: 0, scope: !9067)
!9101 = !DILocation(line: 2460, column: 3, scope: !9067)
!9102 = !DILocation(line: 2462, column: 23, scope: !9065)
!9103 = !DILocation(line: 0, scope: !9065)
!9104 = !DILocation(line: 2463, column: 11, scope: !9097)
!9105 = !DILocation(line: 2463, column: 20, scope: !9097)
!9106 = !DILocation(line: 2463, column: 25, scope: !9097)
!9107 = !DILocation(line: 2463, column: 29, scope: !9097)
!9108 = !DILocation(line: 2464, column: 4, scope: !9097)
!9109 = !DILocation(line: 2464, column: 16, scope: !9097)
!9110 = !DILocation(line: 2464, column: 9, scope: !9097)
!9111 = !DILocation(line: 2464, column: 25, scope: !9097)
!9112 = !DILocation(line: 2464, column: 29, scope: !9097)
!9113 = !DILocation(line: 2465, column: 8, scope: !9097)
!9114 = !DILocation(line: 2465, column: 11, scope: !9097)
!9115 = !DILocation(line: 2465, column: 56, scope: !9097)
!9116 = !DILocation(line: 2463, column: 11, scope: !9065)
!9117 = !DILocation(line: 2467, column: 13, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 2466, column: 2)
!9119 = !DILocation(line: 2467, column: 4, scope: !9118)
!9120 = !DILocation(line: 2468, column: 17, scope: !9118)
!9121 = !DILocation(line: 2469, column: 2, scope: !9118)
!9122 = !DILocation(line: 2460, column: 26, scope: !9066)
!9123 = !DILocation(line: 2460, column: 3, scope: !9066)
!9124 = distinct !{!9124, !9101, !9125}
!9125 = !DILocation(line: 2470, column: 5, scope: !9067)
!9126 = !DILocation(line: 2473, column: 9, scope: !9058)
!9127 = !DILocation(line: 0, scope: !9072)
!9128 = !DILocation(line: 0, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 2516, column: 12)
!9130 = !DILocation(line: 0, scope: !9080)
!9131 = !DILocation(line: 2475, column: 3, scope: !9058)
!9132 = !DILocation(line: 2475, column: 10, scope: !9058)
!9133 = !DILocation(line: 2475, column: 24, scope: !9058)
!9134 = !DILocation(line: 2478, column: 30, scope: !9069)
!9135 = !DILocation(line: 0, scope: !9069)
!9136 = !DILocation(line: 2479, column: 23, scope: !9069)
!9137 = !DILocation(line: 2481, column: 7, scope: !9069)
!9138 = !DILocation(line: 2483, column: 7, scope: !9069)
!9139 = !DILocation(line: 2485, column: 7, scope: !9069)
!9140 = !DILocation(line: 2485, column: 14, scope: !9069)
!9141 = !DILocation(line: 2485, column: 52, scope: !9069)
!9142 = !DILocation(line: 2488, column: 8, scope: !9074)
!9143 = !DILocation(line: 2491, column: 8, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9074, file: !3, line: 2491, column: 8)
!9145 = !DILocation(line: 2491, column: 17, scope: !9144)
!9146 = !DILocation(line: 2491, column: 8, scope: !9074)
!9147 = !DILocation(line: 2496, column: 8, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9074, file: !3, line: 2496, column: 8)
!9149 = !DILocation(line: 2496, column: 38, scope: !9148)
!9150 = !DILocation(line: 2496, column: 41, scope: !9148)
!9151 = !DILocation(line: 2496, column: 50, scope: !9148)
!9152 = !DILocation(line: 2496, column: 8, scope: !9074)
!9153 = !DILocation(line: 2501, column: 8, scope: !9073)
!9154 = !DILocation(line: 2501, column: 8, scope: !9074)
!9155 = !DILocation(line: 2503, column: 8, scope: !9072)
!9156 = !DILocation(line: 2504, column: 8, scope: !9072)
!9157 = !DILocation(line: 2506, column: 49, scope: !9072)
!9158 = !DILocation(line: 2506, column: 42, scope: !9072)
!9159 = !DILocation(line: 2509, column: 8, scope: !9072)
!9160 = !DILocation(line: 2510, column: 21, scope: !9072)
!9161 = !DILocation(line: 2513, column: 31, scope: !9072)
!9162 = !DILocation(line: 2513, column: 48, scope: !9072)
!9163 = !DILocation(line: 2514, column: 5, scope: !9072)
!9164 = !DILocation(line: 2514, column: 22, scope: !9072)
!9165 = !DILocation(line: 2513, column: 8, scope: !9072)
!9166 = !DILocation(line: 2516, column: 12, scope: !9129)
!9167 = !DILocation(line: 2516, column: 12, scope: !9072)
!9168 = distinct !{!9168, !9139, !9169}
!9169 = !DILocation(line: 2583, column: 2, scope: !9069)
!9170 = !DILocation(line: 2519, column: 25, scope: !9072)
!9171 = !DILocation(line: 2519, column: 42, scope: !9072)
!9172 = !DILocation(line: 2519, column: 8, scope: !9072)
!9173 = !DILocation(line: 2521, column: 19, scope: !9072)
!9174 = !DILocation(line: 2521, column: 36, scope: !9072)
!9175 = !DILocation(line: 2522, column: 25, scope: !9072)
!9176 = !DILocation(line: 0, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9178, file: !3, line: 2525, column: 8)
!9178 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 2525, column: 8)
!9179 = !DILocation(line: 2525, column: 13, scope: !9178)
!9180 = !DILocation(line: 0, scope: !9178)
!9181 = !DILocation(line: 2525, column: 20, scope: !9177)
!9182 = !DILocation(line: 2525, column: 8, scope: !9178)
!9183 = !DILocation(line: 2531, column: 24, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 2526, column: 3)
!9185 = !DILocation(line: 2531, column: 31, scope: !9184)
!9186 = !DILocation(line: 2531, column: 18, scope: !9184)
!9187 = !DILocation(line: 2531, column: 5, scope: !9184)
!9188 = !DILocation(line: 2531, column: 12, scope: !9184)
!9189 = !DILocation(line: 2531, column: 16, scope: !9184)
!9190 = !DILocation(line: 2532, column: 24, scope: !9184)
!9191 = !DILocation(line: 2532, column: 31, scope: !9184)
!9192 = !DILocation(line: 2532, column: 18, scope: !9184)
!9193 = !DILocation(line: 2532, column: 5, scope: !9184)
!9194 = !DILocation(line: 2532, column: 12, scope: !9184)
!9195 = !DILocation(line: 2532, column: 16, scope: !9184)
!9196 = !DILocation(line: 2538, column: 35, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 2538, column: 9)
!9198 = !DILocation(line: 2538, column: 40, scope: !9197)
!9199 = !DILocation(line: 2538, column: 9, scope: !9184)
!9200 = !DILocation(line: 2539, column: 7, scope: !9197)
!9201 = !DILocation(line: 2525, column: 64, scope: !9177)
!9202 = !DILocation(line: 2525, column: 8, scope: !9177)
!9203 = distinct !{!9203, !9182, !9204}
!9204 = !DILocation(line: 2540, column: 3, scope: !9178)
!9205 = !DILocation(line: 2542, column: 25, scope: !9072)
!9206 = !DILocation(line: 2544, column: 12, scope: !9072)
!9207 = !DILocation(line: 2546, column: 5, scope: !9080)
!9208 = !DILocation(line: 2547, column: 31, scope: !9080)
!9209 = !DILocation(line: 2550, column: 5, scope: !9087)
!9210 = !DILocation(line: 2550, column: 5, scope: !9080)
!9211 = !DILocation(line: 2550, column: 5, scope: !9086)
!9212 = !DILocation(line: 0, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 2566, column: 13)
!9214 = !DILocation(line: 2550, column: 5, scope: !9085)
!9215 = !DILocation(line: 2556, column: 33, scope: !9084)
!9216 = !DILocation(line: 2556, column: 27, scope: !9084)
!9217 = !DILocation(line: 0, scope: !9084)
!9218 = !DILocation(line: 2557, column: 15, scope: !9084)
!9219 = !DILocation(line: 2557, column: 33, scope: !9084)
!9220 = !DILocation(line: 2561, column: 16, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 2561, column: 13)
!9222 = !DILocation(line: 2561, column: 13, scope: !9084)
!9223 = !DILocation(line: 2567, column: 11, scope: !9213)
!9224 = !DILocation(line: 2571, column: 13, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 2571, column: 13)
!9226 = !DILocation(line: 2571, column: 13, scope: !9084)
!9227 = !DILocation(line: 2573, column: 6, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 2572, column: 4)
!9229 = !DILocation(line: 2573, column: 24, scope: !9228)
!9230 = !DILocation(line: 2573, column: 33, scope: !9228)
!9231 = !DILocation(line: 2574, column: 11, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9228, file: !3, line: 2574, column: 10)
!9233 = !DILocation(line: 2574, column: 10, scope: !9228)
!9234 = !DILocation(line: 2576, column: 10, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 2575, column: 8)
!9236 = !DILocation(line: 2577, column: 23, scope: !9235)
!9237 = !DILocation(line: 2578, column: 8, scope: !9235)
!9238 = distinct !{!9238, !9211, !9239}
!9239 = !DILocation(line: 2580, column: 7, scope: !9086)
!9240 = !DILocation(line: 2581, column: 3, scope: !9081)
!9241 = !DILocation(line: 2569, column: 11, scope: !9213)
!9242 = !DILocation(line: 2581, column: 3, scope: !9080)
!9243 = !DILocation(line: 2582, column: 6, scope: !9073)
!9244 = !DILocation(line: 2584, column: 7, scope: !9069)
!9245 = !DILocation(line: 2585, column: 7, scope: !9069)
!9246 = distinct !{!9246, !9131, !9247}
!9247 = !DILocation(line: 2586, column: 5, scope: !9058)
!9248 = !DILocation(line: 2588, column: 3, scope: !9058)
!9249 = !DILocation(line: 2589, column: 3, scope: !9058)
!9250 = !DILocation(line: 2590, column: 3, scope: !9058)
!9251 = !DILocation(line: 2591, column: 1, scope: !9058)
!9252 = distinct !DISubprogram(name: "SET_BIT", scope: !2137, file: !2137, line: 63, type: !9253, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9255)
!9253 = !DISubroutineType(types: !9254)
!9254 = !{null, !2136, !6}
!9255 = !{!9256, !9257, !9258}
!9256 = !DILocalVariable(name: "map", arg: 1, scope: !9252, file: !2137, line: 63, type: !2136)
!9257 = !DILocalVariable(name: "bitno", arg: 2, scope: !9252, file: !2137, line: 63, type: !6)
!9258 = !DILocalVariable(name: "oldbit", scope: !9259, file: !2137, line: 67, type: !661)
!9259 = distinct !DILexicalBlock(scope: !9260, file: !2137, line: 66, column: 5)
!9260 = distinct !DILexicalBlock(scope: !9252, file: !2137, line: 65, column: 7)
!9261 = !DILocation(line: 0, scope: !9252)
!9262 = !DILocation(line: 65, column: 12, scope: !9260)
!9263 = !DILocation(line: 65, column: 7, scope: !9260)
!9264 = !DILocation(line: 65, column: 7, scope: !9252)
!9265 = !DILocation(line: 73, column: 40, scope: !9252)
!9266 = !DILocation(line: 73, column: 29, scope: !9252)
!9267 = !DILocation(line: 72, column: 19, scope: !9252)
!9268 = !DILocation(line: 72, column: 3, scope: !9252)
!9269 = !DILocation(line: 68, column: 16, scope: !9259)
!9270 = !DILocation(line: 69, column: 12, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9259, file: !2137, line: 69, column: 11)
!9272 = !DILocation(line: 69, column: 11, scope: !9259)
!9273 = !DILocation(line: 70, column: 2, scope: !9271)
!9274 = !DILocation(line: 70, column: 41, scope: !9271)
!9275 = !DILocation(line: 73, column: 5, scope: !9252)
!9276 = !DILocation(line: 74, column: 1, scope: !9252)
!9277 = distinct !DISubprogram(name: "add_pred_graph_edge", scope: !3, file: !3, line: 1053, type: !9278, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9280)
!9278 = !DISubroutineType(types: !9279)
!9279 = !{null, !2268, !6, !6}
!9280 = !{!9281, !9282, !9283}
!9281 = !DILocalVariable(name: "graph", arg: 1, scope: !9277, file: !3, line: 1053, type: !2268)
!9282 = !DILocalVariable(name: "to", arg: 2, scope: !9277, file: !3, line: 1053, type: !6)
!9283 = !DILocalVariable(name: "from", arg: 3, scope: !9277, file: !3, line: 1054, type: !6)
!9284 = !DILocation(line: 0, scope: !9277)
!9285 = !DILocation(line: 1056, column: 15, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 1056, column: 7)
!9287 = !DILocation(line: 1056, column: 8, scope: !9286)
!9288 = !DILocation(line: 1056, column: 7, scope: !9277)
!9289 = !DILocation(line: 1057, column: 24, scope: !9286)
!9290 = !DILocation(line: 1057, column: 12, scope: !9286)
!9291 = !DILocation(line: 1057, column: 5, scope: !9286)
!9292 = !DILocation(line: 1057, column: 22, scope: !9286)
!9293 = !DILocation(line: 1058, column: 26, scope: !9277)
!9294 = !DILocation(line: 1058, column: 19, scope: !9277)
!9295 = !DILocation(line: 1058, column: 3, scope: !9277)
!9296 = !DILocation(line: 1059, column: 1, scope: !9277)
!9297 = distinct !DISubprogram(name: "RESET_BIT", scope: !2137, file: !2137, line: 82, type: !9253, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9298)
!9298 = !{!9299, !9300, !9301}
!9299 = !DILocalVariable(name: "map", arg: 1, scope: !9297, file: !2137, line: 82, type: !2136)
!9300 = !DILocalVariable(name: "bitno", arg: 2, scope: !9297, file: !2137, line: 82, type: !6)
!9301 = !DILocalVariable(name: "oldbit", scope: !9302, file: !2137, line: 86, type: !661)
!9302 = distinct !DILexicalBlock(scope: !9303, file: !2137, line: 85, column: 5)
!9303 = distinct !DILexicalBlock(scope: !9297, file: !2137, line: 84, column: 7)
!9304 = !DILocation(line: 0, scope: !9297)
!9305 = !DILocation(line: 84, column: 12, scope: !9303)
!9306 = !DILocation(line: 84, column: 7, scope: !9303)
!9307 = !DILocation(line: 84, column: 7, scope: !9297)
!9308 = !DILocation(line: 92, column: 42, scope: !9297)
!9309 = !DILocation(line: 92, column: 31, scope: !9297)
!9310 = !DILocation(line: 91, column: 19, scope: !9297)
!9311 = !DILocation(line: 91, column: 3, scope: !9297)
!9312 = !DILocation(line: 87, column: 16, scope: !9302)
!9313 = !DILocation(line: 88, column: 11, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9302, file: !2137, line: 88, column: 11)
!9315 = !DILocation(line: 88, column: 11, scope: !9302)
!9316 = !DILocation(line: 89, column: 2, scope: !9314)
!9317 = !DILocation(line: 89, column: 41, scope: !9314)
!9318 = !DILocation(line: 92, column: 8, scope: !9297)
!9319 = !DILocation(line: 92, column: 5, scope: !9297)
!9320 = !DILocation(line: 93, column: 1, scope: !9297)
!9321 = distinct !DISubprogram(name: "add_implicit_graph_edge", scope: !3, file: !3, line: 1035, type: !9278, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9322)
!9322 = !{!9323, !9324, !9325}
!9323 = !DILocalVariable(name: "graph", arg: 1, scope: !9321, file: !3, line: 1035, type: !2268)
!9324 = !DILocalVariable(name: "to", arg: 2, scope: !9321, file: !3, line: 1035, type: !6)
!9325 = !DILocalVariable(name: "from", arg: 3, scope: !9321, file: !3, line: 1036, type: !6)
!9326 = !DILocation(line: 0, scope: !9321)
!9327 = !DILocation(line: 1038, column: 10, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 1038, column: 7)
!9329 = !DILocation(line: 1038, column: 7, scope: !9321)
!9330 = !DILocation(line: 1041, column: 15, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 1041, column: 7)
!9332 = !DILocation(line: 1041, column: 8, scope: !9331)
!9333 = !DILocation(line: 1041, column: 7, scope: !9321)
!9334 = !DILocation(line: 1042, column: 33, scope: !9331)
!9335 = !DILocation(line: 1042, column: 12, scope: !9331)
!9336 = !DILocation(line: 1042, column: 5, scope: !9331)
!9337 = !DILocation(line: 1042, column: 31, scope: !9331)
!9338 = !DILocation(line: 1044, column: 30, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 1044, column: 7)
!9340 = !DILocation(line: 0, scope: !9339)
!9341 = !DILocation(line: 1044, column: 23, scope: !9339)
!9342 = !DILocation(line: 1044, column: 7, scope: !9339)
!9343 = !DILocation(line: 1044, column: 7, scope: !9321)
!9344 = !DILocation(line: 1045, column: 29, scope: !9339)
!9345 = !DILocation(line: 1045, column: 5, scope: !9339)
!9346 = !DILocation(line: 1046, column: 1, scope: !9321)
!9347 = distinct !DISubprogram(name: "init_scc_info", scope: !3, file: !3, line: 1770, type: !9348, scopeLine: 1771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9350)
!9348 = !DISubroutineType(types: !9349)
!9349 = !{!2149, !682}
!9350 = !{!9351, !9352, !9353}
!9351 = !DILocalVariable(name: "size", arg: 1, scope: !9347, file: !3, line: 1770, type: !682)
!9352 = !DILocalVariable(name: "si", scope: !9347, file: !3, line: 1772, type: !2149)
!9353 = !DILocalVariable(name: "i", scope: !9347, file: !3, line: 1773, type: !682)
!9354 = !DILocation(line: 0, scope: !9347)
!9355 = !DILocation(line: 1772, column: 25, scope: !9347)
!9356 = !DILocation(line: 1775, column: 7, scope: !9347)
!9357 = !DILocation(line: 1775, column: 21, scope: !9347)
!9358 = !DILocation(line: 1776, column: 32, scope: !9347)
!9359 = !DILocation(line: 1776, column: 17, scope: !9347)
!9360 = !DILocation(line: 1776, column: 7, scope: !9347)
!9361 = !DILocation(line: 1776, column: 15, scope: !9347)
!9362 = !DILocation(line: 1777, column: 3, scope: !9347)
!9363 = !DILocation(line: 1778, column: 17, scope: !9347)
!9364 = !DILocation(line: 1778, column: 7, scope: !9347)
!9365 = !DILocation(line: 1778, column: 15, scope: !9347)
!9366 = !DILocation(line: 1779, column: 3, scope: !9347)
!9367 = !DILocation(line: 1780, column: 22, scope: !9347)
!9368 = !DILocation(line: 1780, column: 7, scope: !9347)
!9369 = !DILocation(line: 1780, column: 20, scope: !9347)
!9370 = !DILocation(line: 1781, column: 13, scope: !9347)
!9371 = !DILocation(line: 1781, column: 7, scope: !9347)
!9372 = !DILocation(line: 1781, column: 11, scope: !9347)
!9373 = !DILocation(line: 0, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9375, file: !3, line: 1783, column: 3)
!9375 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 1783, column: 3)
!9376 = !DILocation(line: 1783, column: 8, scope: !9375)
!9377 = !DILocation(line: 0, scope: !9375)
!9378 = !DILocation(line: 1783, column: 17, scope: !9374)
!9379 = !DILocation(line: 1783, column: 3, scope: !9375)
!9380 = !DILocation(line: 1784, column: 27, scope: !9374)
!9381 = !DILocation(line: 1784, column: 9, scope: !9374)
!9382 = !DILocation(line: 1784, column: 5, scope: !9374)
!9383 = !DILocation(line: 1784, column: 25, scope: !9374)
!9384 = !DILocation(line: 1783, column: 26, scope: !9374)
!9385 = !DILocation(line: 1783, column: 3, scope: !9374)
!9386 = distinct !{!9386, !9379, !9387}
!9387 = !DILocation(line: 1784, column: 27, scope: !9375)
!9388 = !DILocation(line: 1786, column: 19, scope: !9347)
!9389 = !DILocation(line: 1786, column: 7, scope: !9347)
!9390 = !DILocation(line: 1786, column: 17, scope: !9347)
!9391 = !DILocation(line: 1787, column: 3, scope: !9347)
!9392 = distinct !DISubprogram(name: "equiv_class_label_hash", scope: !3, file: !3, line: 1862, type: !1522, scopeLine: 1863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9393)
!9393 = !{!9394, !9395}
!9394 = !DILocalVariable(name: "p", arg: 1, scope: !9392, file: !3, line: 1862, type: !1355)
!9395 = !DILocalVariable(name: "ecl", scope: !9392, file: !3, line: 1864, type: !9396)
!9396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2171)
!9397 = !DILocation(line: 0, scope: !9392)
!9398 = !DILocation(line: 1865, column: 15, scope: !9392)
!9399 = !DILocation(line: 1865, column: 3, scope: !9392)
!9400 = distinct !DISubprogram(name: "equiv_class_label_eq", scope: !3, file: !3, line: 1871, type: !1528, scopeLine: 1872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9401)
!9401 = !{!9402, !9403, !9404, !9405}
!9402 = !DILocalVariable(name: "p1", arg: 1, scope: !9400, file: !3, line: 1871, type: !1355)
!9403 = !DILocalVariable(name: "p2", arg: 2, scope: !9400, file: !3, line: 1871, type: !1355)
!9404 = !DILocalVariable(name: "eql1", scope: !9400, file: !3, line: 1873, type: !9396)
!9405 = !DILocalVariable(name: "eql2", scope: !9400, file: !3, line: 1874, type: !9396)
!9406 = !DILocation(line: 0, scope: !9400)
!9407 = !DILocation(line: 1875, column: 17, scope: !9400)
!9408 = !DILocation(line: 1875, column: 35, scope: !9400)
!9409 = !DILocation(line: 1875, column: 26, scope: !9400)
!9410 = !DILocation(line: 1876, column: 4, scope: !9400)
!9411 = !DILocation(line: 1876, column: 29, scope: !9400)
!9412 = !DILocation(line: 1876, column: 43, scope: !9400)
!9413 = !DILocation(line: 1876, column: 7, scope: !9400)
!9414 = !DILocation(line: 1875, column: 3, scope: !9400)
!9415 = distinct !DISubprogram(name: "condense_visit", scope: !3, file: !3, line: 1973, type: !9416, scopeLine: 1974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9418)
!9416 = !DISubroutineType(types: !9417)
!9417 = !{null, !2268, !2149, !6}
!9418 = !{!9419, !9420, !9421, !9422, !9423, !9424, !9425, !9430, !9432, !9433, !9438, !9440, !9441}
!9419 = !DILocalVariable(name: "graph", arg: 1, scope: !9415, file: !3, line: 1973, type: !2268)
!9420 = !DILocalVariable(name: "si", arg: 2, scope: !9415, file: !3, line: 1973, type: !2149)
!9421 = !DILocalVariable(name: "n", arg: 3, scope: !9415, file: !3, line: 1973, type: !6)
!9422 = !DILocalVariable(name: "i", scope: !9415, file: !3, line: 1975, type: !6)
!9423 = !DILocalVariable(name: "bi", scope: !9415, file: !3, line: 1976, type: !2961)
!9424 = !DILocalVariable(name: "my_dfs", scope: !9415, file: !3, line: 1977, type: !6)
!9425 = !DILocalVariable(name: "w", scope: !9426, file: !3, line: 1987, type: !6)
!9426 = distinct !DILexicalBlock(scope: !9427, file: !3, line: 1986, column: 5)
!9427 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 1985, column: 3)
!9428 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1985, column: 3)
!9429 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 1985, column: 3)
!9430 = !DILocalVariable(name: "t", scope: !9431, file: !3, line: 1995, type: !6)
!9431 = distinct !DILexicalBlock(scope: !9426, file: !3, line: 1994, column: 7)
!9432 = !DILocalVariable(name: "nnode", scope: !9431, file: !3, line: 1996, type: !6)
!9433 = !DILocalVariable(name: "w", scope: !9434, file: !3, line: 2007, type: !6)
!9434 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 2006, column: 5)
!9435 = distinct !DILexicalBlock(scope: !9436, file: !3, line: 2005, column: 3)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 2005, column: 3)
!9437 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 2005, column: 3)
!9438 = !DILocalVariable(name: "t", scope: !9439, file: !3, line: 2015, type: !6)
!9439 = distinct !DILexicalBlock(scope: !9434, file: !3, line: 2014, column: 7)
!9440 = !DILocalVariable(name: "nnode", scope: !9439, file: !3, line: 2016, type: !6)
!9441 = !DILocalVariable(name: "w", scope: !9442, file: !3, line: 2030, type: !6)
!9442 = distinct !DILexicalBlock(scope: !9443, file: !3, line: 2029, column: 2)
!9443 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 2026, column: 5)
!9444 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 2025, column: 7)
!9445 = !DILocation(line: 0, scope: !9415)
!9446 = !DILocation(line: 1975, column: 3, scope: !9415)
!9447 = !DILocation(line: 1976, column: 3, scope: !9415)
!9448 = !DILocation(line: 1979, column: 3, scope: !9415)
!9449 = !DILocation(line: 1980, column: 16, scope: !9415)
!9450 = !DILocation(line: 1980, column: 3, scope: !9415)
!9451 = !DILocation(line: 1981, column: 20, scope: !9415)
!9452 = !DILocation(line: 1981, column: 34, scope: !9415)
!9453 = !DILocation(line: 1981, column: 7, scope: !9415)
!9454 = !DILocation(line: 1981, column: 3, scope: !9415)
!9455 = !DILocation(line: 1981, column: 14, scope: !9415)
!9456 = !DILocation(line: 1982, column: 16, scope: !9415)
!9457 = !DILocation(line: 1982, column: 12, scope: !9415)
!9458 = !DILocation(line: 1985, column: 3, scope: !9429)
!9459 = !DILocation(line: 1985, column: 3, scope: !9415)
!9460 = !DILocation(line: 1985, column: 3, scope: !9428)
!9461 = !DILocation(line: 0, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9426, file: !3, line: 1989, column: 11)
!9463 = !DILocation(line: 1985, column: 3, scope: !9427)
!9464 = !DILocation(line: 1987, column: 28, scope: !9426)
!9465 = !DILocation(line: 1987, column: 41, scope: !9426)
!9466 = !DILocation(line: 1987, column: 24, scope: !9426)
!9467 = !DILocation(line: 0, scope: !9426)
!9468 = !DILocation(line: 1989, column: 11, scope: !9462)
!9469 = !DILocation(line: 1989, column: 11, scope: !9426)
!9470 = !DILocation(line: 1992, column: 12, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9426, file: !3, line: 1992, column: 11)
!9472 = !DILocation(line: 1992, column: 11, scope: !9426)
!9473 = !DILocation(line: 1993, column: 2, scope: !9471)
!9474 = !DILocation(line: 1995, column: 23, scope: !9431)
!9475 = !DILocation(line: 1995, column: 19, scope: !9431)
!9476 = !DILocation(line: 0, scope: !9431)
!9477 = !DILocation(line: 1996, column: 23, scope: !9431)
!9478 = !DILocation(line: 1997, column: 2, scope: !9431)
!9479 = !DILocation(line: 1999, column: 10, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9431, file: !3, line: 1999, column: 6)
!9481 = !DILocation(line: 1999, column: 6, scope: !9480)
!9482 = !DILocation(line: 1999, column: 19, scope: !9480)
!9483 = !DILocation(line: 1999, column: 17, scope: !9480)
!9484 = !DILocation(line: 1999, column: 6, scope: !9431)
!9485 = !DILocation(line: 2000, column: 4, scope: !9480)
!9486 = !DILocation(line: 2000, column: 15, scope: !9480)
!9487 = distinct !{!9487, !9460, !9488}
!9488 = !DILocation(line: 2002, column: 5, scope: !9428)
!9489 = !DILocation(line: 2005, column: 3, scope: !9437)
!9490 = !DILocation(line: 2005, column: 3, scope: !9415)
!9491 = !DILocation(line: 2005, column: 3, scope: !9436)
!9492 = !DILocation(line: 0, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9434, file: !3, line: 2009, column: 11)
!9494 = !DILocation(line: 2005, column: 3, scope: !9435)
!9495 = !DILocation(line: 2007, column: 28, scope: !9434)
!9496 = !DILocation(line: 2007, column: 41, scope: !9434)
!9497 = !DILocation(line: 2007, column: 24, scope: !9434)
!9498 = !DILocation(line: 0, scope: !9434)
!9499 = !DILocation(line: 2009, column: 11, scope: !9493)
!9500 = !DILocation(line: 2009, column: 11, scope: !9434)
!9501 = !DILocation(line: 2012, column: 12, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9434, file: !3, line: 2012, column: 11)
!9503 = !DILocation(line: 2012, column: 11, scope: !9434)
!9504 = !DILocation(line: 2013, column: 2, scope: !9502)
!9505 = !DILocation(line: 2015, column: 23, scope: !9439)
!9506 = !DILocation(line: 2015, column: 19, scope: !9439)
!9507 = !DILocation(line: 0, scope: !9439)
!9508 = !DILocation(line: 2016, column: 23, scope: !9439)
!9509 = !DILocation(line: 2017, column: 2, scope: !9439)
!9510 = !DILocation(line: 2019, column: 10, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 2019, column: 6)
!9512 = !DILocation(line: 2019, column: 6, scope: !9511)
!9513 = !DILocation(line: 2019, column: 19, scope: !9511)
!9514 = !DILocation(line: 2019, column: 17, scope: !9511)
!9515 = !DILocation(line: 2019, column: 6, scope: !9439)
!9516 = !DILocation(line: 2020, column: 4, scope: !9511)
!9517 = !DILocation(line: 2020, column: 15, scope: !9511)
!9518 = distinct !{!9518, !9491, !9519}
!9519 = !DILocation(line: 2022, column: 5, scope: !9436)
!9520 = !DILocation(line: 2025, column: 11, scope: !9444)
!9521 = !DILocation(line: 2025, column: 7, scope: !9444)
!9522 = !DILocation(line: 2025, column: 18, scope: !9444)
!9523 = !DILocation(line: 2025, column: 7, scope: !9415)
!9524 = !DILocation(line: 0, scope: !9443)
!9525 = !DILocation(line: 0, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 2033, column: 8)
!9527 = !DILocation(line: 0, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 2050, column: 8)
!9529 = !DILocation(line: 2027, column: 7, scope: !9443)
!9530 = !DILocation(line: 2027, column: 14, scope: !9443)
!9531 = !DILocation(line: 2027, column: 51, scope: !9443)
!9532 = !DILocation(line: 2028, column: 7, scope: !9443)
!9533 = !DILocation(line: 2028, column: 14, scope: !9443)
!9534 = !DILocation(line: 2028, column: 18, scope: !9443)
!9535 = !DILocation(line: 2028, column: 10, scope: !9443)
!9536 = !DILocation(line: 2028, column: 54, scope: !9443)
!9537 = !DILocation(line: 2030, column: 21, scope: !9442)
!9538 = !DILocation(line: 0, scope: !9442)
!9539 = !DILocation(line: 2031, column: 8, scope: !9442)
!9540 = !DILocation(line: 2031, column: 4, scope: !9442)
!9541 = !DILocation(line: 2031, column: 24, scope: !9442)
!9542 = !DILocation(line: 2033, column: 9, scope: !9526)
!9543 = !DILocation(line: 2033, column: 8, scope: !9442)
!9544 = !DILocation(line: 2034, column: 6, scope: !9526)
!9545 = !DILocation(line: 2037, column: 15, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 2037, column: 8)
!9547 = !DILocation(line: 2037, column: 8, scope: !9546)
!9548 = !DILocation(line: 2037, column: 8, scope: !9442)
!9549 = !DILocation(line: 2039, column: 13, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9551, file: !3, line: 2039, column: 12)
!9551 = distinct !DILexicalBlock(scope: !9546, file: !3, line: 2038, column: 6)
!9552 = !DILocation(line: 2039, column: 12, scope: !9551)
!9553 = !DILocation(line: 2040, column: 21, scope: !9550)
!9554 = !DILocation(line: 2040, column: 10, scope: !9550)
!9555 = !DILocation(line: 2040, column: 3, scope: !9550)
!9556 = !DILocation(line: 2040, column: 19, scope: !9550)
!9557 = !DILocation(line: 2041, column: 32, scope: !9551)
!9558 = !DILocation(line: 0, scope: !9551)
!9559 = !DILocation(line: 2041, column: 25, scope: !9551)
!9560 = !DILocation(line: 2041, column: 42, scope: !9551)
!9561 = !DILocation(line: 2041, column: 8, scope: !9551)
!9562 = !DILocation(line: 2042, column: 6, scope: !9551)
!9563 = !DILocation(line: 2043, column: 15, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 2043, column: 8)
!9565 = !DILocation(line: 2043, column: 8, scope: !9564)
!9566 = !DILocation(line: 2043, column: 8, scope: !9442)
!9567 = !DILocation(line: 2045, column: 13, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 2045, column: 12)
!9569 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 2044, column: 6)
!9570 = !DILocation(line: 2045, column: 12, scope: !9569)
!9571 = !DILocation(line: 2046, column: 30, scope: !9568)
!9572 = !DILocation(line: 2046, column: 10, scope: !9568)
!9573 = !DILocation(line: 2046, column: 3, scope: !9568)
!9574 = !DILocation(line: 2046, column: 28, scope: !9568)
!9575 = !DILocation(line: 2047, column: 32, scope: !9569)
!9576 = !DILocation(line: 0, scope: !9569)
!9577 = !DILocation(line: 2047, column: 25, scope: !9569)
!9578 = !DILocation(line: 2048, column: 11, scope: !9569)
!9579 = !DILocation(line: 2047, column: 8, scope: !9569)
!9580 = !DILocation(line: 2049, column: 6, scope: !9569)
!9581 = !DILocation(line: 2050, column: 15, scope: !9528)
!9582 = !DILocation(line: 2050, column: 8, scope: !9528)
!9583 = !DILocation(line: 2050, column: 8, scope: !9442)
!9584 = !DILocation(line: 2052, column: 13, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 2052, column: 12)
!9586 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 2051, column: 6)
!9587 = !DILocation(line: 2052, column: 12, scope: !9586)
!9588 = !DILocation(line: 2053, column: 25, scope: !9585)
!9589 = !DILocation(line: 2053, column: 10, scope: !9585)
!9590 = !DILocation(line: 2053, column: 3, scope: !9585)
!9591 = !DILocation(line: 2053, column: 23, scope: !9585)
!9592 = !DILocation(line: 2054, column: 32, scope: !9586)
!9593 = !DILocation(line: 0, scope: !9586)
!9594 = !DILocation(line: 2054, column: 25, scope: !9586)
!9595 = !DILocation(line: 2055, column: 11, scope: !9586)
!9596 = !DILocation(line: 2054, column: 8, scope: !9586)
!9597 = !DILocation(line: 2056, column: 6, scope: !9586)
!9598 = distinct !{!9598, !9529, !9599}
!9599 = !DILocation(line: 2057, column: 2, scope: !9443)
!9600 = !DILocation(line: 2058, column: 20, scope: !9443)
!9601 = !DILocation(line: 2058, column: 7, scope: !9443)
!9602 = !DILocation(line: 2059, column: 5, scope: !9443)
!9603 = !DILocation(line: 2061, column: 5, scope: !9444)
!9604 = !DILocation(line: 2062, column: 1, scope: !9415)
!9605 = distinct !DISubprogram(name: "label_visit", scope: !3, file: !3, line: 2067, type: !9416, scopeLine: 2068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9606)
!9606 = !{!9607, !9608, !9609, !9610, !9611, !9612, !9617}
!9607 = !DILocalVariable(name: "graph", arg: 1, scope: !9605, file: !3, line: 2067, type: !2268)
!9608 = !DILocalVariable(name: "si", arg: 2, scope: !9605, file: !3, line: 2067, type: !2149)
!9609 = !DILocalVariable(name: "n", arg: 3, scope: !9605, file: !3, line: 2067, type: !6)
!9610 = !DILocalVariable(name: "i", scope: !9605, file: !3, line: 2069, type: !6)
!9611 = !DILocalVariable(name: "bi", scope: !9605, file: !3, line: 2070, type: !2961)
!9612 = !DILocalVariable(name: "w", scope: !9613, file: !3, line: 2079, type: !6)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 2078, column: 5)
!9614 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 2077, column: 3)
!9615 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 2077, column: 3)
!9616 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 2077, column: 3)
!9617 = !DILocalVariable(name: "label", scope: !9618, file: !3, line: 2096, type: !6)
!9618 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 2095, column: 5)
!9619 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 2094, column: 7)
!9620 = !DILocation(line: 0, scope: !9605)
!9621 = !DILocation(line: 2069, column: 3, scope: !9605)
!9622 = !DILocation(line: 2070, column: 3, scope: !9605)
!9623 = !DILocation(line: 2071, column: 16, scope: !9605)
!9624 = !DILocation(line: 2071, column: 3, scope: !9605)
!9625 = !DILocation(line: 2073, column: 15, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 2073, column: 7)
!9627 = !DILocation(line: 2073, column: 8, scope: !9626)
!9628 = !DILocation(line: 2073, column: 7, scope: !9605)
!9629 = !DILocation(line: 2074, column: 27, scope: !9626)
!9630 = !DILocation(line: 2074, column: 12, scope: !9626)
!9631 = !DILocation(line: 2074, column: 5, scope: !9626)
!9632 = !DILocation(line: 2074, column: 25, scope: !9626)
!9633 = !DILocation(line: 2077, column: 3, scope: !9616)
!9634 = !DILocation(line: 2077, column: 3, scope: !9605)
!9635 = !DILocation(line: 2077, column: 3, scope: !9615)
!9636 = !DILocation(line: 0, scope: !9613)
!9637 = !DILocation(line: 0, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 2084, column: 11)
!9639 = !DILocation(line: 2077, column: 3, scope: !9614)
!9640 = !DILocation(line: 2079, column: 28, scope: !9613)
!9641 = !DILocation(line: 2079, column: 41, scope: !9613)
!9642 = !DILocation(line: 2079, column: 24, scope: !9613)
!9643 = !DILocation(line: 2080, column: 12, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 2080, column: 11)
!9645 = !DILocation(line: 2080, column: 11, scope: !9613)
!9646 = !DILocation(line: 2081, column: 2, scope: !9644)
!9647 = !DILocation(line: 2084, column: 13, scope: !9638)
!9648 = !DILocation(line: 2084, column: 18, scope: !9638)
!9649 = !DILocation(line: 2084, column: 28, scope: !9638)
!9650 = !DILocation(line: 2084, column: 21, scope: !9638)
!9651 = !DILocation(line: 2084, column: 45, scope: !9638)
!9652 = !DILocation(line: 2084, column: 11, scope: !9613)
!9653 = !DILocation(line: 2087, column: 18, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 2087, column: 11)
!9655 = !DILocation(line: 2087, column: 11, scope: !9654)
!9656 = !DILocation(line: 2087, column: 11, scope: !9613)
!9657 = !DILocation(line: 2088, column: 18, scope: !9654)
!9658 = !DILocation(line: 2088, column: 2, scope: !9654)
!9659 = distinct !{!9659, !9635, !9660}
!9660 = !DILocation(line: 2089, column: 5, scope: !9615)
!9661 = !DILocation(line: 2091, column: 8, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 2091, column: 7)
!9663 = !DILocation(line: 2091, column: 7, scope: !9605)
!9664 = !DILocation(line: 2092, column: 28, scope: !9662)
!9665 = !DILocation(line: 2092, column: 21, scope: !9662)
!9666 = !DILocation(line: 2092, column: 42, scope: !9662)
!9667 = !DILocation(line: 2092, column: 57, scope: !9662)
!9668 = !DILocation(line: 2092, column: 5, scope: !9662)
!9669 = !DILocation(line: 2094, column: 8, scope: !9619)
!9670 = !DILocation(line: 2094, column: 7, scope: !9605)
!9671 = !DILocation(line: 2096, column: 48, scope: !9618)
!9672 = !DILocation(line: 2096, column: 28, scope: !9618)
!9673 = !DILocation(line: 0, scope: !9618)
!9674 = !DILocation(line: 2098, column: 12, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 2098, column: 11)
!9676 = !DILocation(line: 2098, column: 11, scope: !9618)
!9677 = !DILocation(line: 2100, column: 31, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 2099, column: 2)
!9679 = !DILocation(line: 2101, column: 21, scope: !9678)
!9680 = !DILocation(line: 2102, column: 21, scope: !9678)
!9681 = !DILocation(line: 2102, column: 14, scope: !9678)
!9682 = !DILocation(line: 2101, column: 4, scope: !9678)
!9683 = !DILocation(line: 2103, column: 2, scope: !9678)
!9684 = !DILocation(line: 2104, column: 14, scope: !9618)
!9685 = !DILocation(line: 2104, column: 7, scope: !9618)
!9686 = !DILocation(line: 2104, column: 31, scope: !9618)
!9687 = !DILocation(line: 2105, column: 5, scope: !9618)
!9688 = !DILocation(line: 2106, column: 1, scope: !9605)
!9689 = distinct !DISubprogram(name: "equiv_class_lookup", scope: !3, file: !3, line: 1883, type: !9690, scopeLine: 1884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9692)
!9690 = !DISubroutineType(types: !9691)
!9691 = !{!6, !1514, !1598}
!9692 = !{!9693, !9694, !9695, !9696}
!9693 = !DILocalVariable(name: "table", arg: 1, scope: !9689, file: !3, line: 1883, type: !1514)
!9694 = !DILocalVariable(name: "labels", arg: 2, scope: !9689, file: !3, line: 1883, type: !1598)
!9695 = !DILocalVariable(name: "slot", scope: !9689, file: !3, line: 1885, type: !1536)
!9696 = !DILocalVariable(name: "ecl", scope: !9689, file: !3, line: 1886, type: !2174)
!9697 = !DILocation(line: 0, scope: !9689)
!9698 = !DILocation(line: 1886, column: 3, scope: !9689)
!9699 = !DILocation(line: 1888, column: 7, scope: !9689)
!9700 = !DILocation(line: 1888, column: 14, scope: !9689)
!9701 = !DILocation(line: 1889, column: 18, scope: !9689)
!9702 = !DILocation(line: 1889, column: 7, scope: !9689)
!9703 = !DILocation(line: 1889, column: 16, scope: !9689)
!9704 = !DILocation(line: 1891, column: 10, scope: !9689)
!9705 = !DILocation(line: 1893, column: 8, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9689, file: !3, line: 1893, column: 7)
!9707 = !DILocation(line: 1893, column: 7, scope: !9689)
!9708 = !DILocation(line: 1896, column: 35, scope: !9706)
!9709 = !DILocation(line: 1896, column: 43, scope: !9706)
!9710 = !DILocation(line: 1896, column: 5, scope: !9706)
!9711 = !DILocation(line: 0, scope: !9706)
!9712 = !DILocation(line: 1897, column: 1, scope: !9689)
!9713 = distinct !DISubprogram(name: "equiv_class_add", scope: !3, file: !3, line: 1904, type: !9714, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9716)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{null, !1514, !6, !1598}
!9716 = !{!9717, !9718, !9719, !9720, !9721}
!9717 = !DILocalVariable(name: "table", arg: 1, scope: !9713, file: !3, line: 1904, type: !1514)
!9718 = !DILocalVariable(name: "equivalence_class", arg: 2, scope: !9713, file: !3, line: 1904, type: !6)
!9719 = !DILocalVariable(name: "labels", arg: 3, scope: !9713, file: !3, line: 1905, type: !1598)
!9720 = !DILocalVariable(name: "slot", scope: !9713, file: !3, line: 1907, type: !1536)
!9721 = !DILocalVariable(name: "ecl", scope: !9713, file: !3, line: 1908, type: !2179)
!9722 = !DILocation(line: 0, scope: !9713)
!9723 = !DILocation(line: 1908, column: 29, scope: !9713)
!9724 = !DILocation(line: 1910, column: 8, scope: !9713)
!9725 = !DILocation(line: 1910, column: 15, scope: !9713)
!9726 = !DILocation(line: 1911, column: 8, scope: !9713)
!9727 = !DILocation(line: 1911, column: 26, scope: !9713)
!9728 = !DILocation(line: 1912, column: 19, scope: !9713)
!9729 = !DILocation(line: 1912, column: 8, scope: !9713)
!9730 = !DILocation(line: 1912, column: 17, scope: !9713)
!9731 = !DILocation(line: 1914, column: 10, scope: !9713)
!9732 = !DILocation(line: 1916, column: 3, scope: !9713)
!9733 = !DILocation(line: 1917, column: 9, scope: !9713)
!9734 = !DILocation(line: 1918, column: 1, scope: !9713)
!9735 = distinct !DISubprogram(name: "clear_edges_for_node", scope: !3, file: !3, line: 994, type: !9736, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9738)
!9736 = !DISubroutineType(types: !9737)
!9737 = !{null, !2268, !6}
!9738 = !{!9739, !9740}
!9739 = !DILocalVariable(name: "graph", arg: 1, scope: !9735, file: !3, line: 994, type: !2268)
!9740 = !DILocalVariable(name: "node", arg: 2, scope: !9735, file: !3, line: 994, type: !6)
!9741 = !DILocation(line: 0, scope: !9735)
!9742 = !DILocation(line: 996, column: 14, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 996, column: 7)
!9744 = !DILocation(line: 996, column: 7, scope: !9743)
!9745 = !DILocation(line: 996, column: 7, scope: !9735)
!9746 = !DILocation(line: 997, column: 5, scope: !9743)
!9747 = !DILocation(line: 998, column: 1, scope: !9735)
!9748 = distinct !DISubprogram(name: "VEC_unsigned_heap_alloc", scope: !2160, file: !2160, line: 35, type: !9749, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9751)
!9749 = !DISubroutineType(types: !9750)
!9750 = !{!2158, !662}
!9751 = !{!9752}
!9752 = !DILocalVariable(name: "alloc_", arg: 1, scope: !9748, file: !2160, line: 35, type: !662)
!9753 = !DILocation(line: 0, scope: !9748)
!9754 = !DILocation(line: 35, column: 1, scope: !9748)
!9755 = distinct !DISubprogram(name: "VEC_unsigned_base_length", scope: !2160, file: !2160, line: 34, type: !9756, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9760)
!9756 = !DISubroutineType(types: !9757)
!9757 = !{!6, !9758}
!9758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9759, size: 64)
!9759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2164)
!9760 = !{!9761}
!9761 = !DILocalVariable(name: "vec_", arg: 1, scope: !9755, file: !2160, line: 34, type: !9758)
!9762 = !DILocation(line: 0, scope: !9755)
!9763 = !DILocation(line: 34, column: 1, scope: !9755)
!9764 = distinct !DISubprogram(name: "VEC_unsigned_base_last", scope: !2160, file: !2160, line: 34, type: !9756, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9765)
!9765 = !{!9766}
!9766 = !DILocalVariable(name: "vec_", arg: 1, scope: !9764, file: !2160, line: 34, type: !9758)
!9767 = !DILocation(line: 0, scope: !9764)
!9768 = !DILocation(line: 34, column: 1, scope: !9764)
!9769 = distinct !DISubprogram(name: "VEC_unsigned_base_pop", scope: !2160, file: !2160, line: 34, type: !9770, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9773)
!9770 = !DISubroutineType(types: !9771)
!9771 = !{!6, !9772}
!9772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!9773 = !{!9774, !9775}
!9774 = !DILocalVariable(name: "vec_", arg: 1, scope: !9769, file: !2160, line: 34, type: !9772)
!9775 = !DILocalVariable(name: "obj_", scope: !9769, file: !2160, line: 34, type: !6)
!9776 = !DILocation(line: 0, scope: !9769)
!9777 = !DILocation(line: 34, column: 1, scope: !9769)
!9778 = distinct !DISubprogram(name: "VEC_unsigned_heap_safe_push", scope: !2160, file: !2160, line: 35, type: !9779, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9783)
!9779 = !DISubroutineType(types: !9780)
!9780 = !{!2127, !9781, !9782}
!9781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!9782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!9783 = !{!9784, !9785}
!9784 = !DILocalVariable(name: "vec_", arg: 1, scope: !9778, file: !2160, line: 35, type: !9781)
!9785 = !DILocalVariable(name: "obj_", arg: 2, scope: !9778, file: !2160, line: 35, type: !9782)
!9786 = !DILocation(line: 0, scope: !9778)
!9787 = !DILocation(line: 35, column: 1, scope: !9778)
!9788 = distinct !DISubprogram(name: "VEC_unsigned_heap_reserve", scope: !2160, file: !2160, line: 35, type: !9789, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9791)
!9789 = !DISubroutineType(types: !9790)
!9790 = !{!662, !9781, !662}
!9791 = !{!9792, !9793, !9794}
!9792 = !DILocalVariable(name: "vec_", arg: 1, scope: !9788, file: !2160, line: 35, type: !9781)
!9793 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9788, file: !2160, line: 35, type: !662)
!9794 = !DILocalVariable(name: "extend", scope: !9788, file: !2160, line: 35, type: !662)
!9795 = !DILocation(line: 0, scope: !9788)
!9796 = !DILocation(line: 35, column: 1, scope: !9788)
!9797 = !DILocation(line: 35, column: 1, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9788, file: !2160, line: 35, column: 1)
!9799 = distinct !DISubprogram(name: "VEC_unsigned_base_quick_push", scope: !2160, file: !2160, line: 34, type: !9800, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9802)
!9800 = !DISubroutineType(types: !9801)
!9801 = !{!2127, !9772, !6}
!9802 = !{!9803, !9804, !9805}
!9803 = !DILocalVariable(name: "vec_", arg: 1, scope: !9799, file: !2160, line: 34, type: !9772)
!9804 = !DILocalVariable(name: "obj_", arg: 2, scope: !9799, file: !2160, line: 34, type: !6)
!9805 = !DILocalVariable(name: "slot_", scope: !9799, file: !2160, line: 34, type: !2127)
!9806 = !DILocation(line: 0, scope: !9799)
!9807 = !DILocation(line: 34, column: 1, scope: !9799)
!9808 = distinct !DISubprogram(name: "VEC_unsigned_base_space", scope: !2160, file: !2160, line: 34, type: !9809, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9811)
!9809 = !DISubroutineType(types: !9810)
!9810 = !{!662, !9772, !662}
!9811 = !{!9812, !9813}
!9812 = !DILocalVariable(name: "vec_", arg: 1, scope: !9808, file: !2160, line: 34, type: !9772)
!9813 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9808, file: !2160, line: 34, type: !662)
!9814 = !DILocation(line: 0, scope: !9808)
!9815 = !DILocation(line: 34, column: 1, scope: !9808)
!9816 = distinct !DISubprogram(name: "VEC_constraint_t_base_replace", scope: !3, file: !3, line: 189, type: !9817, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9819)
!9817 = !DISubroutineType(types: !9818)
!9818 = !{!670, !5511, !6, !670}
!9819 = !{!9820, !9821, !9822, !9823}
!9820 = !DILocalVariable(name: "vec_", arg: 1, scope: !9816, file: !3, line: 189, type: !5511)
!9821 = !DILocalVariable(name: "ix_", arg: 2, scope: !9816, file: !3, line: 189, type: !6)
!9822 = !DILocalVariable(name: "obj_", arg: 3, scope: !9816, file: !3, line: 189, type: !670)
!9823 = !DILocalVariable(name: "old_obj_", scope: !9816, file: !3, line: 189, type: !670)
!9824 = !DILocation(line: 0, scope: !9816)
!9825 = !DILocation(line: 189, column: 1, scope: !9816)
!9826 = distinct !DISubprogram(name: "find_equivalent_node", scope: !3, file: !3, line: 2236, type: !9827, scopeLine: 2238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9829)
!9827 = !DISubroutineType(types: !9828)
!9828 = !{!6, !2268, !6, !6}
!9829 = !{!9830, !9831, !9832}
!9830 = !DILocalVariable(name: "graph", arg: 1, scope: !9826, file: !3, line: 2236, type: !2268)
!9831 = !DILocalVariable(name: "node", arg: 2, scope: !9826, file: !3, line: 2237, type: !6)
!9832 = !DILocalVariable(name: "label", arg: 3, scope: !9826, file: !3, line: 2237, type: !6)
!9833 = !DILocation(line: 0, scope: !9826)
!9834 = !DILocation(line: 2244, column: 29, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9826, file: !3, line: 2244, column: 7)
!9836 = !DILocation(line: 2244, column: 8, scope: !9835)
!9837 = !DILocation(line: 0, scope: !9835)
!9838 = !DILocation(line: 2244, column: 7, scope: !9826)
!9839 = !DILocation(line: 2246, column: 7, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9835, file: !3, line: 2245, column: 5)
!9841 = !DILocation(line: 2248, column: 18, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 2248, column: 11)
!9843 = !DILocation(line: 2248, column: 11, scope: !9842)
!9844 = !DILocation(line: 2248, column: 32, scope: !9842)
!9845 = !DILocation(line: 2248, column: 11, scope: !9840)
!9846 = !DILocation(line: 2251, column: 8, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 2251, column: 8)
!9848 = distinct !DILexicalBlock(scope: !9842, file: !3, line: 2249, column: 2)
!9849 = !DILocation(line: 2251, column: 8, scope: !9848)
!9850 = !DILocation(line: 2252, column: 33, scope: !9847)
!9851 = !DILocation(line: 2252, column: 26, scope: !9847)
!9852 = !DILocation(line: 2252, column: 6, scope: !9847)
!9853 = !DILocation(line: 2253, column: 18, scope: !9848)
!9854 = !DILocation(line: 2253, column: 11, scope: !9848)
!9855 = !DILocation(line: 2253, column: 4, scope: !9848)
!9856 = !DILocation(line: 2257, column: 25, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9842, file: !3, line: 2256, column: 2)
!9858 = !DILocation(line: 2258, column: 11, scope: !9857)
!9859 = !DILocation(line: 2258, column: 4, scope: !9857)
!9860 = !DILocation(line: 2258, column: 25, scope: !9857)
!9861 = !DILocation(line: 2260, column: 5, scope: !9840)
!9862 = !DILocation(line: 2263, column: 7, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9835, file: !3, line: 2262, column: 5)
!9864 = !DILocation(line: 2264, column: 14, scope: !9863)
!9865 = !DILocation(line: 2264, column: 7, scope: !9863)
!9866 = !DILocation(line: 2264, column: 23, scope: !9863)
!9867 = !DILocation(line: 2265, column: 18, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9863, file: !3, line: 2265, column: 11)
!9869 = !DILocation(line: 2265, column: 11, scope: !9868)
!9870 = !DILocation(line: 2265, column: 32, scope: !9868)
!9871 = !DILocation(line: 2265, column: 11, scope: !9863)
!9872 = !DILocation(line: 2266, column: 23, scope: !9868)
!9873 = !DILocation(line: 2266, column: 2, scope: !9868)
!9874 = !DILocation(line: 2270, column: 1, scope: !9826)
!9875 = distinct !DISubprogram(name: "unite", scope: !3, file: !3, line: 532, type: !9876, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9878)
!9876 = !DISubroutineType(types: !9877)
!9877 = !{!661, !6, !6}
!9878 = !{!9879, !9880}
!9879 = !DILocalVariable(name: "to", arg: 1, scope: !9875, file: !3, line: 532, type: !6)
!9880 = !DILocalVariable(name: "from", arg: 2, scope: !9875, file: !3, line: 532, type: !6)
!9881 = !DILocation(line: 0, scope: !9875)
!9882 = !DILocation(line: 534, column: 3, scope: !9875)
!9883 = !DILocation(line: 535, column: 10, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 535, column: 7)
!9885 = !DILocation(line: 535, column: 18, scope: !9884)
!9886 = !DILocation(line: 535, column: 21, scope: !9884)
!9887 = !DILocation(line: 535, column: 28, scope: !9884)
!9888 = !DILocation(line: 535, column: 38, scope: !9884)
!9889 = !DILocation(line: 535, column: 7, scope: !9875)
!9890 = !DILocation(line: 537, column: 24, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9884, file: !3, line: 536, column: 5)
!9892 = !DILocation(line: 538, column: 7, scope: !9891)
!9893 = !DILocation(line: 541, column: 1, scope: !9875)
!9894 = distinct !DISubprogram(name: "unify_nodes", scope: !3, file: !3, line: 1400, type: !9895, scopeLine: 1402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9897)
!9895 = !DISubroutineType(types: !9896)
!9896 = !{null, !2268, !6, !6, !661}
!9897 = !{!9898, !9899, !9900, !9901}
!9898 = !DILocalVariable(name: "graph", arg: 1, scope: !9894, file: !3, line: 1400, type: !2268)
!9899 = !DILocalVariable(name: "to", arg: 2, scope: !9894, file: !3, line: 1400, type: !6)
!9900 = !DILocalVariable(name: "from", arg: 3, scope: !9894, file: !3, line: 1400, type: !6)
!9901 = !DILocalVariable(name: "update_changed", arg: 4, scope: !9894, file: !3, line: 1401, type: !661)
!9902 = !DILocation(line: 0, scope: !9894)
!9903 = !DILocation(line: 1404, column: 3, scope: !9894)
!9904 = !DILocation(line: 1405, column: 7, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 1405, column: 7)
!9906 = !DILocation(line: 1405, column: 17, scope: !9905)
!9907 = !DILocation(line: 1405, column: 21, scope: !9905)
!9908 = !DILocation(line: 1405, column: 32, scope: !9905)
!9909 = !DILocation(line: 1405, column: 7, scope: !9894)
!9910 = !DILocation(line: 1407, column: 7, scope: !9905)
!9911 = !DILocation(line: 1407, column: 27, scope: !9905)
!9912 = !DILocation(line: 1408, column: 7, scope: !9905)
!9913 = !DILocation(line: 1408, column: 25, scope: !9905)
!9914 = !DILocation(line: 1406, column: 5, scope: !9905)
!9915 = !DILocation(line: 1410, column: 7, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 1410, column: 7)
!9917 = !DILocation(line: 1410, column: 7, scope: !9894)
!9918 = !DILocation(line: 1411, column: 31, scope: !9916)
!9919 = !DILocation(line: 1411, column: 5, scope: !9916)
!9920 = !DILocation(line: 1413, column: 30, scope: !9916)
!9921 = !DILocation(line: 1415, column: 3, scope: !9894)
!9922 = !DILocation(line: 1416, column: 3, scope: !9894)
!9923 = !DILocation(line: 1421, column: 22, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 1421, column: 7)
!9925 = !DILocation(line: 1421, column: 25, scope: !9924)
!9926 = !DILocation(line: 1421, column: 7, scope: !9894)
!9927 = !DILocation(line: 1423, column: 7, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9924, file: !3, line: 1422, column: 5)
!9929 = !DILocation(line: 1424, column: 12, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 1424, column: 11)
!9931 = !DILocation(line: 1424, column: 11, scope: !9928)
!9932 = !DILocation(line: 1425, column: 2, scope: !9930)
!9933 = !DILocation(line: 1428, column: 4, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 1427, column: 2)
!9935 = !DILocation(line: 1429, column: 17, scope: !9934)
!9936 = !DILocation(line: 1432, column: 7, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 1432, column: 7)
!9938 = !DILocation(line: 1432, column: 27, scope: !9937)
!9939 = !DILocation(line: 1432, column: 7, scope: !9894)
!9940 = !DILocation(line: 1436, column: 28, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 1436, column: 11)
!9942 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 1433, column: 5)
!9943 = !DILocation(line: 1436, column: 46, scope: !9941)
!9944 = !DILocation(line: 1437, column: 7, scope: !9941)
!9945 = !DILocation(line: 1437, column: 27, scope: !9941)
!9946 = !DILocation(line: 1436, column: 11, scope: !9941)
!9947 = !DILocation(line: 1439, column: 8, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9949, file: !3, line: 1439, column: 8)
!9949 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 1438, column: 2)
!9950 = !DILocation(line: 1436, column: 11, scope: !9942)
!9951 = !DILocation(line: 1439, column: 27, scope: !9948)
!9952 = !DILocation(line: 1439, column: 8, scope: !9949)
!9953 = !DILocation(line: 1441, column: 8, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9948, file: !3, line: 1440, column: 6)
!9955 = !DILocation(line: 1442, column: 21, scope: !9954)
!9956 = !DILocation(line: 1443, column: 6, scope: !9954)
!9957 = !DILocation(line: 1446, column: 7, scope: !9942)
!9958 = !DILocation(line: 1447, column: 7, scope: !9942)
!9959 = !DILocation(line: 1449, column: 17, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 1449, column: 11)
!9961 = !DILocation(line: 1449, column: 28, scope: !9960)
!9962 = !DILocation(line: 1449, column: 11, scope: !9942)
!9963 = !DILocation(line: 1451, column: 4, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 1450, column: 2)
!9965 = !DILocation(line: 1452, column: 36, scope: !9964)
!9966 = !DILocation(line: 1452, column: 4, scope: !9964)
!9967 = !DILocation(line: 1452, column: 22, scope: !9964)
!9968 = !DILocation(line: 1452, column: 34, scope: !9964)
!9969 = !DILocation(line: 1453, column: 2, scope: !9964)
!9970 = !DILocation(line: 1455, column: 7, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 1455, column: 7)
!9972 = !DILocation(line: 1455, column: 7, scope: !9894)
!9973 = !DILocation(line: 1457, column: 18, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 1457, column: 11)
!9975 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 1456, column: 5)
!9976 = !DILocation(line: 1457, column: 11, scope: !9974)
!9977 = !DILocation(line: 1457, column: 11, scope: !9975)
!9978 = !DILocation(line: 1458, column: 2, scope: !9974)
!9979 = !DILocation(line: 1460, column: 1, scope: !9894)
!9980 = distinct !DISubprogram(name: "merge_graph_nodes", scope: !3, file: !3, line: 1003, type: !9278, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9981)
!9981 = !{!9982, !9983, !9984}
!9982 = !DILocalVariable(name: "graph", arg: 1, scope: !9980, file: !3, line: 1003, type: !2268)
!9983 = !DILocalVariable(name: "to", arg: 2, scope: !9980, file: !3, line: 1003, type: !6)
!9984 = !DILocalVariable(name: "from", arg: 3, scope: !9980, file: !3, line: 1004, type: !6)
!9985 = !DILocation(line: 0, scope: !9980)
!9986 = !DILocation(line: 1006, column: 14, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 1006, column: 7)
!9988 = !DILocation(line: 1006, column: 7, scope: !9987)
!9989 = !DILocation(line: 1006, column: 36, scope: !9987)
!9990 = !DILocation(line: 1006, column: 7, scope: !9980)
!9991 = !DILocation(line: 1014, column: 11, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 1014, column: 11)
!9993 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 1007, column: 5)
!9994 = !DILocation(line: 1014, column: 38, scope: !9992)
!9995 = !DILocation(line: 1014, column: 11, scope: !9993)
!9996 = !DILocation(line: 1015, column: 29, scope: !9992)
!9997 = !DILocation(line: 1015, column: 2, scope: !9992)
!9998 = !DILocation(line: 1019, column: 14, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 1019, column: 7)
!10000 = !DILocation(line: 1019, column: 7, scope: !9999)
!10001 = !DILocation(line: 1019, column: 7, scope: !9980)
!10002 = !DILocation(line: 1021, column: 12, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1021, column: 11)
!10004 = distinct !DILexicalBlock(scope: !9999, file: !3, line: 1020, column: 5)
!10005 = !DILocation(line: 1021, column: 11, scope: !10004)
!10006 = !DILocation(line: 1022, column: 21, scope: !10003)
!10007 = !DILocation(line: 1022, column: 9, scope: !10003)
!10008 = !DILocation(line: 1022, column: 2, scope: !10003)
!10009 = !DILocation(line: 1022, column: 19, scope: !10003)
!10010 = !DILocation(line: 1023, column: 31, scope: !10004)
!10011 = !DILocation(line: 0, scope: !10004)
!10012 = !DILocation(line: 1023, column: 24, scope: !10004)
!10013 = !DILocation(line: 1024, column: 10, scope: !10004)
!10014 = !DILocation(line: 1023, column: 7, scope: !10004)
!10015 = !DILocation(line: 1025, column: 5, scope: !10004)
!10016 = !DILocation(line: 1027, column: 3, scope: !9980)
!10017 = !DILocation(line: 1028, column: 1, scope: !9980)
!10018 = distinct !DISubprogram(name: "merge_node_constraints", scope: !3, file: !3, line: 963, type: !9278, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10019)
!10019 = !{!10020, !10021, !10022, !10023, !10024}
!10020 = !DILocalVariable(name: "graph", arg: 1, scope: !10018, file: !3, line: 963, type: !2268)
!10021 = !DILocalVariable(name: "to", arg: 2, scope: !10018, file: !3, line: 963, type: !6)
!10022 = !DILocalVariable(name: "from", arg: 3, scope: !10018, file: !3, line: 964, type: !6)
!10023 = !DILocalVariable(name: "i", scope: !10018, file: !3, line: 966, type: !6)
!10024 = !DILocalVariable(name: "c", scope: !10018, file: !3, line: 967, type: !670)
!10025 = !DILocation(line: 0, scope: !10018)
!10026 = !DILocation(line: 967, column: 3, scope: !10018)
!10027 = !DILocation(line: 969, column: 3, scope: !10018)
!10028 = !DILocation(line: 0, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10030, file: !3, line: 972, column: 3)
!10030 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 972, column: 3)
!10031 = !DILocation(line: 972, column: 8, scope: !10030)
!10032 = !DILocation(line: 0, scope: !10030)
!10033 = !DILocation(line: 972, column: 15, scope: !10029)
!10034 = !DILocation(line: 972, column: 3, scope: !10030)
!10035 = !DILocation(line: 978, column: 11, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 978, column: 11)
!10037 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 973, column: 5)
!10038 = !DILocation(line: 978, column: 18, scope: !10036)
!10039 = !DILocation(line: 978, column: 23, scope: !10036)
!10040 = !DILocation(line: 978, column: 11, scope: !10037)
!10041 = !DILocation(line: 979, column: 9, scope: !10036)
!10042 = !DILocation(line: 979, column: 13, scope: !10036)
!10043 = !DILocation(line: 979, column: 2, scope: !10036)
!10044 = !DILocation(line: 980, column: 23, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 980, column: 16)
!10046 = !DILocation(line: 980, column: 28, scope: !10045)
!10047 = !DILocation(line: 980, column: 16, scope: !10036)
!10048 = !DILocation(line: 981, column: 9, scope: !10045)
!10049 = !DILocation(line: 981, column: 13, scope: !10045)
!10050 = !DILocation(line: 981, column: 2, scope: !10045)
!10051 = !DILocation(line: 983, column: 9, scope: !10045)
!10052 = !DILocation(line: 983, column: 13, scope: !10045)
!10053 = !DILocation(line: 972, column: 72, scope: !10029)
!10054 = !DILocation(line: 972, column: 3, scope: !10029)
!10055 = distinct !{!10055, !10034, !10056}
!10056 = !DILocation(line: 984, column: 5, scope: !10030)
!10057 = !DILocation(line: 985, column: 33, scope: !10018)
!10058 = !DILocation(line: 985, column: 26, scope: !10018)
!10059 = !DILocation(line: 985, column: 47, scope: !10018)
!10060 = !DILocation(line: 985, column: 3, scope: !10018)
!10061 = !DILocation(line: 986, column: 3, scope: !10018)
!10062 = !DILocation(line: 987, column: 10, scope: !10018)
!10063 = !DILocation(line: 987, column: 3, scope: !10018)
!10064 = !DILocation(line: 987, column: 24, scope: !10018)
!10065 = !DILocation(line: 988, column: 1, scope: !10018)
!10066 = distinct !DISubprogram(name: "valid_graph_edge", scope: !3, file: !3, line: 1093, type: !10067, scopeLine: 1095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10069)
!10067 = !DISubroutineType(types: !10068)
!10068 = !{!661, !2268, !6, !6}
!10069 = !{!10070, !10071, !10072}
!10070 = !DILocalVariable(name: "graph", arg: 1, scope: !10066, file: !3, line: 1093, type: !2268)
!10071 = !DILocalVariable(name: "src", arg: 2, scope: !10066, file: !3, line: 1093, type: !6)
!10072 = !DILocalVariable(name: "dest", arg: 3, scope: !10066, file: !3, line: 1094, type: !6)
!10073 = !DILocation(line: 0, scope: !10066)
!10074 = !DILocation(line: 1096, column: 18, scope: !10066)
!10075 = !DILocation(line: 1096, column: 11, scope: !10066)
!10076 = !DILocation(line: 1097, column: 4, scope: !10066)
!10077 = !DILocation(line: 1097, column: 7, scope: !10066)
!10078 = !DILocation(line: 1096, column: 3, scope: !10066)
!10079 = distinct !DISubprogram(name: "constraint_set_union", scope: !3, file: !3, line: 809, type: !10080, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10082)
!10080 = !DISubroutineType(types: !10081)
!10081 = !{null, !2148, !2148}
!10082 = !{!10083, !10084, !10085, !10086, !10087}
!10083 = !DILocalVariable(name: "to", arg: 1, scope: !10079, file: !3, line: 809, type: !2148)
!10084 = !DILocalVariable(name: "from", arg: 2, scope: !10079, file: !3, line: 810, type: !2148)
!10085 = !DILocalVariable(name: "i", scope: !10079, file: !3, line: 812, type: !662)
!10086 = !DILocalVariable(name: "c", scope: !10079, file: !3, line: 813, type: !670)
!10087 = !DILocalVariable(name: "place", scope: !10088, file: !3, line: 819, type: !6)
!10088 = distinct !DILexicalBlock(scope: !10089, file: !3, line: 818, column: 2)
!10089 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 817, column: 11)
!10090 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 816, column: 5)
!10091 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 815, column: 3)
!10092 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 815, column: 3)
!10093 = !DILocation(line: 0, scope: !10079)
!10094 = !DILocation(line: 813, column: 3, scope: !10079)
!10095 = !DILocation(line: 815, column: 8, scope: !10092)
!10096 = !DILocation(line: 0, scope: !10092)
!10097 = !DILocation(line: 815, column: 15, scope: !10091)
!10098 = !DILocation(line: 815, column: 3, scope: !10092)
!10099 = !DILocation(line: 817, column: 32, scope: !10089)
!10100 = !DILocation(line: 817, column: 38, scope: !10089)
!10101 = !DILocation(line: 817, column: 11, scope: !10089)
!10102 = !DILocation(line: 817, column: 41, scope: !10089)
!10103 = !DILocation(line: 817, column: 11, scope: !10090)
!10104 = !DILocation(line: 819, column: 25, scope: !10088)
!10105 = !DILocation(line: 0, scope: !10088)
!10106 = !DILocation(line: 821, column: 4, scope: !10088)
!10107 = !DILocation(line: 822, column: 2, scope: !10088)
!10108 = !DILocation(line: 815, column: 57, scope: !10091)
!10109 = !DILocation(line: 815, column: 3, scope: !10091)
!10110 = distinct !{!10110, !10098, !10111}
!10111 = !DILocation(line: 823, column: 5, scope: !10092)
!10112 = !DILocation(line: 824, column: 1, scope: !10079)
!10113 = distinct !DISubprogram(name: "VEC_constraint_t_heap_free", scope: !3, file: !3, line: 190, type: !10114, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10116)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{null, !2148}
!10116 = !{!10117}
!10117 = !DILocalVariable(name: "vec_", arg: 1, scope: !10113, file: !3, line: 190, type: !2148)
!10118 = !DILocation(line: 0, scope: !10113)
!10119 = !DILocation(line: 190, column: 1, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 190, column: 1)
!10121 = !DILocation(line: 190, column: 1, scope: !10113)
!10122 = distinct !DISubprogram(name: "constraint_vec_find", scope: !3, file: !3, line: 788, type: !10123, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10125)
!10123 = !DISubroutineType(types: !10124)
!10124 = !{!670, !685, !672}
!10125 = !{!10126, !10127, !10128, !10129}
!10126 = !DILocalVariable(name: "vec", arg: 1, scope: !10122, file: !3, line: 788, type: !685)
!10127 = !DILocalVariable(name: "lookfor", arg: 2, scope: !10122, file: !3, line: 789, type: !672)
!10128 = !DILocalVariable(name: "place", scope: !10122, file: !3, line: 791, type: !6)
!10129 = !DILocalVariable(name: "found", scope: !10122, file: !3, line: 792, type: !670)
!10130 = !DILocation(line: 0, scope: !10122)
!10131 = !DILocation(line: 789, column: 26, scope: !10122)
!10132 = !DILocation(line: 794, column: 11, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 794, column: 7)
!10134 = !DILocation(line: 794, column: 7, scope: !10122)
!10135 = !DILocation(line: 797, column: 11, scope: !10122)
!10136 = !DILocation(line: 798, column: 16, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 798, column: 7)
!10138 = !DILocation(line: 798, column: 13, scope: !10137)
!10139 = !DILocation(line: 798, column: 7, scope: !10122)
!10140 = !DILocation(line: 800, column: 11, scope: !10122)
!10141 = !DILocation(line: 801, column: 8, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 801, column: 7)
!10143 = !DILocation(line: 804, column: 1, scope: !10122)
!10144 = distinct !DISubprogram(name: "VEC_constraint_t_base_lower_bound", scope: !3, file: !3, line: 189, type: !10145, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10151)
!10145 = !DISubroutineType(types: !10146)
!10146 = !{!6, !5511, !10147, !10148}
!10147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !670)
!10148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10149, size: 64)
!10149 = !DISubroutineType(types: !10150)
!10150 = !{!661, !10147, !10147}
!10151 = !{!10152, !10153, !10154, !10155, !10156, !10157, !10158, !10159}
!10152 = !DILocalVariable(name: "vec_", arg: 1, scope: !10144, file: !3, line: 189, type: !5511)
!10153 = !DILocalVariable(name: "obj_", arg: 2, scope: !10144, file: !3, line: 189, type: !10147)
!10154 = !DILocalVariable(name: "lessthan_", arg: 3, scope: !10144, file: !3, line: 189, type: !10148)
!10155 = !DILocalVariable(name: "len_", scope: !10144, file: !3, line: 189, type: !6)
!10156 = !DILocalVariable(name: "half_", scope: !10144, file: !3, line: 189, type: !6)
!10157 = !DILocalVariable(name: "middle_", scope: !10144, file: !3, line: 189, type: !6)
!10158 = !DILocalVariable(name: "first_", scope: !10144, file: !3, line: 189, type: !6)
!10159 = !DILocalVariable(name: "middle_elem_", scope: !10160, file: !3, line: 189, type: !670)
!10160 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 189, column: 1)
!10161 = !DILocation(line: 0, scope: !10144)
!10162 = !DILocation(line: 189, column: 1, scope: !10144)
!10163 = !DILocation(line: 189, column: 1, scope: !10160)
!10164 = !DILocation(line: 0, scope: !10160)
!10165 = !DILocation(line: 189, column: 1, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10160, file: !3, line: 189, column: 1)
!10167 = !DILocation(line: 189, column: 1, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10166, file: !3, line: 189, column: 1)
!10169 = !DILocation(line: 0, scope: !10166)
!10170 = distinct !{!10170, !10162, !10162}
!10171 = distinct !DISubprogram(name: "constraint_less", scope: !3, file: !3, line: 765, type: !10149, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10172)
!10172 = !{!10173, !10174}
!10173 = !DILocalVariable(name: "a", arg: 1, scope: !10171, file: !3, line: 765, type: !10147)
!10174 = !DILocalVariable(name: "b", arg: 2, scope: !10171, file: !3, line: 765, type: !10147)
!10175 = !DILocation(line: 0, scope: !10171)
!10176 = !DILocation(line: 767, column: 7, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 767, column: 7)
!10178 = !DILocation(line: 767, column: 7, scope: !10171)
!10179 = !DILocation(line: 769, column: 12, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10177, file: !3, line: 769, column: 12)
!10181 = !DILocation(line: 769, column: 12, scope: !10177)
!10182 = !DILocation(line: 772, column: 37, scope: !10180)
!10183 = !DILocation(line: 772, column: 45, scope: !10180)
!10184 = !DILocation(line: 772, column: 12, scope: !10180)
!10185 = !DILocation(line: 772, column: 5, scope: !10180)
!10186 = !DILocation(line: 0, scope: !10177)
!10187 = !DILocation(line: 773, column: 1, scope: !10171)
!10188 = distinct !DISubprogram(name: "VEC_constraint_t_heap_safe_insert", scope: !3, file: !3, line: 190, type: !10189, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10191)
!10189 = !DISubroutineType(types: !10190)
!10190 = !{!3989, !2148, !6, !670}
!10191 = !{!10192, !10193, !10194}
!10192 = !DILocalVariable(name: "vec_", arg: 1, scope: !10188, file: !3, line: 190, type: !2148)
!10193 = !DILocalVariable(name: "ix_", arg: 2, scope: !10188, file: !3, line: 190, type: !6)
!10194 = !DILocalVariable(name: "obj_", arg: 3, scope: !10188, file: !3, line: 190, type: !670)
!10195 = !DILocation(line: 0, scope: !10188)
!10196 = !DILocation(line: 190, column: 1, scope: !10188)
!10197 = distinct !DISubprogram(name: "VEC_constraint_t_base_length", scope: !3, file: !3, line: 189, type: !10198, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10200)
!10198 = !DISubroutineType(types: !10199)
!10199 = !{!6, !3987}
!10200 = !{!10201}
!10201 = !DILocalVariable(name: "vec_", arg: 1, scope: !10197, file: !3, line: 189, type: !3987)
!10202 = !DILocation(line: 0, scope: !10197)
!10203 = !DILocation(line: 189, column: 1, scope: !10197)
!10204 = distinct !DISubprogram(name: "VEC_constraint_t_base_index", scope: !3, file: !3, line: 189, type: !10205, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10207)
!10205 = !DISubroutineType(types: !10206)
!10206 = !{!670, !3987, !6}
!10207 = !{!10208, !10209}
!10208 = !DILocalVariable(name: "vec_", arg: 1, scope: !10204, file: !3, line: 189, type: !3987)
!10209 = !DILocalVariable(name: "ix_", arg: 2, scope: !10204, file: !3, line: 189, type: !6)
!10210 = !DILocation(line: 0, scope: !10204)
!10211 = !DILocation(line: 189, column: 1, scope: !10204)
!10212 = distinct !DISubprogram(name: "constraint_equal", scope: !3, file: !3, line: 778, type: !10213, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10215)
!10213 = !DISubroutineType(types: !10214)
!10214 = !{!661, !672, !672}
!10215 = !{!10216, !10217}
!10216 = !DILocalVariable(name: "a", arg: 1, scope: !10212, file: !3, line: 778, type: !672)
!10217 = !DILocalVariable(name: "b", arg: 2, scope: !10212, file: !3, line: 778, type: !672)
!10218 = !DILocation(line: 778, column: 37, scope: !10212)
!10219 = !DILocation(line: 778, column: 58, scope: !10212)
!10220 = !DILocation(line: 780, column: 10, scope: !10212)
!10221 = !DILocation(line: 781, column: 5, scope: !10212)
!10222 = !DILocation(line: 781, column: 33, scope: !10212)
!10223 = !DILocation(line: 781, column: 40, scope: !10212)
!10224 = !DILocation(line: 781, column: 8, scope: !10212)
!10225 = !DILocation(line: 780, column: 3, scope: !10212)
!10226 = distinct !DISubprogram(name: "constraint_expr_equal", scope: !3, file: !3, line: 738, type: !10227, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10229)
!10227 = !DISubroutineType(types: !10228)
!10228 = !{!661, !675, !675}
!10229 = !{!10230, !10231}
!10230 = !DILocalVariable(name: "a", arg: 1, scope: !10226, file: !3, line: 738, type: !675)
!10231 = !DILocalVariable(name: "b", arg: 2, scope: !10226, file: !3, line: 738, type: !675)
!10232 = !DILocation(line: 740, column: 12, scope: !10226)
!10233 = !DILocation(line: 740, column: 22, scope: !10226)
!10234 = !DILocation(line: 740, column: 17, scope: !10226)
!10235 = !DILocation(line: 740, column: 27, scope: !10226)
!10236 = !DILocation(line: 740, column: 36, scope: !10226)
!10237 = !DILocation(line: 740, column: 45, scope: !10226)
!10238 = !DILocation(line: 740, column: 57, scope: !10226)
!10239 = !DILocation(line: 740, column: 3, scope: !10226)
!10240 = distinct !DISubprogram(name: "constraint_expr_less", scope: !3, file: !3, line: 748, type: !10227, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10241)
!10241 = !{!10242, !10243}
!10242 = !DILocalVariable(name: "a", arg: 1, scope: !10240, file: !3, line: 748, type: !675)
!10243 = !DILocalVariable(name: "b", arg: 2, scope: !10240, file: !3, line: 748, type: !675)
!10244 = !DILocation(line: 750, column: 9, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 750, column: 7)
!10246 = !DILocation(line: 750, column: 19, scope: !10245)
!10247 = !DILocation(line: 750, column: 14, scope: !10245)
!10248 = !DILocation(line: 750, column: 7, scope: !10240)
!10249 = !DILocation(line: 752, column: 17, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10251, file: !3, line: 752, column: 11)
!10251 = distinct !DILexicalBlock(scope: !10245, file: !3, line: 751, column: 5)
!10252 = !DILocation(line: 752, column: 11, scope: !10251)
!10253 = !DILocation(line: 753, column: 18, scope: !10250)
!10254 = !DILocation(line: 753, column: 2, scope: !10250)
!10255 = !DILocation(line: 755, column: 15, scope: !10250)
!10256 = !DILocation(line: 755, column: 2, scope: !10250)
!10257 = !DILocation(line: 758, column: 19, scope: !10245)
!10258 = !DILocation(line: 758, column: 5, scope: !10245)
!10259 = !DILocation(line: 0, scope: !10245)
!10260 = !DILocation(line: 759, column: 1, scope: !10240)
!10261 = distinct !DISubprogram(name: "VEC_constraint_t_base_quick_insert", scope: !3, file: !3, line: 189, type: !10262, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10264)
!10262 = !DISubroutineType(types: !10263)
!10263 = !{!3989, !5511, !6, !670}
!10264 = !{!10265, !10266, !10267, !10268}
!10265 = !DILocalVariable(name: "vec_", arg: 1, scope: !10261, file: !3, line: 189, type: !5511)
!10266 = !DILocalVariable(name: "ix_", arg: 2, scope: !10261, file: !3, line: 189, type: !6)
!10267 = !DILocalVariable(name: "obj_", arg: 3, scope: !10261, file: !3, line: 189, type: !670)
!10268 = !DILocalVariable(name: "slot_", scope: !10261, file: !3, line: 189, type: !3989)
!10269 = !DILocation(line: 0, scope: !10261)
!10270 = !DILocation(line: 189, column: 1, scope: !10261)
!10271 = distinct !DISubprogram(name: "add_graph_edge", scope: !3, file: !3, line: 1066, type: !10067, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10272)
!10272 = !{!10273, !10274, !10275, !10276}
!10273 = !DILocalVariable(name: "graph", arg: 1, scope: !10271, file: !3, line: 1066, type: !2268)
!10274 = !DILocalVariable(name: "to", arg: 2, scope: !10271, file: !3, line: 1066, type: !6)
!10275 = !DILocalVariable(name: "from", arg: 3, scope: !10271, file: !3, line: 1067, type: !6)
!10276 = !DILocalVariable(name: "r", scope: !10277, file: !3, line: 1075, type: !661)
!10277 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 1074, column: 5)
!10278 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1069, column: 7)
!10279 = !DILocation(line: 0, scope: !10271)
!10280 = !DILocation(line: 1069, column: 10, scope: !10278)
!10281 = !DILocation(line: 1069, column: 7, scope: !10271)
!10282 = !DILocation(line: 0, scope: !10277)
!10283 = !DILocation(line: 1077, column: 19, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 1077, column: 11)
!10285 = !DILocation(line: 1077, column: 12, scope: !10284)
!10286 = !DILocation(line: 1077, column: 11, scope: !10277)
!10287 = !DILocation(line: 1078, column: 23, scope: !10284)
!10288 = !DILocation(line: 1078, column: 9, scope: !10284)
!10289 = !DILocation(line: 1078, column: 2, scope: !10284)
!10290 = !DILocation(line: 1078, column: 21, scope: !10284)
!10291 = !DILocation(line: 1079, column: 34, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 1079, column: 11)
!10293 = !DILocation(line: 0, scope: !10292)
!10294 = !DILocation(line: 1079, column: 27, scope: !10292)
!10295 = !DILocation(line: 1079, column: 11, scope: !10292)
!10296 = !DILocation(line: 1079, column: 11, scope: !10277)
!10297 = !DILocation(line: 1082, column: 13, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 1082, column: 8)
!10299 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 1080, column: 2)
!10300 = !DILocation(line: 1082, column: 11, scope: !10298)
!10301 = !DILocation(line: 1082, column: 28, scope: !10298)
!10302 = !DILocation(line: 1082, column: 38, scope: !10298)
!10303 = !DILocation(line: 1082, column: 36, scope: !10298)
!10304 = !DILocation(line: 1082, column: 8, scope: !10299)
!10305 = !DILocation(line: 1083, column: 21, scope: !10298)
!10306 = !DILocation(line: 1083, column: 6, scope: !10298)
!10307 = !DILocation(line: 0, scope: !10278)
!10308 = !DILocation(line: 1087, column: 1, scope: !10271)
!10309 = distinct !DISubprogram(name: "free_scc_info", scope: !3, file: !3, line: 1793, type: !8824, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10310)
!10310 = !{!10311}
!10311 = !DILocalVariable(name: "si", arg: 1, scope: !10309, file: !3, line: 1793, type: !2149)
!10312 = !DILocation(line: 0, scope: !10309)
!10313 = !DILocation(line: 1795, column: 3, scope: !10309)
!10314 = !DILocation(line: 1796, column: 3, scope: !10309)
!10315 = !DILocation(line: 1797, column: 13, scope: !10309)
!10316 = !DILocation(line: 1797, column: 3, scope: !10309)
!10317 = !DILocation(line: 1798, column: 13, scope: !10309)
!10318 = !DILocation(line: 1798, column: 3, scope: !10309)
!10319 = !DILocation(line: 1799, column: 3, scope: !10309)
!10320 = !DILocation(line: 1800, column: 9, scope: !10309)
!10321 = !DILocation(line: 1800, column: 3, scope: !10309)
!10322 = !DILocation(line: 1801, column: 1, scope: !10309)
!10323 = distinct !DISubprogram(name: "VEC_unsigned_heap_free", scope: !2160, file: !2160, line: 35, type: !10324, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10326)
!10324 = !DISubroutineType(types: !10325)
!10325 = !{null, !9781}
!10326 = !{!10327}
!10327 = !DILocalVariable(name: "vec_", arg: 1, scope: !10323, file: !2160, line: 35, type: !9781)
!10328 = !DILocation(line: 0, scope: !10323)
!10329 = !DILocation(line: 35, column: 1, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10323, file: !2160, line: 35, column: 1)
!10331 = !DILocation(line: 35, column: 1, scope: !10323)
!10332 = distinct !DISubprogram(name: "insert_into_complex", scope: !3, file: !3, line: 945, type: !10333, scopeLine: 947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10335)
!10333 = !DISubroutineType(types: !10334)
!10334 = !{null, !2268, !6, !670}
!10335 = !{!10336, !10337, !10338, !10339, !10340}
!10336 = !DILocalVariable(name: "graph", arg: 1, scope: !10332, file: !3, line: 945, type: !2268)
!10337 = !DILocalVariable(name: "var", arg: 2, scope: !10332, file: !3, line: 946, type: !6)
!10338 = !DILocalVariable(name: "c", arg: 3, scope: !10332, file: !3, line: 946, type: !670)
!10339 = !DILocalVariable(name: "complex", scope: !10332, file: !3, line: 948, type: !685)
!10340 = !DILocalVariable(name: "place", scope: !10332, file: !3, line: 949, type: !6)
!10341 = !DILocation(line: 0, scope: !10332)
!10342 = !DILocation(line: 948, column: 46, scope: !10332)
!10343 = !DILocation(line: 948, column: 39, scope: !10332)
!10344 = !DILocation(line: 949, column: 24, scope: !10332)
!10345 = !DILocation(line: 953, column: 16, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 953, column: 7)
!10347 = !DILocation(line: 953, column: 13, scope: !10346)
!10348 = !DILocation(line: 954, column: 7, scope: !10346)
!10349 = !DILocation(line: 954, column: 34, scope: !10346)
!10350 = !DILocation(line: 954, column: 11, scope: !10346)
!10351 = !DILocation(line: 953, column: 7, scope: !10332)
!10352 = !DILocation(line: 955, column: 5, scope: !10346)
!10353 = !DILocation(line: 956, column: 1, scope: !10332)
!10354 = distinct !DISubprogram(name: "scc_visit", scope: !3, file: !3, line: 1317, type: !9416, scopeLine: 1318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10355)
!10355 = !{!10356, !10357, !10358, !10359, !10360, !10361, !10362, !10367, !10369, !10370, !10375, !10376, !10377}
!10356 = !DILocalVariable(name: "graph", arg: 1, scope: !10354, file: !3, line: 1317, type: !2268)
!10357 = !DILocalVariable(name: "si", arg: 2, scope: !10354, file: !3, line: 1317, type: !2149)
!10358 = !DILocalVariable(name: "n", arg: 3, scope: !10354, file: !3, line: 1317, type: !6)
!10359 = !DILocalVariable(name: "i", scope: !10354, file: !3, line: 1319, type: !6)
!10360 = !DILocalVariable(name: "bi", scope: !10354, file: !3, line: 1320, type: !2961)
!10361 = !DILocalVariable(name: "my_dfs", scope: !10354, file: !3, line: 1321, type: !6)
!10362 = !DILocalVariable(name: "w", scope: !10363, file: !3, line: 1330, type: !6)
!10363 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 1329, column: 5)
!10364 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 1328, column: 3)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 1328, column: 3)
!10366 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 1328, column: 3)
!10367 = !DILocalVariable(name: "t", scope: !10368, file: !3, line: 1342, type: !6)
!10368 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 1341, column: 7)
!10369 = !DILocalVariable(name: "nnode", scope: !10368, file: !3, line: 1343, type: !6)
!10370 = !DILocalVariable(name: "scc", scope: !10371, file: !3, line: 1357, type: !1598)
!10371 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 1356, column: 2)
!10372 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 1354, column: 11)
!10373 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 1353, column: 5)
!10374 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 1352, column: 7)
!10375 = !DILocalVariable(name: "lowest_node", scope: !10371, file: !3, line: 1358, type: !6)
!10376 = !DILocalVariable(name: "bi", scope: !10371, file: !3, line: 1359, type: !2961)
!10377 = !DILocalVariable(name: "w", scope: !10378, file: !3, line: 1366, type: !6)
!10378 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 1365, column: 6)
!10379 = !DILocation(line: 0, scope: !10354)
!10380 = !DILocation(line: 1319, column: 3, scope: !10354)
!10381 = !DILocation(line: 1320, column: 3, scope: !10354)
!10382 = !DILocation(line: 1323, column: 16, scope: !10354)
!10383 = !DILocation(line: 1323, column: 3, scope: !10354)
!10384 = !DILocation(line: 1324, column: 20, scope: !10354)
!10385 = !DILocation(line: 1324, column: 34, scope: !10354)
!10386 = !DILocation(line: 1324, column: 7, scope: !10354)
!10387 = !DILocation(line: 1324, column: 3, scope: !10354)
!10388 = !DILocation(line: 1324, column: 14, scope: !10354)
!10389 = !DILocation(line: 1325, column: 16, scope: !10354)
!10390 = !DILocation(line: 1325, column: 12, scope: !10354)
!10391 = !DILocation(line: 1328, column: 3, scope: !10366)
!10392 = !DILocation(line: 1328, column: 3, scope: !10354)
!10393 = !DILocation(line: 1328, column: 3, scope: !10365)
!10394 = !DILocation(line: 0, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 1336, column: 11)
!10396 = !DILocation(line: 1328, column: 3, scope: !10364)
!10397 = !DILocation(line: 1332, column: 11, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 1332, column: 11)
!10399 = !DILocation(line: 1332, column: 15, scope: !10398)
!10400 = !DILocation(line: 1332, column: 13, scope: !10398)
!10401 = !DILocation(line: 1332, column: 11, scope: !10363)
!10402 = !DILocation(line: 1335, column: 17, scope: !10363)
!10403 = !DILocation(line: 1335, column: 11, scope: !10363)
!10404 = !DILocation(line: 0, scope: !10363)
!10405 = !DILocation(line: 1336, column: 11, scope: !10395)
!10406 = !DILocation(line: 1336, column: 11, scope: !10363)
!10407 = !DILocation(line: 1339, column: 12, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 1339, column: 11)
!10409 = !DILocation(line: 1339, column: 11, scope: !10363)
!10410 = !DILocation(line: 1340, column: 2, scope: !10408)
!10411 = !DILocation(line: 1342, column: 19, scope: !10368)
!10412 = !DILocation(line: 0, scope: !10368)
!10413 = !DILocation(line: 1343, column: 23, scope: !10368)
!10414 = !DILocation(line: 1344, column: 2, scope: !10368)
!10415 = !DILocation(line: 1346, column: 10, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 1346, column: 6)
!10417 = !DILocation(line: 1346, column: 6, scope: !10416)
!10418 = !DILocation(line: 1346, column: 19, scope: !10416)
!10419 = !DILocation(line: 1346, column: 17, scope: !10416)
!10420 = !DILocation(line: 1346, column: 6, scope: !10368)
!10421 = !DILocation(line: 1347, column: 4, scope: !10416)
!10422 = !DILocation(line: 1347, column: 15, scope: !10416)
!10423 = distinct !{!10423, !10393, !10424}
!10424 = !DILocation(line: 1349, column: 5, scope: !10365)
!10425 = !DILocation(line: 1352, column: 11, scope: !10374)
!10426 = !DILocation(line: 0, scope: !10374)
!10427 = !DILocation(line: 1352, column: 7, scope: !10374)
!10428 = !DILocation(line: 1352, column: 18, scope: !10374)
!10429 = !DILocation(line: 1352, column: 7, scope: !10354)
!10430 = !DILocation(line: 1354, column: 11, scope: !10372)
!10431 = !DILocation(line: 1354, column: 48, scope: !10372)
!10432 = !DILocation(line: 1355, column: 4, scope: !10372)
!10433 = !DILocation(line: 1355, column: 11, scope: !10372)
!10434 = !DILocation(line: 1355, column: 15, scope: !10372)
!10435 = !DILocation(line: 1355, column: 7, scope: !10372)
!10436 = !DILocation(line: 1355, column: 51, scope: !10372)
!10437 = !DILocation(line: 1354, column: 11, scope: !10373)
!10438 = !DILocation(line: 1357, column: 17, scope: !10371)
!10439 = !DILocation(line: 0, scope: !10371)
!10440 = !DILocation(line: 1359, column: 4, scope: !10371)
!10441 = !DILocation(line: 1361, column: 4, scope: !10371)
!10442 = !DILocation(line: 1363, column: 4, scope: !10371)
!10443 = !DILocation(line: 1363, column: 11, scope: !10371)
!10444 = !DILocation(line: 1363, column: 48, scope: !10371)
!10445 = !DILocation(line: 1364, column: 4, scope: !10371)
!10446 = !DILocation(line: 1364, column: 11, scope: !10371)
!10447 = !DILocation(line: 1364, column: 15, scope: !10371)
!10448 = !DILocation(line: 1364, column: 7, scope: !10371)
!10449 = !DILocation(line: 1364, column: 51, scope: !10371)
!10450 = !DILocation(line: 1366, column: 25, scope: !10378)
!10451 = !DILocation(line: 0, scope: !10378)
!10452 = !DILocation(line: 1368, column: 8, scope: !10378)
!10453 = distinct !{!10453, !10442, !10454}
!10454 = !DILocation(line: 1369, column: 6, scope: !10371)
!10455 = !DILocation(line: 1371, column: 18, scope: !10371)
!10456 = !DILocation(line: 1372, column: 4, scope: !10371)
!10457 = !DILocation(line: 1376, column: 4, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 1376, column: 4)
!10459 = !DILocation(line: 0, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1384, column: 3)
!10461 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 1378, column: 12)
!10462 = distinct !DILexicalBlock(scope: !10463, file: !3, line: 1377, column: 6)
!10463 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 1376, column: 4)
!10464 = !DILocation(line: 1376, column: 4, scope: !10463)
!10465 = !DILocation(line: 1378, column: 12, scope: !10461)
!10466 = !DILocation(line: 1378, column: 16, scope: !10461)
!10467 = !DILocation(line: 1378, column: 14, scope: !10461)
!10468 = !DILocation(line: 0, scope: !10461)
!10469 = !DILocation(line: 1378, column: 12, scope: !10462)
!10470 = !DILocation(line: 1380, column: 9, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 1380, column: 9)
!10472 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1379, column: 3)
!10473 = !DILocation(line: 1380, column: 9, scope: !10472)
!10474 = !DILocation(line: 1381, column: 40, scope: !10471)
!10475 = !DILocation(line: 1381, column: 7, scope: !10471)
!10476 = !DILocation(line: 1386, column: 12, scope: !10460)
!10477 = !DILocation(line: 1386, column: 28, scope: !10460)
!10478 = !DILocation(line: 1386, column: 32, scope: !10460)
!10479 = !DILocation(line: 1386, column: 30, scope: !10460)
!10480 = !DILocation(line: 1386, column: 5, scope: !10460)
!10481 = !DILocation(line: 1386, column: 48, scope: !10460)
!10482 = distinct !{!10482, !10457, !10483}
!10483 = !DILocation(line: 1388, column: 6, scope: !10458)
!10484 = !DILocation(line: 1389, column: 2, scope: !10372)
!10485 = !DILocation(line: 1389, column: 2, scope: !10371)
!10486 = !DILocation(line: 1390, column: 20, scope: !10373)
!10487 = !DILocation(line: 1390, column: 7, scope: !10373)
!10488 = !DILocation(line: 1391, column: 5, scope: !10373)
!10489 = !DILocation(line: 1393, column: 5, scope: !10374)
!10490 = !DILocation(line: 1394, column: 1, scope: !10354)
!10491 = distinct !DISubprogram(name: "init_topo_info", scope: !3, file: !3, line: 1477, type: !10492, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10494)
!10492 = !DISubroutineType(types: !10493)
!10493 = !{!2181}
!10494 = !{!10495, !10496}
!10495 = !DILocalVariable(name: "size", scope: !10491, file: !3, line: 1479, type: !682)
!10496 = !DILocalVariable(name: "ti", scope: !10491, file: !3, line: 1480, type: !2181)
!10497 = !DILocation(line: 1479, column: 17, scope: !10491)
!10498 = !DILocation(line: 1479, column: 24, scope: !10491)
!10499 = !DILocation(line: 1480, column: 26, scope: !10491)
!10500 = !DILocation(line: 0, scope: !10491)
!10501 = !DILocation(line: 1481, column: 17, scope: !10491)
!10502 = !DILocation(line: 1481, column: 7, scope: !10491)
!10503 = !DILocation(line: 1481, column: 15, scope: !10491)
!10504 = !DILocation(line: 1482, column: 3, scope: !10491)
!10505 = !DILocation(line: 1483, column: 20, scope: !10491)
!10506 = !DILocation(line: 1483, column: 7, scope: !10491)
!10507 = !DILocation(line: 1483, column: 18, scope: !10491)
!10508 = !DILocation(line: 1484, column: 3, scope: !10491)
!10509 = distinct !DISubprogram(name: "compute_topo_order", scope: !3, file: !3, line: 1829, type: !10510, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10512)
!10510 = !DISubroutineType(types: !10511)
!10511 = !{null, !2268, !2181}
!10512 = !{!10513, !10514, !10515, !10516}
!10513 = !DILocalVariable(name: "graph", arg: 1, scope: !10509, file: !3, line: 1829, type: !2268)
!10514 = !DILocalVariable(name: "ti", arg: 2, scope: !10509, file: !3, line: 1830, type: !2181)
!10515 = !DILocalVariable(name: "i", scope: !10509, file: !3, line: 1832, type: !6)
!10516 = !DILocalVariable(name: "size", scope: !10509, file: !3, line: 1833, type: !6)
!10517 = !DILocation(line: 0, scope: !10509)
!10518 = !DILocation(line: 1833, column: 30, scope: !10509)
!10519 = !DILocation(line: 0, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 1836, column: 9)
!10521 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 1835, column: 3)
!10522 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 1835, column: 3)
!10523 = !DILocation(line: 1835, column: 8, scope: !10522)
!10524 = !DILocation(line: 0, scope: !10522)
!10525 = !DILocation(line: 1835, column: 17, scope: !10521)
!10526 = !DILocation(line: 1835, column: 3, scope: !10522)
!10527 = !DILocation(line: 1836, column: 10, scope: !10520)
!10528 = !DILocation(line: 1836, column: 36, scope: !10520)
!10529 = !DILocation(line: 1836, column: 39, scope: !10520)
!10530 = !DILocation(line: 1836, column: 48, scope: !10520)
!10531 = !DILocation(line: 1836, column: 9, scope: !10521)
!10532 = !DILocation(line: 1837, column: 7, scope: !10520)
!10533 = !DILocation(line: 1835, column: 26, scope: !10521)
!10534 = !DILocation(line: 1835, column: 3, scope: !10521)
!10535 = distinct !{!10535, !10526, !10536}
!10536 = !DILocation(line: 1837, column: 31, scope: !10522)
!10537 = !DILocation(line: 1838, column: 1, scope: !10509)
!10538 = distinct !DISubprogram(name: "eliminate_indirect_cycles", scope: !3, file: !3, line: 2405, type: !10539, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10541)
!10539 = !DISubroutineType(types: !10540)
!10540 = !{!661, !6}
!10541 = !{!10542, !10543, !10546, !10547, !10548, !10549}
!10542 = !DILocalVariable(name: "node", arg: 1, scope: !10538, file: !3, line: 2405, type: !6)
!10543 = !DILocalVariable(name: "i", scope: !10544, file: !3, line: 2410, type: !6)
!10544 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 2409, column: 5)
!10545 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 2407, column: 7)
!10546 = !DILocalVariable(name: "queue", scope: !10544, file: !3, line: 2411, type: !2158)
!10547 = !DILocalVariable(name: "queuepos", scope: !10544, file: !3, line: 2412, type: !662)
!10548 = !DILocalVariable(name: "to", scope: !10544, file: !3, line: 2413, type: !6)
!10549 = !DILocalVariable(name: "bi", scope: !10544, file: !3, line: 2414, type: !2961)
!10550 = !DILocation(line: 0, scope: !10538)
!10551 = !DILocation(line: 2407, column: 7, scope: !10545)
!10552 = !DILocation(line: 2407, column: 14, scope: !10545)
!10553 = !DILocation(line: 2407, column: 36, scope: !10545)
!10554 = !DILocation(line: 2408, column: 7, scope: !10545)
!10555 = !DILocation(line: 2408, column: 11, scope: !10545)
!10556 = !DILocation(line: 2407, column: 7, scope: !10538)
!10557 = !DILocation(line: 2410, column: 7, scope: !10544)
!10558 = !DILocation(line: 2411, column: 7, scope: !10544)
!10559 = !DILocation(line: 0, scope: !10544)
!10560 = !DILocation(line: 2411, column: 27, scope: !10544)
!10561 = !DILocation(line: 2413, column: 31, scope: !10544)
!10562 = !DILocation(line: 2413, column: 38, scope: !10544)
!10563 = !DILocation(line: 2413, column: 25, scope: !10544)
!10564 = !DILocation(line: 2414, column: 7, scope: !10544)
!10565 = !DILocation(line: 2420, column: 7, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 2420, column: 7)
!10567 = !DILocation(line: 2420, column: 7, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 2420, column: 7)
!10569 = !DILocation(line: 2429, column: 7, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 2429, column: 7)
!10571 = !DILocation(line: 2422, column: 14, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10573, file: !3, line: 2422, column: 8)
!10573 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 2421, column: 2)
!10574 = !DILocation(line: 2422, column: 8, scope: !10572)
!10575 = !DILocation(line: 2422, column: 20, scope: !10572)
!10576 = !DILocation(line: 2422, column: 17, scope: !10572)
!10577 = !DILocation(line: 2422, column: 27, scope: !10572)
!10578 = !DILocation(line: 2422, column: 22, scope: !10572)
!10579 = !DILocation(line: 2424, column: 12, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10581, file: !3, line: 2424, column: 12)
!10581 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 2423, column: 6)
!10582 = !DILocation(line: 2424, column: 12, scope: !10581)
!10583 = !DILocation(line: 2425, column: 3, scope: !10580)
!10584 = distinct !{!10584, !10565, !10585}
!10585 = !DILocation(line: 2427, column: 2, scope: !10566)
!10586 = !DILocation(line: 0, scope: !10570)
!10587 = !DILocation(line: 2430, column: 5, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10570, file: !3, line: 2429, column: 7)
!10589 = !DILocation(line: 2433, column: 17, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 2432, column: 2)
!10591 = !DILocation(line: 2433, column: 28, scope: !10590)
!10592 = !DILocation(line: 2433, column: 4, scope: !10590)
!10593 = !DILocation(line: 2431, column: 13, scope: !10588)
!10594 = !DILocation(line: 2429, column: 7, scope: !10588)
!10595 = distinct !{!10595, !10569, !10596}
!10596 = !DILocation(line: 2434, column: 2, scope: !10570)
!10597 = !DILocation(line: 2435, column: 7, scope: !10544)
!10598 = !DILocation(line: 2437, column: 5, scope: !10545)
!10599 = !DILocation(line: 2439, column: 1, scope: !10538)
!10600 = distinct !DISubprogram(name: "do_complex_constraint", scope: !3, file: !3, line: 1723, type: !10601, scopeLine: 1724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10603)
!10601 = !DISubroutineType(types: !10602)
!10602 = !{null, !2268, !670, !1598}
!10603 = !{!10604, !10605, !10606, !10607, !10611, !10612}
!10604 = !DILocalVariable(name: "graph", arg: 1, scope: !10600, file: !3, line: 1723, type: !2268)
!10605 = !DILocalVariable(name: "c", arg: 2, scope: !10600, file: !3, line: 1723, type: !670)
!10606 = !DILocalVariable(name: "delta", arg: 3, scope: !10600, file: !3, line: 1723, type: !1598)
!10607 = !DILocalVariable(name: "tmp", scope: !10608, file: !3, line: 1745, type: !1598)
!10608 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 1744, column: 5)
!10609 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 1737, column: 12)
!10610 = distinct !DILexicalBlock(scope: !10600, file: !3, line: 1725, column: 7)
!10611 = !DILocalVariable(name: "solution", scope: !10608, file: !3, line: 1746, type: !1598)
!10612 = !DILocalVariable(name: "flag", scope: !10608, file: !3, line: 1747, type: !661)
!10613 = !DILocation(line: 0, scope: !10600)
!10614 = !DILocation(line: 1725, column: 14, scope: !10610)
!10615 = !DILocation(line: 1725, column: 19, scope: !10610)
!10616 = !DILocation(line: 0, scope: !10610)
!10617 = !DILocation(line: 1725, column: 7, scope: !10600)
!10618 = !DILocation(line: 1727, column: 23, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 1727, column: 11)
!10620 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 1726, column: 5)
!10621 = !DILocation(line: 1727, column: 11, scope: !10620)
!10622 = !DILocation(line: 1729, column: 4, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 1728, column: 2)
!10624 = !DILocation(line: 1730, column: 2, scope: !10623)
!10625 = !DILocation(line: 1734, column: 4, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 1732, column: 2)
!10627 = !DILocation(line: 1737, column: 24, scope: !10609)
!10628 = !DILocation(line: 1737, column: 12, scope: !10610)
!10629 = !DILocation(line: 1740, column: 33, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10631, file: !3, line: 1740, column: 11)
!10631 = distinct !DILexicalBlock(scope: !10609, file: !3, line: 1738, column: 5)
!10632 = !DILocation(line: 1740, column: 13, scope: !10630)
!10633 = !DILocation(line: 1740, column: 39, scope: !10630)
!10634 = !DILocation(line: 1740, column: 12, scope: !10630)
!10635 = !DILocation(line: 1740, column: 11, scope: !10631)
!10636 = !DILocation(line: 1741, column: 2, scope: !10630)
!10637 = !DILocation(line: 0, scope: !10608)
!10638 = !DILocation(line: 1749, column: 7, scope: !10608)
!10639 = !DILocation(line: 1750, column: 38, scope: !10608)
!10640 = !DILocation(line: 1750, column: 18, scope: !10608)
!10641 = !DILocation(line: 1750, column: 44, scope: !10608)
!10642 = !DILocation(line: 1751, column: 33, scope: !10608)
!10643 = !DILocation(line: 1751, column: 13, scope: !10608)
!10644 = !DILocation(line: 1751, column: 39, scope: !10608)
!10645 = !DILocation(line: 1753, column: 62, scope: !10608)
!10646 = !DILocation(line: 1753, column: 14, scope: !10608)
!10647 = !DILocation(line: 1755, column: 11, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 1755, column: 11)
!10649 = !DILocation(line: 1755, column: 11, scope: !10608)
!10650 = !DILocation(line: 1757, column: 24, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 1756, column: 2)
!10652 = !DILocation(line: 1757, column: 4, scope: !10651)
!10653 = !DILocation(line: 1757, column: 30, scope: !10651)
!10654 = !DILocation(line: 1757, column: 39, scope: !10651)
!10655 = !DILocation(line: 1758, column: 9, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 1758, column: 8)
!10657 = !DILocation(line: 1758, column: 8, scope: !10651)
!10658 = !DILocation(line: 1760, column: 8, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 1759, column: 6)
!10660 = !DILocation(line: 1761, column: 21, scope: !10659)
!10661 = !DILocation(line: 1762, column: 6, scope: !10659)
!10662 = !DILocation(line: 1765, column: 1, scope: !10600)
!10663 = distinct !DISubprogram(name: "set_union_with_increment", scope: !3, file: !3, line: 923, type: !10664, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10666)
!10664 = !DISubroutineType(types: !10665)
!10665 = !{!661, !1598, !1598, !669}
!10666 = !{!10667, !10668, !10669, !10670, !10673}
!10667 = !DILocalVariable(name: "to", arg: 1, scope: !10663, file: !3, line: 923, type: !1598)
!10668 = !DILocalVariable(name: "from", arg: 2, scope: !10663, file: !3, line: 923, type: !1598)
!10669 = !DILocalVariable(name: "inc", arg: 3, scope: !10663, file: !3, line: 923, type: !669)
!10670 = !DILocalVariable(name: "tmp", scope: !10671, file: !3, line: 929, type: !1598)
!10671 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 928, column: 5)
!10672 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 925, column: 7)
!10673 = !DILocalVariable(name: "res", scope: !10671, file: !3, line: 930, type: !661)
!10674 = !DILocation(line: 0, scope: !10663)
!10675 = !DILocation(line: 925, column: 11, scope: !10672)
!10676 = !DILocation(line: 925, column: 7, scope: !10663)
!10677 = !DILocation(line: 926, column: 12, scope: !10672)
!10678 = !DILocation(line: 926, column: 5, scope: !10672)
!10679 = !DILocation(line: 932, column: 13, scope: !10671)
!10680 = !DILocation(line: 0, scope: !10671)
!10681 = !DILocation(line: 933, column: 7, scope: !10671)
!10682 = !DILocation(line: 934, column: 7, scope: !10671)
!10683 = !DILocation(line: 935, column: 13, scope: !10671)
!10684 = !DILocation(line: 936, column: 7, scope: !10671)
!10685 = !DILocation(line: 0, scope: !10672)
!10686 = !DILocation(line: 939, column: 1, scope: !10663)
!10687 = distinct !DISubprogram(name: "free_topo_info", scope: !3, file: !3, line: 1491, type: !10688, scopeLine: 1492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10690)
!10688 = !DISubroutineType(types: !10689)
!10689 = !{null, !2181}
!10690 = !{!10691}
!10691 = !DILocalVariable(name: "ti", arg: 1, scope: !10687, file: !3, line: 1491, type: !2181)
!10692 = !DILocation(line: 0, scope: !10687)
!10693 = !DILocation(line: 1493, column: 3, scope: !10687)
!10694 = !DILocation(line: 1494, column: 3, scope: !10687)
!10695 = !DILocation(line: 1495, column: 9, scope: !10687)
!10696 = !DILocation(line: 1495, column: 3, scope: !10687)
!10697 = !DILocation(line: 1496, column: 1, scope: !10687)
!10698 = distinct !DISubprogram(name: "topo_visit", scope: !3, file: !3, line: 1502, type: !10699, scopeLine: 1504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10701)
!10699 = !DISubroutineType(types: !10700)
!10700 = !{null, !2268, !2181, !6}
!10701 = !{!10702, !10703, !10704, !10705, !10706}
!10702 = !DILocalVariable(name: "graph", arg: 1, scope: !10698, file: !3, line: 1502, type: !2268)
!10703 = !DILocalVariable(name: "ti", arg: 2, scope: !10698, file: !3, line: 1502, type: !2181)
!10704 = !DILocalVariable(name: "n", arg: 3, scope: !10698, file: !3, line: 1503, type: !6)
!10705 = !DILocalVariable(name: "bi", scope: !10698, file: !3, line: 1505, type: !2961)
!10706 = !DILocalVariable(name: "j", scope: !10698, file: !3, line: 1506, type: !6)
!10707 = !DILocation(line: 0, scope: !10698)
!10708 = !DILocation(line: 1505, column: 3, scope: !10698)
!10709 = !DILocation(line: 1506, column: 3, scope: !10698)
!10710 = !DILocation(line: 1508, column: 16, scope: !10698)
!10711 = !DILocation(line: 1508, column: 3, scope: !10698)
!10712 = !DILocation(line: 1510, column: 14, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10698, file: !3, line: 1510, column: 7)
!10714 = !DILocation(line: 1510, column: 7, scope: !10713)
!10715 = !DILocation(line: 1510, column: 7, scope: !10698)
!10716 = !DILocation(line: 1511, column: 5, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 1511, column: 5)
!10718 = !DILocation(line: 1511, column: 5, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10717, file: !3, line: 1511, column: 5)
!10720 = !DILocation(line: 1513, column: 7, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10722, file: !3, line: 1513, column: 6)
!10722 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 1512, column: 7)
!10723 = !DILocation(line: 1513, column: 6, scope: !10722)
!10724 = !DILocation(line: 1514, column: 4, scope: !10721)
!10725 = distinct !{!10725, !10716, !10726}
!10726 = !DILocation(line: 1515, column: 7, scope: !10717)
!10727 = !DILocation(line: 1517, column: 3, scope: !10698)
!10728 = !DILocation(line: 1518, column: 1, scope: !10698)
!10729 = distinct !DISubprogram(name: "VEC_unsigned_base_iterate", scope: !2160, file: !2160, line: 34, type: !10730, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10732)
!10730 = !DISubroutineType(types: !10731)
!10731 = !{!662, !9758, !6, !2127}
!10732 = !{!10733, !10734, !10735}
!10733 = !DILocalVariable(name: "vec_", arg: 1, scope: !10729, file: !2160, line: 34, type: !9758)
!10734 = !DILocalVariable(name: "ix_", arg: 2, scope: !10729, file: !2160, line: 34, type: !6)
!10735 = !DILocalVariable(name: "ptr", arg: 3, scope: !10729, file: !2160, line: 34, type: !2127)
!10736 = !DILocation(line: 0, scope: !10729)
!10737 = !DILocation(line: 34, column: 1, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10729, file: !2160, line: 34, column: 1)
!10739 = !DILocation(line: 34, column: 1, scope: !10729)
!10740 = !DILocation(line: 34, column: 1, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10738, file: !2160, line: 34, column: 1)
!10742 = !DILocation(line: 34, column: 1, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10738, file: !2160, line: 34, column: 1)
!10744 = !DILocation(line: 0, scope: !10738)
!10745 = distinct !DISubprogram(name: "do_ds_constraint", scope: !3, file: !3, line: 1615, type: !10746, scopeLine: 1616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10748)
!10746 = !DISubroutineType(types: !10747)
!10747 = !{null, !670, !1598}
!10748 = !{!10749, !10750, !10751, !10752, !10753, !10754, !10755, !10756, !10759, !10763, !10764}
!10749 = !DILocalVariable(name: "c", arg: 1, scope: !10745, file: !3, line: 1615, type: !670)
!10750 = !DILocalVariable(name: "delta", arg: 2, scope: !10745, file: !3, line: 1615, type: !1598)
!10751 = !DILocalVariable(name: "rhs", scope: !10745, file: !3, line: 1617, type: !6)
!10752 = !DILocalVariable(name: "sol", scope: !10745, file: !3, line: 1618, type: !1598)
!10753 = !DILocalVariable(name: "j", scope: !10745, file: !3, line: 1619, type: !6)
!10754 = !DILocalVariable(name: "bi", scope: !10745, file: !3, line: 1620, type: !2961)
!10755 = !DILocalVariable(name: "loff", scope: !10745, file: !3, line: 1621, type: !669)
!10756 = !DILocalVariable(name: "t", scope: !10757, file: !3, line: 1636, type: !6)
!10757 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1635, column: 5)
!10758 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 1634, column: 7)
!10759 = !DILocalVariable(name: "v", scope: !10760, file: !3, line: 1664, type: !711)
!10760 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 1663, column: 5)
!10761 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 1662, column: 3)
!10762 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 1662, column: 3)
!10763 = !DILocalVariable(name: "t", scope: !10760, file: !3, line: 1665, type: !6)
!10764 = !DILocalVariable(name: "fieldoffset", scope: !10760, file: !3, line: 1666, type: !669)
!10765 = !DILocation(line: 0, scope: !10745)
!10766 = !DILocation(line: 1617, column: 29, scope: !10745)
!10767 = !DILocation(line: 1618, column: 16, scope: !10745)
!10768 = !DILocation(line: 1618, column: 35, scope: !10745)
!10769 = !DILocation(line: 1619, column: 3, scope: !10745)
!10770 = !DILocation(line: 1620, column: 3, scope: !10745)
!10771 = !DILocation(line: 1621, column: 31, scope: !10745)
!10772 = !DILocation(line: 1624, column: 3, scope: !10745)
!10773 = !DILocation(line: 1628, column: 7, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 1628, column: 7)
!10775 = !DILocation(line: 1628, column: 7, scope: !10745)
!10776 = !DILocation(line: 1629, column: 24, scope: !10774)
!10777 = !DILocation(line: 1629, column: 11, scope: !10774)
!10778 = !DILocation(line: 1629, column: 45, scope: !10774)
!10779 = !DILocation(line: 1629, column: 5, scope: !10774)
!10780 = !DILocation(line: 1634, column: 7, scope: !10758)
!10781 = !DILocation(line: 1634, column: 7, scope: !10745)
!10782 = !DILocation(line: 1636, column: 20, scope: !10757)
!10783 = !DILocation(line: 0, scope: !10757)
!10784 = !DILocation(line: 1637, column: 27, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 1637, column: 11)
!10786 = !DILocation(line: 1637, column: 11, scope: !10785)
!10787 = !DILocation(line: 1637, column: 11, scope: !10757)
!10788 = !DILocation(line: 1639, column: 25, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 1639, column: 8)
!10790 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 1638, column: 2)
!10791 = !DILocation(line: 1639, column: 42, scope: !10789)
!10792 = !DILocation(line: 1639, column: 8, scope: !10789)
!10793 = !DILocation(line: 1639, column: 8, scope: !10790)
!10794 = !DILocation(line: 1641, column: 13, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 1641, column: 12)
!10796 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 1640, column: 6)
!10797 = !DILocation(line: 1641, column: 12, scope: !10796)
!10798 = !DILocation(line: 1643, column: 5, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 1642, column: 3)
!10800 = !DILocation(line: 1644, column: 18, scope: !10799)
!10801 = !DILocation(line: 1645, column: 3, scope: !10799)
!10802 = !DILocation(line: 1654, column: 12, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 1654, column: 7)
!10804 = !DILocation(line: 1654, column: 7, scope: !10745)
!10805 = !DILocation(line: 1656, column: 7, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10803, file: !3, line: 1655, column: 5)
!10807 = !DILocation(line: 1658, column: 5, scope: !10806)
!10808 = !DILocation(line: 1662, column: 3, scope: !10762)
!10809 = !DILocation(line: 0, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 1686, column: 16)
!10811 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 1684, column: 11)
!10812 = !DILocation(line: 1662, column: 3, scope: !10761)
!10813 = !DILocation(line: 1664, column: 34, scope: !10760)
!10814 = !DILocation(line: 1664, column: 21, scope: !10760)
!10815 = !DILocation(line: 0, scope: !10760)
!10816 = !DILocation(line: 1666, column: 38, scope: !10760)
!10817 = !DILocation(line: 1666, column: 45, scope: !10760)
!10818 = !DILocation(line: 1669, column: 14, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 1669, column: 11)
!10820 = !DILocation(line: 1669, column: 11, scope: !10819)
!10821 = !DILocation(line: 1669, column: 11, scope: !10760)
!10822 = !DILocation(line: 1671, column: 8, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10819, file: !3, line: 1670, column: 2)
!10824 = !DILocation(line: 1672, column: 24, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10823, file: !3, line: 1672, column: 8)
!10826 = !DILocation(line: 1672, column: 8, scope: !10825)
!10827 = !DILocation(line: 1673, column: 8, scope: !10825)
!10828 = !DILocation(line: 1673, column: 28, scope: !10825)
!10829 = !DILocation(line: 1673, column: 45, scope: !10825)
!10830 = !DILocation(line: 1673, column: 11, scope: !10825)
!10831 = !DILocation(line: 1674, column: 8, scope: !10825)
!10832 = !DILocation(line: 1674, column: 12, scope: !10825)
!10833 = !DILocation(line: 1672, column: 8, scope: !10823)
!10834 = !DILocation(line: 1676, column: 8, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 1675, column: 6)
!10836 = !DILocation(line: 1677, column: 21, scope: !10835)
!10837 = !DILocation(line: 1678, column: 6, scope: !10835)
!10838 = !DILocation(line: 1681, column: 14, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 1681, column: 11)
!10840 = !DILocation(line: 1681, column: 11, scope: !10839)
!10841 = !DILocation(line: 1681, column: 11, scope: !10760)
!10842 = !DILocation(line: 1684, column: 14, scope: !10811)
!10843 = !DILocation(line: 1684, column: 11, scope: !10811)
!10844 = !DILocation(line: 1684, column: 11, scope: !10760)
!10845 = !DILocation(line: 1685, column: 19, scope: !10811)
!10846 = !DILocation(line: 1685, column: 2, scope: !10811)
!10847 = !DILocation(line: 1686, column: 16, scope: !10811)
!10848 = !DILocation(line: 1687, column: 6, scope: !10810)
!10849 = !DILocation(line: 1687, column: 2, scope: !10810)
!10850 = !DILocation(line: 1689, column: 12, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 1689, column: 11)
!10852 = !DILocation(line: 1689, column: 11, scope: !10760)
!10853 = !DILocation(line: 1694, column: 8, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 1693, column: 2)
!10855 = !DILocation(line: 1694, column: 11, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10854, file: !3, line: 1694, column: 8)
!10857 = !DILocation(line: 1694, column: 8, scope: !10856)
!10858 = !DILocation(line: 1696, column: 21, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10856, file: !3, line: 1695, column: 6)
!10860 = !DILocation(line: 1696, column: 12, scope: !10859)
!10861 = !DILocation(line: 1697, column: 28, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 1697, column: 12)
!10863 = !DILocation(line: 1697, column: 12, scope: !10862)
!10864 = !DILocation(line: 1698, column: 5, scope: !10862)
!10865 = !DILocation(line: 1698, column: 25, scope: !10862)
!10866 = !DILocation(line: 1698, column: 42, scope: !10862)
!10867 = !DILocation(line: 1698, column: 8, scope: !10862)
!10868 = !DILocation(line: 1699, column: 5, scope: !10862)
!10869 = !DILocation(line: 1699, column: 9, scope: !10862)
!10870 = !DILocation(line: 1697, column: 12, scope: !10859)
!10871 = !DILocation(line: 1701, column: 5, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10862, file: !3, line: 1700, column: 3)
!10873 = !DILocation(line: 1702, column: 18, scope: !10872)
!10874 = !DILocation(line: 1703, column: 3, scope: !10872)
!10875 = !DILocation(line: 1708, column: 11, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10854, file: !3, line: 1708, column: 8)
!10877 = !DILocation(line: 1708, column: 18, scope: !10876)
!10878 = !DILocation(line: 1709, column: 8, scope: !10876)
!10879 = !DILocation(line: 1709, column: 14, scope: !10876)
!10880 = !DILocation(line: 1709, column: 19, scope: !10876)
!10881 = !DILocation(line: 1708, column: 8, scope: !10854)
!10882 = !DILocation(line: 1713, column: 21, scope: !10854)
!10883 = !DILocation(line: 1714, column: 2, scope: !10854)
!10884 = distinct !{!10884, !10808, !10885}
!10885 = !DILocation(line: 1716, column: 5, scope: !10762)
!10886 = !DILocation(line: 1717, column: 1, scope: !10745)
!10887 = distinct !DISubprogram(name: "do_sd_constraint", scope: !3, file: !3, line: 1524, type: !10601, scopeLine: 1526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10888)
!10888 = !{!10889, !10890, !10891, !10892, !10893, !10894, !10895, !10896, !10897, !10898, !10902, !10903, !10904}
!10889 = !DILocalVariable(name: "graph", arg: 1, scope: !10887, file: !3, line: 1524, type: !2268)
!10890 = !DILocalVariable(name: "c", arg: 2, scope: !10887, file: !3, line: 1524, type: !670)
!10891 = !DILocalVariable(name: "delta", arg: 3, scope: !10887, file: !3, line: 1525, type: !1598)
!10892 = !DILocalVariable(name: "lhs", scope: !10887, file: !3, line: 1527, type: !6)
!10893 = !DILocalVariable(name: "flag", scope: !10887, file: !3, line: 1528, type: !661)
!10894 = !DILocalVariable(name: "sol", scope: !10887, file: !3, line: 1529, type: !1598)
!10895 = !DILocalVariable(name: "j", scope: !10887, file: !3, line: 1530, type: !6)
!10896 = !DILocalVariable(name: "bi", scope: !10887, file: !3, line: 1531, type: !2961)
!10897 = !DILocalVariable(name: "roffset", scope: !10887, file: !3, line: 1532, type: !669)
!10898 = !DILocalVariable(name: "v", scope: !10899, file: !3, line: 1559, type: !711)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 1558, column: 5)
!10900 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 1557, column: 3)
!10901 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 1557, column: 3)
!10902 = !DILocalVariable(name: "fieldoffset", scope: !10899, file: !3, line: 1560, type: !669)
!10903 = !DILocalVariable(name: "t", scope: !10899, file: !3, line: 1561, type: !6)
!10904 = !DILabel(scope: !10887, name: "done", file: !3, line: 1598)
!10905 = !DILocation(line: 0, scope: !10887)
!10906 = !DILocation(line: 1527, column: 29, scope: !10887)
!10907 = !DILocation(line: 1529, column: 16, scope: !10887)
!10908 = !DILocation(line: 1529, column: 35, scope: !10887)
!10909 = !DILocation(line: 1530, column: 3, scope: !10887)
!10910 = !DILocation(line: 1531, column: 3, scope: !10887)
!10911 = !DILocation(line: 1532, column: 34, scope: !10887)
!10912 = !DILocation(line: 1535, column: 3, scope: !10887)
!10913 = !DILocation(line: 1539, column: 7, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 1539, column: 7)
!10915 = !DILocation(line: 1539, column: 7, scope: !10887)
!10916 = !DILocation(line: 1541, column: 15, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10914, file: !3, line: 1540, column: 5)
!10918 = !DILocation(line: 1542, column: 7, scope: !10917)
!10919 = !DILocation(line: 1548, column: 15, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 1548, column: 7)
!10921 = !DILocation(line: 1548, column: 7, scope: !10887)
!10922 = !DILocation(line: 1550, column: 7, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 1549, column: 5)
!10924 = !DILocation(line: 1553, column: 5, scope: !10923)
!10925 = !DILocation(line: 1557, column: 3, scope: !10901)
!10926 = !DILocation(line: 0, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10928, file: !3, line: 1565, column: 16)
!10928 = distinct !DILexicalBlock(scope: !10899, file: !3, line: 1563, column: 11)
!10929 = !DILocation(line: 1557, column: 3, scope: !10900)
!10930 = !DILocation(line: 1559, column: 34, scope: !10899)
!10931 = !DILocation(line: 1559, column: 21, scope: !10899)
!10932 = !DILocation(line: 0, scope: !10899)
!10933 = !DILocation(line: 1563, column: 14, scope: !10928)
!10934 = !DILocation(line: 1563, column: 11, scope: !10928)
!10935 = !DILocation(line: 1563, column: 11, scope: !10899)
!10936 = !DILocation(line: 1564, column: 2, scope: !10928)
!10937 = !DILocation(line: 1565, column: 16, scope: !10928)
!10938 = !DILocation(line: 1568, column: 12, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10899, file: !3, line: 1568, column: 11)
!10940 = !DILocation(line: 1568, column: 11, scope: !10899)
!10941 = !DILocation(line: 1573, column: 17, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10899, file: !3, line: 1572, column: 2)
!10943 = !DILocation(line: 1573, column: 8, scope: !10942)
!10944 = !DILocation(line: 1577, column: 8, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10942, file: !3, line: 1577, column: 8)
!10946 = !DILocation(line: 1577, column: 25, scope: !10945)
!10947 = !DILocation(line: 1577, column: 8, scope: !10942)
!10948 = !DILocation(line: 1578, column: 36, scope: !10945)
!10949 = !DILocation(line: 1578, column: 53, scope: !10945)
!10950 = !DILocation(line: 1578, column: 14, scope: !10945)
!10951 = !DILocation(line: 1578, column: 11, scope: !10945)
!10952 = !DILocation(line: 1578, column: 6, scope: !10945)
!10953 = !DILocation(line: 1581, column: 16, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 1581, column: 13)
!10955 = !DILocation(line: 1581, column: 19, scope: !10954)
!10956 = !DILocation(line: 1581, column: 13, scope: !10945)
!10957 = !DILocation(line: 1583, column: 13, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10954, file: !3, line: 1583, column: 13)
!10959 = !DILocation(line: 1583, column: 13, scope: !10954)
!10960 = !DILocation(line: 1584, column: 36, scope: !10958)
!10961 = !DILocation(line: 1584, column: 53, scope: !10958)
!10962 = !DILocation(line: 1584, column: 14, scope: !10958)
!10963 = !DILocation(line: 1584, column: 11, scope: !10958)
!10964 = !DILocation(line: 1584, column: 6, scope: !10958)
!10965 = !DILocation(line: 1582, column: 14, scope: !10954)
!10966 = !DILocation(line: 1582, column: 11, scope: !10954)
!10967 = !DILocation(line: 1582, column: 6, scope: !10954)
!10968 = !DILocation(line: 0, scope: !10945)
!10969 = !DILocation(line: 1588, column: 11, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10942, file: !3, line: 1588, column: 8)
!10971 = !DILocation(line: 1588, column: 18, scope: !10970)
!10972 = !DILocation(line: 1589, column: 8, scope: !10970)
!10973 = !DILocation(line: 1589, column: 14, scope: !10970)
!10974 = !DILocation(line: 1589, column: 19, scope: !10970)
!10975 = !DILocation(line: 1588, column: 8, scope: !10942)
!10976 = !DILocation(line: 1594, column: 2, scope: !10942)
!10977 = distinct !{!10977, !10925, !10978}
!10978 = !DILocation(line: 1596, column: 5, scope: !10901)
!10979 = !DILocation(line: 1600, column: 7, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 1600, column: 7)
!10981 = !DILocation(line: 1560, column: 38, scope: !10899)
!10982 = !DILocation(line: 1560, column: 45, scope: !10899)
!10983 = !DILocation(line: 1566, column: 6, scope: !10927)
!10984 = !DILocation(line: 1566, column: 2, scope: !10927)
!10985 = !DILocation(line: 1593, column: 21, scope: !10942)
!10986 = !DILocation(line: 1598, column: 1, scope: !10887)
!10987 = !DILocation(line: 1600, column: 7, scope: !10887)
!10988 = !DILocation(line: 1602, column: 7, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 1601, column: 5)
!10990 = !DILocation(line: 1602, column: 26, scope: !10989)
!10991 = !DILocation(line: 1602, column: 35, scope: !10989)
!10992 = !DILocation(line: 1603, column: 12, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 1603, column: 11)
!10994 = !DILocation(line: 1603, column: 11, scope: !10989)
!10995 = !DILocation(line: 1605, column: 4, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1604, column: 2)
!10997 = !DILocation(line: 1606, column: 17, scope: !10996)
!10998 = !DILocation(line: 1607, column: 2, scope: !10996)
!10999 = !DILocation(line: 1609, column: 1, scope: !10887)
!11000 = distinct !DISubprogram(name: "solution_set_expand", scope: !3, file: !3, line: 830, type: !11001, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11003)
!11001 = !DISubroutineType(types: !11002)
!11002 = !{null, !1598, !1598}
!11003 = !{!11004, !11005, !11006, !11007, !11008, !11009, !11013}
!11004 = !DILocalVariable(name: "result", arg: 1, scope: !11000, file: !3, line: 830, type: !1598)
!11005 = !DILocalVariable(name: "set", arg: 2, scope: !11000, file: !3, line: 830, type: !1598)
!11006 = !DILocalVariable(name: "bi", scope: !11000, file: !3, line: 832, type: !2961)
!11007 = !DILocalVariable(name: "vars", scope: !11000, file: !3, line: 833, type: !1598)
!11008 = !DILocalVariable(name: "j", scope: !11000, file: !3, line: 834, type: !6)
!11009 = !DILocalVariable(name: "v", scope: !11010, file: !3, line: 840, type: !711)
!11010 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 839, column: 5)
!11011 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 838, column: 3)
!11012 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 838, column: 3)
!11013 = !DILocalVariable(name: "v", scope: !11014, file: !3, line: 856, type: !711)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !3, line: 855, column: 2)
!11015 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 854, column: 7)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 854, column: 7)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 853, column: 5)
!11018 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 852, column: 7)
!11019 = !DILocation(line: 0, scope: !11000)
!11020 = !DILocation(line: 832, column: 3, scope: !11000)
!11021 = !DILocation(line: 834, column: 3, scope: !11000)
!11022 = !DILocation(line: 838, column: 3, scope: !11012)
!11023 = !DILocation(line: 833, column: 10, scope: !11000)
!11024 = !DILocation(line: 838, column: 3, scope: !11011)
!11025 = !DILocation(line: 840, column: 34, scope: !11010)
!11026 = !DILocation(line: 840, column: 21, scope: !11010)
!11027 = !DILocation(line: 0, scope: !11010)
!11028 = !DILocation(line: 841, column: 14, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 841, column: 11)
!11030 = !DILocation(line: 841, column: 11, scope: !11029)
!11031 = !DILocation(line: 842, column: 4, scope: !11029)
!11032 = !DILocation(line: 842, column: 10, scope: !11029)
!11033 = !DILocation(line: 842, column: 7, scope: !11029)
!11034 = !DILocation(line: 841, column: 11, scope: !11010)
!11035 = !DILocation(line: 844, column: 34, scope: !11010)
!11036 = !DILocation(line: 844, column: 11, scope: !11010)
!11037 = !DILocation(line: 845, column: 16, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 845, column: 11)
!11039 = !DILocation(line: 845, column: 11, scope: !11010)
!11040 = !DILocation(line: 846, column: 9, scope: !11038)
!11041 = !DILocation(line: 846, column: 2, scope: !11038)
!11042 = !DILocation(line: 847, column: 32, scope: !11010)
!11043 = !DILocation(line: 847, column: 7, scope: !11010)
!11044 = !DILocation(line: 848, column: 5, scope: !11011)
!11045 = distinct !{!11045, !11022, !11046}
!11046 = !DILocation(line: 848, column: 5, scope: !11012)
!11047 = !DILocation(line: 852, column: 12, scope: !11018)
!11048 = !DILocation(line: 852, column: 7, scope: !11000)
!11049 = !DILocation(line: 854, column: 7, scope: !11016)
!11050 = !DILocation(line: 854, column: 7, scope: !11015)
!11051 = !DILocation(line: 856, column: 31, scope: !11014)
!11052 = !DILocation(line: 856, column: 18, scope: !11014)
!11053 = !DILocation(line: 0, scope: !11014)
!11054 = !DILocation(line: 857, column: 4, scope: !11014)
!11055 = !DILocation(line: 857, column: 13, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !3, line: 857, column: 4)
!11057 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 857, column: 4)
!11058 = !DILocation(line: 857, column: 4, scope: !11057)
!11059 = !DILocation(line: 858, column: 33, scope: !11056)
!11060 = !DILocation(line: 858, column: 6, scope: !11056)
!11061 = !DILocation(line: 857, column: 29, scope: !11056)
!11062 = !DILocation(line: 857, column: 4, scope: !11056)
!11063 = distinct !{!11063, !11058, !11064}
!11064 = !DILocation(line: 858, column: 35, scope: !11057)
!11065 = distinct !{!11065, !11049, !11066}
!11066 = !DILocation(line: 859, column: 2, scope: !11016)
!11067 = !DILocation(line: 860, column: 7, scope: !11017)
!11068 = !DILocation(line: 861, column: 5, scope: !11017)
!11069 = !DILocation(line: 862, column: 1, scope: !11000)
!11070 = distinct !DISubprogram(name: "solution_set_add", scope: !3, file: !3, line: 868, type: !11071, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11073)
!11071 = !DISubroutineType(types: !11072)
!11072 = !{null, !1598, !669}
!11073 = !{!11074, !11075, !11076, !11077, !11078, !11079, !11083}
!11074 = !DILocalVariable(name: "set", arg: 1, scope: !11070, file: !3, line: 868, type: !1598)
!11075 = !DILocalVariable(name: "offset", arg: 2, scope: !11070, file: !3, line: 868, type: !669)
!11076 = !DILocalVariable(name: "result", scope: !11070, file: !3, line: 870, type: !1598)
!11077 = !DILocalVariable(name: "i", scope: !11070, file: !3, line: 871, type: !6)
!11078 = !DILocalVariable(name: "bi", scope: !11070, file: !3, line: 872, type: !2961)
!11079 = !DILocalVariable(name: "vi", scope: !11080, file: !3, line: 884, type: !711)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !3, line: 883, column: 5)
!11081 = distinct !DILexicalBlock(scope: !11082, file: !3, line: 882, column: 3)
!11082 = distinct !DILexicalBlock(scope: !11070, file: !3, line: 882, column: 3)
!11083 = !DILocalVariable(name: "fieldoffset", scope: !11084, file: !3, line: 894, type: !684)
!11084 = distinct !DILexicalBlock(scope: !11085, file: !3, line: 893, column: 2)
!11085 = distinct !DILexicalBlock(scope: !11080, file: !3, line: 888, column: 11)
!11086 = !DILocation(line: 0, scope: !11070)
!11087 = !DILocation(line: 870, column: 19, scope: !11070)
!11088 = !DILocation(line: 871, column: 3, scope: !11070)
!11089 = !DILocation(line: 872, column: 3, scope: !11070)
!11090 = !DILocation(line: 876, column: 14, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11070, file: !3, line: 876, column: 7)
!11092 = !DILocation(line: 876, column: 7, scope: !11070)
!11093 = !DILocation(line: 878, column: 7, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11091, file: !3, line: 877, column: 5)
!11095 = !DILocation(line: 879, column: 7, scope: !11094)
!11096 = !DILocation(line: 882, column: 3, scope: !11082)
!11097 = !DILocation(line: 0, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 898, column: 8)
!11099 = !DILocation(line: 0, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 902, column: 8)
!11101 = !DILocation(line: 882, column: 3, scope: !11081)
!11102 = !DILocation(line: 884, column: 35, scope: !11080)
!11103 = !DILocation(line: 884, column: 22, scope: !11080)
!11104 = !DILocation(line: 0, scope: !11080)
!11105 = !DILocation(line: 888, column: 15, scope: !11085)
!11106 = !DILocation(line: 888, column: 11, scope: !11085)
!11107 = !DILocation(line: 889, column: 4, scope: !11085)
!11108 = !DILocation(line: 889, column: 11, scope: !11085)
!11109 = !DILocation(line: 889, column: 7, scope: !11085)
!11110 = !DILocation(line: 890, column: 4, scope: !11085)
!11111 = !DILocation(line: 890, column: 11, scope: !11085)
!11112 = !DILocation(line: 890, column: 7, scope: !11085)
!11113 = !DILocation(line: 888, column: 11, scope: !11080)
!11114 = !DILocation(line: 891, column: 26, scope: !11085)
!11115 = !DILocation(line: 891, column: 2, scope: !11085)
!11116 = !DILocation(line: 894, column: 45, scope: !11084)
!11117 = !DILocation(line: 894, column: 52, scope: !11084)
!11118 = !DILocation(line: 0, scope: !11084)
!11119 = !DILocation(line: 899, column: 23, scope: !11098)
!11120 = !DILocation(line: 898, column: 8, scope: !11084)
!11121 = !DILocation(line: 902, column: 8, scope: !11084)
!11122 = !DILocation(line: 903, column: 11, scope: !11100)
!11123 = !DILocation(line: 903, column: 6, scope: !11100)
!11124 = !DILocation(line: 905, column: 32, scope: !11084)
!11125 = !DILocation(line: 905, column: 4, scope: !11084)
!11126 = !DILocation(line: 909, column: 12, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 909, column: 8)
!11128 = !DILocation(line: 909, column: 19, scope: !11127)
!11129 = !DILocation(line: 910, column: 8, scope: !11127)
!11130 = !DILocation(line: 910, column: 15, scope: !11127)
!11131 = !DILocation(line: 910, column: 20, scope: !11127)
!11132 = !DILocation(line: 909, column: 8, scope: !11084)
!11133 = !DILocation(line: 911, column: 40, scope: !11127)
!11134 = !DILocation(line: 911, column: 6, scope: !11127)
!11135 = distinct !{!11135, !11096, !11136}
!11136 = !DILocation(line: 913, column: 5, scope: !11082)
!11137 = !DILocation(line: 915, column: 3, scope: !11070)
!11138 = !DILocation(line: 916, column: 3, scope: !11070)
!11139 = !DILocation(line: 917, column: 1, scope: !11070)
!11140 = distinct !DISubprogram(name: "set_uids_in_ptset", scope: !3, file: !3, line: 4762, type: !11141, scopeLine: 4763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11143)
!11141 = !DISubroutineType(types: !11142)
!11142 = !{null, !1598, !1598, !3018}
!11143 = !{!11144, !11145, !11146, !11147, !11148, !11149}
!11144 = !DILocalVariable(name: "into", arg: 1, scope: !11140, file: !3, line: 4762, type: !1598)
!11145 = !DILocalVariable(name: "from", arg: 2, scope: !11140, file: !3, line: 4762, type: !1598)
!11146 = !DILocalVariable(name: "pt", arg: 3, scope: !11140, file: !3, line: 4762, type: !3018)
!11147 = !DILocalVariable(name: "i", scope: !11140, file: !3, line: 4764, type: !6)
!11148 = !DILocalVariable(name: "bi", scope: !11140, file: !3, line: 4765, type: !2961)
!11149 = !DILocalVariable(name: "vi", scope: !11150, file: !3, line: 4769, type: !711)
!11150 = distinct !DILexicalBlock(scope: !11151, file: !3, line: 4768, column: 5)
!11151 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 4767, column: 3)
!11152 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 4767, column: 3)
!11153 = !DILocation(line: 0, scope: !11140)
!11154 = !DILocation(line: 4764, column: 3, scope: !11140)
!11155 = !DILocation(line: 4765, column: 3, scope: !11140)
!11156 = !DILocation(line: 4767, column: 3, scope: !11152)
!11157 = !DILocation(line: 0, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 4783, column: 8)
!11159 = distinct !DILexicalBlock(scope: !11160, file: !3, line: 4779, column: 2)
!11160 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 4776, column: 11)
!11161 = !DILocation(line: 4767, column: 3, scope: !11151)
!11162 = !DILocation(line: 4769, column: 35, scope: !11150)
!11163 = !DILocation(line: 4769, column: 22, scope: !11150)
!11164 = !DILocation(line: 0, scope: !11150)
!11165 = !DILocation(line: 4773, column: 15, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 4773, column: 11)
!11167 = !DILocation(line: 4773, column: 11, scope: !11166)
!11168 = !DILocation(line: 4773, column: 33, scope: !11166)
!11169 = !DILocation(line: 4773, column: 41, scope: !11166)
!11170 = !DILocation(line: 4773, column: 37, scope: !11166)
!11171 = !DILocation(line: 4773, column: 11, scope: !11150)
!11172 = !DILocation(line: 4776, column: 11, scope: !11160)
!11173 = !DILocation(line: 4776, column: 32, scope: !11160)
!11174 = !DILocation(line: 4777, column: 4, scope: !11160)
!11175 = !DILocation(line: 4777, column: 28, scope: !11160)
!11176 = !DILocation(line: 4778, column: 4, scope: !11160)
!11177 = !DILocation(line: 4778, column: 28, scope: !11160)
!11178 = !DILocation(line: 4776, column: 11, scope: !11150)
!11179 = !DILocation(line: 4782, column: 26, scope: !11159)
!11180 = !DILocation(line: 4782, column: 4, scope: !11159)
!11181 = !DILocation(line: 4783, column: 12, scope: !11158)
!11182 = !DILocation(line: 4783, column: 8, scope: !11158)
!11183 = !DILocation(line: 4783, column: 8, scope: !11159)
!11184 = !DILocation(line: 4784, column: 31, scope: !11158)
!11185 = !DILocation(line: 4784, column: 6, scope: !11158)
!11186 = distinct !{!11186, !11156, !11187}
!11187 = !DILocation(line: 4786, column: 5, scope: !11152)
!11188 = !DILocation(line: 4787, column: 1, scope: !11140)
!11189 = distinct !DISubprogram(name: "shared_bitmap_lookup", scope: !3, file: !3, line: 4724, type: !11190, scopeLine: 4725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11192)
!11190 = !DISubroutineType(types: !11191)
!11191 = !{!1598, !1598}
!11192 = !{!11193, !11194, !11195}
!11193 = !DILocalVariable(name: "pt_vars", arg: 1, scope: !11189, file: !3, line: 4724, type: !1598)
!11194 = !DILocalVariable(name: "slot", scope: !11189, file: !3, line: 4726, type: !1536)
!11195 = !DILocalVariable(name: "sbi", scope: !11189, file: !3, line: 4727, type: !2056)
!11196 = !DILocation(line: 0, scope: !11189)
!11197 = !DILocation(line: 4727, column: 3, scope: !11189)
!11198 = !DILocation(line: 4729, column: 7, scope: !11189)
!11199 = !DILocation(line: 4729, column: 15, scope: !11189)
!11200 = !DILocation(line: 4730, column: 18, scope: !11189)
!11201 = !DILocation(line: 4730, column: 7, scope: !11189)
!11202 = !DILocation(line: 4730, column: 16, scope: !11189)
!11203 = !DILocation(line: 4732, column: 36, scope: !11189)
!11204 = !DILocation(line: 4732, column: 10, scope: !11189)
!11205 = !DILocation(line: 4734, column: 8, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11189, file: !3, line: 4734, column: 7)
!11207 = !DILocation(line: 4734, column: 7, scope: !11189)
!11208 = !DILocation(line: 4737, column: 36, scope: !11206)
!11209 = !DILocation(line: 4737, column: 44, scope: !11206)
!11210 = !DILocation(line: 4737, column: 5, scope: !11206)
!11211 = !DILocation(line: 0, scope: !11206)
!11212 = !DILocation(line: 4738, column: 1, scope: !11189)
!11213 = distinct !DISubprogram(name: "shared_bitmap_add", scope: !3, file: !3, line: 4744, type: !11214, scopeLine: 4745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11216)
!11214 = !DISubroutineType(types: !11215)
!11215 = !{null, !1598}
!11216 = !{!11217, !11218, !11219}
!11217 = !DILocalVariable(name: "pt_vars", arg: 1, scope: !11213, file: !3, line: 4744, type: !1598)
!11218 = !DILocalVariable(name: "slot", scope: !11213, file: !3, line: 4746, type: !1536)
!11219 = !DILocalVariable(name: "sbi", scope: !11213, file: !3, line: 4747, type: !2186)
!11220 = !DILocation(line: 0, scope: !11213)
!11221 = !DILocation(line: 4747, column: 30, scope: !11213)
!11222 = !DILocation(line: 4749, column: 8, scope: !11213)
!11223 = !DILocation(line: 4749, column: 16, scope: !11213)
!11224 = !DILocation(line: 4750, column: 19, scope: !11213)
!11225 = !DILocation(line: 4750, column: 8, scope: !11213)
!11226 = !DILocation(line: 4750, column: 17, scope: !11213)
!11227 = !DILocation(line: 4752, column: 36, scope: !11213)
!11228 = !DILocation(line: 4752, column: 10, scope: !11213)
!11229 = !DILocation(line: 4754, column: 3, scope: !11213)
!11230 = !DILocation(line: 4755, column: 9, scope: !11213)
!11231 = !DILocation(line: 4756, column: 1, scope: !11213)
!11232 = distinct !DISubprogram(name: "VEC_varinfo_t_heap_free", scope: !3, file: !3, line: 275, type: !11233, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11235)
!11233 = !DISubroutineType(types: !11234)
!11234 = !{null, !5462}
!11235 = !{!11236}
!11236 = !DILocalVariable(name: "vec_", arg: 1, scope: !11232, file: !3, line: 275, type: !5462)
!11237 = !DILocation(line: 0, scope: !11232)
!11238 = !DILocation(line: 275, column: 1, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 275, column: 1)
!11240 = !DILocation(line: 275, column: 1, scope: !11232)
!11241 = distinct !DISubprogram(name: "create_function_info_for", scope: !3, file: !3, line: 4323, type: !5737, scopeLine: 4324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11242)
!11242 = !{!11243, !11244, !11245, !11246, !11247, !11248, !11249, !11253, !11254, !11255, !11256, !11259, !11260, !11261}
!11243 = !DILocalVariable(name: "decl", arg: 1, scope: !11241, file: !3, line: 4323, type: !730)
!11244 = !DILocalVariable(name: "name", arg: 2, scope: !11241, file: !3, line: 4323, type: !667)
!11245 = !DILocalVariable(name: "vi", scope: !11241, file: !3, line: 4325, type: !711)
!11246 = !DILocalVariable(name: "arg", scope: !11241, file: !3, line: 4326, type: !730)
!11247 = !DILocalVariable(name: "i", scope: !11241, file: !3, line: 4327, type: !6)
!11248 = !DILocalVariable(name: "is_varargs", scope: !11241, file: !3, line: 4328, type: !661)
!11249 = !DILocalVariable(name: "argvi", scope: !11250, file: !3, line: 4355, type: !711)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 4354, column: 5)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 4353, column: 3)
!11252 = distinct !DILexicalBlock(scope: !11241, file: !3, line: 4353, column: 3)
!11253 = !DILocalVariable(name: "newname", scope: !11250, file: !3, line: 4356, type: !667)
!11254 = !DILocalVariable(name: "tempname", scope: !11250, file: !3, line: 4357, type: !664)
!11255 = !DILocalVariable(name: "argdecl", scope: !11250, file: !3, line: 4358, type: !730)
!11256 = !DILocalVariable(name: "resultvi", scope: !11257, file: !3, line: 4385, type: !711)
!11257 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 4384, column: 5)
!11258 = distinct !DILexicalBlock(scope: !11241, file: !3, line: 4382, column: 7)
!11259 = !DILocalVariable(name: "newname", scope: !11257, file: !3, line: 4386, type: !667)
!11260 = !DILocalVariable(name: "tempname", scope: !11257, file: !3, line: 4387, type: !664)
!11261 = !DILocalVariable(name: "resultdecl", scope: !11257, file: !3, line: 4388, type: !730)
!11262 = !DILocation(line: 0, scope: !11241)
!11263 = !DILocation(line: 4328, column: 3, scope: !11241)
!11264 = !DILocation(line: 4328, column: 8, scope: !11241)
!11265 = !DILocation(line: 4332, column: 8, scope: !11241)
!11266 = !DILocation(line: 4333, column: 7, scope: !11241)
!11267 = !DILocation(line: 4333, column: 14, scope: !11241)
!11268 = !DILocation(line: 4334, column: 7, scope: !11241)
!11269 = !DILocation(line: 4334, column: 12, scope: !11241)
!11270 = !DILocation(line: 4335, column: 18, scope: !11241)
!11271 = !DILocation(line: 4335, column: 58, scope: !11241)
!11272 = !DILocation(line: 4335, column: 7, scope: !11241)
!11273 = !DILocation(line: 4335, column: 16, scope: !11241)
!11274 = !DILocation(line: 4336, column: 27, scope: !11241)
!11275 = !DILocation(line: 4336, column: 3, scope: !11241)
!11276 = !DILocation(line: 4338, column: 19, scope: !11241)
!11277 = !DILocation(line: 4342, column: 7, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11241, file: !3, line: 4342, column: 7)
!11279 = !DILocation(line: 4342, column: 7, scope: !11241)
!11280 = !DILocation(line: 4344, column: 20, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 4343, column: 5)
!11282 = !DILocation(line: 4345, column: 16, scope: !11281)
!11283 = !DILocation(line: 4346, column: 11, scope: !11281)
!11284 = !DILocation(line: 4346, column: 31, scope: !11281)
!11285 = !DILocation(line: 4347, column: 7, scope: !11281)
!11286 = !DILocation(line: 4350, column: 9, scope: !11241)
!11287 = !DILocation(line: 0, scope: !11250)
!11288 = !DILocation(line: 4353, column: 8, scope: !11252)
!11289 = !DILocation(line: 0, scope: !11252)
!11290 = !DILocation(line: 4353, column: 15, scope: !11251)
!11291 = !DILocation(line: 4353, column: 23, scope: !11251)
!11292 = !DILocation(line: 4353, column: 17, scope: !11251)
!11293 = !DILocation(line: 4353, column: 3, scope: !11252)
!11294 = !DILocation(line: 4357, column: 7, scope: !11250)
!11295 = !DILocation(line: 4360, column: 11, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11250, file: !3, line: 4360, column: 11)
!11297 = !DILocation(line: 4360, column: 11, scope: !11250)
!11298 = !DILocation(line: 4363, column: 47, scope: !11250)
!11299 = !DILocation(line: 4363, column: 7, scope: !11250)
!11300 = !DILocation(line: 4364, column: 17, scope: !11250)
!11301 = !DILocation(line: 4365, column: 13, scope: !11250)
!11302 = !DILocation(line: 4365, column: 7, scope: !11250)
!11303 = !DILocation(line: 4367, column: 15, scope: !11250)
!11304 = !DILocation(line: 4368, column: 14, scope: !11250)
!11305 = !DILocation(line: 4368, column: 21, scope: !11250)
!11306 = !DILocation(line: 4369, column: 14, scope: !11250)
!11307 = !DILocation(line: 4369, column: 19, scope: !11250)
!11308 = !DILocation(line: 4370, column: 14, scope: !11250)
!11309 = !DILocation(line: 4370, column: 26, scope: !11250)
!11310 = !DILocation(line: 4371, column: 29, scope: !11250)
!11311 = !DILocation(line: 4371, column: 14, scope: !11250)
!11312 = !DILocation(line: 4371, column: 23, scope: !11250)
!11313 = !DILocation(line: 4372, column: 7, scope: !11250)
!11314 = !DILocation(line: 4373, column: 24, scope: !11250)
!11315 = !DILocation(line: 4374, column: 11, scope: !11250)
!11316 = !DILocation(line: 4376, column: 4, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11318, file: !3, line: 4375, column: 2)
!11318 = distinct !DILexicalBlock(scope: !11250, file: !3, line: 4374, column: 11)
!11319 = !DILocation(line: 4377, column: 10, scope: !11317)
!11320 = !DILocation(line: 4378, column: 2, scope: !11317)
!11321 = !DILocation(line: 4379, column: 5, scope: !11251)
!11322 = !DILocation(line: 4353, column: 34, scope: !11251)
!11323 = !DILocation(line: 4353, column: 3, scope: !11251)
!11324 = distinct !{!11324, !11293, !11325}
!11325 = !DILocation(line: 4379, column: 5, scope: !11252)
!11326 = !DILocation(line: 4382, column: 7, scope: !11258)
!11327 = !DILocation(line: 4382, column: 26, scope: !11258)
!11328 = !DILocation(line: 4383, column: 7, scope: !11258)
!11329 = !DILocation(line: 4383, column: 11, scope: !11258)
!11330 = !DILocation(line: 4382, column: 7, scope: !11241)
!11331 = !DILocation(line: 4387, column: 7, scope: !11257)
!11332 = !DILocation(line: 0, scope: !11257)
!11333 = !DILocation(line: 4390, column: 20, scope: !11257)
!11334 = !DILocation(line: 4392, column: 11, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 4392, column: 11)
!11336 = !DILocation(line: 4392, column: 11, scope: !11257)
!11337 = !DILocation(line: 4393, column: 2, scope: !11335)
!11338 = !DILocation(line: 4395, column: 7, scope: !11257)
!11339 = !DILocation(line: 4396, column: 17, scope: !11257)
!11340 = !DILocation(line: 4397, column: 13, scope: !11257)
!11341 = !DILocation(line: 4397, column: 7, scope: !11257)
!11342 = !DILocation(line: 4399, column: 18, scope: !11257)
!11343 = !DILocation(line: 4400, column: 17, scope: !11257)
!11344 = !DILocation(line: 4400, column: 24, scope: !11257)
!11345 = !DILocation(line: 4401, column: 17, scope: !11257)
!11346 = !DILocation(line: 4401, column: 22, scope: !11257)
!11347 = !DILocation(line: 4402, column: 32, scope: !11257)
!11348 = !DILocation(line: 4402, column: 17, scope: !11257)
!11349 = !DILocation(line: 4402, column: 26, scope: !11257)
!11350 = !DILocation(line: 4403, column: 17, scope: !11257)
!11351 = !DILocation(line: 4403, column: 29, scope: !11257)
!11352 = !DILocation(line: 4404, column: 7, scope: !11257)
!11353 = !DILocation(line: 4405, column: 24, scope: !11257)
!11354 = !DILocation(line: 4406, column: 11, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 4406, column: 11)
!11356 = !DILocation(line: 4406, column: 11, scope: !11257)
!11357 = !DILocation(line: 4407, column: 2, scope: !11355)
!11358 = !DILocation(line: 4408, column: 5, scope: !11258)
!11359 = !DILocation(line: 4408, column: 5, scope: !11257)
!11360 = !DILocation(line: 4410, column: 3, scope: !11241)
!11361 = !DILocation(line: 4411, column: 1, scope: !11241)
!11362 = distinct !DISubprogram(name: "count_num_arguments", scope: !3, file: !3, line: 4299, type: !11363, scopeLine: 4300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11365)
!11363 = !DISubroutineType(types: !11364)
!11364 = !{!6, !730, !660}
!11365 = !{!11366, !11367, !11368, !11369}
!11366 = !DILocalVariable(name: "decl", arg: 1, scope: !11362, file: !3, line: 4299, type: !730)
!11367 = !DILocalVariable(name: "is_varargs", arg: 2, scope: !11362, file: !3, line: 4299, type: !660)
!11368 = !DILocalVariable(name: "num", scope: !11362, file: !3, line: 4301, type: !6)
!11369 = !DILocalVariable(name: "t", scope: !11362, file: !3, line: 4302, type: !730)
!11370 = !DILocation(line: 0, scope: !11362)
!11371 = !DILocation(line: 4306, column: 12, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11362, file: !3, line: 4306, column: 3)
!11373 = !DILocation(line: 4306, column: 8, scope: !11372)
!11374 = !DILocation(line: 0, scope: !11372)
!11375 = !DILocation(line: 4306, column: 3, scope: !11372)
!11376 = !DILocation(line: 4307, column: 5, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 4306, column: 3)
!11378 = !DILocation(line: 4306, column: 42, scope: !11377)
!11379 = !DILocation(line: 4306, column: 3, scope: !11377)
!11380 = distinct !{!11380, !11375, !11381}
!11381 = !DILocation(line: 4307, column: 7, scope: !11372)
!11382 = !DILocation(line: 4310, column: 12, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11362, file: !3, line: 4310, column: 3)
!11384 = !DILocation(line: 0, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11386, file: !3, line: 4311, column: 9)
!11386 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 4310, column: 3)
!11387 = !DILocation(line: 4310, column: 8, scope: !11383)
!11388 = !DILocation(line: 0, scope: !11383)
!11389 = !DILocation(line: 4310, column: 3, scope: !11383)
!11390 = !DILocation(line: 4311, column: 9, scope: !11385)
!11391 = !DILocation(line: 4311, column: 24, scope: !11385)
!11392 = !DILocation(line: 4311, column: 9, scope: !11386)
!11393 = !DILocation(line: 4310, column: 54, scope: !11386)
!11394 = !DILocation(line: 4310, column: 3, scope: !11386)
!11395 = distinct !{!11395, !11389, !11396}
!11396 = !DILocation(line: 4312, column: 7, scope: !11383)
!11397 = !DILocation(line: 4313, column: 7, scope: !11362)
!11398 = !DILocation(line: 4314, column: 17, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11362, file: !3, line: 4313, column: 7)
!11400 = !DILocation(line: 4314, column: 5, scope: !11399)
!11401 = !DILocation(line: 4316, column: 3, scope: !11362)
!11402 = distinct !DISubprogram(name: "insert_into_field_list_sorted", scope: !3, file: !3, line: 4094, type: !6281, scopeLine: 4095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11403)
!11403 = !{!11404, !11405, !11406, !11407}
!11404 = !DILocalVariable(name: "base", arg: 1, scope: !11402, file: !3, line: 4094, type: !711)
!11405 = !DILocalVariable(name: "field", arg: 2, scope: !11402, file: !3, line: 4094, type: !711)
!11406 = !DILocalVariable(name: "prev", scope: !11402, file: !3, line: 4096, type: !711)
!11407 = !DILocalVariable(name: "curr", scope: !11402, file: !3, line: 4097, type: !711)
!11408 = !DILocation(line: 0, scope: !11402)
!11409 = !DILocation(line: 4097, column: 26, scope: !11402)
!11410 = !DILocation(line: 4099, column: 12, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 4099, column: 7)
!11412 = !DILocation(line: 4099, column: 7, scope: !11402)
!11413 = !DILocation(line: 4108, column: 15, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 4108, column: 8)
!11415 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 4107, column: 2)
!11416 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 4105, column: 5)
!11417 = !DILocation(line: 4106, column: 7, scope: !11416)
!11418 = !DILocation(line: 4101, column: 18, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 4100, column: 5)
!11420 = !DILocation(line: 4102, column: 14, scope: !11419)
!11421 = !DILocation(line: 4102, column: 19, scope: !11419)
!11422 = !DILocation(line: 4103, column: 5, scope: !11419)
!11423 = !DILocation(line: 4108, column: 31, scope: !11414)
!11424 = !DILocation(line: 4108, column: 22, scope: !11414)
!11425 = !DILocation(line: 4108, column: 8, scope: !11415)
!11426 = !DILocation(line: 4111, column: 17, scope: !11415)
!11427 = distinct !{!11427, !11417, !11428}
!11428 = !DILocation(line: 4112, column: 2, scope: !11416)
!11429 = !DILocation(line: 4113, column: 27, scope: !11416)
!11430 = !DILocation(line: 4113, column: 14, scope: !11416)
!11431 = !DILocation(line: 4113, column: 19, scope: !11416)
!11432 = !DILocation(line: 4114, column: 18, scope: !11416)
!11433 = !DILocation(line: 4116, column: 1, scope: !11402)
